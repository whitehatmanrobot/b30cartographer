arReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext **ppClientContext);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministratorsName )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReadersName )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministratorName )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministratorName )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReaderName )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReaderName )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DelegatedPolicyUsersName )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers);
        
        HRESULT ( STDMETHODCALLTYPE *AddDelegatedPolicyUserName )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteDelegatedPolicyUserName )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        END_INTERFACE
    } IAzApplicationVtbl;

    interface IAzApplication
    {
        CONST_VTBL struct IAzApplicationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzApplication_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzApplication_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzApplication_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzApplication_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzApplication_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzApplication_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzApplication_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzApplication_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAzApplication_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IAzApplication_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzApplication_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzApplication_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzApplication_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzApplication_get_AuthzInterfaceClsid(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_AuthzInterfaceClsid(This,pbstrProp) ) 

#define IAzApplication_put_AuthzInterfaceClsid(This,bstrProp)	\
    ( (This)->lpVtbl -> put_AuthzInterfaceClsid(This,bstrProp) ) 

#define IAzApplication_get_Version(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_Version(This,pbstrProp) ) 

#define IAzApplication_put_Version(This,bstrProp)	\
    ( (This)->lpVtbl -> put_Version(This,bstrProp) ) 

#define IAzApplication_get_GenerateAudits(This,pbProp)	\
    ( (This)->lpVtbl -> get_GenerateAudits(This,pbProp) ) 

#define IAzApplication_put_GenerateAudits(This,bProp)	\
    ( (This)->lpVtbl -> put_GenerateAudits(This,bProp) ) 

#define IAzApplication_get_ApplyStoreSacl(This,pbProp)	\
    ( (This)->lpVtbl -> get_ApplyStoreSacl(This,pbProp) ) 

#define IAzApplication_put_ApplyStoreSacl(This,bProp)	\
    ( (This)->lpVtbl -> put_ApplyStoreSacl(This,bProp) ) 

#define IAzApplication_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzApplication_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzApplication_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzApplication_get_PolicyAdministrators(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministrators(This,pvarAdmins) ) 

#define IAzApplication_get_PolicyReaders(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReaders(This,pvarReaders) ) 

#define IAzApplication_AddPolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzApplication_DeletePolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzApplication_AddPolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReader(This,bstrReader,varReserved) ) 

#define IAzApplication_DeletePolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReader(This,bstrReader,varReserved) ) 

#define IAzApplication_get_Scopes(This,ppScopeCollection)	\
    ( (This)->lpVtbl -> get_Scopes(This,ppScopeCollection) ) 

#define IAzApplication_OpenScope(This,bstrScopeName,varReserved,ppScope)	\
    ( (This)->lpVtbl -> OpenScope(This,bstrScopeName,varReserved,ppScope) ) 

#define IAzApplication_CreateScope(This,bstrScopeName,varReserved,ppScope)	\
    ( (This)->lpVtbl -> CreateScope(This,bstrScopeName,varReserved,ppScope) ) 

#define IAzApplication_DeleteScope(This,bstrScopeName,varReserved)	\
    ( (This)->lpVtbl -> DeleteScope(This,bstrScopeName,varReserved) ) 

#define IAzApplication_get_Operations(This,ppOperationCollection)	\
    ( (This)->lpVtbl -> get_Operations(This,ppOperationCollection) ) 

#define IAzApplication_OpenOperation(This,bstrOperationName,varReserved,ppOperation)	\
    ( (This)->lpVtbl -> OpenOperation(This,bstrOperationName,varReserved,ppOperation) ) 

#define IAzApplication_CreateOperation(This,bstrOperationName,varReserved,ppOperation)	\
    ( (This)->lpVtbl -> CreateOperation(This,bstrOperationName,varReserved,ppOperation) ) 

#define IAzApplication_DeleteOperation(This,bstrOperationName,varReserved)	\
    ( (This)->lpVtbl -> DeleteOperation(This,bstrOperationName,varReserved) ) 

#define IAzApplication_get_Tasks(This,ppTaskCollection)	\
    ( (This)->lpVtbl -> get_Tasks(This,ppTaskCollection) ) 

#define IAzApplication_OpenTask(This,bstrTaskName,varReserved,ppTask)	\
    ( (This)->lpVtbl -> OpenTask(This,bstrTaskName,varReserved,ppTask) ) 

#define IAzApplication_CreateTask(This,bstrTaskName,varReserved,ppTask)	\
    ( (This)->lpVtbl -> CreateTask(This,bstrTaskName,varReserved,ppTask) ) 

#define IAzApplication_DeleteTask(This,bstrTaskName,varReserved)	\
    ( (This)->lpVtbl -> DeleteTask(This,bstrTaskName,varReserved) ) 

#define IAzApplication_get_ApplicationGroups(This,ppGroupCollection)	\
    ( (This)->lpVtbl -> get_ApplicationGroups(This,ppGroupCollection) ) 

#define IAzApplication_OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzApplication_CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzApplication_DeleteApplicationGroup(This,bstrGroupName,varReserved)	\
    ( (This)->lpVtbl -> DeleteApplicationGroup(This,bstrGroupName,varReserved) ) 

#define IAzApplication_get_Roles(This,ppRoleCollection)	\
    ( (This)->lpVtbl -> get_Roles(This,ppRoleCollection) ) 

#define IAzApplication_OpenRole(This,bstrRoleName,varReserved,ppRole)	\
    ( (This)->lpVtbl -> OpenRole(This,bstrRoleName,varReserved,ppRole) ) 

#define IAzApplication_CreateRole(This,bstrRoleName,varReserved,ppRole)	\
    ( (This)->lpVtbl -> CreateRole(This,bstrRoleName,varReserved,ppRole) ) 

#define IAzApplication_DeleteRole(This,bstrRoleName,varReserved)	\
    ( (This)->lpVtbl -> DeleteRole(This,bstrRoleName,varReserved) ) 

#define IAzApplication_InitializeClientContextFromToken(This,ullTokenHandle,varReserved,ppClientContext)	\
    ( (This)->lpVtbl -> InitializeClientContextFromToken(This,ullTokenHandle,varReserved,ppClientContext) ) 

#define IAzApplication_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzApplication_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzApplication_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 

#define IAzApplication_InitializeClientContextFromName(This,ClientName,DomainName,varReserved,ppClientContext)	\
    ( (This)->lpVtbl -> InitializeClientContextFromName(This,ClientName,DomainName,varReserved,ppClientContext) ) 

#define IAzApplication_get_DelegatedPolicyUsers(This,pvarDelegatedPolicyUsers)	\
    ( (This)->lpVtbl -> get_DelegatedPolicyUsers(This,pvarDelegatedPolicyUsers) ) 

#define IAzApplication_AddDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> AddDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzApplication_DeleteDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> DeleteDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzApplication_InitializeClientContextFromStringSid(This,SidString,lOptions,varReserved,ppClientContext)	\
    ( (This)->lpVtbl -> InitializeClientContextFromStringSid(This,SidString,lOptions,varReserved,ppClientContext) ) 

#define IAzApplication_get_PolicyAdministratorsName(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministratorsName(This,pvarAdmins) ) 

#define IAzApplication_get_PolicyReadersName(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReadersName(This,pvarReaders) ) 

#define IAzApplication_AddPolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzApplication_DeletePolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzApplication_AddPolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReaderName(This,bstrReader,varReserved) ) 

#define IAzApplication_DeletePolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReaderName(This,bstrReader,varReserved) ) 

#define IAzApplication_get_DelegatedPolicyUsersName(This,pvarDelegatedPolicyUsers)	\
    ( (This)->lpVtbl -> get_DelegatedPolicyUsersName(This,pvarDelegatedPolicyUsers) ) 

#define IAzApplication_AddDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> AddDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzApplication_DeleteDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> DeleteDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzApplication_INTERFACE_DEFINED__ */


#ifndef __IAzApplication2_INTERFACE_DEFINED__
#define __IAzApplication2_INTERFACE_DEFINED__

/* interface IAzApplication2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzApplication2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("086a68af-a249-437c-b18d-d4d86d6a9660")
    IAzApplication2 : public IAzApplication
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE InitializeClientContextFromToken2( 
            /* [in] */ ULONG ulTokenHandleLowPart,
            /* [in] */ ULONG ulTokenHandleHighPart,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext2 **ppClientContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InitializeClientContext2( 
            /* [in] */ __RPC__in BSTR IdentifyingString,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext2 **ppClientContext) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzApplication2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzApplication2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzApplication2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzApplication2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzApplication2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AuthzInterfaceClsid )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AuthzInterfaceClsid )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Version )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GenerateAudits )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__out BOOL *pbProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GenerateAudits )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ BOOL bProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplyStoreSacl )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__out BOOL *pbProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplyStoreSacl )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ BOOL bProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministrators )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReaders )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministrator )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministrator )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReader )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReader )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Scopes )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzScopes **ppScopeCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenScope )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzScope **ppScope);
        
        HRESULT ( STDMETHODCALLTYPE *CreateScope )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzScope **ppScope);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteScope )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Operations )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzOperations **ppOperationCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenOperation )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrOperationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzOperation **ppOperation);
        
        HRESULT ( STDMETHODCALLTYPE *CreateOperation )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrOperationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzOperation **ppOperation);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteOperation )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrOperationName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Tasks )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzTasks **ppTaskCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenTask )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzTask **ppTask);
        
        HRESULT ( STDMETHODCALLTYPE *CreateTask )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzTask **ppTask);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteTask )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationGroups )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroups **ppGroupCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenApplicationGroup )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *CreateApplicationGroup )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteApplicationGroup )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Roles )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoles **ppRoleCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenRole )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzRole **ppRole);
        
        HRESULT ( STDMETHODCALLTYPE *CreateRole )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzRole **ppRole);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteRole )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeClientContextFromToken )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ ULONGLONG ullTokenHandle,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext **ppClientContext);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzApplication2 * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeClientContextFromName )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR ClientName,
            /* [defaultvalue][in] */ __RPC__in BSTR DomainName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext **ppClientContext);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DelegatedPolicyUsers )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers);
        
        HRESULT ( STDMETHODCALLTYPE *AddDelegatedPolicyUser )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteDelegatedPolicyUser )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeClientContextFromStringSid )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR SidString,
            /* [in] */ LONG lOptions,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext **ppClientContext);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministratorsName )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReadersName )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministratorName )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministratorName )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReaderName )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReaderName )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DelegatedPolicyUsersName )( 
            __RPC__in IAzApplication2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers);
        
        HRESULT ( STDMETHODCALLTYPE *AddDelegatedPolicyUserName )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteDelegatedPolicyUserName )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeClientContextFromToken2 )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ ULONG ulTokenHandleLowPart,
            /* [in] */ ULONG ulTokenHandleHighPart,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext2 **ppClientContext);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeClientContext2 )( 
            __RPC__in IAzApplication2 * This,
            /* [in] */ __RPC__in BSTR IdentifyingString,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext2 **ppClientContext);
        
        END_INTERFACE
    } IAzApplication2Vtbl;

    interface IAzApplication2
    {
        CONST_VTBL struct IAzApplication2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzApplication2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzApplication2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzApplication2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzApplication2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzApplication2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzApplication2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzApplication2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzApplication2_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAzApplication2_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IAzApplication2_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzApplication2_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzApplication2_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzApplication2_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzApplication2_get_AuthzInterfaceClsid(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_AuthzInterfaceClsid(This,pbstrProp) ) 

#define IAzApplication2_put_AuthzInterfaceClsid(This,bstrProp)	\
    ( (This)->lpVtbl -> put_AuthzInterfaceClsid(This,bstrProp) ) 

#define IAzApplication2_get_Version(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_Version(This,pbstrProp) ) 

#define IAzApplication2_put_Version(This,bstrProp)	\
    ( (This)->lpVtbl -> put_Version(This,bstrProp) ) 

#define IAzApplication2_get_GenerateAudits(This,pbProp)	\
    ( (This)->lpVtbl -> get_GenerateAudits(This,pbProp) ) 

#define IAzApplication2_put_GenerateAudits(This,bProp)	\
    ( (This)->lpVtbl -> put_GenerateAudits(This,bProp) ) 

#define IAzApplication2_get_ApplyStoreSacl(This,pbProp)	\
    ( (This)->lpVtbl -> get_ApplyStoreSacl(This,pbProp) ) 

#define IAzApplication2_put_ApplyStoreSacl(This,bProp)	\
    ( (This)->lpVtbl -> put_ApplyStoreSacl(This,bProp) ) 

#define IAzApplication2_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzApplication2_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzApplication2_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzApplication2_get_PolicyAdministrators(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministrators(This,pvarAdmins) ) 

#define IAzApplication2_get_PolicyReaders(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReaders(This,pvarReaders) ) 

#define IAzApplication2_AddPolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzApplication2_DeletePolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzApplication2_AddPolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReader(This,bstrReader,varReserved) ) 

#define IAzApplication2_DeletePolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReader(This,bstrReader,varReserved) ) 

#define IAzApplication2_get_Scopes(This,ppScopeCollection)	\
    ( (This)->lpVtbl -> get_Scopes(This,ppScopeCollection) ) 

#define IAzApplication2_OpenScope(This,bstrScopeName,varReserved,ppScope)	\
    ( (This)->lpVtbl -> OpenScope(This,bstrScopeName,varReserved,ppScope) ) 

#define IAzApplication2_CreateScope(This,bstrScopeName,varReserved,ppScope)	\
    ( (This)->lpVtbl -> CreateScope(This,bstrScopeName,varReserved,ppScope) ) 

#define IAzApplication2_DeleteScope(This,bstrScopeName,varReserved)	\
    ( (This)->lpVtbl -> DeleteScope(This,bstrScopeName,varReserved) ) 

#define IAzApplication2_get_Operations(This,ppOperationCollection)	\
    ( (This)->lpVtbl -> get_Operations(This,ppOperationCollection) ) 

#define IAzApplication2_OpenOperation(This,bstrOperationName,varReserved,ppOperation)	\
    ( (This)->lpVtbl -> OpenOperation(This,bstrOperationName,varReserved,ppOperation) ) 

#define IAzApplication2_CreateOperation(This,bstrOperationName,varReserved,ppOperation)	\
    ( (This)->lpVtbl -> CreateOperation(This,bstrOperationName,varReserved,ppOperation) ) 

#define IAzApplication2_DeleteOperation(This,bstrOperationName,varReserved)	\
    ( (This)->lpVtbl -> DeleteOperation(This,bstrOperationName,varReserved) ) 

#define IAzApplication2_get_Tasks(This,ppTaskCollection)	\
    ( (This)->lpVtbl -> get_Tasks(This,ppTaskCollection) ) 

#define IAzApplication2_OpenTask(This,bstrTaskName,varReserved,ppTask)	\
    ( (This)->lpVtbl -> OpenTask(This,bstrTaskName,varReserved,ppTask) ) 

#define IAzApplication2_CreateTask(This,bstrTaskName,varReserved,ppTask)	\
    ( (This)->lpVtbl -> CreateTask(This,bstrTaskName,varReserved,ppTask) ) 

#define IAzApplication2_DeleteTask(This,bstrTaskName,varReserved)	\
    ( (This)->lpVtbl -> DeleteTask(This,bstrTaskName,varReserved) ) 

#define IAzApplication2_get_ApplicationGroups(This,ppGroupCollection)	\
    ( (This)->lpVtbl -> get_ApplicationGroups(This,ppGroupCollection) ) 

#define IAzApplication2_OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzApplication2_CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzApplication2_DeleteApplicationGroup(This,bstrGroupName,varReserved)	\
    ( (This)->lpVtbl -> DeleteApplicationGroup(This,bstrGroupName,varReserved) ) 

#define IAzApplication2_get_Roles(This,ppRoleCollection)	\
    ( (This)->lpVtbl -> get_Roles(This,ppRoleCollection) ) 

#define IAzApplication2_OpenRole(This,bstrRoleName,varReserved,ppRole)	\
    ( (This)->lpVtbl -> OpenRole(This,bstrRoleName,varReserved,ppRole) ) 

#define IAzApplication2_CreateRole(This,bstrRoleName,varReserved,ppRole)	\
    ( (This)->lpVtbl -> CreateRole(This,bstrRoleName,varReserved,ppRole) ) 

#define IAzApplication2_DeleteRole(This,bstrRoleName,varReserved)	\
    ( (This)->lpVtbl -> DeleteRole(This,bstrRoleName,varReserved) ) 

#define IAzApplication2_InitializeClientContextFromToken(This,ullTokenHandle,varReserved,ppClientContext)	\
    ( (This)->lpVtbl -> InitializeClientContextFromToken(This,ullTokenHandle,varReserved,ppClientContext) ) 

#define IAzApplication2_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzApplication2_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzApplication2_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 

#define IAzApplication2_InitializeClientContextFromName(This,ClientName,DomainName,varReserved,ppClientContext)	\
    ( (This)->lpVtbl -> InitializeClientContextFromName(This,ClientName,DomainName,varReserved,ppClientContext) ) 

#define IAzApplication2_get_DelegatedPolicyUsers(This,pvarDelegatedPolicyUsers)	\
    ( (This)->lpVtbl -> get_DelegatedPolicyUsers(This,pvarDelegatedPolicyUsers) ) 

#define IAzApplication2_AddDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> AddDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzApplication2_DeleteDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> DeleteDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzApplication2_InitializeClientContextFromStringSid(This,SidString,lOptions,varReserved,ppClientContext)	\
    ( (This)->lpVtbl -> InitializeClientContextFromStringSid(This,SidString,lOptions,varReserved,ppClientContext) ) 

#define IAzApplication2_get_PolicyAdministratorsName(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministratorsName(This,pvarAdmins) ) 

#define IAzApplication2_get_PolicyReadersName(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReadersName(This,pvarReaders) ) 

#define IAzApplication2_AddPolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzApplication2_DeletePolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzApplication2_AddPolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReaderName(This,bstrReader,varReserved) ) 

#define IAzApplication2_DeletePolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReaderName(This,bstrReader,varReserved) ) 

#define IAzApplication2_get_DelegatedPolicyUsersName(This,pvarDelegatedPolicyUsers)	\
    ( (This)->lpVtbl -> get_DelegatedPolicyUsersName(This,pvarDelegatedPolicyUsers) ) 

#define IAzApplication2_AddDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> AddDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzApplication2_DeleteDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> DeleteDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved) ) 


#define IAzApplication2_InitializeClientContextFromToken2(This,ulTokenHandleLowPart,ulTokenHandleHighPart,varReserved,ppClientContext)	\
    ( (This)->lpVtbl -> InitializeClientContextFromToken2(This,ulTokenHandleLowPart,ulTokenHandleHighPart,varReserved,ppClientContext) ) 

#define IAzApplication2_InitializeClientContext2(This,IdentifyingString,varReserved,ppClientContext)	\
    ( (This)->lpVtbl -> InitializeClientContext2(This,IdentifyingString,varReserved,ppClientContext) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzApplication2_INTERFACE_DEFINED__ */


#ifndef __IAzApplications_INTERFACE_DEFINED__
#define __IAzApplications_INTERFACE_DEFINED__

/* interface IAzApplications */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzApplications;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("929b11a9-95c5-4a84-a29a-20ad42c2f16c")
    IAzApplications : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *plCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzApplicationsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzApplications * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzApplications * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzApplications * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzApplications * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzApplications * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzApplications * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzApplications * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAzApplications * This,
            /* [in] */ long Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAzApplications * This,
            /* [retval][out] */ __RPC__out long *plCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IAzApplications * This,
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr);
        
        END_INTERFACE
    } IAzApplicationsVtbl;

    interface IAzApplications
    {
        CONST_VTBL struct IAzApplicationsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzApplications_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzApplications_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzApplications_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzApplications_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzApplications_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzApplications_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzApplications_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzApplications_get_Item(This,Index,pvarObtPtr)	\
    ( (This)->lpVtbl -> get_Item(This,Index,pvarObtPtr) ) 

#define IAzApplications_get_Count(This,plCount)	\
    ( (This)->lpVtbl -> get_Count(This,plCount) ) 

#define IAzApplications_get__NewEnum(This,ppEnumPtr)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnumPtr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzApplications_INTERFACE_DEFINED__ */


#ifndef __IAzOperation_INTERFACE_DEFINED__
#define __IAzOperation_INTERFACE_DEFINED__

/* interface IAzOperation */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzOperation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5e56b24f-ea01-4d61-be44-c49b5e4eaf74")
    IAzOperation : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ __RPC__in BSTR bstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ __RPC__in BSTR bstrDescription) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ApplicationData( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ApplicationData( 
            /* [in] */ __RPC__in BSTR bstrApplicationData) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OperationID( 
            /* [retval][out] */ __RPC__out LONG *plProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OperationID( 
            /* [in] */ LONG lProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Writable( 
            /* [retval][out] */ __RPC__out BOOL *pfProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProperty( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Submit( 
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzOperationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzOperation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzOperation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzOperation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzOperation * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzOperation * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzOperation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzOperation * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzOperation * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in IAzOperation * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzOperation * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzOperation * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzOperation * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzOperation * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OperationID )( 
            __RPC__in IAzOperation * This,
            /* [retval][out] */ __RPC__out LONG *plProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OperationID )( 
            __RPC__in IAzOperation * This,
            /* [in] */ LONG lProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzOperation * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzOperation * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzOperation * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzOperation * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        END_INTERFACE
    } IAzOperationVtbl;

    interface IAzOperation
    {
        CONST_VTBL struct IAzOperationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzOperation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzOperation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzOperation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzOperation_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzOperation_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzOperation_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzOperation_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzOperation_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAzOperation_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IAzOperation_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzOperation_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzOperation_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzOperation_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzOperation_get_OperationID(This,plProp)	\
    ( (This)->lpVtbl -> get_OperationID(This,plProp) ) 

#define IAzOperation_put_OperationID(This,lProp)	\
    ( (This)->lpVtbl -> put_OperationID(This,lProp) ) 

#define IAzOperation_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzOperation_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzOperation_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzOperation_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzOperation_INTERFACE_DEFINED__ */


#ifndef __IAzOperations_INTERFACE_DEFINED__
#define __IAzOperations_INTERFACE_DEFINED__

/* interface IAzOperations */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzOperations;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("90ef9c07-9706-49d9-af80-0438a5f3ec35")
    IAzOperations : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out LONG *plCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzOperationsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzOperations * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzOperations * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzOperations * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzOperations * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzOperations * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzOperations * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzOperations * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAzOperations * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAzOperations * This,
            /* [retval][out] */ __RPC__out LONG *plCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IAzOperations * This,
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr);
        
        END_INTERFACE
    } IAzOperationsVtbl;

    interface IAzOperations
    {
        CONST_VTBL struct IAzOperationsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzOperations_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzOperations_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzOperations_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzOperations_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzOperations_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzOperations_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzOperations_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzOperations_get_Item(This,Index,pvarObtPtr)	\
    ( (This)->lpVtbl -> get_Item(This,Index,pvarObtPtr) ) 

#define IAzOperations_get_Count(This,plCount)	\
    ( (This)->lpVtbl -> get_Count(This,plCount) ) 

#define IAzOperations_get__NewEnum(This,ppEnumPtr)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnumPtr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzOperations_INTERFACE_DEFINED__ */


#ifndef __IAzTask_INTERFACE_DEFINED__
#define __IAzTask_INTERFACE_DEFINED__

/* interface IAzTask */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzTask;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("cb94e592-2e0e-4a6c-a336-b89a6dc1e388")
    IAzTask : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ __RPC__in BSTR bstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ __RPC__in BSTR bstrDescription) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ApplicationData( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ApplicationData( 
            /* [in] */ __RPC__in BSTR bstrApplicationData) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BizRule( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BizRule( 
            /* [in] */ __RPC__in BSTR bstrProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BizRuleLanguage( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BizRuleLanguage( 
            /* [in] */ __RPC__in BSTR bstrProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BizRuleImportedPath( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BizRuleImportedPath( 
            /* [in] */ __RPC__in BSTR bstrProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsRoleDefinition( 
            /* [retval][out] */ __RPC__out BOOL *pfProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsRoleDefinition( 
            /* [in] */ BOOL fProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Operations( 
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Tasks( 
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddOperation( 
            /* [in] */ __RPC__in BSTR bstrOp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteOperation( 
            /* [in] */ __RPC__in BSTR bstrOp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddTask( 
            /* [in] */ __RPC__in BSTR bstrTask,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteTask( 
            /* [in] */ __RPC__in BSTR bstrTask,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Writable( 
            /* [retval][out] */ __RPC__out BOOL *pfProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProperty( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPropertyItem( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePropertyItem( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Submit( 
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzTaskVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzTask * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzTask * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzTask * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzTask * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzTask * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzTask * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzTask * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzTask * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in IAzTask * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzTask * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzTask * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzTask * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzTask * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRule )( 
            __RPC__in IAzTask * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BizRule )( 
            __RPC__in IAzTask * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRuleLanguage )( 
            __RPC__in IAzTask * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BizRuleLanguage )( 
            __RPC__in IAzTask * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRuleImportedPath )( 
            __RPC__in IAzTask * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BizRuleImportedPath )( 
            __RPC__in IAzTask * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsRoleDefinition )( 
            __RPC__in IAzTask * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsRoleDefinition )( 
            __RPC__in IAzTask * This,
            /* [in] */ BOOL fProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Operations )( 
            __RPC__in IAzTask * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Tasks )( 
            __RPC__in IAzTask * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *AddOperation )( 
            __RPC__in IAzTask * This,
            /* [in] */ __RPC__in BSTR bstrOp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteOperation )( 
            __RPC__in IAzTask * This,
            /* [in] */ __RPC__in BSTR bstrOp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddTask )( 
            __RPC__in IAzTask * This,
            /* [in] */ __RPC__in BSTR bstrTask,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteTask )( 
            __RPC__in IAzTask * This,
            /* [in] */ __RPC__in BSTR bstrTask,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzTask * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzTask * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzTask * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzTask * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzTask * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzTask * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        END_INTERFACE
    } IAzTaskVtbl;

    interface IAzTask
    {
        CONST_VTBL struct IAzTaskVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzTask_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzTask_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzTask_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzTask_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzTask_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzTask_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzTask_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzTask_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAzTask_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IAzTask_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzTask_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzTask_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzTask_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzTask_get_BizRule(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_BizRule(This,pbstrProp) ) 

#define IAzTask_put_BizRule(This,bstrProp)	\
    ( (This)->lpVtbl -> put_BizRule(This,bstrProp) ) 

#define IAzTask_get_BizRuleLanguage(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_BizRuleLanguage(This,pbstrProp) ) 

#define IAzTask_put_BizRuleLanguage(This,bstrProp)	\
    ( (This)->lpVtbl -> put_BizRuleLanguage(This,bstrProp) ) 

#define IAzTask_get_BizRuleImportedPath(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_BizRuleImportedPath(This,pbstrProp) ) 

#define IAzTask_put_BizRuleImportedPath(This,bstrProp)	\
    ( (This)->lpVtbl -> put_BizRuleImportedPath(This,bstrProp) ) 

#define IAzTask_get_IsRoleDefinition(This,pfProp)	\
    ( (This)->lpVtbl -> get_IsRoleDefinition(This,pfProp) ) 

#define IAzTask_put_IsRoleDefinition(This,fProp)	\
    ( (This)->lpVtbl -> put_IsRoleDefinition(This,fProp) ) 

#define IAzTask_get_Operations(This,pvarProp)	\
    ( (This)->lpVtbl -> get_Operations(This,pvarProp) ) 

#define IAzTask_get_Tasks(This,pvarProp)	\
    ( (This)->lpVtbl -> get_Tasks(This,pvarProp) ) 

#define IAzTask_AddOperation(This,bstrOp,varReserved)	\
    ( (This)->lpVtbl -> AddOperation(This,bstrOp,varReserved) ) 

#define IAzTask_DeleteOperation(This,bstrOp,varReserved)	\
    ( (This)->lpVtbl -> DeleteOperation(This,bstrOp,varReserved) ) 

#define IAzTask_AddTask(This,bstrTask,varReserved)	\
    ( (This)->lpVtbl -> AddTask(This,bstrTask,varReserved) ) 

#define IAzTask_DeleteTask(This,bstrTask,varReserved)	\
    ( (This)->lpVtbl -> DeleteTask(This,bstrTask,varReserved) ) 

#define IAzTask_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzTask_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzTask_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzTask_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzTask_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzTask_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzTask_INTERFACE_DEFINED__ */


#ifndef __IAzTasks_INTERFACE_DEFINED__
#define __IAzTasks_INTERFACE_DEFINED__

/* interface IAzTasks */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzTasks;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b338ccab-4c85-4388-8c0a-c58592bad398")
    IAzTasks : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out LONG *plCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzTasksVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzTasks * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzTasks * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzTasks * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzTasks * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzTasks * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzTasks * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzTasks * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAzTasks * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAzTasks * This,
            /* [retval][out] */ __RPC__out LONG *plCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IAzTasks * This,
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr);
        
        END_INTERFACE
    } IAzTasksVtbl;

    interface IAzTasks
    {
        CONST_VTBL struct IAzTasksVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzTasks_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzTasks_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzTasks_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzTasks_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzTasks_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzTasks_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzTasks_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzTasks_get_Item(This,Index,pvarObtPtr)	\
    ( (This)->lpVtbl -> get_Item(This,Index,pvarObtPtr) ) 

#define IAzTasks_get_Count(This,plCount)	\
    ( (This)->lpVtbl -> get_Count(This,plCount) ) 

#define IAzTasks_get__NewEnum(This,ppEnumPtr)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnumPtr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzTasks_INTERFACE_DEFINED__ */


#ifndef __IAzScope_INTERFACE_DEFINED__
#define __IAzScope_INTERFACE_DEFINED__

/* interface IAzScope */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzScope;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00e52487-e08d-4514-b62e-877d5645f5ab")
    IAzScope : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ __RPC__in BSTR bstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ __RPC__in BSTR bstrDescription) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ApplicationData( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ApplicationData( 
            /* [in] */ __RPC__in BSTR bstrApplicationData) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Writable( 
            /* [retval][out] */ __RPC__out BOOL *pfProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProperty( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPropertyItem( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePropertyItem( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PolicyAdministrators( 
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PolicyReaders( 
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPolicyAdministrator( 
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePolicyAdministrator( 
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPolicyReader( 
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePolicyReader( 
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ApplicationGroups( 
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroups **ppGroupCollection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenApplicationGroup( 
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateApplicationGroup( 
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteApplicationGroup( 
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Roles( 
            /* [retval][out] */ __RPC__deref_out_opt IAzRoles **ppRoleCollection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenRole( 
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzRole **ppRole) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateRole( 
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzRole **ppRole) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteRole( 
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Tasks( 
            /* [retval][out] */ __RPC__deref_out_opt IAzTasks **ppTaskCollection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenTask( 
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzTask **ppTask) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateTask( 
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzTask **ppTask) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteTask( 
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Submit( 
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanBeDelegated( 
            /* [retval][out] */ __RPC__out BOOL *pfProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BizrulesWritable( 
            /* [retval][out] */ __RPC__out BOOL *pfProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PolicyAdministratorsName( 
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PolicyReadersName( 
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPolicyAdministratorName( 
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePolicyAdministratorName( 
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPolicyReaderName( 
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePolicyReaderName( 
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzScopeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzScope * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzScope * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzScope * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzScope * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzScope * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzScope * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzScope * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzScope * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzScope * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzScope * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzScope * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzScope * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzScope * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministrators )( 
            __RPC__in IAzScope * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReaders )( 
            __RPC__in IAzScope * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministrator )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministrator )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReader )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReader )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationGroups )( 
            __RPC__in IAzScope * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroups **ppGroupCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenApplicationGroup )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *CreateApplicationGroup )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteApplicationGroup )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Roles )( 
            __RPC__in IAzScope * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoles **ppRoleCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenRole )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzRole **ppRole);
        
        HRESULT ( STDMETHODCALLTYPE *CreateRole )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzRole **ppRole);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteRole )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Tasks )( 
            __RPC__in IAzScope * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzTasks **ppTaskCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenTask )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzTask **ppTask);
        
        HRESULT ( STDMETHODCALLTYPE *CreateTask )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzTask **ppTask);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteTask )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzScope * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanBeDelegated )( 
            __RPC__in IAzScope * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizrulesWritable )( 
            __RPC__in IAzScope * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministratorsName )( 
            __RPC__in IAzScope * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReadersName )( 
            __RPC__in IAzScope * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministratorName )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministratorName )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReaderName )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReaderName )( 
            __RPC__in IAzScope * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        END_INTERFACE
    } IAzScopeVtbl;

    interface IAzScope
    {
        CONST_VTBL struct IAzScopeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzScope_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzScope_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzScope_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzScope_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzScope_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzScope_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzScope_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzScope_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAzScope_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IAzScope_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzScope_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzScope_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzScope_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzScope_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzScope_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzScope_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzScope_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzScope_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzScope_get_PolicyAdministrators(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministrators(This,pvarAdmins) ) 

#define IAzScope_get_PolicyReaders(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReaders(This,pvarReaders) ) 

#define IAzScope_AddPolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzScope_DeletePolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzScope_AddPolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReader(This,bstrReader,varReserved) ) 

#define IAzScope_DeletePolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReader(This,bstrReader,varReserved) ) 

#define IAzScope_get_ApplicationGroups(This,ppGroupCollection)	\
    ( (This)->lpVtbl -> get_ApplicationGroups(This,ppGroupCollection) ) 

#define IAzScope_OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzScope_CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzScope_DeleteApplicationGroup(This,bstrGroupName,varReserved)	\
    ( (This)->lpVtbl -> DeleteApplicationGroup(This,bstrGroupName,varReserved) ) 

#define IAzScope_get_Roles(This,ppRoleCollection)	\
    ( (This)->lpVtbl -> get_Roles(This,ppRoleCollection) ) 

#define IAzScope_OpenRole(This,bstrRoleName,varReserved,ppRole)	\
    ( (This)->lpVtbl -> OpenRole(This,bstrRoleName,varReserved,ppRole) ) 

#define IAzScope_CreateRole(This,bstrRoleName,varReserved,ppRole)	\
    ( (This)->lpVtbl -> CreateRole(This,bstrRoleName,varReserved,ppRole) ) 

#define IAzScope_DeleteRole(This,bstrRoleName,varReserved)	\
    ( (This)->lpVtbl -> DeleteRole(This,bstrRoleName,varReserved) ) 

#define IAzScope_get_Tasks(This,ppTaskCollection)	\
    ( (This)->lpVtbl -> get_Tasks(This,ppTaskCollection) ) 

#define IAzScope_OpenTask(This,bstrTaskName,varReserved,ppTask)	\
    ( (This)->lpVtbl -> OpenTask(This,bstrTaskName,varReserved,ppTask) ) 

#define IAzScope_CreateTask(This,bstrTaskName,varReserved,ppTask)	\
    ( (This)->lpVtbl -> CreateTask(This,bstrTaskName,varReserved,ppTask) ) 

#define IAzScope_DeleteTask(This,bstrTaskName,varReserved)	\
    ( (This)->lpVtbl -> DeleteTask(This,bstrTaskName,varReserved) ) 

#define IAzScope_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 

#define IAzScope_get_CanBeDelegated(This,pfProp)	\
    ( (This)->lpVtbl -> get_CanBeDelegated(This,pfProp) ) 

#define IAzScope_get_BizrulesWritable(This,pfProp)	\
    ( (This)->lpVtbl -> get_BizrulesWritable(This,pfProp) ) 

#define IAzScope_get_PolicyAdministratorsName(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministratorsName(This,pvarAdmins) ) 

#define IAzScope_get_PolicyReadersName(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReadersName(This,pvarReaders) ) 

#define IAzScope_AddPolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzScope_DeletePolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzScope_AddPolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReaderName(This,bstrReader,varReserved) ) 

#define IAzScope_DeletePolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReaderName(This,bstrReader,varReserved) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzScope_INTERFACE_DEFINED__ */


#ifndef __IAzScopes_INTERFACE_DEFINED__
#define __IAzScopes_INTERFACE_DEFINED__

/* interface IAzScopes */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzScopes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("78e14853-9f5e-406d-9b91-6bdba6973510")
    IAzScopes : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out LONG *plCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzScopesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzScopes * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzScopes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzScopes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzScopes * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzScopes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzScopes * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzScopes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAzScopes * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAzScopes * This,
            /* [retval][out] */ __RPC__out LONG *plCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IAzScopes * This,
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr);
        
        END_INTERFACE
    } IAzScopesVtbl;

    interface IAzScopes
    {
        CONST_VTBL struct IAzScopesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzScopes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzScopes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzScopes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzScopes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzScopes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzScopes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzScopes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzScopes_get_Item(This,Index,pvarObtPtr)	\
    ( (This)->lpVtbl -> get_Item(This,Index,pvarObtPtr) ) 

#define IAzScopes_get_Count(This,plCount)	\
    ( (This)->lpVtbl -> get_Count(This,plCount) ) 

#define IAzScopes_get__NewEnum(This,ppEnumPtr)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnumPtr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzScopes_INTERFACE_DEFINED__ */


#ifndef __IAzApplicationGroup_INTERFACE_DEFINED__
#define __IAzApplicationGroup_INTERFACE_DEFINED__

/* interface IAzApplicationGroup */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzApplicationGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f1b744cd-58a6-4e06-9fbf-36f6d779e21e")
    IAzApplicationGroup : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ __RPC__in BSTR bstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ __RPC__out LONG *plProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ LONG lProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LdapQuery( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LdapQuery( 
            /* [in] */ __RPC__in BSTR bstrProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AppMembers( 
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AppNonMembers( 
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Members( 
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NonMembers( 
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ __RPC__in BSTR bstrDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddAppMember( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteAppMember( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddAppNonMember( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteAppNonMember( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddMember( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteMember( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddNonMember( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteNonMember( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Writable( 
            /* [retval][out] */ __RPC__out BOOL *pfProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProperty( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPropertyItem( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePropertyItem( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Submit( 
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddMemberName( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteMemberName( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddNonMemberName( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteNonMemberName( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MembersName( 
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NonMembersName( 
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzApplicationGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzApplicationGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzApplicationGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzApplicationGroup * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzApplicationGroup * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzApplicationGroup * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            __RPC__in IAzApplicationGroup * This,
            /* [retval][out] */ __RPC__out LONG *plProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ LONG lProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LdapQuery )( 
            __RPC__in IAzApplicationGroup * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LdapQuery )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AppMembers )( 
            __RPC__in IAzApplicationGroup * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AppNonMembers )( 
            __RPC__in IAzApplicationGroup * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            __RPC__in IAzApplicationGroup * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NonMembers )( 
            __RPC__in IAzApplicationGroup * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzApplicationGroup * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        HRESULT ( STDMETHODCALLTYPE *AddAppMember )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAppMember )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddAppNonMember )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAppNonMember )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddMember )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteMember )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddNonMember )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteNonMember )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzApplicationGroup * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzApplicationGroup * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddMemberName )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteMemberName )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddNonMemberName )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteNonMemberName )( 
            __RPC__in IAzApplicationGroup * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MembersName )( 
            __RPC__in IAzApplicationGroup * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NonMembersName )( 
            __RPC__in IAzApplicationGroup * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        END_INTERFACE
    } IAzApplicationGroupVtbl;

    interface IAzApplicationGroup
    {
        CONST_VTBL struct IAzApplicationGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzApplicationGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzApplicationGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzApplicationGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzApplicationGroup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzApplicationGroup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzApplicationGroup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzApplicationGroup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzApplicationGroup_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAzApplicationGroup_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IAzApplicationGroup_get_Type(This,plProp)	\
    ( (This)->lpVtbl -> get_Type(This,plProp) ) 

#define IAzApplicationGroup_put_Type(This,lProp)	\
    ( (This)->lpVtbl -> put_Type(This,lProp) ) 

#define IAzApplicationGroup_get_LdapQuery(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_LdapQuery(This,pbstrProp) ) 

#define IAzApplicationGroup_put_LdapQuery(This,bstrProp)	\
    ( (This)->lpVtbl -> put_LdapQuery(This,bstrProp) ) 

#define IAzApplicationGroup_get_AppMembers(This,pvarProp)	\
    ( (This)->lpVtbl -> get_AppMembers(This,pvarProp) ) 

#define IAzApplicationGroup_get_AppNonMembers(This,pvarProp)	\
    ( (This)->lpVtbl -> get_AppNonMembers(This,pvarProp) ) 

#define IAzApplicationGroup_get_Members(This,pvarProp)	\
    ( (This)->lpVtbl -> get_Members(This,pvarProp) ) 

#define IAzApplicationGroup_get_NonMembers(This,pvarProp)	\
    ( (This)->lpVtbl -> get_NonMembers(This,pvarProp) ) 

#define IAzApplicationGroup_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzApplicationGroup_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzApplicationGroup_AddAppMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddAppMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup_DeleteAppMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteAppMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup_AddAppNonMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddAppNonMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup_DeleteAppNonMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteAppNonMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup_AddMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup_DeleteMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup_AddNonMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddNonMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup_DeleteNonMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteNonMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzApplicationGroup_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzApplicationGroup_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzApplicationGroup_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzApplicationGroup_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzApplicationGroup_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 

#define IAzApplicationGroup_AddMemberName(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddMemberName(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup_DeleteMemberName(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteMemberName(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup_AddNonMemberName(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddNonMemberName(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup_DeleteNonMemberName(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteNonMemberName(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup_get_MembersName(This,pvarProp)	\
    ( (This)->lpVtbl -> get_MembersName(This,pvarProp) ) 

#define IAzApplicationGroup_get_NonMembersName(This,pvarProp)	\
    ( (This)->lpVtbl -> get_NonMembersName(This,pvarProp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzApplicationGroup_INTERFACE_DEFINED__ */


#ifndef __IAzApplicationGroups_INTERFACE_DEFINED__
#define __IAzApplicationGroups_INTERFACE_DEFINED__

/* interface IAzApplicationGroups */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzApplicationGroups;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4ce66ad5-9f3c-469d-a911-b99887a7e685")
    IAzApplicationGroups : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out LONG *plCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzApplicationGroupsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzApplicationGroups * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzApplicationGroups * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzApplicationGroups * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzApplicationGroups * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzApplicationGroups * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzApplicationGroups * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzApplicationGroups * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAzApplicationGroups * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAzApplicationGroups * This,
            /* [retval][out] */ __RPC__out LONG *plCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IAzApplicationGroups * This,
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr);
        
        END_INTERFACE
    } IAzApplicationGroupsVtbl;

    interface IAzApplicationGroups
    {
        CONST_VTBL struct IAzApplicationGroupsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzApplicationGroups_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzApplicationGroups_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzApplicationGroups_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzApplicationGroups_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzApplicationGroups_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzApplicationGroups_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzApplicationGroups_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzApplicationGroups_get_Item(This,Index,pvarObtPtr)	\
    ( (This)->lpVtbl -> get_Item(This,Index,pvarObtPtr) ) 

#define IAzApplicationGroups_get_Count(This,plCount)	\
    ( (This)->lpVtbl -> get_Count(This,plCount) ) 

#define IAzApplicationGroups_get__NewEnum(This,ppEnumPtr)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnumPtr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzApplicationGroups_INTERFACE_DEFINED__ */


#ifndef __IAzRole_INTERFACE_DEFINED__
#define __IAzRole_INTERFACE_DEFINED__

/* interface IAzRole */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzRole;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("859e0d8d-62d7-41d8-a034-c0cd5d43fdfa")
    IAzRole : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ __RPC__in BSTR bstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ __RPC__in BSTR bstrDescription) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ApplicationData( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ApplicationData( 
            /* [in] */ __RPC__in BSTR bstrApplicationData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddAppMember( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteAppMember( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddTask( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteTask( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddOperation( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteOperation( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddMember( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteMember( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Writable( 
            /* [retval][out] */ __RPC__out BOOL *pfProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProperty( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AppMembers( 
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Members( 
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Operations( 
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Tasks( 
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPropertyItem( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePropertyItem( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Submit( 
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddMemberName( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteMemberName( 
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MembersName( 
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzRoleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzRole * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzRole * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzRole * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzRole * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzRole * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzRole * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzRole * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzRole * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        HRESULT ( STDMETHODCALLTYPE *AddAppMember )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAppMember )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddTask )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteTask )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddOperation )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteOperation )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddMember )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteMember )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzRole * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzRole * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzRole * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AppMembers )( 
            __RPC__in IAzRole * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            __RPC__in IAzRole * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Operations )( 
            __RPC__in IAzRole * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Tasks )( 
            __RPC__in IAzRole * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzRole * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzRole * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzRole * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddMemberName )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteMemberName )( 
            __RPC__in IAzRole * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MembersName )( 
            __RPC__in IAzRole * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        END_INTERFACE
    } IAzRoleVtbl;

    interface IAzRole
    {
        CONST_VTBL struct IAzRoleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzRole_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzRole_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzRole_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzRole_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzRole_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzRole_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzRole_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzRole_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAzRole_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IAzRole_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzRole_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzRole_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzRole_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzRole_AddAppMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddAppMember(This,bstrProp,varReserved) ) 

#define IAzRole_DeleteAppMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteAppMember(This,bstrProp,varReserved) ) 

#define IAzRole_AddTask(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddTask(This,bstrProp,varReserved) ) 

#define IAzRole_DeleteTask(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteTask(This,bstrProp,varReserved) ) 

#define IAzRole_AddOperation(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddOperation(This,bstrProp,varReserved) ) 

#define IAzRole_DeleteOperation(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteOperation(This,bstrProp,varReserved) ) 

#define IAzRole_AddMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddMember(This,bstrProp,varReserved) ) 

#define IAzRole_DeleteMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteMember(This,bstrProp,varReserved) ) 

#define IAzRole_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzRole_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzRole_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzRole_get_AppMembers(This,pvarProp)	\
    ( (This)->lpVtbl -> get_AppMembers(This,pvarProp) ) 

#define IAzRole_get_Members(This,pvarProp)	\
    ( (This)->lpVtbl -> get_Members(This,pvarProp) ) 

#define IAzRole_get_Operations(This,pvarProp)	\
    ( (This)->lpVtbl -> get_Operations(This,pvarProp) ) 

#define IAzRole_get_Tasks(This,pvarProp)	\
    ( (This)->lpVtbl -> get_Tasks(This,pvarProp) ) 

#define IAzRole_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzRole_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzRole_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 

#define IAzRole_AddMemberName(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddMemberName(This,bstrProp,varReserved) ) 

#define IAzRole_DeleteMemberName(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteMemberName(This,bstrProp,varReserved) ) 

#define IAzRole_get_MembersName(This,pvarProp)	\
    ( (This)->lpVtbl -> get_MembersName(This,pvarProp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzRole_INTERFACE_DEFINED__ */


#ifndef __IAzRoles_INTERFACE_DEFINED__
#define __IAzRoles_INTERFACE_DEFINED__

/* interface IAzRoles */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzRoles;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("95e0f119-13b4-4dae-b65f-2f7d60d822e4")
    IAzRoles : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out LONG *plCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzRolesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzRoles * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzRoles * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzRoles * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzRoles * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzRoles * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzRoles * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzRoles * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAzRoles * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAzRoles * This,
            /* [retval][out] */ __RPC__out LONG *plCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IAzRoles * This,
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr);
        
        END_INTERFACE
    } IAzRolesVtbl;

    interface IAzRoles
    {
        CONST_VTBL struct IAzRolesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzRoles_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzRoles_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzRoles_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzRoles_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzRoles_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzRoles_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzRoles_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzRoles_get_Item(This,Index,pvarObtPtr)	\
    ( (This)->lpVtbl -> get_Item(This,Index,pvarObtPtr) ) 

#define IAzRoles_get_Count(This,plCount)	\
    ( (This)->lpVtbl -> get_Count(This,plCount) ) 

#define IAzRoles_get__NewEnum(This,ppEnumPtr)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnumPtr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzRoles_INTERFACE_DEFINED__ */


#ifndef __IAzClientContext_INTERFACE_DEFINED__
#define __IAzClientContext_INTERFACE_DEFINED__

/* interface IAzClientContext */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzClientContext;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("eff1f00b-488a-466d-afd9-a401c5f9eef5")
    IAzClientContext : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AccessCheck( 
            /* [in] */ __RPC__in BSTR bstrObjectName,
            /* [in] */ VARIANT varScopeNames,
            /* [in] */ VARIANT varOperations,
            /* [optional][in] */ VARIANT varParameterNames,
            /* [optional][in] */ VARIANT varParameterValues,
            /* [optional][in] */ VARIANT varInterfaceNames,
            /* [optional][in] */ VARIANT varInterfaceFlags,
            /* [optional][in] */ VARIANT varInterfaces,
            /* [retval][out] */ __RPC__out VARIANT *pvarResults) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBusinessRuleString( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrBusinessRuleString) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UserDn( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UserSamCompat( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UserDisplay( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UserGuid( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UserCanonical( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UserUpn( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UserDnsSamCompat( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRoles( 
            /* [defaultvalue][in] */ __RPC__in BSTR bstrScopeName,
            /* [retval][out] */ __RPC__out VARIANT *pvarRoleNames) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RoleForAccessCheck( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RoleForAccessCheck( 
            /* [in] */ __RPC__in BSTR bstrProp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzClientContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzClientContext * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzClientContext * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzClientContext * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzClientContext * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzClientContext * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzClientContext * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzClientContext * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *AccessCheck )( 
            __RPC__in IAzClientContext * This,
            /* [in] */ __RPC__in BSTR bstrObjectName,
            /* [in] */ VARIANT varScopeNames,
            /* [in] */ VARIANT varOperations,
            /* [optional][in] */ VARIANT varParameterNames,
            /* [optional][in] */ VARIANT varParameterValues,
            /* [optional][in] */ VARIANT varInterfaceNames,
            /* [optional][in] */ VARIANT varInterfaceFlags,
            /* [optional][in] */ VARIANT varInterfaces,
            /* [retval][out] */ __RPC__out VARIANT *pvarResults);
        
        HRESULT ( STDMETHODCALLTYPE *GetBusinessRuleString )( 
            __RPC__in IAzClientContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrBusinessRuleString);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserDn )( 
            __RPC__in IAzClientContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserSamCompat )( 
            __RPC__in IAzClientContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserDisplay )( 
            __RPC__in IAzClientContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserGuid )( 
            __RPC__in IAzClientContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserCanonical )( 
            __RPC__in IAzClientContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserUpn )( 
            __RPC__in IAzClientContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserDnsSamCompat )( 
            __RPC__in IAzClientContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzClientContext * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetRoles )( 
            __RPC__in IAzClientContext * This,
            /* [defaultvalue][in] */ __RPC__in BSTR bstrScopeName,
            /* [retval][out] */ __RPC__out VARIANT *pvarRoleNames);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoleForAccessCheck )( 
            __RPC__in IAzClientContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RoleForAccessCheck )( 
            __RPC__in IAzClientContext * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        END_INTERFACE
    } IAzClientContextVtbl;

    interface IAzClientContext
    {
        CONST_VTBL struct IAzClientContextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzClientContext_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzClientContext_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzClientContext_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzClientContext_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzClientContext_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzClientContext_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzClientContext_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzClientContext_AccessCheck(This,bstrObjectName,varScopeNames,varOperations,varParameterNames,varParameterValues,varInterfaceNames,varInterfaceFlags,varInterfaces,pvarResults)	\
    ( (This)->lpVtbl -> AccessCheck(This,bstrObjectName,varScopeNames,varOperations,varParameterNames,varParameterValues,varInterfaceNames,varInterfaceFlags,varInterfaces,pvarResults) ) 

#define IAzClientContext_GetBusinessRuleString(This,pbstrBusinessRuleString)	\
    ( (This)->lpVtbl -> GetBusinessRuleString(This,pbstrBusinessRuleString) ) 

#define IAzClientContext_get_UserDn(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserDn(This,pbstrProp) ) 

#define IAzClientContext_get_UserSamCompat(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserSamCompat(This,pbstrProp) ) 

#define IAzClientContext_get_UserDisplay(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserDisplay(This,pbstrProp) ) 

#define IAzClientContext_get_UserGuid(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserGuid(This,pbstrProp) ) 

#define IAzClientContext_get_UserCanonical(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserCanonical(This,pbstrProp) ) 

#define IAzClientContext_get_UserUpn(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserUpn(This,pbstrProp) ) 

#define IAzClientContext_get_UserDnsSamCompat(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserDnsSamCompat(This,pbstrProp) ) 

#define IAzClientContext_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzClientContext_GetRoles(This,bstrScopeName,pvarRoleNames)	\
    ( (This)->lpVtbl -> GetRoles(This,bstrScopeName,pvarRoleNames) ) 

#define IAzClientContext_get_RoleForAccessCheck(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_RoleForAccessCheck(This,pbstrProp) ) 

#define IAzClientContext_put_RoleForAccessCheck(This,bstrProp)	\
    ( (This)->lpVtbl -> put_RoleForAccessCheck(This,bstrProp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzClientContext_INTERFACE_DEFINED__ */


#ifndef __IAzClientContext2_INTERFACE_DEFINED__
#define __IAzClientContext2_INTERFACE_DEFINED__

/* interface IAzClientContext2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzClientContext2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2b0c92b8-208a-488a-8f81-e4edb22111cd")
    IAzClientContext2 : public IAzClientContext
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAssignedScopesPage( 
            /* [in] */ LONG lOptions,
            /* [in] */ LONG PageSize,
            /* [out][in] */ __RPC__inout VARIANT *pvarCursor,
            /* [retval][out] */ __RPC__out VARIANT *pvarScopeNames) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddRoles( 
            /* [in] */ VARIANT varRoles,
            /* [in] */ __RPC__in BSTR bstrScopeName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddApplicationGroups( 
            /* [in] */ VARIANT varApplicationGroups) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddStringSids( 
            /* [in] */ VARIANT varStringSids) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LDAPQueryDN( 
            /* [in] */ __RPC__in BSTR bstrLDAPQueryDN) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LDAPQueryDN( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrLDAPQueryDN) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzClientContext2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzClientContext2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzClientContext2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzClientContext2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzClientContext2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzClientContext2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzClientContext2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzClientContext2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *AccessCheck )( 
            __RPC__in IAzClientContext2 * This,
            /* [in] */ __RPC__in BSTR bstrObjectName,
            /* [in] */ VARIANT varScopeNames,
            /* [in] */ VARIANT varOperations,
            /* [optional][in] */ VARIANT varParameterNames,
            /* [optional][in] */ VARIANT varParameterValues,
            /* [optional][in] */ VARIANT varInterfaceNames,
            /* [optional][in] */ VARIANT varInterfaceFlags,
            /* [optional][in] */ VARIANT varInterfaces,
            /* [retval][out] */ __RPC__out VARIANT *pvarResults);
        
        HRESULT ( STDMETHODCALLTYPE *GetBusinessRuleString )( 
            __RPC__in IAzClientContext2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrBusinessRuleString);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserDn )( 
            __RPC__in IAzClientContext2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserSamCompat )( 
            __RPC__in IAzClientContext2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserDisplay )( 
            __RPC__in IAzClientContext2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserGuid )( 
            __RPC__in IAzClientContext2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserCanonical )( 
            __RPC__in IAzClientContext2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserUpn )( 
            __RPC__in IAzClientContext2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserDnsSamCompat )( 
            __RPC__in IAzClientContext2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzClientContext2 * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetRoles )( 
            __RPC__in IAzClientContext2 * This,
            /* [defaultvalue][in] */ __RPC__in BSTR bstrScopeName,
            /* [retval][out] */ __RPC__out VARIANT *pvarRoleNames);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoleForAccessCheck )( 
            __RPC__in IAzClientContext2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RoleForAccessCheck )( 
            __RPC__in IAzClientContext2 * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetAssignedScopesPage )( 
            __RPC__in IAzClientContext2 * This,
            /* [in] */ LONG lOptions,
            /* [in] */ LONG PageSize,
            /* [out][in] */ __RPC__inout VARIANT *pvarCursor,
            /* [retval][out] */ __RPC__out VARIANT *pvarScopeNames);
        
        HRESULT ( STDMETHODCALLTYPE *AddRoles )( 
            __RPC__in IAzClientContext2 * This,
            /* [in] */ VARIANT varRoles,
            /* [in] */ __RPC__in BSTR bstrScopeName);
        
        HRESULT ( STDMETHODCALLTYPE *AddApplicationGroups )( 
            __RPC__in IAzClientContext2 * This,
            /* [in] */ VARIANT varApplicationGroups);
        
        HRESULT ( STDMETHODCALLTYPE *AddStringSids )( 
            __RPC__in IAzClientContext2 * This,
            /* [in] */ VARIANT varStringSids);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LDAPQueryDN )( 
            __RPC__in IAzClientContext2 * This,
            /* [in] */ __RPC__in BSTR bstrLDAPQueryDN);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LDAPQueryDN )( 
            __RPC__in IAzClientContext2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrLDAPQueryDN);
        
        END_INTERFACE
    } IAzClientContext2Vtbl;

    interface IAzClientContext2
    {
        CONST_VTBL struct IAzClientContext2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzClientContext2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzClientContext2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzClientContext2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzClientContext2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzClientContext2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzClientContext2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzClientContext2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzClientContext2_AccessCheck(This,bstrObjectName,varScopeNames,varOperations,varParameterNames,varParameterValues,varInterfaceNames,varInterfaceFlags,varInterfaces,pvarResults)	\
    ( (This)->lpVtbl -> AccessCheck(This,bstrObjectName,varScopeNames,varOperations,varParameterNames,varParameterValues,varInterfaceNames,varInterfaceFlags,varInterfaces,pvarResults) ) 

#define IAzClientContext2_GetBusinessRuleString(This,pbstrBusinessRuleString)	\
    ( (This)->lpVtbl -> GetBusinessRuleString(This,pbstrBusinessRuleString) ) 

#define IAzClientContext2_get_UserDn(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserDn(This,pbstrProp) ) 

#define IAzClientContext2_get_UserSamCompat(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserSamCompat(This,pbstrProp) ) 

#define IAzClientContext2_get_UserDisplay(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserDisplay(This,pbstrProp) ) 

#define IAzClientContext2_get_UserGuid(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserGuid(This,pbstrProp) ) 

#define IAzClientContext2_get_UserCanonical(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserCanonical(This,pbstrProp) ) 

#define IAzClientContext2_get_UserUpn(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserUpn(This,pbstrProp) ) 

#define IAzClientContext2_get_UserDnsSamCompat(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserDnsSamCompat(This,pbstrProp) ) 

#define IAzClientContext2_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzClientContext2_GetRoles(This,bstrScopeName,pvarRoleNames)	\
    ( (This)->lpVtbl -> GetRoles(This,bstrScopeName,pvarRoleNames) ) 

#define IAzClientContext2_get_RoleForAccessCheck(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_RoleForAccessCheck(This,pbstrProp) ) 

#define IAzClientContext2_put_RoleForAccessCheck(This,bstrProp)	\
    ( (This)->lpVtbl -> put_RoleForAccessCheck(This,bstrProp) ) 


#define IAzClientContext2_GetAssignedScopesPage(This,lOptions,PageSize,pvarCursor,pvarScopeNames)	\
    ( (This)->lpVtbl -> GetAssignedScopesPage(This,lOptions,PageSize,pvarCursor,pvarScopeNames) ) 

#define IAzClientContext2_AddRoles(This,varRoles,bstrScopeName)	\
    ( (This)->lpVtbl -> AddRoles(This,varRoles,bstrScopeName) ) 

#define IAzClientContext2_AddApplicationGroups(This,varApplicationGroups)	\
    ( (This)->lpVtbl -> AddApplicationGroups(This,varApplicationGroups) ) 

#define IAzClientContext2_AddStringSids(This,varStringSids)	\
    ( (This)->lpVtbl -> AddStringSids(This,varStringSids) ) 

#define IAzClientContext2_put_LDAPQueryDN(This,bstrLDAPQueryDN)	\
    ( (This)->lpVtbl -> put_LDAPQueryDN(This,bstrLDAPQueryDN) ) 

#define IAzClientContext2_get_LDAPQueryDN(This,pbstrLDAPQueryDN)	\
    ( (This)->lpVtbl -> get_LDAPQueryDN(This,pbstrLDAPQueryDN) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzClientContext2_INTERFACE_DEFINED__ */


#ifndef __IAzBizRuleContext_INTERFACE_DEFINED__
#define __IAzBizRuleContext_INTERFACE_DEFINED__

/* interface IAzBizRuleContext */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzBizRuleContext;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e192f17d-d59f-455e-a152-940316cd77b2")
    IAzBizRuleContext : public IDispatch
    {
    public:
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BusinessRuleResult( 
            /* [in] */ BOOL bResult) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BusinessRuleString( 
            /* [in] */ __RPC__in BSTR bstrBusinessRuleString) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BusinessRuleString( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrBusinessRuleString) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetParameter( 
            /* [in] */ __RPC__in BSTR bstrParameterName,
            /* [retval][out] */ __RPC__out VARIANT *pvarParameterValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzBizRuleContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzBizRuleContext * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzBizRuleContext * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzBizRuleContext * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzBizRuleContext * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzBizRuleContext * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzBizRuleContext * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzBizRuleContext * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BusinessRuleResult )( 
            __RPC__in IAzBizRuleContext * This,
            /* [in] */ BOOL bResult);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BusinessRuleString )( 
            __RPC__in IAzBizRuleContext * This,
            /* [in] */ __RPC__in BSTR bstrBusinessRuleString);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BusinessRuleString )( 
            __RPC__in IAzBizRuleContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrBusinessRuleString);
        
        HRESULT ( STDMETHODCALLTYPE *GetParameter )( 
            __RPC__in IAzBizRuleContext * This,
            /* [in] */ __RPC__in BSTR bstrParameterName,
            /* [retval][out] */ __RPC__out VARIANT *pvarParameterValue);
        
        END_INTERFACE
    } IAzBizRuleContextVtbl;

    interface IAzBizRuleContext
    {
        CONST_VTBL struct IAzBizRuleContextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzBizRuleContext_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzBizRuleContext_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzBizRuleContext_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzBizRuleContext_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzBizRuleContext_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzBizRuleContext_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzBizRuleContext_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzBizRuleContext_put_BusinessRuleResult(This,bResult)	\
    ( (This)->lpVtbl -> put_BusinessRuleResult(This,bResult) ) 

#define IAzBizRuleContext_put_BusinessRuleString(This,bstrBusinessRuleString)	\
    ( (This)->lpVtbl -> put_BusinessRuleString(This,bstrBusinessRuleString) ) 

#define IAzBizRuleContext_get_BusinessRuleString(This,pbstrBusinessRuleString)	\
    ( (This)->lpVtbl -> get_BusinessRuleString(This,pbstrBusinessRuleString) ) 

#define IAzBizRuleContext_GetParameter(This,bstrParameterName,pvarParameterValue)	\
    ( (This)->lpVtbl -> GetParameter(This,bstrParameterName,pvarParameterValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzBizRuleContext_INTERFACE_DEFINED__ */


#ifndef __IAzBizRuleParameters_INTERFACE_DEFINED__
#define __IAzBizRuleParameters_INTERFACE_DEFINED__

/* interface IAzBizRuleParameters */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzBizRuleParameters;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fc17685f-e25d-4dcd-bae1-276ec9533cb5")
    IAzBizRuleParameters : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddParameter( 
            /* [in] */ __RPC__in BSTR bstrParameterName,
            /* [in] */ VARIANT varParameterValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddParameters( 
            /* [in] */ VARIANT varParameterNames,
            /* [in] */ VARIANT varParameterValues) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetParameterValue( 
            /* [in] */ __RPC__in BSTR bstrParameterName,
            /* [retval][out] */ __RPC__out VARIANT *pvarParameterValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ __RPC__in BSTR varParameterName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out unsigned long *plCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzBizRuleParametersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzBizRuleParameters * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzBizRuleParameters * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzBizRuleParameters * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzBizRuleParameters * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzBizRuleParameters * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzBizRuleParameters * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzBizRuleParameters * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *AddParameter )( 
            __RPC__in IAzBizRuleParameters * This,
            /* [in] */ __RPC__in BSTR bstrParameterName,
            /* [in] */ VARIANT varParameterValue);
        
        HRESULT ( STDMETHODCALLTYPE *AddParameters )( 
            __RPC__in IAzBizRuleParameters * This,
            /* [in] */ VARIANT varParameterNames,
            /* [in] */ VARIANT varParameterValues);
        
        HRESULT ( STDMETHODCALLTYPE *GetParameterValue )( 
            __RPC__in IAzBizRuleParameters * This,
            /* [in] */ __RPC__in BSTR bstrParameterName,
            /* [retval][out] */ __RPC__out VARIANT *pvarParameterValue);
        
        HRESULT ( STDMETHODCALLTYPE *Remove )( 
            __RPC__in IAzBizRuleParameters * This,
            /* [in] */ __RPC__in BSTR varParameterName);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            __RPC__in IAzBizRuleParameters * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAzBizRuleParameters * This,
            /* [retval][out] */ __RPC__out unsigned long *plCount);
        
        END_INTERFACE
    } IAzBizRuleParametersVtbl;

    interface IAzBizRuleParameters
    {
        CONST_VTBL struct IAzBizRuleParametersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzBizRuleParameters_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzBizRuleParameters_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzBizRuleParameters_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzBizRuleParameters_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzBizRuleParameters_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzBizRuleParameters_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzBizRuleParameters_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzBizRuleParameters_AddParameter(This,bstrParameterName,varParameterValue)	\
    ( (This)->lpVtbl -> AddParameter(This,bstrParameterName,varParameterValue) ) 

#define IAzBizRuleParameters_AddParameters(This,varParameterNames,varParameterValues)	\
    ( (This)->lpVtbl -> AddParameters(This,varParameterNames,varParameterValues) ) 

#define IAzBizRuleParameters_GetParameterValue(This,bstrParameterName,pvarParameterValue)	\
    ( (This)->lpVtbl -> GetParameterValue(This,bstrParameterName,pvarParameterValue) ) 

#define IAzBizRuleParameters_Remove(This,varParameterName)	\
    ( (This)->lpVtbl -> Remove(This,varParameterName) ) 

#define IAzBizRuleParameters_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 

#define IAzBizRuleParameters_get_Count(This,plCount)	\
    ( (This)->lpVtbl -> get_Count(This,plCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzBizRuleParameters_INTERFACE_DEFINED__ */


#ifndef __IAzBizRuleInterfaces_INTERFACE_DEFINED__
#define __IAzBizRuleInterfaces_INTERFACE_DEFINED__

/* interface IAzBizRuleInterfaces */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzBizRuleInterfaces;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e94128c7-e9da-44cc-b0bd-53036f3aab3d")
    IAzBizRuleInterfaces : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddInterface( 
            /* [in] */ __RPC__in BSTR bstrInterfaceName,
            /* [in] */ LONG lInterfaceFlag,
            /* [in] */ VARIANT varInterface) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddInterfaces( 
            /* [in] */ VARIANT varInterfaceNames,
            /* [in] */ VARIANT varInterfaceFlags,
            /* [in] */ VARIANT varInterfaces) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInterfaceValue( 
            /* [in] */ __RPC__in BSTR bstrInterfaceName,
            /* [out] */ __RPC__out LONG *lInterfaceFlag,
            /* [out] */ __RPC__out VARIANT *varInterface) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ __RPC__in BSTR bstrInterfaceName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out unsigned long *plCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzBizRuleInterfacesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzBizRuleInterfaces * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzBizRuleInterfaces * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzBizRuleInterfaces * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzBizRuleInterfaces * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzBizRuleInterfaces * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzBizRuleInterfaces * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzBizRuleInterfaces * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *AddInterface )( 
            __RPC__in IAzBizRuleInterfaces * This,
            /* [in] */ __RPC__in BSTR bstrInterfaceName,
            /* [in] */ LONG lInterfaceFlag,
            /* [in] */ VARIANT varInterface);
        
        HRESULT ( STDMETHODCALLTYPE *AddInterfaces )( 
            __RPC__in IAzBizRuleInterfaces * This,
            /* [in] */ VARIANT varInterfaceNames,
            /* [in] */ VARIANT varInterfaceFlags,
            /* [in] */ VARIANT varInterfaces);
        
        HRESULT ( STDMETHODCALLTYPE *GetInterfaceValue )( 
            __RPC__in IAzBizRuleInterfaces * This,
            /* [in] */ __RPC__in BSTR bstrInterfaceName,
            /* [out] */ __RPC__out LONG *lInterfaceFlag,
            /* [out] */ __RPC__out VARIANT *varInterface);
        
        HRESULT ( STDMETHODCALLTYPE *Remove )( 
            __RPC__in IAzBizRuleInterfaces * This,
            /* [in] */ __RPC__in BSTR bstrInterfaceName);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            __RPC__in IAzBizRuleInterfaces * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAzBizRuleInterfaces * This,
            /* [retval][out] */ __RPC__out unsigned long *plCount);
        
        END_INTERFACE
    } IAzBizRuleInterfacesVtbl;

    interface IAzBizRuleInterfaces
    {
        CONST_VTBL struct IAzBizRuleInterfacesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzBizRuleInterfaces_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzBizRuleInterfaces_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzBizRuleInterfaces_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzBizRuleInterfaces_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzBizRuleInterfaces_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzBizRuleInterfaces_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzBizRuleInterfaces_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzBizRuleInterfaces_AddInterface(This,bstrInterfaceName,lInterfaceFlag,varInterface)	\
    ( (This)->lpVtbl -> AddInterface(This,bstrInterfaceName,lInterfaceFlag,varInterface) ) 

#define IAzBizRuleInterfaces_AddInterfaces(This,varInterfaceNames,varInterfaceFlags,varInterfaces)	\
    ( (This)->lpVtbl -> AddInterfaces(This,varInterfaceNames,varInterfaceFlags,varInterfaces) ) 

#define IAzBizRuleInterfaces_GetInterfaceValue(This,bstrInterfaceName,lInterfaceFlag,varInterface)	\
    ( (This)->lpVtbl -> GetInterfaceValue(This,bstrInterfaceName,lInterfaceFlag,varInterface) ) 

#define IAzBizRuleInterfaces_Remove(This,bstrInterfaceName)	\
    ( (This)->lpVtbl -> Remove(This,bstrInterfaceName) ) 

#define IAzBizRuleInterfaces_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 

#define IAzBizRuleInterfaces_get_Count(This,plCount)	\
    ( (This)->lpVtbl -> get_Count(This,plCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzBizRuleInterfaces_INTERFACE_DEFINED__ */


#ifndef __IAzClientContext3_INTERFACE_DEFINED__
#define __IAzClientContext3_INTERFACE_DEFINED__

/* interface IAzClientContext3 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzClientContext3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("11894fde-1deb-4b4b-8907-6d1cda1f5d4f")
    IAzClientContext3 : public IAzClientContext2
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AccessCheck2( 
            /* [in] */ __RPC__in BSTR bstrObjectName,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [in] */ long lOperation,
            /* [retval][out] */ __RPC__out unsigned long *plResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsInRoleAssignment( 
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbIsInRole) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOperations( 
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [retval][out] */ __RPC__deref_out_opt IAzOperations **ppOperationCollection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTasks( 
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [retval][out] */ __RPC__deref_out_opt IAzTasks **ppTaskCollection) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BizRuleParameters( 
            /* [retval][out] */ __RPC__deref_out_opt IAzBizRuleParameters **ppBizRuleParam) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BizRuleInterfaces( 
            /* [retval][out] */ __RPC__deref_out_opt IAzBizRuleInterfaces **ppBizRuleInterfaces) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGroups( 
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [in] */ ULONG ulOptions,
            /* [retval][out] */ __RPC__out VARIANT *pGroupArray) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Sids( 
            /* [retval][out] */ __RPC__out VARIANT *pStringSidArray) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzClientContext3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzClientContext3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzClientContext3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzClientContext3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzClientContext3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *AccessCheck )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ __RPC__in BSTR bstrObjectName,
            /* [in] */ VARIANT varScopeNames,
            /* [in] */ VARIANT varOperations,
            /* [optional][in] */ VARIANT varParameterNames,
            /* [optional][in] */ VARIANT varParameterValues,
            /* [optional][in] */ VARIANT varInterfaceNames,
            /* [optional][in] */ VARIANT varInterfaceFlags,
            /* [optional][in] */ VARIANT varInterfaces,
            /* [retval][out] */ __RPC__out VARIANT *pvarResults);
        
        HRESULT ( STDMETHODCALLTYPE *GetBusinessRuleString )( 
            __RPC__in IAzClientContext3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrBusinessRuleString);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserDn )( 
            __RPC__in IAzClientContext3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserSamCompat )( 
            __RPC__in IAzClientContext3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserDisplay )( 
            __RPC__in IAzClientContext3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserGuid )( 
            __RPC__in IAzClientContext3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserCanonical )( 
            __RPC__in IAzClientContext3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserUpn )( 
            __RPC__in IAzClientContext3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserDnsSamCompat )( 
            __RPC__in IAzClientContext3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetRoles )( 
            __RPC__in IAzClientContext3 * This,
            /* [defaultvalue][in] */ __RPC__in BSTR bstrScopeName,
            /* [retval][out] */ __RPC__out VARIANT *pvarRoleNames);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoleForAccessCheck )( 
            __RPC__in IAzClientContext3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RoleForAccessCheck )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetAssignedScopesPage )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ LONG lOptions,
            /* [in] */ LONG PageSize,
            /* [out][in] */ __RPC__inout VARIANT *pvarCursor,
            /* [retval][out] */ __RPC__out VARIANT *pvarScopeNames);
        
        HRESULT ( STDMETHODCALLTYPE *AddRoles )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ VARIANT varRoles,
            /* [in] */ __RPC__in BSTR bstrScopeName);
        
        HRESULT ( STDMETHODCALLTYPE *AddApplicationGroups )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ VARIANT varApplicationGroups);
        
        HRESULT ( STDMETHODCALLTYPE *AddStringSids )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ VARIANT varStringSids);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LDAPQueryDN )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ __RPC__in BSTR bstrLDAPQueryDN);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LDAPQueryDN )( 
            __RPC__in IAzClientContext3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrLDAPQueryDN);
        
        HRESULT ( STDMETHODCALLTYPE *AccessCheck2 )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ __RPC__in BSTR bstrObjectName,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [in] */ long lOperation,
            /* [retval][out] */ __RPC__out unsigned long *plResult);
        
        HRESULT ( STDMETHODCALLTYPE *IsInRoleAssignment )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbIsInRole);
        
        HRESULT ( STDMETHODCALLTYPE *GetOperations )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [retval][out] */ __RPC__deref_out_opt IAzOperations **ppOperationCollection);
        
        HRESULT ( STDMETHODCALLTYPE *GetTasks )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [retval][out] */ __RPC__deref_out_opt IAzTasks **ppTaskCollection);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRuleParameters )( 
            __RPC__in IAzClientContext3 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzBizRuleParameters **ppBizRuleParam);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRuleInterfaces )( 
            __RPC__in IAzClientContext3 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzBizRuleInterfaces **ppBizRuleInterfaces);
        
        HRESULT ( STDMETHODCALLTYPE *GetGroups )( 
            __RPC__in IAzClientContext3 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [in] */ ULONG ulOptions,
            /* [retval][out] */ __RPC__out VARIANT *pGroupArray);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Sids )( 
            __RPC__in IAzClientContext3 * This,
            /* [retval][out] */ __RPC__out VARIANT *pStringSidArray);
        
        END_INTERFACE
    } IAzClientContext3Vtbl;

    interface IAzClientContext3
    {
        CONST_VTBL struct IAzClientContext3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzClientContext3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzClientContext3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzClientContext3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzClientContext3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzClientContext3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzClientContext3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzClientContext3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzClientContext3_AccessCheck(This,bstrObjectName,varScopeNames,varOperations,varParameterNames,varParameterValues,varInterfaceNames,varInterfaceFlags,varInterfaces,pvarResults)	\
    ( (This)->lpVtbl -> AccessCheck(This,bstrObjectName,varScopeNames,varOperations,varParameterNames,varParameterValues,varInterfaceNames,varInterfaceFlags,varInterfaces,pvarResults) ) 

#define IAzClientContext3_GetBusinessRuleString(This,pbstrBusinessRuleString)	\
    ( (This)->lpVtbl -> GetBusinessRuleString(This,pbstrBusinessRuleString) ) 

#define IAzClientContext3_get_UserDn(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserDn(This,pbstrProp) ) 

#define IAzClientContext3_get_UserSamCompat(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserSamCompat(This,pbstrProp) ) 

#define IAzClientContext3_get_UserDisplay(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserDisplay(This,pbstrProp) ) 

#define IAzClientContext3_get_UserGuid(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserGuid(This,pbstrProp) ) 

#define IAzClientContext3_get_UserCanonical(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserCanonical(This,pbstrProp) ) 

#define IAzClientContext3_get_UserUpn(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserUpn(This,pbstrProp) ) 

#define IAzClientContext3_get_UserDnsSamCompat(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_UserDnsSamCompat(This,pbstrProp) ) 

#define IAzClientContext3_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzClientContext3_GetRoles(This,bstrScopeName,pvarRoleNames)	\
    ( (This)->lpVtbl -> GetRoles(This,bstrScopeName,pvarRoleNames) ) 

#define IAzClientContext3_get_RoleForAccessCheck(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_RoleForAccessCheck(This,pbstrProp) ) 

#define IAzClientContext3_put_RoleForAccessCheck(This,bstrProp)	\
    ( (This)->lpVtbl -> put_RoleForAccessCheck(This,bstrProp) ) 


#define IAzClientContext3_GetAssignedScopesPage(This,lOptions,PageSize,pvarCursor,pvarScopeNames)	\
    ( (This)->lpVtbl -> GetAssignedScopesPage(This,lOptions,PageSize,pvarCursor,pvarScopeNames) ) 

#define IAzClientContext3_AddRoles(This,varRoles,bstrScopeName)	\
    ( (This)->lpVtbl -> AddRoles(This,varRoles,bstrScopeName) ) 

#define IAzClientContext3_AddApplicationGroups(This,varApplicationGroups)	\
    ( (This)->lpVtbl -> AddApplicationGroups(This,varApplicationGroups) ) 

#define IAzClientContext3_AddStringSids(This,varStringSids)	\
    ( (This)->lpVtbl -> AddStringSids(This,varStringSids) ) 

#define IAzClientContext3_put_LDAPQueryDN(This,bstrLDAPQueryDN)	\
    ( (This)->lpVtbl -> put_LDAPQueryDN(This,bstrLDAPQueryDN) ) 

#define IAzClientContext3_get_LDAPQueryDN(This,pbstrLDAPQueryDN)	\
    ( (This)->lpVtbl -> get_LDAPQueryDN(This,pbstrLDAPQueryDN) ) 


#define IAzClientContext3_AccessCheck2(This,bstrObjectName,bstrScopeName,lOperation,plResult)	\
    ( (This)->lpVtbl -> AccessCheck2(This,bstrObjectName,bstrScopeName,lOperation,plResult) ) 

#define IAzClientContext3_IsInRoleAssignment(This,bstrScopeName,bstrRoleName,pbIsInRole)	\
    ( (This)->lpVtbl -> IsInRoleAssignment(This,bstrScopeName,bstrRoleName,pbIsInRole) ) 

#define IAzClientContext3_GetOperations(This,bstrScopeName,ppOperationCollection)	\
    ( (This)->lpVtbl -> GetOperations(This,bstrScopeName,ppOperationCollection) ) 

#define IAzClientContext3_GetTasks(This,bstrScopeName,ppTaskCollection)	\
    ( (This)->lpVtbl -> GetTasks(This,bstrScopeName,ppTaskCollection) ) 

#define IAzClientContext3_get_BizRuleParameters(This,ppBizRuleParam)	\
    ( (This)->lpVtbl -> get_BizRuleParameters(This,ppBizRuleParam) ) 

#define IAzClientContext3_get_BizRuleInterfaces(This,ppBizRuleInterfaces)	\
    ( (This)->lpVtbl -> get_BizRuleInterfaces(This,ppBizRuleInterfaces) ) 

#define IAzClientContext3_GetGroups(This,bstrScopeName,ulOptions,pGroupArray)	\
    ( (This)->lpVtbl -> GetGroups(This,bstrScopeName,ulOptions,pGroupArray) ) 

#define IAzClientContext3_get_Sids(This,pStringSidArray)	\
    ( (This)->lpVtbl -> get_Sids(This,pStringSidArray) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzClientContext3_INTERFACE_DEFINED__ */


#ifndef __IAzScope2_INTERFACE_DEFINED__
#define __IAzScope2_INTERFACE_DEFINED__

/* interface IAzScope2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzScope2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ee9fe8c9-c9f3-40e2-aa12-d1d8599727fd")
    IAzScope2 : public IAzScope
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RoleDefinitions( 
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinitions **ppRoleDefinitions) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateRoleDefinition( 
            /* [in] */ __RPC__in BSTR bstrRoleDefinitionName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinition **ppRoleDefinitions) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenRoleDefinition( 
            /* [in] */ __RPC__in BSTR bstrRoleDefinitionName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinition **ppRoleDefinitions) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteRoleDefinition( 
            /* [in] */ __RPC__in BSTR bstrRoleDefinitionName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RoleAssignments( 
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignments **ppRoleAssignments) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateRoleAssignment( 
            /* [in] */ __RPC__in BSTR bstrRoleAssignmentName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignment **ppRoleAssignment) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenRoleAssignment( 
            /* [in] */ __RPC__in BSTR bstrRoleAssignmentName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignment **ppRoleAssignment) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteRoleAssignment( 
            /* [in] */ __RPC__in BSTR bstrRoleAssignmentName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzScope2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzScope2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzScope2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzScope2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzScope2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministrators )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReaders )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministrator )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministrator )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReader )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReader )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationGroups )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroups **ppGroupCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenApplicationGroup )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *CreateApplicationGroup )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteApplicationGroup )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Roles )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoles **ppRoleCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenRole )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzRole **ppRole);
        
        HRESULT ( STDMETHODCALLTYPE *CreateRole )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzRole **ppRole);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteRole )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Tasks )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzTasks **ppTaskCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenTask )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzTask **ppTask);
        
        HRESULT ( STDMETHODCALLTYPE *CreateTask )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzTask **ppTask);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteTask )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzScope2 * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanBeDelegated )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizrulesWritable )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministratorsName )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReadersName )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministratorName )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministratorName )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReaderName )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReaderName )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoleDefinitions )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinitions **ppRoleDefinitions);
        
        HRESULT ( STDMETHODCALLTYPE *CreateRoleDefinition )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrRoleDefinitionName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinition **ppRoleDefinitions);
        
        HRESULT ( STDMETHODCALLTYPE *OpenRoleDefinition )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrRoleDefinitionName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinition **ppRoleDefinitions);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteRoleDefinition )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrRoleDefinitionName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoleAssignments )( 
            __RPC__in IAzScope2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignments **ppRoleAssignments);
        
        HRESULT ( STDMETHODCALLTYPE *CreateRoleAssignment )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrRoleAssignmentName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignment **ppRoleAssignment);
        
        HRESULT ( STDMETHODCALLTYPE *OpenRoleAssignment )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrRoleAssignmentName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignment **ppRoleAssignment);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteRoleAssignment )( 
            __RPC__in IAzScope2 * This,
            /* [in] */ __RPC__in BSTR bstrRoleAssignmentName);
        
        END_INTERFACE
    } IAzScope2Vtbl;

    interface IAzScope2
    {
        CONST_VTBL struct IAzScope2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzScope2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzScope2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzScope2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzScope2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzScope2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzScope2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzScope2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzScope2_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAzScope2_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IAzScope2_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzScope2_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzScope2_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzScope2_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzScope2_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzScope2_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzScope2_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzScope2_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzScope2_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzScope2_get_PolicyAdministrators(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministrators(This,pvarAdmins) ) 

#define IAzScope2_get_PolicyReaders(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReaders(This,pvarReaders) ) 

#define IAzScope2_AddPolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzScope2_DeletePolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzScope2_AddPolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReader(This,bstrReader,varReserved) ) 

#define IAzScope2_DeletePolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReader(This,bstrReader,varReserved) ) 

#define IAzScope2_get_ApplicationGroups(This,ppGroupCollection)	\
    ( (This)->lpVtbl -> get_ApplicationGroups(This,ppGroupCollection) ) 

#define IAzScope2_OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzScope2_CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzScope2_DeleteApplicationGroup(This,bstrGroupName,varReserved)	\
    ( (This)->lpVtbl -> DeleteApplicationGroup(This,bstrGroupName,varReserved) ) 

#define IAzScope2_get_Roles(This,ppRoleCollection)	\
    ( (This)->lpVtbl -> get_Roles(This,ppRoleCollection) ) 

#define IAzScope2_OpenRole(This,bstrRoleName,varReserved,ppRole)	\
    ( (This)->lpVtbl -> OpenRole(This,bstrRoleName,varReserved,ppRole) ) 

#define IAzScope2_CreateRole(This,bstrRoleName,varReserved,ppRole)	\
    ( (This)->lpVtbl -> CreateRole(This,bstrRoleName,varReserved,ppRole) ) 

#define IAzScope2_DeleteRole(This,bstrRoleName,varReserved)	\
    ( (This)->lpVtbl -> DeleteRole(This,bstrRoleName,varReserved) ) 

#define IAzScope2_get_Tasks(This,ppTaskCollection)	\
    ( (This)->lpVtbl -> get_Tasks(This,ppTaskCollection) ) 

#define IAzScope2_OpenTask(This,bstrTaskName,varReserved,ppTask)	\
    ( (This)->lpVtbl -> OpenTask(This,bstrTaskName,varReserved,ppTask) ) 

#define IAzScope2_CreateTask(This,bstrTaskName,varReserved,ppTask)	\
    ( (This)->lpVtbl -> CreateTask(This,bstrTaskName,varReserved,ppTask) ) 

#define IAzScope2_DeleteTask(This,bstrTaskName,varReserved)	\
    ( (This)->lpVtbl -> DeleteTask(This,bstrTaskName,varReserved) ) 

#define IAzScope2_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 

#define IAzScope2_get_CanBeDelegated(This,pfProp)	\
    ( (This)->lpVtbl -> get_CanBeDelegated(This,pfProp) ) 

#define IAzScope2_get_BizrulesWritable(This,pfProp)	\
    ( (This)->lpVtbl -> get_BizrulesWritable(This,pfProp) ) 

#define IAzScope2_get_PolicyAdministratorsName(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministratorsName(This,pvarAdmins) ) 

#define IAzScope2_get_PolicyReadersName(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReadersName(This,pvarReaders) ) 

#define IAzScope2_AddPolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzScope2_DeletePolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzScope2_AddPolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReaderName(This,bstrReader,varReserved) ) 

#define IAzScope2_DeletePolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReaderName(This,bstrReader,varReserved) ) 


#define IAzScope2_get_RoleDefinitions(This,ppRoleDefinitions)	\
    ( (This)->lpVtbl -> get_RoleDefinitions(This,ppRoleDefinitions) ) 

#define IAzScope2_CreateRoleDefinition(This,bstrRoleDefinitionName,ppRoleDefinitions)	\
    ( (This)->lpVtbl -> CreateRoleDefinition(This,bstrRoleDefinitionName,ppRoleDefinitions) ) 

#define IAzScope2_OpenRoleDefinition(This,bstrRoleDefinitionName,ppRoleDefinitions)	\
    ( (This)->lpVtbl -> OpenRoleDefinition(This,bstrRoleDefinitionName,ppRoleDefinitions) ) 

#define IAzScope2_DeleteRoleDefinition(This,bstrRoleDefinitionName)	\
    ( (This)->lpVtbl -> DeleteRoleDefinition(This,bstrRoleDefinitionName) ) 

#define IAzScope2_get_RoleAssignments(This,ppRoleAssignments)	\
    ( (This)->lpVtbl -> get_RoleAssignments(This,ppRoleAssignments) ) 

#define IAzScope2_CreateRoleAssignment(This,bstrRoleAssignmentName,ppRoleAssignment)	\
    ( (This)->lpVtbl -> CreateRoleAssignment(This,bstrRoleAssignmentName,ppRoleAssignment) ) 

#define IAzScope2_OpenRoleAssignment(This,bstrRoleAssignmentName,ppRoleAssignment)	\
    ( (This)->lpVtbl -> OpenRoleAssignment(This,bstrRoleAssignmentName,ppRoleAssignment) ) 

#define IAzScope2_DeleteRoleAssignment(This,bstrRoleAssignmentName)	\
    ( (This)->lpVtbl -> DeleteRoleAssignment(This,bstrRoleAssignmentName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzScope2_INTERFACE_DEFINED__ */


#ifndef __IAzApplication3_INTERFACE_DEFINED__
#define __IAzApplication3_INTERFACE_DEFINED__

/* interface IAzApplication3 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzApplication3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("181c845e-7196-4a7d-ac2e-020c0bb7a303")
    IAzApplication3 : public IAzApplication2
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ScopeExists( 
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbExist) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenScope2( 
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [retval][out] */ __RPC__deref_out_opt IAzScope2 **ppScope2) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateScope2( 
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [retval][out] */ __RPC__deref_out_opt IAzScope2 **ppScope2) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteScope2( 
            /* [in] */ __RPC__in BSTR bstrScopeName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RoleDefinitions( 
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinitions **ppRoleDefinitions) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateRoleDefinition( 
            /* [in] */ __RPC__in BSTR bstrRoleDefinitionName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinition **ppRoleDefinitions) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenRoleDefinition( 
            /* [in] */ __RPC__in BSTR bstrRoleDefinitionName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinition **ppRoleDefinitions) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteRoleDefinition( 
            /* [in] */ __RPC__in BSTR bstrRoleDefinitionName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RoleAssignments( 
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignments **ppRoleAssignments) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateRoleAssignment( 
            /* [in] */ __RPC__in BSTR bstrRoleAssignmentName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignment **ppRoleAssignment) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenRoleAssignment( 
            /* [in] */ __RPC__in BSTR bstrRoleAssignmentName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignment **ppRoleAssignment) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteRoleAssignment( 
            /* [in] */ __RPC__in BSTR bstrRoleAssignmentName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BizRulesEnabled( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbEnabled) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BizRulesEnabled( 
            /* [in] */ VARIANT_BOOL bEnabled) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzApplication3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzApplication3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzApplication3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzApplication3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzApplication3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AuthzInterfaceClsid )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AuthzInterfaceClsid )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Version )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GenerateAudits )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__out BOOL *pbProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GenerateAudits )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ BOOL bProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplyStoreSacl )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__out BOOL *pbProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplyStoreSacl )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ BOOL bProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministrators )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReaders )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministrator )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministrator )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReader )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReader )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Scopes )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzScopes **ppScopeCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenScope )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzScope **ppScope);
        
        HRESULT ( STDMETHODCALLTYPE *CreateScope )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzScope **ppScope);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteScope )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Operations )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzOperations **ppOperationCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenOperation )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrOperationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzOperation **ppOperation);
        
        HRESULT ( STDMETHODCALLTYPE *CreateOperation )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrOperationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzOperation **ppOperation);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteOperation )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrOperationName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Tasks )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzTasks **ppTaskCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenTask )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzTask **ppTask);
        
        HRESULT ( STDMETHODCALLTYPE *CreateTask )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzTask **ppTask);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteTask )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationGroups )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroups **ppGroupCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenApplicationGroup )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *CreateApplicationGroup )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteApplicationGroup )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Roles )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoles **ppRoleCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenRole )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzRole **ppRole);
        
        HRESULT ( STDMETHODCALLTYPE *CreateRole )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzRole **ppRole);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteRole )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeClientContextFromToken )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ ULONGLONG ullTokenHandle,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext **ppClientContext);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzApplication3 * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeClientContextFromName )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR ClientName,
            /* [defaultvalue][in] */ __RPC__in BSTR DomainName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext **ppClientContext);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DelegatedPolicyUsers )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers);
        
        HRESULT ( STDMETHODCALLTYPE *AddDelegatedPolicyUser )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteDelegatedPolicyUser )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeClientContextFromStringSid )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR SidString,
            /* [in] */ LONG lOptions,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext **ppClientContext);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministratorsName )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReadersName )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministratorName )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministratorName )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReaderName )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReaderName )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DelegatedPolicyUsersName )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers);
        
        HRESULT ( STDMETHODCALLTYPE *AddDelegatedPolicyUserName )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteDelegatedPolicyUserName )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeClientContextFromToken2 )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ ULONG ulTokenHandleLowPart,
            /* [in] */ ULONG ulTokenHandleHighPart,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext2 **ppClientContext);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeClientContext2 )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR IdentifyingString,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext2 **ppClientContext);
        
        HRESULT ( STDMETHODCALLTYPE *ScopeExists )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbExist);
        
        HRESULT ( STDMETHODCALLTYPE *OpenScope2 )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [retval][out] */ __RPC__deref_out_opt IAzScope2 **ppScope2);
        
        HRESULT ( STDMETHODCALLTYPE *CreateScope2 )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [retval][out] */ __RPC__deref_out_opt IAzScope2 **ppScope2);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteScope2 )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoleDefinitions )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinitions **ppRoleDefinitions);
        
        HRESULT ( STDMETHODCALLTYPE *CreateRoleDefinition )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrRoleDefinitionName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinition **ppRoleDefinitions);
        
        HRESULT ( STDMETHODCALLTYPE *OpenRoleDefinition )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrRoleDefinitionName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinition **ppRoleDefinitions);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteRoleDefinition )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrRoleDefinitionName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoleAssignments )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignments **ppRoleAssignments);
        
        HRESULT ( STDMETHODCALLTYPE *CreateRoleAssignment )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrRoleAssignmentName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignment **ppRoleAssignment);
        
        HRESULT ( STDMETHODCALLTYPE *OpenRoleAssignment )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrRoleAssignmentName,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignment **ppRoleAssignment);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteRoleAssignment )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ __RPC__in BSTR bstrRoleAssignmentName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRulesEnabled )( 
            __RPC__in IAzApplication3 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbEnabled);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BizRulesEnabled )( 
            __RPC__in IAzApplication3 * This,
            /* [in] */ VARIANT_BOOL bEnabled);
        
        END_INTERFACE
    } IAzApplication3Vtbl;

    interface IAzApplication3
    {
        CONST_VTBL struct IAzApplication3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzApplication3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzApplication3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzApplication3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzApplication3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzApplication3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzApplication3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzApplication3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzApplication3_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAzApplication3_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IAzApplication3_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzApplication3_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzApplication3_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzApplication3_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzApplication3_get_AuthzInterfaceClsid(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_AuthzInterfaceClsid(This,pbstrProp) ) 

#define IAzApplication3_put_AuthzInterfaceClsid(This,bstrProp)	\
    ( (This)->lpVtbl -> put_AuthzInterfaceClsid(This,bstrProp) ) 

#define IAzApplication3_get_Version(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_Version(This,pbstrProp) ) 

#define IAzApplication3_put_Version(This,bstrProp)	\
    ( (This)->lpVtbl -> put_Version(This,bstrProp) ) 

#define IAzApplication3_get_GenerateAudits(This,pbProp)	\
    ( (This)->lpVtbl -> get_GenerateAudits(This,pbProp) ) 

#define IAzApplication3_put_GenerateAudits(This,bProp)	\
    ( (This)->lpVtbl -> put_GenerateAudits(This,bProp) ) 

#define IAzApplication3_get_ApplyStoreSacl(This,pbProp)	\
    ( (This)->lpVtbl -> get_ApplyStoreSacl(This,pbProp) ) 

#define IAzApplication3_put_ApplyStoreSacl(This,bProp)	\
    ( (This)->lpVtbl -> put_ApplyStoreSacl(This,bProp) ) 

#define IAzApplication3_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzApplication3_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzApplication3_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzApplication3_get_PolicyAdministrators(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministrators(This,pvarAdmins) ) 

#define IAzApplication3_get_PolicyReaders(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReaders(This,pvarReaders) ) 

#define IAzApplication3_AddPolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzApplication3_DeletePolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzApplication3_AddPolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReader(This,bstrReader,varReserved) ) 

#define IAzApplication3_DeletePolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReader(This,bstrReader,varReserved) ) 

#define IAzApplication3_get_Scopes(This,ppScopeCollection)	\
    ( (This)->lpVtbl -> get_Scopes(This,ppScopeCollection) ) 

#define IAzApplication3_OpenScope(This,bstrScopeName,varReserved,ppScope)	\
    ( (This)->lpVtbl -> OpenScope(This,bstrScopeName,varReserved,ppScope) ) 

#define IAzApplication3_CreateScope(This,bstrScopeName,varReserved,ppScope)	\
    ( (This)->lpVtbl -> CreateScope(This,bstrScopeName,varReserved,ppScope) ) 

#define IAzApplication3_DeleteScope(This,bstrScopeName,varReserved)	\
    ( (This)->lpVtbl -> DeleteScope(This,bstrScopeName,varReserved) ) 

#define IAzApplication3_get_Operations(This,ppOperationCollection)	\
    ( (This)->lpVtbl -> get_Operations(This,ppOperationCollection) ) 

#define IAzApplication3_OpenOperation(This,bstrOperationName,varReserved,ppOperation)	\
    ( (This)->lpVtbl -> OpenOperation(This,bstrOperationName,varReserved,ppOperation) ) 

#define IAzApplication3_CreateOperation(This,bstrOperationName,varReserved,ppOperation)	\
    ( (This)->lpVtbl -> CreateOperation(This,bstrOperationName,varReserved,ppOperation) ) 

#define IAzApplication3_DeleteOperation(This,bstrOperationName,varReserved)	\
    ( (This)->lpVtbl -> DeleteOperation(This,bstrOperationName,varReserved) ) 

#define IAzApplication3_get_Tasks(This,ppTaskCollection)	\
    ( (This)->lpVtbl -> get_Tasks(This,ppTaskCollection) ) 

#define IAzApplication3_OpenTask(This,bstrTaskName,varReserved,ppTask)	\
    ( (This)->lpVtbl -> OpenTask(This,bstrTaskName,varReserved,ppTask) ) 

#define IAzApplication3_CreateTask(This,bstrTaskName,varReserved,ppTask)	\
    ( (This)->lpVtbl -> CreateTask(This,bstrTaskName,varReserved,ppTask) ) 

#define IAzApplication3_DeleteTask(This,bstrTaskName,varReserved)	\
    ( (This)->lpVtbl -> DeleteTask(This,bstrTaskName,varReserved) ) 

#define IAzApplication3_get_ApplicationGroups(This,ppGroupCollection)	\
    ( (This)->lpVtbl -> get_ApplicationGroups(This,ppGroupCollection) ) 

#define IAzApplication3_OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzApplication3_CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzApplication3_DeleteApplicationGroup(This,bstrGroupName,varReserved)	\
    ( (This)->lpVtbl -> DeleteApplicationGroup(This,bstrGroupName,varReserved) ) 

#define IAzApplication3_get_Roles(This,ppRoleCollection)	\
    ( (This)->lpVtbl -> get_Roles(This,ppRoleCollection) ) 

#define IAzApplication3_OpenRole(This,bstrRoleName,varReserved,ppRole)	\
    ( (This)->lpVtbl -> OpenRole(This,bstrRoleName,varReserved,ppRole) ) 

#define IAzApplication3_CreateRole(This,bstrRoleName,varReserved,ppRole)	\
    ( (This)->lpVtbl -> CreateRole(This,bstrRoleName,varReserved,ppRole) ) 

#define IAzApplication3_DeleteRole(This,bstrRoleName,varReserved)	\
    ( (This)->lpVtbl -> DeleteRole(This,bstrRoleName,varReserved) ) 

#define IAzApplication3_InitializeClientContextFromToken(This,ullTokenHandle,varReserved,ppClientContext)	\
    ( (This)->lpVtbl -> InitializeClientContextFromToken(This,ullTokenHandle,varReserved,ppClientContext) ) 

#define IAzApplication3_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzApplication3_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzApplication3_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 

#define IAzApplication3_InitializeClientContextFromName(This,ClientName,DomainName,varReserved,ppClientContext)	\
    ( (This)->lpVtbl -> InitializeClientContextFromName(This,ClientName,DomainName,varReserved,ppClientContext) ) 

#define IAzApplication3_get_DelegatedPolicyUsers(This,pvarDelegatedPolicyUsers)	\
    ( (This)->lpVtbl -> get_DelegatedPolicyUsers(This,pvarDelegatedPolicyUsers) ) 

#define IAzApplication3_AddDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> AddDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzApplication3_DeleteDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> DeleteDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzApplication3_InitializeClientContextFromStringSid(This,SidString,lOptions,varReserved,ppClientContext)	\
    ( (This)->lpVtbl -> InitializeClientContextFromStringSid(This,SidString,lOptions,varReserved,ppClientContext) ) 

#define IAzApplication3_get_PolicyAdministratorsName(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministratorsName(This,pvarAdmins) ) 

#define IAzApplication3_get_PolicyReadersName(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReadersName(This,pvarReaders) ) 

#define IAzApplication3_AddPolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzApplication3_DeletePolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzApplication3_AddPolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReaderName(This,bstrReader,varReserved) ) 

#define IAzApplication3_DeletePolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReaderName(This,bstrReader,varReserved) ) 

#define IAzApplication3_get_DelegatedPolicyUsersName(This,pvarDelegatedPolicyUsers)	\
    ( (This)->lpVtbl -> get_DelegatedPolicyUsersName(This,pvarDelegatedPolicyUsers) ) 

#define IAzApplication3_AddDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> AddDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzApplication3_DeleteDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> DeleteDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved) ) 


#define IAzApplication3_InitializeClientContextFromToken2(This,ulTokenHandleLowPart,ulTokenHandleHighPart,varReserved,ppClientContext)	\
    ( (This)->lpVtbl -> InitializeClientContextFromToken2(This,ulTokenHandleLowPart,ulTokenHandleHighPart,varReserved,ppClientContext) ) 

#define IAzApplication3_InitializeClientContext2(This,IdentifyingString,varReserved,ppClientContext)	\
    ( (This)->lpVtbl -> InitializeClientContext2(This,IdentifyingString,varReserved,ppClientContext) ) 


#define IAzApplication3_ScopeExists(This,bstrScopeName,pbExist)	\
    ( (This)->lpVtbl -> ScopeExists(This,bstrScopeName,pbExist) ) 

#define IAzApplication3_OpenScope2(This,bstrScopeName,ppScope2)	\
    ( (This)->lpVtbl -> OpenScope2(This,bstrScopeName,ppScope2) ) 

#define IAzApplication3_CreateScope2(This,bstrScopeName,ppScope2)	\
    ( (This)->lpVtbl -> CreateScope2(This,bstrScopeName,ppScope2) ) 

#define IAzApplication3_DeleteScope2(This,bstrScopeName)	\
    ( (This)->lpVtbl -> DeleteScope2(This,bstrScopeName) ) 

#define IAzApplication3_get_RoleDefinitions(This,ppRoleDefinitions)	\
    ( (This)->lpVtbl -> get_RoleDefinitions(This,ppRoleDefinitions) ) 

#define IAzApplication3_CreateRoleDefinition(This,bstrRoleDefinitionName,ppRoleDefinitions)	\
    ( (This)->lpVtbl -> CreateRoleDefinition(This,bstrRoleDefinitionName,ppRoleDefinitions) ) 

#define IAzApplication3_OpenRoleDefinition(This,bstrRoleDefinitionName,ppRoleDefinitions)	\
    ( (This)->lpVtbl -> OpenRoleDefinition(This,bstrRoleDefinitionName,ppRoleDefinitions) ) 

#define IAzApplication3_DeleteRoleDefinition(This,bstrRoleDefinitionName)	\
    ( (This)->lpVtbl -> DeleteRoleDefinition(This,bstrRoleDefinitionName) ) 

#define IAzApplication3_get_RoleAssignments(This,ppRoleAssignments)	\
    ( (This)->lpVtbl -> get_RoleAssignments(This,ppRoleAssignments) ) 

#define IAzApplication3_CreateRoleAssignment(This,bstrRoleAssignmentName,ppRoleAssignment)	\
    ( (This)->lpVtbl -> CreateRoleAssignment(This,bstrRoleAssignmentName,ppRoleAssignment) ) 

#define IAzApplication3_OpenRoleAssignment(This,bstrRoleAssignmentName,ppRoleAssignment)	\
    ( (This)->lpVtbl -> OpenRoleAssignment(This,bstrRoleAssignmentName,ppRoleAssignment) ) 

#define IAzApplication3_DeleteRoleAssignment(This,bstrRoleAssignmentName)	\
    ( (This)->lpVtbl -> DeleteRoleAssignment(This,bstrRoleAssignmentName) ) 

#define IAzApplication3_get_BizRulesEnabled(This,pbEnabled)	\
    ( (This)->lpVtbl -> get_BizRulesEnabled(This,pbEnabled) ) 

#define IAzApplication3_put_BizRulesEnabled(This,bEnabled)	\
    ( (This)->lpVtbl -> put_BizRulesEnabled(This,bEnabled) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzApplication3_INTERFACE_DEFINED__ */


#ifndef __IAzOperation2_INTERFACE_DEFINED__
#define __IAzOperation2_INTERFACE_DEFINED__

/* interface IAzOperation2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzOperation2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1f5ea01f-44a2-4184-9c48-a75b4dcc8ccc")
    IAzOperation2 : public IAzOperation
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RoleAssignments( 
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [in] */ VARIANT_BOOL bRecursive,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignments **ppRoleAssignments) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzOperation2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzOperation2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzOperation2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzOperation2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzOperation2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzOperation2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzOperation2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzOperation2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzOperation2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in IAzOperation2 * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzOperation2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzOperation2 * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzOperation2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzOperation2 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OperationID )( 
            __RPC__in IAzOperation2 * This,
            /* [retval][out] */ __RPC__out LONG *plProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OperationID )( 
            __RPC__in IAzOperation2 * This,
            /* [in] */ LONG lProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzOperation2 * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzOperation2 * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzOperation2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzOperation2 * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *RoleAssignments )( 
            __RPC__in IAzOperation2 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [in] */ VARIANT_BOOL bRecursive,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignments **ppRoleAssignments);
        
        END_INTERFACE
    } IAzOperation2Vtbl;

    interface IAzOperation2
    {
        CONST_VTBL struct IAzOperation2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzOperation2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzOperation2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzOperation2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzOperation2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzOperation2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzOperation2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzOperation2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzOperation2_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAzOperation2_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IAzOperation2_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzOperation2_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzOperation2_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzOperation2_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzOperation2_get_OperationID(This,plProp)	\
    ( (This)->lpVtbl -> get_OperationID(This,plProp) ) 

#define IAzOperation2_put_OperationID(This,lProp)	\
    ( (This)->lpVtbl -> put_OperationID(This,lProp) ) 

#define IAzOperation2_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzOperation2_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzOperation2_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzOperation2_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 


#define IAzOperation2_RoleAssignments(This,bstrScopeName,bRecursive,ppRoleAssignments)	\
    ( (This)->lpVtbl -> RoleAssignments(This,bstrScopeName,bRecursive,ppRoleAssignments) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzOperation2_INTERFACE_DEFINED__ */


#ifndef __IAzRoleDefinitions_INTERFACE_DEFINED__
#define __IAzRoleDefinitions_INTERFACE_DEFINED__

/* interface IAzRoleDefinitions */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzRoleDefinitions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("881f25a5-d755-4550-957a-d503a3b34001")
    IAzRoleDefinitions : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out LONG *plCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzRoleDefinitionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzRoleDefinitions * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzRoleDefinitions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzRoleDefinitions * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzRoleDefinitions * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzRoleDefinitions * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzRoleDefinitions * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzRoleDefinitions * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAzRoleDefinitions * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAzRoleDefinitions * This,
            /* [retval][out] */ __RPC__out LONG *plCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IAzRoleDefinitions * This,
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr);
        
        END_INTERFACE
    } IAzRoleDefinitionsVtbl;

    interface IAzRoleDefinitions
    {
        CONST_VTBL struct IAzRoleDefinitionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzRoleDefinitions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzRoleDefinitions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzRoleDefinitions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzRoleDefinitions_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzRoleDefinitions_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzRoleDefinitions_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzRoleDefinitions_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzRoleDefinitions_get_Item(This,Index,pvarObtPtr)	\
    ( (This)->lpVtbl -> get_Item(This,Index,pvarObtPtr) ) 

#define IAzRoleDefinitions_get_Count(This,plCount)	\
    ( (This)->lpVtbl -> get_Count(This,plCount) ) 

#define IAzRoleDefinitions_get__NewEnum(This,ppEnumPtr)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnumPtr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzRoleDefinitions_INTERFACE_DEFINED__ */


#ifndef __IAzRoleDefinition_INTERFACE_DEFINED__
#define __IAzRoleDefinition_INTERFACE_DEFINED__

/* interface IAzRoleDefinition */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzRoleDefinition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d97fcea1-2599-44f1-9fc3-58e9fbe09466")
    IAzRoleDefinition : public IAzTask
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RoleAssignments( 
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [in] */ VARIANT_BOOL bRecursive,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignments **ppRoleAssignments) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddRoleDefinition( 
            /* [in] */ __RPC__in BSTR bstrRoleDefinition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteRoleDefinition( 
            /* [in] */ __RPC__in BSTR bstrRoleDefinition) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RoleDefinitions( 
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinitions **ppRoleDefinitions) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzRoleDefinitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzRoleDefinition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzRoleDefinition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzRoleDefinition * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzRoleDefinition * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzRoleDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzRoleDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzRoleDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRule )( 
            __RPC__in IAzRoleDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BizRule )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRuleLanguage )( 
            __RPC__in IAzRoleDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BizRuleLanguage )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRuleImportedPath )( 
            __RPC__in IAzRoleDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BizRuleImportedPath )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsRoleDefinition )( 
            __RPC__in IAzRoleDefinition * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsRoleDefinition )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ BOOL fProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Operations )( 
            __RPC__in IAzRoleDefinition * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Tasks )( 
            __RPC__in IAzRoleDefinition * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *AddOperation )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in BSTR bstrOp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteOperation )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in BSTR bstrOp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddTask )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in BSTR bstrTask,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteTask )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in BSTR bstrTask,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzRoleDefinition * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzRoleDefinition * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *RoleAssignments )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [in] */ VARIANT_BOOL bRecursive,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignments **ppRoleAssignments);
        
        HRESULT ( STDMETHODCALLTYPE *AddRoleDefinition )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in BSTR bstrRoleDefinition);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteRoleDefinition )( 
            __RPC__in IAzRoleDefinition * This,
            /* [in] */ __RPC__in BSTR bstrRoleDefinition);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoleDefinitions )( 
            __RPC__in IAzRoleDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinitions **ppRoleDefinitions);
        
        END_INTERFACE
    } IAzRoleDefinitionVtbl;

    interface IAzRoleDefinition
    {
        CONST_VTBL struct IAzRoleDefinitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzRoleDefinition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzRoleDefinition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzRoleDefinition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzRoleDefinition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzRoleDefinition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzRoleDefinition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzRoleDefinition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzRoleDefinition_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAzRoleDefinition_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IAzRoleDefinition_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzRoleDefinition_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzRoleDefinition_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzRoleDefinition_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzRoleDefinition_get_BizRule(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_BizRule(This,pbstrProp) ) 

#define IAzRoleDefinition_put_BizRule(This,bstrProp)	\
    ( (This)->lpVtbl -> put_BizRule(This,bstrProp) ) 

#define IAzRoleDefinition_get_BizRuleLanguage(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_BizRuleLanguage(This,pbstrProp) ) 

#define IAzRoleDefinition_put_BizRuleLanguage(This,bstrProp)	\
    ( (This)->lpVtbl -> put_BizRuleLanguage(This,bstrProp) ) 

#define IAzRoleDefinition_get_BizRuleImportedPath(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_BizRuleImportedPath(This,pbstrProp) ) 

#define IAzRoleDefinition_put_BizRuleImportedPath(This,bstrProp)	\
    ( (This)->lpVtbl -> put_BizRuleImportedPath(This,bstrProp) ) 

#define IAzRoleDefinition_get_IsRoleDefinition(This,pfProp)	\
    ( (This)->lpVtbl -> get_IsRoleDefinition(This,pfProp) ) 

#define IAzRoleDefinition_put_IsRoleDefinition(This,fProp)	\
    ( (This)->lpVtbl -> put_IsRoleDefinition(This,fProp) ) 

#define IAzRoleDefinition_get_Operations(This,pvarProp)	\
    ( (This)->lpVtbl -> get_Operations(This,pvarProp) ) 

#define IAzRoleDefinition_get_Tasks(This,pvarProp)	\
    ( (This)->lpVtbl -> get_Tasks(This,pvarProp) ) 

#define IAzRoleDefinition_AddOperation(This,bstrOp,varReserved)	\
    ( (This)->lpVtbl -> AddOperation(This,bstrOp,varReserved) ) 

#define IAzRoleDefinition_DeleteOperation(This,bstrOp,varReserved)	\
    ( (This)->lpVtbl -> DeleteOperation(This,bstrOp,varReserved) ) 

#define IAzRoleDefinition_AddTask(This,bstrTask,varReserved)	\
    ( (This)->lpVtbl -> AddTask(This,bstrTask,varReserved) ) 

#define IAzRoleDefinition_DeleteTask(This,bstrTask,varReserved)	\
    ( (This)->lpVtbl -> DeleteTask(This,bstrTask,varReserved) ) 

#define IAzRoleDefinition_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzRoleDefinition_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzRoleDefinition_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzRoleDefinition_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzRoleDefinition_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzRoleDefinition_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 


#define IAzRoleDefinition_RoleAssignments(This,bstrScopeName,bRecursive,ppRoleAssignments)	\
    ( (This)->lpVtbl -> RoleAssignments(This,bstrScopeName,bRecursive,ppRoleAssignments) ) 

#define IAzRoleDefinition_AddRoleDefinition(This,bstrRoleDefinition)	\
    ( (This)->lpVtbl -> AddRoleDefinition(This,bstrRoleDefinition) ) 

#define IAzRoleDefinition_DeleteRoleDefinition(This,bstrRoleDefinition)	\
    ( (This)->lpVtbl -> DeleteRoleDefinition(This,bstrRoleDefinition) ) 

#define IAzRoleDefinition_get_RoleDefinitions(This,ppRoleDefinitions)	\
    ( (This)->lpVtbl -> get_RoleDefinitions(This,ppRoleDefinitions) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzRoleDefinition_INTERFACE_DEFINED__ */


#ifndef __IAzRoleAssignment_INTERFACE_DEFINED__
#define __IAzRoleAssignment_INTERFACE_DEFINED__

/* interface IAzRoleAssignment */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzRoleAssignment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("55647d31-0d5a-4fa3-b4ac-2b5f9ad5ab76")
    IAzRoleAssignment : public IAzRole
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddRoleDefinition( 
            /* [in] */ __RPC__in BSTR bstrRoleDefinition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteRoleDefinition( 
            /* [in] */ __RPC__in BSTR bstrRoleDefinition) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RoleDefinitions( 
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinitions **ppRoleDefinitions) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Scope( 
            /* [retval][out] */ __RPC__deref_out_opt IAzScope **ppScope) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzRoleAssignmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzRoleAssignment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzRoleAssignment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzRoleAssignment * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzRoleAssignment * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzRoleAssignment * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzRoleAssignment * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzRoleAssignment * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        HRESULT ( STDMETHODCALLTYPE *AddAppMember )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAppMember )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddTask )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteTask )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddOperation )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteOperation )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddMember )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteMember )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzRoleAssignment * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AppMembers )( 
            __RPC__in IAzRoleAssignment * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            __RPC__in IAzRoleAssignment * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Operations )( 
            __RPC__in IAzRoleAssignment * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Tasks )( 
            __RPC__in IAzRoleAssignment * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzRoleAssignment * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddMemberName )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteMemberName )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MembersName )( 
            __RPC__in IAzRoleAssignment * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *AddRoleDefinition )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrRoleDefinition);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteRoleDefinition )( 
            __RPC__in IAzRoleAssignment * This,
            /* [in] */ __RPC__in BSTR bstrRoleDefinition);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoleDefinitions )( 
            __RPC__in IAzRoleAssignment * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleDefinitions **ppRoleDefinitions);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Scope )( 
            __RPC__in IAzRoleAssignment * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzScope **ppScope);
        
        END_INTERFACE
    } IAzRoleAssignmentVtbl;

    interface IAzRoleAssignment
    {
        CONST_VTBL struct IAzRoleAssignmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzRoleAssignment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzRoleAssignment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzRoleAssignment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzRoleAssignment_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzRoleAssignment_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzRoleAssignment_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzRoleAssignment_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzRoleAssignment_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAzRoleAssignment_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IAzRoleAssignment_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzRoleAssignment_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzRoleAssignment_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzRoleAssignment_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzRoleAssignment_AddAppMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddAppMember(This,bstrProp,varReserved) ) 

#define IAzRoleAssignment_DeleteAppMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteAppMember(This,bstrProp,varReserved) ) 

#define IAzRoleAssignment_AddTask(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddTask(This,bstrProp,varReserved) ) 

#define IAzRoleAssignment_DeleteTask(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteTask(This,bstrProp,varReserved) ) 

#define IAzRoleAssignment_AddOperation(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddOperation(This,bstrProp,varReserved) ) 

#define IAzRoleAssignment_DeleteOperation(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteOperation(This,bstrProp,varReserved) ) 

#define IAzRoleAssignment_AddMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddMember(This,bstrProp,varReserved) ) 

#define IAzRoleAssignment_DeleteMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteMember(This,bstrProp,varReserved) ) 

#define IAzRoleAssignment_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzRoleAssignment_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzRoleAssignment_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzRoleAssignment_get_AppMembers(This,pvarProp)	\
    ( (This)->lpVtbl -> get_AppMembers(This,pvarProp) ) 

#define IAzRoleAssignment_get_Members(This,pvarProp)	\
    ( (This)->lpVtbl -> get_Members(This,pvarProp) ) 

#define IAzRoleAssignment_get_Operations(This,pvarProp)	\
    ( (This)->lpVtbl -> get_Operations(This,pvarProp) ) 

#define IAzRoleAssignment_get_Tasks(This,pvarProp)	\
    ( (This)->lpVtbl -> get_Tasks(This,pvarProp) ) 

#define IAzRoleAssignment_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzRoleAssignment_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzRoleAssignment_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 

#define IAzRoleAssignment_AddMemberName(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddMemberName(This,bstrProp,varReserved) ) 

#define IAzRoleAssignment_DeleteMemberName(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteMemberName(This,bstrProp,varReserved) ) 

#define IAzRoleAssignment_get_MembersName(This,pvarProp)	\
    ( (This)->lpVtbl -> get_MembersName(This,pvarProp) ) 


#define IAzRoleAssignment_AddRoleDefinition(This,bstrRoleDefinition)	\
    ( (This)->lpVtbl -> AddRoleDefinition(This,bstrRoleDefinition) ) 

#define IAzRoleAssignment_DeleteRoleDefinition(This,bstrRoleDefinition)	\
    ( (This)->lpVtbl -> DeleteRoleDefinition(This,bstrRoleDefinition) ) 

#define IAzRoleAssignment_get_RoleDefinitions(This,ppRoleDefinitions)	\
    ( (This)->lpVtbl -> get_RoleDefinitions(This,ppRoleDefinitions) ) 

#define IAzRoleAssignment_get_Scope(This,ppScope)	\
    ( (This)->lpVtbl -> get_Scope(This,ppScope) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzRoleAssignment_INTERFACE_DEFINED__ */


#ifndef __IAzRoleAssignments_INTERFACE_DEFINED__
#define __IAzRoleAssignments_INTERFACE_DEFINED__

/* interface IAzRoleAssignments */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzRoleAssignments;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9c80b900-fceb-4d73-a0f4-c83b0bbf2481")
    IAzRoleAssignments : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out LONG *plCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzRoleAssignmentsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzRoleAssignments * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzRoleAssignments * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzRoleAssignments * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzRoleAssignments * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzRoleAssignments * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzRoleAssignments * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzRoleAssignments * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAzRoleAssignments * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pvarObtPtr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAzRoleAssignments * This,
            /* [retval][out] */ __RPC__out LONG *plCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IAzRoleAssignments * This,
            /* [retval][out] */ __RPC__deref_out_opt LPUNKNOWN *ppEnumPtr);
        
        END_INTERFACE
    } IAzRoleAssignmentsVtbl;

    interface IAzRoleAssignments
    {
        CONST_VTBL struct IAzRoleAssignmentsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzRoleAssignments_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzRoleAssignments_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzRoleAssignments_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzRoleAssignments_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzRoleAssignments_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzRoleAssignments_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzRoleAssignments_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzRoleAssignments_get_Item(This,Index,pvarObtPtr)	\
    ( (This)->lpVtbl -> get_Item(This,Index,pvarObtPtr) ) 

#define IAzRoleAssignments_get_Count(This,plCount)	\
    ( (This)->lpVtbl -> get_Count(This,plCount) ) 

#define IAzRoleAssignments_get__NewEnum(This,ppEnumPtr)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnumPtr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzRoleAssignments_INTERFACE_DEFINED__ */


#ifndef __IAzPrincipalLocator_INTERFACE_DEFINED__
#define __IAzPrincipalLocator_INTERFACE_DEFINED__

/* interface IAzPrincipalLocator */
/* [unique][dual][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IAzPrincipalLocator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e5c3507d-ad6a-4992-9c7f-74ab480b44cc")
    IAzPrincipalLocator : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NameResolver( 
            /* [retval][out] */ __RPC__deref_out_opt IAzNameResolver **ppNameResolver) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ObjectPicker( 
            /* [retval][out] */ __RPC__deref_out_opt IAzObjectPicker **ppObjectPicker) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzPrincipalLocatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzPrincipalLocator * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzPrincipalLocator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzPrincipalLocator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzPrincipalLocator * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzPrincipalLocator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzPrincipalLocator * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzPrincipalLocator * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NameResolver )( 
            __RPC__in IAzPrincipalLocator * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzNameResolver **ppNameResolver);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ObjectPicker )( 
            __RPC__in IAzPrincipalLocator * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzObjectPicker **ppObjectPicker);
        
        END_INTERFACE
    } IAzPrincipalLocatorVtbl;

    interface IAzPrincipalLocator
    {
        CONST_VTBL struct IAzPrincipalLocatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzPrincipalLocator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzPrincipalLocator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzPrincipalLocator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzPrincipalLocator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzPrincipalLocator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzPrincipalLocator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzPrincipalLocator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzPrincipalLocator_get_NameResolver(This,ppNameResolver)	\
    ( (This)->lpVtbl -> get_NameResolver(This,ppNameResolver) ) 

#define IAzPrincipalLocator_get_ObjectPicker(This,ppObjectPicker)	\
    ( (This)->lpVtbl -> get_ObjectPicker(This,ppObjectPicker) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzPrincipalLocator_INTERFACE_DEFINED__ */


#ifndef __IAzNameResolver_INTERFACE_DEFINED__
#define __IAzNameResolver_INTERFACE_DEFINED__

/* interface IAzNameResolver */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzNameResolver;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("504d0f15-73e2-43df-a870-a64f40714f53")
    IAzNameResolver : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE NameFromSid( 
            /* [in] */ __RPC__in BSTR bstrSid,
            /* [out] */ __RPC__out long *pSidType,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NamesFromSids( 
            /* [in] */ VARIANT vSids,
            /* [out] */ __RPC__out VARIANT *pvSidTypes,
            /* [retval][out] */ __RPC__out VARIANT *pvNames) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzNameResolverVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzNameResolver * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzNameResolver * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzNameResolver * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzNameResolver * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzNameResolver * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzNameResolver * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzNameResolver * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *NameFromSid )( 
            __RPC__in IAzNameResolver * This,
            /* [in] */ __RPC__in BSTR bstrSid,
            /* [out] */ __RPC__out long *pSidType,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        HRESULT ( STDMETHODCALLTYPE *NamesFromSids )( 
            __RPC__in IAzNameResolver * This,
            /* [in] */ VARIANT vSids,
            /* [out] */ __RPC__out VARIANT *pvSidTypes,
            /* [retval][out] */ __RPC__out VARIANT *pvNames);
        
        END_INTERFACE
    } IAzNameResolverVtbl;

    interface IAzNameResolver
    {
        CONST_VTBL struct IAzNameResolverVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzNameResolver_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzNameResolver_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzNameResolver_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzNameResolver_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzNameResolver_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzNameResolver_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzNameResolver_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzNameResolver_NameFromSid(This,bstrSid,pSidType,pbstrName)	\
    ( (This)->lpVtbl -> NameFromSid(This,bstrSid,pSidType,pbstrName) ) 

#define IAzNameResolver_NamesFromSids(This,vSids,pvSidTypes,pvNames)	\
    ( (This)->lpVtbl -> NamesFromSids(This,vSids,pvSidTypes,pvNames) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzNameResolver_INTERFACE_DEFINED__ */


#ifndef __IAzObjectPicker_INTERFACE_DEFINED__
#define __IAzObjectPicker_INTERFACE_DEFINED__

/* interface IAzObjectPicker */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzObjectPicker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("63130a48-699a-42d8-bf01-c62ac3fb79f9")
    IAzObjectPicker : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPrincipals( 
            /* [in] */ __RPC__in HWND hParentWnd,
            /* [in] */ __RPC__in BSTR bstrTitle,
            /* [out] */ __RPC__out VARIANT *pvSidTypes,
            /* [out] */ __RPC__out VARIANT *pvNames,
            /* [retval][out] */ __RPC__out VARIANT *pvSids) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzObjectPickerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzObjectPicker * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzObjectPicker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzObjectPicker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzObjectPicker * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzObjectPicker * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzObjectPicker * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzObjectPicker * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *GetPrincipals )( 
            __RPC__in IAzObjectPicker * This,
            /* [in] */ __RPC__in HWND hParentWnd,
            /* [in] */ __RPC__in BSTR bstrTitle,
            /* [out] */ __RPC__out VARIANT *pvSidTypes,
            /* [out] */ __RPC__out VARIANT *pvNames,
            /* [retval][out] */ __RPC__out VARIANT *pvSids);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzObjectPicker * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        END_INTERFACE
    } IAzObjectPickerVtbl;

    interface IAzObjectPicker
    {
        CONST_VTBL struct IAzObjectPickerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzObjectPicker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzObjectPicker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzObjectPicker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzObjectPicker_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzObjectPicker_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzObjectPicker_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzObjectPicker_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzObjectPicker_GetPrincipals(This,hParentWnd,bstrTitle,pvSidTypes,pvNames,pvSids)	\
    ( (This)->lpVtbl -> GetPrincipals(This,hParentWnd,bstrTitle,pvSidTypes,pvNames,pvSids) ) 

#define IAzObjectPicker_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzObjectPicker_INTERFACE_DEFINED__ */


#ifndef __IAzApplicationGroup2_INTERFACE_DEFINED__
#define __IAzApplicationGroup2_INTERFACE_DEFINED__

/* interface IAzApplicationGroup2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzApplicationGroup2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3f0613fc-b71a-464e-a11d-5b881a56cefa")
    IAzApplicationGroup2 : public IAzApplicationGroup
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BizRule( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BizRule( 
            /* [in] */ __RPC__in BSTR bstrProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BizRuleLanguage( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BizRuleLanguage( 
            /* [in] */ __RPC__in BSTR bstrProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BizRuleImportedPath( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BizRuleImportedPath( 
            /* [in] */ __RPC__in BSTR bstrProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RoleAssignments( 
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [in] */ VARIANT_BOOL bRecursive,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignments **ppRoleAssignments) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzApplicationGroup2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzApplicationGroup2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzApplicationGroup2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzApplicationGroup2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [retval][out] */ __RPC__out LONG *plProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ LONG lProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LdapQuery )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LdapQuery )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AppMembers )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AppNonMembers )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Members )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NonMembers )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        HRESULT ( STDMETHODCALLTYPE *AddAppMember )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAppMember )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddAppNonMember )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAppNonMember )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddMember )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteMember )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddNonMember )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteNonMember )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddMemberName )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteMemberName )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddNonMemberName )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteNonMemberName )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MembersName )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NonMembersName )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRule )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BizRule )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRuleLanguage )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BizRuleLanguage )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRuleImportedPath )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BizRuleImportedPath )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        HRESULT ( STDMETHODCALLTYPE *RoleAssignments )( 
            __RPC__in IAzApplicationGroup2 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [in] */ VARIANT_BOOL bRecursive,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignments **ppRoleAssignments);
        
        END_INTERFACE
    } IAzApplicationGroup2Vtbl;

    interface IAzApplicationGroup2
    {
        CONST_VTBL struct IAzApplicationGroup2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzApplicationGroup2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzApplicationGroup2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzApplicationGroup2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzApplicationGroup2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzApplicationGroup2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzApplicationGroup2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzApplicationGroup2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzApplicationGroup2_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAzApplicationGroup2_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IAzApplicationGroup2_get_Type(This,plProp)	\
    ( (This)->lpVtbl -> get_Type(This,plProp) ) 

#define IAzApplicationGroup2_put_Type(This,lProp)	\
    ( (This)->lpVtbl -> put_Type(This,lProp) ) 

#define IAzApplicationGroup2_get_LdapQuery(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_LdapQuery(This,pbstrProp) ) 

#define IAzApplicationGroup2_put_LdapQuery(This,bstrProp)	\
    ( (This)->lpVtbl -> put_LdapQuery(This,bstrProp) ) 

#define IAzApplicationGroup2_get_AppMembers(This,pvarProp)	\
    ( (This)->lpVtbl -> get_AppMembers(This,pvarProp) ) 

#define IAzApplicationGroup2_get_AppNonMembers(This,pvarProp)	\
    ( (This)->lpVtbl -> get_AppNonMembers(This,pvarProp) ) 

#define IAzApplicationGroup2_get_Members(This,pvarProp)	\
    ( (This)->lpVtbl -> get_Members(This,pvarProp) ) 

#define IAzApplicationGroup2_get_NonMembers(This,pvarProp)	\
    ( (This)->lpVtbl -> get_NonMembers(This,pvarProp) ) 

#define IAzApplicationGroup2_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzApplicationGroup2_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzApplicationGroup2_AddAppMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddAppMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup2_DeleteAppMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteAppMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup2_AddAppNonMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddAppNonMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup2_DeleteAppNonMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteAppNonMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup2_AddMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup2_DeleteMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup2_AddNonMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddNonMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup2_DeleteNonMember(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteNonMember(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup2_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzApplicationGroup2_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzApplicationGroup2_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzApplicationGroup2_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzApplicationGroup2_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzApplicationGroup2_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 

#define IAzApplicationGroup2_AddMemberName(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddMemberName(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup2_DeleteMemberName(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteMemberName(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup2_AddNonMemberName(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> AddNonMemberName(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup2_DeleteNonMemberName(This,bstrProp,varReserved)	\
    ( (This)->lpVtbl -> DeleteNonMemberName(This,bstrProp,varReserved) ) 

#define IAzApplicationGroup2_get_MembersName(This,pvarProp)	\
    ( (This)->lpVtbl -> get_MembersName(This,pvarProp) ) 

#define IAzApplicationGroup2_get_NonMembersName(This,pvarProp)	\
    ( (This)->lpVtbl -> get_NonMembersName(This,pvarProp) ) 


#define IAzApplicationGroup2_get_BizRule(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_BizRule(This,pbstrProp) ) 

#define IAzApplicationGroup2_put_BizRule(This,bstrProp)	\
    ( (This)->lpVtbl -> put_BizRule(This,bstrProp) ) 

#define IAzApplicationGroup2_get_BizRuleLanguage(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_BizRuleLanguage(This,pbstrProp) ) 

#define IAzApplicationGroup2_put_BizRuleLanguage(This,bstrProp)	\
    ( (This)->lpVtbl -> put_BizRuleLanguage(This,bstrProp) ) 

#define IAzApplicationGroup2_get_BizRuleImportedPath(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_BizRuleImportedPath(This,pbstrProp) ) 

#define IAzApplicationGroup2_put_BizRuleImportedPath(This,bstrProp)	\
    ( (This)->lpVtbl -> put_BizRuleImportedPath(This,bstrProp) ) 

#define IAzApplicationGroup2_RoleAssignments(This,bstrScopeName,bRecursive,ppRoleAssignments)	\
    ( (This)->lpVtbl -> RoleAssignments(This,bstrScopeName,bRecursive,ppRoleAssignments) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzApplicationGroup2_INTERFACE_DEFINED__ */


#ifndef __IAzTask2_INTERFACE_DEFINED__
#define __IAzTask2_INTERFACE_DEFINED__

/* interface IAzTask2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzTask2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("03a9a5ee-48c8-4832-9025-aad503c46526")
    IAzTask2 : public IAzTask
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RoleAssignments( 
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [in] */ VARIANT_BOOL bRecursive,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignments **ppRoleAssignments) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzTask2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzTask2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzTask2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzTask2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzTask2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzTask2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzTask2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzTask2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRule )( 
            __RPC__in IAzTask2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BizRule )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRuleLanguage )( 
            __RPC__in IAzTask2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BizRuleLanguage )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BizRuleImportedPath )( 
            __RPC__in IAzTask2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BizRuleImportedPath )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsRoleDefinition )( 
            __RPC__in IAzTask2 * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsRoleDefinition )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ BOOL fProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Operations )( 
            __RPC__in IAzTask2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Tasks )( 
            __RPC__in IAzTask2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *AddOperation )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ __RPC__in BSTR bstrOp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteOperation )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ __RPC__in BSTR bstrOp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddTask )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ __RPC__in BSTR bstrTask,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteTask )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ __RPC__in BSTR bstrTask,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzTask2 * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzTask2 * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *RoleAssignments )( 
            __RPC__in IAzTask2 * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [in] */ VARIANT_BOOL bRecursive,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoleAssignments **ppRoleAssignments);
        
        END_INTERFACE
    } IAzTask2Vtbl;

    interface IAzTask2
    {
        CONST_VTBL struct IAzTask2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzTask2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzTask2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzTask2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzTask2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzTask2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzTask2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzTask2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzTask2_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAzTask2_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IAzTask2_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzTask2_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzTask2_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzTask2_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzTask2_get_BizRule(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_BizRule(This,pbstrProp) ) 

#define IAzTask2_put_BizRule(This,bstrProp)	\
    ( (This)->lpVtbl -> put_BizRule(This,bstrProp) ) 

#define IAzTask2_get_BizRuleLanguage(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_BizRuleLanguage(This,pbstrProp) ) 

#define IAzTask2_put_BizRuleLanguage(This,bstrProp)	\
    ( (This)->lpVtbl -> put_BizRuleLanguage(This,bstrProp) ) 

#define IAzTask2_get_BizRuleImportedPath(This,pbstrProp)	\
    ( (This)->lpVtbl -> get_BizRuleImportedPath(This,pbstrProp) ) 

#define IAzTask2_put_BizRuleImportedPath(This,bstrProp)	\
    ( (This)->lpVtbl -> put_BizRuleImportedPath(This,bstrProp) ) 

#define IAzTask2_get_IsRoleDefinition(This,pfProp)	\
    ( (This)->lpVtbl -> get_IsRoleDefinition(This,pfProp) ) 

#define IAzTask2_put_IsRoleDefinition(This,fProp)	\
    ( (This)->lpVtbl -> put_IsRoleDefinition(This,fProp) ) 

#define IAzTask2_get_Operations(This,pvarProp)	\
    ( (This)->lpVtbl -> get_Operations(This,pvarProp) ) 

#define IAzTask2_get_Tasks(This,pvarProp)	\
    ( (This)->lpVtbl -> get_Tasks(This,pvarProp) ) 

#define IAzTask2_AddOperation(This,bstrOp,varReserved)	\
    ( (This)->lpVtbl -> AddOperation(This,bstrOp,varReserved) ) 

#define IAzTask2_DeleteOperation(This,bstrOp,varReserved)	\
    ( (This)->lpVtbl -> DeleteOperation(This,bstrOp,varReserved) ) 

#define IAzTask2_AddTask(This,bstrTask,varReserved)	\
    ( (This)->lpVtbl -> AddTask(This,bstrTask,varReserved) ) 

#define IAzTask2_DeleteTask(This,bstrTask,varReserved)	\
    ( (This)->lpVtbl -> DeleteTask(This,bstrTask,varReserved) ) 

#define IAzTask2_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzTask2_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzTask2_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzTask2_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzTask2_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzTask2_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 


#define IAzTask2_RoleAssignments(This,bstrScopeName,bRecursive,ppRoleAssignments)	\
    ( (This)->lpVtbl -> RoleAssignments(This,bstrScopeName,bRecursive,ppRoleAssignments) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzTask2_INTERFACE_DEFINED__ */



#ifndef __AZROLESLib_LIBRARY_DEFINED__
#define __AZROLESLib_LIBRARY_DEFINED__

/* library AZROLESLib */
/* [helpstring][version][uuid] */ 



































// List of poperty IDs for Az objects.

typedef 
enum tagAZ_PROP_CONSTANTS
    {	AZ_PROP_NAME	= 1,
	AZ_PROP_DESCRIPTION	= 2,
	AZ_PROP_WRITABLE	= 3,
	AZ_PROP_APPLICATION_DATA	= 4,
	AZ_PROP_CHILD_CREATE	= 5,
	AZ_MAX_APPLICATION_NAME_LENGTH	= 512,
	AZ_MAX_OPERATION_NAME_LENGTH	= 64,
	AZ_MAX_TASK_NAME_LENGTH	= 64,
	AZ_MAX_SCOPE_NAME_LENGTH	= 65536,
	AZ_MAX_GROUP_NAME_LENGTH	= 64,
	AZ_MAX_ROLE_NAME_LENGTH	= 64,
	AZ_MAX_NAME_LENGTH	= 65536,
	AZ_MAX_DESCRIPTION_LENGTH	= 1024,
	AZ_MAX_APPLICATION_DATA_LENGTH	= 4096,
	AZ_SUBMIT_FLAG_ABORT	= 0x1,
	AZ_SUBMIT_FLAG_FLUSH	= 0x2,
	AZ_MAX_POLICY_URL_LENGTH	= 65536,
	AZ_AZSTORE_FLAG_CREATE	= 0x1,
	AZ_AZSTORE_FLAG_MANAGE_STORE_ONLY	= 0x2,
	AZ_AZSTORE_FLAG_BATCH_UPDATE	= 0x4,
	AZ_AZSTORE_FLAG_AUDIT_IS_CRITICAL	= 0x8,
	AZ_AZSTORE_FORCE_APPLICATION_CLOSE	= 0x10,
	AZ_AZSTORE_NT6_FUNCTION_LEVEL	= 0x20,
	AZ_AZSTORE_FLAG_MANAGE_ONLY_PASSIVE_SUBMIT	= 0x8000,
	AZ_PROP_AZSTORE_DOMAIN_TIMEOUT	= 100,
	AZ_AZSTORE_DEFAULT_DOMAIN_TIMEOUT	= ( 15 * 1000 ) ,
	AZ_PROP_AZSTORE_SCRIPT_ENGINE_TIMEOUT	= 101,
	AZ_AZSTORE_MIN_DOMAIN_TIMEOUT	= 500,
	AZ_AZSTORE_MIN_SCRIPT_ENGINE_TIMEOUT	= ( 5 * 1000 ) ,
	AZ_AZSTORE_DEFAULT_SCRIPT_ENGINE_TIMEOUT	= ( 45 * 1000 ) ,
	AZ_PROP_AZSTORE_MAX_SCRIPT_ENGINES	= 102,
	AZ_AZSTORE_DEFAULT_MAX_SCRIPT_ENGINES	= 120,
	AZ_PROP_AZSTORE_MAJOR_VERSION	= 103,
	AZ_PROP_AZSTORE_MINOR_VERSION	= 104,
	AZ_PROP_AZSTORE_TARGET_MACHINE	= 105,
	AZ_PROP_AZTORE_IS_ADAM_INSTANCE	= 106,
	AZ_PROP_OPERATION_ID	= 200,
	AZ_PROP_TASK_OPERATIONS	= 300,
	AZ_PROP_TASK_BIZRULE	= 301,
	AZ_PROP_TASK_BIZRULE_LANGUAGE	= 302,
	AZ_PROP_TASK_TASKS	= 303,
	AZ_PROP_TASK_BIZRULE_IMPORTED_PATH	= 304,
	AZ_PROP_TASK_IS_ROLE_DEFINITION	= 305,
	AZ_MAX_TASK_BIZRULE_LENGTH	= 65536,
	AZ_MAX_TASK_BIZRULE_LANGUAGE_LENGTH	= 64,
	AZ_MAX_TASK_BIZRULE_IMPORTED_PATH_LENGTH	= 512,
	AZ_MAX_BIZRULE_STRING	= 65536,
	AZ_PROP_GROUP_TYPE	= 400,
	AZ_GROUPTYPE_LDAP_QUERY	= 1,
	AZ_GROUPTYPE_BASIC	= 2,
	AZ_GROUPTYPE_BIZRULE	= 3,
	AZ_PROP_GROUP_APP_MEMBERS	= 401,
	AZ_PROP_GROUP_APP_NON_MEMBERS	= 402,
	AZ_PROP_GROUP_LDAP_QUERY	= 403,
	AZ_MAX_GROUP_LDAP_QUERY_LENGTH	= 4096,
	AZ_PROP_GROUP_MEMBERS	= 404,
	AZ_PROP_GROUP_NON_MEMBERS	= 405,
	AZ_PROP_GROUP_MEMBERS_NAME	= 406,
	AZ_PROP_GROUP_NON_MEMBERS_NAME	= 407,
	AZ_PROP_GROUP_BIZRULE	= 408,
	AZ_PROP_GROUP_BIZRULE_LANGUAGE	= 409,
	AZ_PROP_GROUP_BIZRULE_IMPORTED_PATH	= 410,
	AZ_MAX_GROUP_BIZRULE_LENGTH	= 65536,
	AZ_MAX_GROUP_BIZRULE_LANGUAGE_LENGTH	= 64,
	AZ_MAX_GROUP_BIZRULE_IMPORTED_PATH_LENGTH	= 512,
	AZ_PROP_ROLE_APP_MEMBERS	= 500,
	AZ_PROP_ROLE_MEMBERS	= 501,
	AZ_PROP_ROLE_OPERATIONS	= 502,
	AZ_PROP_ROLE_TASKS	= 504,
	AZ_PROP_ROLE_MEMBERS_NAME	= 505,
	AZ_PROP_SCOPE_BIZRULES_WRITABLE	= 600,
	AZ_PROP_SCOPE_CAN_BE_DELEGATED	= 601,
	AZ_PROP_CLIENT_CONTEXT_USER_DN	= 700,
	AZ_PROP_CLIENT_CONTEXT_USER_SAM_COMPAT	= 701,
	AZ_PROP_CLIENT_CONTEXT_USER_DISPLAY	= 702,
	AZ_PROP_CLIENT_CONTEXT_USER_GUID	= 703,
	AZ_PROP_CLIENT_CONTEXT_USER_CANONICAL	= 704,
	AZ_PROP_CLIENT_CONTEXT_USER_UPN	= 705,
	AZ_PROP_CLIENT_CONTEXT_USER_DNS_SAM_COMPAT	= 707,
	AZ_PROP_CLIENT_CONTEXT_ROLE_FOR_ACCESS_CHECK	= 708,
	AZ_PROP_CLIENT_CONTEXT_LDAP_QUERY_DN	= 709,
	AZ_PROP_APPLICATION_AUTHZ_INTERFACE_CLSID	= 800,
	AZ_PROP_APPLICATION_VERSION	= 801,
	AZ_MAX_APPLICATION_VERSION_LENGTH	= 512,
	AZ_PROP_APPLICATION_NAME	= 802,
	AZ_PROP_APPLICATION_BIZRULE_ENABLED	= 803,
	AZ_PROP_APPLY_STORE_SACL	= 900,
	AZ_PROP_GENERATE_AUDITS	= 901,
	AZ_PROP_POLICY_ADMINS	= 902,
	AZ_PROP_POLICY_READERS	= 903,
	AZ_PROP_DELEGATED_POLICY_USERS	= 904,
	AZ_PROP_POLICY_ADMINS_NAME	= 905,
	AZ_PROP_POLICY_READERS_NAME	= 906,
	AZ_PROP_DELEGATED_POLICY_USERS_NAME	= 907,
	AZ_CLIENT_CONTEXT_SKIP_GROUP	= 1,
	AZ_CLIENT_CONTEXT_SKIP_LDAP_QUERY	= 1,
	AZ_CLIENT_CONTEXT_GET_GROUP_RECURSIVE	= 2,
	AZ_CLIENT_CONTEXT_GET_GROUPS_STORE_LEVEL_ONLY	= 2
    } 	AZ_PROP_CONSTANTS;


EXTERN_C const IID LIBID_AZROLESLib;

EXTERN_C const CLSID CLSID_AzAuthorizationStore;

#ifdef __cplusplus

class DECLSPEC_UUID("b2bcff59-a757-4b0b-a1bc-ea69981da69e")
AzAuthorizationStore;
#endif

EXTERN_C const CLSID CLSID_AzBizRuleContext;

#ifdef __cplusplus

class DECLSPEC_UUID("5c2dc96f-8d51-434b-b33c-379bccae77c3")
AzBizRuleContext;
#endif

EXTERN_C const CLSID CLSID_AzPrincipalLocator;

#ifdef __cplusplus

class DECLSPEC_UUID("483afb5d-70df-4e16-abdc-a1de4d015a3e")
AzPrincipalLocator;
#endif
#endif /* __AZROLESLib_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_azroles_0000_0034 */
/* [local] */ 

#ifndef OLESCRIPT_E_SYNTAX
#define OLESCRIPT_E_SYNTAX _HRESULT_TYPEDEF_(0x80020101L)
#endif // OLESCRIPT_E_SYNTAX


extern RPC_IF_HANDLE __MIDL_itf_azroles_0000_0034_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_azroles_0000_0034_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  HWND_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in HWND * ); 
unsigned char * __RPC_USER  HWND_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HWND * ); 
unsigned char * __RPC_USER  HWND_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HWND * ); 
void                      __RPC_USER  HWND_UserFree(     __RPC__in unsigned long *, __RPC__in HWND * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  HWND_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in HWND * ); 
unsigned char * __RPC_USER  HWND_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HWND * ); 
unsigned char * __RPC_USER  HWND_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HWND * ); 
void                      __RPC_USER  HWND_UserFree64(     __RPC__in unsigned long *, __RPC__in HWND * ); 

unsigned long             __RPC_USER  VARIANT_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree64(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\austream.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for austream.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __austream_h__
#define __austream_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IAudioMediaStream_FWD_DEFINED__
#define __IAudioMediaStream_FWD_DEFINED__
typedef interface IAudioMediaStream IAudioMediaStream;
#endif 	/* __IAudioMediaStream_FWD_DEFINED__ */


#ifndef __IAudioStreamSample_FWD_DEFINED__
#define __IAudioStreamSample_FWD_DEFINED__
typedef interface IAudioStreamSample IAudioStreamSample;
#endif 	/* __IAudioStreamSample_FWD_DEFINED__ */


#ifndef __IMemoryData_FWD_DEFINED__
#define __IMemoryData_FWD_DEFINED__
typedef interface IMemoryData IMemoryData;
#endif 	/* __IMemoryData_FWD_DEFINED__ */


#ifndef __IAudioData_FWD_DEFINED__
#define __IAudioData_FWD_DEFINED__
typedef interface IAudioData IAudioData;
#endif 	/* __IAudioData_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"
#include "mmstream.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_austream_0000_0000 */
/* [local] */ 

//
//   The following declarations within the 'if 0' block are dummy typedefs used to make
//   the ddstream.idl file build.  The actual definitions are contained in DDRAW.H
//
#if 0
typedef struct tWAVEFORMATEX WAVEFORMATEX;

#endif






extern RPC_IF_HANDLE __MIDL_itf_austream_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_austream_0000_0000_v0_0_s_ifspec;

#ifndef __IAudioMediaStream_INTERFACE_DEFINED__
#define __IAudioMediaStream_INTERFACE_DEFINED__

/* interface IAudioMediaStream */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IAudioMediaStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f7537560-a3be-11d0-8212-00c04fc32c45")
    IAudioMediaStream : public IMediaStream
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFormat( 
            /* [out] */ WAVEFORMATEX *pWaveFormatCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFormat( 
            /* [in] */ const WAVEFORMATEX *lpWaveFormat) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateSample( 
            /* [in] */ IAudioData *pAudioData,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IAudioStreamSample **ppSample) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioMediaStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioMediaStream * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioMediaStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioMediaStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMultiMediaStream )( 
            IAudioMediaStream * This,
            /* [out] */ IMultiMediaStream **ppMultiMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetInformation )( 
            IAudioMediaStream * This,
            /* [out] */ MSPID *pPurposeId,
            /* [out] */ STREAM_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *SetSameFormat )( 
            IAudioMediaStream * This,
            /* [in] */ IMediaStream *pStreamThatHasDesiredFormat,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *AllocateSample )( 
            IAudioMediaStream * This,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IStreamSample **ppSample);
        
        HRESULT ( STDMETHODCALLTYPE *CreateSharedSample )( 
            IAudioMediaStream * This,
            /* [in] */ IStreamSample *pExistingSample,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IStreamSample **ppNewSample);
        
        HRESULT ( STDMETHODCALLTYPE *SendEndOfStream )( 
            IAudioMediaStream * This,
            DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetFormat )( 
            IAudioMediaStream * This,
            /* [out] */ WAVEFORMATEX *pWaveFormatCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *SetFormat )( 
            IAudioMediaStream * This,
            /* [in] */ const WAVEFORMATEX *lpWaveFormat);
        
        HRESULT ( STDMETHODCALLTYPE *CreateSample )( 
            IAudioMediaStream * This,
            /* [in] */ IAudioData *pAudioData,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IAudioStreamSample **ppSample);
        
        END_INTERFACE
    } IAudioMediaStreamVtbl;

    interface IAudioMediaStream
    {
        CONST_VTBL struct IAudioMediaStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioMediaStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioMediaStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioMediaStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioMediaStream_GetMultiMediaStream(This,ppMultiMediaStream)	\
    ( (This)->lpVtbl -> GetMultiMediaStream(This,ppMultiMediaStream) ) 

#define IAudioMediaStream_GetInformation(This,pPurposeId,pType)	\
    ( (This)->lpVtbl -> GetInformation(This,pPurposeId,pType) ) 

#define IAudioMediaStream_SetSameFormat(This,pStreamThatHasDesiredFormat,dwFlags)	\
    ( (This)->lpVtbl -> SetSameFormat(This,pStreamThatHasDesiredFormat,dwFlags) ) 

#define IAudioMediaStream_AllocateSample(This,dwFlags,ppSample)	\
    ( (This)->lpVtbl -> AllocateSample(This,dwFlags,ppSample) ) 

#define IAudioMediaStream_CreateSharedSample(This,pExistingSample,dwFlags,ppNewSample)	\
    ( (This)->lpVtbl -> CreateSharedSample(This,pExistingSample,dwFlags,ppNewSample) ) 

#define IAudioMediaStream_SendEndOfStream(This,dwFlags)	\
    ( (This)->lpVtbl -> SendEndOfStream(This,dwFlags) ) 


#define IAudioMediaStream_GetFormat(This,pWaveFormatCurrent)	\
    ( (This)->lpVtbl -> GetFormat(This,pWaveFormatCurrent) ) 

#define IAudioMediaStream_SetFormat(This,lpWaveFormat)	\
    ( (This)->lpVtbl -> SetFormat(This,lpWaveFormat) ) 

#define IAudioMediaStream_CreateSample(This,pAudioData,dwFlags,ppSample)	\
    ( (This)->lpVtbl -> CreateSample(This,pAudioData,dwFlags,ppSample) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioMediaStream_INTERFACE_DEFINED__ */


#ifndef __IAudioStreamSample_INTERFACE_DEFINED__
#define __IAudioStreamSample_INTERFACE_DEFINED__

/* interface IAudioStreamSample */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IAudioStreamSample;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("345fee00-aba5-11d0-8212-00c04fc32c45")
    IAudioStreamSample : public IStreamSample
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAudioData( 
            /* [out] */ IAudioData **ppAudio) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioStreamSampleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioStreamSample * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioStreamSample * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioStreamSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaStream )( 
            IAudioStreamSample * This,
            /* [in] */ IMediaStream **ppMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetSampleTimes )( 
            IAudioStreamSample * This,
            /* [out] */ STREAM_TIME *pStartTime,
            /* [out] */ STREAM_TIME *pEndTime,
            /* [out] */ STREAM_TIME *pCurrentTime);
        
        HRESULT ( STDMETHODCALLTYPE *SetSampleTimes )( 
            IAudioStreamSample * This,
            /* [in] */ const STREAM_TIME *pStartTime,
            /* [in] */ const STREAM_TIME *pEndTime);
        
        HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAudioStreamSample * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ HANDLE hEvent,
            /* [in] */ PAPCFUNC pfnAPC,
            /* [in] */ DWORD_PTR dwAPCData);
        
        HRESULT ( STDMETHODCALLTYPE *CompletionStatus )( 
            IAudioStreamSample * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwMilliseconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetAudioData )( 
            IAudioStreamSample * This,
            /* [out] */ IAudioData **ppAudio);
        
        END_INTERFACE
    } IAudioStreamSampleVtbl;

    interface IAudioStreamSample
    {
        CONST_VTBL struct IAudioStreamSampleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioStreamSample_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioStreamSample_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioStreamSample_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioStreamSample_GetMediaStream(This,ppMediaStream)	\
    ( (This)->lpVtbl -> GetMediaStream(This,ppMediaStream) ) 

#define IAudioStreamSample_GetSampleTimes(This,pStartTime,pEndTime,pCurrentTime)	\
    ( (This)->lpVtbl -> GetSampleTimes(This,pStartTime,pEndTime,pCurrentTime) ) 

#define IAudioStreamSample_SetSampleTimes(This,pStartTime,pEndTime)	\
    ( (This)->lpVtbl -> SetSampleTimes(This,pStartTime,pEndTime) ) 

#define IAudioStreamSample_Update(This,dwFlags,hEvent,pfnAPC,dwAPCData)	\
    ( (This)->lpVtbl -> Update(This,dwFlags,hEvent,pfnAPC,dwAPCData) ) 

#define IAudioStreamSample_CompletionStatus(This,dwFlags,dwMilliseconds)	\
    ( (This)->lpVtbl -> CompletionStatus(This,dwFlags,dwMilliseconds) ) 


#define IAudioStreamSample_GetAudioData(This,ppAudio)	\
    ( (This)->lpVtbl -> GetAudioData(This,ppAudio) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioStreamSample_INTERFACE_DEFINED__ */


#ifndef __IMemoryData_INTERFACE_DEFINED__
#define __IMemoryData_INTERFACE_DEFINED__

/* interface IMemoryData */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IMemoryData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("327fc560-af60-11d0-8212-00c04fc32c45")
    IMemoryData : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetBuffer( 
            /* [in] */ DWORD cbSize,
            /* [in] */ BYTE *pbData,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInfo( 
            /* [out] */ DWORD *pdwLength,
            /* [out] */ BYTE **ppbData,
            /* [out] */ DWORD *pcbActualData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetActual( 
            /* [in] */ DWORD cbDataValid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMemoryDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMemoryData * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMemoryData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMemoryData * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetBuffer )( 
            IMemoryData * This,
            /* [in] */ DWORD cbSize,
            /* [in] */ BYTE *pbData,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IMemoryData * This,
            /* [out] */ DWORD *pdwLength,
            /* [out] */ BYTE **ppbData,
            /* [out] */ DWORD *pcbActualData);
        
        HRESULT ( STDMETHODCALLTYPE *SetActual )( 
            IMemoryData * This,
            /* [in] */ DWORD cbDataValid);
        
        END_INTERFACE
    } IMemoryDataVtbl;

    interface IMemoryData
    {
        CONST_VTBL struct IMemoryDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMemoryData_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMemoryData_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMemoryData_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMemoryData_SetBuffer(This,cbSize,pbData,dwFlags)	\
    ( (This)->lpVtbl -> SetBuffer(This,cbSize,pbData,dwFlags) ) 

#define IMemoryData_GetInfo(This,pdwLength,ppbData,pcbActualData)	\
    ( (This)->lpVtbl -> GetInfo(This,pdwLength,ppbData,pcbActualData) ) 

#define IMemoryData_SetActual(This,cbDataValid)	\
    ( (This)->lpVtbl -> SetActual(This,cbDataValid) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMemoryData_INTERFACE_DEFINED__ */


#ifndef __IAudioData_INTERFACE_DEFINED__
#define __IAudioData_INTERFACE_DEFINED__

/* interface IAudioData */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IAudioData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("54c719c0-af60-11d0-8212-00c04fc32c45")
    IAudioData : public IMemoryData
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFormat( 
            /* [out] */ WAVEFORMATEX *pWaveFormatCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFormat( 
            /* [in] */ const WAVEFORMATEX *lpWaveFormat) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioData * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioData * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetBuffer )( 
            IAudioData * This,
            /* [in] */ DWORD cbSize,
            /* [in] */ BYTE *pbData,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            IAudioData * This,
            /* [out] */ DWORD *pdwLength,
            /* [out] */ BYTE **ppbData,
            /* [out] */ DWORD *pcbActualData);
        
        HRESULT ( STDMETHODCALLTYPE *SetActual )( 
            IAudioData * This,
            /* [in] */ DWORD cbDataValid);
        
        HRESULT ( STDMETHODCALLTYPE *GetFormat )( 
            IAudioData * This,
            /* [out] */ WAVEFORMATEX *pWaveFormatCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *SetFormat )( 
            IAudioData * This,
            /* [in] */ const WAVEFORMATEX *lpWaveFormat);
        
        END_INTERFACE
    } IAudioDataVtbl;

    interface IAudioData
    {
        CONST_VTBL struct IAudioDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioData_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioData_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioData_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioData_SetBuffer(This,cbSize,pbData,dwFlags)	\
    ( (This)->lpVtbl -> SetBuffer(This,cbSize,pbData,dwFlags) ) 

#define IAudioData_GetInfo(This,pdwLength,ppbData,pcbActualData)	\
    ( (This)->lpVtbl -> GetInfo(This,pdwLength,ppbData,pcbActualData) ) 

#define IAudioData_SetActual(This,cbDataValid)	\
    ( (This)->lpVtbl -> SetActual(This,cbDataValid) ) 


#define IAudioData_GetFormat(This,pWaveFormatCurrent)	\
    ( (This)->lpVtbl -> GetFormat(This,pWaveFormatCurrent) ) 

#define IAudioData_SetFormat(This,lpWaveFormat)	\
    ( (This)->lpVtbl -> SetFormat(This,lpWaveFormat) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioData_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bdaiface_enums.h ===
////
// copyright (c) Microsoft Corp.
////

#ifndef BDAIFACE_ENUMS_H
#define BDAIFACE_ENUMS_H

// !!!! do not #pragma once, we use this file twice(once for native and once for mgd) in managed interop
#include "exposeenums2managed.h"

ENUM SmartCardStatusType
{
    CardInserted = 0,
    CardRemoved,
    CardError,
    CardDataChanged,
    CardFirmwareUpgrade
}SmartCardStatusType;

ENUM SmartCardAssociationType
{
    NotAssociated = 0,
    Associated,
    AssociationUnknown
}SmartCardAssociationType;

ENUM LocationCodeSchemeType
{
    SCTE_18 = 0
}LocationCodeSchemeType;

typedef struct EALocationCodeType {
    LocationCodeSchemeType LocationCodeScheme;
    BYTE state_code;
    BYTE county_subdivision;
    WORD county_code;
} EALocationCodeType ;

ENUM EntitlementType
{
    Entitled = 0,
    NotEntitled,
    TechnicalFailure
}EntitlementType;

ENUM UICloseReasonType
{
    NotReady = 0,
    UserClosed,
    SystemClosed,
    DeviceClosed,
    ErrorClosed
}UICloseReasonType;

typedef struct SmartCardApplication {
    ApplicationTypeType ApplicationType;
    USHORT ApplicationVersion;
    BSTR pbstrApplicationName;
    BSTR pbstrApplicationURL;
} SmartCardApplication ;

/*

// this enum is maintained in ehrecvr_enums.h, they need to be kept in sync
// they should also be merged at some point if possible.

ENUM DrmPairingStatus
{
    DrmPairing_Succeeded = 0,
    DrmPairing_HardwareFailure,
    DrmPairing_NeedRevocationData,
    DrmPairing_NeedIndiv,
    DrmPairing_Other,
    DrmPairing_DrmInitFailed,
    DrmPairing_DrmNotPaired,
    DrmPairing_DrmRePairSoon,
    DrmPairing_Aborted,
    DrmPairing_NeedSDKUpdate
}DrmPairingStatus;
*/

ENUM BDA_DrmPairingError
{
    BDA_DrmPairing_Succeeded = 0,
    BDA_DrmPairing_HardwareFailure,
    BDA_DrmPairing_NeedRevocationData,
    BDA_DrmPairing_NeedIndiv,
    BDA_DrmPairing_Other,
    BDA_DrmPairing_DrmInitFailed,
    BDA_DrmPairing_DrmNotPaired,
    BDA_DrmPairing_DrmRePairSoon,
    BDA_DrmPairing_Aborted,
    BDA_DrmPairing_NeedSDKUpdate
}BDA_DrmPairingError;

#include "unexposeenums2managed.h"

#endif
// end of file
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\BatClass.h ===
/*++ BUILD Version: 0001    // Increment this if a change has global effects

Copyright (c) Microsoft Corporation.  All rights reserved.

Module Name:

    batclass.h

Abstract:

    Defines battery class driver interfaces.

--*/


//
// Battery device GUID
//

DEFINE_GUID( GUID_DEVICE_BATTERY, 0x72631e54L, 0x78A4, 0x11d0, 0xbc, 0xf7, 0x00, 0xaa, 0x00, 0xb7, 0xb3, 0x2a );

#if (NTDDI_VERSION >= NTDDI_WINXP)

DEFINE_GUID (BATTERY_STATUS_WMI_GUID,
             0xfc4670d1, 0xebbf, 0x416e, 0x87, 0xce, 0x37, 0x4a, 0x4e, 0xbc, 0x11, 0x1a);
DEFINE_GUID (BATTERY_RUNTIME_WMI_GUID,
             0x535a3767, 0x1ac2, 0x49bc, 0xa0, 0x77, 0x3f, 0x7a, 0x02, 0xe4, 0x0a, 0xec);
DEFINE_GUID (BATTERY_TEMPERATURE_WMI_GUID,
             0x1a52a14d, 0xadce, 0x4a44, 0x9a, 0x3e, 0xc8, 0xd8, 0xf1, 0x5f, 0xf2, 0xc2);
DEFINE_GUID (BATTERY_FULL_CHARGED_CAPACITY_WMI_GUID,
             0x40b40565, 0x96f7, 0x4435, 0x86, 0x94, 0x97, 0xe0, 0xe4, 0x39, 0x59, 0x05);
DEFINE_GUID (BATTERY_CYCLE_COUNT_WMI_GUID,
             0xef98db24, 0x0014, 0x4c25, 0xa5, 0x0b, 0xc7, 0x24, 0xae, 0x5c, 0xd3, 0x71);
DEFINE_GUID (BATTERY_STATIC_DATA_WMI_GUID,
             0x05e1e463, 0xe4e2, 0x4ea9, 0x80, 0xcb, 0x9b, 0xd4, 0xb3, 0xca, 0x06, 0x55);
DEFINE_GUID (BATTERY_STATUS_CHANGE_WMI_GUID,
             0xcddfa0c3, 0x7c5b, 0x4e43, 0xa0, 0x34, 0x05, 0x9f, 0xa5, 0xb8, 0x43, 0x64);
DEFINE_GUID (BATTERY_TAG_CHANGE_WMI_GUID,
             0x5e1f6e19, 0x8786, 0x4d23, 0x94, 0xfc, 0x9e, 0x74, 0x6b, 0xd5, 0xd8, 0x88);

#endif // (NTDDI_VERSION >= NTDDI_WINXP)

#ifndef _BATCLASS_
#define _BATCLASS_
//
// Battery driver interface
//
// IOCTL_BATTERY_QUERY_TAG
// IOCTL_BATTERY_QUERY_INFORMATION
// IOCTL_BATTERY_SET_INFORMATION
// IOCTL_BATTERY_QUERY_STATUS
//



//
// IOCTL_BATTERY_QUERY_TAG
//

#define IOCTL_BATTERY_QUERY_TAG         \
        CTL_CODE(FILE_DEVICE_BATTERY, 0x10, METHOD_BUFFERED, FILE_READ_ACCESS)

#define BATTERY_TAG_INVALID 0



//
// IOCTL_BATTERY_QUERY_INFORMATION
//

#define IOCTL_BATTERY_QUERY_INFORMATION \
        CTL_CODE(FILE_DEVICE_BATTERY, 0x11, METHOD_BUFFERED, FILE_READ_ACCESS)

typedef enum {
    BatteryInformation,
    BatteryGranularityInformation,
    BatteryTemperature,
    BatteryEstimatedTime,
    BatteryDeviceName,
    BatteryManufactureDate,
    BatteryManufactureName,
    BatteryUniqueID,
    BatterySerialNumber
} BATTERY_QUERY_INFORMATION_LEVEL;

typedef struct _BATTERY_QUERY_INFORMATION {
    ULONG                           BatteryTag;
    BATTERY_QUERY_INFORMATION_LEVEL InformationLevel;
    LONG                            AtRate;
} BATTERY_QUERY_INFORMATION, *PBATTERY_QUERY_INFORMATION;

//
// Format of data returned when
// BATTERY_INFORMATION_LEVEL = BatteryInformation
//
typedef struct _BATTERY_INFORMATION {
    ULONG       Capabilities;
    UCHAR       Technology;
    UCHAR       Reserved[3];
    UCHAR       Chemistry[4];
    ULONG       DesignedCapacity;
    ULONG       FullChargedCapacity;
    ULONG       DefaultAlert1;
    ULONG       DefaultAlert2;
    ULONG       CriticalBias;
    ULONG       CycleCount;
} BATTERY_INFORMATION, *PBATTERY_INFORMATION;

//
// BATTERY_INFORMATION.Capabilities flags
//
#define BATTERY_SYSTEM_BATTERY          0x80000000
#define BATTERY_CAPACITY_RELATIVE       0x40000000
#define BATTERY_IS_SHORT_TERM           0x20000000
#define BATTERY_SET_CHARGE_SUPPORTED    0x00000001
#define BATTERY_SET_DISCHARGE_SUPPORTED 0x00000002

//
// BATTERY_INFORMATION.XXXCapacity constants
//
#define BATTERY_UNKNOWN_CAPACITY 0xFFFFFFFF

#if (NTDDI_VERSION < NTDDI_WINXP)

//
// Format of data returned when
// BATTERY_INFORMATION_LEVEL = BatteryGranularityInformation
// is an array of BATTERY_REPORTING_SCALE
//

#ifndef _NTPOAPI_

typedef struct {
    ULONG       Granularity;
    ULONG       Capacity;
} BATTERY_REPORTING_SCALE, *PBATTERY_REPORTING_SCALE;

#endif // _NTPOAPI_

#endif // (NTDDI_VERSION < NTDDI_WINXP)

//
// BatteryEstimatedTime constant
//
#define BATTERY_UNKNOWN_TIME 0xFFFFFFFF

//
// Max battery driver BATTERY_QUERY_INFORMATION_LEVEL string storage
// size in bytes.
//
#define MAX_BATTERY_STRING_SIZE 128

//
// Struct for accessing the packed date format in BatteryManufactureDate.
//
typedef struct _BATTERY_MANUFACTURE_DATE
{
    UCHAR   Day;
    UCHAR   Month;
    USHORT  Year;
} BATTERY_MANUFACTURE_DATE, *PBATTERY_MANUFACTURE_DATE;



//
// IOCTL_BATTERY_SET_INFORMATION
//

#define IOCTL_BATTERY_SET_INFORMATION   \
        CTL_CODE(FILE_DEVICE_BATTERY, 0x12, METHOD_BUFFERED, FILE_WRITE_ACCESS)

typedef enum {
    BatteryCriticalBias,
    BatteryCharge,
    BatteryDischarge
} BATTERY_SET_INFORMATION_LEVEL;

typedef struct _BATTERY_SET_INFORMATION {
    ULONG                         BatteryTag;
    BATTERY_SET_INFORMATION_LEVEL InformationLevel;
    UCHAR                         Buffer[1];
} BATTERY_SET_INFORMATION, *PBATTERY_SET_INFORMATION;



//
// IOCTL_BATTERY_QUERY_STATUS
//

#define IOCTL_BATTERY_QUERY_STATUS      \
        CTL_CODE(FILE_DEVICE_BATTERY, 0x13, METHOD_BUFFERED, FILE_READ_ACCESS)

//
// Structure of input buffer to IOCTL_BATTERY_QUERY_STATUS
//
typedef struct _BATTERY_WAIT_STATUS {
    ULONG       BatteryTag;
    ULONG       Timeout;
    ULONG       PowerState;
    ULONG       LowCapacity;
    ULONG       HighCapacity;
} BATTERY_WAIT_STATUS, *PBATTERY_WAIT_STATUS;

//
// Structure of output buffer from IOCTL_BATTERY_QUERY_STATUS
//
typedef struct _BATTERY_STATUS {
    ULONG       PowerState;
    ULONG       Capacity;
    ULONG       Voltage;
    LONG        Rate;
} BATTERY_STATUS, *PBATTERY_STATUS;

//
// BATTERY_STATUS.PowerState flags
//
#define BATTERY_POWER_ON_LINE   0x00000001
#define BATTERY_DISCHARGING     0x00000002
#define BATTERY_CHARGING        0x00000004
#define BATTERY_CRITICAL        0x00000008

//
// BATTERY_STATUS Constant
// BATTERY_UNKNOWN_CAPACITY defined above for IOCTL_BATTERY_QUERY_INFORMATION
//
#define BATTERY_UNKNOWN_VOLTAGE 0xFFFFFFFF
#define BATTERY_UNKNOWN_RATE    0x80000000


#ifndef _WINDOWS_

//
// Battery Class-Miniport device driver interfaces
//


__drv_functionClass(BCLASS_QUERY_TAG_CALLBACK)
__drv_sameIRQL
__drv_maxIRQL(PASSIVE_LEVEL)
__checkReturn
typedef
NTSTATUS
(BCLASS_QUERY_TAG_CALLBACK)(
    __in PVOID Context,
    __out PULONG BatteryTag
    );

typedef BCLASS_QUERY_TAG_CALLBACK *PBCLASS_QUERY_TAG_CALLBACK;


__drv_functionClass(BCLASS_QUERY_INFORMATION_CALLBACK)
__drv_sameIRQL
__drv_maxIRQL(PASSIVE_LEVEL)
__checkReturn
typedef
NTSTATUS
(BCLASS_QUERY_INFORMATION_CALLBACK)(
    __in PVOID Context,
    __in ULONG BatteryTag,
    __in BATTERY_QUERY_INFORMATION_LEVEL Level,
    __in LONG AtRate,
    __out_bcount_part(BufferLength, *ReturnedLength) PVOID Buffer,
    __in ULONG BufferLength,
    __out PULONG ReturnedLength
    );

typedef BCLASS_QUERY_INFORMATION_CALLBACK *PBCLASS_QUERY_INFORMATION_CALLBACK;


__drv_functionClass(BCLASS_QUERY_STATUS_CALLBACK)
__drv_sameIRQL
__drv_maxIRQL(PASSIVE_LEVEL)
__checkReturn
typedef
NTSTATUS
(BCLASS_QUERY_STATUS_CALLBACK)(
    __in PVOID Context,
    __in ULONG BatteryTag,
    __out PBATTERY_STATUS BatteryStatus
    );

typedef BCLASS_QUERY_STATUS_CALLBACK *PBCLASS_QUERY_STATUS_CALLBACK;


typedef struct {
    ULONG                   PowerState;
    ULONG                   LowCapacity;
    ULONG                   HighCapacity;
} BATTERY_NOTIFY, *PBATTERY_NOTIFY;

__drv_functionClass(BCLASS_SET_STATUS_NOTIFY_CALLBACK)
__drv_sameIRQL
__drv_maxIRQL(PASSIVE_LEVEL)
__checkReturn
typedef
NTSTATUS
(BCLASS_SET_STATUS_NOTIFY_CALLBACK)(
    __in PVOID Context,
    __in ULONG BatteryTag,
    __in PBATTERY_NOTIFY BatteryNotify
    );

typedef BCLASS_SET_STATUS_NOTIFY_CALLBACK *PBCLASS_SET_STATUS_NOTIFY_CALLBACK;


__drv_functionClass(BCLASS_SET_INFORMATION_CALLBACK)
__drv_sameIRQL
__drv_maxIRQL(PASSIVE_LEVEL)
__checkReturn
typedef
NTSTATUS
(BCLASS_SET_INFORMATION_CALLBACK)(
    __in PVOID Context,
    __in ULONG BatteryTag,
    __in BATTERY_SET_INFORMATION_LEVEL Level,
    __in_opt PVOID Buffer
    );

typedef BCLASS_SET_INFORMATION_CALLBACK *PBCLASS_SET_INFORMATION_CALLBACK;


__drv_functionClass(BCLASS_DISABLE_STATUS_NOTIFY_CALLBACK)
__drv_sameIRQL
__drv_maxIRQL(PASSIVE_LEVEL)
__checkReturn
typedef
NTSTATUS
(BCLASS_DISABLE_STATUS_NOTIFY_CALLBACK)(
    __in PVOID Context
    );

typedef BCLASS_DISABLE_STATUS_NOTIFY_CALLBACK 
    *PBCLASS_DISABLE_STATUS_NOTIFY_CALLBACK;

typedef PBCLASS_QUERY_TAG_CALLBACK BCLASS_QUERY_TAG;
typedef PBCLASS_QUERY_INFORMATION_CALLBACK BCLASS_QUERY_INFORMATION;
typedef PBCLASS_QUERY_STATUS_CALLBACK BCLASS_QUERY_STATUS;
typedef PBCLASS_SET_STATUS_NOTIFY_CALLBACK BCLASS_SET_STATUS_NOTIFY;
typedef PBCLASS_SET_INFORMATION_CALLBACK BCLASS_SET_INFORMATION;
typedef PBCLASS_DISABLE_STATUS_NOTIFY_CALLBACK BCLASS_DISABLE_STATUS_NOTIFY;

typedef struct {
    USHORT                          MajorVersion;
    USHORT                          MinorVersion;

    PVOID                           Context;        // Miniport context

    BCLASS_QUERY_TAG                QueryTag;
    BCLASS_QUERY_INFORMATION        QueryInformation;
    BCLASS_SET_INFORMATION          SetInformation;
    BCLASS_QUERY_STATUS             QueryStatus;
    BCLASS_SET_STATUS_NOTIFY        SetStatusNotify;
    BCLASS_DISABLE_STATUS_NOTIFY    DisableStatusNotify;
    PDEVICE_OBJECT                  Pdo;
    PUNICODE_STRING                 DeviceName;
} BATTERY_MINIPORT_INFO, *PBATTERY_MINIPORT_INFO;



#define BATTERY_CLASS_MAJOR_VERSION     0x0001
#define BATTERY_CLASS_MINOR_VERSION     0x0000

#if (NTDDI_VERSION >= NTDDI_WINXP)

//
// WMI data block structures
//

typedef struct _BATTERY_WMI_STATUS {
    ULONG Tag;
    ULONG RemainingCapacity;
    LONG ChargeRate;
    LONG DischargeRate;
    ULONG Voltage;
    BOOLEAN PowerOnline;
    BOOLEAN Charging;
    BOOLEAN Discharging;
    BOOLEAN Critical;
} BATTERY_WMI_STATUS, *PBATTERY_WMI_STATUS;

typedef struct _BATTERY_WMI_RUNTIME
{
    ULONG Tag;
    ULONG EstimatedRuntime;
} BATTERY_WMI_RUNTIME, *PBATTERY_WMI_RUNTIME;

typedef struct _BATTERY_WMI_TEMPERATURE
{
    ULONG Tag;
    ULONG Temperature;
} BATTERY_WMI_TEMPERATURE, *PBATTERY_WMI_TEMPERATURE;

typedef struct _BATTERY_WMI_FULL_CHARGED_CAPACITY
{
    ULONG Tag;
    ULONG FullChargedCapacity;
} BATTERY_WMI_FULL_CHARGED_CAPACITY, *PBATTERY_WMI_FULL_CHARGED_CAPACITY;

typedef struct _BATTERY_WMI_CYCLE_COUNT
{
    ULONG Tag;
    ULONG CycleCount;
} BATTERY_WMI_CYCLE_COUNT, *PBATTERY_WMI_CYCLE_COUNT;

typedef struct _BATTERY_WMI_STATIC_DATA
{
    ULONG Tag;
    WCHAR ManufactureDate[25];
    BATTERY_REPORTING_SCALE Granularity [4];
    ULONG Capabilities;
    UCHAR Technology;
    ULONG Chemistry;
    ULONG DesignedCapacity;
    ULONG DefaultAlert1;
    ULONG DefaultAlert2;
    ULONG CriticalBias;
    WCHAR Strings[1];
    // Four variable length string values are stored with the first USHORT
    // value containing the length of the string in bytes.
    //
    // Device Name
    // Manufacture Name
    // Serial Number
    // UniqueID
    //
} BATTERY_WMI_STATIC_DATA, *PBATTERY_WMI_STATIC_DATA;

typedef struct _BATTERY_WMI_STATUS_CHANGE
{
    ULONG Tag;
    BOOLEAN PowerOnline;
    BOOLEAN Charging;
    BOOLEAN Discharging;
    BOOLEAN Critical;
} BATTERY_WMI_STATUS_CHANGE, *PBATTERY_WMI_STATUS_CHANGE;

typedef struct _BATTERY_TAG_CHANGE
{
    ULONG Tag;
} BATTERY_TAG_CHANGE, *PBATTERY_TAG_CHANGE;

#endif // (NTDDI_VERSION >= NTDDI_WINXP)

//
// Battery class driver functions
//

#if !defined(BATTERYCLASS)
    #define BATTERYCLASSAPI DECLSPEC_IMPORT
#else
    #define BATTERYCLASSAPI
#endif


__drv_maxIRQL(PASSIVE_LEVEL)
__checkReturn
NTSTATUS
BATTERYCLASSAPI
BatteryClassInitializeDevice (
    __in PBATTERY_MINIPORT_INFO MiniportInfo,
    __out PVOID *ClassData
    );

__drv_maxIRQL(PASSIVE_LEVEL)
NTSTATUS
BATTERYCLASSAPI
BatteryClassUnload (
    __in PVOID ClassData
    );

__drv_maxIRQL(PASSIVE_LEVEL)
__checkReturn
NTSTATUS
BATTERYCLASSAPI
BatteryClassIoctl (
    __in PVOID ClassData,
    __inout PIRP Irp
    );

#if (NTDDI_VERSION >= NTDDI_WINXP)

__drv_maxIRQL(PASSIVE_LEVEL)
__checkReturn
NTSTATUS
BATTERYCLASSAPI
BatteryClassSystemControl (
    __in PVOID ClassData,
    __in PVOID WmiLibContext, //PWMILIB_CONTEXT
    __in PDEVICE_OBJECT  DeviceObject,
    __inout PIRP Irp,
    __out PVOID Disposition //PSYSCTL_IRP_DISPOSITION
    );

__drv_maxIRQL(PASSIVE_LEVEL)
__checkReturn
NTSTATUS
BATTERYCLASSAPI
BatteryClassQueryWmiDataBlock(
    __in PVOID ClassData,
    __inout PDEVICE_OBJECT DeviceObject,
    __inout PIRP Irp,
    __in ULONG GuidIndex,
    __out_ecount(1) PULONG InstanceLengthArray,
    __in ULONG OutBufferSize,
    __out_bcount_opt(OutBufferSize) PUCHAR Buffer
    );

#endif // (NTDDI_VERSION >= NTDDI_WINXP)

__drv_maxIRQL(DISPATCH_LEVEL)
NTSTATUS
BATTERYCLASSAPI
BatteryClassStatusNotify (
    __in PVOID ClassData
    );

#endif // _WINDOWS_

#endif // _BATCLASS_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\BaseTyps.h ===
//+---------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (c) Microsoft Corporation. All rights reserved.
//
//  File:       basetyps.h
//
//----------------------------------------------------------------------------
#if !defined( _BASETYPS_H_ )
#define _BASETYPS_H_

#if _MSC_VER > 1000
#pragma once
#endif

// Common macros gleamed from COMPOBJ.H

#ifdef __cplusplus
    #define EXTERN_C    extern "C"
#else
    #define EXTERN_C    extern
#endif

#ifdef _WIN32

// Win32 doesn't support __export

#define STDMETHODCALLTYPE       __stdcall
#define STDMETHODVCALLTYPE      __cdecl

#define STDAPICALLTYPE          __stdcall
#define STDAPIVCALLTYPE         __cdecl

#else

#define STDMETHODCALLTYPE       __export __stdcall
#define STDMETHODVCALLTYPE      __export __cdecl

#define STDAPICALLTYPE          __export __stdcall
#define STDAPIVCALLTYPE         __export __cdecl

#endif

#define STDAPI                  EXTERN_C HRESULT STDAPICALLTYPE
#define STDAPI_(type)           EXTERN_C type STDAPICALLTYPE

#define STDMETHODIMP            HRESULT STDMETHODCALLTYPE
#define STDMETHODIMP_(type)     type STDMETHODCALLTYPE

// The 'V' versions allow Variable Argument lists.

#define STDAPIV                 EXTERN_C HRESULT STDAPIVCALLTYPE
#define STDAPIV_(type)          EXTERN_C type STDAPIVCALLTYPE

#define STDMETHODIMPV           HRESULT STDMETHODVCALLTYPE
#define STDMETHODIMPV_(type)    type STDMETHODVCALLTYPE




/****** Interface Declaration ***********************************************/

/*
 *      These are macros for declaring interfaces.  They exist so that
 *      a single definition of the interface is simulataneously a proper
 *      declaration of the interface structures (C++ abstract classes)
 *      for both C and C++.
 *
 *      DECLARE_INTERFACE(iface) is used to declare an interface that does
 *      not derive from a base interface.
 *      DECLARE_INTERFACE_(iface, baseiface) is used to declare an interface
 *      that does derive from a base interface.
 *
 *      By default if the source file has a .c extension the C version of
 *      the interface declaratations will be expanded; if it has a .cpp
 *      extension the C++ version will be expanded. if you want to force
 *      the C version expansion even though the source file has a .cpp
 *      extension, then define the macro "CINTERFACE".
 *      eg.     cl -DCINTERFACE file.cpp
 *
 *      Example Interface declaration:
 *
 *          #undef  INTERFACE
 *          #define INTERFACE   IClassFactory
 *
 *          DECLARE_INTERFACE_(IClassFactory, IUnknown)
 *          {
 *              // *** IUnknown methods ***
 *              STDMETHOD(QueryInterface) (THIS_
 *                                        REFIID riid,
 *                                        LPVOID FAR* ppvObj) PURE;
 *              STDMETHOD_(ULONG,AddRef) (THIS) PURE;
 *              STDMETHOD_(ULONG,Release) (THIS) PURE;
 *
 *              // *** IClassFactory methods ***
 *              STDMETHOD(CreateInstance) (THIS_
 *                                        LPUNKNOWN pUnkOuter,
 *                                        REFIID riid,
 *                                        LPVOID FAR* ppvObject) PURE;
 *          };
 *
 *      Example C++ expansion:
 *
 *          struct FAR IClassFactory : public IUnknown
 *          {
 *              virtual HRESULT STDMETHODCALLTYPE QueryInterface(
 *                                                  IID FAR& riid,
 *                                                  LPVOID FAR* ppvObj) = 0;
 *              virtual HRESULT STDMETHODCALLTYPE AddRef(void) = 0;
 *              virtual HRESULT STDMETHODCALLTYPE Release(void) = 0;
 *              virtual HRESULT STDMETHODCALLTYPE CreateInstance(
 *                                              LPUNKNOWN pUnkOuter,
 *                                              IID FAR& riid,
 *                                              LPVOID FAR* ppvObject) = 0;
 *          };
 *
 *          NOTE: Our documentation says '#define interface class' but we use
 *          'struct' instead of 'class' to keep a lot of 'public:' lines
 *          out of the interfaces.  The 'FAR' forces the 'this' pointers to
 *          be far, which is what we need.
 *
 *      Example C expansion:
 *
 *          typedef struct IClassFactory
 *          {
 *              const struct IClassFactoryVtbl FAR* lpVtbl;
 *          } IClassFactory;
 *
 *          typedef struct IClassFactoryVtbl IClassFactoryVtbl;
 *
 *          struct IClassFactoryVtbl
 *          {
 *              HRESULT (STDMETHODCALLTYPE * QueryInterface) (
 *                                                  IClassFactory FAR* This,
 *                                                  IID FAR* riid,
 *                                                  LPVOID FAR* ppvObj) ;
 *              HRESULT (STDMETHODCALLTYPE * AddRef) (IClassFactory FAR* This) ;
 *              HRESULT (STDMETHODCALLTYPE * Release) (IClassFactory FAR* This) ;
 *              HRESULT (STDMETHODCALLTYPE * CreateInstance) (
 *                                                  IClassFactory FAR* This,
 *                                                  LPUNKNOWN pUnkOuter,
 *                                                  IID FAR* riid,
 *                                                  LPVOID FAR* ppvObject);
 *              HRESULT (STDMETHODCALLTYPE * LockServer) (
 *                                                  IClassFactory FAR* This,
 *                                                  BOOL fLock);
 *          };
 */


#if defined(__cplusplus) && !defined(CINTERFACE)
//#define interface               struct FAR

#ifdef COM_STDMETHOD_CAN_THROW
#define COM_DECLSPEC_NOTHROW
#else
#define COM_DECLSPEC_NOTHROW DECLSPEC_NOTHROW
#endif

#define __STRUCT__ struct
#define interface __STRUCT__
#define STDMETHOD(method)        virtual COM_DECLSPEC_NOTHROW HRESULT STDMETHODCALLTYPE method
#define STDMETHOD_(type,method)  virtual COM_DECLSPEC_NOTHROW type STDMETHODCALLTYPE method
#define STDMETHODV(method)       virtual COM_DECLSPEC_NOTHROW HRESULT STDMETHODVCALLTYPE method
#define STDMETHODV_(type,method) virtual COM_DECLSPEC_NOTHROW type STDMETHODVCALLTYPE method
#define PURE                    = 0
#define THIS_
#define THIS                    void
#define DECLARE_INTERFACE(iface)    interface DECLSPEC_NOVTABLE iface
#define DECLARE_INTERFACE_(iface, baseiface)    interface DECLSPEC_NOVTABLE iface : public baseiface

#define IFACEMETHOD(method)         __override STDMETHOD(method)
#define IFACEMETHOD_(type,method)   __override STDMETHOD_(type,method)
#define IFACEMETHODV(method)        __override STDMETHODV(method)
#define IFACEMETHODV_(type,method)  __override STDMETHODV_(type,method)

#else

#define interface               struct

#define STDMETHOD(method)       HRESULT (STDMETHODCALLTYPE * method)
#define STDMETHOD_(type,method) type (STDMETHODCALLTYPE * method)
#define STDMETHODV(method)       HRESULT (STDMETHODVCALLTYPE * method)
#define STDMETHODV_(type,method) type (STDMETHODVCALLTYPE * method)

#define IFACEMETHOD(method)         __override STDMETHOD(method)
#define IFACEMETHOD_(type,method)   __override STDMETHOD_(type,method)
#define IFACEMETHODV(method)        __override STDMETHODV(method)
#define IFACEMETHODV_(type,method)  __override STDMETHODV_(type,method)



#define PURE
#define THIS_                   INTERFACE FAR* This,
#define THIS                    INTERFACE FAR* This
#ifdef CONST_VTABLE
#define DECLARE_INTERFACE(iface)    typedef interface iface { \
                                    const struct iface##Vtbl FAR* lpVtbl; \
                                } iface; \
                                typedef const struct iface##Vtbl iface##Vtbl; \
                                const struct iface##Vtbl
#else
#define DECLARE_INTERFACE(iface)    typedef interface iface { \
                                    struct iface##Vtbl FAR* lpVtbl; \
                                } iface; \
                                typedef struct iface##Vtbl iface##Vtbl; \
                                struct iface##Vtbl
#endif
#define DECLARE_INTERFACE_(iface, baseiface)    DECLARE_INTERFACE(iface)

#endif

#include <guiddef.h>

#ifndef _ERROR_STATUS_T_DEFINED
typedef unsigned long error_status_t;
#define _ERROR_STATUS_T_DEFINED
#endif

#ifndef _WCHAR_T_DEFINED
typedef unsigned short wchar_t;
#define _WCHAR_T_DEFINED
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\BaseTsd.h ===
/*++

Copyright (c) Microsoft Corporation.  All rights reserved.

Module Name:

    basetsd.h

Abstract:

    Type definitions for the basic sized types.

Author:

Revision History:

--*/

#ifndef _BASETSD_H_
#define _BASETSD_H_

#if !defined(_MAC) && (defined(_M_MRX000) || defined(_M_AMD64) || defined(_M_IA64)) && (_MSC_VER >= 1100) && !(defined(MIDL_PASS) || defined(RC_INVOKED))
 #define POINTER_64 __ptr64
 typedef unsigned __int64 POINTER_64_INT;
 #if defined(_WIN64)
  #define POINTER_32 __ptr32
 #else
  #define POINTER_32
 #endif
#else
 #if defined(_MAC) && defined(_MAC_INT_64)
  #define POINTER_64 __ptr64
  typedef unsigned __int64 POINTER_64_INT;
 #else
  #if (_MSC_VER >= 1300) && !(defined(MIDL_PASS) || defined(RC_INVOKED))
   #define POINTER_64 __ptr64
  #else
   #define POINTER_64
  #endif
  typedef unsigned long POINTER_64_INT;
 #endif
 #define POINTER_32
#endif

#if defined(_IA64_) || defined(_AMD64_)
#define FIRMWARE_PTR
#else
#define FIRMWARE_PTR POINTER_32
#endif

//
// A compiler with support for __sptr and __uptr is in qualification.  To
// participate in qualification, remove the "0 &&" term below and also
// enable warning 4826 in warning.w
// 

#if 0 && (_MSC_FULL_VER >= 140041204) && !defined(MIDL_PASS) && !defined(RC_INVOKED)
#define POINTER_SIGNED __sptr
#define POINTER_UNSIGNED __uptr
#else
#define POINTER_SIGNED
#define POINTER_UNSIGNED
#endif

#define SPOINTER_32 POINTER_SIGNED POINTER_32
#define UPOINTER_32 POINTER_UNSIGNED POINTER_32

#if _MSC_VER > 1000
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef signed char         INT8, *PINT8;
typedef signed short        INT16, *PINT16;
typedef signed int          INT32, *PINT32;
typedef signed __int64      INT64, *PINT64;
typedef unsigned char       UINT8, *PUINT8;
typedef unsigned short      UINT16, *PUINT16;
typedef unsigned int        UINT32, *PUINT32;
typedef unsigned __int64    UINT64, *PUINT64;

//
// The following types are guaranteed to be signed and 32 bits wide.
//

typedef signed int LONG32, *PLONG32;

//
// The following types are guaranteed to be unsigned and 32 bits wide.
//

typedef unsigned int ULONG32, *PULONG32;
typedef unsigned int DWORD32, *PDWORD32;

#if !defined(_W64)
#if !defined(__midl) && (defined(_X86_) || defined(_M_IX86)) && _MSC_VER >= 1300
#define _W64 __w64
#else
#define _W64
#endif
#endif

//
// The INT_PTR is guaranteed to be the same size as a pointer.  Its
// size with change with pointer size (32/64).  It should be used
// anywhere that a pointer is cast to an integer type. UINT_PTR is
// the unsigned variation.
//
// __int3264 is intrinsic to 64b MIDL but not to old MIDL or to C compiler.
//
#if ( 501 < __midl )

    typedef [public] __int3264 INT_PTR, *PINT_PTR;
    typedef [public] unsigned __int3264 UINT_PTR, *PUINT_PTR;

    typedef [public] __int3264 LONG_PTR, *PLONG_PTR;
    typedef [public] unsigned __int3264 ULONG_PTR, *PULONG_PTR;

#else  // midl64
// old midl and C++ compiler

#if defined(_WIN64)
    typedef __int64 INT_PTR, *PINT_PTR;
    typedef unsigned __int64 UINT_PTR, *PUINT_PTR;

    typedef __int64 LONG_PTR, *PLONG_PTR;
    typedef unsigned __int64 ULONG_PTR, *PULONG_PTR;

    #define __int3264   __int64

#else
    typedef _W64 int INT_PTR, *PINT_PTR;
    typedef _W64 unsigned int UINT_PTR, *PUINT_PTR;

    typedef _W64 long LONG_PTR, *PLONG_PTR;
    typedef _W64 unsigned long ULONG_PTR, *PULONG_PTR;

    #define __int3264   __int32

#endif
#endif // midl64

//
// HALF_PTR is half the size of a pointer it intended for use with
// within structures which contain a pointer and two small fields.
// UHALF_PTR is the unsigned variation.
//

#ifdef _WIN64

#define ADDRESS_TAG_BIT 0x40000000000UI64

typedef __int64 SHANDLE_PTR;
typedef unsigned __int64 HANDLE_PTR;
typedef unsigned int UHALF_PTR, *PUHALF_PTR;
typedef int HALF_PTR, *PHALF_PTR;

#if !defined(__midl)
__inline
unsigned long
HandleToULong(
    const void *h
    )
{
    return((unsigned long) (ULONG_PTR) h );
}

__inline
long
HandleToLong(
    const void *h
    )
{
    return((long) (LONG_PTR) h );
}

__inline
void *
ULongToHandle(
    const unsigned long h
    )
{
    return((void *) (UINT_PTR) h );
}


__inline
void *
LongToHandle(
    const long h
    )
{
    return((void *) (INT_PTR) h );
}


__inline
unsigned long
PtrToUlong(
    const void  *p
    )
{
    return((unsigned long) (ULONG_PTR) p );
}

__inline
unsigned int
PtrToUint(
    const void  *p
    )
{
    return((unsigned int) (UINT_PTR) p );
}

__inline
unsigned short
PtrToUshort(
    const void  *p
    )
{
    return((unsigned short) (unsigned long) (ULONG_PTR) p );
}

__inline
long
PtrToLong(
    const void  *p
    )
{
    return((long) (LONG_PTR) p );
}

__inline
int
PtrToInt(
    const void  *p
    )
{
    return((int) (INT_PTR) p );
}

__inline
short
PtrToShort(
    const void  *p
    )
{
    return((short) (long) (LONG_PTR) p );
}

__inline
void *
IntToPtr(
    const int i
    )
// Caution: IntToPtr() sign-extends the int value.
{
    return( (void *)(INT_PTR)i );
}

__inline
void *
UIntToPtr(
    const unsigned int ui
    )
// Caution: UIntToPtr() zero-extends the unsigned int value.
{
    return( (void *)(UINT_PTR)ui );
}

__inline
void *
LongToPtr(
    const long l
    )
// Caution: LongToPtr() sign-extends the long value.
{
    return( (void *)(LONG_PTR)l );
}

__inline
void *
ULongToPtr(
    const unsigned long ul
    )
// Caution: ULongToPtr() zero-extends the unsigned long value.
{
    return( (void *)(ULONG_PTR)ul );
}

#define PtrToPtr64( p )         ((void * POINTER_64) p)
#define Ptr64ToPtr( p )         ((void *) p)
#define HandleToHandle64( h )   (PtrToPtr64( h ))
#define Handle64ToHandle( h )   (Ptr64ToPtr( h ))

__inline
void *
Ptr32ToPtr(
    const void * POINTER_32 p
    )
{
    return((void *) (ULONG_PTR) (unsigned long) p);
}

__inline
void *
Handle32ToHandle(
    const void * POINTER_32 h
    )
{
    return((void *) (LONG_PTR) (long) h);
}

__inline
void * POINTER_32
PtrToPtr32(
    const void *p
    )
{
    return((void * POINTER_32) (unsigned long) (ULONG_PTR) p);
}

#define HandleToHandle32( h )       (PtrToPtr32( h ))

#endif // !_midl

#else  // !_WIN64

#define ADDRESS_TAG_BIT 0x80000000UL

typedef unsigned short UHALF_PTR, *PUHALF_PTR;
typedef short HALF_PTR, *PHALF_PTR;
typedef _W64 long SHANDLE_PTR;
typedef _W64 unsigned long HANDLE_PTR;

#define HandleToULong( h ) ((ULONG)(ULONG_PTR)(h) )
#define HandleToLong( h )  ((LONG)(LONG_PTR) (h) )
#define ULongToHandle( ul ) ((HANDLE)(ULONG_PTR) (ul) )
#define LongToHandle( h )   ((HANDLE)(LONG_PTR) (h) )
#define PtrToUlong( p ) ((ULONG)(ULONG_PTR) (p) )
#define PtrToLong( p )  ((LONG)(LONG_PTR) (p) )
#define PtrToUint( p ) ((UINT)(UINT_PTR) (p) )
#define PtrToInt( p )  ((INT)(INT_PTR) (p) )
#define PtrToUshort( p ) ((unsigned short)(ULONG_PTR)(p) )
#define PtrToShort( p )  ((short)(LONG_PTR)(p) )
#define IntToPtr( i )    ((VOID *)(INT_PTR)((int)i))
#define UIntToPtr( ui )  ((VOID *)(UINT_PTR)((unsigned int)ui))
#define LongToPtr( l )   ((VOID *)(LONG_PTR)((long)l))
#define ULongToPtr( ul ) ((VOID *)(ULONG_PTR)((unsigned long)ul))

#if !defined(__midl)
__inline
void * POINTER_64
PtrToPtr64(
    const void *p
    )
{
    return((void * POINTER_64) (unsigned __int64) (ULONG_PTR)p );
}

__inline
void *
Ptr64ToPtr(
    const void * POINTER_64 p
    )
{
    return((void *) (ULONG_PTR) (unsigned __int64) p);
}

__inline
void * POINTER_64
HandleToHandle64(
    const void *h
    )
{
    return((void * POINTER_64)(__int64)(LONG_PTR)h );
}

__inline
void *
Handle64ToHandle(
    const void * POINTER_64 h
    )
{
    return((void *) (ULONG_PTR) (unsigned __int64) h );
}
#endif

#define Ptr32ToPtr( p )         ((void *) p)
#define Handle32ToHandle( h )   (Ptr32ToPtr( h ))
#define PtrToPtr32( p )         ((void * POINTER_32) p)
#define HandleToHandle32( h )   (PtrToPtr32( h ))

#endif // !_WIN64

#define HandleToUlong(h)  HandleToULong(h)
#define UlongToHandle(ul) ULongToHandle(ul)
#define UlongToPtr(ul) ULongToPtr(ul)
#define UintToPtr(ui)  UIntToPtr(ui)

#define MAXUINT_PTR  (~((UINT_PTR)0))
#define MAXINT_PTR   ((INT_PTR)(MAXUINT_PTR >> 1))
#define MININT_PTR   (~MAXINT_PTR)

#define MAXULONG_PTR (~((ULONG_PTR)0))
#define MAXLONG_PTR  ((LONG_PTR)(MAXULONG_PTR >> 1))
#define MINLONG_PTR  (~MAXLONG_PTR)

#define MAXUHALF_PTR ((UHALF_PTR)~0)
#define MAXHALF_PTR  ((HALF_PTR)(MAXUHALF_PTR >> 1))
#define MINHALF_PTR  (~MAXHALF_PTR)

//
// SIZE_T used for counts or ranges which need to span the range of
// of a pointer.  SSIZE_T is the signed variation.
//

typedef ULONG_PTR SIZE_T, *PSIZE_T;
typedef LONG_PTR SSIZE_T, *PSSIZE_T;

#if _WIN32_WINNT >= 0x0600 || (defined(__cplusplus) && defined(WINDOWS_ENABLE_CPLUSPLUS))

#define MAXUINT8    ((UINT8)~((UINT8)0))
#define MAXINT8     ((INT8)(MAXUINT8 >> 1))
#define MININT8     ((INT8)~MAXINT8)

#define MAXUINT16   ((UINT16)~((UINT16)0))
#define MAXINT16    ((INT16)(MAXUINT16 >> 1))
#define MININT16    ((INT16)~MAXINT16)

#define MAXUINT32   ((UINT32)~((UINT32)0))
#define MAXINT32    ((INT32)(MAXUINT32 >> 1))
#define MININT32    ((INT32)~MAXINT32)

#define MAXUINT64   ((UINT64)~((UINT64)0))
#define MAXINT64    ((INT64)(MAXUINT64 >> 1))
#define MININT64    ((INT64)~MAXINT64)

#define MAXULONG32  ((ULONG32)~((ULONG32)0))
#define MAXLONG32   ((LONG32)(MAXULONG32 >> 1))
#define MINLONG32   ((LONG32)~MAXLONG32)

#define MAXULONG64  ((ULONG64)~((ULONG64)0))
#define MAXLONG64   ((LONG64)(MAXULONG64 >> 1))
#define MINLONG64   ((LONG64)~MAXLONG64)

#define MAXULONGLONG ((ULONGLONG)~((ULONGLONG)0))
#define MINLONGLONG ((LONGLONG)~MAXLONGLONG)

#define MAXSIZE_T   ((SIZE_T)~((SIZE_T)0))
#define MAXSSIZE_T  ((SSIZE_T)(MAXSIZE_T >> 1))
#define MINSSIZE_T  ((SSIZE_T)~MAXSSIZE_T)

#define MAXUINT     ((UINT)~((UINT)0))
#define MAXINT      ((INT)(MAXUINT >> 1))
#define MININT      ((INT)~MAXINT)

#define MAXDWORD32  ((DWORD32)~((DWORD32)0))
#define MAXDWORD64  ((DWORD64)~((DWORD64)0))

#endif // _WIN32_WINNT >= 0x0600

//
// Add Windows flavor DWORD_PTR types
//

typedef ULONG_PTR DWORD_PTR, *PDWORD_PTR;

//
// The following types are guaranteed to be signed and 64 bits wide.
//

typedef __int64 LONG64, *PLONG64;


//
// The following types are guaranteed to be unsigned and 64 bits wide.
//

typedef unsigned __int64 ULONG64, *PULONG64;
typedef unsigned __int64 DWORD64, *PDWORD64;

//
// Legacy thread affinity.
//

typedef ULONG_PTR KAFFINITY;
typedef KAFFINITY *PKAFFINITY;

#ifdef __cplusplus
}
#endif

#endif // _BASETSD_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bdamedia.h ===
//------------------------------------------------------------------------------
// File: BDAMedia.h
//
// Desc: Broadcast Driver Architecture Multimedia Definitions.
//
// Copyright (c) 1996 - 2001, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#if !defined(_KSMEDIA_)
#error KSMEDIA.H must be included before BDAMEDIA.H
#endif // !defined(_KSMEDIA_)

#if !defined(_BDATYPES_)
#error BDATYPES.H must be included before BDAMEDIA.H
#endif // !defined(_BDATYPES_)

#if !defined(_BDAMEDIA_)
#define _BDAMEDIA_

#if defined(__cplusplus)
extern "C" {
#endif // defined(__cplusplus)



//===========================================================================
//
//  KSProperty Set Structure Definitions for BDA
//
//===========================================================================

typedef struct _KSP_BDA_NODE_PIN {
    KSPROPERTY      Property;
    ULONG           ulNodeType;
    ULONG           ulInputPinId;
    ULONG           ulOutputPinId;
} KSP_BDA_NODE_PIN, *PKSP_BDA_NODE_PIN;


typedef struct _KSM_BDA_PIN
{
    KSMETHOD    Method;
    union
    {
        ULONG       PinId;
        ULONG       PinType;
    };
    ULONG       Reserved;
} KSM_BDA_PIN, * PKSM_BDA_PIN;


typedef struct _KSM_BDA_PIN_PAIR
{
    KSMETHOD    Method;
    union
    {
        ULONG       InputPinId;
        ULONG       InputPinType;
    };
    union
    {
        ULONG       OutputPinId;
        ULONG       OutputPinType;
    };
} KSM_BDA_PIN_PAIR, * PKSM_BDA_PIN_PAIR;


typedef struct {
    KSP_NODE        Property;
    ULONG           EsPid;
} KSP_NODE_ESPID, *PKSP_NODE_ESPID;

typedef struct _KSM_BDA_DEBUG_LEVEL 
{
    KSMETHOD    Method;
    UCHAR       ucDebugLevel;
    ULONG       ulDebugStringSize;
    BYTE        argbDebugString [MIN_DIMENSION];
} KSM_BDA_DEBUG_LEVEL, * PKSM_BDA_DEBUG_LEVEL;

typedef struct _BDA_DEBUG_DATA 
{
    PBDARESULT  lResult;
    GUID        uuidDebugDataType;
    ULONG       ulDataSize;
    BYTE        argbDebugData [MIN_DIMENSION];
} BDA_DEBUG_DATA;

typedef struct _BDA_EVENT_DATA 
{
    PBDARESULT  lResult;
    ULONG       ulEventID;
    GUID        uuidEventType;
    ULONG       ulEventDataLength;    
    BYTE        argbEventData [MIN_DIMENSION];
} BDA_EVENT_DATA, * PBDA_EVENT_DATA;

typedef struct _KSM_BDA_EVENT_COMPLETE {
    KSMETHOD Method;
    ULONG   ulEventID;
    ULONG   ulEventResult;
} KSM_BDA_EVENT_COMPLETE, * PKSM_BDA_EVENT_COMPLETE;

//===========================================================================
//
//  KSMethod Set Structure Definitions for DRM, WMDRM, WMDRMTUNER 
//
//===========================================================================

typedef struct _KSM_BDA_DRM_SETDRM 
{
    KSM_NODE    NodeMethod;
    GUID        NewDRMuuid;
} KSM_BDA_DRM_SETDRM, * PKSM_BDA_DRM_SETDRM;

typedef struct _KSM_BDA_BUFFER 
{
    KSM_NODE    NodeMethod;
    ULONG       ulBufferSize;
    BYTE        argbBuffer[MIN_DIMENSION];
} KSM_BDA_BUFFER, *PKSM_BDA_BUFFER;

typedef struct KSM_BDA_WMDRM_LICENSE 
{
    KSM_NODE    NodeMethod;
    GUID        uuidKeyID;
} KSM_BDA_WMDRM_LICENSE, *PKSM_BDA_WMDRM_LICENSE;

typedef struct _KSM_BDA_WMDRM_RENEWLICENSE 
{
    KSM_NODE    NodeMethod;
    ULONG       ulXMRLicenseLength; 
    ULONG       ulEntitlementTokenLength;
    BYTE        argbDataBuffer[MIN_DIMENSION]; //License and Entitlement Token Buffer 
} KSM_BDA_WMDRM_RENEWLICENSE, *PKSM_BDA_WMDRM_RENEWLICENSE;

typedef struct _KSM_BDA_WMDRMTUNER_PURCHASEENTITLEMENT 
{
    KSM_NODE    NodeMethod;
    ULONG       ulDialogRequest;
    CHAR        cLanguage[12];
    ULONG       ulPurchaseTokenLength;
    BYTE        argbDataBuffer[MIN_DIMENSION]; //Language Buffer before PurchaseToken
} KSM_BDA_WMDRMTUNER_PURCHASEENTITLEMENT, *PKSM_BDA_WMDRMTUNER_PURCHASEENTITLEMENT;

typedef struct _KSM_BDA_WMDRMTUNER_SETPIDPROTECTION 
{
    KSM_NODE    NodeMethod;
    ULONG       ulPID; 
    GUID        uuidKeyID;  
} KSM_BDA_WMDRMTUNER_SETPIDPROTECTION, *PKSM_BDA_WMDRMTUNER_SETPIDPROTECTION;

typedef struct _KSM_BDA_WMDRMTUNER_GETPIDPROTECTION 
{
    KSM_NODE    NodeMethod;
    ULONG       ulPID; 
} KSM_BDA_WMDRMTUNER_GETPIDPROTECTION, *PKSM_BDA_WMDRMTUNER_GETPIDPROTECTION;

typedef struct _KSM_BDA_WMDRMTUNER_SYNCVALUE 
{
    KSM_NODE    NodeMethod;
    ULONG       ulSyncValue;
} KSM_BDA_WMDRMTUNER_SYNCVALUE, *PKSM_BDA_WMDRMTUNER_SYNCVALUE;


//===========================================================================
//
//  KSMethod Set Structure Definitions for PBDA TUNER  
//
//===========================================================================

typedef struct _KSM_BDA_TUNER_TUNEREQUEST 
{
    KSMETHOD    Method;
    ULONG       ulTuneLength; 
    BYTE        argbTuneData [MIN_DIMENSION];
} KSM_BDA_TUNER_TUNEREQUEST, *PKSM_BDA_TUNER_TUNEREQUEST;

//===========================================================================
//
//  KSMethod Set Structure Definitions for PBDA GENERAL PURPOSE NAME VALUES  
//
//===========================================================================

typedef struct _KSM_BDA_GPNV_GETVALUE 
{
    KSMETHOD    Method;
    ULONG       ulNameLength;
    CHAR        cLanguage[12];
    BYTE        argbData [MIN_DIMENSION]; 
} KSM_BDA_GPNV_GETVALUE, *PKSM_BDA_GPNV_GETVALUE;

typedef struct _KSM_BDA_GPNV_SETVALUE 
{
    KSMETHOD    Method;
    ULONG       ulDialogRequest; 
    CHAR        cLanguage[12];
    ULONG       ulNameLength;
    ULONG       ulValueLength;
    BYTE        argbName [MIN_DIMENSION]; 
} KSM_BDA_GPNV_SETVALUE, *PKSM_BDA_GPNV_SETVALUE;

typedef struct _KSM_BDA_GPNV_NAMEINDEX 
{
    KSMETHOD    Method;
    ULONG       ulValueNameIndex; 
} KSM_BDA_GPNV_NAMEINDEX, *PKSM_BDA_GPNV_NAMEINDEX;

//===========================================================================
//
//  KSMethod Set Structure Definitions for PBDA SCANNING  
//
//===========================================================================
typedef struct _KSM_BDA_SCAN_CAPABILTIES 
{
    KSMETHOD    Method;
    GUID        uuidBroadcastStandard;
} KSM_BDA_SCAN_CAPABILTIES, *PKSM_BDA_SCAN_CAPABILTIES;

typedef struct _KSM_BDA_SCAN_FILTER 
{
    KSMETHOD    Method;
    ULONG       ulScanModulationTypeSize;
    ULONG64     AnalogVideoStandards;	
    BYTE        argbScanModulationTypes[MIN_DIMENSION];
} KSM_BDA_SCAN_FILTER, *PKSM_BDA_SCAN_FILTER;

typedef struct _KSM_BDA_SCAN_START 
{
    KSMETHOD    Method;
    ULONG       LowerFrequency;
    ULONG       HigherFrequency;
} KSM_BDA_SCAN_START, *PKSM_BDA_SCAN_START;


//===========================================================================
//
//  KSMethod Set Structure Definitions for PBDA GUIDE DATA  
//
//===========================================================================

typedef  struct _KSM_BDA_GDDS_TUNEXMLFROMIDX {
    KSMETHOD    Method;
    ULONG64     ulIdx;
} KSM_BDA_GDDS_TUNEXMLFROMIDX, *PKSM_BDA_GDDS_TUNEXMLFROMIDX;

typedef  struct _KSM_BDA_GDDS_SERVICEFROMTUNEXML 
{
    KSMETHOD    Method;
    ULONG       ulTuneXmlLength;
    BYTE        argbTuneXml[MIN_DIMENSION];
} KSM_BDA_GDDS_SERVICEFROMTUNEXML , *PKSM_BDA_GDDS_SERVICEFROMTUNEXML;

//===========================================================================
//
//  KSMethod Set Structure Definitions for PBDA USER ACTIVITY   
//
//===========================================================================
typedef struct _KSM_BDA_USERACTIVITY_USEREASON 
{
    KSMETHOD    Method;
    ULONG       ulUseReason; 
} KSM_BDA_USERACTIVITY_USEREASON, *PKSM_BDA_USERACTIVITY_USEREASON;

//===========================================================================
//
//  KSMethod Set Structure Definitions for PBDA CAS  
//
//===========================================================================
typedef struct _KSM_BDA_CAS_ENTITLEMENTTOKEN 
{
    KSM_NODE    NodeMethod;
    ULONG       ulDialogRequest; 
    CHAR        cLanguage[12];
    ULONG       ulRequestType;
    ULONG       ulEntitlementTokenLen;
    BYTE        argbEntitlementToken[MIN_DIMENSION];
} KSM_BDA_CAS_ENTITLEMENTTOKEN, *PKSM_BDA_CAS_ENTITLEMENTTOKEN;

typedef struct _KSM_BDA_CAS_CAPTURETOKEN 
{ 
    KSM_NODE    NodeMethod;
    ULONG       ulTokenLength; 
    BYTE        argbToken [MIN_DIMENSION];
} KSM_BDA_CAS_CAPTURETOKEN, *PKSM_BDA_CAS_CAPTURETOKEN;

typedef struct _KSM_BDA_CAS_OPENBROADCASTMMI 
{
    KSM_NODE    NodeMethod;
    ULONG       ulDialogRequest; 
    CHAR        cLanguage[12];
    ULONG       ulEventId;
} KSM_BDA_CAS_OPENBROADCASTMMI, *PKSM_BDA_CAS_OPENBROADCASTMMI;

typedef struct _KSM_BDA_CAS_CLOSEMMIDIALOG 
{
    KSM_NODE    NodeMethod;
    ULONG       ulDialogRequest;
    CHAR        cLanguage[12];
    ULONG       ulDialogNumber;
    ULONG       ulReason;
} KSM_BDA_CAS_CLOSEMMIDIALOG, *PKSM_BDA_CAS_CLOSEMMIDIALOG;

typedef struct _KSM_BDA_ISDBCAS_REQUEST 
{
    KSM_NODE    NodeMethod;
    ULONG       ulRequestID;
    ULONG       ulIsdbCommandSize;
    BYTE        argbIsdbCommandData [MIN_DIMENSION];
} KSM_BDA_ISDBCAS_REQUEST, *PKSM_BDA_ISDBCAS_REQUEST;

//===========================================================================
//
//  KSMethod Set Structure Definitions for Transprt Stream Selector  
//
//===========================================================================
typedef struct _KSM_BDA_TS_SELECTOR_SETTSID 
{
    KSM_NODE    NodeMethod;
    USHORT      usTSID; 
} KSM_BDA_TS_SELECTOR_SETTSID, *PKSM_BDA_TS_SELECTOR_SETTSID;


//===========================================================================
//
//  BDA Data Range definitions.  Includes specifier definitions.
//
//===========================================================================

//  Antenna Signal Formats
//

typedef struct tagKS_DATARANGE_BDA_ANTENNA {
   KSDATARANGE                  DataRange;

   //   Antenna specifier can go here if required
   //
} KS_DATARANGE_BDA_ANTENNA, *PKS_DATARANGE_BDA_ANTENNA;



//  Transport Formats
//

typedef struct tagBDA_TRANSPORT_INFO {
    ULONG           ulcbPhyiscalPacket; // Size, in bytes, of a physical packet
                                        // (e.g. Satellite link payload size.
    ULONG           ulcbPhyiscalFrame;  // Size, in bytes, of each physical frame
                                        // 0 indicates no HW requirement
    ULONG           ulcbPhyiscalFrameAlignment; // Capture buffer alignment in bytes
                                                // 0 and 1 indicate no alignment requirements
    REFERENCE_TIME  AvgTimePerFrame; // Normal ActiveMovie units (100 nS)

} BDA_TRANSPORT_INFO, *PBDA_TRANSPORT_INFO;

typedef struct tagKS_DATARANGE_BDA_TRANSPORT {
   KSDATARANGE                  DataRange;
   BDA_TRANSPORT_INFO           BdaTransportInfo;

   //   Transport specifier can go here if required
   //
} KS_DATARANGE_BDA_TRANSPORT, *PKS_DATARANGE_BDA_TRANSPORT;


//===========================================================================
//  BDA Event Guids
//
//      These are sent by the IBroadcastEvent service on the graph.
//      To receive,
//          0) Implement IBroadcastEvent in your receiving object - this has one Method on it: Fire()
//          1) QI the graphs service provider for SID_SBroadcastEventService
//                 for the IID_IBroadcastEvent object
//          2) OR create the event service (CLSID_BroadcastEventService) if not already there
//                 and register it
//          3) QI that object for it's IConnectionPoint interface (*pCP)
//          4) Advise your object on *pCP  (e.g. pCP->Advise(static_cast<IBroadCastEvent*>(this), &dwCookie)
//          5) Unadvise when done..
//          6) Implement IBroadcastEvent::Fire(GUID gEventID)
//             Check for relevant event below and deal with it appropriatly...
//===========================================================================

// {83183C03-C09E-45c4-A719-807A94952BF9}
#define STATIC_EVENTID_TuningChanging \
    0x83183c03, 0xc09e, 0x45c4, 0xa7, 0x19, 0x80, 0x7a, 0x94, 0x95, 0x2b, 0xf9
DEFINE_GUIDSTRUCT("83183C03-C09E-45c4-A719-807A94952BF9", EVENTID_TuningChanging);
#define EVENTID_TuningChanging DEFINE_GUIDNAMED(EVENTID_TuningChanging)

// {9D7E6235-4B7D-425d-A6D1-D717C33B9C4C}
#define STATIC_EVENTID_TuningChanged \
    0x9d7e6235, 0x4b7d, 0x425d, 0xa6, 0xd1, 0xd7, 0x17, 0xc3, 0x3b, 0x9c, 0x4c
DEFINE_GUIDSTRUCT("9D7E6235-4B7D-425d-A6D1-D717C33B9C4C", EVENTID_TuningChanged);
#define EVENTID_TuningChanged DEFINE_GUIDNAMED(EVENTID_TuningChanged)

// {9F02D3D0-9F06-4369-9F1E-3AD6CA19807E}
#define STATIC_EVENTID_CandidatePostTuneData \
    0x9F02D3D0, 0x9F06, 0x4369, 0x9F, 0x1E, 0x3A, 0xD6, 0xCA, 0x19, 0x80, 0x7E
DEFINE_GUIDSTRUCT("9F02D3D0-9F06-4369-9F1E-3AD6CA19807E", EVENTID_CandidatePostTuneData);
#define EVENTID_CandidatePostTuneData DEFINE_GUIDNAMED(EVENTID_CandidatePostTuneData)

// {2A65C528-2249-4070-AC16-00390CDFB2DD}
#define STATIC_EVENTID_CADenialCountChanged \
    0x2a65c528, 0x2249, 0x4070, 0xac, 0x16, 0x0, 0x39, 0xc, 0xdf, 0xb2, 0xdd
DEFINE_GUIDSTRUCT("2A65C528-2249-4070-AC16-00390CDFB2DD", EVENTID_CADenialCountChanged);
#define EVENTID_CADenialCountChanged DEFINE_GUIDNAMED(EVENTID_CADenialCountChanged)

// {6D9CFAF2-702D-4b01-8DFF-6892AD20D191}
#define STATIC_EVENTID_SignalStatusChanged \
    0x6d9cfaf2, 0x702d, 0x4b01, 0x8d, 0xff, 0x68, 0x92, 0xad, 0x20, 0xd1, 0x91
DEFINE_GUIDSTRUCT("6D9CFAF2-702D-4b01-8DFF-6892AD20D191", EVENTID_SignalStatusChanged);
#define EVENTID_SignalStatusChanged DEFINE_GUIDNAMED(EVENTID_SignalStatusChanged)

// {C87EC52D-CD18-404a-A076-C02A273D3DE7}
#define STATIC_EVENTID_NewSignalAcquired \
    0xc87ec52d, 0xcd18, 0x404a, 0xa0, 0x76, 0xc0, 0x2a, 0x27, 0x3d, 0x3d, 0xe7
DEFINE_GUIDSTRUCT("C87EC52D-CD18-404a-A076-C02A273D3DE7", EVENTID_NewSignalAcquired);
#define EVENTID_NewSignalAcquired DEFINE_GUIDNAMED(EVENTID_NewSignalAcquired)

// {D10DF9D5-C261-4b85-9E8A-517B3299CAB2}
#define STATIC_EVENTID_EASMessageReceived \
    0xd10df9d5, 0xc261, 0x4b85, 0x9e, 0x8a, 0x51, 0x7b, 0x32, 0x99, 0xca, 0xb2
DEFINE_GUIDSTRUCT("D10DF9D5-C261-4b85-9E8A-517B3299CAB2", EVENTID_EASMessageReceived);
#define EVENTID_EASMessageReceived DEFINE_GUIDNAMED(EVENTID_EASMessageReceived)

// This event is broadcasted with FireEx when a table(currently, PAT, PMT, NIT 
// and SDT for DVB; PAT, PMT, MGT and VCT for ATSC). The four parameters are:
// dwPara1 - TSID, ONID|TSID for DVB EIT
// dwPara2 - TID|PID
// dwPara3 - dwHashedVersion
// dwPara4 - program number for PMT, Segment#|SID for EIT, but not used for others
// {1B9C3703-D447-4e16-97BB-01799FC031ED}
#define STATIC_EVENTID_PSITable \
    0x1b9c3703, 0xd447, 0x4e16, 0x97, 0xbb, 0x1, 0x79, 0x9f, 0xc0, 0x31, 0xed
DEFINE_GUIDSTRUCT("1B9C3703-D447-4e16-97BB-01799FC031ED", EVENTID_PSITable);
#define EVENTID_PSITable DEFINE_GUIDNAMED(EVENTID_PSITable)

// This event is broadcasted with FireEx when the capture graph recognized that a
// current tuning channel has been terminated by broadcaster.
// The four parameters are:
// dwPara1 - TSID
// dwPara2 - ONID|SID
// dwPara3 - channel frequency
// dwPara4 - satellite orbital position (0xFFFFFFFF for non-satellite)
// {0A1D591C-E0D2-4f8e-8960-2335BEF45CCB}
#define STATIC_EVENTID_ServiceTerminated \
    0xa1d591c, 0xe0d2, 0x4f8e, 0x89, 0x60, 0x23, 0x35, 0xbe, 0xf4, 0x5c, 0xcb
DEFINE_GUIDSTRUCT("0A1D591C-E0D2-4f8e-8960-2335BEF45CCB", EVENTID_ServiceTerminated);
#define EVENTID_ServiceTerminated DEFINE_GUIDNAMED(EVENTID_ServiceTerminated)

// {A265FAEA-F874-4b38-9FF7-C53D02969996}
#define STATIC_EVENTID_CardStatusChanged\
    0xa265faea, 0xf874, 0x4b38, 0x9f, 0xf7, 0xc5, 0x3d, 0x2, 0x96, 0x99, 0x96
DEFINE_GUIDSTRUCT("A265FAEA-F874-4b38-9FF7-C53D02969996", EVENTID_CardStatusChanged);
#define EVENTID_CardStatusChanged DEFINE_GUIDNAMED(EVENTID_CardStatusChanged)
#define DTV_CardStatus_Inserted      0
#define DTV_CardStatus_Removed       1
#define DTV_CardStatus_Error         2
#define DTV_CardStatus_FirmwareDownload         3

// {000906F5-F0D1-41d6-A7DF-4028697669F6}
#define STATIC_EVENTID_DRMParingStatusChanged \
    0x906f5, 0xf0d1, 0x41d6, 0xa7, 0xdf, 0x40, 0x28, 0x69, 0x76, 0x69, 0xf6
DEFINE_GUIDSTRUCT("000906F5-F0D1-41d6-A7DF-4028697669F6", EVENTID_DRMParingStatusChanged);
#define EVENTID_DRMParingStatusChanged DEFINE_GUIDNAMED(EVENTID_DRMParingStatusChanged)
// The 1st parameter to this event is a BDA_DRMPairingStatus and 2nd is the error code.

// {5B2EBF78-B752-4420-B41E-A472DC95828E}
#define STATIC_EVENTID_DRMParingStepComplete \
    0x5b2ebf78, 0xb752, 0x4420, 0xb4, 0x1e, 0xa4, 0x72, 0xdc, 0x95, 0x82, 0x8e
DEFINE_GUIDSTRUCT("5B2EBF78-B752-4420-B41E-A472DC95828E", EVENTID_DRMParingStepComplete);
#define EVENTID_DRMParingStepComplete DEFINE_GUIDNAMED(EVENTID_DRMParingStepComplete)
// The 1st parameter is which pairing manager is generting the event
// The 2nd parameter is the step in the pairing process which is now complete
// The 3rd parameter is the result of the step
#define OCUR_PAIRING_PROTOCOL_VERSION 2
#define PBDA_PAIRING_PROTOCOL_VERSION 3

// {052C29AF-09A4-4b93-890F-BD6A348968A4}
#define STATIC_EVENTID_MMIMessage \
    0x52c29af, 0x9a4, 0x4b93, 0x89, 0xf, 0xbd, 0x6a, 0x34, 0x89, 0x68, 0xa4
DEFINE_GUIDSTRUCT("052C29AF-09A4-4b93-890F-BD6A348968A4", EVENTID_MMIMessage);
#define EVENTID_MMIMessage DEFINE_GUIDNAMED(EVENTID_MMIMessage)
#define DTV_MMIMessage_Open             0
#define DTV_MMIMessage_Close            1

// {9071AD5D-2359-4c95-8694-AFA81D70BFD5}
#define STATIC_EVENTID_EntitlementChanged \
    0x9071ad5d, 0x2359, 0x4c95, 0x86, 0x94, 0xaf, 0xa8, 0x1d, 0x70, 0xbf, 0xd5
DEFINE_GUIDSTRUCT("9071AD5D-2359-4c95-8694-AFA81D70BFD5", EVENTID_EntitlementChanged);
#define EVENTID_EntitlementChanged DEFINE_GUIDNAMED(EVENTID_EntitlementChanged)
#define DTV_Entitlement_CanDecrypt          0
#define DTV_Entitlement_NotEntitled         1
#define DTV_Entitlement_TechnicalFailure    2


// This FireEx event is fired when tuning to a STB channel number
// the first parameter passed is the channel number the STB has been tuned to
// {17C4D730-D0F0-413a-8C99-500469DE35AD}
#define STATIC_EVENTID_STBChannelNumber\
    0x17c4d730, 0xd0f0, 0x413a, 0x8c, 0x99, 0x50, 0x04, 0x69, 0xde, 0x35, 0xad
DEFINE_GUIDSTRUCT("17C4D730-D0F0-413a-8C99-500469DE35AD", EVENTID_STBChannelNumber);
#define EVENTID_STBChannelNumber DEFINE_GUIDNAMED(EVENTID_STBChannelNumber)

// {5CA51711-5DDC-41a6-9430-E41B8B3BBC5B}
#define STATIC_EVENTID_BDAEventingServicePendingEvent \
    0x5ca51711, 0x5ddc, 0x41a6, 0x94, 0x30, 0xe4, 0x1b, 0x8b, 0x3b, 0xbc, 0x5b	
DEFINE_GUIDSTRUCT("5CA51711-5DDC-41a6-9430-E41B8B3BBC5B", EVENTID_BDAEventingServicePendingEvent);
#define EVENTID_BDAEventingServicePendingEvent DEFINE_GUIDNAMED(EVENTID_BDAEventingServicePendingEvent)

// {EFC3A459-AE8B-4b4a-8FE9-79A0D097F3EA}
#define STATIC_EVENTID_BDAConditionalAccessTAG \
	0xefc3a459, 0xae8b, 0x4b4a, 0x8f, 0xe9, 0x79, 0xa0, 0xd0, 0x97, 0xf3, 0xea
DEFINE_GUIDSTRUCT("EFC3A459-AE8B-4b4a-8FE9-79A0D097F3EA", EVENTID_BDAConditionalAccessTAG);
#define EVENTID_BDAConditionalAccessTAG DEFINE_GUIDNAMED(EVENTID_BDAConditionalAccessTAG)

// {B2127D42-7BE5-4f4b-9130-6679899F4F4B}
#define STATIC_EVENTTYPE_CASDescrambleFailureEvent \
    0xb2127d42, 0x7be5, 0x4f4b, 0x91, 0x30, 0x66, 0x79, 0x89, 0x9f, 0x4f, 0x4b
DEFINE_GUIDSTRUCT("B2127D42-7BE5-4f4b-9130-6679899F4F4B", EVENTTYPE_CASDescrambleFailureEvent);
#define EVENTTYPE_CASDescrambleFailureEvent DEFINE_GUIDNAMED(EVENTTYPE_CASDescrambleFailureEvent)

// {EAD831AE-5529-4d1f-AFCE-0D8CD1257D30}
#define STATIC_EVENTID_CASFailureSpanningEvent \
    0xead831ae, 0x5529, 0x4d1f, 0xaf, 0xce, 0xd, 0x8c, 0xd1, 0x25, 0x7d, 0x30
DEFINE_GUIDSTRUCT("EAD831AE-5529-4d1f-AFCE-0D8CD1257D30", EVENTID_CASFailureSpanningEvent);
#define EVENTID_CASFailureSpanningEvent DEFINE_GUIDNAMED(EVENTID_CASFailureSpanningEvent)

typedef enum {
    ChannelChangeSpanningEvent_Start = 0,   // Same as MSNP_EVENT_CHANGING defined in ehtraceguids.h
    ChannelChangeSpanningEvent_End = 2      // Same as MSNP_EVENT_COMPLETED defined in ehtraceguids.h
} ChannelChangeSpanningEvent_State;

// {9067C5E5-4C5C-4205-86C8-7AFE20FE1EFA} same as __uuidof(EH_MSNP_TUNING_EVENT) defined in ehtraceguids.h
#define STATIC_EVENTID_ChannelChangeSpanningEvent \
    0x9067C5E5, 0x4C5C, 0x4205, 0x86, 0xc8, 0x7a, 0xfe, 0x20, 0xfe, 0x1e, 0xfa
DEFINE_GUIDSTRUCT("9067C5E5-4C5C-4205-86C8-7AFE20FE1EFA", EVENTID_ChannelChangeSpanningEvent);
#define EVENTID_ChannelChangeSpanningEvent DEFINE_GUIDNAMED(EVENTID_ChannelChangeSpanningEvent)


typedef struct _ChannelChangeInfo
{
    ChannelChangeSpanningEvent_State state;
    ULONGLONG TimeStamp;
}ChannelChangeInfo;

#define STATIC_EVENTID_ChannelTypeSpanningEvent \
    0x72ab1d51, 0x87d2, 0x489b, 0xba, 0x11, 0xe, 0x8, 0xdc, 0x21, 0x2, 0x43
DEFINE_GUIDSTRUCT("72ab1d51-87d2-489b-ba11-0e08dc210243", EVENTID_ChannelTypeSpanningEvent);
#define EVENTID_ChannelTypeSpanningEvent DEFINE_GUIDNAMED(EVENTID_ChannelTypeSpanningEvent)

typedef enum
{
    ChannelTypeNone        = 0x0000,
    // bit flags, can be ORed
    // type == 2 ^ ComponentCategory in bdatypes.h
    ChannelTypeOther       = 0x0001,
    ChannelTypeVideo       = 0x0002,
    ChannelTypeAudio       = 0x0004,
    ChannelTypeText        = 0x0008,
    ChannelTypeSubtitles   = 0x0010,
    ChannelTypeCaptions    = 0x0020,
    ChannelTypeSuperimpose = 0x0040,
    ChannelTypeData        = 0x0080
} ChannelType;

typedef struct _ChannelTypeInfo
{
    ChannelType channelType;
    ULONGLONG timeStamp;
}ChannelTypeInfo;

typedef struct _ChannelInfo
{
    LONG lFrequency;
    union
    {
        struct
        {
            LONG lONID;
            LONG lTSID;
            LONG lSID;
        } DVB;
        struct
        {
            LONG lProgNumber;
        } DC;
        struct 
        {
            LONG lProgNumber;
        } ATSC;
    };

} ChannelInfo;

// {41F36D80-4132-4cc2-B121-01A43219D81B}
#define STATIC_EVENTID_ChannelInfoSpanningEvent \
    0x41f36d80, 0x4132, 0x4cc2, 0xb1, 0x21, 0x1, 0xa4, 0x32, 0x19, 0xd8, 0x1b
DEFINE_GUIDSTRUCT("41F36D80-4132-4cc2-B121-01A43219D81B", EVENTID_ChannelInfoSpanningEvent);
#define EVENTID_ChannelInfoSpanningEvent DEFINE_GUIDNAMED(EVENTID_ChannelInfoSpanningEvent)

// F6CFC8F4-DA93-4f2f-BFF8-BA1EE6FCA3A2 same as __uuidof(EH_RRT_EVENT) defined in ehtraceguids.h
#define STATIC_EVENTID_RRTSpanningEvent \
    0xf6cfc8f4, 0xda93, 0x4f2f, 0xbf, 0xf8, 0xba, 0x1e, 0xe6, 0xfc, 0xa3, 0xa2
DEFINE_GUIDSTRUCT("F6CFC8F4-DA93-4f2f-BFF8-BA1EE6FCA3A2", EVENTID_RRTSpanningEvent);
#define EVENTID_RRTSpanningEvent DEFINE_GUIDNAMED(EVENTID_RRTSpanningEvent)

// Data sturcture for both CaptionServiceDescriptor and Content Advisory descriptor
typedef struct _SpanningEventDescriptor{
    WORD wDataLen;          // Total length of the data(2*sizeof(WORD)+lengthof(bDescriptor))
    WORD wProgNumber;       // Program numberassociated with this descriptor
    WORD wSID;              // Source ID associated with this descriptor
    BYTE bDescriptor[1];    // Raw descriptor data
} SpanningEventDescriptor;

// Caption Service descriptior spanning event
// {EFE779D9-97F0-4786-800D-95CF505DDC66} same as __uuidof(EH_CaptionService_EVENT) defined in ehtraceguids.h
#define STATIC_EVENTID_CSDescriptorSpanningEvent \
	0xefe779d9, 0x97f0, 0x4786, 0x80, 0xd, 0x95, 0xcf, 0x50, 0x5d, 0xdc, 0x66
DEFINE_GUIDSTRUCT("EFE779D9-97F0-4786-800D-95CF505DDC66", EVENTID_CSDescriptorSpanningEvent);
#define EVENTID_CSDescriptorSpanningEvent DEFINE_GUIDNAMED(EVENTID_CSDescriptorSpanningEvent)

// Content Advisory descriptor spanning event
// {3AB4A2E6-4247-4b34-896C-30AFA5D21C24} same as __uuidof(EH_ContentAdvisory_EVENT) defined in ehtraceguids.h
#define STATIC_EVENTID_CtxADescriptorSpanningEvent \
	0x3ab4a2e6, 0x4247, 0x4b34, 0x89, 0x6c, 0x30, 0xaf, 0xa5, 0xd2, 0x1c, 0x24
DEFINE_GUIDSTRUCT("3AB4A2E6-4247-4b34-896C-30AFA5D21C24", EVENTID_CtxADescriptorSpanningEvent);
#define EVENTID_CtxADescriptorSpanningEvent DEFINE_GUIDNAMED(EVENTID_CtxADescriptorSpanningEvent)

typedef struct _DVBScramblingControlSpanningEvent
{
    ULONG ulPID;
    BOOL fScrambled;
} DVBScramblingControlSpanningEvent;

// transport_scarmbling_control flag global event
// {4BD4E1C4-90A1-4109-8236-27F00E7DCC5B}
#define STATIC_EVENTID_DVBScramblingControlSpanningEvent \
    0x4bd4e1c4, 0x90a1, 0x4109, 0x82, 0x36, 0x27, 0xf0, 0xe, 0x7d, 0xcc, 0x5b
DEFINE_GUIDSTRUCT("4BD4E1C4-90A1-4109-8236-27F00E7DCC5B", EVENTID_DVBScramblingControlSpanningEvent);
#define EVENTID_DVBScramblingControlSpanningEvent DEFINE_GUIDNAMED(EVENTID_DVBScramblingControlSpanningEvent)

typedef enum {
    SignalAndServiceStatusSpanningEvent_None            = -1,    
    SignalAndServiceStatusSpanningEvent_Clear           = 0,    // same as MSNP_EVENT_SIGNALANDSERVICE_TYPE in ehtraceguids.h
    SignalAndServiceStatusSpanningEvent_NoTVSignal      = 1,
    SignalAndServiceStatusSpanningEvent_ServiceOffAir   = 2,
    SignalAndServiceStatusSpanningEvent_WeakTVSignal    = 3,
    SignalAndServiceStatusSpanningEvent_NoSubscription  = 4,
    SignalAndServiceStatusSpanningEvent_AllAVScrambled  = 5,
} SignalAndServiceStatusSpanningEvent_State;

// Signal and Service Status event
// {8068C5CB-3C04-492b-B47D-0308820DCE51} same as __uuidof(EH_MSNP_SIGNALANDSERVICE_EVENT) defined in ehtraceguids.h
#define STATIC_EVENTID_SignalAndServiceStatusSpanningEvent \
    0x8068c5cb, 0x3c04, 0x492b, 0xb4, 0x7d, 0x3, 0x8, 0x82, 0xd, 0xce, 0x51
DEFINE_GUIDSTRUCT("8068C5CB-3C04-492b-B47D-0308820DCE51", EVENTID_SignalAndServiceStatusSpanningEvent);
#define EVENTID_SignalAndServiceStatusSpanningEvent DEFINE_GUIDNAMED(EVENTID_SignalAndServiceStatusSpanningEvent)

#define EVENTID_SignalAndServiceStatusEvent EVENTID_SignalAndServiceStatusSpanningEvent 

// Data structure for EmmMessageSpanningEvent
typedef struct _SpanningEventEmmMessage{
    BYTE bCAbroadcasterGroupId; // CA Broadcaster Group ID from CA_service_descriptor (ARIB STD-B25)
    BYTE bMessageControl;       // Message Control from CA_service_descriptor (ARIB STD-B25)
    WORD wServiceId;            // Service ID of ISDB bound with this
    WORD wTableIdExtension;     // Zero means the followings are inoperable
    BYTE bDeletionStatus;
    BYTE bDisplayingDuration1;
    BYTE bDisplayingDuration2;
    BYTE bDisplayingDuration3;
    BYTE bDisplayingCycle;
    BYTE bFormatVersion;
    BYTE bDisplayPosition;
    WORD wMessageLength;
    WCHAR szMessageArea[MIN_DIMENSION];
} SpanningEventEmmMessage;

// EMM Message spanning event
// {6BF00268-4F7E-4294-AA87-E9E953E43F14} same as __uuidof(EH_EmmMessage_EVENT) defined in ehtraceguids.h
#define STATIC_EVENTID_EmmMessageSpanningEvent \
    0x6bf00268, 0x4f7e, 0x4294, 0xaa, 0x87, 0xe9, 0xe9, 0x53, 0xe4, 0x3f, 0x14
DEFINE_GUIDSTRUCT("6BF00268-4F7E-4294-AA87-E9E953E43F14", EVENTID_EmmMessageSpanningEvent);
#define EVENTID_EmmMessageSpanningEvent DEFINE_GUIDNAMED(EVENTID_EmmMessageSpanningEvent)

// {501CBFBE-B849-42ce-9BE9-3DB869FB82B3}
#define STATIC_EVENTID_AudioTypeSpanningEvent \
	0x501cbfbe, 0xb849, 0x42ce, 0x9b, 0xe9, 0x3d, 0xb8, 0x69, 0xfb, 0x82, 0xb3
DEFINE_GUIDSTRUCT("501CBFBE-B849-42ce-9BE9-3DB869FB82B3", EVENTID_AudioTypeSpanningEvent);
#define EVENTID_AudioTypeSpanningEvent DEFINE_GUIDNAMED(EVENTID_AudioTypeSpanningEvent)
// AC 3 audio type and ISO639 language descriptor audio type are slight different. The 
// AudioType values defined here is for the convenience of the user of audio type info 
// and the conversion from the original spec to these values is done in capture.
//
// ISO639 language descriptor audio types:
// 0x00	undefined               (standard audio)
// 0x01	clean effects           
// 0x02	hearing impaired        
// 0x03	visual impaired commentary
// 0x04-0xFF	reserved
// 
// AC3 audio types
// 0 Complete Main (CM)
// 1 Music and Effects (ME)
// 2 Visually Impaired (VI)
// 3 Hearing Impaired (HI)
// 4 Dialogue (D)
// 5 Commentary (C)
// 6 Emergency (E)
// 7 Voiceover (VO)

#define AudioType_Standard              0
#define AudioType_Music_And_Effects     1
#define AudioType_Visually_Impaired     2
#define AudioType_Hearing_Impaired      3
#define AudioType_Dialogue              4
#define AudioType_Commentary            5
#define AudioType_Emergency             6
#define AudioType_Voiceover             7
#define AudioType_Reserved              -1

// {82af2ebc-30a6-4264-a80b-ad2e1372ac60}
#define STATIC_EVENTID_StreamTypeSpanningEvent \
	0x82af2ebc, 0x30a6, 0x4264, 0xa8, 0x0b, 0xad, 0x2e, 0x13, 0x72, 0xac, 0x60
DEFINE_GUIDSTRUCT("82af2ebc-30a6-4264-a80b-ad2e1372ac60", EVENTID_StreamTypeSpanningEvent);
#define EVENTID_StreamTypeSpanningEvent DEFINE_GUIDNAMED(EVENTID_StreamTypeSpanningEvent)

// {3A954083-93D0-463e-90B2-0742C496EDF0}
#define STATIC_EVENTID_ARIBcontentSpanningEvent \
	0x3a954083, 0x93d0, 0x463e, 0x90, 0xb2, 0x7, 0x42, 0xc4, 0x96, 0xed, 0xf0
DEFINE_GUIDSTRUCT("3A954083-93D0-463e-90B2-0742C496EDF0", EVENTID_ARIBcontentSpanningEvent);
#define EVENTID_ARIBcontentSpanningEvent DEFINE_GUIDNAMED(EVENTID_ARIBcontentSpanningEvent)

// {E292666D-9C02-448d-AA8D-781A93FDC395}
#define STATIC_EVENTID_LanguageSpanningEvent \
	0xe292666d, 0x9c02, 0x448d, 0xaa, 0x8d, 0x78, 0x1a, 0x93, 0xfd, 0xc3, 0x95
DEFINE_GUIDSTRUCT("E292666D-9C02-448d-AA8D-781A93FDC395", EVENTID_LanguageSpanningEvent);
#define EVENTID_LanguageSpanningEvent DEFINE_GUIDNAMED(EVENTID_LanguageSpanningEvent)
typedef struct _LanguageInfo
{
    LANGID LangID;
    LONG lISOLangCode;
} LanguageInfo;

// {A9A29B56-A84B-488c-89D5-0D4E7657C8CE}
#define STATIC_EVENTID_DualMonoSpanningEvent \
    0xa9a29b56, 0xa84b, 0x488c, 0x89, 0xd5, 0x0d, 0x4e, 0x76, 0x57, 0xc8, 0xce
DEFINE_GUIDSTRUCT("A9A29B56-A84B-488c-89D5-0D4E7657C8CE", EVENTID_DualMonoSpanningEvent);
#define EVENTID_DualMonoSpanningEvent DEFINE_GUIDNAMED(EVENTID_DualMonoSpanningEvent)
typedef struct _DualMonoInfo
{
    LANGID LangID1;
    LANGID LangID2;
    LONG lISOLangCode1;
    LONG lISOLangCode2;
} DualMonoInfo;

// {47FC8F65-E2BB-4634-9CEF-FDBFE6261D5C}
#define STATIC_EVENTID_PIDListSpanningEvent \
	0x47fc8f65, 0xe2bb, 0x4634, 0x9c, 0xef, 0xfd, 0xbf, 0xe6, 0x26, 0x1d, 0x5c
DEFINE_GUIDSTRUCT("47FC8F65-E2BB-4634-9CEF-FDBFE6261D5C", EVENTID_PIDListSpanningEvent);
#define EVENTID_PIDListSpanningEvent DEFINE_GUIDNAMED(EVENTID_PIDListSpanningEvent)
typedef struct _PIDListSpanningEvent
{
    WORD wPIDCount;
    ULONG pulPIDs[1];
} PIDListSpanningEvent;

// {107BD41C-A6DA-4691-8369-11B2CDAA288E}
#define STATIC_EVENTID_AudioDescriptorSpanningEvent \
    0x107bd41c, 0xa6da, 0x4691, 0x83, 0x69, 0x11, 0xb2, 0xcd, 0xaa, 0x28, 0x8e
DEFINE_GUIDSTRUCT("107BD41C-A6DA-4691-8369-11B2CDAA288E", EVENTID_AudioDescriptorSpanningEvent);
#define EVENTID_AudioDescriptorSpanningEvent DEFINE_GUIDNAMED(EVENTID_AudioDescriptorSpanningEvent)

// {5DCEC048-D0B9-4163-872C-4F32223BE88A}
#define STATIC_EVENTID_SubtitleSpanningEvent \
	0x5dcec048, 0xd0b9, 0x4163, 0x87, 0x2c, 0x4f, 0x32, 0x22, 0x3b, 0xe8, 0x8a
DEFINE_GUIDSTRUCT("5DCEC048-D0B9-4163-872C-4F32223BE88A", EVENTID_SubtitleSpanningEvent);
#define EVENTID_SubtitleSpanningEvent DEFINE_GUIDNAMED(EVENTID_SubtitleSpanningEvent)

// {9599D950-5F33-4617-AF7C-1E54B510DAA3}
#define STATIC_EVENTID_TeletextSpanningEvent \
	0x9599d950, 0x5f33, 0x4617, 0xaf, 0x7c, 0x1e, 0x54, 0xb5, 0x10, 0xda, 0xa3
DEFINE_GUIDSTRUCT("9599D950-5F33-4617-AF7C-1E54B510DAA3", EVENTID_TeletextSpanningEvent);
#define EVENTID_TeletextSpanningEvent DEFINE_GUIDNAMED(EVENTID_TeletextSpanningEvent)

// {CAF1AB68-E153-4d41-A6B3-A7C998DB75EE}
#define STATIC_EVENTID_StreamIDSpanningEvent \
	0xcaf1ab68, 0xe153, 0x4d41, 0xa6, 0xb3, 0xa7, 0xc9, 0x98, 0xdb, 0x75, 0xee
DEFINE_GUIDSTRUCT("CAF1AB68-E153-4d41-A6B3-A7C998DB75EE", EVENTID_StreamIDSpanningEvent);
#define EVENTID_StreamIDSpanningEvent DEFINE_GUIDNAMED(EVENTID_StreamIDSpanningEvent)

// {F947AA85-FB52-48e8-B9C5-E1E1F411A51A}
#define STATIC_EVENTID_PBDAParentalControlEvent \
	0xf947aa85, 0xfb52, 0x48e8, 0xb9, 0xc5, 0xe1, 0xe1, 0xf4, 0x11, 0xa5, 0x1a
DEFINE_GUIDSTRUCT("F947AA85-FB52-48e8-B9C5-E1E1F411A51A", EVENTID_PBDAParentalControlEvent);
#define EVENTID_PBDAParentalControlEvent DEFINE_GUIDNAMED(EVENTID_PBDAParentalControlEvent)

#pragma pack(push,1)

#define MAX_COUNTRY_CODE_STRING 3

typedef struct {
    DWORD rating_attribute_id;
    DWORD rating_attribute_value;
} RATING_ATTRIBUTE, *LPRATING_ATTRIBUTE;

typedef struct {
    GUID                rating_system_id;
    BYTE                rating_system_is_age_type:  1;
    BYTE                reserved:                   7;
    BYTE                country_code[MAX_COUNTRY_CODE_STRING];
    DWORD               rating_attribute_count;
    RATING_ATTRIBUTE    *lpratingattrib; 
} RATING_SYSTEM, *LPRATING_SYSTEM; 

typedef struct {
    DWORD           rating_system_count;
    RATING_SYSTEM   *lpratingsystem;

} RATING_INFO, *LPRATING_INFO;

// attribute_id
#define PARENTAL_CONTROL_TIME_RANGE                  0x00000001  // Parental Control Time Range
#define REQUIRED_PARENTAL_CONTROL_TIME_RANGE         0x00000002  // Required Parental Control Time Range
#define PARENTAL_CONTROL_CONTENT_RATING     0x00000100  // Rating   (overall/primary content rating)
#define PARENTAL_CONTROL_ATTRIB_VIOLENCE    0x00000200  // Violence
#define PARENTAL_CONTROL_ATTRIB_LANGUAGE    0x00000201  // Language
#define PARENTAL_CONTROL_ATTRIB_SEXUAL      0x00000202  // Sexual Content
#define PARENTAL_CONTROL_ATTRIB_DIALOGUE    0x00000203  // Dialogue 
#define PARENTAL_CONTROL_ATTRIB_FANTASY     0x00000204  // Fantasy Violence 

#define PARENTAL_CONTROL_VALUE_UNDEFINED    0           // UNDEFINED 

typedef struct _PBDAParentalControl
{
    ULONG               rating_system_count;    // number of rating systems in PBDA parenatl control table
    RATING_SYSTEM *     rating_systems;         // PBDA unified rating systems
} PBDAParentalControl;

#pragma pack(pop)

// {D97287B2-2DFD-436a-9485-99D7D4AB5A69}
#define STATIC_EVENTID_TuneFailureEvent \
    0xd97287b2, 0x2dfd, 0x436a, 0x94, 0x85, 0x99, 0xd7, 0xd4, 0xab, 0x5a, 0x69
DEFINE_GUIDSTRUCT("D97287B2-2DFD-436a-9485-99D7D4AB5A69", EVENTID_TuneFailureEvent);
#define EVENTID_TuneFailureEvent DEFINE_GUIDNAMED(EVENTID_TuneFailureEvent)

// {6F8AA455-5EE1-48ab-A27C-4C8D70B9AEBA}
#define STATIC_EVENTID_TuneFailureSpanningEvent \
    0x6f8aa455, 0x5ee1, 0x48ab, 0xa2, 0x7c, 0x4c, 0x8d, 0x70, 0xb9, 0xae, 0xba
DEFINE_GUIDSTRUCT("6F8AA455-5EE1-48ab-A27C-4C8D70B9AEBA", EVENTID_TuneFailureSpanningEvent);
#define EVENTID_TuneFailureSpanningEvent DEFINE_GUIDNAMED(EVENTID_TuneFailureSpanningEvent)

// {2A67A58D-ECA5-4eac-ABCB-E734D3776D0A}
#define STATIC_EVENTID_DvbParentalRatingDescriptor \
    0x2a67a58d, 0xeca5, 0x4eac, 0xab, 0xcb, 0xe7, 0x34, 0xd3, 0x77, 0x6d, 0x0a
DEFINE_GUIDSTRUCT("2A67A58D-ECA5-4eac-ABCB-E734D3776D0A", EVENTID_DvbParentalRatingDescriptor);
#define EVENTID_DvbParentalRatingDescriptor DEFINE_GUIDNAMED(EVENTID_DvbParentalRatingDescriptor)
typedef struct
{
    CHAR szCountryCode[4];  // 3-chars + null
    BYTE bRating;           // rating
} DvbParentalRatingParam;
typedef struct 
{
    ULONG                   ulNumParams; // if zero, no rating
    DvbParentalRatingParam pParams[1];
} DvbParentalRatingDescriptor;

// {F5689FFE-55F9-4bb3-96BE-AE971C63BAE0}
#define STATIC_EVENTID_DFNWithNoActualAVData \
    0xf5689ffe, 0x55f9, 0x4bb3, 0x96, 0xbe, 0xae, 0x97, 0x1c, 0x63, 0xba, 0xe0
DEFINE_GUIDSTRUCT("F5689FFE-55F9-4bb3-96BE-AE971C63BAE0", EVENTID_DFNWithNoActualAVData);
#define EVENTID_DFNWithNoActualAVData DEFINE_GUIDNAMED(EVENTID_DFNWithNoActualAVData)

//===========================================================================
//
//  BDA Stream Format GUIDs
//
//===========================================================================

#define STATIC_KSDATAFORMAT_TYPE_BDA_ANTENNA\
    0x71985f41, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F41-1CA1-11d3-9CC8-00C04F7971E0", KSDATAFORMAT_TYPE_BDA_ANTENNA);
#define KSDATAFORMAT_TYPE_BDA_ANTENNA DEFINE_GUIDNAMED(KSDATAFORMAT_TYPE_BDA_ANTENNA)


#define STATIC_KSDATAFORMAT_SUBTYPE_BDA_MPEG2_TRANSPORT\
    0xf4aeb342, 0x0329, 0x4fdd, 0xa8, 0xfd, 0x4a, 0xff, 0x49, 0x26, 0xc9, 0x78
DEFINE_GUIDSTRUCT("F4AEB342-0329-4fdd-A8FD-4AFF4926C978", KSDATAFORMAT_SUBTYPE_BDA_MPEG2_TRANSPORT);
#define KSDATAFORMAT_SUBTYPE_BDA_MPEG2_TRANSPORT DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_BDA_MPEG2_TRANSPORT)


#define STATIC_KSDATAFORMAT_SPECIFIER_BDA_TRANSPORT\
    0x8deda6fd, 0xac5f, 0x4334, 0x8e, 0xcf, 0xa4, 0xba, 0x8f, 0xa7, 0xd0, 0xf0
DEFINE_GUIDSTRUCT("8DEDA6FD-AC5F-4334-8ECF-A4BA8FA7D0F0", KSDATAFORMAT_SPECIFIER_BDA_TRANSPORT);
#define KSDATAFORMAT_SPECIFIER_BDA_TRANSPORT DEFINE_GUIDNAMED(KSDATAFORMAT_SPECIFIER_BDA_TRANSPORT)


#define STATIC_KSDATAFORMAT_TYPE_BDA_IF_SIGNAL\
    0x61be0b47, 0xa5eb, 0x499b, 0x9a, 0x85, 0x5b, 0x16, 0xc0, 0x7f, 0x12, 0x58
DEFINE_GUIDSTRUCT("61BE0B47-A5EB-499b-9A85-5B16C07F1258", KSDATAFORMAT_TYPE_BDA_IF_SIGNAL);
#define KSDATAFORMAT_TYPE_BDA_IF_SIGNAL DEFINE_GUIDNAMED(KSDATAFORMAT_TYPE_BDA_IF_SIGNAL)


#define STATIC_KSDATAFORMAT_TYPE_MPEG2_SECTIONS\
    0x455f176c, 0x4b06, 0x47ce, 0x9a, 0xef, 0x8c, 0xae, 0xf7, 0x3d, 0xf7, 0xb5
DEFINE_GUIDSTRUCT("455F176C-4B06-47CE-9AEF-8CAEF73DF7B5", KSDATAFORMAT_TYPE_MPEG2_SECTIONS);
#define KSDATAFORMAT_TYPE_MPEG2_SECTIONS DEFINE_GUIDNAMED(KSDATAFORMAT_TYPE_MPEG2_SECTIONS)


#define STATIC_KSDATAFORMAT_SUBTYPE_ATSC_SI\
    0xb3c7397c, 0xd303, 0x414d, 0xb3, 0x3c, 0x4e, 0xd2, 0xc9, 0xd2, 0x97, 0x33
DEFINE_GUIDSTRUCT("B3C7397C-D303-414D-B33C-4ED2C9D29733", KSDATAFORMAT_SUBTYPE_ATSC_SI);
#define KSDATAFORMAT_SUBTYPE_ATSC_SI DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ATSC_SI)


#define STATIC_KSDATAFORMAT_SUBTYPE_DVB_SI\
    0xe9dd31a3, 0x221d, 0x4adb, 0x85, 0x32, 0x9a, 0xf3, 0x9, 0xc1, 0xa4, 0x8
DEFINE_GUIDSTRUCT("e9dd31a3-221d-4adb-8532-9af309c1a408", KSDATAFORMAT_SUBTYPE_DVB_SI);
#define KSDATAFORMAT_SUBTYPE_DVB_SI DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_DVB_SI)


#define STATIC_KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_PSIP\
    0x762e3f66, 0x336f, 0x48d1, 0xbf, 0x83, 0x2b, 0x0, 0x35, 0x2c, 0x11, 0xf0
DEFINE_GUIDSTRUCT("762E3F66-336F-48d1-BF83-2B00352C11F0", KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_PSIP);
#define KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_PSIP DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_PSIP)


#define STATIC_KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_OOB_PSIP\
    0x951727db, 0xd2ce, 0x4528, 0x96, 0xf6, 0x33, 0x1, 0xfa, 0xbb, 0x2d, 0xe0
DEFINE_GUIDSTRUCT("951727DB-D2CE-4528-96F6-3301FABB2DE0", KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_OOB_PSIP);
#define KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_OOB_PSIP DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_OOB_PSIP)


#define STATIC_KSDATAFORMAT_SUBTYPE_ISDB_SI\
    0x4a2eeb99, 0x6458, 0x4538, 0xb1, 0x87, 0x04, 0x01, 0x7c, 0x41, 0x41, 0x3f
DEFINE_GUIDSTRUCT("4a2eeb99-6458-4538-b187-04017c41413f", KSDATAFORMAT_SUBTYPE_ISDB_SI);
#define KSDATAFORMAT_SUBTYPE_ISDB_SI DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_ISDB_SI)


#define STATIC_KSDATAFORMAT_SUBTYPE_PBDA_TRANSPORT_RAW\
    0x0d7aed42, 0xcb9a, 0x11db, 0x97, 0x05, 0x00, 0x50, 0x56, 0xc0, 0x00, 0x08
DEFINE_GUIDSTRUCT("0d7AED42-CB9A-11DB-9705-005056C00008", KSDATAFORMAT_SUBTYPE_PBDA_TRANSPORT_RAW);
#define KSDATAFORMAT_SUBTYPE_PBDA_TRANSPORT_RAW DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_PBDA_TRANSPORT_RAW)


//===========================================================================
//
//  KSPinName Definitions for BDA
//
//===========================================================================

//  Pin name for a BDA transport pin
//
// {78216A81-CFA8-493e-9711-36A61C08BD9D}
//
#define STATIC_PINNAME_BDA_TRANSPORT \
    0x78216a81, 0xcfa8, 0x493e, 0x97, 0x11, 0x36, 0xa6, 0x1c, 0x8, 0xbd, 0x9d
DEFINE_GUIDSTRUCT("78216A81-CFA8-493e-9711-36A61C08BD9D", PINNAME_BDA_TRANSPORT);
#define PINNAME_BDA_TRANSPORT DEFINE_GUIDNAMED(PINNAME_BDA_TRANSPORT)


//  Pin name for a BDA analog video pin
//
// {5C0C8281-5667-486c-8482-63E31F01A6E9}
//
#define STATIC_PINNAME_BDA_ANALOG_VIDEO \
    0x5c0c8281, 0x5667, 0x486c, 0x84, 0x82, 0x63, 0xe3, 0x1f, 0x1, 0xa6, 0xe9
DEFINE_GUIDSTRUCT("5C0C8281-5667-486c-8482-63E31F01A6E9", PINNAME_BDA_ANALOG_VIDEO);
#define PINNAME_BDA_ANALOG_VIDEO DEFINE_GUIDNAMED(PINNAME_BDA_ANALOG_VIDEO)


//  Pin name for a BDA analog audio pin
//
// {D28A580A-9B1F-4b0c-9C33-9BF0A8EA636B}
//
#define STATIC_PINNAME_BDA_ANALOG_AUDIO \
    0xd28a580a, 0x9b1f, 0x4b0c, 0x9c, 0x33, 0x9b, 0xf0, 0xa8, 0xea, 0x63, 0x6b
DEFINE_GUIDSTRUCT("D28A580A-9B1F-4b0c-9C33-9BF0A8EA636B", PINNAME_BDA_ANALOG_AUDIO);
#define PINNAME_BDA_ANALOG_AUDIO DEFINE_GUIDNAMED(PINNAME_BDA_ANALOG_AUDIO)


//  Pin name for a BDA FM Radio pin
//
// {D2855FED-B2D3-4eeb-9BD0-193436A2F890}
//
#define STATIC_PINNAME_BDA_FM_RADIO \
    0xd2855fed, 0xb2d3, 0x4eeb, 0x9b, 0xd0, 0x19, 0x34, 0x36, 0xa2, 0xf8, 0x90
DEFINE_GUIDSTRUCT("D2855FED-B2D3-4eeb-9BD0-193436A2F890", PINNAME_BDA_FM_RADIO);
#define PINNAME_BDA_FM_RADIO DEFINE_GUIDNAMED(PINNAME_BDA_FM_RADIO)


//  Pin name for a BDA Intermediate Frequency pin
//
// {1A9D4A42-F3CD-48a1-9AEA-71DE133CBE14}
//
#define STATIC_PINNAME_BDA_IF_PIN \
    0x1a9d4a42, 0xf3cd, 0x48a1, 0x9a, 0xea, 0x71, 0xde, 0x13, 0x3c, 0xbe, 0x14
DEFINE_GUIDSTRUCT("1A9D4A42-F3CD-48a1-9AEA-71DE133CBE14", PINNAME_BDA_IF_PIN);
#define PINNAME_BDA_IF_PIN DEFINE_GUIDNAMED(PINNAME_BDA_IF_PIN)


//  Pin name for a BDA Open Cable PSIP pin
//
// {297BB104-E5C9-4ACE-B123-95C3CBB24D4F}
//
#define STATIC_PINNAME_BDA_OPENCABLE_PSIP_PIN \
    0x297bb104, 0xe5c9, 0x4ace, 0xb1, 0x23, 0x95, 0xc3, 0xcb, 0xb2, 0x4d, 0x4f
DEFINE_GUIDSTRUCT("297BB104-E5C9-4ACE-B123-95C3CBB24D4F", PINNAME_BDA_OPENCABLE_PSIP_PIN);
#define PINNAME_BDA_OPENCABLE_PSIP_PIN DEFINE_GUIDNAMED(PINNAME_BDA_OPENCABLE_PSIP_PIN)


//===========================================================================
//
//  KSProperty Set Definitions for BDA
//
//===========================================================================


//------------------------------------------------------------
//
//  BDA Network Ethernet Filter Property Set
//
// {71985F43-1CA1-11d3-9CC8-00C04F7971E0}
//
#define STATIC_KSPROPSETID_BdaEthernetFilter \
    0x71985f43, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F43-1CA1-11d3-9CC8-00C04F7971E0", KSPROPSETID_BdaEthernetFilter);
#define KSPROPSETID_BdaEthernetFilter DEFINE_GUIDNAMED(KSPROPSETID_BdaEthernetFilter)

typedef enum {
    KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_LIST_SIZE = 0,
    KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_LIST,
    KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_MODE
} KSPROPERTY_BDA_ETHERNET_FILTER;

#define DEFINE_KSPROPERTY_ITEM_BDA_ETHERNET_FILTER_MULTICAST_LIST_SIZE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_LIST_SIZE,\
        (GetHandler),\
        sizeof(KSPROPERTY),\
        sizeof(ULONG),\
        FALSE,\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_ETHERNET_FILTER_MULTICAST_LIST(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_LIST,\
        (GetHandler),\
        sizeof(KSPROPERTY),\
        sizeof(BDA_ETHERNET_ADDRESS_LIST),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_ETHERNET_FILTER_MULTICAST_MODE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_MODE,\
        (GetHandler),\
        sizeof(KSPROPERTY),\
        sizeof(BDA_MULTICAST_MODE),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)



//------------------------------------------------------------
//
//  BDA Network IPv4 Filter Property Set
//
// {71985F44-1CA1-11d3-9CC8-00C04F7971E0}
//
#define STATIC_KSPROPSETID_BdaIPv4Filter \
    0x71985f44, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F44-1CA1-11d3-9CC8-00C04F7971E0", KSPROPSETID_BdaIPv4Filter);
#define KSPROPSETID_BdaIPv4Filter DEFINE_GUIDNAMED(KSPROPSETID_BdaIPv4Filter)

typedef enum {
    KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_LIST_SIZE = 0,
    KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_LIST,
    KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_MODE
} KSPROPERTY_BDA_IPv4_FILTER;

#define DEFINE_KSPROPERTY_ITEM_BDA_IPv4_FILTER_MULTICAST_LIST_SIZE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_LIST_SIZE,\
        (GetHandler),\
        sizeof(KSPROPERTY),\
        sizeof(ULONG),\
        FALSE,\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_IPv4_FILTER_MULTICAST_LIST(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_LIST,\
        (GetHandler),\
        sizeof(KSPROPERTY),\
        sizeof(BDA_IPv4_ADDRESS_LIST),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_IPv4_FILTER_MULTICAST_MODE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_MODE,\
        (GetHandler),\
        sizeof(KSPROPERTY),\
        sizeof(BDA_MULTICAST_MODE),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)



//------------------------------------------------------------
//
//  BDA Network IPv6 Filter Property Set
//
// {E1785A74-2A23-4fb3-9245-A8F88017EF33}
//
#define STATIC_KSPROPSETID_BdaIPv6Filter \
    0xe1785a74, 0x2a23, 0x4fb3, 0x92, 0x45, 0xa8, 0xf8, 0x80, 0x17, 0xef, 0x33
DEFINE_GUIDSTRUCT("E1785A74-2A23-4fb3-9245-A8F88017EF33", KSPROPSETID_BdaIPv6Filter);
#define KSPROPSETID_BdaIPv6Filter DEFINE_GUIDNAMED(KSPROPSETID_BdaIPv6Filter)

typedef enum {
    KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_LIST_SIZE = 0,
    KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_LIST,
    KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_MODE
} KSPROPERTY_BDA_IPv6_FILTER;

#define DEFINE_KSPROPERTY_ITEM_BDA_IPv6_FILTER_MULTICAST_LIST_SIZE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_LIST_SIZE,\
        (GetHandler),\
        sizeof(KSPROPERTY),\
        sizeof(ULONG),\
        FALSE,\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_IPv6_FILTER_MULTICAST_LIST(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_LIST,\
        (GetHandler),\
        sizeof(KSPROPERTY),\
        sizeof(BDA_IPv6_ADDRESS_LIST),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_IPv6_FILTER_MULTICAST_MODE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_MODE,\
        (GetHandler),\
        sizeof(KSPROPERTY),\
        sizeof(BDA_MULTICAST_MODE),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)


//------------------------------------------------------------
//
//
//  BDA Signal Statistics Property Set
//
//  Used to get signal statistics from a control node or a pin.
//  Set NodeId == -1 to get properties from the pin.
//
//  {1347D106-CF3A-428a-A5CB-AC0D9A2A4338}
//
#define STATIC_KSPROPSETID_BdaSignalStats \
    0x1347d106, 0xcf3a, 0x428a, 0xa5, 0xcb, 0xac, 0xd, 0x9a, 0x2a, 0x43, 0x38
DEFINE_GUIDSTRUCT("1347D106-CF3A-428a-A5CB-AC0D9A2A4338", KSPROPSETID_BdaSignalStats);
#define KSPROPSETID_BdaSignalStats DEFINE_GUIDNAMED(KSPROPSETID_BdaSignalStats)

typedef enum {
    KSPROPERTY_BDA_SIGNAL_STRENGTH = 0,
    KSPROPERTY_BDA_SIGNAL_QUALITY,
    KSPROPERTY_BDA_SIGNAL_PRESENT,
    KSPROPERTY_BDA_SIGNAL_LOCKED,
    KSPROPERTY_BDA_SAMPLE_TIME,
    KSPROPERTY_BDA_SIGNAL_LOCK_CAPS,
    KSPROPERTY_BDA_SIGNAL_LOCK_TYPE
} KSPROPERTY_BDA_SIGNAL_STATS;

typedef enum _BdaLockType {
    Bda_LockType_None          = 0x00,
    Bda_LockType_PLL           = 0x01,
    Bda_LockType_DecoderDemod  = 0x02,
    Bda_LockType_Complete      = 0x80
} BDA_LockType;

//  OPTIONAL
//  Carrier strength in mDb (1/1000 of a DB).
//
//  A strength of 0 is nominal strength as expected for the given
//  type of broadcast network.
//
//  Sub-nominal strengths are reported as positive mDb
//
//  Super-nominal strengths are reported as negative mDb
//
#define DEFINE_KSPROPERTY_ITEM_BDA_SIGNAL_STRENGTH(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_SIGNAL_STRENGTH,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(LONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

//  OPTIONAL
//  Amount of data successfully extracted from the signal as a percent.
//
//  Signal Quality is usually reported by the demodulation node and is
//  a representation of how much of the original data could be extracted
//  from the signal.
//
//  In the case of Analog Signals, this percentage can be
//  computed by examining the timing of HSync and VSync as will as by
//  looking at information contained in HBlanking and VBlanking intervals.
//
//  In the case of Digital Signals, this percentage can be
//  computed by examining packet CRCs and FEC confidence values.
//
//  100 percent is ideal.
//  95 percent shows very little (almost unnoticable) artifacts when rendered.
//  90 percent contains few enough artifacts as to be easily viewable.
//  80 percent is the minimum level to be viewable.
//  60 percent is the minimum level to expect data services
//  (including EPG) to work.
//  20 percent indicates that the demodulator knows that a properly modulated
//  signal exists but can't produce enough data to be useful.
//
#define DEFINE_KSPROPERTY_ITEM_BDA_SIGNAL_QUALITY(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_SIGNAL_QUALITY,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(LONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

//  REQUIRED
//  True if a signal carrier is present.
//
//  Should be returned by the RF tuner node.
//
#define DEFINE_KSPROPERTY_ITEM_BDA_SIGNAL_PRESENT(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_SIGNAL_PRESENT,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(BOOL),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

//  REQUIRED
//  True if the signal can be locked.
//
//  Ususally represents PLL lock when returned by the RF Tuner Node.
//
//  Represents Signal Quality of at least 20% when returned by the
//  demodulator node.
//
#define DEFINE_KSPROPERTY_ITEM_BDA_SIGNAL_LOCKED(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_SIGNAL_LOCKED,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(BOOL),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

//  OPTIONAL
//  Indicates the sample time overwhich signal level and quality are
//  averaged.
//
//  Each time a signal statistics property is requested, the node should
//  report the average value for the last n milliseconds where n is the
//  value set by this property.  If no value is set or if the driver does
//  not support this property, the driver should default to
//  100 millisecond sample times.
//
//  The driver may report values for the most recently completed sample
//  period.
//
#define DEFINE_KSPROPERTY_ITEM_BDA_SAMPLE_TIME(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_SAMPLE_TIME,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(LONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)


//  REQUIRED
//  returns a bitmask of supported BDA_LockType_ values
//
//  Should be returned by the RF tuner node.
//
#define DEFINE_KSPROPERTY_ITEM_BDA_SIGNAL_LOCK_CAPS(GetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_SIGNAL_LOCK_CAPS,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(BOOL),\
        NULL,\
        NULL, 0, NULL, NULL, 0)

//  REQUIRED
//  returns current BDA_LockType_ value
//
//  Should be returned by the RF tuner node.
//
#define DEFINE_KSPROPERTY_ITEM_BDA_SIGNAL_LOCK_TYPE(GetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_SIGNAL_LOCK_TYPE,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(BDA_LockType),\
        NULL,\
        NULL, 0, NULL, NULL, 0)

//------------------------------------------------------------
//
//
//  BDA Change Sync Method Set
//
// {FD0A5AF3-B41D-11d2-9C95-00C04F7971E0}
//
#define STATIC_KSMETHODSETID_BdaChangeSync \
    0xfd0a5af3, 0xb41d, 0x11d2, 0x9c, 0x95, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("FD0A5AF3-B41D-11d2-9C95-00C04F7971E0", KSMETHODSETID_BdaChangeSync);
#define KSMETHODSETID_BdaChangeSync DEFINE_GUIDNAMED(KSMETHODSETID_BdaChangeSync)

typedef enum {
    KSMETHOD_BDA_START_CHANGES = 0,
    KSMETHOD_BDA_CHECK_CHANGES,
    KSMETHOD_BDA_COMMIT_CHANGES,
    KSMETHOD_BDA_GET_CHANGE_STATE
} KSMETHOD_BDA_CHANGE_SYNC;

#define DEFINE_KSMETHOD_ITEM_BDA_START_CHANGES(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
        KSMETHOD_BDA_START_CHANGES,\
        KSMETHOD_TYPE_NONE,\
        (MethodHandler),\
        sizeof(KSMETHOD),\
        0,\
        SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_CHECK_CHANGES(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
        KSMETHOD_BDA_CHECK_CHANGES,\
        KSMETHOD_TYPE_NONE,\
        (MethodHandler),\
        sizeof(KSMETHOD),\
        0,\
        SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_COMMIT_CHANGES(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
        KSMETHOD_BDA_COMMIT_CHANGES,\
        KSMETHOD_TYPE_NONE,\
        (MethodHandler),\
        sizeof(KSMETHOD),\
        0,\
        SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_GET_CHANGE_STATE(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
        KSMETHOD_BDA_GET_CHANGE_STATE,\
        KSMETHOD_TYPE_READ,\
        (MethodHandler),\
        sizeof(KSMETHOD),\
        0,\
        SupportHandler)



//------------------------------------------------------------
//
//
//  BDA Device Configuration Method Set
//
// {71985F45-1CA1-11d3-9CC8-00C04F7971E0}
//
#define STATIC_KSMETHODSETID_BdaDeviceConfiguration \
    0x71985f45, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F45-1CA1-11d3-9CC8-00C04F7971E0", KSMETHODSETID_BdaDeviceConfiguration);
#define KSMETHODSETID_BdaDeviceConfiguration DEFINE_GUIDNAMED(KSMETHODSETID_BdaDeviceConfiguration)

typedef enum {
    KSMETHOD_BDA_CREATE_PIN_FACTORY = 0,
    KSMETHOD_BDA_DELETE_PIN_FACTORY,
    KSMETHOD_BDA_CREATE_TOPOLOGY
} KSMETHOD_BDA_DEVICE_CONFIGURATION;

#define DEFINE_KSMETHOD_ITEM_BDA_CREATE_PIN_FACTORY(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
        KSMETHOD_BDA_CREATE_PIN_FACTORY,\
        KSMETHOD_TYPE_READ,\
        (MethodHandler),\
        sizeof(KSM_BDA_PIN),\
        sizeof(ULONG),\
        SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_DELETE_PIN_FACTORY(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
        KSMETHOD_BDA_DELETE_PIN_FACTORY,\
        KSMETHOD_TYPE_NONE,\
        (MethodHandler),\
        sizeof(KSM_BDA_PIN),\
        0,\
        SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_CREATE_TOPOLOGY(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
        KSMETHOD_BDA_CREATE_TOPOLOGY,\
        KSMETHOD_TYPE_WRITE,\
        (MethodHandler),\
        sizeof(KSM_BDA_PIN_PAIR),\
        0,\
        SupportHandler)



//------------------------------------------------------------
//
//
//  BDA Topology Property Set
//
// {A14EE835-0A23-11d3-9CC7-00C04F7971E0}
//
#define STATIC_KSPROPSETID_BdaTopology \
    0xa14ee835, 0x0a23, 0x11d3, 0x9c, 0xc7, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("A14EE835-0A23-11d3-9CC7-00C04F7971E0", KSPROPSETID_BdaTopology);
#define KSPROPSETID_BdaTopology DEFINE_GUIDNAMED(KSPROPSETID_BdaTopology)

typedef enum {
    KSPROPERTY_BDA_NODE_TYPES,
    KSPROPERTY_BDA_PIN_TYPES,
    KSPROPERTY_BDA_TEMPLATE_CONNECTIONS,
    KSPROPERTY_BDA_NODE_METHODS,
    KSPROPERTY_BDA_NODE_PROPERTIES,
    KSPROPERTY_BDA_NODE_EVENTS,
    KSPROPERTY_BDA_CONTROLLING_PIN_ID,
    KSPROPERTY_BDA_NODE_DESCRIPTORS
 }KSPROPERTY_BDA_TOPOLOGY;

#define DEFINE_KSPROPERTY_ITEM_BDA_NODE_TYPES(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_NODE_TYPES,\
        (GetHandler),\
        sizeof(KSPROPERTY),\
        0,\
        FALSE,\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_PIN_TYPES(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_PIN_TYPES,\
        (GetHandler),\
        sizeof(KSPROPERTY),\
        0,\
        FALSE,\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_TEMPLATE_CONNECTIONS(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_TEMPLATE_CONNECTIONS,\
        (GetHandler),\
        sizeof(KSPROPERTY),\
        sizeof( BDA_TEMPLATE_CONNECTION),\
        FALSE,\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_NODE_METHODS(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_NODE_METHODS,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        0,\
        FALSE,\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_NODE_PROPERTIES(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_NODE_PROPERTIES,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        0,\
        FALSE,\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_NODE_EVENTS(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_NODE_EVENTS,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        0,\
        FALSE,\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_CONTROLLING_PIN_ID(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_CONTROLLING_PIN_ID,\
        (GetHandler),\
        sizeof(KSP_BDA_NODE_PIN),\
        sizeof( ULONG),\
        FALSE,\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_NODE_DESCRIPTORS(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_NODE_DESCRIPTORS,\
        (GetHandler),\
        sizeof(KSPROPERTY),\
        0,\
        FALSE,\
        NULL, 0, NULL, NULL, 0)



//------------------------------------------------------------
//
//
//  BDA Pin Control Property Set
//
// {0DED49D5-A8B7-4d5d-97A1-12B0C195874D}
//
#define STATIC_KSPROPSETID_BdaPinControl \
    0xded49d5, 0xa8b7, 0x4d5d, 0x97, 0xa1, 0x12, 0xb0, 0xc1, 0x95, 0x87, 0x4d
DEFINE_GUIDSTRUCT("0DED49D5-A8B7-4d5d-97A1-12B0C195874D", KSPROPSETID_BdaPinControl);
#define KSPROPSETID_BdaPinControl DEFINE_GUIDNAMED(KSPROPSETID_BdaPinControl)

typedef enum {
    KSPROPERTY_BDA_PIN_ID = 0,
    KSPROPERTY_BDA_PIN_TYPE
} KSPROPERTY_BDA_PIN_CONTROL;

#define DEFINE_KSPROPERTY_ITEM_BDA_PIN_ID(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_PIN_ID,\
        (GetHandler),\
        sizeof( KSPROPERTY),\
        sizeof( ULONG),\
        FALSE,\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_PIN_TYPE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_PIN_TYPE,\
        (GetHandler),\
        sizeof( KSPROPERTY),\
        sizeof( ULONG),\
        FALSE,\
        NULL, 0, NULL, NULL, 0)



//------------------------------------------------------------
//
//
//  BDA Pin Event Set
//
// {104781CD-50BD-40d5-95FB-087E0E86A591}
//
#define STATIC_KSEVENTSETID_BdaPinEvent \
    0x104781cd, 0x50bd, 0x40d5, 0x95, 0xfb, 0x08, 0x7e, 0xe, 0x86, 0xa5, 0x91
DEFINE_GUIDSTRUCT("104781CD-50BD-40d5-95FB-087E0E86A591", KSEVENTSETID_BdaPinEvent);
#define KSEVENTSETID_BdaPinEvent DEFINE_GUIDNAMED(KSEVENTSETID_BdaPinEvent)

typedef enum {
    KSEVENT_BDA_PIN_CONNECTED = 0,
    KSEVENT_BDA_PIN_DISCONNECTED
} KSPROPERTY_BDA_PIN_EVENT;

#define DEFINE_KSEVENT_ITEM_BDA_PIN_CONNECTED(AddHandler, RemoveHandler, SupportHandler)\
    DEFINE_KSEVENT_ITEM(\
        KSEVENT_BDA_PIN_CONNECTED,\
        sizeof( KSEVENTDATA), \
        0, \
        (AddHandler),\
        (RemoveHandler),\
        (SupportHandler)\
        )

#define DEFINE_KSEVENT_ITEM_BDA_PIN_DISCONNECTED(AddHandler, RemoveHandler, SupportHandler)\
    DEFINE_KSEVENT_ITEM(\
        KSEVENT_BDA_PIN_DISCONNECTED,\
        sizeof( KSEVENTDATA), \
        0, \
        (AddHandler),\
        (RemoveHandler),\
        (SupportHandler)\
        )



//------------------------------------------------------------
//
//
//  BDA Void Transform Property Set
//
// {71985F46-1CA1-11d3-9CC8-00C04F7971E0}
//
#define STATIC_KSPROPSETID_BdaVoidTransform \
    0x71985f46, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F46-1CA1-11d3-9CC8-00C04F7971E0", KSPROPSETID_BdaVoidTransform);
#define KSPROPSETID_BdaVoidTransform DEFINE_GUIDNAMED(KSPROPSETID_BdaVoidTransform)

typedef enum {
    KSPROPERTY_BDA_VOID_TRANSFORM_START = 0,
    KSPROPERTY_BDA_VOID_TRANSFORM_STOP
} KSPROPERTY_BDA_VOID_TRANSFORM;

#define DEFINE_KSPROPERTY_ITEM_BDA_VOID_TRANSFORM_START(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_VOID_TRANSFORM_START,\
        FALSE,\
        sizeof(KSPROPERTY),\
        0,\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_VOID_TRANSFORM_STOP(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_VOID_TRANSFORM_STOP,\
        FALSE,\
        sizeof(KSPROPERTY),\
        0,\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)



//------------------------------------------------------------
//
//
//  BDA Null Transform Property Set
//
// {DDF15B0D-BD25-11d2-9CA0-00C04F7971E0}
//
#define STATIC_KSPROPSETID_BdaNullTransform \
    0xddf15b0d, 0xbd25, 0x11d2, 0x9c, 0xa0, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("DDF15B0D-BD25-11d2-9CA0-00C04F7971E0", KSPROPSETID_BdaNullTransform);
#define KSPROPSETID_BdaNullTransform DEFINE_GUIDNAMED(KSPROPSETID_BdaNullTransform)

typedef enum {
    KSPROPERTY_BDA_NULL_TRANSFORM_START = 0,
    KSPROPERTY_BDA_NULL_TRANSFORM_STOP
} KSPROPERTY_BDA_NULL_TRANSFORM;

#define DEFINE_KSPROPERTY_ITEM_BDA_NULL_TRANSFORM_START(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_NULL_TRANSFORM_START,\
        FALSE,\
        sizeof(KSPROPERTY),\
        0,\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_NULL_TRANSFORM_STOP(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_NULL_TRANSFORM_STOP,\
        FALSE,\
        sizeof(KSPROPERTY),\
        0,\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)



//------------------------------------------------------------
//
//
//  BDA Frequency Filter Property Set
//
// {71985F47-1CA1-11d3-9CC8-00C04F7971E0}
//
#define STATIC_KSPROPSETID_BdaFrequencyFilter \
    0x71985f47, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F47-1CA1-11d3-9CC8-00C04F7971E0", KSPROPSETID_BdaFrequencyFilter);
#define KSPROPSETID_BdaFrequencyFilter DEFINE_GUIDNAMED(KSPROPSETID_BdaFrequencyFilter)

typedef enum {
    KSPROPERTY_BDA_RF_TUNER_FREQUENCY = 0,
    KSPROPERTY_BDA_RF_TUNER_POLARITY,
    KSPROPERTY_BDA_RF_TUNER_RANGE,
    KSPROPERTY_BDA_RF_TUNER_TRANSPONDER,
    KSPROPERTY_BDA_RF_TUNER_BANDWIDTH,
    KSPROPERTY_BDA_RF_TUNER_FREQUENCY_MULTIPLIER,
    KSPROPERTY_BDA_RF_TUNER_CAPS,
    KSPROPERTY_BDA_RF_TUNER_SCAN_STATUS,
    KSPROPERTY_BDA_RF_TUNER_STANDARD,
    KSPROPERTY_BDA_RF_TUNER_STANDARD_MODE
} KSPROPERTY_BDA_FREQUENCY_FILTER;

typedef enum _BdaSignalType {
    Bda_SignalType_Unknown =  0,
    Bda_SignalType_Analog  =  1,
    Bda_SignalType_Digital =  2
} BDA_SignalType;

// 
// The BDA_DigitalSignalStandard enumeration is tentatively put out for Beta review
// Based on feedback, this may be updated or entirely removed in a later release
//
typedef enum
{
    Bda_DigitalStandard_None     = 0x00000000,  
    Bda_DigitalStandard_DVB_T    = 0x00000001,
    Bda_DigitalStandard_DVB_S    = 0x00000002,
    Bda_DigitalStandard_DVB_C    = 0x00000004,
    Bda_DigitalStandard_ATSC     = 0x00000008,
    Bda_DigitalStandard_ISDB_T   = 0x00000010,
    Bda_DigitalStandard_ISDB_S   = 0x00000020,
    Bda_DigitalStandard_ISDB_C   = 0x00000040
} BDA_DigitalSignalStandard;

typedef struct {
    KSP_NODE Property;
    ULONG  Mode;                        // IN: KSPROPERTY_TUNER_MODE
    ULONG  AnalogStandardsSupported;    // Bda_AnalogStandard_* (if TV or DSS)
    ULONG  DigitalStandardsSupported;   // Bda_DigitalStandard_*
    ULONG  MinFrequency;                // R - Hz
    ULONG  MaxFrequency;                // R - Hz
    ULONG  SettlingTime;                // R - milliSeconds to settle for any sort of update to the tuner
    ULONG  AnalogSensingRange;          // R - max range (kHz) in which tuner can detect an analog signal 
    ULONG  DigitalSensingRange;         // R - max range (kHz) in which tuner can detect an digital signal
    ULONG  MilliSecondsPerMHz;          // R - max time to lock in to a signal 1MHz away assuming the signal has been detected, but its offset is unknown
} KSPROPERTY_BDA_RF_TUNER_CAPS_S, *PKSPROPERTY_BDA_RF_TUNER_CAPS_S;

typedef struct {
    KSP_NODE Property;
    ULONG CurrentFrequency;          // R - current frequency
    ULONG FrequencyRangeMin;         // R - lower limit of range left to scan
    ULONG FrequencyRangeMax;         // R - upper limit of range left to scan
    ULONG MilliSecondsLeft;          // R - time left to complete scanning
} KSPROPERTY_BDA_RF_TUNER_SCAN_STATUS_S, *PKSPROPERTY_BDA_RF_TUNER_SCAN_STATUS_S;

typedef struct {
    KSP_NODE Property;
    BDA_SignalType SignalType;       // RW - specifies whether the signal is Analog or Digital. this is required to interpret the SignalStandard field
    ULONG  SignalStandard;           // RW - current signal standard (KS_AnalogVideo_* or Bda_DigitalStandard_*) set by the application or detected by the device
} KSPROPERTY_BDA_RF_TUNER_STANDARD_S, *PKSPROPERTY_BDA_RF_TUNER_STANDARD_S;

typedef struct {
    KSP_NODE Property;
    BOOL AutoDetect;                 // RW - specifies whether the driver is in auto-detect mode for the signal standard
} KSPROPERTY_BDA_RF_TUNER_STANDARD_MODE_S, *PKSPROPERTY_BDA_RF_TUNER_STANDARD_MODE_S;

#define DEFINE_KSPROPERTY_ITEM_BDA_RF_TUNER_FREQUENCY(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_RF_TUNER_FREQUENCY,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_RF_TUNER_POLARITY(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_RF_TUNER_POLARITY,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_RF_TUNER_RANGE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_RF_TUNER_RANGE,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_RF_TUNER_TRANSPONDER(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_RF_TUNER_TRANSPONDER,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_RF_TUNER_BANDWIDTH(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_RF_TUNER_BANDWIDTH,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_RF_TUNER_FREQUENCY_MULTIPLIER(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_RF_TUNER_FREQUENCY_MULTIPLIER,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

//------------------------------------------------------------
//
//
//  BDA Tuner Event Set
//
// {AAB59E17-01C9-4ebf-93F2-FC3B79B46F91}
//
#define STATIC_KSEVENTSETID_BdaTunerEvent \
    0xaab59e17, 0x1c9, 0x4ebf, 0x93, 0xf2, 0xfc, 0x3b, 0x79, 0xb4, 0x6f, 0x91
DEFINE_GUIDSTRUCT("AAB59E17-01C9-4ebf-93F2-FC3B79B46F91", KSEVENTSETID_BdaTunerEvent);
#define KSEVENTSETID_BdaTunerEvent DEFINE_GUIDNAMED(KSEVENTSETID_BdaTunerEvent)

typedef enum {
    KSEVENT_BDA_TUNER_SCAN = 0
} KSEVENT_BDA_TUNER;

typedef struct {
    KSEVENTDATA EventData;
    ULONG StartFrequency;          // W - initial frequency for the scan
    ULONG EndFrequency;            // W - final frequency for the scan, can be less than the initial value indicating a "scan down" is requested
    BDA_LockType LockRequested;    // W - whether the device should look for just a PLL lock, decoder lock, etc. should be a supported lock type.
} KSEVENTDATA_BDA_RF_TUNER_SCAN_S, *PKSEVENTDATA_BDA_RF_TUNER_SCAN_S;

//------------------------------------------------------------
//
//
//  BDA LNB Info Property Set
//
// {992CF102-49F9-4719-A664-C4F23E2408F4}
//
#define STATIC_KSPROPSETID_BdaLNBInfo \
    0x992cf102, 0x49f9, 0x4719, 0xa6, 0x64, 0xc4, 0xf2, 0x3e, 0x24, 0x8, 0xf4
DEFINE_GUIDSTRUCT("992CF102-49F9-4719-A664-C4F23E2408F4", KSPROPSETID_BdaLNBInfo);
#define KSPROPSETID_BdaLNBInfo DEFINE_GUIDNAMED(KSPROPSETID_BdaLNBInfo)

typedef enum {
    KSPROPERTY_BDA_LNB_LOF_LOW_BAND = 0,
    KSPROPERTY_BDA_LNB_LOF_HIGH_BAND,
    KSPROPERTY_BDA_LNB_SWITCH_FREQUENCY
} KSPROPERTY_BDA_LNB_INFO;

#define DEFINE_KSPROPERTY_ITEM_BDA_LNB_LOF_LOW_BAND(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_LNB_LOF_LOW_BAND,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_LNB_LOF_HIGH_BAND(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_LNB_LOF_HIGH_BAND,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_LNB_SWITCH_FREQUENCY(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_LNB_SWITCH_FREQUENCY,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

//------------------------------------------------------------
//
//DiseqC Specific commands and source selection
//DVB-S applications can use the commands to select there LNB Source
//or control there installation equipment (e.g. motor dish, switches) 
//
// {F84E2AB0-3C6B-45e3-A0FC-8669D4B81F11}
//
#define STATIC_KSPROPSETID_BdaDiseqCommand \
    0xf84e2ab0, 0x3c6b, 0x45e3, 0xa0, 0xfc, 0x86, 0x69, 0xd4, 0xb8, 0x1f, 0x11
DEFINE_GUIDSTRUCT("F84E2AB0-3C6B-45e3-A0FC-8669D4B81F11", KSPROPSETID_BdaDiseqCommand);
#define KSPROPSETID_BdaDiseqCommand DEFINE_GUIDNAMED(KSPROPSETID_BdaDiseqCommand)

typedef enum {
    KSPROPERTY_BDA_DISEQC_ENABLE = 0,
    KSPROPERTY_BDA_DISEQC_LNB_SOURCE,
    KSPROPERTY_BDA_DISEQC_USETONEBURST,
    KSPROPERTY_BDA_DISEQC_REPEATS,
    KSPROPERTY_BDA_DISEQC_SEND,
    KSPROPERTY_BDA_DISEQC_RESPONSE
} KSPROPERTY_BDA_DISEQC_COMMAND;

#define DEFINE_KSPROPERTY_ITEM_BDA_DISEQC_ENABLE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
    KSPROPERTY_BDA_DISEQC_ENABLE,\
    (GetHandler),\
    sizeof(KSP_NODE),\
    sizeof(BOOL),\
    (SetHandler),\
    NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_DISEQC_LNB_SOURCE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
    KSPROPERTY_BDA_DISEQC_LNB_SOURCE,\
    (GetHandler),\
    sizeof(KSP_NODE),\
    sizeof(ULONG),\
    (SetHandler),\
    NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_DISEQC_USETONEBURST(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
    KSPROPERTY_BDA_DISEQC_USETONEBURST,\
    (GetHandler),\
    sizeof(KSP_NODE),\
    sizeof(BOOL),\
    (SetHandler),\
    NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_DISEQC_REPEATS(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
    KSPROPERTY_BDA_DISEQC_REPEATS,\
    (GetHandler),\
    sizeof(KSP_NODE),\
    sizeof(ULONG),\
    (SetHandler),\
    NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_DISEQC_SEND(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
    KSPROPERTY_BDA_DISEQC_SEND,\
    (GetHandler),\
    sizeof(KSP_NODE),\
    sizeof(BDA_DISEQC_SEND),\
    (SetHandler),\
    NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_DISEQC_RESPONSE(GetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
    KSPROPERTY_BDA_DISEQC_RESPONSE,\
    (GetHandler),\
    sizeof(KSP_NODE),\
    sizeof(BDA_DISEQC_RESPONSE),\
    NULL,\
    NULL, 0, NULL, NULL, 0)

//------------------------------------------------------------
//
//
//  BDA DiseqC Event Set
//
// {8B19BBF0-4184-43ac-AD3C-0C889BE4C212}
//

#define STATIC_KSEVENTSETID_BdaDiseqCEvent \
    0x8b19bbf0, 0x4184, 0x43ac, 0xad, 0x3c, 0xc, 0x88, 0x9b, 0xe4, 0xc2, 0x12
DEFINE_GUIDSTRUCT("8B19BBF0-4184-43ac-AD3C-0C889BE4C212", KSEVENTSETID_BdaDiseqCEvent);
#define KSEVENTSETID_BdaDiseqCEvent DEFINE_GUIDNAMED(KSEVENTSETID_BdaDiseqCEvent)

typedef enum {
    KSEVENT_BDA_DISEQC_DATA_RECEIVED = 0
} KSPROPERTY_BDA_DISEQC_EVENT;

#define DEFINE_KSEVENT_BDA_DISEQC_DATA_RECEIVED(AddHandler, RemoveHandler, SupportHandler)\
    DEFINE_KSEVENT_ITEM(\
    KSEVENT_BDA_DISEQC_DATA_RECEIVED,\
    sizeof( KSEVENTDATA), \
    0, \
    (AddHandler),\
    (RemoveHandler),\
    (SupportHandler)\
    )

//------------------------------------------------------------
//
//
//  BDA Digital Demodulator Property Set
//
// {EF30F379-985B-4d10-B640-A79D5E04E1E0}
//
#define STATIC_KSPROPSETID_BdaDigitalDemodulator \
    0xef30f379, 0x985b, 0x4d10, 0xb6, 0x40, 0xa7, 0x9d, 0x5e, 0x4, 0xe1, 0xe0
DEFINE_GUIDSTRUCT("EF30F379-985B-4d10-B640-A79D5E04E1E0", KSPROPSETID_BdaDigitalDemodulator);
#define KSPROPSETID_BdaDigitalDemodulator DEFINE_GUIDNAMED(KSPROPSETID_BdaDigitalDemodulator)

typedef enum {
    KSPROPERTY_BDA_MODULATION_TYPE = 0,
    KSPROPERTY_BDA_INNER_FEC_TYPE,
    KSPROPERTY_BDA_INNER_FEC_RATE,
    KSPROPERTY_BDA_OUTER_FEC_TYPE,
    KSPROPERTY_BDA_OUTER_FEC_RATE,
    KSPROPERTY_BDA_SYMBOL_RATE,
    KSPROPERTY_BDA_SPECTRAL_INVERSION,
    KSPROPERTY_BDA_GUARD_INTERVAL,
    KSPROPERTY_BDA_TRANSMISSION_MODE,
    KSPROPERTY_BDA_ROLL_OFF,
    KSPROPERTY_BDA_PILOT,
    KSPROPERTY_BDA_SIGNALTIMEOUTS,
    KSPROPERTY_BDA_PLP_NUMBER
} KSPROPERTY_BDA_DIGITAL_DEMODULATOR;

#define DEFINE_KSPROPERTY_ITEM_BDA_MODULATION_TYPE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_MODULATION_TYPE,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ModulationType),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_INNER_FEC_TYPE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_INNER_FEC_TYPE,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(FECMethod),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_INNER_FEC_RATE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_INNER_FEC_RATE,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(BinaryConvolutionCodeRate),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_OUTER_FEC_TYPE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_OUTER_FEC_TYPE,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(FECMethod),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_OUTER_FEC_RATE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_OUTER_FEC_RATE,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(BinaryConvolutionCodeRate),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_SYMBOL_RATE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_SYMBOL_RATE,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_SPECTRAL_INVERSION(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_SPECTRAL_INVERSION,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(SpectralInversion),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_GUARD_INTERVAL(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_GUARD_INTERVAL,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(GuardInterval),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_TRANSMISSION_MODE(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_TRANSMISSION_MODE,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(TransmissionMode),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_ROLL_OFF(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_ROLL_OFF,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(RollOff),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_PILOT(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_PILOT,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(Pilot),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_SIGNALTIMEOUTS(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_SIGNALTIMEOUTS,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(BDA_SIGNAL_TIMEOUTS),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_PLP_NUMBER(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_PLP_NUMBER,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

//------------------------------------------------------------
//
//
//  BDA Autodemodulate Property Set
//
// {DDF15B12-BD25-11d2-9CA0-00C04F7971E0}
//
#define STATIC_KSPROPSETID_BdaAutodemodulate \
    0xddf15b12, 0xbd25, 0x11d2, 0x9c, 0xa0, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("DDF15B12-BD25-11d2-9CA0-00C04F7971E0", KSPROPSETID_BdaAutodemodulate);
#define KSPROPSETID_BdaAutodemodulate DEFINE_GUIDNAMED(KSPROPSETID_BdaAutodemodulate)

typedef enum {
    KSPROPERTY_BDA_AUTODEMODULATE_START = 0,
    KSPROPERTY_BDA_AUTODEMODULATE_STOP
} KSPROPERTY_BDA_AUTODEMODULATE;

#define DEFINE_KSPROPERTY_ITEM_BDA_AUTODEMODULATE_START(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_AUTODEMODULATE_START,\
        FALSE,\
        sizeof(KSP_NODE),\
        0,\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_AUTODEMODULATE_STOP(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_AUTODEMODULATE_STOP,\
        FALSE,\
        sizeof(KSP_NODE),\
        0,\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

//------------------------------------------------------------
//
//
//  BDA Table Section Property Set
//
// {516B99C5-971C-4aaf-B3F3-D9FDA8A15E16}
//

#define STATIC_KSPROPSETID_BdaTableSection \
    0x516b99c5, 0x971c, 0x4aaf, 0xb3, 0xf3, 0xd9, 0xfd, 0xa8, 0xa1, 0x5e, 0x16
DEFINE_GUIDSTRUCT("516B99C5-971C-4aaf-B3F3-D9FDA8A15E16", KSPROPSETID_BdaTableSection);
#define KSPROPSETID_BdaTableSection DEFINE_GUIDNAMED(KSPROPSETID_BdaTableSection)

typedef enum {
    KSPROPERTY_BDA_TABLE_SECTION = 0,
} KSPROPERTY_IDS_BDA_TABLE;

#define DEFINE_KSPROPERTY_ITEM_BDA_TABLE_SECTION(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_TABLE_SECTION,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(BDA_TABLE_SECTION),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

//------------------------------------------------------------
//
//
//  BDA PID Filter Property Set
//
// {D0A67D65-08DF-4fec-8533-E5B550410B85}
//
#define STATIC_KSPROPSETID_BdaPIDFilter \
    0xd0a67d65, 0x8df, 0x4fec, 0x85, 0x33, 0xe5, 0xb5, 0x50, 0x41, 0xb, 0x85
DEFINE_GUIDSTRUCT("D0A67D65-08DF-4fec-8533-E5B550410B85", KSPROPSETID_BdaPIDFilter);
#define KSPROPSETID_BdaPIDFilter DEFINE_GUIDNAMED(KSPROPSETID_BdaPIDFilter)

typedef enum {
    KSPROPERTY_BDA_PIDFILTER_MAP_PIDS = 0,
    KSPROPERTY_BDA_PIDFILTER_UNMAP_PIDS,
    KSPROPERTY_BDA_PIDFILTER_LIST_PIDS
} KSPROPERTY_BDA_PIDFILTER;

#define DEFINE_KSPROPERTY_ITEM_BDA_PIDFILTER_MAP_PIDS(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_PIDFILTER_MAP_PIDS,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(BDA_PID_MAP),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_PIDFILTER_UNMAP_PIDS(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_PIDFILTER_UNMAP_PIDS,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(BDA_PID_UNMAP),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_PIDFILTER_LIST_PIDS(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_PIDFILTER_LIST_PIDS,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        0,\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)



//------------------------------------------------------------
//
//
//  BDA CA Property Set
//
// {B0693766-5278-4ec6-B9E1-3CE40560EF5A}
//
#define STATIC_KSPROPSETID_BdaCA \
    0xb0693766, 0x5278, 0x4ec6, 0xb9, 0xe1, 0x3c, 0xe4, 0x5, 0x60, 0xef, 0x5a
DEFINE_GUIDSTRUCT("B0693766-5278-4ec6-B9E1-3CE40560EF5A", KSPROPSETID_BdaCA);
#define KSPROPSETID_BdaCA DEFINE_GUIDNAMED(KSPROPSETID_BdaCA)

typedef enum {
    KSPROPERTY_BDA_ECM_MAP_STATUS = 0,
    KSPROPERTY_BDA_CA_MODULE_STATUS,
    KSPROPERTY_BDA_CA_SMART_CARD_STATUS,
    KSPROPERTY_BDA_CA_MODULE_UI,
    KSPROPERTY_BDA_CA_SET_PROGRAM_PIDS,
    KSPROPERTY_BDA_CA_REMOVE_PROGRAM
} KSPROPERTY_BDA_CA;

#define DEFINE_KSPROPERTY_ITEM_BDA_ECM_MAP_STATUS(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_ECM_MAP_STATUS,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_CA_MODULE_STATUS(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_CA_MODULE_STATUS,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_CA_SMART_CARD_STATUS(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_CA_SMART_CARD_STATUS,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_CA_MODULE_UI(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_CA_MODULE_UI,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(BDA_CA_MODULE_UI),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_CA_SET_PROGRAM_PIDS(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_CA_SET_PROGRAM_PIDS,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(BDA_PROGRAM_PID_LIST),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)

#define DEFINE_KSPROPERTY_ITEM_BDA_CA_REMOVE_PROGRAM(GetHandler, SetHandler)\
    DEFINE_KSPROPERTY_ITEM(\
        KSPROPERTY_BDA_CA_REMOVE_PROGRAM,\
        (GetHandler),\
        sizeof(KSP_NODE),\
        sizeof(ULONG),\
        (SetHandler),\
        NULL, 0, NULL, NULL, 0)


//------------------------------------------------------------
//
//
//  BDA CA Event Set
//
// {488C4CCC-B768-4129-8EB1-B00A071F9068}
//
#define STATIC_KSEVENTSETID_BdaCAEvent \
    0x488c4ccc, 0xb768, 0x4129, 0x8e, 0xb1, 0xb0, 0xa, 0x7, 0x1f, 0x90, 0x68
DEFINE_GUIDSTRUCT("488C4CCC-B768-4129-8EB1-B00A071F9068", KSEVENTSETID_BdaCAEvent);
#define KSEVENTSETID_BdaCAEvent DEFINE_GUIDNAMED(KSEVENTSETID_BdaCAEvent)

typedef enum {
    KSEVENT_BDA_PROGRAM_FLOW_STATUS_CHANGED = 0,
    KSEVENT_BDA_CA_MODULE_STATUS_CHANGED,
    KSEVENT_BDA_CA_SMART_CARD_STATUS_CHANGED,
    KSEVENT_BDA_CA_MODULE_UI_REQUESTED
} KSPROPERTY_BDA_CA_EVENT;

#define DEFINE_KSEVENT_BDA_PROGRAM_FLOW_STATUS_CHANGED(AddHandler, RemoveHandler, SupportHandler)\
    DEFINE_KSEVENT_ITEM(\
        KSEVENT_BDA_PROGRAM_FLOW_STATUS_CHANGED,\
        sizeof( KSEVENTDATA), \
        0, \
        (AddHandler),\
        (RemoveHandler),\
        (SupportHandler)\
        )

#define DEFINE_KSEVENT_BDA_CA_MODULE_STATUS_CHANGED(AddHandler, RemoveHandler, SupportHandler)\
    DEFINE_KSEVENT_ITEM(\
        KSEVENT_BDA_CA_MODULE_STATUS_CHANGED,\
        sizeof( KSEVENTDATA), \
        0, \
        (AddHandler),\
        (RemoveHandler),\
        (SupportHandler)\
        )

#define DEFINE_KSEVENT_BDA_CA_SMART_CARD_STATUS_CHANGED(AddHandler, RemoveHandler, SupportHandler)\
    DEFINE_KSEVENT_ITEM(\
        KSEVENT_BDA_CA_SMART_CARD_STATUS_CHANGED,\
        sizeof( KSEVENTDATA), \
        0, \
        (AddHandler),\
        (RemoveHandler),\
        (SupportHandler)\
        )

#define DEFINE_KSEVENT_BDA_CA_MODULE_UI_REQUESTED(AddHandler, RemoveHandler, SupportHandler)\
    DEFINE_KSEVENT_ITEM(\
        KSEVENT_BDA_CA_MODULE_UI_REQUESTED,\
        sizeof( KSEVENTDATA), \
        0, \
        (AddHandler),\
        (RemoveHandler),\
        (SupportHandler)\
        )

//------------------------------------------------------------
//
//
//  BdaDrmService Method Set
//
// {BFF6B5BB-B0AE-484c-9DCA-73528FB0B46E}
//
#define STATIC_KSMETHODSETID_BdaDrmService \
    0xbff6b5bb, 0xb0ae, 0x484c, 0x9d, 0xca, 0x73, 0x52, 0x8f, 0xb0, 0xb4, 0x6e
DEFINE_GUIDSTRUCT("BFF6B5BB-B0AE-484c-9DCA-73528FB0B46E", KSMETHODSETID_BdaDrmService);
#define KSMETHODSETID_BdaDrmService DEFINE_GUIDNAMED(KSMETHODSETID_BdaDrmService)

typedef enum {
    KSMETHOD_BDA_DRM_CURRENT = 0,
    KSMETHOD_BDA_DRM_DRMSTATUS
    } KSMETHOD_BDA_DRM;

#define DEFINE_KSMETHOD_BDA_DRM_SETDRM(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_DRM_CURRENT,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_BDA_DRM_SETDRM),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_BDA_DRM_DRMSTATUS(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_DRM_DRMSTATUS,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_NODE),\
    sizeof(BDA_DRM_DRMSTATUS),\
    SupportHandler)

//------------------------------------------------------------
//
//
//  PBDA WMDRM SESSION Method Set
//
// {4BE6FA3D-07CD-4139-8B80-8C18BA3AEC88}
//
#define STATIC_KSMETHODSETID_BdaWmdrmSession \
    0x4be6fa3d, 0x7cd, 0x4139, 0x8b, 0x80, 0x8c, 0x18, 0xba, 0x3a, 0xec, 0x88
DEFINE_GUIDSTRUCT("4BE6FA3D-07CD-4139-8B80-8C18BA3AEC88", KSMETHODSETID_BdaWmdrmSession);
#define KSMETHODSETID_BdaWmdrmSession DEFINE_GUIDNAMED(KSMETHODSETID_BdaWmdrmSession)

typedef enum {
    KSMETHOD_BDA_WMDRM_STATUS = 0,
    KSMETHOD_BDA_WMDRM_REVINFO,
    KSMETHOD_BDA_WMDRM_CRL,
    KSMETHOD_BDA_WMDRM_MESSAGE,
    KSMETHOD_BDA_WMDRM_REISSUELICENSE,
    KSMETHOD_BDA_WMDRM_RENEWLICENSE,
    KSMETHOD_BDA_WMDRM_LICENSE,
    KSMETHOD_BDA_WMDRM_KEYINFO
    } KSMETHOD_BDA_WMDRM;

#define DEFINE_KSMETHOD_BDA_WMDRM_STATUS(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_WMDRM_STATUS,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_NODE),\
    sizeof(BDA_WMDRM_STATUS),\
    SupportHandler)

#define DEFINE_KSMETHOD_BDA_WMDRM_REVINFO(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_WMDRM_REVINFO,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_BDA_BUFFER),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_BDA_WMDRM_CRL(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_WMDRM_CRL,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_BDA_BUFFER),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_BDA_WMDRM_TRANSACTMESSAGE(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_WMDRM_MESSAGE,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_BDA_BUFFER),\
    sizeof(BDA_BUFFER),\
    SupportHandler)

#define DEFINE_KSMETHOD_BDA_WMDRM_REISSUELICENSE(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_WMDRM_REISSUELICENSE,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_BDA_WMDRM_LICENSE),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_BDA_WMDRM_RENEWLICENSE(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_WMDRM_RENEWLICENSE,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_BDA_WMDRM_RENEWLICENSE),\
    sizeof(BDA_WMDRM_RENEWLICENSE),\
    SupportHandler)

#define DEFINE_KSMETHOD_BDA_WMDRM_GETLICENSE(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_WMDRM_LICENSE,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_BDA_WMDRM_LICENSE),\
    sizeof(BDA_BUFFER),\
    SupportHandler)

#define DEFINE_KSMETHOD_BDA_WMDRM_KEYINFO(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_WMDRM_KEYINFO,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_NODE),\
    sizeof(BDA_WMDRM_KEYINFOLIST),\
    SupportHandler)

//------------------------------------------------------------
//
//
//  PBDA WMDRM Tuner Method Set
//
// {86D979CF-A8A7-4f94-B5FB-14C0ACA68FE6}
//
#define STATIC_KSMETHODSETID_BdaWmdrmTuner \
    0x86d979cf, 0xa8a7, 0x4f94, 0xb5, 0xfb, 0x14, 0xc0, 0xac, 0xa6, 0x8f, 0xe6
DEFINE_GUIDSTRUCT("86D979CF-A8A7-4f94-B5FB-14C0ACA68FE6", KSMETHODSETID_BdaWmdrmTuner);
#define KSMETHODSETID_BdaWmdrmTuner DEFINE_GUIDNAMED(KSMETHODSETID_BdaWmdrmTuner)

typedef enum {
    KSMETHOD_BDA_WMDRMTUNER_CANCELCAPTURETOKEN = 0,
    KSMETHOD_BDA_WMDRMTUNER_SETPIDPROTECTION,
    KSMETHOD_BDA_WMDRMTUNER_GETPIDPROTECTION,
    KSMETHOD_BDA_WMDRMTUNER_SETSYNCVALUE,
    KSMETHOD_BDA_WMDRMTUNER_STARTCODEPROFILE,
    KSMETHOD_BDA_WMDRMTUNER_PURCHASE_ENTITLEMENT
    } KSMETHOD_BDA_WMDRM_TUNER;

#define DEFINE_KSMETHOD_BDA_WMDRMTUNER_CANCELCAPTURETOKEN(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_WMDRMTUNER_CANCELCAPTURETOKEN,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_BDA_BUFFER),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_BDA_WMDRMTUNER_SETPIDPROTECTION(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_WMDRMTUNER_SETPIDPROTECTION,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_BDA_WMDRMTUNER_SETPIDPROTECTION),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_BDA_WMDRMTUNER_GETPIDPROTECTION(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_WMDRMTUNER_GETPIDPROTECTION,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_BDA_WMDRMTUNER_GETPIDPROTECTION),\
    sizeof(BDA_WMDRMTUNER_PIDPROTECTION),\
    SupportHandler)

#define DEFINE_KSMETHOD_BDA_WMDRMTUNER_SETSYNCVALUE(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_WMDRMTUNER_SETSYNCVALUE,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_BDA_WMDRMTUNER_SYNCVALUE),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_BDA_WMDRMTUNER_STARTCODEPROFILE(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_WMDRMTUNER_STARTCODEPROFILE,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSP_NODE),\
    sizeof(BDA_BUFFER),\
    SupportHandler)

#define DEFINE_KSMETHOD_BDA_WMDRMTUNER_PURCHASE_ENTITLEMENT(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_WMDRMTUNER_PURCHASE_ENTITLEMENT,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE,\
    (MethodHandler),\
    sizeof(KSM_BDA_WMDRMTUNER_PURCHASEENTITLEMENT),\
    sizeof(BDA_WMDRMTUNER_PURCHASEENTITLEMENT),\
    SupportHandler)


//------------------------------------------------------------
//
//
//  BDA Eventing Service Property Set
//
// {B0693766-5278-4ec6-B9E1-3CE40560EF5A}
//


#define STATIC_KSMETHODSETID_BdaEventing \
    0xf99492da, 0x6193, 0x4eb0, 0x86, 0x90, 0x66, 0x86, 0xcb, 0xff, 0x71, 0x3e
DEFINE_GUIDSTRUCT("f99492da-6193-4eb0-8690-6686cbff713e", KSMETHODSETID_BdaEventing);
#define KSMETHODSETID_BdaEventing DEFINE_GUIDNAMED(KSMETHODSETID_BdaEventing)

typedef enum {
    KSMETHOD_BDA_EVENT_DATA = 0,
    KSMETHOD_BDA_EVENT_COMPLETE
} KSMETHOD_BDA_EVENTING_SERVICE;

#define DEFINE_KSMETHOD_ITEM_BDA_EVENT_DATA(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
        KSMETHOD_BDA_EVENT_DATA,\
        KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
        (MethodHandler),\
        sizeof(KSMETHOD),\
        sizeof(BDA_EVENT_DATA),\
        SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_EVENT_COMPLETE(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
        KSMETHOD_BDA_EVENT_COMPLETE,\
        KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
        (MethodHandler),\
        sizeof(KSM_BDA_EVENT_COMPLETE),\
        sizeof(LONG),\
        SupportHandler)


//------------------------------------------------------------
//
//
//  BDA Eventing Service Event 
//
// ae7e55b2-96d7-4e29-908f-62f95b2a1679
//
#define STATIC_KSEVENTSETID_BdaEvent \
    0xae7e55b2, 0x96d7, 0x4e29, 0x90, 0x8f, 0x62, 0xf9, 0x5b, 0x2a, 0x16, 0x79
DEFINE_GUIDSTRUCT("ae7e55b2-96d7-4e29-908f-62f95b2a1679", KSEVENTSETID_BdaEvent);
#define KSEVENTSETID_BdaEvent DEFINE_GUIDNAMED(KSEVENTSETID_BdaEvent)

typedef enum {
    KSEVENT_BDA_EVENT_PENDINGEVENT = 0
} KSEVENT_BDA_EVENT_TYPE;

#define DEFINE_KSEVENT_ITEM_BDA_PENDINGEVENT(AddHandler, RemoveHandler, SupportHandler)\
    DEFINE_KSEVENT_ITEM(\
        KSEVENT_BDA_EVENT_PENDINGEVENT,\
        sizeof( KSEVENTDATA), \
        0, \
        (AddHandler),\
        (RemoveHandler),\
        (SupportHandler)\
        )

//------------------------------------------------------------
//
//
//  BDA Debug Service Property Set
//
// {0d4a90ec-c69d-4ee2-8c5a-fb1f63a50da1}
//

#define STATIC_KSMETHODSETID_BdaDebug \
    0x0d4a90ec, 0xc69d, 0x4ee2, 0x8c, 0x5a, 0xfb, 0x1f, 0x63, 0xa5, 0x0d, 0xa1
DEFINE_GUIDSTRUCT("0d4a90ec-c69d-4ee2-8c5a-fb1f63a50da1", KSMETHODSETID_BdaDebug);
#define KSMETHODSETID_BdaDebug DEFINE_GUIDNAMED(KSMETHODSETID_BdaDebug)

typedef enum {
    KSMETHOD_BDA_DEBUG_LEVEL = 0,
    KSMETHOD_BDA_DEBUG_DATA
} KSMETHOD_BDA_DEBUG_SERVICE;

#define DEFINE_KSMETHOD_ITEM_BDA_DEBUG_LEVEL(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
        KSMETHOD_BDA_DEBUG_LEVEL,\
        KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
        (MethodHandler),\
        sizeof(KSM_BDA_DEBUG_LEVEL),\
        sizeof(LONG),\
        SupportHandler)


#define DEFINE_KSMETHOD_ITEM_BDA_DEBUG_DATA(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
        KSMETHOD_BDA_DEBUG_DATA,\
        KSMETHOD_TYPE_MODIFY, \
        (MethodHandler),\
        sizeof(KSMETHOD),\
        0,\
        SupportHandler)


//------------------------------------------------------------
//
//
//  BDA Tuner Service Method Set
//
// {B774102F-AC07-478a-8228-2742D961FA7E}
//

#define STATIC_KSMETHODSETID_BdaTuner \
    0xb774102f, 0xac07, 0x478a, 0x82, 0x28, 0x27, 0x42, 0xd9, 0x61, 0xfa, 0x7e
DEFINE_GUIDSTRUCT("b774102f-ac07-478a-8228-2742d961fa7e", KSMETHODSETID_BdaTuner);
#define KSMETHODSETID_BdaTuner DEFINE_GUIDNAMED(KSMETHODSETID_BdaTuner)

typedef enum {
    KSMETHOD_BDA_TUNER_SETTUNER = 0,
    KSMETHOD_BDA_TUNER_GETTUNERSTATE,
    KSMETHOD_BDA_TUNER_SIGNALNOISERATIO
} KSMETHOD_BDA_TUNER_SERVICE;

#define DEFINE_KSMETHOD_ITEM_BDA_TUNER_SETTUNER(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_TUNER_SETTUNER,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_TUNER_TUNEREQUEST),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_TUNER_GETTUNERSTATE(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_TUNER_GETTUNERSTATE,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSMETHOD),\
    sizeof(BDA_TUNER_TUNERSTATE),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_TUNER_SIGNALNOISERATIO(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_TUNER_SIGNALNOISERATIO,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSMETHOD),\
    sizeof(BDA_TUNER_DIAGNOSTICS),\
    SupportHandler)


//------------------------------------------------------------
//
//
//  BDA General Purpose Name Value Service Method Set
//
// {0c24096d-5ff5-47de-a856-062e587e3727}//8bit string
// {36e07304-9f0d-4e88-9118-ac0ba317b7f2}//unicode version
//

#define STATIC_KSMETHODSETID_BdaNameValueA \
    0xc24096d, 0x5ff5, 0x47de, 0xa8, 0x56, 0x6, 0x2e, 0x58, 0x7e, 0x37, 0x27
DEFINE_GUIDSTRUCT("0c24096d-5ff5-47de-a856-062e587e3727", KSMETHODSETID_BdaNameValueA);
#define KSMETHODSETID_BdaNameValueA DEFINE_GUIDNAMED(KSMETHODSETID_BdaNameValueA)

#define STATIC_KSMETHODSETID_BdaNameValue \
    0x36e07304, 0x9f0d, 0x4e88, 0x91, 0x18, 0xac, 0xb, 0xa3, 0x17, 0xb7, 0xf2
DEFINE_GUIDSTRUCT("36e07304-9f0d-4e88-9118-ac0ba317b7f2", KSMETHODSETID_BdaNameValue);
#define KSMETHODSETID_BdaNameValue DEFINE_GUIDNAMED(KSMETHODSETID_BdaNameValue)

typedef enum {
    KSMETHOD_BDA_GPNV_GETVALUE = 0,
    KSMETHOD_BDA_GPNV_SETVALUE,
    KSMETHOD_BDA_GPNV_NAMEFROMINDEX,
    KSMETHOD_BDA_GPNV_GETVALUEUPDATENAME
} KSMETHOD_BDA_GPNV_SERVICE;

#define DEFINE_KSMETHOD_ITEM_BDA_GPNV_GETVALUE(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_GPNV_GETVALUE,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_GPNV_GETVALUE),\
    sizeof(BDA_STRING),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_GPNV_SETVALUE(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_GPNV_SETVALUE,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_GPNV_SETVALUE),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_GPNV_NAMEFROMINDEX(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_GPNV_NAMEFROMINDEX,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_GPNV_NAMEINDEX),\
    sizeof(BDA_STRING),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_GPNV_GETVALUEUPDATENAME(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_GPNV_GETVALUEUPDATENAME,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSMETHOD),\
    sizeof(BDA_STRING),\
    SupportHandler)



//------------------------------------------------------------
//
//
//  BDA Mux Service Method Set
//
// {942AAFEC-4C05-4c74-B8EB-8706C2A4943F}
//

#define STATIC_KSMETHODSETID_BdaMux \
    0x942aafec, 0x4c05, 0x4c74, 0xb8, 0xeb, 0x87, 0x6, 0xc2, 0xa4, 0x94, 0x3f
DEFINE_GUIDSTRUCT("942AAFEC-4C05-4c74-B8EB-8706C2A4943F", KSMETHODSETID_BdaMux);
#define KSMETHODSETID_BdaMux DEFINE_GUIDNAMED(KSMETHODSETID_BdaMux)

typedef enum {
    KSMETHOD_BDA_MUX_GETPIDLIST = 0,
    KSMETHOD_BDA_MUX_SETPIDLIST
} KSMETHOD_BDA_MUX_SERVICE;

#define DEFINE_KSMETHOD_ITEM_BDA_MUX_GETPIDLIST(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_MUX_GETPIDLIST,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_NODE),\
    sizeof(BDA_BUFFER),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_MUX_SETPIDLIST(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_MUX_SETPIDLIST,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_BUFFER),\
    sizeof(PBDARESULT),\
    SupportHandler)


//------------------------------------------------------------
//
//
//  BDA Scanning Service Method Set
//
// {12EB49DF-6249-47f3-B190-E21E6E2F8A9C}
//

#define STATIC_KSMETHODSETID_BdaScanning \
    0x12eb49df, 0x6249, 0x47f3, 0xb1, 0x90, 0xe2, 0x1e, 0x6e, 0x2f, 0x8a, 0x9c
DEFINE_GUIDSTRUCT("12EB49DF-6249-47f3-B190-E21E6E2F8A9C", KSMETHODSETID_BdaScanning);
#define KSMETHODSETID_BdaScanning DEFINE_GUIDNAMED(KSMETHODSETID_BdaScanning)

typedef enum {
    KSMETHOD_BDA_SCAN_CAPABILTIES = 0,
    KSMETHOD_BDA_SCANNING_STATE,
    KSMETHOD_BDA_SCAN_FILTER,
    KSMETHOD_BDA_SCAN_START,
    KSMETHOD_BDA_SCAN_RESUME,
    KSMETHOD_BDA_SCAN_STOP
} KSMETHOD_BDA_SCAN_SERVICE;

#define DEFINE_KSMETHOD_ITEM_BDA_SCAN_CAPABILTIES(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_SCAN_CAPABILTIES,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_SCAN_CAPABILTIES),\
    sizeof(BDA_SCAN_CAPABILTIES),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_SCANNING_STATE(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_SCANNING_STATE,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSMETHOD),\
    sizeof(BDA_SCAN_STATE),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_SCAN_FILTER(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_SCAN_FILTER,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_SCAN_FILTER),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_SCAN_START(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_SCAN_START,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_SCAN_START),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_SCAN_RESUME(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_SCAN_RESUME,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSMETHOD),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_SCAN_STOP(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_SCAN_STOP,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSMETHOD),\
    sizeof(PBDARESULT),\
    SupportHandler)


//------------------------------------------------------------
//
//
//  BDA Guide Data Delivery Service Method Set
//
// {8D9D5562-1589-417d-99CE-AC531DDA19F9}
//

#define STATIC_KSMETHODSETID_BdaGuideDataDeliveryService \
    0x8d9d5562, 0x1589, 0x417d, 0x99, 0xce, 0xac, 0x53, 0x1d, 0xda, 0x19, 0xf9
DEFINE_GUIDSTRUCT("8D9D5562-1589-417d-99CE-AC531DDA19F9", KSMETHODSETID_BdaGuideDataDeliveryService);
#define KSMETHODSETID_BdaGuideDataDeliveryService DEFINE_GUIDNAMED(KSMETHODSETID_BdaGuideDataDeliveryService)

typedef enum {
    KSMETHOD_BDA_GDDS_DATATYPE = 0,
    KSMETHOD_BDA_GDDS_DATA,
    KSMETHOD_BDA_GDDS_TUNEXMLFROMIDX,
    KSMETHOD_BDA_GDDS_GETSERVICES,
    KSMETHOD_BDA_GDDS_SERVICEFROMTUNEXML,
    KSMETHOD_BDA_GDDS_DATAUPDATE
} KSMETHOD_BDA_GDDS_SERVICE;

#define DEFINE_KSMETHOD_ITEM_BDA_GDDS_DATATYPE(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_GDDS_DATATYPE,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSMETHOD),\
    sizeof(BDA_GDDS_DATATYPE),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_GDDS_DATA(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_GDDS_DATA,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSMETHOD),\
    sizeof(BDA_GDDS_DATA),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_GDDS_TUNEXMLFROMIDX(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_GDDS_TUNEXMLFROMIDX,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_GDDS_TUNEXMLFROMIDX),\
    sizeof(BDA_STRING),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_GDDS_GETSERVICES(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_GDDS_GETSERVICES,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSMETHOD),\
    sizeof(BDA_BUFFER),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_GDDS_SERVICEFROMTUNEXML(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_GDDS_SERVICEFROMTUNEXML,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_GDDS_SERVICEFROMTUNEXML),\
    sizeof(BDA_STRING),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_GDDS_DATAUPDATE(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_GDDS_DATAUPDATE,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSMETHOD),\
    sizeof(PBDARESULT),\
    SupportHandler)


//------------------------------------------------------------
//
//
//  BDA CAS Core Service Method Set
//
// {10CED3B4-320B-41bf-9824-1B2E68E71EB9}
//

#define STATIC_KSMETHODSETID_BdaConditionalAccessService \
    0x10ced3b4, 0x320b, 0x41bf, 0x98, 0x24, 0x1b, 0x2e, 0x68, 0xe7, 0x1e, 0xb9
DEFINE_GUIDSTRUCT("10CED3B4-320B-41bf-9824-1B2E68E71EB9", KSMETHODSETID_BdaConditionalAccessService);
#define KSMETHODSETID_BdaConditionalAccessService DEFINE_GUIDNAMED(KSMETHODSETID_BdaConditionalAccessService)

typedef enum {
    KSMETHOD_BDA_CAS_CHECKENTITLEMENTTOKEN = 0,
    KSMETHOD_BDA_CAS_SETCAPTURETOKEN,
    KSMETHOD_BDA_CAS_OPENBROADCASTMMI,
    KSMETHOD_BDA_CAS_CLOSEMMIDIALOG
} KSMETHOD_BDA_CAS_SERVICE;

#define DEFINE_KSMETHOD_ITEM_BDA_CAS_CHECKENTITLEMENTTOKEN(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_CAS_CHECKENTITLEMENTTOKEN,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_CAS_ENTITLEMENTTOKEN),\
    sizeof(BDA_CAS_CHECK_ENTITLEMENTTOKEN),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_CAS_SETCAPTURETOKEN(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_CAS_SETCAPTURETOKEN,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_CAS_CAPTURETOKEN),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_CAS_OPENBROADCASTMMI(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_CAS_OPENBROADCASTMMI,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_CAS_OPENBROADCASTMMI),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_CAS_CLOSEMMIDIALOG(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_CAS_CLOSEMMIDIALOG,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_CAS_CLOSEMMIDIALOG),\
    sizeof(BDA_CAS_CLOSE_MMIDIALOG),\
    SupportHandler)


//------------------------------------------------------------
//
//
//  BDA ISDB CAS Service Method Set
//
// {5E68C627-16C2-4e6c-B1E2-D00170CDAA0F}
//

#define STATIC_KSMETHODSETID_BdaIsdbConditionalAccess \
    0x5e68c627, 0x16c2, 0x4e6c, 0xb1, 0xe2, 0xd0, 0x1, 0x70, 0xcd, 0xaa, 0xf
DEFINE_GUIDSTRUCT("5E68C627-16C2-4e6c-B1E2-D00170CDAA0F", KSMETHODSETID_BdaIsdbConditionalAccess);
#define KSMETHODSETID_BdaIsdbConditionalAccess DEFINE_GUIDNAMED(KSMETHODSETID_BdaIsdbConditionalAccess)

typedef enum {
    KSMETHOD_BDA_ISDBCAS_SETREQUEST = 0,
    KSMETHOD_BDA_ISDBCAS_RESPONSEDATA
} KSMETHOD_BDA_ISDB_CAS;

#define DEFINE_KSMETHOD_ITEM_BDA_ISDBCAS_SETREQUEST(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_ISDBCAS_SETREQUEST,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_ISDBCAS_REQUEST),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_ISDBCAS_RESPONSEDATA(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_ISDBCAS_RESPONSEDATA,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_NODE),\
    sizeof(BDA_ISDBCAS_RESPONSEDATA),\
    SupportHandler)

//------------------------------------------------------------
//
//
//  BDA Transprt Stream Selector Service Method Set
//
// {1DCFAFE9-B45E-41b3-BB2A-561EB129AE98}
//

#define STATIC_KSMETHODSETID_BdaTSSelector \
    0x1dcfafe9, 0xb45e, 0x41b3, 0xbb, 0x2a, 0x56, 0x1e, 0xb1, 0x29, 0xae, 0x98
DEFINE_GUIDSTRUCT("1DCFAFE9-B45E-41b3-BB2A-561EB129AE98", KSMETHODSETID_BdaTSSelector);
#define KSMETHODSETID_BdaTSSelector DEFINE_GUIDNAMED(KSMETHODSETID_BdaTSSelector)

typedef enum {
    KSMETHOD_BDA_TS_SELECTOR_SETTSID = 0,
    KSMETHOD_BDA_TS_SELECTOR_GETTSINFORMATION,
} KSMETHOD_BDA_TS_SELECTOR;

#define DEFINE_KSMETHOD_ITEM_BDA_TS_SELECTOR_SETTSID(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_TS_SELECTOR_SETTSID,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_TS_SELECTOR_SETTSID),\
    sizeof(ULONG),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_TS_SELECTOR_GETTSINFORMATION(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_TS_SELECTOR_GETTSINFORMATION,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_NODE),\
    sizeof(BDA_TS_SELECTORINFO),\
    SupportHandler)

//------------------------------------------------------------
//
//
//  BDA User Activity Service Method Set
//
// {EDA5C834-4531-483c-BE0A-94E6C96FF396}
//

#define STATIC_KSMETHODSETID_BdaUserActivity \
    0xeda5c834, 0x4531, 0x483c, 0xbe, 0xa, 0x94, 0xe6, 0xc9, 0x6f, 0xf3, 0x96
DEFINE_GUIDSTRUCT("EDA5C834-4531-483c-BE0A-94E6C96FF396", KSMETHODSETID_BdaUserActivity);
#define KSMETHODSETID_BdaUserActivity DEFINE_GUIDNAMED(KSMETHODSETID_BdaUserActivity)

typedef enum {
    KSMETHOD_BDA_USERACTIVITY_USEREASON = 0,
    KSMETHOD_BDA_USERACTIVITY_INTERVAL,
    KSMETHOD_BDA_USERACTIVITY_DETECTED
} KSMETHOD_BDA_USERACTIVITY_SERVICE;

#define DEFINE_KSMETHOD_ITEM_BDA_USERACTIVITY_USEREASON(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_USERACTIVITY_USEREASON,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSM_BDA_USERACTIVITY_USEREASON),\
    sizeof(PBDARESULT),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_USERACTIVITY_INTERVAL(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_USERACTIVITY_INTERVAL,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSMETHOD),\
    sizeof(BDA_USERACTIVITY_INTERVAL),\
    SupportHandler)

#define DEFINE_KSMETHOD_ITEM_BDA_USERACTIVITY_DETECTED(MethodHandler, SupportHandler)\
    DEFINE_KSMETHOD_ITEM(\
    KSMETHOD_BDA_USERACTIVITY_DETECTED,\
    KSMETHOD_TYPE_MODIFY | KSMETHOD_TYPE_SOURCE, \
    (MethodHandler),\
    sizeof(KSMETHOD),\
    sizeof(PBDARESULT),\
    SupportHandler)

//===========================================================================
//
// BDA Filter Categories
//
//===========================================================================

#define STATIC_KSCATEGORY_BDA_RECEIVER_COMPONENT \
    0xFD0A5AF4, 0xB41D, 0x11d2, 0x9c, 0x95, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("FD0A5AF4-B41D-11d2-9C95-00C04F7971E0", KSCATEGORY_BDA_RECEIVER_COMPONENT);
#define KSCATEGORY_BDA_RECEIVER_COMPONENT DEFINE_GUIDNAMED(KSCATEGORY_BDA_RECEIVER_COMPONENT)


#define STATIC_KSCATEGORY_BDA_NETWORK_TUNER \
    0x71985f48, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F48-1CA1-11d3-9CC8-00C04F7971E0", KSCATEGORY_BDA_NETWORK_TUNER);
#define KSCATEGORY_BDA_NETWORK_TUNER DEFINE_GUIDNAMED(KSCATEGORY_BDA_NETWORK_TUNER)


#define STATIC_KSCATEGORY_BDA_NETWORK_EPG \
    0x71985f49, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F49-1CA1-11d3-9CC8-00C04F7971E0", KSCATEGORY_BDA_NETWORK_EPG);
#define KSCATEGORY_BDA_NETWORK_EPG DEFINE_GUIDNAMED(KSCATEGORY_BDA_NETWORK_EPG)


#define STATIC_KSCATEGORY_BDA_IP_SINK \
    0x71985f4aL, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x00, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F4A-1CA1-11d3-9CC8-00C04F7971E0", KSCATEGORY_BDA_IP_SINK);
#define KSCATEGORY_IP_SINK DEFINE_GUIDNAMED(KSCATEGORY_BDA_IP_SINK)


#define STATIC_KSCATEGORY_BDA_NETWORK_PROVIDER \
    0x71985f4b, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F4B-1CA1-11d3-9CC8-00C04F7971E0", KSCATEGORY_BDA_NETWORK_PROVIDER);
#define KSCATEGORY_BDA_NETWORK_PROVIDER DEFINE_GUIDNAMED(KSCATEGORY_BDA_NETWORK_PROVIDER)

// {A2E3074F-6C3D-11d3-B653-00C04F79498E}
#define STATIC_KSCATEGORY_BDA_TRANSPORT_INFORMATION \
        0xa2e3074f, 0x6c3d, 0x11d3, 0xb6, 0x53, 0x0, 0xc0, 0x4f, 0x79, 0x49, 0x8e
DEFINE_GUIDSTRUCT("A2E3074F-6C3D-11d3-B653-00C04F79498E", KSCATEGORY_BDA_TRANSPORT_INFORMATION);
#define KSCATEGORY_BDA_TRANSPORT_INFORMATION DEFINE_GUIDNAMED(KSCATEGORY_BDA_TRANSPORT_INFORMATION)

//===========================================================================
//
// BDA Node Categories
//
//===========================================================================

//
// Typical usage of the node categories to define supported tuner device standards.
//
// Analog (only)
//   KSNODE_BDA_RF_TUNER
//
// ATSC (only):
//   KSNODE_BDA_8VSB_DEMODULATOR node
//
// DVB-T (only):
//   KSNODE_BDA_COFDM_DEMODULATOR
//
// DVB-S (only)
//   KSNODE_BDA_QPSK_DEMODULATOR
//
// DVB-S2 (only)
//   KSNODE_BDA_8PSK_DEMODULATOR
//
// Digital Cable (both DVB-C and US):
//   KSNODE_BDA_QAM_DEMODULATOR node
//
// Hybrid Analog/ATSC:
//   KSNODE_BDA_RF_TUNER & KSNODE_BDA_8VSB_DEMODULATOR nodes
//
// Hybrid Analog/Digital Cable:
//   KSNODE_BDA_RF_TUNER & KSNODE_BDA_QAM_DEMODULATOR nodes
//
// Hybrid Analog and Digital Cable w/ CableCard:
//   KSNODE_BDA_RF_TUNER & KSNODE_BDA_QAM_DEMODULATOR & KSNODE_BDA_OPENCABLE_POD nodes
//
// Hybrid Analog and DVB-T:
//   KSNODE_BDA_RF_TUNER & KSNODE_BDA_COFDM_DEMODULATOR
//
// ISDB-S (only)
//   KSNODE_BDA_ISDB_S_DEMODULATOR & KSNODE_BDA_TS_SELECTOR
//

#define STATIC_KSNODE_BDA_RF_TUNER \
    0x71985f4c, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F4C-1CA1-11d3-9CC8-00C04F7971E0", KSNODE_BDA_RF_TUNER);
#define KSNODE_BDA_RF_TUNER DEFINE_GUIDNAMED(KSNODE_BDA_RF_TUNER)

#define STATIC_KSNODE_BDA_ANALOG_DEMODULATOR \
    0x634db199, 0x27dd, 0x46b8, 0xac, 0xfb, 0xec, 0xc9, 0x8e, 0x61, 0xa2, 0xad
DEFINE_GUIDSTRUCT("634DB199-27DD-46b8-ACFB-ECC98E61A2AD",  KSNODE_BDA_ANALOG_DEMODULATOR);
#define  KSNODE_BDA_ANALOG_DEMODULATOR DEFINE_GUIDNAMED( KSNODE_BDA_ANALOG_DEMODULATOR)


#define STATIC_KSNODE_BDA_QAM_DEMODULATOR \
    0x71985f4d, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F4D-1CA1-11d3-9CC8-00C04F7971E0", KSNODE_BDA_QAM_DEMODULATOR);
#define KSNODE_BDA_QAM_DEMODULATOR DEFINE_GUIDNAMED(KSNODE_BDA_QAM_DEMODULATOR)


#define STATIC_KSNODE_BDA_QPSK_DEMODULATOR \
    0x6390c905, 0x27c1, 0x4d67, 0xbd, 0xb7, 0x77, 0xc5, 0xd, 0x7, 0x93, 0x0
DEFINE_GUIDSTRUCT("6390C905-27C1-4d67-BDB7-77C50D079300", KSNODE_BDA_QPSK_DEMODULATOR);
#define KSNODE_BDA_QPSK_DEMODULATOR DEFINE_GUIDNAMED(KSNODE_BDA_QPSK_DEMODULATOR)


#define STATIC_KSNODE_BDA_8VSB_DEMODULATOR \
    0x71985f4f, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F4F-1CA1-11d3-9CC8-00C04F7971E0", KSNODE_BDA_8VSB_DEMODULATOR);
#define KSNODE_BDA_8VSB_DEMODULATOR DEFINE_GUIDNAMED(KSNODE_BDA_8VSB_DEMODULATOR)


#define STATIC_KSNODE_BDA_COFDM_DEMODULATOR \
    0x2dac6e05, 0xedbe, 0x4b9c, 0xb3, 0x87, 0x1b, 0x6f, 0xad, 0x7d, 0x64, 0x95
DEFINE_GUIDSTRUCT("2DAC6E05-EDBE-4b9c-B387-1B6FAD7D6495", KSNODE_BDA_COFDM_DEMODULATOR);
#define KSNODE_BDA_COFDM_DEMODULATOR DEFINE_GUIDNAMED(KSNODE_BDA_COFDM_DEMODULATOR)


#define STATIC_KSNODE_BDA_8PSK_DEMODULATOR \
    0xe957a0e7, 0xdd98, 0x4a3c, 0x81, 0x0b, 0x35, 0x25, 0x15, 0x7a, 0xb6, 0x2e
DEFINE_GUIDSTRUCT("E957A0E7-DD98-4A3C-810B-3525157AB62E", KSNODE_BDA_8PSK_DEMODULATOR);
#define KSNODE_BDA_8PSK_DEMODULATOR DEFINE_GUIDNAMED(KSNODE_BDA_8PSK_DEMODULATOR)


#define STATIC_KSNODE_BDA_ISDB_T_DEMODULATOR \
    0xfcea3ae3, 0x2cb2, 0x464d, 0x8f, 0x5d, 0x30, 0x5c, 0x0b, 0xb7, 0x78, 0xa2
    DEFINE_GUIDSTRUCT("fcea3ae3-2cb2-464d-8f5d-305c0bb778a2", KSNODE_BDA_ISDB_T_DEMODULATOR);
#define KSNODE_BDA_ISDB_T_DEMODULATOR DEFINE_GUIDNAMED(KSNODE_BDA_ISDB_T_DEMODULATOR)

#define STATIC_KSNODE_BDA_ISDB_S_DEMODULATOR \
    0xedde230a, 0x9086, 0x432d, 0xb8, 0xa5, 0x66, 0x70, 0x26, 0x38, 0x07, 0xe9
    DEFINE_GUIDSTRUCT("edde230a-9086-432d-b8a5-6670263807e9", KSNODE_BDA_ISDB_S_DEMODULATOR);
#define KSNODE_BDA_ISDB_S_DEMODULATOR DEFINE_GUIDNAMED(KSNODE_BDA_ISDB_S_DEMODULATOR)


#define STATIC_KSNODE_BDA_OPENCABLE_POD \
    0x345812a0, 0xfb7c, 0x4790, 0xaa, 0x7e, 0xb1, 0xdb, 0x88, 0xac, 0x19, 0xc9
DEFINE_GUIDSTRUCT("345812A0-FB7C-4790-AA7E-B1DB88AC19C9", KSNODE_BDA_OPENCABLE_POD);
#define KSNODE_BDA_OPENCABLE_POD DEFINE_GUIDNAMED(KSNODE_BDA_OPENCABLE_POD)

#define STATIC_KSNODE_BDA_COMMON_CA_POD \
    0xd83ef8fc, 0xf3b8, 0x45ab, 0x8b, 0x71, 0xec, 0xf7, 0xc3, 0x39, 0xde, 0xb4
DEFINE_GUIDSTRUCT("D83EF8FC-F3B8-45ab-8B71-ECF7C339DEB4", KSNODE_BDA_COMMON_CA_POD);
#define KSNODE_BDA_COMMON_CA_POD DEFINE_GUIDNAMED(KSNODE_BDA_COMMON_CA_POD)


#define STATIC_KSNODE_BDA_PID_FILTER \
    0xf5412789, 0xb0a0, 0x44e1, 0xae, 0x4f, 0xee, 0x99, 0x9b, 0x1b, 0x7f, 0xbe
DEFINE_GUIDSTRUCT("F5412789-B0A0-44e1-AE4F-EE999B1B7FBE", KSNODE_BDA_PID_FILTER);
#define KSNODE_BDA_PID_FILTER DEFINE_GUIDNAMED(KSNODE_BDA_PID_FILTER)


#define STATIC_KSNODE_BDA_IP_SINK \
    0x71985f4e, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F4E-1CA1-11d3-9CC8-00C04F7971E0", KSNODE_BDA_IP_SINK);
#define KSNODE_IP_SINK DEFINE_GUIDNAMED(KSNODE_BDA_IP_SINK)

#define STATIC_KSNODE_BDA_VIDEO_ENCODER \
    0xd98429e3, 0x65c9, 0x4ac4, 0x93, 0xaa, 0x76, 0x67, 0x82, 0x83, 0x3b, 0x7a 
DEFINE_GUIDSTRUCT("d98429e3-65c9-4ac4-93aa-766782833b7a", KSNODE_BDA_VIDEO_ENCODER);
#define KSNODE_BDA_VIDEO_ENCODER DEFINE_GUIDNAMED(KSNODE_BDA_VIDEO_ENCODER)

#define STATIC_KSNODE_BDA_PBDA_CAS \
    0xc026869f, 0x7129, 0x4e71, 0x86, 0x96, 0xec, 0x8f, 0x75, 0x29, 0x9b, 0x77
DEFINE_GUIDSTRUCT("C026869F-7129-4e71-8696-EC8F75299B77", KSNODE_BDA_PBDA_CAS);
#define KSNODE_BDA_PBDA_CAS DEFINE_GUIDNAMED(KSNODE_BDA_PBDA_CAS)

#define STATIC_KSNODE_BDA_PBDA_ISDBCAS \
    0xf2cf2ab3, 0x5b9d, 0x40ae, 0xab, 0x7c, 0x4e, 0x7a, 0xd0, 0xbd, 0x1c, 0x52
DEFINE_GUIDSTRUCT("F2CF2AB3-5B9D-40ae-AB7C-4E7AD0BD1C52", KSNODE_BDA_PBDA_ISDBCAS);
#define KSNODE_BDA_PBDA_ISDBCAS DEFINE_GUIDNAMED(KSNODE_BDA_PBDA_ISDBCAS)

#define STATIC_KSNODE_BDA_PBDA_TUNER \
    0xaa5e8286, 0x593c, 0x4979, 0x94, 0x94, 0x46, 0xa2, 0xa9, 0xdf, 0xe0, 0x76
DEFINE_GUIDSTRUCT("AA5E8286-593C-4979-9494-46A2A9DFE076", KSNODE_BDA_PBDA_TUNER);
#define KSNODE_BDA_PBDA_TUNER DEFINE_GUIDNAMED(KSNODE_BDA_PBDA_TUNER)

#define STATIC_KSNODE_BDA_PBDA_MUX \
    0xf88c7787, 0x6678, 0x4f4b, 0xa1, 0x3e, 0xda, 0x9, 0x86, 0x1d, 0x68, 0x2b
DEFINE_GUIDSTRUCT("F88C7787-6678-4f4b-A13E-DA09861D682B", KSNODE_BDA_PBDA_MUX);
#define KSNODE_BDA_PBDA_MUX DEFINE_GUIDNAMED(KSNODE_BDA_PBDA_MUX)

#define STATIC_KSNODE_BDA_PBDA_DRM \
    0x9eeebd03, 0xeea1, 0x450f, 0x96, 0xae, 0x63, 0x3e, 0x6d, 0xe6, 0x3c, 0xce
DEFINE_GUIDSTRUCT("9EEEBD03-EEA1-450f-96AE-633E6DE63CCE", KSNODE_BDA_PBDA_DRM);
#define KSNODE_BDA_PBDA_DRM DEFINE_GUIDNAMED(KSNODE_BDA_PBDA_DRM)

#define STATIC_KSNODE_BDA_DRI_DRM \
    0x4f95ad74, 0xcefb, 0x42d2, 0x94, 0xa9, 0x68, 0xc5, 0xb2, 0xc1, 0xaa, 0xbe
DEFINE_GUIDSTRUCT("4F95AD74-CEFB-42d2-94A9-68C5B2C1AABE", KSNODE_BDA_DRI_DRM);
#define KSNODE_BDA_DRI_DRM DEFINE_GUIDNAMED(KSNODE_BDA_DRI_DRM)

#define STATIC_KSNODE_BDA_TS_SELECTOR \
    0x5eddf185, 0xfed1, 0x4f45, 0x96, 0x85, 0xbb, 0xb7, 0x3c, 0x32, 0x3c, 0xfc
DEFINE_GUIDSTRUCT("5EDDF185-FED1-4f45-9685-BBB73C323CFC", KSNODE_BDA_TS_SELECTOR);
#define KSNODE_BDA_TS_SELECTOR DEFINE_GUIDNAMED(KSNODE_BDA_TS_SELECTOR)


//===========================================================================
//
// IPSink PINNAME GUID
//
//===========================================================================

#define STATIC_PINNAME_IPSINK_INPUT \
    0x3fdffa70L, 0xac9a, 0x11d2, 0x8f, 0x17, 0x00, 0xc0, 0x4f, 0x79, 0x71, 0xe2
DEFINE_GUIDSTRUCT("3fdffa70-ac9a-11d2-8f17-00c04f7971e2", PINNAME_IPSINK_INPUT);
#define PINNAME_IPSINK_INPUT   DEFINE_GUIDNAMED(PINNAME_IPSINK_INPUT)


//===========================================================================
//
// BDA IPSink Categories/Types
//
//===========================================================================


#define STATIC_KSDATAFORMAT_TYPE_BDA_IP\
    0xe25f7b8e, 0xcccc, 0x11d2, 0x8f, 0x25, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe2
DEFINE_GUIDSTRUCT("e25f7b8e-cccc-11d2-8f25-00c04f7971e2", KSDATAFORMAT_TYPE_BDA_IP);
#define KSDATAFORMAT_TYPE_BDA_IP  DEFINE_GUIDNAMED(KSDATAFORMAT_TYPE_BDA_IP)

#define STATIC_KSDATAFORMAT_SUBTYPE_BDA_IP\
    0x5a9a213c, 0xdb08, 0x11d2, 0x8f, 0x32, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe2
DEFINE_GUIDSTRUCT("5a9a213c-db08-11d2-8f32-00c04f7971e2", KSDATAFORMAT_SUBTYPE_BDA_IP);
#define KSDATAFORMAT_SUBTYPE_BDA_IP  DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_BDA_IP)

#define STATIC_KSDATAFORMAT_SPECIFIER_BDA_IP\
    0x6b891420, 0xdb09, 0x11d2, 0x8f, 0x32, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe2
DEFINE_GUIDSTRUCT("6B891420-DB09-11d2-8F32-00C04F7971E2", KSDATAFORMAT_SPECIFIER_BDA_IP);
#define KSDATAFORMAT_SPECIFIER_BDA_IP  DEFINE_GUIDNAMED(KSDATAFORMAT_SPECIFIER_BDA_IP)



#define STATIC_KSDATAFORMAT_TYPE_BDA_IP_CONTROL\
    0xdadd5799, 0x7d5b, 0x4b63, 0x80, 0xfb, 0xd1, 0x44, 0x2f, 0x26, 0xb6, 0x21
DEFINE_GUIDSTRUCT("DADD5799-7D5B-4b63-80FB-D1442F26B621", KSDATAFORMAT_TYPE_BDA_IP_CONTROL);
#define KSDATAFORMAT_TYPE_BDA_IP_CONTROL  DEFINE_GUIDNAMED(KSDATAFORMAT_TYPE_BDA_IP_CONTROL)

#define STATIC_KSDATAFORMAT_SUBTYPE_BDA_IP_CONTROL\
    0x499856e8, 0xe85b, 0x48ed, 0x9b, 0xea, 0x41, 0xd, 0xd, 0xd4, 0xef, 0x81
DEFINE_GUIDSTRUCT("499856E8-E85B-48ed-9BEA-410D0DD4EF81", KSDATAFORMAT_SUBTYPE_BDA_IP_CONTROL);
#define KSDATAFORMAT_SUBTYPE_BDA_IP_CONTROL  DEFINE_GUIDNAMED(KSDATAFORMAT_SUBTYPE_BDA_IP_CONTROL)


//===========================================================================
//
// MPE PINNAME GUID
//
//===========================================================================

#define STATIC_PINNAME_MPE \
    0xc1b06d73L, 0x1dbb, 0x11d3, 0x8f, 0x46, 0x00, 0xC0, 0x4f, 0x79, 0x71, 0xE2
DEFINE_GUIDSTRUCT("C1B06D73-1DBB-11d3-8F46-00C04F7971E2", PINNAME_MPE);
#define PINNAME_MPE   DEFINE_GUIDNAMED(PINNAME_MPE)


/////////////////////////////////////////////////////////////
//
// BDA MPE Categories/Types
//
#define STATIC_KSDATAFORMAT_TYPE_MPE \
    0x455f176c, 0x4b06, 0x47ce, 0x9a, 0xef, 0x8c, 0xae, 0xf7, 0x3d, 0xf7, 0xb5
DEFINE_GUIDSTRUCT("455F176C-4B06-47ce-9AEF-8CAEF73DF7B5", KSDATAFORMAT_TYPE_MPE);
#define KSDATAFORMAT_TYPE_MPE  DEFINE_GUIDNAMED(KSDATAFORMAT_TYPE_MPE)


//===========================================================================
//
// BDA NETWORK TYPE GUID
//
//===========================================================================

#define STATIC_DIGITAL_CABLE_NETWORK_TYPE \
    0x143827AB, 0xF77B, 0x498d, 0x81, 0xCA, 0x5A, 0x00, 0x7A, 0xEC, 0x28, 0xBF
DEFINE_GUIDSTRUCT("143827AB-F77B-498d-81CA-5A007AEC28BF", DIGITAL_CABLE_NETWORK_TYPE);
#define DIGITAL_CABLE_NETWORK_TYPE   DEFINE_GUIDNAMED(DIGITAL_CABLE_NETWORK_TYPE)

#define STATIC_ANALOG_TV_NETWORK_TYPE \
    0xb820d87e, 0xe0e3, 0x478f, 0x8a, 0x38, 0x4e, 0x13, 0xf7, 0xb3, 0xdf, 0x42
DEFINE_GUIDSTRUCT("B820D87E-E0E3-478f-8A38-4E13F7B3DF42", ANALOG_TV_NETWORK_TYPE);
#define ANALOG_TV_NETWORK_TYPE   DEFINE_GUIDNAMED(ANALOG_TV_NETWORK_TYPE)

#define STATIC_ANALOG_AUXIN_NETWORK_TYPE \
    0x742EF867, 0x9E1, 0x40A3, 0x82, 0xD3, 0x96, 0x69, 0xBA, 0x35, 0x32, 0x5F
DEFINE_GUIDSTRUCT("742EF867-09E1-40A3-82D3-9669BA35325F", ANALOG_AUXIN_NETWORK_TYPE);
#define ANALOG_AUXIN_NETWORK_TYPE   DEFINE_GUIDNAMED(ANALOG_AUXIN_NETWORK_TYPE)

#define STATIC_ANALOG_FM_NETWORK_TYPE \
    0x7728087b, 0x2bb9, 0x4e30, 0x80, 0x78, 0x44, 0x94, 0x76, 0xe5, 0x9d, 0xbb
DEFINE_GUIDSTRUCT("7728087B-2BB9-4E30-8078-449476E59DBB", ANALOG_FM_NETWORK_TYPE);
#define ANALOG_FM_NETWORK_TYPE   DEFINE_GUIDNAMED(ANALOG_FM_NETWORK_TYPE)

#define STATIC_ISDB_TERRESTRIAL_TV_NETWORK_TYPE \
    0x95037f6f, 0x3ac7, 0x4452, 0xb6, 0xc4, 0x45, 0xa9, 0xce, 0x92, 0x92, 0xa2
DEFINE_GUIDSTRUCT("95037F6F-3AC7-4452-B6C4-45A9CE9292A2", ISDB_TERRESTRIAL_TV_NETWORK_TYPE); 
#define ISDB_TERRESTRIAL_TV_NETWORK_TYPE DEFINE_GUIDNAMED(ISDB_TERRESTRIAL_TV_NETWORK_TYPE) 
#define STATIC_ISDB_T_NETWORK_TYPE \
    0xfc3855a6, 0xc901, 0x4f2e, 0xab, 0xa8, 0x90, 0x81, 0x5a, 0xfc, 0x6c, 0x83
DEFINE_GUIDSTRUCT("fc3855a6-c901-4f2e-aba8-90815afc6c83", ISDB_T_NETWORK_TYPE);
#define ISDB_T_NETWORK_TYPE   DEFINE_GUIDNAMED(ISDB_T_NETWORK_TYPE)

#define STATIC_ISDB_SATELLITE_TV_NETWORK_TYPE \
    0xb0a4e6a0, 0x6a1a, 0x4b83, 0xbb, 0x5b, 0x90, 0x3e, 0x1d, 0x90, 0xe6, 0xb6 
DEFINE_GUIDSTRUCT("B0A4E6A0-6A1A-4B83-BB5B-903E1D90E6B6", ISDB_SATELLITE_TV_NETWORK_TYPE); 
#define ISDB_SATELLITE_TV_NETWORK_TYPE DEFINE_GUIDNAMED(ISDB_SATELLITE_TV_NETWORK_TYPE)
#define STATIC_ISDB_S_NETWORK_TYPE \
    0xa1e78202, 0x1459, 0x41b1, 0x9c, 0xa9, 0x2a, 0x92, 0x58, 0x7a, 0x42, 0xcc
DEFINE_GUIDSTRUCT("a1e78202-1459-41b1-9ca9-2a92587a42cc", ISDB_S_NETWORK_TYPE);
#define ISDB_S_NETWORK_TYPE   DEFINE_GUIDNAMED(ISDB_S_NETWORK_TYPE)

#define STATIC_ISDB_CABLE_TV_NETWORK_TYPE \
    0xc974ddb5, 0x41fe, 0x4b25, 0x97, 0x41, 0x92, 0xf0, 0x49, 0xf1, 0xd5, 0xd1 
DEFINE_GUIDSTRUCT("C974DDB5-41FE-4B25-9741-92F049F1D5D1", ISDB_CABLE_TV_NETWORK_TYPE); 
#define ISDB_CABLE_TV_NETWORK_TYPE DEFINE_GUIDNAMED(ISDB_CABLE_TV_NETWORK_TYPE)

#define STATIC_DIRECT_TV_SATELLITE_TV_NETWORK_TYPE \
    0x93b66fb5, 0x93d4, 0x4323, 0x92, 0x1c, 0xc1, 0xf5, 0x2d, 0xf6, 0x1d, 0x3f 
DEFINE_GUIDSTRUCT("93B66FB5-93D4-4323-921C-C1F52DF61D3F", DIRECT_TV_SATELLITE_TV_NETWORK_TYPE); 
#define DIRECT_TV_SATELLITE_TV_NETWORK_TYPE DEFINE_GUIDNAMED(DIRECT_TV_SATELLITE_TV_NETWORK_TYPE)

#define STATIC_ECHOSTAR_SATELLITE_TV_NETWORK_TYPE \
    0xc4f6b31b, 0xc6bf, 0x4759, 0x88, 0x6f, 0xa7, 0x38, 0x6d, 0xca, 0x27, 0xa0 
DEFINE_GUIDSTRUCT("C4F6B31B-C6BF-4759-886F-A7386DCA27A0", ECHOSTAR_SATELLITE_TV_NETWORK_TYPE); 
#define ECHOSTAR_SATELLITE_TV_NETWORK_TYPE DEFINE_GUIDNAMED(ECHOSTAR_SATELLITE_TV_NETWORK_TYPE)

// Same as CLSID_ATSCNetworkProvider in uuids.h
#define STATIC_ATSC_TERRESTRIAL_TV_NETWORK_TYPE \
    0x0dad2fdd, 0x5fd7, 0x11d3, 0x8f, 0x50, 0x00, 0xc0, 0x4f, 0x79, 0x71, 0xe2
DEFINE_GUIDSTRUCT("0DAD2FDD-5FD7-11D3-8F50-00C04F7971E2", ATSC_TERRESTRIAL_TV_NETWORK_TYPE); 
#define ATSC_TERRESTRIAL_TV_NETWORK_TYPE DEFINE_GUIDNAMED(ATSC_TERRESTRIAL_TV_NETWORK_TYPE) 

// Same as CLSID_DVBTNetworkProvider in uuids.h
#define STATIC_DVB_TERRESTRIAL_TV_NETWORK_TYPE \
    0x216c62df, 0x6d7f, 0x4e9a, 0x85, 0x71, 0x05, 0xf1, 0x4e, 0xdb, 0x76, 0x6a
DEFINE_GUIDSTRUCT("216C62DF-6D7F-4E9A-8571-05F14EDB766A", DVB_TERRESTRIAL_TV_NETWORK_TYPE); 
#define DVB_TERRESTRIAL_TV_NETWORK_TYPE DEFINE_GUIDNAMED(DVB_TERRESTRIAL_TV_NETWORK_TYPE) 

// Same as CLSID_DVBSNetworkProvider in uuids.h
#define STATIC_BSKYB_TERRESTRIAL_TV_NETWORK_TYPE \
    0x9E9E46C6, 0x3ABA, 0x4f08, 0xAD, 0x0E, 0xCC, 0x5A, 0xC8, 0x14, 0x8C, 0x2B
DEFINE_GUIDSTRUCT("9E9E46C6-3ABA-4f08-AD0E-CC5AC8148C2B", BSKYB_TERRESTRIAL_TV_NETWORK_TYPE);
#define BSKYB_TERRESTRIAL_TV_NETWORK_TYPE DEFINE_GUIDNAMED(BSKYB_TERRESTRIAL_TV_NETWORK_TYPE)

// Same as CLSID_DVBSNetworkProvider in uuids.h
#define STATIC_DVB_SATELLITE_TV_NETWORK_TYPE \
    0xfa4b375a, 0x45b4, 0x4d45, 0x84, 0x40, 0x26, 0x39, 0x57, 0xb1, 0x16, 0x23 
DEFINE_GUIDSTRUCT("FA4B375A-45B4-4D45-8440-263957B11623", DVB_SATELLITE_TV_NETWORK_TYPE); 
#define DVB_SATELLITE_TV_NETWORK_TYPE DEFINE_GUIDNAMED(DVB_SATELLITE_TV_NETWORK_TYPE)

// Same as CLSID_DVBCNetworkProvider in uuids.h
#define STATIC_DVB_CABLE_TV_NETWORK_TYPE \
    0xdc0c0fe7, 0x485, 0x4266, 0xb9, 0x3f, 0x68, 0xfb, 0xf8, 0x0e, 0xd8, 0x34 
DEFINE_GUIDSTRUCT("DC0C0FE7-0485-4266-B93F-68FBF80ED834", DVB_CABLE_TV_NETWORK_TYPE); 
#define DVB_CABLE_TV_NETWORK_TYPE DEFINE_GUIDNAMED(DVB_CABLE_TV_NETWORK_TYPE) 


//===========================================================================
//
// PBDA EVENT GUIDS
//
//===========================================================================
#define STATIC_BDA_DEBUG_DATA_AVAILABLE \
    0x69C24F54, 0x9983, 0x497e, 0xb4, 0x15, 0x28, 0x2b, 0xe4, 0xc5, 0x55, 0xfb 
DEFINE_GUIDSTRUCT("69C24F54-9983-497e-B415-282BE4C555FB", BDA_DEBUG_DATA_AVAILABLE ); 
#define BDA_DEBUG_DATA_AVAILABLE  DEFINE_GUIDNAMED(BDA_DEBUG_DATA_AVAILABLE) 


#define STATIC_BDA_DEBUG_DATA_TYPE_STRING \
    0xa806e767, 0xde5c, 0x430c, 0x80, 0xbf, 0xa2, 0x1e, 0xbe, 0x06, 0xc7, 0x48 
DEFINE_GUIDSTRUCT("a806e767-de5c-430c-80bf-a21ebe06c748", BDA_DEBUG_DATA_TYPE_STRING ); 
#define BDA_DEBUG_DATA_TYPE_STRING  DEFINE_GUIDNAMED(BDA_DEBUG_DATA_TYPE_STRING) 


#define STATIC_EVENTID_BDA_IsdbCASResponse \
    0xd4cb1966, 0x41bc, 0x4ced, 0x9a, 0x20, 0xfd, 0xce, 0xac, 0x78, 0xf7, 0x0d	
DEFINE_GUIDSTRUCT("D4CB1966-41BC-4ced-9A20-FDCEAC78F70D", EVENTID_BDA_IsdbCASResponse);
#define EVENTID_BDA_IsdbCASResponse DEFINE_GUIDNAMED(EVENTID_BDA_IsdbCASResponse)


#define STATIC_EVENTID_BDA_CASRequestTuner \
    0xcf39a9d8, 0xf5d3, 0x4685, 0xbe, 0x57, 0xed, 0x81, 0xdb, 0xa4, 0x6b, 0x27	
DEFINE_GUIDSTRUCT("CF39A9D8-F5D3-4685-BE57-ED81DBA46B27", EVENTID_BDA_CASRequestTuner);
#define EVENTID_BDA_CASRequestTuner DEFINE_GUIDNAMED(EVENTID_BDA_CASRequestTuner)


#define STATIC_EVENTID_BDA_CASReleaseTuner \
    0x20c1a16b, 0x441f, 0x49a5, 0xbb, 0x5c, 0xe9, 0xa0, 0x44, 0x95, 0xc6, 0xc1	
DEFINE_GUIDSTRUCT("20C1A16B-441F-49a5-BB5C-E9A04495C6C1", EVENTID_BDA_CASReleaseTuner);
#define EVENTID_BDA_CASReleaseTuner DEFINE_GUIDNAMED(EVENTID_BDA_CASReleaseTuner)


#define STATIC_EVENTID_BDA_CASOpenMMI \
    0x85dac915, 0xe593, 0x410d, 0x84, 0x71, 0xd6, 0x81, 0x21, 0x05, 0xf2, 0x8e	
DEFINE_GUIDSTRUCT("85DAC915-E593-410d-8471-D6812105F28E", EVENTID_BDA_CASOpenMMI);
#define EVENTID_BDA_CASOpenMMI DEFINE_GUIDNAMED(EVENTID_BDA_CASOpenMMI)


#define STATIC_EVENTID_BDA_CASCloseMMI \
    0x5d0f550f, 0xde2e, 0x479d, 0x83, 0x45, 0xec, 0x0e, 0x95, 0x57, 0xe8, 0xa2	
DEFINE_GUIDSTRUCT("5D0F550F-DE2E-479d-8345-EC0E9557E8A2", EVENTID_BDA_CASCloseMMI);
#define EVENTID_BDA_CASCloseMMI DEFINE_GUIDNAMED(EVENTID_BDA_CASCloseMMI)


#define STATIC_EVENTID_BDA_CASBroadcastMMI \
    0x676876f0, 0x1132, 0x404c, 0xa7, 0xca, 0xe7, 0x20, 0x69, 0xa9, 0xd5, 0x4f	
DEFINE_GUIDSTRUCT("676876F0-1132-404c-A7CA-E72069A9D54F", EVENTID_BDA_CASBroadcastMMI);
#define EVENTID_BDA_CASBroadcastMMI DEFINE_GUIDNAMED(EVENTID_BDA_CASBroadcastMMI)


#define STATIC_EVENTID_BDA_TunerSignalLock \
    0x1872e740, 0xf573, 0x429b, 0xa0, 0x0e, 0xd9, 0xc1, 0xe4, 0x08, 0xaf, 0x09	
DEFINE_GUIDSTRUCT("1872E740-F573-429b-A00E-D9C1E408AF09", EVENTID_BDA_TunerSignalLock);
#define EVENTID_BDA_TunerSignalLock DEFINE_GUIDNAMED(EVENTID_BDA_TunerSignalLock)

#define STATIC_EVENTID_BDA_TunerNoSignal \
    0xe29b382b, 0x1edd, 0x4930, 0xbc, 0x46, 0x68, 0x2f, 0xd7, 0x2d, 0x2d, 0xfb	
DEFINE_GUIDSTRUCT("E29B382B-1EDD-4930-BC46-682FD72D2DFB", EVENTID_BDA_TunerNoSignal);
#define EVENTID_BDA_TunerNoSignal DEFINE_GUIDNAMED(EVENTID_BDA_TunerNoSignal)

#define STATIC_EVENTID_BDA_GPNVValueUpdate \
    0xff75c68c, 0xf416, 0x4e7e, 0xbf, 0x17, 0x6d, 0x55, 0xc5, 0xdf, 0x15, 0x75	
DEFINE_GUIDSTRUCT("FF75C68C-F416-4e7e-BF17-6D55C5DF1575", EVENTID_BDA_GPNVValueUpdate);
#define EVENTID_BDA_GPNVValueUpdate DEFINE_GUIDNAMED(EVENTID_BDA_GPNVValueUpdate)


#define STATIC_EVENTID_BDA_UpdateDrmStatus \
    0x65a6f681, 0x1462, 0x473b, 0x88, 0xce, 0xcb, 0x73, 0x14, 0x27, 0xbd, 0xb5	
DEFINE_GUIDSTRUCT("65A6F681-1462-473b-88CE-CB731427BDB5", EVENTID_BDA_UpdateDrmStatus);
#define EVENTID_BDA_UpdateDrmStatus DEFINE_GUIDNAMED(EVENTID_BDA_UpdateDrmStatus)


#define STATIC_EVENTID_BDA_UpdateScanState \
    0x55702B50, 0x7B49, 0x42B8, 0xA8, 0x2F, 0x4A, 0xFB, 0x69, 0x1B, 0x06, 0x28	
DEFINE_GUIDSTRUCT("55702B50-7B49-42B8-A82F-4AFB691B0628", EVENTID_BDA_UpdateScanState);
#define EVENTID_BDA_UpdateScanState DEFINE_GUIDNAMED(EVENTID_BDA_UpdateScanState)


#define STATIC_EVENTID_BDA_GuideDataAvailable \
    0x98db717a, 0x478a, 0x4cd4, 0x92, 0xd0, 0x95, 0xf6, 0x6b, 0x89, 0xe5, 0xb1	
DEFINE_GUIDSTRUCT("98DB717A-478A-4cd4-92D0-95F66B89E5B1", EVENTID_BDA_GuideDataAvailable);
#define EVENTID_BDA_GuideDataAvailable DEFINE_GUIDNAMED(EVENTID_BDA_GuideDataAvailable)


#define STATIC_EVENTID_BDA_GuideServiceInformationUpdated \
    0xa1c3ea2b, 0x175f, 0x4458, 0xb7, 0x35, 0x50, 0x7d, 0x22, 0xdb, 0x23, 0xa6	
DEFINE_GUIDSTRUCT("A1C3EA2B-175F-4458-B735-507D22DB23A6", EVENTID_BDA_GuideServiceInformationUpdated);
#define EVENTID_BDA_GuideServiceInformationUpdated DEFINE_GUIDNAMED(EVENTID_BDA_GuideServiceInformationUpdated)


#define STATIC_EVENTID_BDA_GuideDataError \
    0xAC33C448, 0x6F73, 0x4fd7, 0xB3, 0x41, 0x59, 0x4C, 0x36, 0x0D, 0x8D, 0x74	
DEFINE_GUIDSTRUCT("AC33C448-6F73-4fd7-B341-594C360D8D74", EVENTID_BDA_GuideDataError);
#define EVENTID_BDA_GuideDataError DEFINE_GUIDNAMED(EVENTID_BDA_GuideDataError)


#define STATIC_EVENTID_BDA_DiseqCResponseAvailable \
    0xefa628f8, 0x1f2c, 0x4b67, 0x9e, 0xa5, 0xac, 0xf6, 0xfa, 0x9a, 0x1f, 0x36	
DEFINE_GUIDSTRUCT("EFA628F8-1F2C-4b67-9EA5-ACF6FA9A1F36", EVENTID_BDA_DiseqCResponseAvailable);
#define EVENTID_BDA_DiseqCResponseAvailable DEFINE_GUIDNAMED(EVENTID_BDA_DiseqCResponseAvailable)

#define STATIC_EVENTID_BDA_LbigsOpenConnection \
    0x356207B2, 0x6F31, 0x4eb0, 0xa2, 0x71, 0xb3, 0xfa, 0x6b, 0xb7, 0x68, 0x0f	
DEFINE_GUIDSTRUCT("356207B2-6F31-4eb0-A271-B3FA6BB7680F", EVENTID_BDA_LbigsOpenConnection);
#define EVENTID_BDA_LbigsOpenConnection DEFINE_GUIDNAMED(EVENTID_BDA_LbigsOpenConnection)

#define STATIC_EVENTID_BDA_LbigsSendData \
    0x1123277B, 0xF1C6, 0x4154, 0x8b, 0x0d, 0x48, 0xe6, 0x15, 0x70, 0x59, 0xaa	
DEFINE_GUIDSTRUCT("1123277B-F1C6-4154-8B0D-48E6157059AA", EVENTID_BDA_LbigsSendData);
#define EVENTID_BDA_LbigsSendData DEFINE_GUIDNAMED(EVENTID_BDA_LbigsSendData)

#define STATIC_EVENTID_BDA_LbigsCloseConnectionHandle \
    0xC2F08B99, 0x65EF, 0x4314, 0x96, 0x71, 0xe9, 0x9d, 0x4c, 0xce, 0x0b, 0xae	
DEFINE_GUIDSTRUCT("C2F08B99-65EF-4314-9671-E99D4CCE0BAE", EVENTID_BDA_LbigsCloseConnectionHandle);
#define EVENTID_BDA_LbigsCloseConnectionHandle DEFINE_GUIDNAMED(EVENTID_BDA_LbigsCloseConnectionHandle)

#define STATIC_EVENTID_BDA_EncoderSignalLock \
    0x5ec90eb9, 0x39fa, 0x4cfc, 0xb9, 0x3f, 0x00, 0xbb, 0x11, 0x07, 0x7f, 0x5e
DEFINE_GUIDSTRUCT("5EC90EB9-39FA-4CFC-B93F-00BB11077F5E", EVENTID_BDA_EncoderSignalLock);
#define EVENTID_BDA_EncoderSignalLock DEFINE_GUIDNAMED(EVENTID_BDA_EncoderSignalLock)


#define STATIC_EVENTID_BDA_FdcStatus \
    0x05f25366, 0xd0eb, 0x43d2, 0xbc, 0x3c, 0x68, 0x2b, 0x86, 0x3d, 0xf1, 0x42
DEFINE_GUIDSTRUCT("05F25366-D0EB-43d2-BC3C-682B863DF142", EVENTID_BDA_FdcStatus);
#define EVENTID_BDA_FdcStatus DEFINE_GUIDNAMED(EVENTID_BDA_FdcStatus)


#define STATIC_EVENTID_BDA_FdcTableSection \
    0x6a0cD757, 0x4ce3,0x4e5b, 0x94, 0x44, 0x71, 0x87, 0xb8, 0x71, 0x52, 0xc5
DEFINE_GUIDSTRUCT("6A0CD757-4CE3-4e5b-9444-7187B87152C5", EVENTID_BDA_FdcTableSection);
#define EVENTID_BDA_FdcTableSection DEFINE_GUIDNAMED(EVENTID_BDA_FdcTableSection)


#define STATIC_EVENTID_BDA_TransprtStreamSelectorInfo \
    0xc40f9f85, 0x9d0, 0x489c, 0x9e, 0x9c, 0x0a, 0xbb, 0xb5, 0x69, 0x51, 0xb0
DEFINE_GUIDSTRUCT("C40F9F85-09D0-489c-9E9C-0ABBB56951B0", EVENTID_BDA_TransprtStreamSelectorInfo);
#define EVENTID_BDA_TransprtStreamSelectorInfo DEFINE_GUIDNAMED(EVENTID_BDA_TransprtStreamSelectorInfo)


#define STATIC_EVENTID_BDA_RatingPinReset \
    0xc6e048c0, 0xc574, 0x4c26, 0xbc, 0xda, 0x2f, 0x4d, 0x35, 0xeb, 0x5e, 0x85
DEFINE_GUIDSTRUCT("C6E048C0-C574-4C26-BCDA-2F4D35EB5E85", EVENTID_BDA_RatingPinReset);
#define EVENTID_BDA_RatingPinReset DEFINE_GUIDNAMED(EVENTID_BDA_RatingPinReset)


//===========================================================================
//
// PBDA COMMON USE GUIDs
//
//===========================================================================

#define STATIC_PBDA_ALWAYS_TUNE_IN_MUX \
    0x1E1D7141, 0x583F, 0x4ac2, 0xB0, 0x19, 0x1F, 0x43, 0x0E, 0xDA, 0x0F, 0x4C	
DEFINE_GUIDSTRUCT("1E1D7141-583F-4ac2-B019-1F430EDA0F4C", PBDA_ALWAYS_TUNE_IN_MUX); 
#define PBDA_ALWAYS_TUNE_IN_MUX DEFINE_GUIDNAMED(PBDA_ALWAYS_TUNE_IN_MUX) 



#if defined(__cplusplus)
}
#endif // defined(__cplusplus)

#endif // !defined(_BDAMEDIA_)
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bdaiface.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for bdaiface.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __bdaiface_h__
#define __bdaiface_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IBDA_NetworkProvider_FWD_DEFINED__
#define __IBDA_NetworkProvider_FWD_DEFINED__
typedef interface IBDA_NetworkProvider IBDA_NetworkProvider;
#endif 	/* __IBDA_NetworkProvider_FWD_DEFINED__ */


#ifndef __IBDA_EthernetFilter_FWD_DEFINED__
#define __IBDA_EthernetFilter_FWD_DEFINED__
typedef interface IBDA_EthernetFilter IBDA_EthernetFilter;
#endif 	/* __IBDA_EthernetFilter_FWD_DEFINED__ */


#ifndef __IBDA_IPV4Filter_FWD_DEFINED__
#define __IBDA_IPV4Filter_FWD_DEFINED__
typedef interface IBDA_IPV4Filter IBDA_IPV4Filter;
#endif 	/* __IBDA_IPV4Filter_FWD_DEFINED__ */


#ifndef __IBDA_IPV6Filter_FWD_DEFINED__
#define __IBDA_IPV6Filter_FWD_DEFINED__
typedef interface IBDA_IPV6Filter IBDA_IPV6Filter;
#endif 	/* __IBDA_IPV6Filter_FWD_DEFINED__ */


#ifndef __IBDA_DeviceControl_FWD_DEFINED__
#define __IBDA_DeviceControl_FWD_DEFINED__
typedef interface IBDA_DeviceControl IBDA_DeviceControl;
#endif 	/* __IBDA_DeviceControl_FWD_DEFINED__ */


#ifndef __IBDA_PinControl_FWD_DEFINED__
#define __IBDA_PinControl_FWD_DEFINED__
typedef interface IBDA_PinControl IBDA_PinControl;
#endif 	/* __IBDA_PinControl_FWD_DEFINED__ */


#ifndef __IBDA_SignalProperties_FWD_DEFINED__
#define __IBDA_SignalProperties_FWD_DEFINED__
typedef interface IBDA_SignalProperties IBDA_SignalProperties;
#endif 	/* __IBDA_SignalProperties_FWD_DEFINED__ */


#ifndef __IBDA_SignalStatistics_FWD_DEFINED__
#define __IBDA_SignalStatistics_FWD_DEFINED__
typedef interface IBDA_SignalStatistics IBDA_SignalStatistics;
#endif 	/* __IBDA_SignalStatistics_FWD_DEFINED__ */


#ifndef __IBDA_Topology_FWD_DEFINED__
#define __IBDA_Topology_FWD_DEFINED__
typedef interface IBDA_Topology IBDA_Topology;
#endif 	/* __IBDA_Topology_FWD_DEFINED__ */


#ifndef __IBDA_VoidTransform_FWD_DEFINED__
#define __IBDA_VoidTransform_FWD_DEFINED__
typedef interface IBDA_VoidTransform IBDA_VoidTransform;
#endif 	/* __IBDA_VoidTransform_FWD_DEFINED__ */


#ifndef __IBDA_NullTransform_FWD_DEFINED__
#define __IBDA_NullTransform_FWD_DEFINED__
typedef interface IBDA_NullTransform IBDA_NullTransform;
#endif 	/* __IBDA_NullTransform_FWD_DEFINED__ */


#ifndef __IBDA_FrequencyFilter_FWD_DEFINED__
#define __IBDA_FrequencyFilter_FWD_DEFINED__
typedef interface IBDA_FrequencyFilter IBDA_FrequencyFilter;
#endif 	/* __IBDA_FrequencyFilter_FWD_DEFINED__ */


#ifndef __IBDA_LNBInfo_FWD_DEFINED__
#define __IBDA_LNBInfo_FWD_DEFINED__
typedef interface IBDA_LNBInfo IBDA_LNBInfo;
#endif 	/* __IBDA_LNBInfo_FWD_DEFINED__ */


#ifndef __IBDA_DiseqCommand_FWD_DEFINED__
#define __IBDA_DiseqCommand_FWD_DEFINED__
typedef interface IBDA_DiseqCommand IBDA_DiseqCommand;
#endif 	/* __IBDA_DiseqCommand_FWD_DEFINED__ */


#ifndef __IBDA_AutoDemodulate_FWD_DEFINED__
#define __IBDA_AutoDemodulate_FWD_DEFINED__
typedef interface IBDA_AutoDemodulate IBDA_AutoDemodulate;
#endif 	/* __IBDA_AutoDemodulate_FWD_DEFINED__ */


#ifndef __IBDA_AutoDemodulateEx_FWD_DEFINED__
#define __IBDA_AutoDemodulateEx_FWD_DEFINED__
typedef interface IBDA_AutoDemodulateEx IBDA_AutoDemodulateEx;
#endif 	/* __IBDA_AutoDemodulateEx_FWD_DEFINED__ */


#ifndef __IBDA_DigitalDemodulator_FWD_DEFINED__
#define __IBDA_DigitalDemodulator_FWD_DEFINED__
typedef interface IBDA_DigitalDemodulator IBDA_DigitalDemodulator;
#endif 	/* __IBDA_DigitalDemodulator_FWD_DEFINED__ */


#ifndef __IBDA_DigitalDemodulator2_FWD_DEFINED__
#define __IBDA_DigitalDemodulator2_FWD_DEFINED__
typedef interface IBDA_DigitalDemodulator2 IBDA_DigitalDemodulator2;
#endif 	/* __IBDA_DigitalDemodulator2_FWD_DEFINED__ */


#ifndef __IBDA_DigitalDemodulator3_FWD_DEFINED__
#define __IBDA_DigitalDemodulator3_FWD_DEFINED__
typedef interface IBDA_DigitalDemodulator3 IBDA_DigitalDemodulator3;
#endif 	/* __IBDA_DigitalDemodulator3_FWD_DEFINED__ */


#ifndef __ICCSubStreamFiltering_FWD_DEFINED__
#define __ICCSubStreamFiltering_FWD_DEFINED__
typedef interface ICCSubStreamFiltering ICCSubStreamFiltering;
#endif 	/* __ICCSubStreamFiltering_FWD_DEFINED__ */


#ifndef __IBDA_IPSinkControl_FWD_DEFINED__
#define __IBDA_IPSinkControl_FWD_DEFINED__
typedef interface IBDA_IPSinkControl IBDA_IPSinkControl;
#endif 	/* __IBDA_IPSinkControl_FWD_DEFINED__ */


#ifndef __IBDA_IPSinkInfo_FWD_DEFINED__
#define __IBDA_IPSinkInfo_FWD_DEFINED__
typedef interface IBDA_IPSinkInfo IBDA_IPSinkInfo;
#endif 	/* __IBDA_IPSinkInfo_FWD_DEFINED__ */


#ifndef __IEnumPIDMap_FWD_DEFINED__
#define __IEnumPIDMap_FWD_DEFINED__
typedef interface IEnumPIDMap IEnumPIDMap;
#endif 	/* __IEnumPIDMap_FWD_DEFINED__ */


#ifndef __IMPEG2PIDMap_FWD_DEFINED__
#define __IMPEG2PIDMap_FWD_DEFINED__
typedef interface IMPEG2PIDMap IMPEG2PIDMap;
#endif 	/* __IMPEG2PIDMap_FWD_DEFINED__ */


#ifndef __IFrequencyMap_FWD_DEFINED__
#define __IFrequencyMap_FWD_DEFINED__
typedef interface IFrequencyMap IFrequencyMap;
#endif 	/* __IFrequencyMap_FWD_DEFINED__ */


#ifndef __IBDA_EasMessage_FWD_DEFINED__
#define __IBDA_EasMessage_FWD_DEFINED__
typedef interface IBDA_EasMessage IBDA_EasMessage;
#endif 	/* __IBDA_EasMessage_FWD_DEFINED__ */


#ifndef __IBDA_TransportStreamInfo_FWD_DEFINED__
#define __IBDA_TransportStreamInfo_FWD_DEFINED__
typedef interface IBDA_TransportStreamInfo IBDA_TransportStreamInfo;
#endif 	/* __IBDA_TransportStreamInfo_FWD_DEFINED__ */


#ifndef __IBDA_ConditionalAccess_FWD_DEFINED__
#define __IBDA_ConditionalAccess_FWD_DEFINED__
typedef interface IBDA_ConditionalAccess IBDA_ConditionalAccess;
#endif 	/* __IBDA_ConditionalAccess_FWD_DEFINED__ */


#ifndef __IBDA_DiagnosticProperties_FWD_DEFINED__
#define __IBDA_DiagnosticProperties_FWD_DEFINED__
typedef interface IBDA_DiagnosticProperties IBDA_DiagnosticProperties;
#endif 	/* __IBDA_DiagnosticProperties_FWD_DEFINED__ */


#ifndef __IBDA_DRM_FWD_DEFINED__
#define __IBDA_DRM_FWD_DEFINED__
typedef interface IBDA_DRM IBDA_DRM;
#endif 	/* __IBDA_DRM_FWD_DEFINED__ */


#ifndef __IBDA_NameValueService_FWD_DEFINED__
#define __IBDA_NameValueService_FWD_DEFINED__
typedef interface IBDA_NameValueService IBDA_NameValueService;
#endif 	/* __IBDA_NameValueService_FWD_DEFINED__ */


#ifndef __IBDA_ConditionalAccessEx_FWD_DEFINED__
#define __IBDA_ConditionalAccessEx_FWD_DEFINED__
typedef interface IBDA_ConditionalAccessEx IBDA_ConditionalAccessEx;
#endif 	/* __IBDA_ConditionalAccessEx_FWD_DEFINED__ */


#ifndef __IBDA_ISDBConditionalAccess_FWD_DEFINED__
#define __IBDA_ISDBConditionalAccess_FWD_DEFINED__
typedef interface IBDA_ISDBConditionalAccess IBDA_ISDBConditionalAccess;
#endif 	/* __IBDA_ISDBConditionalAccess_FWD_DEFINED__ */


#ifndef __IBDA_EventingService_FWD_DEFINED__
#define __IBDA_EventingService_FWD_DEFINED__
typedef interface IBDA_EventingService IBDA_EventingService;
#endif 	/* __IBDA_EventingService_FWD_DEFINED__ */


#ifndef __IBDA_AUX_FWD_DEFINED__
#define __IBDA_AUX_FWD_DEFINED__
typedef interface IBDA_AUX IBDA_AUX;
#endif 	/* __IBDA_AUX_FWD_DEFINED__ */


#ifndef __IBDA_Encoder_FWD_DEFINED__
#define __IBDA_Encoder_FWD_DEFINED__
typedef interface IBDA_Encoder IBDA_Encoder;
#endif 	/* __IBDA_Encoder_FWD_DEFINED__ */


#ifndef __IBDA_FDC_FWD_DEFINED__
#define __IBDA_FDC_FWD_DEFINED__
typedef interface IBDA_FDC IBDA_FDC;
#endif 	/* __IBDA_FDC_FWD_DEFINED__ */


#ifndef __IBDA_GuideDataDeliveryService_FWD_DEFINED__
#define __IBDA_GuideDataDeliveryService_FWD_DEFINED__
typedef interface IBDA_GuideDataDeliveryService IBDA_GuideDataDeliveryService;
#endif 	/* __IBDA_GuideDataDeliveryService_FWD_DEFINED__ */


#ifndef __IBDA_DRMService_FWD_DEFINED__
#define __IBDA_DRMService_FWD_DEFINED__
typedef interface IBDA_DRMService IBDA_DRMService;
#endif 	/* __IBDA_DRMService_FWD_DEFINED__ */


#ifndef __IBDA_WMDRMSession_FWD_DEFINED__
#define __IBDA_WMDRMSession_FWD_DEFINED__
typedef interface IBDA_WMDRMSession IBDA_WMDRMSession;
#endif 	/* __IBDA_WMDRMSession_FWD_DEFINED__ */


#ifndef __IBDA_WMDRMTuner_FWD_DEFINED__
#define __IBDA_WMDRMTuner_FWD_DEFINED__
typedef interface IBDA_WMDRMTuner IBDA_WMDRMTuner;
#endif 	/* __IBDA_WMDRMTuner_FWD_DEFINED__ */


#ifndef __IBDA_DRIDRMService_FWD_DEFINED__
#define __IBDA_DRIDRMService_FWD_DEFINED__
typedef interface IBDA_DRIDRMService IBDA_DRIDRMService;
#endif 	/* __IBDA_DRIDRMService_FWD_DEFINED__ */


#ifndef __IBDA_DRIWMDRMSession_FWD_DEFINED__
#define __IBDA_DRIWMDRMSession_FWD_DEFINED__
typedef interface IBDA_DRIWMDRMSession IBDA_DRIWMDRMSession;
#endif 	/* __IBDA_DRIWMDRMSession_FWD_DEFINED__ */


#ifndef __IBDA_MUX_FWD_DEFINED__
#define __IBDA_MUX_FWD_DEFINED__
typedef interface IBDA_MUX IBDA_MUX;
#endif 	/* __IBDA_MUX_FWD_DEFINED__ */


#ifndef __IBDA_TransportStreamSelector_FWD_DEFINED__
#define __IBDA_TransportStreamSelector_FWD_DEFINED__
typedef interface IBDA_TransportStreamSelector IBDA_TransportStreamSelector;
#endif 	/* __IBDA_TransportStreamSelector_FWD_DEFINED__ */


#ifndef __IBDA_UserActivityService_FWD_DEFINED__
#define __IBDA_UserActivityService_FWD_DEFINED__
typedef interface IBDA_UserActivityService IBDA_UserActivityService;
#endif 	/* __IBDA_UserActivityService_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"
#include "strmif.h"
#include "BdaTypes.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_bdaiface_0000_0000 */
/* [local] */ 

typedef /* [v1_enum] */ 
enum SmartCardStatusType
    {	CardInserted	= 0,
	CardRemoved	= ( CardInserted + 1 ) ,
	CardError	= ( CardRemoved + 1 ) ,
	CardDataChanged	= ( CardError + 1 ) ,
	CardFirmwareUpgrade	= ( CardDataChanged + 1 ) 
    } 	SmartCardStatusType;

typedef /* [v1_enum] */ 
enum SmartCardAssociationType
    {	NotAssociated	= 0,
	Associated	= ( NotAssociated + 1 ) ,
	AssociationUnknown	= ( Associated + 1 ) 
    } 	SmartCardAssociationType;

typedef /* [v1_enum] */ 
enum LocationCodeSchemeType
    {	SCTE_18	= 0
    } 	LocationCodeSchemeType;

typedef struct EALocationCodeType
    {
    LocationCodeSchemeType LocationCodeScheme;
    BYTE state_code;
    BYTE county_subdivision;
    WORD county_code;
    } 	EALocationCodeType;

typedef /* [v1_enum] */ 
enum EntitlementType
    {	Entitled	= 0,
	NotEntitled	= ( Entitled + 1 ) ,
	TechnicalFailure	= ( NotEntitled + 1 ) 
    } 	EntitlementType;

typedef /* [v1_enum] */ 
enum UICloseReasonType
    {	NotReady	= 0,
	UserClosed	= ( NotReady + 1 ) ,
	SystemClosed	= ( UserClosed + 1 ) ,
	DeviceClosed	= ( SystemClosed + 1 ) ,
	ErrorClosed	= ( DeviceClosed + 1 ) 
    } 	UICloseReasonType;

typedef struct SmartCardApplication
    {
    ApplicationTypeType ApplicationType;
    USHORT ApplicationVersion;
    BSTR pbstrApplicationName;
    BSTR pbstrApplicationURL;
    } 	SmartCardApplication;

typedef /* [v1_enum] */ 
enum BDA_DrmPairingError
    {	BDA_DrmPairing_Succeeded	= 0,
	BDA_DrmPairing_HardwareFailure	= ( BDA_DrmPairing_Succeeded + 1 ) ,
	BDA_DrmPairing_NeedRevocationData	= ( BDA_DrmPairing_HardwareFailure + 1 ) ,
	BDA_DrmPairing_NeedIndiv	= ( BDA_DrmPairing_NeedRevocationData + 1 ) ,
	BDA_DrmPairing_Other	= ( BDA_DrmPairing_NeedIndiv + 1 ) ,
	BDA_DrmPairing_DrmInitFailed	= ( BDA_DrmPairing_Other + 1 ) ,
	BDA_DrmPairing_DrmNotPaired	= ( BDA_DrmPairing_DrmInitFailed + 1 ) ,
	BDA_DrmPairing_DrmRePairSoon	= ( BDA_DrmPairing_DrmNotPaired + 1 ) ,
	BDA_DrmPairing_Aborted	= ( BDA_DrmPairing_DrmRePairSoon + 1 ) ,
	BDA_DrmPairing_NeedSDKUpdate	= ( BDA_DrmPairing_Aborted + 1 ) 
    } 	BDA_DrmPairingError;



extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0000_v0_0_s_ifspec;

#ifndef __IBDA_NetworkProvider_INTERFACE_DEFINED__
#define __IBDA_NetworkProvider_INTERFACE_DEFINED__

/* interface IBDA_NetworkProvider */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_NetworkProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fd501041-8ebe-11ce-8183-00aa00577da2")
    IBDA_NetworkProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE PutSignalSource( 
            /* [in] */ ULONG ulSignalSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSignalSource( 
            /* [out][in] */ __RPC__inout ULONG *pulSignalSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNetworkType( 
            /* [out][in] */ __RPC__inout GUID *pguidNetworkType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutTuningSpace( 
            /* [in] */ __RPC__in REFGUID guidTuningSpace) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTuningSpace( 
            /* [out][in] */ __RPC__inout GUID *pguidTuingSpace) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterDeviceFilter( 
            /* [in] */ __RPC__in_opt IUnknown *pUnkFilterControl,
            /* [out][in] */ __RPC__inout ULONG *ppvRegisitrationContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnRegisterDeviceFilter( 
            /* [in] */ ULONG pvRegistrationContext) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_NetworkProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_NetworkProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_NetworkProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_NetworkProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *PutSignalSource )( 
            __RPC__in IBDA_NetworkProvider * This,
            /* [in] */ ULONG ulSignalSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetSignalSource )( 
            __RPC__in IBDA_NetworkProvider * This,
            /* [out][in] */ __RPC__inout ULONG *pulSignalSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetNetworkType )( 
            __RPC__in IBDA_NetworkProvider * This,
            /* [out][in] */ __RPC__inout GUID *pguidNetworkType);
        
        HRESULT ( STDMETHODCALLTYPE *PutTuningSpace )( 
            __RPC__in IBDA_NetworkProvider * This,
            /* [in] */ __RPC__in REFGUID guidTuningSpace);
        
        HRESULT ( STDMETHODCALLTYPE *GetTuningSpace )( 
            __RPC__in IBDA_NetworkProvider * This,
            /* [out][in] */ __RPC__inout GUID *pguidTuingSpace);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterDeviceFilter )( 
            __RPC__in IBDA_NetworkProvider * This,
            /* [in] */ __RPC__in_opt IUnknown *pUnkFilterControl,
            /* [out][in] */ __RPC__inout ULONG *ppvRegisitrationContext);
        
        HRESULT ( STDMETHODCALLTYPE *UnRegisterDeviceFilter )( 
            __RPC__in IBDA_NetworkProvider * This,
            /* [in] */ ULONG pvRegistrationContext);
        
        END_INTERFACE
    } IBDA_NetworkProviderVtbl;

    interface IBDA_NetworkProvider
    {
        CONST_VTBL struct IBDA_NetworkProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_NetworkProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_NetworkProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_NetworkProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_NetworkProvider_PutSignalSource(This,ulSignalSource)	\
    ( (This)->lpVtbl -> PutSignalSource(This,ulSignalSource) ) 

#define IBDA_NetworkProvider_GetSignalSource(This,pulSignalSource)	\
    ( (This)->lpVtbl -> GetSignalSource(This,pulSignalSource) ) 

#define IBDA_NetworkProvider_GetNetworkType(This,pguidNetworkType)	\
    ( (This)->lpVtbl -> GetNetworkType(This,pguidNetworkType) ) 

#define IBDA_NetworkProvider_PutTuningSpace(This,guidTuningSpace)	\
    ( (This)->lpVtbl -> PutTuningSpace(This,guidTuningSpace) ) 

#define IBDA_NetworkProvider_GetTuningSpace(This,pguidTuingSpace)	\
    ( (This)->lpVtbl -> GetTuningSpace(This,pguidTuingSpace) ) 

#define IBDA_NetworkProvider_RegisterDeviceFilter(This,pUnkFilterControl,ppvRegisitrationContext)	\
    ( (This)->lpVtbl -> RegisterDeviceFilter(This,pUnkFilterControl,ppvRegisitrationContext) ) 

#define IBDA_NetworkProvider_UnRegisterDeviceFilter(This,pvRegistrationContext)	\
    ( (This)->lpVtbl -> UnRegisterDeviceFilter(This,pvRegistrationContext) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_NetworkProvider_INTERFACE_DEFINED__ */


#ifndef __IBDA_EthernetFilter_INTERFACE_DEFINED__
#define __IBDA_EthernetFilter_INTERFACE_DEFINED__

/* interface IBDA_EthernetFilter */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_EthernetFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("71985F43-1CA1-11d3-9CC8-00C04F7971E0")
    IBDA_EthernetFilter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMulticastListSize( 
            /* [out][in] */ __RPC__inout ULONG *pulcbAddresses) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutMulticastList( 
            /* [in] */ ULONG ulcbAddresses,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbAddresses) BYTE pAddressList[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMulticastList( 
            /* [out][in] */ __RPC__inout ULONG *pulcbAddresses,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(*pulcbAddresses) BYTE pAddressList[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutMulticastMode( 
            /* [in] */ ULONG ulModeMask) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMulticastMode( 
            /* [out] */ __RPC__out ULONG *pulModeMask) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_EthernetFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_EthernetFilter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_EthernetFilter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_EthernetFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastListSize )( 
            __RPC__in IBDA_EthernetFilter * This,
            /* [out][in] */ __RPC__inout ULONG *pulcbAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *PutMulticastList )( 
            __RPC__in IBDA_EthernetFilter * This,
            /* [in] */ ULONG ulcbAddresses,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbAddresses) BYTE pAddressList[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastList )( 
            __RPC__in IBDA_EthernetFilter * This,
            /* [out][in] */ __RPC__inout ULONG *pulcbAddresses,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(*pulcbAddresses) BYTE pAddressList[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *PutMulticastMode )( 
            __RPC__in IBDA_EthernetFilter * This,
            /* [in] */ ULONG ulModeMask);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastMode )( 
            __RPC__in IBDA_EthernetFilter * This,
            /* [out] */ __RPC__out ULONG *pulModeMask);
        
        END_INTERFACE
    } IBDA_EthernetFilterVtbl;

    interface IBDA_EthernetFilter
    {
        CONST_VTBL struct IBDA_EthernetFilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_EthernetFilter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_EthernetFilter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_EthernetFilter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_EthernetFilter_GetMulticastListSize(This,pulcbAddresses)	\
    ( (This)->lpVtbl -> GetMulticastListSize(This,pulcbAddresses) ) 

#define IBDA_EthernetFilter_PutMulticastList(This,ulcbAddresses,pAddressList)	\
    ( (This)->lpVtbl -> PutMulticastList(This,ulcbAddresses,pAddressList) ) 

#define IBDA_EthernetFilter_GetMulticastList(This,pulcbAddresses,pAddressList)	\
    ( (This)->lpVtbl -> GetMulticastList(This,pulcbAddresses,pAddressList) ) 

#define IBDA_EthernetFilter_PutMulticastMode(This,ulModeMask)	\
    ( (This)->lpVtbl -> PutMulticastMode(This,ulModeMask) ) 

#define IBDA_EthernetFilter_GetMulticastMode(This,pulModeMask)	\
    ( (This)->lpVtbl -> GetMulticastMode(This,pulModeMask) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_EthernetFilter_INTERFACE_DEFINED__ */


#ifndef __IBDA_IPV4Filter_INTERFACE_DEFINED__
#define __IBDA_IPV4Filter_INTERFACE_DEFINED__

/* interface IBDA_IPV4Filter */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_IPV4Filter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("71985F44-1CA1-11d3-9CC8-00C04F7971E0")
    IBDA_IPV4Filter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMulticastListSize( 
            /* [out][in] */ __RPC__inout ULONG *pulcbAddresses) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutMulticastList( 
            /* [in] */ ULONG ulcbAddresses,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbAddresses) BYTE pAddressList[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMulticastList( 
            /* [out][in] */ __RPC__inout ULONG *pulcbAddresses,
            /* [size_is][out] */ __RPC__out_ecount_full(*pulcbAddresses) BYTE pAddressList[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutMulticastMode( 
            /* [in] */ ULONG ulModeMask) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMulticastMode( 
            /* [out] */ __RPC__out ULONG *pulModeMask) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_IPV4FilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_IPV4Filter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_IPV4Filter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_IPV4Filter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastListSize )( 
            __RPC__in IBDA_IPV4Filter * This,
            /* [out][in] */ __RPC__inout ULONG *pulcbAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *PutMulticastList )( 
            __RPC__in IBDA_IPV4Filter * This,
            /* [in] */ ULONG ulcbAddresses,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbAddresses) BYTE pAddressList[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastList )( 
            __RPC__in IBDA_IPV4Filter * This,
            /* [out][in] */ __RPC__inout ULONG *pulcbAddresses,
            /* [size_is][out] */ __RPC__out_ecount_full(*pulcbAddresses) BYTE pAddressList[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *PutMulticastMode )( 
            __RPC__in IBDA_IPV4Filter * This,
            /* [in] */ ULONG ulModeMask);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastMode )( 
            __RPC__in IBDA_IPV4Filter * This,
            /* [out] */ __RPC__out ULONG *pulModeMask);
        
        END_INTERFACE
    } IBDA_IPV4FilterVtbl;

    interface IBDA_IPV4Filter
    {
        CONST_VTBL struct IBDA_IPV4FilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_IPV4Filter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_IPV4Filter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_IPV4Filter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_IPV4Filter_GetMulticastListSize(This,pulcbAddresses)	\
    ( (This)->lpVtbl -> GetMulticastListSize(This,pulcbAddresses) ) 

#define IBDA_IPV4Filter_PutMulticastList(This,ulcbAddresses,pAddressList)	\
    ( (This)->lpVtbl -> PutMulticastList(This,ulcbAddresses,pAddressList) ) 

#define IBDA_IPV4Filter_GetMulticastList(This,pulcbAddresses,pAddressList)	\
    ( (This)->lpVtbl -> GetMulticastList(This,pulcbAddresses,pAddressList) ) 

#define IBDA_IPV4Filter_PutMulticastMode(This,ulModeMask)	\
    ( (This)->lpVtbl -> PutMulticastMode(This,ulModeMask) ) 

#define IBDA_IPV4Filter_GetMulticastMode(This,pulModeMask)	\
    ( (This)->lpVtbl -> GetMulticastMode(This,pulModeMask) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_IPV4Filter_INTERFACE_DEFINED__ */


#ifndef __IBDA_IPV6Filter_INTERFACE_DEFINED__
#define __IBDA_IPV6Filter_INTERFACE_DEFINED__

/* interface IBDA_IPV6Filter */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_IPV6Filter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E1785A74-2A23-4fb3-9245-A8F88017EF33")
    IBDA_IPV6Filter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMulticastListSize( 
            /* [out][in] */ __RPC__inout ULONG *pulcbAddresses) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutMulticastList( 
            /* [in] */ ULONG ulcbAddresses,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbAddresses) BYTE pAddressList[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMulticastList( 
            /* [out][in] */ __RPC__inout ULONG *pulcbAddresses,
            /* [size_is][out] */ __RPC__out_ecount_full(*pulcbAddresses) BYTE pAddressList[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutMulticastMode( 
            /* [in] */ ULONG ulModeMask) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMulticastMode( 
            /* [out] */ __RPC__out ULONG *pulModeMask) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_IPV6FilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_IPV6Filter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_IPV6Filter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_IPV6Filter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastListSize )( 
            __RPC__in IBDA_IPV6Filter * This,
            /* [out][in] */ __RPC__inout ULONG *pulcbAddresses);
        
        HRESULT ( STDMETHODCALLTYPE *PutMulticastList )( 
            __RPC__in IBDA_IPV6Filter * This,
            /* [in] */ ULONG ulcbAddresses,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbAddresses) BYTE pAddressList[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastList )( 
            __RPC__in IBDA_IPV6Filter * This,
            /* [out][in] */ __RPC__inout ULONG *pulcbAddresses,
            /* [size_is][out] */ __RPC__out_ecount_full(*pulcbAddresses) BYTE pAddressList[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *PutMulticastMode )( 
            __RPC__in IBDA_IPV6Filter * This,
            /* [in] */ ULONG ulModeMask);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastMode )( 
            __RPC__in IBDA_IPV6Filter * This,
            /* [out] */ __RPC__out ULONG *pulModeMask);
        
        END_INTERFACE
    } IBDA_IPV6FilterVtbl;

    interface IBDA_IPV6Filter
    {
        CONST_VTBL struct IBDA_IPV6FilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_IPV6Filter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_IPV6Filter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_IPV6Filter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_IPV6Filter_GetMulticastListSize(This,pulcbAddresses)	\
    ( (This)->lpVtbl -> GetMulticastListSize(This,pulcbAddresses) ) 

#define IBDA_IPV6Filter_PutMulticastList(This,ulcbAddresses,pAddressList)	\
    ( (This)->lpVtbl -> PutMulticastList(This,ulcbAddresses,pAddressList) ) 

#define IBDA_IPV6Filter_GetMulticastList(This,pulcbAddresses,pAddressList)	\
    ( (This)->lpVtbl -> GetMulticastList(This,pulcbAddresses,pAddressList) ) 

#define IBDA_IPV6Filter_PutMulticastMode(This,ulModeMask)	\
    ( (This)->lpVtbl -> PutMulticastMode(This,ulModeMask) ) 

#define IBDA_IPV6Filter_GetMulticastMode(This,pulModeMask)	\
    ( (This)->lpVtbl -> GetMulticastMode(This,pulModeMask) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_IPV6Filter_INTERFACE_DEFINED__ */


#ifndef __IBDA_DeviceControl_INTERFACE_DEFINED__
#define __IBDA_DeviceControl_INTERFACE_DEFINED__

/* interface IBDA_DeviceControl */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_DeviceControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FD0A5AF3-B41D-11d2-9C95-00C04F7971E0")
    IBDA_DeviceControl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE StartChanges( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CheckChanges( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CommitChanges( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetChangeState( 
            /* [out][in] */ __RPC__inout ULONG *pState) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_DeviceControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_DeviceControl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_DeviceControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_DeviceControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *StartChanges )( 
            __RPC__in IBDA_DeviceControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *CheckChanges )( 
            __RPC__in IBDA_DeviceControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *CommitChanges )( 
            __RPC__in IBDA_DeviceControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetChangeState )( 
            __RPC__in IBDA_DeviceControl * This,
            /* [out][in] */ __RPC__inout ULONG *pState);
        
        END_INTERFACE
    } IBDA_DeviceControlVtbl;

    interface IBDA_DeviceControl
    {
        CONST_VTBL struct IBDA_DeviceControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_DeviceControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_DeviceControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_DeviceControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_DeviceControl_StartChanges(This)	\
    ( (This)->lpVtbl -> StartChanges(This) ) 

#define IBDA_DeviceControl_CheckChanges(This)	\
    ( (This)->lpVtbl -> CheckChanges(This) ) 

#define IBDA_DeviceControl_CommitChanges(This)	\
    ( (This)->lpVtbl -> CommitChanges(This) ) 

#define IBDA_DeviceControl_GetChangeState(This,pState)	\
    ( (This)->lpVtbl -> GetChangeState(This,pState) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_DeviceControl_INTERFACE_DEFINED__ */


#ifndef __IBDA_PinControl_INTERFACE_DEFINED__
#define __IBDA_PinControl_INTERFACE_DEFINED__

/* interface IBDA_PinControl */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_PinControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0DED49D5-A8B7-4d5d-97A1-12B0C195874D")
    IBDA_PinControl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPinID( 
            /* [out][in] */ __RPC__inout ULONG *pulPinID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPinType( 
            /* [out][in] */ __RPC__inout ULONG *pulPinType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegistrationContext( 
            /* [out][in] */ __RPC__inout ULONG *pulRegistrationCtx) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_PinControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_PinControl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_PinControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_PinControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetPinID )( 
            __RPC__in IBDA_PinControl * This,
            /* [out][in] */ __RPC__inout ULONG *pulPinID);
        
        HRESULT ( STDMETHODCALLTYPE *GetPinType )( 
            __RPC__in IBDA_PinControl * This,
            /* [out][in] */ __RPC__inout ULONG *pulPinType);
        
        HRESULT ( STDMETHODCALLTYPE *RegistrationContext )( 
            __RPC__in IBDA_PinControl * This,
            /* [out][in] */ __RPC__inout ULONG *pulRegistrationCtx);
        
        END_INTERFACE
    } IBDA_PinControlVtbl;

    interface IBDA_PinControl
    {
        CONST_VTBL struct IBDA_PinControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_PinControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_PinControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_PinControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_PinControl_GetPinID(This,pulPinID)	\
    ( (This)->lpVtbl -> GetPinID(This,pulPinID) ) 

#define IBDA_PinControl_GetPinType(This,pulPinType)	\
    ( (This)->lpVtbl -> GetPinType(This,pulPinType) ) 

#define IBDA_PinControl_RegistrationContext(This,pulRegistrationCtx)	\
    ( (This)->lpVtbl -> RegistrationContext(This,pulRegistrationCtx) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_PinControl_INTERFACE_DEFINED__ */


#ifndef __IBDA_SignalProperties_INTERFACE_DEFINED__
#define __IBDA_SignalProperties_INTERFACE_DEFINED__

/* interface IBDA_SignalProperties */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_SignalProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D2F1644B-B409-11d2-BC69-00A0C9EE9E16")
    IBDA_SignalProperties : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE PutNetworkType( 
            /* [in] */ __RPC__in REFGUID guidNetworkType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNetworkType( 
            /* [out][in] */ __RPC__inout GUID *pguidNetworkType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutSignalSource( 
            /* [in] */ ULONG ulSignalSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSignalSource( 
            /* [out][in] */ __RPC__inout ULONG *pulSignalSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PutTuningSpace( 
            /* [in] */ __RPC__in REFGUID guidTuningSpace) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTuningSpace( 
            /* [out][in] */ __RPC__inout GUID *pguidTuingSpace) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_SignalPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_SignalProperties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_SignalProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_SignalProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *PutNetworkType )( 
            __RPC__in IBDA_SignalProperties * This,
            /* [in] */ __RPC__in REFGUID guidNetworkType);
        
        HRESULT ( STDMETHODCALLTYPE *GetNetworkType )( 
            __RPC__in IBDA_SignalProperties * This,
            /* [out][in] */ __RPC__inout GUID *pguidNetworkType);
        
        HRESULT ( STDMETHODCALLTYPE *PutSignalSource )( 
            __RPC__in IBDA_SignalProperties * This,
            /* [in] */ ULONG ulSignalSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetSignalSource )( 
            __RPC__in IBDA_SignalProperties * This,
            /* [out][in] */ __RPC__inout ULONG *pulSignalSource);
        
        HRESULT ( STDMETHODCALLTYPE *PutTuningSpace )( 
            __RPC__in IBDA_SignalProperties * This,
            /* [in] */ __RPC__in REFGUID guidTuningSpace);
        
        HRESULT ( STDMETHODCALLTYPE *GetTuningSpace )( 
            __RPC__in IBDA_SignalProperties * This,
            /* [out][in] */ __RPC__inout GUID *pguidTuingSpace);
        
        END_INTERFACE
    } IBDA_SignalPropertiesVtbl;

    interface IBDA_SignalProperties
    {
        CONST_VTBL struct IBDA_SignalPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_SignalProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_SignalProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_SignalProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_SignalProperties_PutNetworkType(This,guidNetworkType)	\
    ( (This)->lpVtbl -> PutNetworkType(This,guidNetworkType) ) 

#define IBDA_SignalProperties_GetNetworkType(This,pguidNetworkType)	\
    ( (This)->lpVtbl -> GetNetworkType(This,pguidNetworkType) ) 

#define IBDA_SignalProperties_PutSignalSource(This,ulSignalSource)	\
    ( (This)->lpVtbl -> PutSignalSource(This,ulSignalSource) ) 

#define IBDA_SignalProperties_GetSignalSource(This,pulSignalSource)	\
    ( (This)->lpVtbl -> GetSignalSource(This,pulSignalSource) ) 

#define IBDA_SignalProperties_PutTuningSpace(This,guidTuningSpace)	\
    ( (This)->lpVtbl -> PutTuningSpace(This,guidTuningSpace) ) 

#define IBDA_SignalProperties_GetTuningSpace(This,pguidTuingSpace)	\
    ( (This)->lpVtbl -> GetTuningSpace(This,pguidTuingSpace) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_SignalProperties_INTERFACE_DEFINED__ */


#ifndef __IBDA_SignalStatistics_INTERFACE_DEFINED__
#define __IBDA_SignalStatistics_INTERFACE_DEFINED__

/* interface IBDA_SignalStatistics */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_SignalStatistics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1347D106-CF3A-428a-A5CB-AC0D9A2A4338")
    IBDA_SignalStatistics : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE put_SignalStrength( 
            /* [in] */ LONG lDbStrength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SignalStrength( 
            /* [out][in] */ __RPC__inout LONG *plDbStrength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_SignalQuality( 
            /* [in] */ LONG lPercentQuality) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SignalQuality( 
            /* [out][in] */ __RPC__inout LONG *plPercentQuality) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_SignalPresent( 
            /* [in] */ BOOLEAN fPresent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SignalPresent( 
            /* [out][in] */ __RPC__inout BOOLEAN *pfPresent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_SignalLocked( 
            /* [in] */ BOOLEAN fLocked) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SignalLocked( 
            /* [out][in] */ __RPC__inout BOOLEAN *pfLocked) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_SampleTime( 
            /* [in] */ LONG lmsSampleTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SampleTime( 
            /* [out][in] */ __RPC__inout LONG *plmsSampleTime) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_SignalStatisticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_SignalStatistics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_SignalStatistics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_SignalStatistics * This);
        
        HRESULT ( STDMETHODCALLTYPE *put_SignalStrength )( 
            __RPC__in IBDA_SignalStatistics * This,
            /* [in] */ LONG lDbStrength);
        
        HRESULT ( STDMETHODCALLTYPE *get_SignalStrength )( 
            __RPC__in IBDA_SignalStatistics * This,
            /* [out][in] */ __RPC__inout LONG *plDbStrength);
        
        HRESULT ( STDMETHODCALLTYPE *put_SignalQuality )( 
            __RPC__in IBDA_SignalStatistics * This,
            /* [in] */ LONG lPercentQuality);
        
        HRESULT ( STDMETHODCALLTYPE *get_SignalQuality )( 
            __RPC__in IBDA_SignalStatistics * This,
            /* [out][in] */ __RPC__inout LONG *plPercentQuality);
        
        HRESULT ( STDMETHODCALLTYPE *put_SignalPresent )( 
            __RPC__in IBDA_SignalStatistics * This,
            /* [in] */ BOOLEAN fPresent);
        
        HRESULT ( STDMETHODCALLTYPE *get_SignalPresent )( 
            __RPC__in IBDA_SignalStatistics * This,
            /* [out][in] */ __RPC__inout BOOLEAN *pfPresent);
        
        HRESULT ( STDMETHODCALLTYPE *put_SignalLocked )( 
            __RPC__in IBDA_SignalStatistics * This,
            /* [in] */ BOOLEAN fLocked);
        
        HRESULT ( STDMETHODCALLTYPE *get_SignalLocked )( 
            __RPC__in IBDA_SignalStatistics * This,
            /* [out][in] */ __RPC__inout BOOLEAN *pfLocked);
        
        HRESULT ( STDMETHODCALLTYPE *put_SampleTime )( 
            __RPC__in IBDA_SignalStatistics * This,
            /* [in] */ LONG lmsSampleTime);
        
        HRESULT ( STDMETHODCALLTYPE *get_SampleTime )( 
            __RPC__in IBDA_SignalStatistics * This,
            /* [out][in] */ __RPC__inout LONG *plmsSampleTime);
        
        END_INTERFACE
    } IBDA_SignalStatisticsVtbl;

    interface IBDA_SignalStatistics
    {
        CONST_VTBL struct IBDA_SignalStatisticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_SignalStatistics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_SignalStatistics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_SignalStatistics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_SignalStatistics_put_SignalStrength(This,lDbStrength)	\
    ( (This)->lpVtbl -> put_SignalStrength(This,lDbStrength) ) 

#define IBDA_SignalStatistics_get_SignalStrength(This,plDbStrength)	\
    ( (This)->lpVtbl -> get_SignalStrength(This,plDbStrength) ) 

#define IBDA_SignalStatistics_put_SignalQuality(This,lPercentQuality)	\
    ( (This)->lpVtbl -> put_SignalQuality(This,lPercentQuality) ) 

#define IBDA_SignalStatistics_get_SignalQuality(This,plPercentQuality)	\
    ( (This)->lpVtbl -> get_SignalQuality(This,plPercentQuality) ) 

#define IBDA_SignalStatistics_put_SignalPresent(This,fPresent)	\
    ( (This)->lpVtbl -> put_SignalPresent(This,fPresent) ) 

#define IBDA_SignalStatistics_get_SignalPresent(This,pfPresent)	\
    ( (This)->lpVtbl -> get_SignalPresent(This,pfPresent) ) 

#define IBDA_SignalStatistics_put_SignalLocked(This,fLocked)	\
    ( (This)->lpVtbl -> put_SignalLocked(This,fLocked) ) 

#define IBDA_SignalStatistics_get_SignalLocked(This,pfLocked)	\
    ( (This)->lpVtbl -> get_SignalLocked(This,pfLocked) ) 

#define IBDA_SignalStatistics_put_SampleTime(This,lmsSampleTime)	\
    ( (This)->lpVtbl -> put_SampleTime(This,lmsSampleTime) ) 

#define IBDA_SignalStatistics_get_SampleTime(This,plmsSampleTime)	\
    ( (This)->lpVtbl -> get_SampleTime(This,plmsSampleTime) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_SignalStatistics_INTERFACE_DEFINED__ */


#ifndef __IBDA_Topology_INTERFACE_DEFINED__
#define __IBDA_Topology_INTERFACE_DEFINED__

/* interface IBDA_Topology */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_Topology;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("79B56888-7FEA-4690-B45D-38FD3C7849BE")
    IBDA_Topology : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetNodeTypes( 
            /* [out][in] */ __RPC__inout ULONG *pulcNodeTypes,
            /* [in] */ ULONG ulcNodeTypesMax,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(ulcNodeTypesMax) ULONG rgulNodeTypes[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNodeDescriptors( 
            /* [out][in] */ __RPC__inout ULONG *ulcNodeDescriptors,
            /* [in] */ ULONG ulcNodeDescriptorsMax,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(ulcNodeDescriptorsMax) BDANODE_DESCRIPTOR rgNodeDescriptors[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNodeInterfaces( 
            /* [in] */ ULONG ulNodeType,
            /* [out][in] */ __RPC__inout ULONG *pulcInterfaces,
            /* [in] */ ULONG ulcInterfacesMax,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(ulcInterfacesMax) GUID rgguidInterfaces[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPinTypes( 
            /* [out][in] */ __RPC__inout ULONG *pulcPinTypes,
            /* [in] */ ULONG ulcPinTypesMax,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(ulcPinTypesMax) ULONG rgulPinTypes[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTemplateConnections( 
            /* [out][in] */ __RPC__inout ULONG *pulcConnections,
            /* [in] */ ULONG ulcConnectionsMax,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(ulcConnectionsMax) BDA_TEMPLATE_CONNECTION rgConnections[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreatePin( 
            /* [in] */ ULONG ulPinType,
            /* [out][in] */ __RPC__inout ULONG *pulPinId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePin( 
            /* [in] */ ULONG ulPinId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMediaType( 
            /* [in] */ ULONG ulPinId,
            /* [in] */ __RPC__in AM_MEDIA_TYPE *pMediaType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMedium( 
            /* [in] */ ULONG ulPinId,
            /* [in] */ __RPC__in REGPINMEDIUM *pMedium) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateTopology( 
            /* [in] */ ULONG ulInputPinId,
            /* [in] */ ULONG ulOutputPinId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetControlNode( 
            /* [in] */ ULONG ulInputPinId,
            /* [in] */ ULONG ulOutputPinId,
            /* [in] */ ULONG ulNodeType,
            /* [out][in] */ __RPC__deref_inout_opt IUnknown **ppControlNode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_TopologyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_Topology * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_Topology * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_Topology * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetNodeTypes )( 
            __RPC__in IBDA_Topology * This,
            /* [out][in] */ __RPC__inout ULONG *pulcNodeTypes,
            /* [in] */ ULONG ulcNodeTypesMax,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(ulcNodeTypesMax) ULONG rgulNodeTypes[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetNodeDescriptors )( 
            __RPC__in IBDA_Topology * This,
            /* [out][in] */ __RPC__inout ULONG *ulcNodeDescriptors,
            /* [in] */ ULONG ulcNodeDescriptorsMax,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(ulcNodeDescriptorsMax) BDANODE_DESCRIPTOR rgNodeDescriptors[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetNodeInterfaces )( 
            __RPC__in IBDA_Topology * This,
            /* [in] */ ULONG ulNodeType,
            /* [out][in] */ __RPC__inout ULONG *pulcInterfaces,
            /* [in] */ ULONG ulcInterfacesMax,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(ulcInterfacesMax) GUID rgguidInterfaces[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetPinTypes )( 
            __RPC__in IBDA_Topology * This,
            /* [out][in] */ __RPC__inout ULONG *pulcPinTypes,
            /* [in] */ ULONG ulcPinTypesMax,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(ulcPinTypesMax) ULONG rgulPinTypes[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetTemplateConnections )( 
            __RPC__in IBDA_Topology * This,
            /* [out][in] */ __RPC__inout ULONG *pulcConnections,
            /* [in] */ ULONG ulcConnectionsMax,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(ulcConnectionsMax) BDA_TEMPLATE_CONNECTION rgConnections[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *CreatePin )( 
            __RPC__in IBDA_Topology * This,
            /* [in] */ ULONG ulPinType,
            /* [out][in] */ __RPC__inout ULONG *pulPinId);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePin )( 
            __RPC__in IBDA_Topology * This,
            /* [in] */ ULONG ulPinId);
        
        HRESULT ( STDMETHODCALLTYPE *SetMediaType )( 
            __RPC__in IBDA_Topology * This,
            /* [in] */ ULONG ulPinId,
            /* [in] */ __RPC__in AM_MEDIA_TYPE *pMediaType);
        
        HRESULT ( STDMETHODCALLTYPE *SetMedium )( 
            __RPC__in IBDA_Topology * This,
            /* [in] */ ULONG ulPinId,
            /* [in] */ __RPC__in REGPINMEDIUM *pMedium);
        
        HRESULT ( STDMETHODCALLTYPE *CreateTopology )( 
            __RPC__in IBDA_Topology * This,
            /* [in] */ ULONG ulInputPinId,
            /* [in] */ ULONG ulOutputPinId);
        
        HRESULT ( STDMETHODCALLTYPE *GetControlNode )( 
            __RPC__in IBDA_Topology * This,
            /* [in] */ ULONG ulInputPinId,
            /* [in] */ ULONG ulOutputPinId,
            /* [in] */ ULONG ulNodeType,
            /* [out][in] */ __RPC__deref_inout_opt IUnknown **ppControlNode);
        
        END_INTERFACE
    } IBDA_TopologyVtbl;

    interface IBDA_Topology
    {
        CONST_VTBL struct IBDA_TopologyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_Topology_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_Topology_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_Topology_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_Topology_GetNodeTypes(This,pulcNodeTypes,ulcNodeTypesMax,rgulNodeTypes)	\
    ( (This)->lpVtbl -> GetNodeTypes(This,pulcNodeTypes,ulcNodeTypesMax,rgulNodeTypes) ) 

#define IBDA_Topology_GetNodeDescriptors(This,ulcNodeDescriptors,ulcNodeDescriptorsMax,rgNodeDescriptors)	\
    ( (This)->lpVtbl -> GetNodeDescriptors(This,ulcNodeDescriptors,ulcNodeDescriptorsMax,rgNodeDescriptors) ) 

#define IBDA_Topology_GetNodeInterfaces(This,ulNodeType,pulcInterfaces,ulcInterfacesMax,rgguidInterfaces)	\
    ( (This)->lpVtbl -> GetNodeInterfaces(This,ulNodeType,pulcInterfaces,ulcInterfacesMax,rgguidInterfaces) ) 

#define IBDA_Topology_GetPinTypes(This,pulcPinTypes,ulcPinTypesMax,rgulPinTypes)	\
    ( (This)->lpVtbl -> GetPinTypes(This,pulcPinTypes,ulcPinTypesMax,rgulPinTypes) ) 

#define IBDA_Topology_GetTemplateConnections(This,pulcConnections,ulcConnectionsMax,rgConnections)	\
    ( (This)->lpVtbl -> GetTemplateConnections(This,pulcConnections,ulcConnectionsMax,rgConnections) ) 

#define IBDA_Topology_CreatePin(This,ulPinType,pulPinId)	\
    ( (This)->lpVtbl -> CreatePin(This,ulPinType,pulPinId) ) 

#define IBDA_Topology_DeletePin(This,ulPinId)	\
    ( (This)->lpVtbl -> DeletePin(This,ulPinId) ) 

#define IBDA_Topology_SetMediaType(This,ulPinId,pMediaType)	\
    ( (This)->lpVtbl -> SetMediaType(This,ulPinId,pMediaType) ) 

#define IBDA_Topology_SetMedium(This,ulPinId,pMedium)	\
    ( (This)->lpVtbl -> SetMedium(This,ulPinId,pMedium) ) 

#define IBDA_Topology_CreateTopology(This,ulInputPinId,ulOutputPinId)	\
    ( (This)->lpVtbl -> CreateTopology(This,ulInputPinId,ulOutputPinId) ) 

#define IBDA_Topology_GetControlNode(This,ulInputPinId,ulOutputPinId,ulNodeType,ppControlNode)	\
    ( (This)->lpVtbl -> GetControlNode(This,ulInputPinId,ulOutputPinId,ulNodeType,ppControlNode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_Topology_INTERFACE_DEFINED__ */


#ifndef __IBDA_VoidTransform_INTERFACE_DEFINED__
#define __IBDA_VoidTransform_INTERFACE_DEFINED__

/* interface IBDA_VoidTransform */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_VoidTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("71985F46-1CA1-11d3-9CC8-00C04F7971E0")
    IBDA_VoidTransform : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Start( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_VoidTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_VoidTransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_VoidTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_VoidTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *Start )( 
            __RPC__in IBDA_VoidTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            __RPC__in IBDA_VoidTransform * This);
        
        END_INTERFACE
    } IBDA_VoidTransformVtbl;

    interface IBDA_VoidTransform
    {
        CONST_VTBL struct IBDA_VoidTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_VoidTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_VoidTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_VoidTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_VoidTransform_Start(This)	\
    ( (This)->lpVtbl -> Start(This) ) 

#define IBDA_VoidTransform_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_VoidTransform_INTERFACE_DEFINED__ */


#ifndef __IBDA_NullTransform_INTERFACE_DEFINED__
#define __IBDA_NullTransform_INTERFACE_DEFINED__

/* interface IBDA_NullTransform */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_NullTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DDF15B0D-BD25-11d2-9CA0-00C04F7971E0")
    IBDA_NullTransform : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Start( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_NullTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_NullTransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_NullTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_NullTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *Start )( 
            __RPC__in IBDA_NullTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            __RPC__in IBDA_NullTransform * This);
        
        END_INTERFACE
    } IBDA_NullTransformVtbl;

    interface IBDA_NullTransform
    {
        CONST_VTBL struct IBDA_NullTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_NullTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_NullTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_NullTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_NullTransform_Start(This)	\
    ( (This)->lpVtbl -> Start(This) ) 

#define IBDA_NullTransform_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_NullTransform_INTERFACE_DEFINED__ */


#ifndef __IBDA_FrequencyFilter_INTERFACE_DEFINED__
#define __IBDA_FrequencyFilter_INTERFACE_DEFINED__

/* interface IBDA_FrequencyFilter */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_FrequencyFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("71985F47-1CA1-11d3-9CC8-00C04F7971E0")
    IBDA_FrequencyFilter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE put_Autotune( 
            /* [in] */ ULONG ulTransponder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_Autotune( 
            /* [out][in] */ __RPC__inout ULONG *pulTransponder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_Frequency( 
            /* [in] */ ULONG ulFrequency) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_Frequency( 
            /* [out][in] */ __RPC__inout ULONG *pulFrequency) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_Polarity( 
            /* [in] */ Polarisation Polarity) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_Polarity( 
            /* [out][in] */ __RPC__inout Polarisation *pPolarity) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_Range( 
            /* [in] */ ULONG ulRange) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_Range( 
            /* [out][in] */ __RPC__inout ULONG *pulRange) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_Bandwidth( 
            /* [in] */ ULONG ulBandwidth) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_Bandwidth( 
            /* [out][in] */ __RPC__inout ULONG *pulBandwidth) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_FrequencyMultiplier( 
            /* [in] */ ULONG ulMultiplier) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_FrequencyMultiplier( 
            /* [out][in] */ __RPC__inout ULONG *pulMultiplier) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_FrequencyFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_FrequencyFilter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_FrequencyFilter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_FrequencyFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *put_Autotune )( 
            __RPC__in IBDA_FrequencyFilter * This,
            /* [in] */ ULONG ulTransponder);
        
        HRESULT ( STDMETHODCALLTYPE *get_Autotune )( 
            __RPC__in IBDA_FrequencyFilter * This,
            /* [out][in] */ __RPC__inout ULONG *pulTransponder);
        
        HRESULT ( STDMETHODCALLTYPE *put_Frequency )( 
            __RPC__in IBDA_FrequencyFilter * This,
            /* [in] */ ULONG ulFrequency);
        
        HRESULT ( STDMETHODCALLTYPE *get_Frequency )( 
            __RPC__in IBDA_FrequencyFilter * This,
            /* [out][in] */ __RPC__inout ULONG *pulFrequency);
        
        HRESULT ( STDMETHODCALLTYPE *put_Polarity )( 
            __RPC__in IBDA_FrequencyFilter * This,
            /* [in] */ Polarisation Polarity);
        
        HRESULT ( STDMETHODCALLTYPE *get_Polarity )( 
            __RPC__in IBDA_FrequencyFilter * This,
            /* [out][in] */ __RPC__inout Polarisation *pPolarity);
        
        HRESULT ( STDMETHODCALLTYPE *put_Range )( 
            __RPC__in IBDA_FrequencyFilter * This,
            /* [in] */ ULONG ulRange);
        
        HRESULT ( STDMETHODCALLTYPE *get_Range )( 
            __RPC__in IBDA_FrequencyFilter * This,
            /* [out][in] */ __RPC__inout ULONG *pulRange);
        
        HRESULT ( STDMETHODCALLTYPE *put_Bandwidth )( 
            __RPC__in IBDA_FrequencyFilter * This,
            /* [in] */ ULONG ulBandwidth);
        
        HRESULT ( STDMETHODCALLTYPE *get_Bandwidth )( 
            __RPC__in IBDA_FrequencyFilter * This,
            /* [out][in] */ __RPC__inout ULONG *pulBandwidth);
        
        HRESULT ( STDMETHODCALLTYPE *put_FrequencyMultiplier )( 
            __RPC__in IBDA_FrequencyFilter * This,
            /* [in] */ ULONG ulMultiplier);
        
        HRESULT ( STDMETHODCALLTYPE *get_FrequencyMultiplier )( 
            __RPC__in IBDA_FrequencyFilter * This,
            /* [out][in] */ __RPC__inout ULONG *pulMultiplier);
        
        END_INTERFACE
    } IBDA_FrequencyFilterVtbl;

    interface IBDA_FrequencyFilter
    {
        CONST_VTBL struct IBDA_FrequencyFilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_FrequencyFilter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_FrequencyFilter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_FrequencyFilter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_FrequencyFilter_put_Autotune(This,ulTransponder)	\
    ( (This)->lpVtbl -> put_Autotune(This,ulTransponder) ) 

#define IBDA_FrequencyFilter_get_Autotune(This,pulTransponder)	\
    ( (This)->lpVtbl -> get_Autotune(This,pulTransponder) ) 

#define IBDA_FrequencyFilter_put_Frequency(This,ulFrequency)	\
    ( (This)->lpVtbl -> put_Frequency(This,ulFrequency) ) 

#define IBDA_FrequencyFilter_get_Frequency(This,pulFrequency)	\
    ( (This)->lpVtbl -> get_Frequency(This,pulFrequency) ) 

#define IBDA_FrequencyFilter_put_Polarity(This,Polarity)	\
    ( (This)->lpVtbl -> put_Polarity(This,Polarity) ) 

#define IBDA_FrequencyFilter_get_Polarity(This,pPolarity)	\
    ( (This)->lpVtbl -> get_Polarity(This,pPolarity) ) 

#define IBDA_FrequencyFilter_put_Range(This,ulRange)	\
    ( (This)->lpVtbl -> put_Range(This,ulRange) ) 

#define IBDA_FrequencyFilter_get_Range(This,pulRange)	\
    ( (This)->lpVtbl -> get_Range(This,pulRange) ) 

#define IBDA_FrequencyFilter_put_Bandwidth(This,ulBandwidth)	\
    ( (This)->lpVtbl -> put_Bandwidth(This,ulBandwidth) ) 

#define IBDA_FrequencyFilter_get_Bandwidth(This,pulBandwidth)	\
    ( (This)->lpVtbl -> get_Bandwidth(This,pulBandwidth) ) 

#define IBDA_FrequencyFilter_put_FrequencyMultiplier(This,ulMultiplier)	\
    ( (This)->lpVtbl -> put_FrequencyMultiplier(This,ulMultiplier) ) 

#define IBDA_FrequencyFilter_get_FrequencyMultiplier(This,pulMultiplier)	\
    ( (This)->lpVtbl -> get_FrequencyMultiplier(This,pulMultiplier) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_FrequencyFilter_INTERFACE_DEFINED__ */


#ifndef __IBDA_LNBInfo_INTERFACE_DEFINED__
#define __IBDA_LNBInfo_INTERFACE_DEFINED__

/* interface IBDA_LNBInfo */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_LNBInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("992CF102-49F9-4719-A664-C4F23E2408F4")
    IBDA_LNBInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE put_LocalOscilatorFrequencyLowBand( 
            /* [in] */ ULONG ulLOFLow) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_LocalOscilatorFrequencyLowBand( 
            /* [out][in] */ __RPC__inout ULONG *pulLOFLow) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_LocalOscilatorFrequencyHighBand( 
            /* [in] */ ULONG ulLOFHigh) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_LocalOscilatorFrequencyHighBand( 
            /* [out][in] */ __RPC__inout ULONG *pulLOFHigh) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_HighLowSwitchFrequency( 
            /* [in] */ ULONG ulSwitchFrequency) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_HighLowSwitchFrequency( 
            /* [out][in] */ __RPC__inout ULONG *pulSwitchFrequency) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_LNBInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_LNBInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_LNBInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_LNBInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *put_LocalOscilatorFrequencyLowBand )( 
            __RPC__in IBDA_LNBInfo * This,
            /* [in] */ ULONG ulLOFLow);
        
        HRESULT ( STDMETHODCALLTYPE *get_LocalOscilatorFrequencyLowBand )( 
            __RPC__in IBDA_LNBInfo * This,
            /* [out][in] */ __RPC__inout ULONG *pulLOFLow);
        
        HRESULT ( STDMETHODCALLTYPE *put_LocalOscilatorFrequencyHighBand )( 
            __RPC__in IBDA_LNBInfo * This,
            /* [in] */ ULONG ulLOFHigh);
        
        HRESULT ( STDMETHODCALLTYPE *get_LocalOscilatorFrequencyHighBand )( 
            __RPC__in IBDA_LNBInfo * This,
            /* [out][in] */ __RPC__inout ULONG *pulLOFHigh);
        
        HRESULT ( STDMETHODCALLTYPE *put_HighLowSwitchFrequency )( 
            __RPC__in IBDA_LNBInfo * This,
            /* [in] */ ULONG ulSwitchFrequency);
        
        HRESULT ( STDMETHODCALLTYPE *get_HighLowSwitchFrequency )( 
            __RPC__in IBDA_LNBInfo * This,
            /* [out][in] */ __RPC__inout ULONG *pulSwitchFrequency);
        
        END_INTERFACE
    } IBDA_LNBInfoVtbl;

    interface IBDA_LNBInfo
    {
        CONST_VTBL struct IBDA_LNBInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_LNBInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_LNBInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_LNBInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_LNBInfo_put_LocalOscilatorFrequencyLowBand(This,ulLOFLow)	\
    ( (This)->lpVtbl -> put_LocalOscilatorFrequencyLowBand(This,ulLOFLow) ) 

#define IBDA_LNBInfo_get_LocalOscilatorFrequencyLowBand(This,pulLOFLow)	\
    ( (This)->lpVtbl -> get_LocalOscilatorFrequencyLowBand(This,pulLOFLow) ) 

#define IBDA_LNBInfo_put_LocalOscilatorFrequencyHighBand(This,ulLOFHigh)	\
    ( (This)->lpVtbl -> put_LocalOscilatorFrequencyHighBand(This,ulLOFHigh) ) 

#define IBDA_LNBInfo_get_LocalOscilatorFrequencyHighBand(This,pulLOFHigh)	\
    ( (This)->lpVtbl -> get_LocalOscilatorFrequencyHighBand(This,pulLOFHigh) ) 

#define IBDA_LNBInfo_put_HighLowSwitchFrequency(This,ulSwitchFrequency)	\
    ( (This)->lpVtbl -> put_HighLowSwitchFrequency(This,ulSwitchFrequency) ) 

#define IBDA_LNBInfo_get_HighLowSwitchFrequency(This,pulSwitchFrequency)	\
    ( (This)->lpVtbl -> get_HighLowSwitchFrequency(This,pulSwitchFrequency) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_LNBInfo_INTERFACE_DEFINED__ */


#ifndef __IBDA_DiseqCommand_INTERFACE_DEFINED__
#define __IBDA_DiseqCommand_INTERFACE_DEFINED__

/* interface IBDA_DiseqCommand */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_DiseqCommand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F84E2AB0-3C6B-45e3-A0FC-8669D4B81F11")
    IBDA_DiseqCommand : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE put_EnableDiseqCommands( 
            /* [in] */ BOOLEAN bEnable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_DiseqLNBSource( 
            /* [in] */ ULONG ulLNBSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_DiseqUseToneBurst( 
            /* [in] */ BOOLEAN bUseToneBurst) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_DiseqRepeats( 
            /* [in] */ ULONG ulRepeats) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_DiseqSendCommand( 
            /* [in] */ ULONG ulRequestId,
            /* [in] */ ULONG ulcbCommandLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbCommandLen) BYTE *pbCommand) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_DiseqResponse( 
            /* [in] */ ULONG ulRequestId,
            /* [out][in] */ __RPC__inout ULONG *pulcbResponseLen,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(*pulcbResponseLen) BYTE pbResponse[  ]) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_DiseqCommandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_DiseqCommand * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_DiseqCommand * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_DiseqCommand * This);
        
        HRESULT ( STDMETHODCALLTYPE *put_EnableDiseqCommands )( 
            __RPC__in IBDA_DiseqCommand * This,
            /* [in] */ BOOLEAN bEnable);
        
        HRESULT ( STDMETHODCALLTYPE *put_DiseqLNBSource )( 
            __RPC__in IBDA_DiseqCommand * This,
            /* [in] */ ULONG ulLNBSource);
        
        HRESULT ( STDMETHODCALLTYPE *put_DiseqUseToneBurst )( 
            __RPC__in IBDA_DiseqCommand * This,
            /* [in] */ BOOLEAN bUseToneBurst);
        
        HRESULT ( STDMETHODCALLTYPE *put_DiseqRepeats )( 
            __RPC__in IBDA_DiseqCommand * This,
            /* [in] */ ULONG ulRepeats);
        
        HRESULT ( STDMETHODCALLTYPE *put_DiseqSendCommand )( 
            __RPC__in IBDA_DiseqCommand * This,
            /* [in] */ ULONG ulRequestId,
            /* [in] */ ULONG ulcbCommandLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbCommandLen) BYTE *pbCommand);
        
        HRESULT ( STDMETHODCALLTYPE *get_DiseqResponse )( 
            __RPC__in IBDA_DiseqCommand * This,
            /* [in] */ ULONG ulRequestId,
            /* [out][in] */ __RPC__inout ULONG *pulcbResponseLen,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(*pulcbResponseLen) BYTE pbResponse[  ]);
        
        END_INTERFACE
    } IBDA_DiseqCommandVtbl;

    interface IBDA_DiseqCommand
    {
        CONST_VTBL struct IBDA_DiseqCommandVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_DiseqCommand_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_DiseqCommand_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_DiseqCommand_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_DiseqCommand_put_EnableDiseqCommands(This,bEnable)	\
    ( (This)->lpVtbl -> put_EnableDiseqCommands(This,bEnable) ) 

#define IBDA_DiseqCommand_put_DiseqLNBSource(This,ulLNBSource)	\
    ( (This)->lpVtbl -> put_DiseqLNBSource(This,ulLNBSource) ) 

#define IBDA_DiseqCommand_put_DiseqUseToneBurst(This,bUseToneBurst)	\
    ( (This)->lpVtbl -> put_DiseqUseToneBurst(This,bUseToneBurst) ) 

#define IBDA_DiseqCommand_put_DiseqRepeats(This,ulRepeats)	\
    ( (This)->lpVtbl -> put_DiseqRepeats(This,ulRepeats) ) 

#define IBDA_DiseqCommand_put_DiseqSendCommand(This,ulRequestId,ulcbCommandLen,pbCommand)	\
    ( (This)->lpVtbl -> put_DiseqSendCommand(This,ulRequestId,ulcbCommandLen,pbCommand) ) 

#define IBDA_DiseqCommand_get_DiseqResponse(This,ulRequestId,pulcbResponseLen,pbResponse)	\
    ( (This)->lpVtbl -> get_DiseqResponse(This,ulRequestId,pulcbResponseLen,pbResponse) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_DiseqCommand_INTERFACE_DEFINED__ */


#ifndef __IBDA_AutoDemodulate_INTERFACE_DEFINED__
#define __IBDA_AutoDemodulate_INTERFACE_DEFINED__

/* interface IBDA_AutoDemodulate */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_AutoDemodulate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DDF15B12-BD25-11d2-9CA0-00C04F7971E0")
    IBDA_AutoDemodulate : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE put_AutoDemodulate( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_AutoDemodulateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_AutoDemodulate * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_AutoDemodulate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_AutoDemodulate * This);
        
        HRESULT ( STDMETHODCALLTYPE *put_AutoDemodulate )( 
            __RPC__in IBDA_AutoDemodulate * This);
        
        END_INTERFACE
    } IBDA_AutoDemodulateVtbl;

    interface IBDA_AutoDemodulate
    {
        CONST_VTBL struct IBDA_AutoDemodulateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_AutoDemodulate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_AutoDemodulate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_AutoDemodulate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_AutoDemodulate_put_AutoDemodulate(This)	\
    ( (This)->lpVtbl -> put_AutoDemodulate(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_AutoDemodulate_INTERFACE_DEFINED__ */


#ifndef __IBDA_AutoDemodulateEx_INTERFACE_DEFINED__
#define __IBDA_AutoDemodulateEx_INTERFACE_DEFINED__

/* interface IBDA_AutoDemodulateEx */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_AutoDemodulateEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("34518D13-1182-48e6-B28F-B24987787326")
    IBDA_AutoDemodulateEx : public IBDA_AutoDemodulate
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE get_SupportedDeviceNodeTypes( 
            /* [in] */ ULONG ulcDeviceNodeTypesMax,
            /* [out] */ __RPC__out ULONG *pulcDeviceNodeTypes,
            /* [out][in] */ __RPC__inout GUID *pguidDeviceNodeTypes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SupportedVideoFormats( 
            /* [out] */ __RPC__out ULONG *pulAMTunerModeType,
            /* [out] */ __RPC__out ULONG *pulAnalogVideoStandard) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_AuxInputCount( 
            /* [out][in] */ __RPC__inout ULONG *pulCompositeCount,
            /* [out][in] */ __RPC__inout ULONG *pulSvideoCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_AutoDemodulateExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_AutoDemodulateEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_AutoDemodulateEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_AutoDemodulateEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *put_AutoDemodulate )( 
            __RPC__in IBDA_AutoDemodulateEx * This);
        
        HRESULT ( STDMETHODCALLTYPE *get_SupportedDeviceNodeTypes )( 
            __RPC__in IBDA_AutoDemodulateEx * This,
            /* [in] */ ULONG ulcDeviceNodeTypesMax,
            /* [out] */ __RPC__out ULONG *pulcDeviceNodeTypes,
            /* [out][in] */ __RPC__inout GUID *pguidDeviceNodeTypes);
        
        HRESULT ( STDMETHODCALLTYPE *get_SupportedVideoFormats )( 
            __RPC__in IBDA_AutoDemodulateEx * This,
            /* [out] */ __RPC__out ULONG *pulAMTunerModeType,
            /* [out] */ __RPC__out ULONG *pulAnalogVideoStandard);
        
        HRESULT ( STDMETHODCALLTYPE *get_AuxInputCount )( 
            __RPC__in IBDA_AutoDemodulateEx * This,
            /* [out][in] */ __RPC__inout ULONG *pulCompositeCount,
            /* [out][in] */ __RPC__inout ULONG *pulSvideoCount);
        
        END_INTERFACE
    } IBDA_AutoDemodulateExVtbl;

    interface IBDA_AutoDemodulateEx
    {
        CONST_VTBL struct IBDA_AutoDemodulateExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_AutoDemodulateEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_AutoDemodulateEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_AutoDemodulateEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_AutoDemodulateEx_put_AutoDemodulate(This)	\
    ( (This)->lpVtbl -> put_AutoDemodulate(This) ) 


#define IBDA_AutoDemodulateEx_get_SupportedDeviceNodeTypes(This,ulcDeviceNodeTypesMax,pulcDeviceNodeTypes,pguidDeviceNodeTypes)	\
    ( (This)->lpVtbl -> get_SupportedDeviceNodeTypes(This,ulcDeviceNodeTypesMax,pulcDeviceNodeTypes,pguidDeviceNodeTypes) ) 

#define IBDA_AutoDemodulateEx_get_SupportedVideoFormats(This,pulAMTunerModeType,pulAnalogVideoStandard)	\
    ( (This)->lpVtbl -> get_SupportedVideoFormats(This,pulAMTunerModeType,pulAnalogVideoStandard) ) 

#define IBDA_AutoDemodulateEx_get_AuxInputCount(This,pulCompositeCount,pulSvideoCount)	\
    ( (This)->lpVtbl -> get_AuxInputCount(This,pulCompositeCount,pulSvideoCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_AutoDemodulateEx_INTERFACE_DEFINED__ */


#ifndef __IBDA_DigitalDemodulator_INTERFACE_DEFINED__
#define __IBDA_DigitalDemodulator_INTERFACE_DEFINED__

/* interface IBDA_DigitalDemodulator */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_DigitalDemodulator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EF30F379-985B-4d10-B640-A79D5E04E1E0")
    IBDA_DigitalDemodulator : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE put_ModulationType( 
            /* [in] */ __RPC__in ModulationType *pModulationType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_ModulationType( 
            /* [out][in] */ __RPC__inout ModulationType *pModulationType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_InnerFECMethod( 
            /* [in] */ __RPC__in FECMethod *pFECMethod) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_InnerFECMethod( 
            /* [out][in] */ __RPC__inout FECMethod *pFECMethod) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_InnerFECRate( 
            /* [in] */ __RPC__in BinaryConvolutionCodeRate *pFECRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_InnerFECRate( 
            /* [out][in] */ __RPC__inout BinaryConvolutionCodeRate *pFECRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_OuterFECMethod( 
            /* [in] */ __RPC__in FECMethod *pFECMethod) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_OuterFECMethod( 
            /* [out][in] */ __RPC__inout FECMethod *pFECMethod) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_OuterFECRate( 
            /* [in] */ __RPC__in BinaryConvolutionCodeRate *pFECRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_OuterFECRate( 
            /* [out][in] */ __RPC__inout BinaryConvolutionCodeRate *pFECRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_SymbolRate( 
            /* [in] */ __RPC__in ULONG *pSymbolRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SymbolRate( 
            /* [out][in] */ __RPC__inout ULONG *pSymbolRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_SpectralInversion( 
            /* [in] */ __RPC__in SpectralInversion *pSpectralInversion) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SpectralInversion( 
            /* [out][in] */ __RPC__inout SpectralInversion *pSpectralInversion) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_DigitalDemodulatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_DigitalDemodulator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_DigitalDemodulator * This);
        
        HRESULT ( STDMETHODCALLTYPE *put_ModulationType )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [in] */ __RPC__in ModulationType *pModulationType);
        
        HRESULT ( STDMETHODCALLTYPE *get_ModulationType )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [out][in] */ __RPC__inout ModulationType *pModulationType);
        
        HRESULT ( STDMETHODCALLTYPE *put_InnerFECMethod )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [in] */ __RPC__in FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *get_InnerFECMethod )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [out][in] */ __RPC__inout FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *put_InnerFECRate )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [in] */ __RPC__in BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *get_InnerFECRate )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [out][in] */ __RPC__inout BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *put_OuterFECMethod )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [in] */ __RPC__in FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *get_OuterFECMethod )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [out][in] */ __RPC__inout FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *put_OuterFECRate )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [in] */ __RPC__in BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *get_OuterFECRate )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [out][in] */ __RPC__inout BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *put_SymbolRate )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [in] */ __RPC__in ULONG *pSymbolRate);
        
        HRESULT ( STDMETHODCALLTYPE *get_SymbolRate )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [out][in] */ __RPC__inout ULONG *pSymbolRate);
        
        HRESULT ( STDMETHODCALLTYPE *put_SpectralInversion )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [in] */ __RPC__in SpectralInversion *pSpectralInversion);
        
        HRESULT ( STDMETHODCALLTYPE *get_SpectralInversion )( 
            __RPC__in IBDA_DigitalDemodulator * This,
            /* [out][in] */ __RPC__inout SpectralInversion *pSpectralInversion);
        
        END_INTERFACE
    } IBDA_DigitalDemodulatorVtbl;

    interface IBDA_DigitalDemodulator
    {
        CONST_VTBL struct IBDA_DigitalDemodulatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_DigitalDemodulator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_DigitalDemodulator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_DigitalDemodulator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_DigitalDemodulator_put_ModulationType(This,pModulationType)	\
    ( (This)->lpVtbl -> put_ModulationType(This,pModulationType) ) 

#define IBDA_DigitalDemodulator_get_ModulationType(This,pModulationType)	\
    ( (This)->lpVtbl -> get_ModulationType(This,pModulationType) ) 

#define IBDA_DigitalDemodulator_put_InnerFECMethod(This,pFECMethod)	\
    ( (This)->lpVtbl -> put_InnerFECMethod(This,pFECMethod) ) 

#define IBDA_DigitalDemodulator_get_InnerFECMethod(This,pFECMethod)	\
    ( (This)->lpVtbl -> get_InnerFECMethod(This,pFECMethod) ) 

#define IBDA_DigitalDemodulator_put_InnerFECRate(This,pFECRate)	\
    ( (This)->lpVtbl -> put_InnerFECRate(This,pFECRate) ) 

#define IBDA_DigitalDemodulator_get_InnerFECRate(This,pFECRate)	\
    ( (This)->lpVtbl -> get_InnerFECRate(This,pFECRate) ) 

#define IBDA_DigitalDemodulator_put_OuterFECMethod(This,pFECMethod)	\
    ( (This)->lpVtbl -> put_OuterFECMethod(This,pFECMethod) ) 

#define IBDA_DigitalDemodulator_get_OuterFECMethod(This,pFECMethod)	\
    ( (This)->lpVtbl -> get_OuterFECMethod(This,pFECMethod) ) 

#define IBDA_DigitalDemodulator_put_OuterFECRate(This,pFECRate)	\
    ( (This)->lpVtbl -> put_OuterFECRate(This,pFECRate) ) 

#define IBDA_DigitalDemodulator_get_OuterFECRate(This,pFECRate)	\
    ( (This)->lpVtbl -> get_OuterFECRate(This,pFECRate) ) 

#define IBDA_DigitalDemodulator_put_SymbolRate(This,pSymbolRate)	\
    ( (This)->lpVtbl -> put_SymbolRate(This,pSymbolRate) ) 

#define IBDA_DigitalDemodulator_get_SymbolRate(This,pSymbolRate)	\
    ( (This)->lpVtbl -> get_SymbolRate(This,pSymbolRate) ) 

#define IBDA_DigitalDemodulator_put_SpectralInversion(This,pSpectralInversion)	\
    ( (This)->lpVtbl -> put_SpectralInversion(This,pSpectralInversion) ) 

#define IBDA_DigitalDemodulator_get_SpectralInversion(This,pSpectralInversion)	\
    ( (This)->lpVtbl -> get_SpectralInversion(This,pSpectralInversion) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_DigitalDemodulator_INTERFACE_DEFINED__ */


#ifndef __IBDA_DigitalDemodulator2_INTERFACE_DEFINED__
#define __IBDA_DigitalDemodulator2_INTERFACE_DEFINED__

/* interface IBDA_DigitalDemodulator2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_DigitalDemodulator2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("525ED3EE-5CF3-4e1e-9A06-5368A84F9A6E")
    IBDA_DigitalDemodulator2 : public IBDA_DigitalDemodulator
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE put_GuardInterval( 
            /* [in] */ __RPC__in GuardInterval *pGuardInterval) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_GuardInterval( 
            /* [out][in] */ __RPC__inout GuardInterval *pGuardInterval) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_TransmissionMode( 
            /* [in] */ __RPC__in TransmissionMode *pTransmissionMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_TransmissionMode( 
            /* [out][in] */ __RPC__inout TransmissionMode *pTransmissionMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_RollOff( 
            /* [in] */ __RPC__in RollOff *pRollOff) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_RollOff( 
            /* [out][in] */ __RPC__inout RollOff *pRollOff) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_Pilot( 
            /* [in] */ __RPC__in Pilot *pPilot) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_Pilot( 
            /* [out][in] */ __RPC__inout Pilot *pPilot) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_DigitalDemodulator2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_DigitalDemodulator2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_DigitalDemodulator2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *put_ModulationType )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [in] */ __RPC__in ModulationType *pModulationType);
        
        HRESULT ( STDMETHODCALLTYPE *get_ModulationType )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [out][in] */ __RPC__inout ModulationType *pModulationType);
        
        HRESULT ( STDMETHODCALLTYPE *put_InnerFECMethod )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [in] */ __RPC__in FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *get_InnerFECMethod )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [out][in] */ __RPC__inout FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *put_InnerFECRate )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [in] */ __RPC__in BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *get_InnerFECRate )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [out][in] */ __RPC__inout BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *put_OuterFECMethod )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [in] */ __RPC__in FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *get_OuterFECMethod )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [out][in] */ __RPC__inout FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *put_OuterFECRate )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [in] */ __RPC__in BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *get_OuterFECRate )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [out][in] */ __RPC__inout BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *put_SymbolRate )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [in] */ __RPC__in ULONG *pSymbolRate);
        
        HRESULT ( STDMETHODCALLTYPE *get_SymbolRate )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [out][in] */ __RPC__inout ULONG *pSymbolRate);
        
        HRESULT ( STDMETHODCALLTYPE *put_SpectralInversion )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [in] */ __RPC__in SpectralInversion *pSpectralInversion);
        
        HRESULT ( STDMETHODCALLTYPE *get_SpectralInversion )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [out][in] */ __RPC__inout SpectralInversion *pSpectralInversion);
        
        HRESULT ( STDMETHODCALLTYPE *put_GuardInterval )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [in] */ __RPC__in GuardInterval *pGuardInterval);
        
        HRESULT ( STDMETHODCALLTYPE *get_GuardInterval )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [out][in] */ __RPC__inout GuardInterval *pGuardInterval);
        
        HRESULT ( STDMETHODCALLTYPE *put_TransmissionMode )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [in] */ __RPC__in TransmissionMode *pTransmissionMode);
        
        HRESULT ( STDMETHODCALLTYPE *get_TransmissionMode )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [out][in] */ __RPC__inout TransmissionMode *pTransmissionMode);
        
        HRESULT ( STDMETHODCALLTYPE *put_RollOff )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [in] */ __RPC__in RollOff *pRollOff);
        
        HRESULT ( STDMETHODCALLTYPE *get_RollOff )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [out][in] */ __RPC__inout RollOff *pRollOff);
        
        HRESULT ( STDMETHODCALLTYPE *put_Pilot )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [in] */ __RPC__in Pilot *pPilot);
        
        HRESULT ( STDMETHODCALLTYPE *get_Pilot )( 
            __RPC__in IBDA_DigitalDemodulator2 * This,
            /* [out][in] */ __RPC__inout Pilot *pPilot);
        
        END_INTERFACE
    } IBDA_DigitalDemodulator2Vtbl;

    interface IBDA_DigitalDemodulator2
    {
        CONST_VTBL struct IBDA_DigitalDemodulator2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_DigitalDemodulator2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_DigitalDemodulator2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_DigitalDemodulator2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_DigitalDemodulator2_put_ModulationType(This,pModulationType)	\
    ( (This)->lpVtbl -> put_ModulationType(This,pModulationType) ) 

#define IBDA_DigitalDemodulator2_get_ModulationType(This,pModulationType)	\
    ( (This)->lpVtbl -> get_ModulationType(This,pModulationType) ) 

#define IBDA_DigitalDemodulator2_put_InnerFECMethod(This,pFECMethod)	\
    ( (This)->lpVtbl -> put_InnerFECMethod(This,pFECMethod) ) 

#define IBDA_DigitalDemodulator2_get_InnerFECMethod(This,pFECMethod)	\
    ( (This)->lpVtbl -> get_InnerFECMethod(This,pFECMethod) ) 

#define IBDA_DigitalDemodulator2_put_InnerFECRate(This,pFECRate)	\
    ( (This)->lpVtbl -> put_InnerFECRate(This,pFECRate) ) 

#define IBDA_DigitalDemodulator2_get_InnerFECRate(This,pFECRate)	\
    ( (This)->lpVtbl -> get_InnerFECRate(This,pFECRate) ) 

#define IBDA_DigitalDemodulator2_put_OuterFECMethod(This,pFECMethod)	\
    ( (This)->lpVtbl -> put_OuterFECMethod(This,pFECMethod) ) 

#define IBDA_DigitalDemodulator2_get_OuterFECMethod(This,pFECMethod)	\
    ( (This)->lpVtbl -> get_OuterFECMethod(This,pFECMethod) ) 

#define IBDA_DigitalDemodulator2_put_OuterFECRate(This,pFECRate)	\
    ( (This)->lpVtbl -> put_OuterFECRate(This,pFECRate) ) 

#define IBDA_DigitalDemodulator2_get_OuterFECRate(This,pFECRate)	\
    ( (This)->lpVtbl -> get_OuterFECRate(This,pFECRate) ) 

#define IBDA_DigitalDemodulator2_put_SymbolRate(This,pSymbolRate)	\
    ( (This)->lpVtbl -> put_SymbolRate(This,pSymbolRate) ) 

#define IBDA_DigitalDemodulator2_get_SymbolRate(This,pSymbolRate)	\
    ( (This)->lpVtbl -> get_SymbolRate(This,pSymbolRate) ) 

#define IBDA_DigitalDemodulator2_put_SpectralInversion(This,pSpectralInversion)	\
    ( (This)->lpVtbl -> put_SpectralInversion(This,pSpectralInversion) ) 

#define IBDA_DigitalDemodulator2_get_SpectralInversion(This,pSpectralInversion)	\
    ( (This)->lpVtbl -> get_SpectralInversion(This,pSpectralInversion) ) 


#define IBDA_DigitalDemodulator2_put_GuardInterval(This,pGuardInterval)	\
    ( (This)->lpVtbl -> put_GuardInterval(This,pGuardInterval) ) 

#define IBDA_DigitalDemodulator2_get_GuardInterval(This,pGuardInterval)	\
    ( (This)->lpVtbl -> get_GuardInterval(This,pGuardInterval) ) 

#define IBDA_DigitalDemodulator2_put_TransmissionMode(This,pTransmissionMode)	\
    ( (This)->lpVtbl -> put_TransmissionMode(This,pTransmissionMode) ) 

#define IBDA_DigitalDemodulator2_get_TransmissionMode(This,pTransmissionMode)	\
    ( (This)->lpVtbl -> get_TransmissionMode(This,pTransmissionMode) ) 

#define IBDA_DigitalDemodulator2_put_RollOff(This,pRollOff)	\
    ( (This)->lpVtbl -> put_RollOff(This,pRollOff) ) 

#define IBDA_DigitalDemodulator2_get_RollOff(This,pRollOff)	\
    ( (This)->lpVtbl -> get_RollOff(This,pRollOff) ) 

#define IBDA_DigitalDemodulator2_put_Pilot(This,pPilot)	\
    ( (This)->lpVtbl -> put_Pilot(This,pPilot) ) 

#define IBDA_DigitalDemodulator2_get_Pilot(This,pPilot)	\
    ( (This)->lpVtbl -> get_Pilot(This,pPilot) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_DigitalDemodulator2_INTERFACE_DEFINED__ */


#ifndef __IBDA_DigitalDemodulator3_INTERFACE_DEFINED__
#define __IBDA_DigitalDemodulator3_INTERFACE_DEFINED__

/* interface IBDA_DigitalDemodulator3 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_DigitalDemodulator3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("13F19604-7D32-4359-93A2-A05205D90AC9")
    IBDA_DigitalDemodulator3 : public IBDA_DigitalDemodulator2
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE put_SignalTimeouts( 
            /* [in] */ __RPC__in BDA_SIGNAL_TIMEOUTS *pSignalTimeouts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_SignalTimeouts( 
            /* [out][in] */ __RPC__inout BDA_SIGNAL_TIMEOUTS *pSignalTimeouts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE put_PLPNumber( 
            /* [in] */ __RPC__in ULONG *pPLPNumber) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_PLPNumber( 
            /* [out][in] */ __RPC__inout ULONG *pPLPNumber) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_DigitalDemodulator3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_DigitalDemodulator3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_DigitalDemodulator3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *put_ModulationType )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [in] */ __RPC__in ModulationType *pModulationType);
        
        HRESULT ( STDMETHODCALLTYPE *get_ModulationType )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [out][in] */ __RPC__inout ModulationType *pModulationType);
        
        HRESULT ( STDMETHODCALLTYPE *put_InnerFECMethod )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [in] */ __RPC__in FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *get_InnerFECMethod )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [out][in] */ __RPC__inout FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *put_InnerFECRate )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [in] */ __RPC__in BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *get_InnerFECRate )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [out][in] */ __RPC__inout BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *put_OuterFECMethod )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [in] */ __RPC__in FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *get_OuterFECMethod )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [out][in] */ __RPC__inout FECMethod *pFECMethod);
        
        HRESULT ( STDMETHODCALLTYPE *put_OuterFECRate )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [in] */ __RPC__in BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *get_OuterFECRate )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [out][in] */ __RPC__inout BinaryConvolutionCodeRate *pFECRate);
        
        HRESULT ( STDMETHODCALLTYPE *put_SymbolRate )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [in] */ __RPC__in ULONG *pSymbolRate);
        
        HRESULT ( STDMETHODCALLTYPE *get_SymbolRate )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [out][in] */ __RPC__inout ULONG *pSymbolRate);
        
        HRESULT ( STDMETHODCALLTYPE *put_SpectralInversion )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [in] */ __RPC__in SpectralInversion *pSpectralInversion);
        
        HRESULT ( STDMETHODCALLTYPE *get_SpectralInversion )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [out][in] */ __RPC__inout SpectralInversion *pSpectralInversion);
        
        HRESULT ( STDMETHODCALLTYPE *put_GuardInterval )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [in] */ __RPC__in GuardInterval *pGuardInterval);
        
        HRESULT ( STDMETHODCALLTYPE *get_GuardInterval )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [out][in] */ __RPC__inout GuardInterval *pGuardInterval);
        
        HRESULT ( STDMETHODCALLTYPE *put_TransmissionMode )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [in] */ __RPC__in TransmissionMode *pTransmissionMode);
        
        HRESULT ( STDMETHODCALLTYPE *get_TransmissionMode )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [out][in] */ __RPC__inout TransmissionMode *pTransmissionMode);
        
        HRESULT ( STDMETHODCALLTYPE *put_RollOff )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [in] */ __RPC__in RollOff *pRollOff);
        
        HRESULT ( STDMETHODCALLTYPE *get_RollOff )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [out][in] */ __RPC__inout RollOff *pRollOff);
        
        HRESULT ( STDMETHODCALLTYPE *put_Pilot )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [in] */ __RPC__in Pilot *pPilot);
        
        HRESULT ( STDMETHODCALLTYPE *get_Pilot )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [out][in] */ __RPC__inout Pilot *pPilot);
        
        HRESULT ( STDMETHODCALLTYPE *put_SignalTimeouts )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [in] */ __RPC__in BDA_SIGNAL_TIMEOUTS *pSignalTimeouts);
        
        HRESULT ( STDMETHODCALLTYPE *get_SignalTimeouts )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [out][in] */ __RPC__inout BDA_SIGNAL_TIMEOUTS *pSignalTimeouts);
        
        HRESULT ( STDMETHODCALLTYPE *put_PLPNumber )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [in] */ __RPC__in ULONG *pPLPNumber);
        
        HRESULT ( STDMETHODCALLTYPE *get_PLPNumber )( 
            __RPC__in IBDA_DigitalDemodulator3 * This,
            /* [out][in] */ __RPC__inout ULONG *pPLPNumber);
        
        END_INTERFACE
    } IBDA_DigitalDemodulator3Vtbl;

    interface IBDA_DigitalDemodulator3
    {
        CONST_VTBL struct IBDA_DigitalDemodulator3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_DigitalDemodulator3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_DigitalDemodulator3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_DigitalDemodulator3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_DigitalDemodulator3_put_ModulationType(This,pModulationType)	\
    ( (This)->lpVtbl -> put_ModulationType(This,pModulationType) ) 

#define IBDA_DigitalDemodulator3_get_ModulationType(This,pModulationType)	\
    ( (This)->lpVtbl -> get_ModulationType(This,pModulationType) ) 

#define IBDA_DigitalDemodulator3_put_InnerFECMethod(This,pFECMethod)	\
    ( (This)->lpVtbl -> put_InnerFECMethod(This,pFECMethod) ) 

#define IBDA_DigitalDemodulator3_get_InnerFECMethod(This,pFECMethod)	\
    ( (This)->lpVtbl -> get_InnerFECMethod(This,pFECMethod) ) 

#define IBDA_DigitalDemodulator3_put_InnerFECRate(This,pFECRate)	\
    ( (This)->lpVtbl -> put_InnerFECRate(This,pFECRate) ) 

#define IBDA_DigitalDemodulator3_get_InnerFECRate(This,pFECRate)	\
    ( (This)->lpVtbl -> get_InnerFECRate(This,pFECRate) ) 

#define IBDA_DigitalDemodulator3_put_OuterFECMethod(This,pFECMethod)	\
    ( (This)->lpVtbl -> put_OuterFECMethod(This,pFECMethod) ) 

#define IBDA_DigitalDemodulator3_get_OuterFECMethod(This,pFECMethod)	\
    ( (This)->lpVtbl -> get_OuterFECMethod(This,pFECMethod) ) 

#define IBDA_DigitalDemodulator3_put_OuterFECRate(This,pFECRate)	\
    ( (This)->lpVtbl -> put_OuterFECRate(This,pFECRate) ) 

#define IBDA_DigitalDemodulator3_get_OuterFECRate(This,pFECRate)	\
    ( (This)->lpVtbl -> get_OuterFECRate(This,pFECRate) ) 

#define IBDA_DigitalDemodulator3_put_SymbolRate(This,pSymbolRate)	\
    ( (This)->lpVtbl -> put_SymbolRate(This,pSymbolRate) ) 

#define IBDA_DigitalDemodulator3_get_SymbolRate(This,pSymbolRate)	\
    ( (This)->lpVtbl -> get_SymbolRate(This,pSymbolRate) ) 

#define IBDA_DigitalDemodulator3_put_SpectralInversion(This,pSpectralInversion)	\
    ( (This)->lpVtbl -> put_SpectralInversion(This,pSpectralInversion) ) 

#define IBDA_DigitalDemodulator3_get_SpectralInversion(This,pSpectralInversion)	\
    ( (This)->lpVtbl -> get_SpectralInversion(This,pSpectralInversion) ) 


#define IBDA_DigitalDemodulator3_put_GuardInterval(This,pGuardInterval)	\
    ( (This)->lpVtbl -> put_GuardInterval(This,pGuardInterval) ) 

#define IBDA_DigitalDemodulator3_get_GuardInterval(This,pGuardInterval)	\
    ( (This)->lpVtbl -> get_GuardInterval(This,pGuardInterval) ) 

#define IBDA_DigitalDemodulator3_put_TransmissionMode(This,pTransmissionMode)	\
    ( (This)->lpVtbl -> put_TransmissionMode(This,pTransmissionMode) ) 

#define IBDA_DigitalDemodulator3_get_TransmissionMode(This,pTransmissionMode)	\
    ( (This)->lpVtbl -> get_TransmissionMode(This,pTransmissionMode) ) 

#define IBDA_DigitalDemodulator3_put_RollOff(This,pRollOff)	\
    ( (This)->lpVtbl -> put_RollOff(This,pRollOff) ) 

#define IBDA_DigitalDemodulator3_get_RollOff(This,pRollOff)	\
    ( (This)->lpVtbl -> get_RollOff(This,pRollOff) ) 

#define IBDA_DigitalDemodulator3_put_Pilot(This,pPilot)	\
    ( (This)->lpVtbl -> put_Pilot(This,pPilot) ) 

#define IBDA_DigitalDemodulator3_get_Pilot(This,pPilot)	\
    ( (This)->lpVtbl -> get_Pilot(This,pPilot) ) 


#define IBDA_DigitalDemodulator3_put_SignalTimeouts(This,pSignalTimeouts)	\
    ( (This)->lpVtbl -> put_SignalTimeouts(This,pSignalTimeouts) ) 

#define IBDA_DigitalDemodulator3_get_SignalTimeouts(This,pSignalTimeouts)	\
    ( (This)->lpVtbl -> get_SignalTimeouts(This,pSignalTimeouts) ) 

#define IBDA_DigitalDemodulator3_put_PLPNumber(This,pPLPNumber)	\
    ( (This)->lpVtbl -> put_PLPNumber(This,pPLPNumber) ) 

#define IBDA_DigitalDemodulator3_get_PLPNumber(This,pPLPNumber)	\
    ( (This)->lpVtbl -> get_PLPNumber(This,pPLPNumber) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_DigitalDemodulator3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0019 */
/* [local] */ 

typedef /* [public] */ 
enum __MIDL___MIDL_itf_bdaiface_0000_0019_0001
    {	KSPROPERTY_IPSINK_MULTICASTLIST	= 0,
	KSPROPERTY_IPSINK_ADAPTER_DESCRIPTION	= ( KSPROPERTY_IPSINK_MULTICASTLIST + 1 ) ,
	KSPROPERTY_IPSINK_ADAPTER_ADDRESS	= ( KSPROPERTY_IPSINK_ADAPTER_DESCRIPTION + 1 ) 
    } 	KSPROPERTY_IPSINK;



extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0019_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0019_v0_0_s_ifspec;

#ifndef __ICCSubStreamFiltering_INTERFACE_DEFINED__
#define __ICCSubStreamFiltering_INTERFACE_DEFINED__

/* interface ICCSubStreamFiltering */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_ICCSubStreamFiltering;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4B2BD7EA-8347-467b-8DBF-62F784929CC3")
    ICCSubStreamFiltering : public IUnknown
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SubstreamTypes( 
            /* [retval][out] */ __RPC__out long *pTypes) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_SubstreamTypes( 
            /* [in] */ long Types) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICCSubStreamFilteringVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICCSubStreamFiltering * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICCSubStreamFiltering * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICCSubStreamFiltering * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SubstreamTypes )( 
            __RPC__in ICCSubStreamFiltering * This,
            /* [retval][out] */ __RPC__out long *pTypes);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SubstreamTypes )( 
            __RPC__in ICCSubStreamFiltering * This,
            /* [in] */ long Types);
        
        END_INTERFACE
    } ICCSubStreamFilteringVtbl;

    interface ICCSubStreamFiltering
    {
        CONST_VTBL struct ICCSubStreamFilteringVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICCSubStreamFiltering_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICCSubStreamFiltering_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICCSubStreamFiltering_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICCSubStreamFiltering_get_SubstreamTypes(This,pTypes)	\
    ( (This)->lpVtbl -> get_SubstreamTypes(This,pTypes) ) 

#define ICCSubStreamFiltering_put_SubstreamTypes(This,Types)	\
    ( (This)->lpVtbl -> put_SubstreamTypes(This,Types) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICCSubStreamFiltering_INTERFACE_DEFINED__ */


#ifndef __IBDA_IPSinkControl_INTERFACE_DEFINED__
#define __IBDA_IPSinkControl_INTERFACE_DEFINED__

/* interface IBDA_IPSinkControl */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_IPSinkControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3F4DC8E2-4050-11d3-8F4B-00C04F7971E2")
    IBDA_IPSinkControl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMulticastList( 
            /* [out][in] */ __RPC__inout unsigned long *pulcbSize,
            /* [out][in] */ __RPC__deref_inout_opt BYTE **pbBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAdapterIPAddress( 
            /* [out][in] */ __RPC__inout unsigned long *pulcbSize,
            /* [out][in] */ __RPC__deref_inout_opt BYTE **pbBuffer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_IPSinkControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_IPSinkControl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_IPSinkControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_IPSinkControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMulticastList )( 
            __RPC__in IBDA_IPSinkControl * This,
            /* [out][in] */ __RPC__inout unsigned long *pulcbSize,
            /* [out][in] */ __RPC__deref_inout_opt BYTE **pbBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *GetAdapterIPAddress )( 
            __RPC__in IBDA_IPSinkControl * This,
            /* [out][in] */ __RPC__inout unsigned long *pulcbSize,
            /* [out][in] */ __RPC__deref_inout_opt BYTE **pbBuffer);
        
        END_INTERFACE
    } IBDA_IPSinkControlVtbl;

    interface IBDA_IPSinkControl
    {
        CONST_VTBL struct IBDA_IPSinkControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_IPSinkControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_IPSinkControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_IPSinkControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_IPSinkControl_GetMulticastList(This,pulcbSize,pbBuffer)	\
    ( (This)->lpVtbl -> GetMulticastList(This,pulcbSize,pbBuffer) ) 

#define IBDA_IPSinkControl_GetAdapterIPAddress(This,pulcbSize,pbBuffer)	\
    ( (This)->lpVtbl -> GetAdapterIPAddress(This,pulcbSize,pbBuffer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_IPSinkControl_INTERFACE_DEFINED__ */


#ifndef __IBDA_IPSinkInfo_INTERFACE_DEFINED__
#define __IBDA_IPSinkInfo_INTERFACE_DEFINED__

/* interface IBDA_IPSinkInfo */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IBDA_IPSinkInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A750108F-492E-4d51-95F7-649B23FF7AD7")
    IBDA_IPSinkInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE get_MulticastList( 
            /* [out][in] */ __RPC__inout ULONG *pulcbAddresses,
            /* [size_is][out] */ __RPC__out_ecount_full(*pulcbAddresses) BYTE **ppbAddressList) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_AdapterIPAddress( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE get_AdapterDescription( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrBuffer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_IPSinkInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_IPSinkInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_IPSinkInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_IPSinkInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *get_MulticastList )( 
            __RPC__in IBDA_IPSinkInfo * This,
            /* [out][in] */ __RPC__inout ULONG *pulcbAddresses,
            /* [size_is][out] */ __RPC__out_ecount_full(*pulcbAddresses) BYTE **ppbAddressList);
        
        HRESULT ( STDMETHODCALLTYPE *get_AdapterIPAddress )( 
            __RPC__in IBDA_IPSinkInfo * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *get_AdapterDescription )( 
            __RPC__in IBDA_IPSinkInfo * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrBuffer);
        
        END_INTERFACE
    } IBDA_IPSinkInfoVtbl;

    interface IBDA_IPSinkInfo
    {
        CONST_VTBL struct IBDA_IPSinkInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_IPSinkInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_IPSinkInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_IPSinkInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_IPSinkInfo_get_MulticastList(This,pulcbAddresses,ppbAddressList)	\
    ( (This)->lpVtbl -> get_MulticastList(This,pulcbAddresses,ppbAddressList) ) 

#define IBDA_IPSinkInfo_get_AdapterIPAddress(This,pbstrBuffer)	\
    ( (This)->lpVtbl -> get_AdapterIPAddress(This,pbstrBuffer) ) 

#define IBDA_IPSinkInfo_get_AdapterDescription(This,pbstrBuffer)	\
    ( (This)->lpVtbl -> get_AdapterDescription(This,pbstrBuffer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_IPSinkInfo_INTERFACE_DEFINED__ */


#ifndef __IEnumPIDMap_INTERFACE_DEFINED__
#define __IEnumPIDMap_INTERFACE_DEFINED__

/* interface IEnumPIDMap */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IEnumPIDMap;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("afb6c2a2-2c41-11d3-8a60-0000f81e0e4a")
    IEnumPIDMap : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG cRequest,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(cRequest) PID_MAP *pPIDMap,
            /* [out] */ __RPC__out ULONG *pcReceived) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG cRecords) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IEnumPIDMap **ppIEnumPIDMap) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumPIDMapVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IEnumPIDMap * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IEnumPIDMap * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IEnumPIDMap * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            __RPC__in IEnumPIDMap * This,
            /* [in] */ ULONG cRequest,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(cRequest) PID_MAP *pPIDMap,
            /* [out] */ __RPC__out ULONG *pcReceived);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            __RPC__in IEnumPIDMap * This,
            /* [in] */ ULONG cRecords);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in IEnumPIDMap * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            __RPC__in IEnumPIDMap * This,
            /* [out] */ __RPC__deref_out_opt IEnumPIDMap **ppIEnumPIDMap);
        
        END_INTERFACE
    } IEnumPIDMapVtbl;

    interface IEnumPIDMap
    {
        CONST_VTBL struct IEnumPIDMapVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumPIDMap_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumPIDMap_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumPIDMap_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumPIDMap_Next(This,cRequest,pPIDMap,pcReceived)	\
    ( (This)->lpVtbl -> Next(This,cRequest,pPIDMap,pcReceived) ) 

#define IEnumPIDMap_Skip(This,cRecords)	\
    ( (This)->lpVtbl -> Skip(This,cRecords) ) 

#define IEnumPIDMap_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumPIDMap_Clone(This,ppIEnumPIDMap)	\
    ( (This)->lpVtbl -> Clone(This,ppIEnumPIDMap) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumPIDMap_INTERFACE_DEFINED__ */


#ifndef __IMPEG2PIDMap_INTERFACE_DEFINED__
#define __IMPEG2PIDMap_INTERFACE_DEFINED__

/* interface IMPEG2PIDMap */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IMPEG2PIDMap;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("afb6c2a1-2c41-11d3-8a60-0000f81e0e4a")
    IMPEG2PIDMap : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MapPID( 
            /* [in] */ ULONG culPID,
            /* [in] */ __RPC__in ULONG *pulPID,
            /* [in] */ MEDIA_SAMPLE_CONTENT MediaSampleContent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnmapPID( 
            /* [in] */ ULONG culPID,
            /* [in] */ __RPC__in ULONG *pulPID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumPIDMap( 
            /* [out] */ __RPC__deref_out_opt IEnumPIDMap **pIEnumPIDMap) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMPEG2PIDMapVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMPEG2PIDMap * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMPEG2PIDMap * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMPEG2PIDMap * This);
        
        HRESULT ( STDMETHODCALLTYPE *MapPID )( 
            __RPC__in IMPEG2PIDMap * This,
            /* [in] */ ULONG culPID,
            /* [in] */ __RPC__in ULONG *pulPID,
            /* [in] */ MEDIA_SAMPLE_CONTENT MediaSampleContent);
        
        HRESULT ( STDMETHODCALLTYPE *UnmapPID )( 
            __RPC__in IMPEG2PIDMap * This,
            /* [in] */ ULONG culPID,
            /* [in] */ __RPC__in ULONG *pulPID);
        
        HRESULT ( STDMETHODCALLTYPE *EnumPIDMap )( 
            __RPC__in IMPEG2PIDMap * This,
            /* [out] */ __RPC__deref_out_opt IEnumPIDMap **pIEnumPIDMap);
        
        END_INTERFACE
    } IMPEG2PIDMapVtbl;

    interface IMPEG2PIDMap
    {
        CONST_VTBL struct IMPEG2PIDMapVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMPEG2PIDMap_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMPEG2PIDMap_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMPEG2PIDMap_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMPEG2PIDMap_MapPID(This,culPID,pulPID,MediaSampleContent)	\
    ( (This)->lpVtbl -> MapPID(This,culPID,pulPID,MediaSampleContent) ) 

#define IMPEG2PIDMap_UnmapPID(This,culPID,pulPID)	\
    ( (This)->lpVtbl -> UnmapPID(This,culPID,pulPID) ) 

#define IMPEG2PIDMap_EnumPIDMap(This,pIEnumPIDMap)	\
    ( (This)->lpVtbl -> EnumPIDMap(This,pIEnumPIDMap) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMPEG2PIDMap_INTERFACE_DEFINED__ */


#ifndef __IFrequencyMap_INTERFACE_DEFINED__
#define __IFrequencyMap_INTERFACE_DEFINED__

/* interface IFrequencyMap */
/* [restricted][hidden][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IFrequencyMap;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("06FB45C1-693C-4ea7-B79F-7A6A54D8DEF2")
    IFrequencyMap : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE get_FrequencyMapping( 
            /* [out] */ __RPC__out ULONG *ulCount,
            /* [size_is][size_is][out] */ __RPC__out_ecount_full(1) ULONG **ppulList) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE put_FrequencyMapping( 
            /* [in] */ ULONG ulCount,
            /* [size_is][in] */ __RPC__in_ecount_full(ulCount) ULONG pList[  ]) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE get_CountryCode( 
            /* [out] */ __RPC__out ULONG *pulCountryCode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE put_CountryCode( 
            /* [in] */ ULONG ulCountryCode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE get_DefaultFrequencyMapping( 
            /* [in] */ ULONG ulCountryCode,
            /* [out] */ __RPC__out ULONG *pulCount,
            /* [size_is][size_is][out] */ __RPC__out_ecount_full(1) ULONG **ppulList) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE get_CountryCodeList( 
            /* [out] */ __RPC__out ULONG *pulCount,
            /* [size_is][size_is][out] */ __RPC__out_ecount_full(1) ULONG **ppulList) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFrequencyMapVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IFrequencyMap * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IFrequencyMap * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IFrequencyMap * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *get_FrequencyMapping )( 
            __RPC__in IFrequencyMap * This,
            /* [out] */ __RPC__out ULONG *ulCount,
            /* [size_is][size_is][out] */ __RPC__out_ecount_full(1) ULONG **ppulList);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *put_FrequencyMapping )( 
            __RPC__in IFrequencyMap * This,
            /* [in] */ ULONG ulCount,
            /* [size_is][in] */ __RPC__in_ecount_full(ulCount) ULONG pList[  ]);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *get_CountryCode )( 
            __RPC__in IFrequencyMap * This,
            /* [out] */ __RPC__out ULONG *pulCountryCode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *put_CountryCode )( 
            __RPC__in IFrequencyMap * This,
            /* [in] */ ULONG ulCountryCode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultFrequencyMapping )( 
            __RPC__in IFrequencyMap * This,
            /* [in] */ ULONG ulCountryCode,
            /* [out] */ __RPC__out ULONG *pulCount,
            /* [size_is][size_is][out] */ __RPC__out_ecount_full(1) ULONG **ppulList);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *get_CountryCodeList )( 
            __RPC__in IFrequencyMap * This,
            /* [out] */ __RPC__out ULONG *pulCount,
            /* [size_is][size_is][out] */ __RPC__out_ecount_full(1) ULONG **ppulList);
        
        END_INTERFACE
    } IFrequencyMapVtbl;

    interface IFrequencyMap
    {
        CONST_VTBL struct IFrequencyMapVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFrequencyMap_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IFrequencyMap_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IFrequencyMap_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IFrequencyMap_get_FrequencyMapping(This,ulCount,ppulList)	\
    ( (This)->lpVtbl -> get_FrequencyMapping(This,ulCount,ppulList) ) 

#define IFrequencyMap_put_FrequencyMapping(This,ulCount,pList)	\
    ( (This)->lpVtbl -> put_FrequencyMapping(This,ulCount,pList) ) 

#define IFrequencyMap_get_CountryCode(This,pulCountryCode)	\
    ( (This)->lpVtbl -> get_CountryCode(This,pulCountryCode) ) 

#define IFrequencyMap_put_CountryCode(This,ulCountryCode)	\
    ( (This)->lpVtbl -> put_CountryCode(This,ulCountryCode) ) 

#define IFrequencyMap_get_DefaultFrequencyMapping(This,ulCountryCode,pulCount,ppulList)	\
    ( (This)->lpVtbl -> get_DefaultFrequencyMapping(This,ulCountryCode,pulCount,ppulList) ) 

#define IFrequencyMap_get_CountryCodeList(This,pulCount,ppulList)	\
    ( (This)->lpVtbl -> get_CountryCodeList(This,pulCount,ppulList) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IFrequencyMap_INTERFACE_DEFINED__ */


#ifndef __IBDA_EasMessage_INTERFACE_DEFINED__
#define __IBDA_EasMessage_INTERFACE_DEFINED__

/* interface IBDA_EasMessage */
/* [restricted][hidden][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_EasMessage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D806973D-3EBE-46de-8FBB-6358FE784208")
    IBDA_EasMessage : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE get_EasMessage( 
            /* [in] */ ULONG ulEventID,
            /* [out][in] */ __RPC__deref_inout_opt IUnknown **ppEASObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_EasMessageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_EasMessage * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_EasMessage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_EasMessage * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *get_EasMessage )( 
            __RPC__in IBDA_EasMessage * This,
            /* [in] */ ULONG ulEventID,
            /* [out][in] */ __RPC__deref_inout_opt IUnknown **ppEASObject);
        
        END_INTERFACE
    } IBDA_EasMessageVtbl;

    interface IBDA_EasMessage
    {
        CONST_VTBL struct IBDA_EasMessageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_EasMessage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_EasMessage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_EasMessage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_EasMessage_get_EasMessage(This,ulEventID,ppEASObject)	\
    ( (This)->lpVtbl -> get_EasMessage(This,ulEventID,ppEASObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_EasMessage_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0026 */
/* [local] */ 

#define SID_BDA_EasMessage __uuidof(IBDA_EasMessage)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0026_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0026_v0_0_s_ifspec;

#ifndef __IBDA_TransportStreamInfo_INTERFACE_DEFINED__
#define __IBDA_TransportStreamInfo_INTERFACE_DEFINED__

/* interface IBDA_TransportStreamInfo */
/* [restricted][hidden][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_TransportStreamInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8E882535-5F86-47AB-86CF-C281A72A0549")
    IBDA_TransportStreamInfo : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE get_PatTableTickCount( 
            /* [out] */ __RPC__out ULONG *pPatTickCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_TransportStreamInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_TransportStreamInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_TransportStreamInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_TransportStreamInfo * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *get_PatTableTickCount )( 
            __RPC__in IBDA_TransportStreamInfo * This,
            /* [out] */ __RPC__out ULONG *pPatTickCount);
        
        END_INTERFACE
    } IBDA_TransportStreamInfoVtbl;

    interface IBDA_TransportStreamInfo
    {
        CONST_VTBL struct IBDA_TransportStreamInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_TransportStreamInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_TransportStreamInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_TransportStreamInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_TransportStreamInfo_get_PatTableTickCount(This,pPatTickCount)	\
    ( (This)->lpVtbl -> get_PatTableTickCount(This,pPatTickCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_TransportStreamInfo_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0027 */
/* [local] */ 

#define SID_BDA_TransportStreamInfo __uuidof(IBDA_TransportStreamInfo)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0027_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0027_v0_0_s_ifspec;

#ifndef __IBDA_ConditionalAccess_INTERFACE_DEFINED__
#define __IBDA_ConditionalAccess_INTERFACE_DEFINED__

/* interface IBDA_ConditionalAccess */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_ConditionalAccess;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD51F1E0-7BE9-4123-8482-A2A796C0A6B0")
    IBDA_ConditionalAccess : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE get_SmartCardStatus( 
            /* [out] */ __RPC__out SmartCardStatusType *pCardStatus,
            /* [out] */ __RPC__out SmartCardAssociationType *pCardAssociation,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrCardError,
            /* [out] */ __RPC__out VARIANT_BOOL *pfOOBLocked) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE get_SmartCardInfo( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrCardName,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrCardManufacturer,
            /* [out] */ __RPC__out VARIANT_BOOL *pfDaylightSavings,
            /* [out] */ __RPC__out BYTE *pbyRatingRegion,
            /* [out] */ __RPC__out LONG *plTimeZoneOffsetMinutes,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrLanguage,
            /* [out] */ __RPC__out EALocationCodeType *pEALocationCode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE get_SmartCardApplications( 
            /* [out][in] */ __RPC__inout ULONG *pulcApplications,
            /* [in] */ ULONG ulcApplicationsMax,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(ulcApplicationsMax) SmartCardApplication rgApplications[  ]) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE get_Entitlement( 
            /* [in] */ USHORT usVirtualChannel,
            /* [out] */ __RPC__out EntitlementType *pEntitlement) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE TuneByChannel( 
            /* [in] */ USHORT usVirtualChannel) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetProgram( 
            /* [in] */ USHORT usProgramNumber) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddProgram( 
            /* [in] */ USHORT usProgramNumber) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveProgram( 
            /* [in] */ USHORT usProgramNumber) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetModuleUI( 
            /* [in] */ BYTE byDialogNumber,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrURL) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InformUIClosed( 
            /* [in] */ BYTE byDialogNumber,
            /* [in] */ UICloseReasonType CloseReason) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_ConditionalAccessVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_ConditionalAccess * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_ConditionalAccess * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_ConditionalAccess * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *get_SmartCardStatus )( 
            __RPC__in IBDA_ConditionalAccess * This,
            /* [out] */ __RPC__out SmartCardStatusType *pCardStatus,
            /* [out] */ __RPC__out SmartCardAssociationType *pCardAssociation,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrCardError,
            /* [out] */ __RPC__out VARIANT_BOOL *pfOOBLocked);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *get_SmartCardInfo )( 
            __RPC__in IBDA_ConditionalAccess * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrCardName,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrCardManufacturer,
            /* [out] */ __RPC__out VARIANT_BOOL *pfDaylightSavings,
            /* [out] */ __RPC__out BYTE *pbyRatingRegion,
            /* [out] */ __RPC__out LONG *plTimeZoneOffsetMinutes,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrLanguage,
            /* [out] */ __RPC__out EALocationCodeType *pEALocationCode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *get_SmartCardApplications )( 
            __RPC__in IBDA_ConditionalAccess * This,
            /* [out][in] */ __RPC__inout ULONG *pulcApplications,
            /* [in] */ ULONG ulcApplicationsMax,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(ulcApplicationsMax) SmartCardApplication rgApplications[  ]);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *get_Entitlement )( 
            __RPC__in IBDA_ConditionalAccess * This,
            /* [in] */ USHORT usVirtualChannel,
            /* [out] */ __RPC__out EntitlementType *pEntitlement);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TuneByChannel )( 
            __RPC__in IBDA_ConditionalAccess * This,
            /* [in] */ USHORT usVirtualChannel);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetProgram )( 
            __RPC__in IBDA_ConditionalAccess * This,
            /* [in] */ USHORT usProgramNumber);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddProgram )( 
            __RPC__in IBDA_ConditionalAccess * This,
            /* [in] */ USHORT usProgramNumber);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveProgram )( 
            __RPC__in IBDA_ConditionalAccess * This,
            /* [in] */ USHORT usProgramNumber);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetModuleUI )( 
            __RPC__in IBDA_ConditionalAccess * This,
            /* [in] */ BYTE byDialogNumber,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrURL);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InformUIClosed )( 
            __RPC__in IBDA_ConditionalAccess * This,
            /* [in] */ BYTE byDialogNumber,
            /* [in] */ UICloseReasonType CloseReason);
        
        END_INTERFACE
    } IBDA_ConditionalAccessVtbl;

    interface IBDA_ConditionalAccess
    {
        CONST_VTBL struct IBDA_ConditionalAccessVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_ConditionalAccess_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_ConditionalAccess_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_ConditionalAccess_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_ConditionalAccess_get_SmartCardStatus(This,pCardStatus,pCardAssociation,pbstrCardError,pfOOBLocked)	\
    ( (This)->lpVtbl -> get_SmartCardStatus(This,pCardStatus,pCardAssociation,pbstrCardError,pfOOBLocked) ) 

#define IBDA_ConditionalAccess_get_SmartCardInfo(This,pbstrCardName,pbstrCardManufacturer,pfDaylightSavings,pbyRatingRegion,plTimeZoneOffsetMinutes,pbstrLanguage,pEALocationCode)	\
    ( (This)->lpVtbl -> get_SmartCardInfo(This,pbstrCardName,pbstrCardManufacturer,pfDaylightSavings,pbyRatingRegion,plTimeZoneOffsetMinutes,pbstrLanguage,pEALocationCode) ) 

#define IBDA_ConditionalAccess_get_SmartCardApplications(This,pulcApplications,ulcApplicationsMax,rgApplications)	\
    ( (This)->lpVtbl -> get_SmartCardApplications(This,pulcApplications,ulcApplicationsMax,rgApplications) ) 

#define IBDA_ConditionalAccess_get_Entitlement(This,usVirtualChannel,pEntitlement)	\
    ( (This)->lpVtbl -> get_Entitlement(This,usVirtualChannel,pEntitlement) ) 

#define IBDA_ConditionalAccess_TuneByChannel(This,usVirtualChannel)	\
    ( (This)->lpVtbl -> TuneByChannel(This,usVirtualChannel) ) 

#define IBDA_ConditionalAccess_SetProgram(This,usProgramNumber)	\
    ( (This)->lpVtbl -> SetProgram(This,usProgramNumber) ) 

#define IBDA_ConditionalAccess_AddProgram(This,usProgramNumber)	\
    ( (This)->lpVtbl -> AddProgram(This,usProgramNumber) ) 

#define IBDA_ConditionalAccess_RemoveProgram(This,usProgramNumber)	\
    ( (This)->lpVtbl -> RemoveProgram(This,usProgramNumber) ) 

#define IBDA_ConditionalAccess_GetModuleUI(This,byDialogNumber,pbstrURL)	\
    ( (This)->lpVtbl -> GetModuleUI(This,byDialogNumber,pbstrURL) ) 

#define IBDA_ConditionalAccess_InformUIClosed(This,byDialogNumber,CloseReason)	\
    ( (This)->lpVtbl -> InformUIClosed(This,byDialogNumber,CloseReason) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_ConditionalAccess_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0028 */
/* [local] */ 

#define SID_BDA_ConditionalAccess __uuidof(IBDA_ConditionalAccess)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0028_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0028_v0_0_s_ifspec;

#ifndef __IBDA_DiagnosticProperties_INTERFACE_DEFINED__
#define __IBDA_DiagnosticProperties_INTERFACE_DEFINED__

/* interface IBDA_DiagnosticProperties */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_DiagnosticProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("20e80cb5-c543-4c1b-8eb3-49e719eee7d4")
    IBDA_DiagnosticProperties : public IPropertyBag
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IBDA_DiagnosticPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_DiagnosticProperties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_DiagnosticProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_DiagnosticProperties * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Read )( 
            IBDA_DiagnosticProperties * This,
            /* [in] */ LPCOLESTR pszPropName,
            /* [out][in] */ VARIANT *pVar,
            /* [unique][in] */ IErrorLog *pErrorLog);
        
        HRESULT ( STDMETHODCALLTYPE *Write )( 
            __RPC__in IBDA_DiagnosticProperties * This,
            /* [in] */ __RPC__in LPCOLESTR pszPropName,
            /* [in] */ __RPC__in VARIANT *pVar);
        
        END_INTERFACE
    } IBDA_DiagnosticPropertiesVtbl;

    interface IBDA_DiagnosticProperties
    {
        CONST_VTBL struct IBDA_DiagnosticPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_DiagnosticProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_DiagnosticProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_DiagnosticProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_DiagnosticProperties_Read(This,pszPropName,pVar,pErrorLog)	\
    ( (This)->lpVtbl -> Read(This,pszPropName,pVar,pErrorLog) ) 

#define IBDA_DiagnosticProperties_Write(This,pszPropName,pVar)	\
    ( (This)->lpVtbl -> Write(This,pszPropName,pVar) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_DiagnosticProperties_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0029 */
/* [local] */ 

#define SID_BDA_DiagnosticProperties __uuidof(IBDA_DiagnosticProperties)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0029_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0029_v0_0_s_ifspec;

#ifndef __IBDA_DRM_INTERFACE_DEFINED__
#define __IBDA_DRM_INTERFACE_DEFINED__

/* interface IBDA_DRM */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_DRM;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F98D88B0-1992-4cd6-A6D9-B9AFAB99330D")
    IBDA_DRM : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDRMPairingStatus( 
            /* [out] */ __RPC__out DWORD *pdwStatus,
            /* [out] */ __RPC__out HRESULT *phError) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PerformDRMPairing( 
            BOOL fSync) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_DRMVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_DRM * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_DRM * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_DRM * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetDRMPairingStatus )( 
            __RPC__in IBDA_DRM * This,
            /* [out] */ __RPC__out DWORD *pdwStatus,
            /* [out] */ __RPC__out HRESULT *phError);
        
        HRESULT ( STDMETHODCALLTYPE *PerformDRMPairing )( 
            __RPC__in IBDA_DRM * This,
            BOOL fSync);
        
        END_INTERFACE
    } IBDA_DRMVtbl;

    interface IBDA_DRM
    {
        CONST_VTBL struct IBDA_DRMVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_DRM_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_DRM_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_DRM_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_DRM_GetDRMPairingStatus(This,pdwStatus,phError)	\
    ( (This)->lpVtbl -> GetDRMPairingStatus(This,pdwStatus,phError) ) 

#define IBDA_DRM_PerformDRMPairing(This,fSync)	\
    ( (This)->lpVtbl -> PerformDRMPairing(This,fSync) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_DRM_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0030 */
/* [local] */ 

#define SID_BDA_DRM __uuidof(IBDA_DRM)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0030_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0030_v0_0_s_ifspec;

#ifndef __IBDA_NameValueService_INTERFACE_DEFINED__
#define __IBDA_NameValueService_INTERFACE_DEFINED__

/* interface IBDA_NameValueService */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_NameValueService;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7F0B3150-7B81-4ad4-98E3-7E9097094301")
    IBDA_NameValueService : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetValueNameByIndex( 
            /* [in] */ ULONG ulIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetValue( 
            /* [in] */ __RPC__in BSTR bstrName,
            /* [in] */ __RPC__in BSTR bstrLanguage,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetValue( 
            /* [in] */ ULONG ulDialogRequest,
            /* [in] */ __RPC__in BSTR bstrLanguage,
            /* [in] */ __RPC__in BSTR bstrName,
            /* [in] */ __RPC__in BSTR bstrValue,
            /* [in] */ ULONG ulReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_NameValueServiceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_NameValueService * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_NameValueService * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_NameValueService * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetValueNameByIndex )( 
            __RPC__in IBDA_NameValueService * This,
            /* [in] */ ULONG ulIndex,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetValue )( 
            __RPC__in IBDA_NameValueService * This,
            /* [in] */ __RPC__in BSTR bstrName,
            /* [in] */ __RPC__in BSTR bstrLanguage,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetValue )( 
            __RPC__in IBDA_NameValueService * This,
            /* [in] */ ULONG ulDialogRequest,
            /* [in] */ __RPC__in BSTR bstrLanguage,
            /* [in] */ __RPC__in BSTR bstrName,
            /* [in] */ __RPC__in BSTR bstrValue,
            /* [in] */ ULONG ulReserved);
        
        END_INTERFACE
    } IBDA_NameValueServiceVtbl;

    interface IBDA_NameValueService
    {
        CONST_VTBL struct IBDA_NameValueServiceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_NameValueService_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_NameValueService_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_NameValueService_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_NameValueService_GetValueNameByIndex(This,ulIndex,pbstrName)	\
    ( (This)->lpVtbl -> GetValueNameByIndex(This,ulIndex,pbstrName) ) 

#define IBDA_NameValueService_GetValue(This,bstrName,bstrLanguage,pbstrValue)	\
    ( (This)->lpVtbl -> GetValue(This,bstrName,bstrLanguage,pbstrValue) ) 

#define IBDA_NameValueService_SetValue(This,ulDialogRequest,bstrLanguage,bstrName,bstrValue,ulReserved)	\
    ( (This)->lpVtbl -> SetValue(This,ulDialogRequest,bstrLanguage,bstrName,bstrValue,ulReserved) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_NameValueService_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0031 */
/* [local] */ 

#define SID_BDA_NameValueService __uuidof(IBDA_NameValueService)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0031_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0031_v0_0_s_ifspec;

#ifndef __IBDA_ConditionalAccessEx_INTERFACE_DEFINED__
#define __IBDA_ConditionalAccessEx_INTERFACE_DEFINED__

/* interface IBDA_ConditionalAccessEx */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_ConditionalAccessEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("497C3418-23CB-44ba-BB62-769F506FCEA7")
    IBDA_ConditionalAccessEx : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CheckEntitlementToken( 
            /* [in] */ ULONG ulDialogRequest,
            /* [in] */ __RPC__in BSTR bstrLanguage,
            /* [in] */ BDA_CONDITIONALACCESS_REQUESTTYPE RequestType,
            /* [in] */ ULONG ulcbEntitlementTokenLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbEntitlementTokenLen) BYTE *pbEntitlementToken,
            /* [out] */ __RPC__out ULONG *pulDescrambleStatus) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetCaptureToken( 
            /* [in] */ ULONG ulcbCaptureTokenLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbCaptureTokenLen) BYTE *pbCaptureToken) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE OpenBroadcastMmi( 
            /* [in] */ ULONG ulDialogRequest,
            /* [in] */ __RPC__in BSTR bstrLanguage,
            /* [in] */ ULONG EventId) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CloseMmiDialog( 
            /* [in] */ ULONG ulDialogRequest,
            /* [in] */ __RPC__in BSTR bstrLanguage,
            /* [in] */ ULONG ulDialogNumber,
            /* [in] */ BDA_CONDITIONALACCESS_MMICLOSEREASON ReasonCode,
            /* [out] */ __RPC__out ULONG *pulSessionResult) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateDialogRequestNumber( 
            /* [out] */ __RPC__out ULONG *pulDialogRequestNumber) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_ConditionalAccessExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_ConditionalAccessEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_ConditionalAccessEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_ConditionalAccessEx * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckEntitlementToken )( 
            __RPC__in IBDA_ConditionalAccessEx * This,
            /* [in] */ ULONG ulDialogRequest,
            /* [in] */ __RPC__in BSTR bstrLanguage,
            /* [in] */ BDA_CONDITIONALACCESS_REQUESTTYPE RequestType,
            /* [in] */ ULONG ulcbEntitlementTokenLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbEntitlementTokenLen) BYTE *pbEntitlementToken,
            /* [out] */ __RPC__out ULONG *pulDescrambleStatus);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetCaptureToken )( 
            __RPC__in IBDA_ConditionalAccessEx * This,
            /* [in] */ ULONG ulcbCaptureTokenLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbCaptureTokenLen) BYTE *pbCaptureToken);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *OpenBroadcastMmi )( 
            __RPC__in IBDA_ConditionalAccessEx * This,
            /* [in] */ ULONG ulDialogRequest,
            /* [in] */ __RPC__in BSTR bstrLanguage,
            /* [in] */ ULONG EventId);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CloseMmiDialog )( 
            __RPC__in IBDA_ConditionalAccessEx * This,
            /* [in] */ ULONG ulDialogRequest,
            /* [in] */ __RPC__in BSTR bstrLanguage,
            /* [in] */ ULONG ulDialogNumber,
            /* [in] */ BDA_CONDITIONALACCESS_MMICLOSEREASON ReasonCode,
            /* [out] */ __RPC__out ULONG *pulSessionResult);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateDialogRequestNumber )( 
            __RPC__in IBDA_ConditionalAccessEx * This,
            /* [out] */ __RPC__out ULONG *pulDialogRequestNumber);
        
        END_INTERFACE
    } IBDA_ConditionalAccessExVtbl;

    interface IBDA_ConditionalAccessEx
    {
        CONST_VTBL struct IBDA_ConditionalAccessExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_ConditionalAccessEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_ConditionalAccessEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_ConditionalAccessEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_ConditionalAccessEx_CheckEntitlementToken(This,ulDialogRequest,bstrLanguage,RequestType,ulcbEntitlementTokenLen,pbEntitlementToken,pulDescrambleStatus)	\
    ( (This)->lpVtbl -> CheckEntitlementToken(This,ulDialogRequest,bstrLanguage,RequestType,ulcbEntitlementTokenLen,pbEntitlementToken,pulDescrambleStatus) ) 

#define IBDA_ConditionalAccessEx_SetCaptureToken(This,ulcbCaptureTokenLen,pbCaptureToken)	\
    ( (This)->lpVtbl -> SetCaptureToken(This,ulcbCaptureTokenLen,pbCaptureToken) ) 

#define IBDA_ConditionalAccessEx_OpenBroadcastMmi(This,ulDialogRequest,bstrLanguage,EventId)	\
    ( (This)->lpVtbl -> OpenBroadcastMmi(This,ulDialogRequest,bstrLanguage,EventId) ) 

#define IBDA_ConditionalAccessEx_CloseMmiDialog(This,ulDialogRequest,bstrLanguage,ulDialogNumber,ReasonCode,pulSessionResult)	\
    ( (This)->lpVtbl -> CloseMmiDialog(This,ulDialogRequest,bstrLanguage,ulDialogNumber,ReasonCode,pulSessionResult) ) 

#define IBDA_ConditionalAccessEx_CreateDialogRequestNumber(This,pulDialogRequestNumber)	\
    ( (This)->lpVtbl -> CreateDialogRequestNumber(This,pulDialogRequestNumber) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_ConditionalAccessEx_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0032 */
/* [local] */ 

#define SID_BDA_ConditionalAccessEx __uuidof(IBDA_ConditionalAccessEx)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0032_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0032_v0_0_s_ifspec;

#ifndef __IBDA_ISDBConditionalAccess_INTERFACE_DEFINED__
#define __IBDA_ISDBConditionalAccess_INTERFACE_DEFINED__

/* interface IBDA_ISDBConditionalAccess */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_ISDBConditionalAccess;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5E68C627-16C2-4e6c-B1E2-D00170CDAA0F")
    IBDA_ISDBConditionalAccess : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetIsdbCasRequest( 
            /* [in] */ ULONG ulRequestId,
            /* [in] */ ULONG ulcbRequestBufferLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbRequestBufferLen) BYTE *pbRequestBuffer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_ISDBConditionalAccessVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_ISDBConditionalAccess * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_ISDBConditionalAccess * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_ISDBConditionalAccess * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetIsdbCasRequest )( 
            __RPC__in IBDA_ISDBConditionalAccess * This,
            /* [in] */ ULONG ulRequestId,
            /* [in] */ ULONG ulcbRequestBufferLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbRequestBufferLen) BYTE *pbRequestBuffer);
        
        END_INTERFACE
    } IBDA_ISDBConditionalAccessVtbl;

    interface IBDA_ISDBConditionalAccess
    {
        CONST_VTBL struct IBDA_ISDBConditionalAccessVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_ISDBConditionalAccess_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_ISDBConditionalAccess_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_ISDBConditionalAccess_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_ISDBConditionalAccess_SetIsdbCasRequest(This,ulRequestId,ulcbRequestBufferLen,pbRequestBuffer)	\
    ( (This)->lpVtbl -> SetIsdbCasRequest(This,ulRequestId,ulcbRequestBufferLen,pbRequestBuffer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_ISDBConditionalAccess_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0033 */
/* [local] */ 

#define SID_BDA_ISDBConditionalAccess __uuidof(IBDA_ISDBConditionalAccess)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0033_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0033_v0_0_s_ifspec;

#ifndef __IBDA_EventingService_INTERFACE_DEFINED__
#define __IBDA_EventingService_INTERFACE_DEFINED__

/* interface IBDA_EventingService */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_EventingService;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("207C413F-00DC-4c61-BAD6-6FEE1FF07064")
    IBDA_EventingService : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CompleteEvent( 
            /* [in] */ ULONG ulEventID,
            /* [in] */ ULONG ulEventResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_EventingServiceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_EventingService * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_EventingService * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_EventingService * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CompleteEvent )( 
            __RPC__in IBDA_EventingService * This,
            /* [in] */ ULONG ulEventID,
            /* [in] */ ULONG ulEventResult);
        
        END_INTERFACE
    } IBDA_EventingServiceVtbl;

    interface IBDA_EventingService
    {
        CONST_VTBL struct IBDA_EventingServiceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_EventingService_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_EventingService_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_EventingService_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_EventingService_CompleteEvent(This,ulEventID,ulEventResult)	\
    ( (This)->lpVtbl -> CompleteEvent(This,ulEventID,ulEventResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_EventingService_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0034 */
/* [local] */ 

#define SID_BDA_EventingService __uuidof(IBDA_EventingService)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0034_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0034_v0_0_s_ifspec;

#ifndef __IBDA_AUX_INTERFACE_DEFINED__
#define __IBDA_AUX_INTERFACE_DEFINED__

/* interface IBDA_AUX */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_AUX;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7DEf4C09-6E66-4567-A819-F0E17F4A81AB")
    IBDA_AUX : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryCapabilities( 
            /* [out] */ __RPC__out DWORD *pdwNumAuxInputsBSTR) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EnumCapability( 
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__out DWORD *dwInputID,
            /* [out] */ __RPC__out GUID *pConnectorType,
            /* [out] */ __RPC__out DWORD *ConnTypeNum,
            /* [out] */ __RPC__out DWORD *NumVideoStds,
            /* [out] */ __RPC__out ULONGLONG *AnalogStds) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_AUXVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_AUX * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_AUX * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_AUX * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryCapabilities )( 
            __RPC__in IBDA_AUX * This,
            /* [out] */ __RPC__out DWORD *pdwNumAuxInputsBSTR);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EnumCapability )( 
            __RPC__in IBDA_AUX * This,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__out DWORD *dwInputID,
            /* [out] */ __RPC__out GUID *pConnectorType,
            /* [out] */ __RPC__out DWORD *ConnTypeNum,
            /* [out] */ __RPC__out DWORD *NumVideoStds,
            /* [out] */ __RPC__out ULONGLONG *AnalogStds);
        
        END_INTERFACE
    } IBDA_AUXVtbl;

    interface IBDA_AUX
    {
        CONST_VTBL struct IBDA_AUXVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_AUX_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_AUX_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_AUX_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_AUX_QueryCapabilities(This,pdwNumAuxInputsBSTR)	\
    ( (This)->lpVtbl -> QueryCapabilities(This,pdwNumAuxInputsBSTR) ) 

#define IBDA_AUX_EnumCapability(This,dwIndex,dwInputID,pConnectorType,ConnTypeNum,NumVideoStds,AnalogStds)	\
    ( (This)->lpVtbl -> EnumCapability(This,dwIndex,dwInputID,pConnectorType,ConnTypeNum,NumVideoStds,AnalogStds) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_AUX_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0035 */
/* [local] */ 

DEFINE_GUID(PBDA_AUX_CONNECTOR_TYPE_SVideo, 0xa0e905f4,0x24c9,0x4a54, 0xb7, 0x61, 0x21, 0x33, 0x55, 0xef, 0xc1, 0x3A);
DEFINE_GUID(PBDA_AUX_CONNECTOR_TYPE_Composite, 0xf6298b4c,0xc725,0x4d42, 0x84, 0x9b, 0x41, 0x0b, 0xbb, 0x14, 0xea, 0x62);
#define SID_BDA_AUX __uuidof(IBDA_AUX)
DEFINE_GUID(CLSID_PBDA_AUX_DATA_TYPE, /* fd456373-3323-4090-adca-8ed45f55cf10 */
0xfd456373, 0x3323, 0x4090, 0xad, 0xca, 0x8e, 0xd4, 0x5f, 0x55, 0xcf, 0x10);


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0035_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0035_v0_0_s_ifspec;

#ifndef __IBDA_Encoder_INTERFACE_DEFINED__
#define __IBDA_Encoder_INTERFACE_DEFINED__

/* interface IBDA_Encoder */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_Encoder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3a8bad59-59fe-4559-a0ba-396cfaa98ae3")
    IBDA_Encoder : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryCapabilities( 
            /* [out] */ __RPC__out DWORD *NumAudioFmts,
            /* [out] */ __RPC__out DWORD *NumVideoFmts) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EnumAudioCapability( 
            /* [in] */ DWORD FmtIndex,
            /* [out] */ __RPC__out DWORD *MethodID,
            /* [out] */ __RPC__out DWORD *AlgorithmType,
            /* [out] */ __RPC__out DWORD *SamplingRate,
            /* [out] */ __RPC__out DWORD *BitDepth,
            /* [out] */ __RPC__out DWORD *NumChannels) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EnumVideoCapability( 
            /* [in] */ DWORD FmtIndex,
            /* [out] */ __RPC__out DWORD *MethodID,
            /* [out] */ __RPC__out DWORD *AlgorithmType,
            /* [out] */ __RPC__out DWORD *VerticalSize,
            /* [out] */ __RPC__out DWORD *HorizontalSize,
            /* [out] */ __RPC__out DWORD *AspectRatio,
            /* [out] */ __RPC__out DWORD *FrameRateCode,
            /* [out] */ __RPC__out DWORD *ProgressiveSequence) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetParameters( 
            /* [in] */ DWORD AudioBitrateMode,
            /* [in] */ DWORD AudioBitrate,
            /* [in] */ DWORD AudioMethodID,
            /* [in] */ DWORD AudioProgram,
            /* [in] */ DWORD VideoBitrateMode,
            /* [in] */ DWORD VideoBitrate,
            /* [in] */ DWORD VideoMethodID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetState( 
            /* [out] */ __RPC__out DWORD *AudioBitrateMax,
            /* [out] */ __RPC__out DWORD *AudioBitrateMin,
            /* [out] */ __RPC__out DWORD *AudioBitrateMode,
            /* [out] */ __RPC__out DWORD *AudioBitrateStepping,
            /* [out] */ __RPC__out DWORD *AudioBitrate,
            /* [out] */ __RPC__out DWORD *AudioMethodID,
            /* [out] */ __RPC__out DWORD *AvailableAudioPrograms,
            /* [out] */ __RPC__out DWORD *AudioProgram,
            /* [out] */ __RPC__out DWORD *VideoBitrateMax,
            /* [out] */ __RPC__out DWORD *VideoBitrateMin,
            /* [out] */ __RPC__out DWORD *VideoBitrateMode,
            /* [out] */ __RPC__out DWORD *VideoBitrate,
            /* [out] */ __RPC__out DWORD *VideoBitrateStepping,
            /* [out] */ __RPC__out DWORD *VideoMethodID,
            /* [out] */ __RPC__out DWORD *SignalSourceID,
            /* [out] */ __RPC__out ULONGLONG *SignalFormat,
            /* [out] */ __RPC__out BOOL *SignalLock,
            /* [out] */ __RPC__out LONG *SignalLevel,
            /* [out] */ __RPC__out DWORD *SignalToNoiseRatio) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_EncoderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_Encoder * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_Encoder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_Encoder * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryCapabilities )( 
            __RPC__in IBDA_Encoder * This,
            /* [out] */ __RPC__out DWORD *NumAudioFmts,
            /* [out] */ __RPC__out DWORD *NumVideoFmts);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EnumAudioCapability )( 
            __RPC__in IBDA_Encoder * This,
            /* [in] */ DWORD FmtIndex,
            /* [out] */ __RPC__out DWORD *MethodID,
            /* [out] */ __RPC__out DWORD *AlgorithmType,
            /* [out] */ __RPC__out DWORD *SamplingRate,
            /* [out] */ __RPC__out DWORD *BitDepth,
            /* [out] */ __RPC__out DWORD *NumChannels);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EnumVideoCapability )( 
            __RPC__in IBDA_Encoder * This,
            /* [in] */ DWORD FmtIndex,
            /* [out] */ __RPC__out DWORD *MethodID,
            /* [out] */ __RPC__out DWORD *AlgorithmType,
            /* [out] */ __RPC__out DWORD *VerticalSize,
            /* [out] */ __RPC__out DWORD *HorizontalSize,
            /* [out] */ __RPC__out DWORD *AspectRatio,
            /* [out] */ __RPC__out DWORD *FrameRateCode,
            /* [out] */ __RPC__out DWORD *ProgressiveSequence);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetParameters )( 
            __RPC__in IBDA_Encoder * This,
            /* [in] */ DWORD AudioBitrateMode,
            /* [in] */ DWORD AudioBitrate,
            /* [in] */ DWORD AudioMethodID,
            /* [in] */ DWORD AudioProgram,
            /* [in] */ DWORD VideoBitrateMode,
            /* [in] */ DWORD VideoBitrate,
            /* [in] */ DWORD VideoMethodID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetState )( 
            __RPC__in IBDA_Encoder * This,
            /* [out] */ __RPC__out DWORD *AudioBitrateMax,
            /* [out] */ __RPC__out DWORD *AudioBitrateMin,
            /* [out] */ __RPC__out DWORD *AudioBitrateMode,
            /* [out] */ __RPC__out DWORD *AudioBitrateStepping,
            /* [out] */ __RPC__out DWORD *AudioBitrate,
            /* [out] */ __RPC__out DWORD *AudioMethodID,
            /* [out] */ __RPC__out DWORD *AvailableAudioPrograms,
            /* [out] */ __RPC__out DWORD *AudioProgram,
            /* [out] */ __RPC__out DWORD *VideoBitrateMax,
            /* [out] */ __RPC__out DWORD *VideoBitrateMin,
            /* [out] */ __RPC__out DWORD *VideoBitrateMode,
            /* [out] */ __RPC__out DWORD *VideoBitrate,
            /* [out] */ __RPC__out DWORD *VideoBitrateStepping,
            /* [out] */ __RPC__out DWORD *VideoMethodID,
            /* [out] */ __RPC__out DWORD *SignalSourceID,
            /* [out] */ __RPC__out ULONGLONG *SignalFormat,
            /* [out] */ __RPC__out BOOL *SignalLock,
            /* [out] */ __RPC__out LONG *SignalLevel,
            /* [out] */ __RPC__out DWORD *SignalToNoiseRatio);
        
        END_INTERFACE
    } IBDA_EncoderVtbl;

    interface IBDA_Encoder
    {
        CONST_VTBL struct IBDA_EncoderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_Encoder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_Encoder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_Encoder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_Encoder_QueryCapabilities(This,NumAudioFmts,NumVideoFmts)	\
    ( (This)->lpVtbl -> QueryCapabilities(This,NumAudioFmts,NumVideoFmts) ) 

#define IBDA_Encoder_EnumAudioCapability(This,FmtIndex,MethodID,AlgorithmType,SamplingRate,BitDepth,NumChannels)	\
    ( (This)->lpVtbl -> EnumAudioCapability(This,FmtIndex,MethodID,AlgorithmType,SamplingRate,BitDepth,NumChannels) ) 

#define IBDA_Encoder_EnumVideoCapability(This,FmtIndex,MethodID,AlgorithmType,VerticalSize,HorizontalSize,AspectRatio,FrameRateCode,ProgressiveSequence)	\
    ( (This)->lpVtbl -> EnumVideoCapability(This,FmtIndex,MethodID,AlgorithmType,VerticalSize,HorizontalSize,AspectRatio,FrameRateCode,ProgressiveSequence) ) 

#define IBDA_Encoder_SetParameters(This,AudioBitrateMode,AudioBitrate,AudioMethodID,AudioProgram,VideoBitrateMode,VideoBitrate,VideoMethodID)	\
    ( (This)->lpVtbl -> SetParameters(This,AudioBitrateMode,AudioBitrate,AudioMethodID,AudioProgram,VideoBitrateMode,VideoBitrate,VideoMethodID) ) 

#define IBDA_Encoder_GetState(This,AudioBitrateMax,AudioBitrateMin,AudioBitrateMode,AudioBitrateStepping,AudioBitrate,AudioMethodID,AvailableAudioPrograms,AudioProgram,VideoBitrateMax,VideoBitrateMin,VideoBitrateMode,VideoBitrate,VideoBitrateStepping,VideoMethodID,SignalSourceID,SignalFormat,SignalLock,SignalLevel,SignalToNoiseRatio)	\
    ( (This)->lpVtbl -> GetState(This,AudioBitrateMax,AudioBitrateMin,AudioBitrateMode,AudioBitrateStepping,AudioBitrate,AudioMethodID,AvailableAudioPrograms,AudioProgram,VideoBitrateMax,VideoBitrateMin,VideoBitrateMode,VideoBitrate,VideoBitrateStepping,VideoMethodID,SignalSourceID,SignalFormat,SignalLock,SignalLevel,SignalToNoiseRatio) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_Encoder_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0036 */
/* [local] */ 

#define SID_BDA_Encoder __uuidof(IBDA_Encoder)
DEFINE_GUID(CLSID_PBDA_Encoder_DATA_TYPE, /* 728fd6bc-5546-4716-b103-f899f5a1fa68 */
0x728fd6bc, 0x5546, 0x4716, 0xb1, 0x03, 0xf8, 0x99, 0xf5, 0xa1, 0xfa, 0x68);
#define PBDA_Encoder_Audio_AlgorithmType_MPEG1LayerII    0x00000000
#define PBDA_Encoder_Audio_AlgorithmType_AC3             0x00000001
#define PBDA_Encoder_Video_MPEG2PartII                   0x00000000
#define PBDA_Encoder_Video_MPEG4Part10                   0x00000001
#define PBDA_Encoder_Video_AVC                           0x00000001
#define PBDA_Encoder_Video_H264                          0x00000001
#define PBDA_Encoder_BitrateMode_Constant                0x00000001
#define PBDA_Encoder_BitrateMode_Variable                0x00000002
#define PBDA_Encoder_BitrateMode_Average                 0x00000003


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0036_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0036_v0_0_s_ifspec;

#ifndef __IBDA_FDC_INTERFACE_DEFINED__
#define __IBDA_FDC_INTERFACE_DEFINED__

/* interface IBDA_FDC */
/* [unique][helpstring][uuid][object] */ 

#define SID_BDA_FDC __uuidof(IBDA_FDC
DEFINE_GUID(CLSID_PBDA_FDC_DATA_TYPE, /* E7DBF9A0-22AB-4047-8E67-EF9AD504E729 */
0xe7dbf9a0, 0x22ab, 0x4047, 0x8e, 0x67, 0xef, 0x9a, 0xd5, 0x4, 0xe7, 0x29);

EXTERN_C const IID IID_IBDA_FDC;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("138adc7e-58ae-437f-b0b4-c9fe19d5b4ac")
    IBDA_FDC : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetStatus( 
            /* [out] */ __RPC__out DWORD *CurrentBitrate,
            /* [out] */ __RPC__out BOOL *CarrierLock,
            /* [out] */ __RPC__out DWORD *CurrentFrequency,
            /* [out] */ __RPC__out BOOL *CurrentSpectrumInversion,
            /* [out] */ __RPC__deref_out_opt BSTR *CurrentPIDList,
            /* [out] */ __RPC__deref_out_opt BSTR *CurrentTIDList,
            /* [out] */ __RPC__out BOOL *Overflow) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RequestTables( 
            /* [in] */ __RPC__in BSTR TableIDs) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddPid( 
            /* [in] */ __RPC__in BSTR PidsToAdd,
            /* [out] */ __RPC__out DWORD *RemainingFilterEntries) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemovePid( 
            /* [in] */ __RPC__in BSTR PidsToRemove) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddTid( 
            /* [in] */ __RPC__in BSTR TidsToAdd,
            /* [out] */ __RPC__deref_out_opt BSTR *CurrentTidList) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveTid( 
            /* [in] */ __RPC__in BSTR TidsToRemove) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetTableSection( 
            /* [out] */ __RPC__out DWORD *Pid,
            /* [in] */ DWORD MaxBufferSize,
            /* [out] */ __RPC__out DWORD *ActualSize,
            /* [out] */ __RPC__out BYTE *SecBuffer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_FDCVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_FDC * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_FDC * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_FDC * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetStatus )( 
            __RPC__in IBDA_FDC * This,
            /* [out] */ __RPC__out DWORD *CurrentBitrate,
            /* [out] */ __RPC__out BOOL *CarrierLock,
            /* [out] */ __RPC__out DWORD *CurrentFrequency,
            /* [out] */ __RPC__out BOOL *CurrentSpectrumInversion,
            /* [out] */ __RPC__deref_out_opt BSTR *CurrentPIDList,
            /* [out] */ __RPC__deref_out_opt BSTR *CurrentTIDList,
            /* [out] */ __RPC__out BOOL *Overflow);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RequestTables )( 
            __RPC__in IBDA_FDC * This,
            /* [in] */ __RPC__in BSTR TableIDs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPid )( 
            __RPC__in IBDA_FDC * This,
            /* [in] */ __RPC__in BSTR PidsToAdd,
            /* [out] */ __RPC__out DWORD *RemainingFilterEntries);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemovePid )( 
            __RPC__in IBDA_FDC * This,
            /* [in] */ __RPC__in BSTR PidsToRemove);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddTid )( 
            __RPC__in IBDA_FDC * This,
            /* [in] */ __RPC__in BSTR TidsToAdd,
            /* [out] */ __RPC__deref_out_opt BSTR *CurrentTidList);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveTid )( 
            __RPC__in IBDA_FDC * This,
            /* [in] */ __RPC__in BSTR TidsToRemove);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetTableSection )( 
            __RPC__in IBDA_FDC * This,
            /* [out] */ __RPC__out DWORD *Pid,
            /* [in] */ DWORD MaxBufferSize,
            /* [out] */ __RPC__out DWORD *ActualSize,
            /* [out] */ __RPC__out BYTE *SecBuffer);
        
        END_INTERFACE
    } IBDA_FDCVtbl;

    interface IBDA_FDC
    {
        CONST_VTBL struct IBDA_FDCVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_FDC_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_FDC_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_FDC_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_FDC_GetStatus(This,CurrentBitrate,CarrierLock,CurrentFrequency,CurrentSpectrumInversion,CurrentPIDList,CurrentTIDList,Overflow)	\
    ( (This)->lpVtbl -> GetStatus(This,CurrentBitrate,CarrierLock,CurrentFrequency,CurrentSpectrumInversion,CurrentPIDList,CurrentTIDList,Overflow) ) 

#define IBDA_FDC_RequestTables(This,TableIDs)	\
    ( (This)->lpVtbl -> RequestTables(This,TableIDs) ) 

#define IBDA_FDC_AddPid(This,PidsToAdd,RemainingFilterEntries)	\
    ( (This)->lpVtbl -> AddPid(This,PidsToAdd,RemainingFilterEntries) ) 

#define IBDA_FDC_RemovePid(This,PidsToRemove)	\
    ( (This)->lpVtbl -> RemovePid(This,PidsToRemove) ) 

#define IBDA_FDC_AddTid(This,TidsToAdd,CurrentTidList)	\
    ( (This)->lpVtbl -> AddTid(This,TidsToAdd,CurrentTidList) ) 

#define IBDA_FDC_RemoveTid(This,TidsToRemove)	\
    ( (This)->lpVtbl -> RemoveTid(This,TidsToRemove) ) 

#define IBDA_FDC_GetTableSection(This,Pid,MaxBufferSize,ActualSize,SecBuffer)	\
    ( (This)->lpVtbl -> GetTableSection(This,Pid,MaxBufferSize,ActualSize,SecBuffer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_FDC_INTERFACE_DEFINED__ */


#ifndef __IBDA_GuideDataDeliveryService_INTERFACE_DEFINED__
#define __IBDA_GuideDataDeliveryService_INTERFACE_DEFINED__

/* interface IBDA_GuideDataDeliveryService */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_GuideDataDeliveryService;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C0AFCB73-23E7-4bc6-BAFA-FDC167B4719F")
    IBDA_GuideDataDeliveryService : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetGuideDataType( 
            /* [out] */ __RPC__out GUID *pguidDataType) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetGuideData( 
            /* [out][in] */ __RPC__inout ULONG *pulcbBufferLen,
            /* [out] */ __RPC__out BYTE *pbBuffer,
            /* [out] */ __RPC__out ULONG *pulGuideDataPercentageProgress) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RequestGuideDataUpdate( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetTuneXmlFromServiceIdx( 
            /* [in] */ ULONG64 ul64ServiceIdx,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrTuneXml) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetServices( 
            /* [out][in] */ __RPC__inout ULONG *pulcbBufferLen,
            /* [out] */ __RPC__out BYTE *pbBuffer) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetServiceInfoFromTuneXml( 
            /* [in] */ __RPC__in BSTR bstrTuneXml,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrServiceDescription) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_GuideDataDeliveryServiceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_GuideDataDeliveryService * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_GuideDataDeliveryService * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_GuideDataDeliveryService * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetGuideDataType )( 
            __RPC__in IBDA_GuideDataDeliveryService * This,
            /* [out] */ __RPC__out GUID *pguidDataType);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetGuideData )( 
            __RPC__in IBDA_GuideDataDeliveryService * This,
            /* [out][in] */ __RPC__inout ULONG *pulcbBufferLen,
            /* [out] */ __RPC__out BYTE *pbBuffer,
            /* [out] */ __RPC__out ULONG *pulGuideDataPercentageProgress);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RequestGuideDataUpdate )( 
            __RPC__in IBDA_GuideDataDeliveryService * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetTuneXmlFromServiceIdx )( 
            __RPC__in IBDA_GuideDataDeliveryService * This,
            /* [in] */ ULONG64 ul64ServiceIdx,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrTuneXml);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetServices )( 
            __RPC__in IBDA_GuideDataDeliveryService * This,
            /* [out][in] */ __RPC__inout ULONG *pulcbBufferLen,
            /* [out] */ __RPC__out BYTE *pbBuffer);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetServiceInfoFromTuneXml )( 
            __RPC__in IBDA_GuideDataDeliveryService * This,
            /* [in] */ __RPC__in BSTR bstrTuneXml,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrServiceDescription);
        
        END_INTERFACE
    } IBDA_GuideDataDeliveryServiceVtbl;

    interface IBDA_GuideDataDeliveryService
    {
        CONST_VTBL struct IBDA_GuideDataDeliveryServiceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_GuideDataDeliveryService_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_GuideDataDeliveryService_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_GuideDataDeliveryService_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_GuideDataDeliveryService_GetGuideDataType(This,pguidDataType)	\
    ( (This)->lpVtbl -> GetGuideDataType(This,pguidDataType) ) 

#define IBDA_GuideDataDeliveryService_GetGuideData(This,pulcbBufferLen,pbBuffer,pulGuideDataPercentageProgress)	\
    ( (This)->lpVtbl -> GetGuideData(This,pulcbBufferLen,pbBuffer,pulGuideDataPercentageProgress) ) 

#define IBDA_GuideDataDeliveryService_RequestGuideDataUpdate(This)	\
    ( (This)->lpVtbl -> RequestGuideDataUpdate(This) ) 

#define IBDA_GuideDataDeliveryService_GetTuneXmlFromServiceIdx(This,ul64ServiceIdx,pbstrTuneXml)	\
    ( (This)->lpVtbl -> GetTuneXmlFromServiceIdx(This,ul64ServiceIdx,pbstrTuneXml) ) 

#define IBDA_GuideDataDeliveryService_GetServices(This,pulcbBufferLen,pbBuffer)	\
    ( (This)->lpVtbl -> GetServices(This,pulcbBufferLen,pbBuffer) ) 

#define IBDA_GuideDataDeliveryService_GetServiceInfoFromTuneXml(This,bstrTuneXml,pbstrServiceDescription)	\
    ( (This)->lpVtbl -> GetServiceInfoFromTuneXml(This,bstrTuneXml,pbstrServiceDescription) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_GuideDataDeliveryService_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0038 */
/* [local] */ 

#define SID_BDA_GuideDataDeliveryService  __uuidof(IBDA_GuideDataDeliveryService)
DEFINE_GUID(CLSID_PBDA_GDDS_DATA_TYPE, /* C80C0DF3-6052-4c16-9F56-C44C21F73C45 */
0xC80C0DF3, 0x6052, 0x4c16, 0x9F, 0x56, 0xC4, 0x4C, 0x21, 0xF7, 0x3C, 0x45);


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0038_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0038_v0_0_s_ifspec;

#ifndef __IBDA_DRMService_INTERFACE_DEFINED__
#define __IBDA_DRMService_INTERFACE_DEFINED__

/* interface IBDA_DRMService */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_DRMService;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BFF6B5BB-B0AE-484c-9DCA-73528FB0B46E")
    IBDA_DRMService : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetDRM( 
            /* [in] */ __RPC__in GUID *puuidNewDrm) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetDRMStatus( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrDrmUuidList,
            /* [out] */ __RPC__out GUID *DrmUuid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_DRMServiceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_DRMService * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_DRMService * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_DRMService * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetDRM )( 
            __RPC__in IBDA_DRMService * This,
            /* [in] */ __RPC__in GUID *puuidNewDrm);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetDRMStatus )( 
            __RPC__in IBDA_DRMService * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrDrmUuidList,
            /* [out] */ __RPC__out GUID *DrmUuid);
        
        END_INTERFACE
    } IBDA_DRMServiceVtbl;

    interface IBDA_DRMService
    {
        CONST_VTBL struct IBDA_DRMServiceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_DRMService_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_DRMService_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_DRMService_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_DRMService_SetDRM(This,puuidNewDrm)	\
    ( (This)->lpVtbl -> SetDRM(This,puuidNewDrm) ) 

#define IBDA_DRMService_GetDRMStatus(This,pbstrDrmUuidList,DrmUuid)	\
    ( (This)->lpVtbl -> GetDRMStatus(This,pbstrDrmUuidList,DrmUuid) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_DRMService_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0039 */
/* [local] */ 

#define SID_BDA_DRMService __uuidof(IBDA_DRMService)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0039_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0039_v0_0_s_ifspec;

#ifndef __IBDA_WMDRMSession_INTERFACE_DEFINED__
#define __IBDA_WMDRMSession_INTERFACE_DEFINED__

/* interface IBDA_WMDRMSession */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_WMDRMSession;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4BE6FA3D-07CD-4139-8B80-8C18BA3AEC88")
    IBDA_WMDRMSession : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetStatus( 
            /* [out] */ __RPC__out ULONG *MaxCaptureToken,
            /* [out] */ __RPC__out ULONG *MaxStreamingPid,
            /* [out] */ __RPC__out ULONG *MaxLicense,
            /* [out] */ __RPC__out ULONG *MinSecurityLevel,
            /* [out] */ __RPC__out ULONG *RevInfoSequenceNumber,
            /* [out] */ __RPC__out ULONGLONG *RevInfoIssuedTime,
            /* [out] */ __RPC__out ULONG *RevInfoTTL,
            /* [out] */ __RPC__out ULONG *RevListVersion,
            /* [out] */ __RPC__out ULONG *ulState) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetRevInfo( 
            /* [in] */ ULONG ulRevInfoLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulRevInfoLen) BYTE *pbRevInfo) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetCrl( 
            /* [in] */ ULONG ulCrlLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulCrlLen) BYTE *pbCrlLen) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE TransactMessage( 
            /* [in] */ ULONG ulcbRequest,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbRequest) BYTE *pbRequest,
            /* [out][in] */ __RPC__inout ULONG *pulcbResponse,
            /* [out][in] */ __RPC__inout BYTE *pbResponse) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetLicense( 
            /* [in] */ __RPC__in GUID *uuidKey,
            /* [out][in] */ __RPC__inout ULONG *pulPackageLen,
            /* [out][in] */ __RPC__inout BYTE *pbPackage) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ReissueLicense( 
            /* [in] */ __RPC__in GUID *uuidKey) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RenewLicense( 
            /* [in] */ ULONG ulInXmrLicenseLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulInXmrLicenseLen) BYTE *pbInXmrLicense,
            /* [in] */ ULONG ulEntitlementTokenLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulEntitlementTokenLen) BYTE *pbEntitlementToken,
            /* [out] */ __RPC__out ULONG *pulDescrambleStatus,
            /* [out][in] */ __RPC__inout ULONG *pulOutXmrLicenseLen,
            /* [out][in] */ __RPC__inout BYTE *pbOutXmrLicense) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetKeyInfo( 
            /* [out][in] */ __RPC__inout ULONG *pulKeyInfoLen,
            /* [out][in] */ __RPC__inout BYTE *pbKeyInfo) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_WMDRMSessionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_WMDRMSession * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_WMDRMSession * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_WMDRMSession * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetStatus )( 
            __RPC__in IBDA_WMDRMSession * This,
            /* [out] */ __RPC__out ULONG *MaxCaptureToken,
            /* [out] */ __RPC__out ULONG *MaxStreamingPid,
            /* [out] */ __RPC__out ULONG *MaxLicense,
            /* [out] */ __RPC__out ULONG *MinSecurityLevel,
            /* [out] */ __RPC__out ULONG *RevInfoSequenceNumber,
            /* [out] */ __RPC__out ULONGLONG *RevInfoIssuedTime,
            /* [out] */ __RPC__out ULONG *RevInfoTTL,
            /* [out] */ __RPC__out ULONG *RevListVersion,
            /* [out] */ __RPC__out ULONG *ulState);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetRevInfo )( 
            __RPC__in IBDA_WMDRMSession * This,
            /* [in] */ ULONG ulRevInfoLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulRevInfoLen) BYTE *pbRevInfo);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetCrl )( 
            __RPC__in IBDA_WMDRMSession * This,
            /* [in] */ ULONG ulCrlLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulCrlLen) BYTE *pbCrlLen);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TransactMessage )( 
            __RPC__in IBDA_WMDRMSession * This,
            /* [in] */ ULONG ulcbRequest,
            /* [size_is][in] */ __RPC__in_ecount_full(ulcbRequest) BYTE *pbRequest,
            /* [out][in] */ __RPC__inout ULONG *pulcbResponse,
            /* [out][in] */ __RPC__inout BYTE *pbResponse);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetLicense )( 
            __RPC__in IBDA_WMDRMSession * This,
            /* [in] */ __RPC__in GUID *uuidKey,
            /* [out][in] */ __RPC__inout ULONG *pulPackageLen,
            /* [out][in] */ __RPC__inout BYTE *pbPackage);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ReissueLicense )( 
            __RPC__in IBDA_WMDRMSession * This,
            /* [in] */ __RPC__in GUID *uuidKey);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RenewLicense )( 
            __RPC__in IBDA_WMDRMSession * This,
            /* [in] */ ULONG ulInXmrLicenseLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulInXmrLicenseLen) BYTE *pbInXmrLicense,
            /* [in] */ ULONG ulEntitlementTokenLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulEntitlementTokenLen) BYTE *pbEntitlementToken,
            /* [out] */ __RPC__out ULONG *pulDescrambleStatus,
            /* [out][in] */ __RPC__inout ULONG *pulOutXmrLicenseLen,
            /* [out][in] */ __RPC__inout BYTE *pbOutXmrLicense);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetKeyInfo )( 
            __RPC__in IBDA_WMDRMSession * This,
            /* [out][in] */ __RPC__inout ULONG *pulKeyInfoLen,
            /* [out][in] */ __RPC__inout BYTE *pbKeyInfo);
        
        END_INTERFACE
    } IBDA_WMDRMSessionVtbl;

    interface IBDA_WMDRMSession
    {
        CONST_VTBL struct IBDA_WMDRMSessionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_WMDRMSession_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_WMDRMSession_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_WMDRMSession_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_WMDRMSession_GetStatus(This,MaxCaptureToken,MaxStreamingPid,MaxLicense,MinSecurityLevel,RevInfoSequenceNumber,RevInfoIssuedTime,RevInfoTTL,RevListVersion,ulState)	\
    ( (This)->lpVtbl -> GetStatus(This,MaxCaptureToken,MaxStreamingPid,MaxLicense,MinSecurityLevel,RevInfoSequenceNumber,RevInfoIssuedTime,RevInfoTTL,RevListVersion,ulState) ) 

#define IBDA_WMDRMSession_SetRevInfo(This,ulRevInfoLen,pbRevInfo)	\
    ( (This)->lpVtbl -> SetRevInfo(This,ulRevInfoLen,pbRevInfo) ) 

#define IBDA_WMDRMSession_SetCrl(This,ulCrlLen,pbCrlLen)	\
    ( (This)->lpVtbl -> SetCrl(This,ulCrlLen,pbCrlLen) ) 

#define IBDA_WMDRMSession_TransactMessage(This,ulcbRequest,pbRequest,pulcbResponse,pbResponse)	\
    ( (This)->lpVtbl -> TransactMessage(This,ulcbRequest,pbRequest,pulcbResponse,pbResponse) ) 

#define IBDA_WMDRMSession_GetLicense(This,uuidKey,pulPackageLen,pbPackage)	\
    ( (This)->lpVtbl -> GetLicense(This,uuidKey,pulPackageLen,pbPackage) ) 

#define IBDA_WMDRMSession_ReissueLicense(This,uuidKey)	\
    ( (This)->lpVtbl -> ReissueLicense(This,uuidKey) ) 

#define IBDA_WMDRMSession_RenewLicense(This,ulInXmrLicenseLen,pbInXmrLicense,ulEntitlementTokenLen,pbEntitlementToken,pulDescrambleStatus,pulOutXmrLicenseLen,pbOutXmrLicense)	\
    ( (This)->lpVtbl -> RenewLicense(This,ulInXmrLicenseLen,pbInXmrLicense,ulEntitlementTokenLen,pbEntitlementToken,pulDescrambleStatus,pulOutXmrLicenseLen,pbOutXmrLicense) ) 

#define IBDA_WMDRMSession_GetKeyInfo(This,pulKeyInfoLen,pbKeyInfo)	\
    ( (This)->lpVtbl -> GetKeyInfo(This,pulKeyInfoLen,pbKeyInfo) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_WMDRMSession_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0040 */
/* [local] */ 

#define SID_BDA_WMDRMSession __uuidof(IBDA_WMDRMSession)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0040_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0040_v0_0_s_ifspec;

#ifndef __IBDA_WMDRMTuner_INTERFACE_DEFINED__
#define __IBDA_WMDRMTuner_INTERFACE_DEFINED__

/* interface IBDA_WMDRMTuner */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_WMDRMTuner;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("86D979CF-A8A7-4f94-B5FB-14C0ACA68FE6")
    IBDA_WMDRMTuner : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PurchaseEntitlement( 
            /* [in] */ ULONG ulDialogRequest,
            /* [in] */ __RPC__in BSTR bstrLanguage,
            /* [in] */ ULONG ulPurchaseTokenLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulPurchaseTokenLen) BYTE *pbPurchaseToken,
            /* [out] */ __RPC__out ULONG *pulDescrambleStatus,
            /* [out][in] */ __RPC__inout ULONG *pulCaptureTokenLen,
            /* [out][in] */ __RPC__inout BYTE *pbCaptureToken) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CancelCaptureToken( 
            /* [in] */ ULONG ulCaptureTokenLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulCaptureTokenLen) BYTE *pbCaptureToken) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetPidProtection( 
            /* [in] */ ULONG ulPid,
            /* [in] */ __RPC__in GUID *uuidKey) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPidProtection( 
            /* [in] */ ULONG pulPid,
            /* [out] */ __RPC__out GUID *uuidKey) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetSyncValue( 
            /* [in] */ ULONG ulSyncValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetStartCodeProfile( 
            /* [out][in] */ __RPC__inout ULONG *pulStartCodeProfileLen,
            /* [out][in] */ __RPC__inout BYTE *pbStartCodeProfile) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_WMDRMTunerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_WMDRMTuner * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_WMDRMTuner * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_WMDRMTuner * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PurchaseEntitlement )( 
            __RPC__in IBDA_WMDRMTuner * This,
            /* [in] */ ULONG ulDialogRequest,
            /* [in] */ __RPC__in BSTR bstrLanguage,
            /* [in] */ ULONG ulPurchaseTokenLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulPurchaseTokenLen) BYTE *pbPurchaseToken,
            /* [out] */ __RPC__out ULONG *pulDescrambleStatus,
            /* [out][in] */ __RPC__inout ULONG *pulCaptureTokenLen,
            /* [out][in] */ __RPC__inout BYTE *pbCaptureToken);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CancelCaptureToken )( 
            __RPC__in IBDA_WMDRMTuner * This,
            /* [in] */ ULONG ulCaptureTokenLen,
            /* [size_is][in] */ __RPC__in_ecount_full(ulCaptureTokenLen) BYTE *pbCaptureToken);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetPidProtection )( 
            __RPC__in IBDA_WMDRMTuner * This,
            /* [in] */ ULONG ulPid,
            /* [in] */ __RPC__in GUID *uuidKey);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPidProtection )( 
            __RPC__in IBDA_WMDRMTuner * This,
            /* [in] */ ULONG pulPid,
            /* [out] */ __RPC__out GUID *uuidKey);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetSyncValue )( 
            __RPC__in IBDA_WMDRMTuner * This,
            /* [in] */ ULONG ulSyncValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetStartCodeProfile )( 
            __RPC__in IBDA_WMDRMTuner * This,
            /* [out][in] */ __RPC__inout ULONG *pulStartCodeProfileLen,
            /* [out][in] */ __RPC__inout BYTE *pbStartCodeProfile);
        
        END_INTERFACE
    } IBDA_WMDRMTunerVtbl;

    interface IBDA_WMDRMTuner
    {
        CONST_VTBL struct IBDA_WMDRMTunerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_WMDRMTuner_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_WMDRMTuner_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_WMDRMTuner_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_WMDRMTuner_PurchaseEntitlement(This,ulDialogRequest,bstrLanguage,ulPurchaseTokenLen,pbPurchaseToken,pulDescrambleStatus,pulCaptureTokenLen,pbCaptureToken)	\
    ( (This)->lpVtbl -> PurchaseEntitlement(This,ulDialogRequest,bstrLanguage,ulPurchaseTokenLen,pbPurchaseToken,pulDescrambleStatus,pulCaptureTokenLen,pbCaptureToken) ) 

#define IBDA_WMDRMTuner_CancelCaptureToken(This,ulCaptureTokenLen,pbCaptureToken)	\
    ( (This)->lpVtbl -> CancelCaptureToken(This,ulCaptureTokenLen,pbCaptureToken) ) 

#define IBDA_WMDRMTuner_SetPidProtection(This,ulPid,uuidKey)	\
    ( (This)->lpVtbl -> SetPidProtection(This,ulPid,uuidKey) ) 

#define IBDA_WMDRMTuner_GetPidProtection(This,pulPid,uuidKey)	\
    ( (This)->lpVtbl -> GetPidProtection(This,pulPid,uuidKey) ) 

#define IBDA_WMDRMTuner_SetSyncValue(This,ulSyncValue)	\
    ( (This)->lpVtbl -> SetSyncValue(This,ulSyncValue) ) 

#define IBDA_WMDRMTuner_GetStartCodeProfile(This,pulStartCodeProfileLen,pbStartCodeProfile)	\
    ( (This)->lpVtbl -> GetStartCodeProfile(This,pulStartCodeProfileLen,pbStartCodeProfile) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_WMDRMTuner_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0041 */
/* [local] */ 

#define SID_BDA_WMDRMTuner __uuidof(IBDA_WMDRMTuner)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0041_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0041_v0_0_s_ifspec;

#ifndef __IBDA_DRIDRMService_INTERFACE_DEFINED__
#define __IBDA_DRIDRMService_INTERFACE_DEFINED__

/* interface IBDA_DRIDRMService */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_DRIDRMService;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1F9BC2A5-44A3-4c52-AAB1-0BBCE5A1381D")
    IBDA_DRIDRMService : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetDRM( 
            /* [in] */ __RPC__in BSTR bstrNewDrm) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetDRMStatus( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrDrmUuidList,
            /* [out] */ __RPC__out GUID *DrmUuid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPairingStatus( 
            /* [out][in] */ __RPC__inout BDA_DrmPairingError *penumPairingStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_DRIDRMServiceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_DRIDRMService * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_DRIDRMService * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_DRIDRMService * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetDRM )( 
            __RPC__in IBDA_DRIDRMService * This,
            /* [in] */ __RPC__in BSTR bstrNewDrm);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetDRMStatus )( 
            __RPC__in IBDA_DRIDRMService * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrDrmUuidList,
            /* [out] */ __RPC__out GUID *DrmUuid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPairingStatus )( 
            __RPC__in IBDA_DRIDRMService * This,
            /* [out][in] */ __RPC__inout BDA_DrmPairingError *penumPairingStatus);
        
        END_INTERFACE
    } IBDA_DRIDRMServiceVtbl;

    interface IBDA_DRIDRMService
    {
        CONST_VTBL struct IBDA_DRIDRMServiceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_DRIDRMService_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_DRIDRMService_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_DRIDRMService_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_DRIDRMService_SetDRM(This,bstrNewDrm)	\
    ( (This)->lpVtbl -> SetDRM(This,bstrNewDrm) ) 

#define IBDA_DRIDRMService_GetDRMStatus(This,pbstrDrmUuidList,DrmUuid)	\
    ( (This)->lpVtbl -> GetDRMStatus(This,pbstrDrmUuidList,DrmUuid) ) 

#define IBDA_DRIDRMService_GetPairingStatus(This,penumPairingStatus)	\
    ( (This)->lpVtbl -> GetPairingStatus(This,penumPairingStatus) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_DRIDRMService_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0042 */
/* [local] */ 

#define SID_BDA_DRIDRMService __uuidof(IBDA_DRIDRMService)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0042_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0042_v0_0_s_ifspec;

#ifndef __IBDA_DRIWMDRMSession_INTERFACE_DEFINED__
#define __IBDA_DRIWMDRMSession_INTERFACE_DEFINED__

/* interface IBDA_DRIWMDRMSession */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_DRIWMDRMSession;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("05C690F8-56DB-4bb2-B053-79C12098BB26")
    IBDA_DRIWMDRMSession : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AcknowledgeLicense( 
            /* [in] */ HRESULT hrLicenseAck) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ProcessLicenseChallenge( 
            /* [in] */ DWORD dwcbLicenseMessage,
            /* [size_is][in] */ __RPC__in_ecount_full(dwcbLicenseMessage) BYTE *pbLicenseMessage,
            /* [out][in] */ __RPC__inout DWORD *pdwcbLicenseResponse,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(*pdwcbLicenseResponse) BYTE **ppbLicenseResponse) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ProcessRegistrationChallenge( 
            /* [in] */ DWORD dwcbRegistrationMessage,
            /* [size_is][in] */ __RPC__in_ecount_full(dwcbRegistrationMessage) BYTE *pbRegistrationMessage,
            /* [out][in] */ __RPC__inout DWORD *pdwcbRegistrationResponse,
            /* [out][in] */ __RPC__deref_inout_opt BYTE **ppbRegistrationResponse) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetRevInfo( 
            /* [in] */ DWORD dwRevInfoLen,
            /* [size_is][in] */ __RPC__in_ecount_full(dwRevInfoLen) BYTE *pbRevInfo,
            /* [out][in] */ __RPC__inout DWORD *pdwResponse) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetCrl( 
            /* [in] */ DWORD dwCrlLen,
            /* [size_is][in] */ __RPC__in_ecount_full(dwCrlLen) BYTE *pbCrlLen,
            /* [out][in] */ __RPC__inout DWORD *pdwResponse) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetHMSAssociationData( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetLastCardeaError( 
            /* [out][in] */ __RPC__inout DWORD *pdwError) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_DRIWMDRMSessionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_DRIWMDRMSession * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_DRIWMDRMSession * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_DRIWMDRMSession * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AcknowledgeLicense )( 
            __RPC__in IBDA_DRIWMDRMSession * This,
            /* [in] */ HRESULT hrLicenseAck);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ProcessLicenseChallenge )( 
            __RPC__in IBDA_DRIWMDRMSession * This,
            /* [in] */ DWORD dwcbLicenseMessage,
            /* [size_is][in] */ __RPC__in_ecount_full(dwcbLicenseMessage) BYTE *pbLicenseMessage,
            /* [out][in] */ __RPC__inout DWORD *pdwcbLicenseResponse,
            /* [size_is][out][in] */ __RPC__inout_ecount_full(*pdwcbLicenseResponse) BYTE **ppbLicenseResponse);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ProcessRegistrationChallenge )( 
            __RPC__in IBDA_DRIWMDRMSession * This,
            /* [in] */ DWORD dwcbRegistrationMessage,
            /* [size_is][in] */ __RPC__in_ecount_full(dwcbRegistrationMessage) BYTE *pbRegistrationMessage,
            /* [out][in] */ __RPC__inout DWORD *pdwcbRegistrationResponse,
            /* [out][in] */ __RPC__deref_inout_opt BYTE **ppbRegistrationResponse);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetRevInfo )( 
            __RPC__in IBDA_DRIWMDRMSession * This,
            /* [in] */ DWORD dwRevInfoLen,
            /* [size_is][in] */ __RPC__in_ecount_full(dwRevInfoLen) BYTE *pbRevInfo,
            /* [out][in] */ __RPC__inout DWORD *pdwResponse);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetCrl )( 
            __RPC__in IBDA_DRIWMDRMSession * This,
            /* [in] */ DWORD dwCrlLen,
            /* [size_is][in] */ __RPC__in_ecount_full(dwCrlLen) BYTE *pbCrlLen,
            /* [out][in] */ __RPC__inout DWORD *pdwResponse);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetHMSAssociationData )( 
            __RPC__in IBDA_DRIWMDRMSession * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetLastCardeaError )( 
            __RPC__in IBDA_DRIWMDRMSession * This,
            /* [out][in] */ __RPC__inout DWORD *pdwError);
        
        END_INTERFACE
    } IBDA_DRIWMDRMSessionVtbl;

    interface IBDA_DRIWMDRMSession
    {
        CONST_VTBL struct IBDA_DRIWMDRMSessionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_DRIWMDRMSession_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_DRIWMDRMSession_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_DRIWMDRMSession_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_DRIWMDRMSession_AcknowledgeLicense(This,hrLicenseAck)	\
    ( (This)->lpVtbl -> AcknowledgeLicense(This,hrLicenseAck) ) 

#define IBDA_DRIWMDRMSession_ProcessLicenseChallenge(This,dwcbLicenseMessage,pbLicenseMessage,pdwcbLicenseResponse,ppbLicenseResponse)	\
    ( (This)->lpVtbl -> ProcessLicenseChallenge(This,dwcbLicenseMessage,pbLicenseMessage,pdwcbLicenseResponse,ppbLicenseResponse) ) 

#define IBDA_DRIWMDRMSession_ProcessRegistrationChallenge(This,dwcbRegistrationMessage,pbRegistrationMessage,pdwcbRegistrationResponse,ppbRegistrationResponse)	\
    ( (This)->lpVtbl -> ProcessRegistrationChallenge(This,dwcbRegistrationMessage,pbRegistrationMessage,pdwcbRegistrationResponse,ppbRegistrationResponse) ) 

#define IBDA_DRIWMDRMSession_SetRevInfo(This,dwRevInfoLen,pbRevInfo,pdwResponse)	\
    ( (This)->lpVtbl -> SetRevInfo(This,dwRevInfoLen,pbRevInfo,pdwResponse) ) 

#define IBDA_DRIWMDRMSession_SetCrl(This,dwCrlLen,pbCrlLen,pdwResponse)	\
    ( (This)->lpVtbl -> SetCrl(This,dwCrlLen,pbCrlLen,pdwResponse) ) 

#define IBDA_DRIWMDRMSession_GetHMSAssociationData(This)	\
    ( (This)->lpVtbl -> GetHMSAssociationData(This) ) 

#define IBDA_DRIWMDRMSession_GetLastCardeaError(This,pdwError)	\
    ( (This)->lpVtbl -> GetLastCardeaError(This,pdwError) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_DRIWMDRMSession_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0043 */
/* [local] */ 

#define SID_BDA_DRIWMDRMSession __uuidof(IBDA_DRIWMDRMSession)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0043_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0043_v0_0_s_ifspec;

#ifndef __IBDA_MUX_INTERFACE_DEFINED__
#define __IBDA_MUX_INTERFACE_DEFINED__

/* interface IBDA_MUX */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_MUX;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("942AAFEC-4C05-4c74-B8EB-8706C2A4943F")
    IBDA_MUX : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetPidList( 
            /* [in] */ ULONG ulPidListCount,
            /* [size_is][in] */ __RPC__in_ecount_full(ulPidListCount) BDA_MUX_PIDLISTITEM *pbPidListBuffer) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPidList( 
            /* [out][in] */ __RPC__inout ULONG *pulPidListCount,
            /* [out][in] */ __RPC__inout BDA_MUX_PIDLISTITEM *pbPidListBuffer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_MUXVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_MUX * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_MUX * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_MUX * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetPidList )( 
            __RPC__in IBDA_MUX * This,
            /* [in] */ ULONG ulPidListCount,
            /* [size_is][in] */ __RPC__in_ecount_full(ulPidListCount) BDA_MUX_PIDLISTITEM *pbPidListBuffer);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPidList )( 
            __RPC__in IBDA_MUX * This,
            /* [out][in] */ __RPC__inout ULONG *pulPidListCount,
            /* [out][in] */ __RPC__inout BDA_MUX_PIDLISTITEM *pbPidListBuffer);
        
        END_INTERFACE
    } IBDA_MUXVtbl;

    interface IBDA_MUX
    {
        CONST_VTBL struct IBDA_MUXVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_MUX_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_MUX_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_MUX_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_MUX_SetPidList(This,ulPidListCount,pbPidListBuffer)	\
    ( (This)->lpVtbl -> SetPidList(This,ulPidListCount,pbPidListBuffer) ) 

#define IBDA_MUX_GetPidList(This,pulPidListCount,pbPidListBuffer)	\
    ( (This)->lpVtbl -> GetPidList(This,pulPidListCount,pbPidListBuffer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_MUX_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0044 */
/* [local] */ 

#define SID_BDA_MUX __uuidof(IBDA_MUX)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0044_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0044_v0_0_s_ifspec;

#ifndef __IBDA_TransportStreamSelector_INTERFACE_DEFINED__
#define __IBDA_TransportStreamSelector_INTERFACE_DEFINED__

/* interface IBDA_TransportStreamSelector */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_TransportStreamSelector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1DCFAFE9-B45E-41b3-BB2A-561EB129AE98")
    IBDA_TransportStreamSelector : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetTSID( 
            /* [in] */ USHORT usTSID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetTSInformation( 
            /* [out][in] */ __RPC__inout ULONG *pulTSInformationBufferLen,
            /* [size_is][out] */ __RPC__out_ecount_full(*pulTSInformationBufferLen) BYTE *pbTSInformationBuffer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_TransportStreamSelectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_TransportStreamSelector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_TransportStreamSelector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_TransportStreamSelector * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetTSID )( 
            __RPC__in IBDA_TransportStreamSelector * This,
            /* [in] */ USHORT usTSID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetTSInformation )( 
            __RPC__in IBDA_TransportStreamSelector * This,
            /* [out][in] */ __RPC__inout ULONG *pulTSInformationBufferLen,
            /* [size_is][out] */ __RPC__out_ecount_full(*pulTSInformationBufferLen) BYTE *pbTSInformationBuffer);
        
        END_INTERFACE
    } IBDA_TransportStreamSelectorVtbl;

    interface IBDA_TransportStreamSelector
    {
        CONST_VTBL struct IBDA_TransportStreamSelectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_TransportStreamSelector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_TransportStreamSelector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_TransportStreamSelector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_TransportStreamSelector_SetTSID(This,usTSID)	\
    ( (This)->lpVtbl -> SetTSID(This,usTSID) ) 

#define IBDA_TransportStreamSelector_GetTSInformation(This,pulTSInformationBufferLen,pbTSInformationBuffer)	\
    ( (This)->lpVtbl -> GetTSInformation(This,pulTSInformationBufferLen,pbTSInformationBuffer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_TransportStreamSelector_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0045 */
/* [local] */ 

#define SID_BDA_TransportStreamSelector __uuidof(IBDA_TransportStreamSelector)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0045_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0045_v0_0_s_ifspec;

#ifndef __IBDA_UserActivityService_INTERFACE_DEFINED__
#define __IBDA_UserActivityService_INTERFACE_DEFINED__

/* interface IBDA_UserActivityService */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_UserActivityService;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("53B14189-E478-4b7a-A1FF-506DB4B99DFE")
    IBDA_UserActivityService : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetCurrentTunerUseReason( 
            /* [in] */ DWORD dwUseReason) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetUserActivityInterval( 
            /* [out] */ __RPC__out DWORD *pdwActivityInterval) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UserActivityDetected( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_UserActivityServiceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_UserActivityService * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_UserActivityService * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_UserActivityService * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetCurrentTunerUseReason )( 
            __RPC__in IBDA_UserActivityService * This,
            /* [in] */ DWORD dwUseReason);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetUserActivityInterval )( 
            __RPC__in IBDA_UserActivityService * This,
            /* [out] */ __RPC__out DWORD *pdwActivityInterval);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UserActivityDetected )( 
            __RPC__in IBDA_UserActivityService * This);
        
        END_INTERFACE
    } IBDA_UserActivityServiceVtbl;

    interface IBDA_UserActivityService
    {
        CONST_VTBL struct IBDA_UserActivityServiceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_UserActivityService_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_UserActivityService_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_UserActivityService_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_UserActivityService_SetCurrentTunerUseReason(This,dwUseReason)	\
    ( (This)->lpVtbl -> SetCurrentTunerUseReason(This,dwUseReason) ) 

#define IBDA_UserActivityService_GetUserActivityInterval(This,pdwActivityInterval)	\
    ( (This)->lpVtbl -> GetUserActivityInterval(This,pdwActivityInterval) ) 

#define IBDA_UserActivityService_UserActivityDetected(This)	\
    ( (This)->lpVtbl -> UserActivityDetected(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_UserActivityService_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bdaiface_0000_0046 */
/* [local] */ 

#define SID_BDA_UserActivityService __uuidof(IBDA_UserActivityService)


extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0046_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdaiface_0000_0046_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bcrypt.h ===
//+---------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (C) Microsoft Corporation, 2004.
//
//  File:       bcrypt.h
//
//  Contents:   Cryptographic Primitive API Prototypes and Definitions
//
//----------------------------------------------------------------------------

#ifndef __BCRYPT_H__
#define __BCRYPT_H__

#ifdef __cplusplus
extern "C" {
#endif

#ifndef WINAPI
#define WINAPI __stdcall
#endif

#ifndef _NTDEF_
typedef __success(return >= 0) LONG NTSTATUS;
typedef NTSTATUS *PNTSTATUS;
#endif

#ifndef BCRYPT_SUCCESS
#define BCRYPT_SUCCESS(Status) (((NTSTATUS)(Status)) >= 0)
#endif

#ifndef CONST
#define CONST const
#endif

#ifndef IN
#define IN
#endif

#ifndef OUT
#define OUT
#endif

#ifndef OPTIONAL
#define OPTIONAL
#endif

//
//  Alignment macros
//

//
// BCRYPT_OBJECT_ALIGNMENT must be a power of 2
// We align all our internal data structures to 16 to
// allow fast XMM memory accesses.
// BCrypt callers do not need to take any alignment precautions.
//
#define BCRYPT_OBJECT_ALIGNMENT    16

//
// BCRYPT_STRUCT_ALIGNMENT is an alignment macro that we no longer use.
// It used to align declspec(align(4)) on x86 and declspec(align(8)) on x64/ia64 but
// all structures that used it contained a pointer so they were already 4/8 aligned.
//
#define BCRYPT_STRUCT_ALIGNMENT

//
// DeriveKey KDF Types
//
#define BCRYPT_KDF_HASH                     L"HASH"
#define BCRYPT_KDF_HMAC                     L"HMAC"
#define BCRYPT_KDF_TLS_PRF                  L"TLS_PRF"
#define BCRYPT_KDF_SP80056A_CONCAT          L"SP800_56A_CONCAT"

//
// DeriveKey KDF BufferTypes
//
// For BCRYPT_KDF_HASH and BCRYPT_KDF_HMAC operations, there may be an arbitrary
// number of KDF_SECRET_PREPEND and KDF_SECRET_APPEND buffertypes in the
// parameter list.  The BufferTypes are processed in order of appearence
// within the parameter list.
//
#define KDF_HASH_ALGORITHM      0x0
#define KDF_SECRET_PREPEND      0x1
#define KDF_SECRET_APPEND       0x2
#define KDF_HMAC_KEY            0x3
#define KDF_TLS_PRF_LABEL       0x4
#define KDF_TLS_PRF_SEED        0x5
#define KDF_SECRET_HANDLE       0x6
#define KDF_TLS_PRF_PROTOCOL    0x7
#define KDF_ALGORITHMID         0x8
#define KDF_PARTYUINFO          0x9
#define KDF_PARTYVINFO          0xA
#define KDF_SUPPPUBINFO         0xB
#define KDF_SUPPPRIVINFO        0xC

//
// DeriveKey Flags:
//
// KDF_USE_SECRET_AS_HMAC_KEY_FLAG causes the secret agreement to serve also
// as the HMAC key.  If this flag is used, the KDF_HMAC_KEY parameter should
// NOT be specified.
//
#define KDF_USE_SECRET_AS_HMAC_KEY_FLAG 0x1

//
// BCrypt structs
//

typedef struct __BCRYPT_KEY_LENGTHS_STRUCT
{
    ULONG   dwMinLength;
    ULONG   dwMaxLength;
    ULONG   dwIncrement;
} BCRYPT_KEY_LENGTHS_STRUCT;

typedef BCRYPT_KEY_LENGTHS_STRUCT BCRYPT_AUTH_TAG_LENGTHS_STRUCT;

typedef struct _BCRYPT_OID
{
    ULONG   cbOID;
    PUCHAR  pbOID;
} BCRYPT_OID;

typedef struct _BCRYPT_OID_LIST
{
    ULONG       dwOIDCount;
    BCRYPT_OID  *pOIDs;
} BCRYPT_OID_LIST;

typedef struct _BCRYPT_PKCS1_PADDING_INFO
{
    LPCWSTR pszAlgId;
} BCRYPT_PKCS1_PADDING_INFO;

typedef struct _BCRYPT_PSS_PADDING_INFO
{
    LPCWSTR pszAlgId;
    ULONG   cbSalt;
} BCRYPT_PSS_PADDING_INFO;

typedef struct _BCRYPT_OAEP_PADDING_INFO
{
    LPCWSTR pszAlgId;
    PUCHAR   pbLabel;
    ULONG   cbLabel;
} BCRYPT_OAEP_PADDING_INFO;

#define BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION  1

#define BCRYPT_AUTH_MODE_CHAIN_CALLS_FLAG   0x00000001
#define BCRYPT_AUTH_MODE_IN_PROGRESS_FLAG   0x00000002

typedef struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO
{
    ULONG       cbSize;
    ULONG       dwInfoVersion;
    PUCHAR      pbNonce;
    ULONG       cbNonce;
    PUCHAR      pbAuthData;
    ULONG       cbAuthData;
    PUCHAR      pbTag;
    ULONG       cbTag;
    PUCHAR      pbMacContext;
    ULONG       cbMacContext;
    ULONG       cbAAD;
    ULONGLONG   cbData;
    ULONG       dwFlags;
} BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO, *PBCRYPT_AUTHENTICATED_CIPHER_MODE_INFO;

#define BCRYPT_INIT_AUTH_MODE_INFO(_AUTH_INFO_STRUCT_)    \
            RtlZeroMemory((&_AUTH_INFO_STRUCT_), sizeof(BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO));  \
            (_AUTH_INFO_STRUCT_).cbSize = sizeof(BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO);          \
            (_AUTH_INFO_STRUCT_).dwInfoVersion = BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION;

//
// BCrypt String Properties
//

// BCrypt(Import/Export)Key BLOB types
#define BCRYPT_OPAQUE_KEY_BLOB      L"OpaqueKeyBlob"
#define BCRYPT_KEY_DATA_BLOB        L"KeyDataBlob"
#define BCRYPT_AES_WRAP_KEY_BLOB    L"Rfc3565KeyWrapBlob"

// BCryptGetProperty strings
#define BCRYPT_OBJECT_LENGTH        L"ObjectLength"
#define BCRYPT_ALGORITHM_NAME       L"AlgorithmName"
#define BCRYPT_PROVIDER_HANDLE      L"ProviderHandle"
#define BCRYPT_CHAINING_MODE        L"ChainingMode"
#define BCRYPT_BLOCK_LENGTH         L"BlockLength"
#define BCRYPT_KEY_LENGTH           L"KeyLength"
#define BCRYPT_KEY_OBJECT_LENGTH    L"KeyObjectLength"
#define BCRYPT_KEY_STRENGTH         L"KeyStrength"
#define BCRYPT_KEY_LENGTHS          L"KeyLengths"
#define BCRYPT_BLOCK_SIZE_LIST      L"BlockSizeList"
#define BCRYPT_EFFECTIVE_KEY_LENGTH L"EffectiveKeyLength"
#define BCRYPT_HASH_LENGTH          L"HashDigestLength"
#define BCRYPT_HASH_OID_LIST        L"HashOIDList"
#define BCRYPT_PADDING_SCHEMES      L"PaddingSchemes"
#define BCRYPT_SIGNATURE_LENGTH     L"SignatureLength"
#define BCRYPT_HASH_BLOCK_LENGTH    L"HashBlockLength"
#define BCRYPT_AUTH_TAG_LENGTH      L"AuthTagLength"
#define BCRYPT_PRIMITIVE_TYPE       L"PrimitiveType"
#define BCRYPT_IS_KEYED_HASH        L"IsKeyedHash"

// BCryptSetProperty strings
#define BCRYPT_INITIALIZATION_VECTOR    L"IV"


// Property Strings
#define BCRYPT_CHAIN_MODE_NA        L"ChainingModeN/A"
#define BCRYPT_CHAIN_MODE_CBC       L"ChainingModeCBC"
#define BCRYPT_CHAIN_MODE_ECB       L"ChainingModeECB"
#define BCRYPT_CHAIN_MODE_CFB       L"ChainingModeCFB"
#define BCRYPT_CHAIN_MODE_CCM       L"ChainingModeCCM"
#define BCRYPT_CHAIN_MODE_GCM       L"ChainingModeGCM"

// Supported RSA Padding Types
#define BCRYPT_SUPPORTED_PAD_ROUTER     0x00000001
#define BCRYPT_SUPPORTED_PAD_PKCS1_ENC  0x00000002
#define BCRYPT_SUPPORTED_PAD_PKCS1_SIG  0x00000004
#define BCRYPT_SUPPORTED_PAD_OAEP       0x00000008
#define BCRYPT_SUPPORTED_PAD_PSS        0x00000010

//
//      BCrypt Flags
//

#define BCRYPT_PROV_DISPATCH        0x00000001  // BCryptOpenAlgorithmProvider

#define BCRYPT_BLOCK_PADDING        0x00000001  // BCryptEncrypt/Decrypt

// RSA padding schemes
#define BCRYPT_PAD_NONE             0x00000001
#define BCRYPT_PAD_PKCS1            0x00000002  // BCryptEncrypt/Decrypt BCryptSignHash/VerifySignature
#define BCRYPT_PAD_OAEP             0x00000004  // BCryptEncrypt/Decrypt
#define BCRYPT_PAD_PSS              0x00000008  // BCryptSignHash/VerifySignature


#define BCRYPTBUFFER_VERSION        0

typedef struct _BCryptBuffer {
    ULONG   cbBuffer;             // Length of buffer, in bytes
    ULONG   BufferType;           // Buffer type
    PVOID   pvBuffer;             // Pointer to buffer
} BCryptBuffer, * PBCryptBuffer;

typedef struct _BCryptBufferDesc {
    ULONG   ulVersion;            // Version number
    ULONG   cBuffers;             // Number of buffers
    PBCryptBuffer pBuffers;       // Pointer to array of buffers
} BCryptBufferDesc, * PBCryptBufferDesc;


//
// Primitive handles
//

typedef PVOID BCRYPT_HANDLE;
typedef PVOID BCRYPT_ALG_HANDLE;
typedef PVOID BCRYPT_KEY_HANDLE;
typedef PVOID BCRYPT_HASH_HANDLE;
typedef PVOID BCRYPT_SECRET_HANDLE;


//
// Structures used to represent key blobs.
//

#define BCRYPT_PUBLIC_KEY_BLOB       L"PUBLICBLOB"
#define BCRYPT_PRIVATE_KEY_BLOB      L"PRIVATEBLOB"

typedef struct _BCRYPT_KEY_BLOB
{
    ULONG   Magic;
} BCRYPT_KEY_BLOB;

// The BCRYPT_RSAPUBLIC_BLOB and BCRYPT_RSAPRIVATE_BLOB blob types are used
// to transport plaintext RSA keys. These blob types will be supported by
// all RSA primitive providers.
// The BCRYPT_RSAPRIVATE_BLOB includes the following values:
// Public Exponent
// Modulus
// Prime1
// Prime2

#define BCRYPT_RSAPUBLIC_BLOB       L"RSAPUBLICBLOB"
#define BCRYPT_RSAPRIVATE_BLOB      L"RSAPRIVATEBLOB"
#define LEGACY_RSAPUBLIC_BLOB       L"CAPIPUBLICBLOB"
#define LEGACY_RSAPRIVATE_BLOB      L"CAPIPRIVATEBLOB"

#define BCRYPT_RSAPUBLIC_MAGIC      0x31415352  // RSA1
#define BCRYPT_RSAPRIVATE_MAGIC     0x32415352  // RSA2

typedef struct _BCRYPT_RSAKEY_BLOB
{
    ULONG   Magic;
    ULONG   BitLength;
    ULONG   cbPublicExp;
    ULONG   cbModulus;
    ULONG   cbPrime1;
    ULONG   cbPrime2;
} BCRYPT_RSAKEY_BLOB;

// The BCRYPT_RSAFULLPRIVATE_BLOB blob type is used to transport
// plaintext private RSA keys.  It includes the following values:
// Public Exponent
// Modulus
// Prime1
// Prime2
// Private Exponent mod (Prime1 - 1)
// Private Exponent mod (Prime2 - 1)
// Inverse of Prime2 mod Prime1
// PrivateExponent
#define BCRYPT_RSAFULLPRIVATE_BLOB      L"RSAFULLPRIVATEBLOB"

#define BCRYPT_RSAFULLPRIVATE_MAGIC     0x33415352  // RSA3

// The BCRYPT_ECCPUBLIC_BLOB and BCRYPT_ECCPRIVATE_BLOB blob types are used
// to transport plaintext ECC keys. These blob types will be supported by
// all ECC primitive providers.
#define BCRYPT_ECCPUBLIC_BLOB           L"ECCPUBLICBLOB"
#define BCRYPT_ECCPRIVATE_BLOB          L"ECCPRIVATEBLOB"

#define BCRYPT_ECDH_PUBLIC_P256_MAGIC   0x314B4345  // ECK1
#define BCRYPT_ECDH_PRIVATE_P256_MAGIC  0x324B4345  // ECK2
#define BCRYPT_ECDH_PUBLIC_P384_MAGIC   0x334B4345  // ECK3
#define BCRYPT_ECDH_PRIVATE_P384_MAGIC  0x344B4345  // ECK4
#define BCRYPT_ECDH_PUBLIC_P521_MAGIC   0x354B4345  // ECK5
#define BCRYPT_ECDH_PRIVATE_P521_MAGIC  0x364B4345  // ECK6

#define BCRYPT_ECDSA_PUBLIC_P256_MAGIC  0x31534345  // ECS1
#define BCRYPT_ECDSA_PRIVATE_P256_MAGIC 0x32534345  // ECS2
#define BCRYPT_ECDSA_PUBLIC_P384_MAGIC  0x33534345  // ECS3
#define BCRYPT_ECDSA_PRIVATE_P384_MAGIC 0x34534345  // ECS4
#define BCRYPT_ECDSA_PUBLIC_P521_MAGIC  0x35534345  // ECS5
#define BCRYPT_ECDSA_PRIVATE_P521_MAGIC 0x36534345  // ECS6

typedef struct _BCRYPT_ECCKEY_BLOB
{
    ULONG   dwMagic;
    ULONG   cbKey;
} BCRYPT_ECCKEY_BLOB, *PBCRYPT_ECCKEY_BLOB;

// The BCRYPT_DH_PUBLIC_BLOB and BCRYPT_DH_PRIVATE_BLOB blob types are used
// to transport plaintext DH keys. These blob types will be supported by
// all DH primitive providers.
#define BCRYPT_DH_PUBLIC_BLOB           L"DHPUBLICBLOB"
#define BCRYPT_DH_PRIVATE_BLOB          L"DHPRIVATEBLOB"
#define LEGACY_DH_PUBLIC_BLOB           L"CAPIDHPUBLICBLOB"
#define LEGACY_DH_PRIVATE_BLOB          L"CAPIDHPRIVATEBLOB"

#define BCRYPT_DH_PUBLIC_MAGIC          0x42504844  // DHPB
#define BCRYPT_DH_PRIVATE_MAGIC         0x56504844  // DHPV

typedef struct _BCRYPT_DH_KEY_BLOB
{
    ULONG   dwMagic;
    ULONG   cbKey;
} BCRYPT_DH_KEY_BLOB, *PBCRYPT_DH_KEY_BLOB;

// Property Strings for DH
#define BCRYPT_DH_PARAMETERS            L"DHParameters"

#define BCRYPT_DH_PARAMETERS_MAGIC      0x4d504844  // DHPM

typedef __struct_bcount(cbLength) struct _BCRYPT_DH_PARAMETER_HEADER
{
    ULONG           cbLength;
    ULONG           dwMagic;
    ULONG           cbKeyLength;
} BCRYPT_DH_PARAMETER_HEADER;


// The BCRYPT_DSA_PUBLIC_BLOB and BCRYPT_DSA_PRIVATE_BLOB blob types are used
// to transport plaintext DSA keys. These blob types will be supported by
// all DSA primitive providers.
#define BCRYPT_DSA_PUBLIC_BLOB          L"DSAPUBLICBLOB"
#define BCRYPT_DSA_PRIVATE_BLOB         L"DSAPRIVATEBLOB"
#define LEGACY_DSA_PUBLIC_BLOB          L"CAPIDSAPUBLICBLOB"
#define LEGACY_DSA_PRIVATE_BLOB         L"CAPIDSAPRIVATEBLOB"
#define LEGACY_DSA_V2_PUBLIC_BLOB       L"V2CAPIDSAPUBLICBLOB"
#define LEGACY_DSA_V2_PRIVATE_BLOB      L"V2CAPIDSAPRIVATEBLOB"

#define BCRYPT_DSA_PUBLIC_MAGIC         0x42505344  // DSPB
#define BCRYPT_DSA_PRIVATE_MAGIC        0x56505344  // DSPV

typedef struct _BCRYPT_DSA_KEY_BLOB
{
    ULONG   dwMagic;
    ULONG   cbKey;
    UCHAR   Count[4];
    UCHAR   Seed[20];
    UCHAR   q[20];
} BCRYPT_DSA_KEY_BLOB, *PBCRYPT_DSA_KEY_BLOB;

typedef struct _BCRYPT_KEY_DATA_BLOB_HEADER
{
    ULONG   dwMagic;
    ULONG   dwVersion;
    ULONG   cbKeyData;
} BCRYPT_KEY_DATA_BLOB_HEADER, *PBCRYPT_KEY_DATA_BLOB_HEADER;

#define BCRYPT_KEY_DATA_BLOB_MAGIC       0x4d42444b //Key Data Blob Magic (KDBM)

#define BCRYPT_KEY_DATA_BLOB_VERSION1    0x1

// Property Strings for DSA
#define BCRYPT_DSA_PARAMETERS       L"DSAParameters"

#define BCRYPT_DSA_PARAMETERS_MAGIC 0x4d505344  // DSPM

typedef struct _BCRYPT_DSA_PARAMETER_HEADER
{
    ULONG           cbLength;
    ULONG           dwMagic;
    ULONG           cbKeyLength;
    UCHAR           Count[4];
    UCHAR           Seed[20];
    UCHAR           q[20];
} BCRYPT_DSA_PARAMETER_HEADER;

//
// Microsoft built-in providers.
//

#define MS_PRIMITIVE_PROVIDER                   L"Microsoft Primitive Provider"

//
// Common algorithm identifiers.
//

#define BCRYPT_RSA_ALGORITHM                    L"RSA"
#define BCRYPT_RSA_SIGN_ALGORITHM               L"RSA_SIGN"
#define BCRYPT_DH_ALGORITHM                     L"DH"
#define BCRYPT_DSA_ALGORITHM                    L"DSA"
#define BCRYPT_RC2_ALGORITHM                    L"RC2"
#define BCRYPT_RC4_ALGORITHM                    L"RC4"
#define BCRYPT_AES_ALGORITHM                    L"AES"
#define BCRYPT_DES_ALGORITHM                    L"DES"
#define BCRYPT_DESX_ALGORITHM                   L"DESX"
#define BCRYPT_3DES_ALGORITHM                   L"3DES"
#define BCRYPT_3DES_112_ALGORITHM               L"3DES_112"
#define BCRYPT_MD2_ALGORITHM                    L"MD2"
#define BCRYPT_MD4_ALGORITHM                    L"MD4"
#define BCRYPT_MD5_ALGORITHM                    L"MD5"
#define BCRYPT_SHA1_ALGORITHM                   L"SHA1"
#define BCRYPT_SHA256_ALGORITHM                 L"SHA256"
#define BCRYPT_SHA384_ALGORITHM                 L"SHA384"
#define BCRYPT_SHA512_ALGORITHM                 L"SHA512"
#define BCRYPT_AES_GMAC_ALGORITHM               L"AES-GMAC"
#define BCRYPT_ECDSA_P256_ALGORITHM             L"ECDSA_P256"
#define BCRYPT_ECDSA_P384_ALGORITHM             L"ECDSA_P384"
#define BCRYPT_ECDSA_P521_ALGORITHM             L"ECDSA_P521"
#define BCRYPT_ECDH_P256_ALGORITHM              L"ECDH_P256"
#define BCRYPT_ECDH_P384_ALGORITHM              L"ECDH_P384"
#define BCRYPT_ECDH_P521_ALGORITHM              L"ECDH_P521"
#define BCRYPT_RNG_ALGORITHM                    L"RNG"
#define BCRYPT_RNG_FIPS186_DSA_ALGORITHM        L"FIPS186DSARNG"
#define BCRYPT_RNG_DUAL_EC_ALGORITHM            L"DUALECRNG"

//
// Interfaces
//

#define BCRYPT_CIPHER_INTERFACE                 0x00000001
#define BCRYPT_HASH_INTERFACE                   0x00000002
#define BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE  0x00000003
#define BCRYPT_SECRET_AGREEMENT_INTERFACE       0x00000004
#define BCRYPT_SIGNATURE_INTERFACE              0x00000005
#define BCRYPT_RNG_INTERFACE                    0x00000006


//
// Primitive algorithm provider functions.
//

#define BCRYPT_ALG_HANDLE_HMAC_FLAG     0x00000008

__checkReturn
NTSTATUS
WINAPI
BCryptOpenAlgorithmProvider(
    __out       BCRYPT_ALG_HANDLE   *phAlgorithm,
    __in        LPCWSTR pszAlgId,
    __in_opt    LPCWSTR pszImplementation,
    __in        ULONG   dwFlags);



// AlgOperations flags for use with BCryptEnumAlgorithms()
#define BCRYPT_CIPHER_OPERATION                 0x00000001
#define BCRYPT_HASH_OPERATION                   0x00000002
#define BCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION  0x00000004
#define BCRYPT_SECRET_AGREEMENT_OPERATION       0x00000008
#define BCRYPT_SIGNATURE_OPERATION              0x00000010
#define BCRYPT_RNG_OPERATION                    0x00000020

// USE EXTREME CAUTION: editing comments that contain "certenrolls_*" tokens
// could break building CertEnroll idl files:
// certenrolls_begin -- BCRYPT_ALGORITHM_IDENTIFIER
typedef struct _BCRYPT_ALGORITHM_IDENTIFIER
{
    LPWSTR  pszName;
    ULONG   dwClass;
    ULONG   dwFlags;

} BCRYPT_ALGORITHM_IDENTIFIER;
// certenrolls_end

__checkReturn
NTSTATUS
WINAPI
BCryptEnumAlgorithms(
    __in    ULONG   dwAlgOperations,
    __out   ULONG   *pAlgCount,
    __out   BCRYPT_ALGORITHM_IDENTIFIER **ppAlgList,
    __in    ULONG   dwFlags);

typedef struct _BCRYPT_PROVIDER_NAME
{
    LPWSTR  pszProviderName;
} BCRYPT_PROVIDER_NAME;

__checkReturn
NTSTATUS
WINAPI
BCryptEnumProviders(
    __in    LPCWSTR pszAlgId,
    __out   ULONG   *pImplCount,
    __out   BCRYPT_PROVIDER_NAME    **ppImplList,
    __in    ULONG   dwFlags);


// Flags for use with BCryptGetProperty and BCryptSetProperty
#define BCRYPT_PUBLIC_KEY_FLAG                  0x00000001
#define BCRYPT_PRIVATE_KEY_FLAG                 0x00000002

__checkReturn
NTSTATUS
WINAPI
BCryptGetProperty(
    __in                                        BCRYPT_HANDLE   hObject,
    __in                                        LPCWSTR pszProperty,
    __out_bcount_part_opt(cbOutput, *pcbResult) PUCHAR   pbOutput,
    __in                                        ULONG   cbOutput,
    __out                                       ULONG   *pcbResult,
    __in                                        ULONG   dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptSetProperty(
    __inout                 BCRYPT_HANDLE   hObject,
    __in                    LPCWSTR pszProperty,
    __in_bcount(cbInput)    PUCHAR   pbInput,
    __in                    ULONG   cbInput,
    __in                    ULONG   dwFlags);


NTSTATUS
WINAPI
BCryptCloseAlgorithmProvider(
    __inout BCRYPT_ALG_HANDLE   hAlgorithm,
    __in    ULONG   dwFlags);


VOID
WINAPI
BCryptFreeBuffer(
    __in PVOID   pvBuffer);


//
// Primitive encryption functions.
//
__checkReturn
NTSTATUS
WINAPI
BCryptGenerateSymmetricKey(
    __inout                             BCRYPT_ALG_HANDLE   hAlgorithm,
    __out                               BCRYPT_KEY_HANDLE   *phKey,
    __out_bcount_full_opt(cbKeyObject)  PUCHAR   pbKeyObject,
    __in                                ULONG   cbKeyObject,
    __in_bcount(cbSecret)               PUCHAR   pbSecret,
    __in                                ULONG   cbSecret,
    __in                                ULONG   dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptGenerateKeyPair(
    __inout BCRYPT_ALG_HANDLE   hAlgorithm,
    __out   BCRYPT_KEY_HANDLE   *phKey,
    __in    ULONG   dwLength,
    __in    ULONG   dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptEncrypt(
    __inout                                     BCRYPT_KEY_HANDLE hKey,
    __in_bcount_opt(cbInput)                    PUCHAR   pbInput,
    __in                                        ULONG   cbInput,
    __in_opt                                    VOID    *pPaddingInfo,
    __inout_bcount_opt(cbIV)                    PUCHAR   pbIV,
    __in                                        ULONG   cbIV,
    __out_bcount_part_opt(cbOutput, *pcbResult) PUCHAR   pbOutput,
    __in                                        ULONG   cbOutput,
    __out                                       ULONG   *pcbResult,
    __in                                        ULONG   dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptDecrypt(
    __inout                                     BCRYPT_KEY_HANDLE   hKey,
    __in_bcount_opt(cbInput)                    PUCHAR   pbInput,
    __in                                        ULONG   cbInput,
    __in_opt                                    VOID    *pPaddingInfo,
    __inout_bcount_opt(cbIV)                    PUCHAR   pbIV,
    __in                                        ULONG   cbIV,
    __out_bcount_part_opt(cbOutput, *pcbResult) PUCHAR   pbOutput,
    __in                                        ULONG   cbOutput,
    __out                                       ULONG   *pcbResult,
    __in                                        ULONG   dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptExportKey(
    __in                                        BCRYPT_KEY_HANDLE   hKey,
    __in_opt                                    BCRYPT_KEY_HANDLE   hExportKey,
    __in                                        LPCWSTR pszBlobType,
    __out_bcount_part_opt(cbOutput, *pcbResult) PUCHAR   pbOutput,
    __in                                        ULONG   cbOutput,
    __out                                       ULONG   *pcbResult,
    __in                                        ULONG   dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptImportKey(
    __in                                BCRYPT_ALG_HANDLE hAlgorithm,
    __in_opt                            BCRYPT_KEY_HANDLE hImportKey,
    __in                                LPCWSTR pszBlobType,
    __out                               BCRYPT_KEY_HANDLE *phKey,
    __out_bcount_full_opt(cbKeyObject)  PUCHAR   pbKeyObject,
    __in                                ULONG   cbKeyObject,
    __in_bcount(cbInput)                PUCHAR   pbInput,
    __in                                ULONG   cbInput,
    __in                                ULONG   dwFlags);


#define BCRYPT_NO_KEY_VALIDATION    0x00000008
__checkReturn
NTSTATUS
WINAPI
BCryptImportKeyPair(
    __in                            BCRYPT_ALG_HANDLE hAlgorithm,
    __in_opt                        BCRYPT_KEY_HANDLE hImportKey,
    __in                            LPCWSTR pszBlobType,
    __out                           BCRYPT_KEY_HANDLE *phKey,
    __in_bcount(cbInput)            PUCHAR   pbInput,
    __in                            ULONG   cbInput,
    __in                            ULONG   dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptDuplicateKey(
    __in                                BCRYPT_KEY_HANDLE   hKey,
    __out                               BCRYPT_KEY_HANDLE   *phNewKey,
    __out_bcount_full_opt(cbKeyObject)  PUCHAR   pbKeyObject,
    __in                                ULONG   cbKeyObject,
    __in                                ULONG   dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptFinalizeKeyPair(
    __inout BCRYPT_KEY_HANDLE   hKey,
    __in    ULONG   dwFlags);


NTSTATUS
WINAPI
BCryptDestroyKey(
    __inout BCRYPT_KEY_HANDLE   hKey);


NTSTATUS
WINAPI
BCryptDestroySecret(
    __inout BCRYPT_SECRET_HANDLE   hSecret);


__checkReturn
NTSTATUS
WINAPI
BCryptSignHash(
    __in                                        BCRYPT_KEY_HANDLE   hKey,
    __in_opt                                    VOID    *pPaddingInfo,
    __in_bcount(cbInput)                        PUCHAR   pbInput,
    __in                                        ULONG   cbInput,
    __out_bcount_part_opt(cbOutput, *pcbResult) PUCHAR   pbOutput,
    __in                                        ULONG   cbOutput,
    __out                                       ULONG   *pcbResult,
    __in                                        ULONG   dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptVerifySignature(
    __in                        BCRYPT_KEY_HANDLE   hKey,
    __in_opt                    VOID    *pPaddingInfo,
    __in_bcount(cbHash)         PUCHAR   pbHash,
    __in                        ULONG   cbHash,
    __in_bcount(cbSignature)    PUCHAR   pbSignature,
    __in                        ULONG   cbSignature,
    __in                        ULONG   dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptSecretAgreement(
    __in    BCRYPT_KEY_HANDLE       hPrivKey,
    __in    BCRYPT_KEY_HANDLE       hPubKey,
    __out   BCRYPT_SECRET_HANDLE    *phAgreedSecret,
    __in    ULONG                   dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptDeriveKey(
    __in        BCRYPT_SECRET_HANDLE hSharedSecret,
    __in        LPCWSTR              pwszKDF,
    __in_opt    BCryptBufferDesc     *pParameterList,
    __out_bcount_part_opt(cbDerivedKey, *pcbResult) PUCHAR pbDerivedKey,
    __in        ULONG                cbDerivedKey,
    __out       ULONG                *pcbResult,
    __in        ULONG                dwFlags);


//
// Primitive hashing functions.
//
__checkReturn
NTSTATUS
WINAPI
BCryptCreateHash(
    __inout                             BCRYPT_ALG_HANDLE   hAlgorithm,
    __out                               BCRYPT_HASH_HANDLE  *phHash,
    __out_bcount_full_opt(cbHashObject) PUCHAR   pbHashObject,
    __in                                ULONG   cbHashObject,
    __in_bcount_opt(cbSecret)           PUCHAR   pbSecret,   // optional
    __in                                ULONG   cbSecret,   // optional
    __in                                ULONG   dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptHashData(
    __inout                 BCRYPT_HASH_HANDLE  hHash,
    __in_bcount(cbInput)    PUCHAR   pbInput,
    __in                    ULONG   cbInput,
    __in                    ULONG   dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptFinishHash(
    __inout                     BCRYPT_HASH_HANDLE hHash,
    __out_bcount_full(cbOutput) PUCHAR   pbOutput,
    __in                        ULONG   cbOutput,
    __in                        ULONG   dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptDuplicateHash(
    __in                                BCRYPT_HASH_HANDLE  hHash,
    __out                               BCRYPT_HASH_HANDLE  *phNewHash,
    __out_bcount_full_opt(cbHashObject) PUCHAR   pbHashObject,
    __in                                ULONG   cbHashObject,
    __in                                ULONG   dwFlags);


NTSTATUS
WINAPI
BCryptDestroyHash(
    __inout BCRYPT_HASH_HANDLE  hHash);


//
// Primitive random number generation.
//

// Flags to BCryptGenRandom
#define BCRYPT_RNG_USE_ENTROPY_IN_BUFFER    0x00000001
#define BCRYPT_USE_SYSTEM_PREFERRED_RNG     0x00000002

__checkReturn
NTSTATUS
WINAPI
BCryptGenRandom(
    __in_opt                        BCRYPT_ALG_HANDLE   hAlgorithm,
    __inout_bcount_full(cbBuffer)   PUCHAR  pbBuffer,
    __in                            ULONG   cbBuffer,
    __in                            ULONG   dwFlags);


//
// Primitive key derivation functions.
//
__checkReturn
NTSTATUS
WINAPI
BCryptDeriveKeyCapi(
    __in                            BCRYPT_HASH_HANDLE  hHash,
    __in_opt                        BCRYPT_ALG_HANDLE   hTargetAlg,
    __out_bcount( cbDerivedKey )    PUCHAR              pbDerivedKey,
    __in                            ULONG               cbDerivedKey,
    __in                            ULONG               dwFlags);


__checkReturn
NTSTATUS
WINAPI
BCryptDeriveKeyPBKDF2(
    __in                            BCRYPT_ALG_HANDLE   hPrf,
    __in_bcount_opt( cbPassword )   PUCHAR              pbPassword,
    __in                            ULONG               cbPassword,
    __in_bcount_opt( cbSalt )       PUCHAR              pbSalt,
    __in                            ULONG               cbSalt,
    __in                            ULONGLONG           cIterations,
    __out_bcount( cbDerivedKey )    PUCHAR              pbDerivedKey,
    __in                            ULONG               cbDerivedKey,
    __in                            ULONG               dwFlags);


//
// Interface version control...
//
typedef struct _BCRYPT_INTERFACE_VERSION
{
    USHORT MajorVersion;
    USHORT MinorVersion;

} BCRYPT_INTERFACE_VERSION, *PBCRYPT_INTERFACE_VERSION;

#define BCRYPT_MAKE_INTERFACE_VERSION(major,minor) {(USHORT)major, (USHORT)minor}

#define BCRYPT_IS_INTERFACE_VERSION_COMPATIBLE(loader, provider)    \
    ((loader).MajorVersion <= (provider).MajorVersion)

//
// Primitive provider interfaces.
//

#define BCRYPT_CIPHER_INTERFACE_VERSION_1    BCRYPT_MAKE_INTERFACE_VERSION(1,0)


#define BCRYPT_HASH_INTERFACE_VERSION_1    BCRYPT_MAKE_INTERFACE_VERSION(1,0)


#define BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE_VERSION_1    BCRYPT_MAKE_INTERFACE_VERSION(1,0)


#define BCRYPT_SECRET_AGREEMENT_INTERFACE_VERSION_1    BCRYPT_MAKE_INTERFACE_VERSION(1,0)


#define BCRYPT_SIGNATURE_INTERFACE_VERSION_1    BCRYPT_MAKE_INTERFACE_VERSION(1,0)


#define BCRYPT_RNG_INTERFACE_VERSION_1    BCRYPT_MAKE_INTERFACE_VERSION(1,0)


//////////////////////////////////////////////////////////////////////////////
// CryptoConfig Definitions //////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

// Interface registration flags
#define CRYPT_MIN_DEPENDENCIES      (0x00000001)
#define CRYPT_PROCESS_ISOLATE       (0x00010000) // User-mode only

// Processor modes supported by a provider
//
// (Valid for BCryptQueryProviderRegistration and BCryptResolveProviders):
//
#define CRYPT_UM                    (0x00000001)    // User mode only
#define CRYPT_KM                    (0x00000002)    // Kernel mode only
#define CRYPT_MM                    (0x00000003)    // Multi-mode: Must support BOTH UM and KM
//
// (Valid only for BCryptQueryProviderRegistration):
//
#define CRYPT_ANY                   (0x00000004)    // Wildcard: Either UM, or KM, or both


// Write behavior flags
#define CRYPT_OVERWRITE             (0x00000001)

// Configuration tables
#define CRYPT_LOCAL                 (0x00000001)
#define CRYPT_DOMAIN                (0x00000002)

// Context configuration flags
#define CRYPT_EXCLUSIVE             (0x00000001)
#define CRYPT_OVERRIDE              (0x00010000) // Enterprise table only

// Resolution and enumeration flags
#define CRYPT_ALL_FUNCTIONS         (0x00000001)
#define CRYPT_ALL_PROVIDERS         (0x00000002)

// Priority list positions
#define CRYPT_PRIORITY_TOP          (0x00000000)
#define CRYPT_PRIORITY_BOTTOM       (0xFFFFFFFF)

// Default system-wide context
#define CRYPT_DEFAULT_CONTEXT       L"Default"

//////////////////////////////////////////////////////////////////////////////
// CryptoConfig Structures ///////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//
// Provider Registration Structures
//

typedef struct _CRYPT_INTERFACE_REG
{
    ULONG dwInterface;
    ULONG dwFlags;

    ULONG cFunctions;
    PWSTR *rgpszFunctions;
}
CRYPT_INTERFACE_REG, *PCRYPT_INTERFACE_REG;

typedef struct _CRYPT_IMAGE_REG
{
    PWSTR pszImage;

    ULONG cInterfaces;
    PCRYPT_INTERFACE_REG *rgpInterfaces;
}
CRYPT_IMAGE_REG, *PCRYPT_IMAGE_REG;

typedef struct _CRYPT_PROVIDER_REG
{
    ULONG cAliases;
    PWSTR *rgpszAliases;

    PCRYPT_IMAGE_REG pUM;
    PCRYPT_IMAGE_REG pKM;
}
CRYPT_PROVIDER_REG, *PCRYPT_PROVIDER_REG;

typedef struct _CRYPT_PROVIDERS
{
    ULONG cProviders;
    PWSTR *rgpszProviders;
}
CRYPT_PROVIDERS, *PCRYPT_PROVIDERS;

//
// Context Configuration Structures
//

typedef struct _CRYPT_CONTEXT_CONFIG
{
    ULONG dwFlags;
    ULONG dwReserved;
}
CRYPT_CONTEXT_CONFIG, *PCRYPT_CONTEXT_CONFIG;

typedef struct _CRYPT_CONTEXT_FUNCTION_CONFIG
{
    ULONG dwFlags;
    ULONG dwReserved;
}
CRYPT_CONTEXT_FUNCTION_CONFIG, *PCRYPT_CONTEXT_FUNCTION_CONFIG;

typedef struct _CRYPT_CONTEXTS
{
    ULONG cContexts;
    PWSTR *rgpszContexts;
}
CRYPT_CONTEXTS, *PCRYPT_CONTEXTS;

typedef struct _CRYPT_CONTEXT_FUNCTIONS
{
    ULONG cFunctions;
    PWSTR *rgpszFunctions;
}
CRYPT_CONTEXT_FUNCTIONS, *PCRYPT_CONTEXT_FUNCTIONS;

typedef struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS
{
    ULONG cProviders;
    PWSTR *rgpszProviders;
}
CRYPT_CONTEXT_FUNCTION_PROVIDERS, *PCRYPT_CONTEXT_FUNCTION_PROVIDERS;

//
// Provider Resolution Structures
//

typedef struct _CRYPT_PROPERTY_REF
{
    PWSTR pszProperty;

    ULONG cbValue;
    PUCHAR pbValue;
}
CRYPT_PROPERTY_REF, *PCRYPT_PROPERTY_REF;

typedef struct _CRYPT_IMAGE_REF
{
    PWSTR pszImage;
    ULONG dwFlags;
}
CRYPT_IMAGE_REF, *PCRYPT_IMAGE_REF;

typedef struct _CRYPT_PROVIDER_REF
{
    ULONG dwInterface;
    PWSTR pszFunction;
    PWSTR pszProvider;

    ULONG cProperties;
    PCRYPT_PROPERTY_REF *rgpProperties;

    PCRYPT_IMAGE_REF pUM;
    PCRYPT_IMAGE_REF pKM;
}
CRYPT_PROVIDER_REF, *PCRYPT_PROVIDER_REF;

typedef struct _CRYPT_PROVIDER_REFS
{
    ULONG cProviders;
    PCRYPT_PROVIDER_REF *rgpProviders;
}
CRYPT_PROVIDER_REFS, *PCRYPT_PROVIDER_REFS;

//////////////////////////////////////////////////////////////////////////////
// CryptoConfig Functions ////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

#ifndef KERNEL_MODE_CNG


__checkReturn
NTSTATUS
WINAPI
BCryptQueryProviderRegistration(
    __in LPCWSTR pszProvider,
    __in ULONG dwMode,
    __in ULONG dwInterface,
    __inout ULONG* pcbBuffer,
    __deref_opt_inout_bcount_part_opt(*pcbBuffer, *pcbBuffer) PCRYPT_PROVIDER_REG *ppBuffer);

__checkReturn
NTSTATUS
WINAPI
BCryptEnumRegisteredProviders(
    __inout ULONG* pcbBuffer,
    __deref_opt_inout_bcount_part_opt(*pcbBuffer, *pcbBuffer) PCRYPT_PROVIDERS *ppBuffer);

//
// Context Configuration Functions
//
__checkReturn
NTSTATUS
WINAPI
BCryptCreateContext(
    __in ULONG dwTable,
    __in LPCWSTR pszContext,
    __in_opt PCRYPT_CONTEXT_CONFIG pConfig); // Optional

__checkReturn
NTSTATUS
WINAPI
BCryptDeleteContext(
    __in ULONG dwTable,
    __in LPCWSTR pszContext);

__checkReturn
NTSTATUS
WINAPI
BCryptEnumContexts(
    __in ULONG dwTable,
    __inout ULONG* pcbBuffer,
    __deref_opt_inout_bcount_part_opt(*pcbBuffer, *pcbBuffer) PCRYPT_CONTEXTS *ppBuffer);

__checkReturn
NTSTATUS
WINAPI
BCryptConfigureContext(
    __in ULONG dwTable,
    __in LPCWSTR pszContext,
    __in PCRYPT_CONTEXT_CONFIG pConfig);

__checkReturn
NTSTATUS
WINAPI
BCryptQueryContextConfiguration(
    __in ULONG dwTable,
    __in LPCWSTR pszContext,
    __inout ULONG* pcbBuffer,
    __deref_opt_inout_bcount_part_opt(*pcbBuffer, *pcbBuffer) PCRYPT_CONTEXT_CONFIG *ppBuffer);

__checkReturn
NTSTATUS
WINAPI
BCryptAddContextFunction(
    __in ULONG dwTable,
    __in LPCWSTR pszContext,
    __in ULONG dwInterface,
    __in LPCWSTR pszFunction,
    __in ULONG dwPosition);

__checkReturn
NTSTATUS
WINAPI
BCryptRemoveContextFunction(
    __in ULONG dwTable,
    __in LPCWSTR pszContext,
    __in ULONG dwInterface,
    __in LPCWSTR pszFunction);

__checkReturn
NTSTATUS
WINAPI
BCryptEnumContextFunctions(
    __in ULONG dwTable,
    __in LPCWSTR pszContext,
    __in ULONG dwInterface,
    __inout ULONG* pcbBuffer,
    __deref_opt_inout_bcount_part_opt(*pcbBuffer, *pcbBuffer) PCRYPT_CONTEXT_FUNCTIONS *ppBuffer);

__checkReturn
NTSTATUS
WINAPI
BCryptConfigureContextFunction(
    __in ULONG dwTable,
    __in LPCWSTR pszContext,
    __in ULONG dwInterface,
    __in LPCWSTR pszFunction,
    __in PCRYPT_CONTEXT_FUNCTION_CONFIG pConfig);

__checkReturn
NTSTATUS
WINAPI
BCryptQueryContextFunctionConfiguration(
    __in ULONG dwTable,
    __in LPCWSTR pszContext,
    __in ULONG dwInterface,
    __in LPCWSTR pszFunction,
    __inout ULONG* pcbBuffer,
    __deref_opt_inout_bcount_part_opt(*pcbBuffer, *pcbBuffer) PCRYPT_CONTEXT_FUNCTION_CONFIG *ppBuffer);

__checkReturn
NTSTATUS
WINAPI
BCryptEnumContextFunctionProviders(
    __in ULONG dwTable,
    __in LPCWSTR pszContext,
    __in ULONG dwInterface,
    __in LPCWSTR pszFunction,
    __inout ULONG* pcbBuffer,
    __deref_opt_inout_bcount_part_opt(*pcbBuffer, *pcbBuffer) PCRYPT_CONTEXT_FUNCTION_PROVIDERS *ppBuffer);

__checkReturn
NTSTATUS
WINAPI
BCryptSetContextFunctionProperty(
    __in ULONG dwTable,
    __in LPCWSTR pszContext,
    __in ULONG dwInterface,
    __in LPCWSTR pszFunction,
    __in LPCWSTR pszProperty,
    __in ULONG cbValue,
    __in_bcount_opt(cbValue) PUCHAR pbValue);

__checkReturn
NTSTATUS
WINAPI
BCryptQueryContextFunctionProperty(
    __in ULONG dwTable,
    __in LPCWSTR pszContext,
    __in ULONG dwInterface,
    __in LPCWSTR pszFunction,
    __in LPCWSTR pszProperty,
    __inout ULONG* pcbValue,
    __deref_opt_inout_bcount_part_opt(*pcbValue, *pcbValue) PUCHAR *ppbValue);

#endif //#ifndef KERNEL_MODE_CNG

//
// Configuration Change Notification Functions
//

#ifdef KERNEL_MODE_CNG
__checkReturn
NTSTATUS
WINAPI
BCryptRegisterConfigChangeNotify(
    __in PRKEVENT pEvent);

#else
__checkReturn
NTSTATUS
WINAPI
BCryptRegisterConfigChangeNotify(
    __out HANDLE *phEvent);
#endif

#ifdef KERNEL_MODE_CNG
NTSTATUS
WINAPI
BCryptUnregisterConfigChangeNotify(
    __in PRKEVENT pEvent);

#else
NTSTATUS
WINAPI
BCryptUnregisterConfigChangeNotify(
    __in HANDLE hEvent);
#endif

//
// Provider Resolution Functions
//
__checkReturn
NTSTATUS WINAPI
BCryptResolveProviders(
    __in_opt LPCWSTR pszContext,
    __in_opt ULONG dwInterface,
    __in_opt LPCWSTR pszFunction,
    __in_opt LPCWSTR pszProvider,
    __in ULONG dwMode,
    __in ULONG dwFlags,
    __inout ULONG* pcbBuffer,
    __deref_opt_inout_bcount_part_opt(*pcbBuffer, *pcbBuffer) PCRYPT_PROVIDER_REFS *ppBuffer);

//
// Miscellaneous queries about the crypto environment
//
NTSTATUS
WINAPI
BCryptGetFipsAlgorithmMode(
    __out BOOLEAN *pfEnabled
    );

#ifdef __cplusplus
}
#endif

#endif // __BCRYPT_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bdatif.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for bdatif.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __bdatif_h__
#define __bdatif_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IBDA_TIF_REGISTRATION_FWD_DEFINED__
#define __IBDA_TIF_REGISTRATION_FWD_DEFINED__
typedef interface IBDA_TIF_REGISTRATION IBDA_TIF_REGISTRATION;
#endif 	/* __IBDA_TIF_REGISTRATION_FWD_DEFINED__ */


#ifndef __IMPEG2_TIF_CONTROL_FWD_DEFINED__
#define __IMPEG2_TIF_CONTROL_FWD_DEFINED__
typedef interface IMPEG2_TIF_CONTROL IMPEG2_TIF_CONTROL;
#endif 	/* __IMPEG2_TIF_CONTROL_FWD_DEFINED__ */


#ifndef __ITuneRequestInfo_FWD_DEFINED__
#define __ITuneRequestInfo_FWD_DEFINED__
typedef interface ITuneRequestInfo ITuneRequestInfo;
#endif 	/* __ITuneRequestInfo_FWD_DEFINED__ */


#ifndef __ITuneRequestInfoEx_FWD_DEFINED__
#define __ITuneRequestInfoEx_FWD_DEFINED__
typedef interface ITuneRequestInfoEx ITuneRequestInfoEx;
#endif 	/* __ITuneRequestInfoEx_FWD_DEFINED__ */


#ifndef __ISIInbandEPGEvent_FWD_DEFINED__
#define __ISIInbandEPGEvent_FWD_DEFINED__
typedef interface ISIInbandEPGEvent ISIInbandEPGEvent;
#endif 	/* __ISIInbandEPGEvent_FWD_DEFINED__ */


#ifndef __ISIInbandEPG_FWD_DEFINED__
#define __ISIInbandEPG_FWD_DEFINED__
typedef interface ISIInbandEPG ISIInbandEPG;
#endif 	/* __ISIInbandEPG_FWD_DEFINED__ */


#ifndef __IGuideDataEvent_FWD_DEFINED__
#define __IGuideDataEvent_FWD_DEFINED__
typedef interface IGuideDataEvent IGuideDataEvent;
#endif 	/* __IGuideDataEvent_FWD_DEFINED__ */


#ifndef __IGuideDataProperty_FWD_DEFINED__
#define __IGuideDataProperty_FWD_DEFINED__
typedef interface IGuideDataProperty IGuideDataProperty;
#endif 	/* __IGuideDataProperty_FWD_DEFINED__ */


#ifndef __IEnumGuideDataProperties_FWD_DEFINED__
#define __IEnumGuideDataProperties_FWD_DEFINED__
typedef interface IEnumGuideDataProperties IEnumGuideDataProperties;
#endif 	/* __IEnumGuideDataProperties_FWD_DEFINED__ */


#ifndef __IEnumTuneRequests_FWD_DEFINED__
#define __IEnumTuneRequests_FWD_DEFINED__
typedef interface IEnumTuneRequests IEnumTuneRequests;
#endif 	/* __IEnumTuneRequests_FWD_DEFINED__ */


#ifndef __IGuideData_FWD_DEFINED__
#define __IGuideData_FWD_DEFINED__
typedef interface IGuideData IGuideData;
#endif 	/* __IGuideData_FWD_DEFINED__ */


#ifndef __IGuideDataLoader_FWD_DEFINED__
#define __IGuideDataLoader_FWD_DEFINED__
typedef interface IGuideDataLoader IGuideDataLoader;
#endif 	/* __IGuideDataLoader_FWD_DEFINED__ */


#ifndef __TIFLoad_FWD_DEFINED__
#define __TIFLoad_FWD_DEFINED__

#ifdef __cplusplus
typedef class TIFLoad TIFLoad;
#else
typedef struct TIFLoad TIFLoad;
#endif /* __cplusplus */

#endif 	/* __TIFLoad_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"
#include "strmif.h"
#include "tuner.h"
#include "dvbsiparser.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_bdatif_0000_0000 */
/* [local] */ 

//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (C) Microsoft Corporation, 1999-2002.
//
//--------------------------------------------------------------------------
#if ( _MSC_VER >= 800 )
#pragma warning(disable:4201)    /* Nameless struct/union */
#endif
#if ( _MSC_VER >= 1020 )
#pragma once
#endif




extern RPC_IF_HANDLE __MIDL_itf_bdatif_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdatif_0000_0000_v0_0_s_ifspec;

#ifndef __IBDA_TIF_REGISTRATION_INTERFACE_DEFINED__
#define __IBDA_TIF_REGISTRATION_INTERFACE_DEFINED__

/* interface IBDA_TIF_REGISTRATION */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBDA_TIF_REGISTRATION;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DFEF4A68-EE61-415f-9CCB-CD95F2F98A3A")
    IBDA_TIF_REGISTRATION : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RegisterTIFEx( 
            /* [in] */ __RPC__in_opt IPin *pTIFInputPin,
            /* [out][in] */ __RPC__inout ULONG *ppvRegistrationContext,
            /* [out][in] */ __RPC__deref_inout_opt IUnknown **ppMpeg2DataControl) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UnregisterTIF( 
            /* [in] */ ULONG pvRegistrationContext) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBDA_TIF_REGISTRATIONVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBDA_TIF_REGISTRATION * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBDA_TIF_REGISTRATION * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBDA_TIF_REGISTRATION * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RegisterTIFEx )( 
            __RPC__in IBDA_TIF_REGISTRATION * This,
            /* [in] */ __RPC__in_opt IPin *pTIFInputPin,
            /* [out][in] */ __RPC__inout ULONG *ppvRegistrationContext,
            /* [out][in] */ __RPC__deref_inout_opt IUnknown **ppMpeg2DataControl);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UnregisterTIF )( 
            __RPC__in IBDA_TIF_REGISTRATION * This,
            /* [in] */ ULONG pvRegistrationContext);
        
        END_INTERFACE
    } IBDA_TIF_REGISTRATIONVtbl;

    interface IBDA_TIF_REGISTRATION
    {
        CONST_VTBL struct IBDA_TIF_REGISTRATIONVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBDA_TIF_REGISTRATION_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBDA_TIF_REGISTRATION_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBDA_TIF_REGISTRATION_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBDA_TIF_REGISTRATION_RegisterTIFEx(This,pTIFInputPin,ppvRegistrationContext,ppMpeg2DataControl)	\
    ( (This)->lpVtbl -> RegisterTIFEx(This,pTIFInputPin,ppvRegistrationContext,ppMpeg2DataControl) ) 

#define IBDA_TIF_REGISTRATION_UnregisterTIF(This,pvRegistrationContext)	\
    ( (This)->lpVtbl -> UnregisterTIF(This,pvRegistrationContext) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBDA_TIF_REGISTRATION_INTERFACE_DEFINED__ */


#ifndef __IMPEG2_TIF_CONTROL_INTERFACE_DEFINED__
#define __IMPEG2_TIF_CONTROL_INTERFACE_DEFINED__

/* interface IMPEG2_TIF_CONTROL */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMPEG2_TIF_CONTROL;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F9BAC2F9-4149-4916-B2EF-FAA202326862")
    IMPEG2_TIF_CONTROL : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RegisterTIF( 
            /* [in] */ __RPC__in_opt IUnknown *pUnkTIF,
            /* [out][in] */ __RPC__inout ULONG *ppvRegistrationContext) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UnregisterTIF( 
            /* [in] */ ULONG pvRegistrationContext) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddPIDs( 
            /* [in] */ ULONG ulcPIDs,
            /* [in] */ __RPC__in ULONG *pulPIDs) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DeletePIDs( 
            /* [in] */ ULONG ulcPIDs,
            /* [in] */ __RPC__in ULONG *pulPIDs) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPIDCount( 
            /* [out] */ __RPC__out ULONG *pulcPIDs) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPIDs( 
            /* [out] */ __RPC__out ULONG *pulcPIDs,
            /* [out] */ __RPC__out ULONG *pulPIDs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMPEG2_TIF_CONTROLVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMPEG2_TIF_CONTROL * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMPEG2_TIF_CONTROL * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMPEG2_TIF_CONTROL * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RegisterTIF )( 
            __RPC__in IMPEG2_TIF_CONTROL * This,
            /* [in] */ __RPC__in_opt IUnknown *pUnkTIF,
            /* [out][in] */ __RPC__inout ULONG *ppvRegistrationContext);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UnregisterTIF )( 
            __RPC__in IMPEG2_TIF_CONTROL * This,
            /* [in] */ ULONG pvRegistrationContext);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPIDs )( 
            __RPC__in IMPEG2_TIF_CONTROL * This,
            /* [in] */ ULONG ulcPIDs,
            /* [in] */ __RPC__in ULONG *pulPIDs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeletePIDs )( 
            __RPC__in IMPEG2_TIF_CONTROL * This,
            /* [in] */ ULONG ulcPIDs,
            /* [in] */ __RPC__in ULONG *pulPIDs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPIDCount )( 
            __RPC__in IMPEG2_TIF_CONTROL * This,
            /* [out] */ __RPC__out ULONG *pulcPIDs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPIDs )( 
            __RPC__in IMPEG2_TIF_CONTROL * This,
            /* [out] */ __RPC__out ULONG *pulcPIDs,
            /* [out] */ __RPC__out ULONG *pulPIDs);
        
        END_INTERFACE
    } IMPEG2_TIF_CONTROLVtbl;

    interface IMPEG2_TIF_CONTROL
    {
        CONST_VTBL struct IMPEG2_TIF_CONTROLVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMPEG2_TIF_CONTROL_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMPEG2_TIF_CONTROL_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMPEG2_TIF_CONTROL_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMPEG2_TIF_CONTROL_RegisterTIF(This,pUnkTIF,ppvRegistrationContext)	\
    ( (This)->lpVtbl -> RegisterTIF(This,pUnkTIF,ppvRegistrationContext) ) 

#define IMPEG2_TIF_CONTROL_UnregisterTIF(This,pvRegistrationContext)	\
    ( (This)->lpVtbl -> UnregisterTIF(This,pvRegistrationContext) ) 

#define IMPEG2_TIF_CONTROL_AddPIDs(This,ulcPIDs,pulPIDs)	\
    ( (This)->lpVtbl -> AddPIDs(This,ulcPIDs,pulPIDs) ) 

#define IMPEG2_TIF_CONTROL_DeletePIDs(This,ulcPIDs,pulPIDs)	\
    ( (This)->lpVtbl -> DeletePIDs(This,ulcPIDs,pulPIDs) ) 

#define IMPEG2_TIF_CONTROL_GetPIDCount(This,pulcPIDs)	\
    ( (This)->lpVtbl -> GetPIDCount(This,pulcPIDs) ) 

#define IMPEG2_TIF_CONTROL_GetPIDs(This,pulcPIDs,pulPIDs)	\
    ( (This)->lpVtbl -> GetPIDs(This,pulcPIDs,pulPIDs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMPEG2_TIF_CONTROL_INTERFACE_DEFINED__ */


#ifndef __ITuneRequestInfo_INTERFACE_DEFINED__
#define __ITuneRequestInfo_INTERFACE_DEFINED__

/* interface ITuneRequestInfo */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_ITuneRequestInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A3B152DF-7A90-4218-AC54-9830BEE8C0B6")
    ITuneRequestInfo : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetLocatorData( 
            /* [in] */ __RPC__in_opt ITuneRequest *Request) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetComponentData( 
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateComponentList( 
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetNextProgram( 
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest,
            /* [retval][out] */ __RPC__deref_out_opt ITuneRequest **TuneRequest) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPreviousProgram( 
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest,
            /* [retval][out] */ __RPC__deref_out_opt ITuneRequest **TuneRequest) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetNextLocator( 
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest,
            /* [retval][out] */ __RPC__deref_out_opt ITuneRequest **TuneRequest) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPreviousLocator( 
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest,
            /* [retval][out] */ __RPC__deref_out_opt ITuneRequest **TuneRequest) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ITuneRequestInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ITuneRequestInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ITuneRequestInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ITuneRequestInfo * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetLocatorData )( 
            __RPC__in ITuneRequestInfo * This,
            /* [in] */ __RPC__in_opt ITuneRequest *Request);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetComponentData )( 
            __RPC__in ITuneRequestInfo * This,
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateComponentList )( 
            __RPC__in ITuneRequestInfo * This,
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetNextProgram )( 
            __RPC__in ITuneRequestInfo * This,
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest,
            /* [retval][out] */ __RPC__deref_out_opt ITuneRequest **TuneRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPreviousProgram )( 
            __RPC__in ITuneRequestInfo * This,
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest,
            /* [retval][out] */ __RPC__deref_out_opt ITuneRequest **TuneRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetNextLocator )( 
            __RPC__in ITuneRequestInfo * This,
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest,
            /* [retval][out] */ __RPC__deref_out_opt ITuneRequest **TuneRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPreviousLocator )( 
            __RPC__in ITuneRequestInfo * This,
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest,
            /* [retval][out] */ __RPC__deref_out_opt ITuneRequest **TuneRequest);
        
        END_INTERFACE
    } ITuneRequestInfoVtbl;

    interface ITuneRequestInfo
    {
        CONST_VTBL struct ITuneRequestInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITuneRequestInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ITuneRequestInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ITuneRequestInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ITuneRequestInfo_GetLocatorData(This,Request)	\
    ( (This)->lpVtbl -> GetLocatorData(This,Request) ) 

#define ITuneRequestInfo_GetComponentData(This,CurrentRequest)	\
    ( (This)->lpVtbl -> GetComponentData(This,CurrentRequest) ) 

#define ITuneRequestInfo_CreateComponentList(This,CurrentRequest)	\
    ( (This)->lpVtbl -> CreateComponentList(This,CurrentRequest) ) 

#define ITuneRequestInfo_GetNextProgram(This,CurrentRequest,TuneRequest)	\
    ( (This)->lpVtbl -> GetNextProgram(This,CurrentRequest,TuneRequest) ) 

#define ITuneRequestInfo_GetPreviousProgram(This,CurrentRequest,TuneRequest)	\
    ( (This)->lpVtbl -> GetPreviousProgram(This,CurrentRequest,TuneRequest) ) 

#define ITuneRequestInfo_GetNextLocator(This,CurrentRequest,TuneRequest)	\
    ( (This)->lpVtbl -> GetNextLocator(This,CurrentRequest,TuneRequest) ) 

#define ITuneRequestInfo_GetPreviousLocator(This,CurrentRequest,TuneRequest)	\
    ( (This)->lpVtbl -> GetPreviousLocator(This,CurrentRequest,TuneRequest) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ITuneRequestInfo_INTERFACE_DEFINED__ */


#ifndef __ITuneRequestInfoEx_INTERFACE_DEFINED__
#define __ITuneRequestInfoEx_INTERFACE_DEFINED__

/* interface ITuneRequestInfoEx */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_ITuneRequestInfoEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EE957C52-B0D0-4e78-8DD1-B87A08BFD893")
    ITuneRequestInfoEx : public ITuneRequestInfo
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateComponentListEx( 
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppCurPMT) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ITuneRequestInfoExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ITuneRequestInfoEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ITuneRequestInfoEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ITuneRequestInfoEx * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetLocatorData )( 
            __RPC__in ITuneRequestInfoEx * This,
            /* [in] */ __RPC__in_opt ITuneRequest *Request);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetComponentData )( 
            __RPC__in ITuneRequestInfoEx * This,
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateComponentList )( 
            __RPC__in ITuneRequestInfoEx * This,
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetNextProgram )( 
            __RPC__in ITuneRequestInfoEx * This,
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest,
            /* [retval][out] */ __RPC__deref_out_opt ITuneRequest **TuneRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPreviousProgram )( 
            __RPC__in ITuneRequestInfoEx * This,
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest,
            /* [retval][out] */ __RPC__deref_out_opt ITuneRequest **TuneRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetNextLocator )( 
            __RPC__in ITuneRequestInfoEx * This,
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest,
            /* [retval][out] */ __RPC__deref_out_opt ITuneRequest **TuneRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPreviousLocator )( 
            __RPC__in ITuneRequestInfoEx * This,
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest,
            /* [retval][out] */ __RPC__deref_out_opt ITuneRequest **TuneRequest);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateComponentListEx )( 
            __RPC__in ITuneRequestInfoEx * This,
            /* [in] */ __RPC__in_opt ITuneRequest *CurrentRequest,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppCurPMT);
        
        END_INTERFACE
    } ITuneRequestInfoExVtbl;

    interface ITuneRequestInfoEx
    {
        CONST_VTBL struct ITuneRequestInfoExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITuneRequestInfoEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ITuneRequestInfoEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ITuneRequestInfoEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ITuneRequestInfoEx_GetLocatorData(This,Request)	\
    ( (This)->lpVtbl -> GetLocatorData(This,Request) ) 

#define ITuneRequestInfoEx_GetComponentData(This,CurrentRequest)	\
    ( (This)->lpVtbl -> GetComponentData(This,CurrentRequest) ) 

#define ITuneRequestInfoEx_CreateComponentList(This,CurrentRequest)	\
    ( (This)->lpVtbl -> CreateComponentList(This,CurrentRequest) ) 

#define ITuneRequestInfoEx_GetNextProgram(This,CurrentRequest,TuneRequest)	\
    ( (This)->lpVtbl -> GetNextProgram(This,CurrentRequest,TuneRequest) ) 

#define ITuneRequestInfoEx_GetPreviousProgram(This,CurrentRequest,TuneRequest)	\
    ( (This)->lpVtbl -> GetPreviousProgram(This,CurrentRequest,TuneRequest) ) 

#define ITuneRequestInfoEx_GetNextLocator(This,CurrentRequest,TuneRequest)	\
    ( (This)->lpVtbl -> GetNextLocator(This,CurrentRequest,TuneRequest) ) 

#define ITuneRequestInfoEx_GetPreviousLocator(This,CurrentRequest,TuneRequest)	\
    ( (This)->lpVtbl -> GetPreviousLocator(This,CurrentRequest,TuneRequest) ) 


#define ITuneRequestInfoEx_CreateComponentListEx(This,CurrentRequest,ppCurPMT)	\
    ( (This)->lpVtbl -> CreateComponentListEx(This,CurrentRequest,ppCurPMT) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ITuneRequestInfoEx_INTERFACE_DEFINED__ */


#ifndef __ISIInbandEPGEvent_INTERFACE_DEFINED__
#define __ISIInbandEPGEvent_INTERFACE_DEFINED__

/* interface ISIInbandEPGEvent */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_ISIInbandEPGEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7E47913A-5A89-423d-9A2B-E15168858934")
    ISIInbandEPGEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SIObjectEvent( 
            /* [in] */ __RPC__in_opt IDVB_EIT2 *pIDVB_EIT,
            /* [in] */ DWORD dwTable_ID,
            /* [in] */ DWORD dwService_ID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISIInbandEPGEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ISIInbandEPGEvent * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ISIInbandEPGEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ISIInbandEPGEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *SIObjectEvent )( 
            __RPC__in ISIInbandEPGEvent * This,
            /* [in] */ __RPC__in_opt IDVB_EIT2 *pIDVB_EIT,
            /* [in] */ DWORD dwTable_ID,
            /* [in] */ DWORD dwService_ID);
        
        END_INTERFACE
    } ISIInbandEPGEventVtbl;

    interface ISIInbandEPGEvent
    {
        CONST_VTBL struct ISIInbandEPGEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISIInbandEPGEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISIInbandEPGEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISIInbandEPGEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISIInbandEPGEvent_SIObjectEvent(This,pIDVB_EIT,dwTable_ID,dwService_ID)	\
    ( (This)->lpVtbl -> SIObjectEvent(This,pIDVB_EIT,dwTable_ID,dwService_ID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISIInbandEPGEvent_INTERFACE_DEFINED__ */


#ifndef __ISIInbandEPG_INTERFACE_DEFINED__
#define __ISIInbandEPG_INTERFACE_DEFINED__

/* interface ISIInbandEPG */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_ISIInbandEPG;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F90AD9D0-B854-4b68-9CC1-B2CC96119D85")
    ISIInbandEPG : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE StartSIEPGScan( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StopSIEPGScan( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsSIEPGScanRunning( 
            /* [retval][out] */ __RPC__out BOOL *bRunning) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISIInbandEPGVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ISIInbandEPG * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ISIInbandEPG * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ISIInbandEPG * This);
        
        HRESULT ( STDMETHODCALLTYPE *StartSIEPGScan )( 
            __RPC__in ISIInbandEPG * This);
        
        HRESULT ( STDMETHODCALLTYPE *StopSIEPGScan )( 
            __RPC__in ISIInbandEPG * This);
        
        HRESULT ( STDMETHODCALLTYPE *IsSIEPGScanRunning )( 
            __RPC__in ISIInbandEPG * This,
            /* [retval][out] */ __RPC__out BOOL *bRunning);
        
        END_INTERFACE
    } ISIInbandEPGVtbl;

    interface ISIInbandEPG
    {
        CONST_VTBL struct ISIInbandEPGVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISIInbandEPG_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISIInbandEPG_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISIInbandEPG_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISIInbandEPG_StartSIEPGScan(This)	\
    ( (This)->lpVtbl -> StartSIEPGScan(This) ) 

#define ISIInbandEPG_StopSIEPGScan(This)	\
    ( (This)->lpVtbl -> StopSIEPGScan(This) ) 

#define ISIInbandEPG_IsSIEPGScanRunning(This,bRunning)	\
    ( (This)->lpVtbl -> IsSIEPGScanRunning(This,bRunning) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISIInbandEPG_INTERFACE_DEFINED__ */


#ifndef __IGuideDataEvent_INTERFACE_DEFINED__
#define __IGuideDataEvent_INTERFACE_DEFINED__

/* interface IGuideDataEvent */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IGuideDataEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EFDA0C80-F395-42c3-9B3C-56B37DEC7BB7")
    IGuideDataEvent : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GuideDataAcquired( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ProgramChanged( 
            /* [in] */ VARIANT varProgramDescriptionID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ServiceChanged( 
            /* [in] */ VARIANT varServiceDescriptionID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ScheduleEntryChanged( 
            /* [in] */ VARIANT varScheduleEntryDescriptionID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ProgramDeleted( 
            /* [in] */ VARIANT varProgramDescriptionID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ServiceDeleted( 
            /* [in] */ VARIANT varServiceDescriptionID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ScheduleDeleted( 
            /* [in] */ VARIANT varScheduleEntryDescriptionID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IGuideDataEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IGuideDataEvent * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IGuideDataEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IGuideDataEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *GuideDataAcquired )( 
            __RPC__in IGuideDataEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *ProgramChanged )( 
            __RPC__in IGuideDataEvent * This,
            /* [in] */ VARIANT varProgramDescriptionID);
        
        HRESULT ( STDMETHODCALLTYPE *ServiceChanged )( 
            __RPC__in IGuideDataEvent * This,
            /* [in] */ VARIANT varServiceDescriptionID);
        
        HRESULT ( STDMETHODCALLTYPE *ScheduleEntryChanged )( 
            __RPC__in IGuideDataEvent * This,
            /* [in] */ VARIANT varScheduleEntryDescriptionID);
        
        HRESULT ( STDMETHODCALLTYPE *ProgramDeleted )( 
            __RPC__in IGuideDataEvent * This,
            /* [in] */ VARIANT varProgramDescriptionID);
        
        HRESULT ( STDMETHODCALLTYPE *ServiceDeleted )( 
            __RPC__in IGuideDataEvent * This,
            /* [in] */ VARIANT varServiceDescriptionID);
        
        HRESULT ( STDMETHODCALLTYPE *ScheduleDeleted )( 
            __RPC__in IGuideDataEvent * This,
            /* [in] */ VARIANT varScheduleEntryDescriptionID);
        
        END_INTERFACE
    } IGuideDataEventVtbl;

    interface IGuideDataEvent
    {
        CONST_VTBL struct IGuideDataEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IGuideDataEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IGuideDataEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IGuideDataEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IGuideDataEvent_GuideDataAcquired(This)	\
    ( (This)->lpVtbl -> GuideDataAcquired(This) ) 

#define IGuideDataEvent_ProgramChanged(This,varProgramDescriptionID)	\
    ( (This)->lpVtbl -> ProgramChanged(This,varProgramDescriptionID) ) 

#define IGuideDataEvent_ServiceChanged(This,varServiceDescriptionID)	\
    ( (This)->lpVtbl -> ServiceChanged(This,varServiceDescriptionID) ) 

#define IGuideDataEvent_ScheduleEntryChanged(This,varScheduleEntryDescriptionID)	\
    ( (This)->lpVtbl -> ScheduleEntryChanged(This,varScheduleEntryDescriptionID) ) 

#define IGuideDataEvent_ProgramDeleted(This,varProgramDescriptionID)	\
    ( (This)->lpVtbl -> ProgramDeleted(This,varProgramDescriptionID) ) 

#define IGuideDataEvent_ServiceDeleted(This,varServiceDescriptionID)	\
    ( (This)->lpVtbl -> ServiceDeleted(This,varServiceDescriptionID) ) 

#define IGuideDataEvent_ScheduleDeleted(This,varScheduleEntryDescriptionID)	\
    ( (This)->lpVtbl -> ScheduleDeleted(This,varScheduleEntryDescriptionID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IGuideDataEvent_INTERFACE_DEFINED__ */


#ifndef __IGuideDataProperty_INTERFACE_DEFINED__
#define __IGuideDataProperty_INTERFACE_DEFINED__

/* interface IGuideDataProperty */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IGuideDataProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("88EC5E58-BB73-41d6-99CE-66C524B8B591")
    IGuideDataProperty : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [out] */ __RPC__out long *idLang) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [out] */ __RPC__out VARIANT *pvar) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IGuideDataPropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IGuideDataProperty * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IGuideDataProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IGuideDataProperty * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IGuideDataProperty * This,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            __RPC__in IGuideDataProperty * This,
            /* [out] */ __RPC__out long *idLang);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in IGuideDataProperty * This,
            /* [out] */ __RPC__out VARIANT *pvar);
        
        END_INTERFACE
    } IGuideDataPropertyVtbl;

    interface IGuideDataProperty
    {
        CONST_VTBL struct IGuideDataPropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IGuideDataProperty_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IGuideDataProperty_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IGuideDataProperty_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IGuideDataProperty_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IGuideDataProperty_get_Language(This,idLang)	\
    ( (This)->lpVtbl -> get_Language(This,idLang) ) 

#define IGuideDataProperty_get_Value(This,pvar)	\
    ( (This)->lpVtbl -> get_Value(This,pvar) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IGuideDataProperty_INTERFACE_DEFINED__ */


#ifndef __IEnumGuideDataProperties_INTERFACE_DEFINED__
#define __IEnumGuideDataProperties_INTERFACE_DEFINED__

/* interface IEnumGuideDataProperties */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IEnumGuideDataProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AE44423B-4571-475c-AD2C-F40A771D80EF")
    IEnumGuideDataProperties : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ unsigned long celt,
            /* [out] */ __RPC__deref_out_opt IGuideDataProperty **ppprop,
            /* [out] */ __RPC__out unsigned long *pcelt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ unsigned long celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IEnumGuideDataProperties **ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumGuideDataPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IEnumGuideDataProperties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IEnumGuideDataProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IEnumGuideDataProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            __RPC__in IEnumGuideDataProperties * This,
            /* [in] */ unsigned long celt,
            /* [out] */ __RPC__deref_out_opt IGuideDataProperty **ppprop,
            /* [out] */ __RPC__out unsigned long *pcelt);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            __RPC__in IEnumGuideDataProperties * This,
            /* [in] */ unsigned long celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in IEnumGuideDataProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            __RPC__in IEnumGuideDataProperties * This,
            /* [out] */ __RPC__deref_out_opt IEnumGuideDataProperties **ppenum);
        
        END_INTERFACE
    } IEnumGuideDataPropertiesVtbl;

    interface IEnumGuideDataProperties
    {
        CONST_VTBL struct IEnumGuideDataPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumGuideDataProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumGuideDataProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumGuideDataProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumGuideDataProperties_Next(This,celt,ppprop,pcelt)	\
    ( (This)->lpVtbl -> Next(This,celt,ppprop,pcelt) ) 

#define IEnumGuideDataProperties_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IEnumGuideDataProperties_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumGuideDataProperties_Clone(This,ppenum)	\
    ( (This)->lpVtbl -> Clone(This,ppenum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumGuideDataProperties_INTERFACE_DEFINED__ */


#ifndef __IEnumTuneRequests_INTERFACE_DEFINED__
#define __IEnumTuneRequests_INTERFACE_DEFINED__

/* interface IEnumTuneRequests */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IEnumTuneRequests;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1993299C-CED6-4788-87A3-420067DCE0C7")
    IEnumTuneRequests : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ unsigned long celt,
            /* [out] */ __RPC__deref_out_opt ITuneRequest **ppprop,
            /* [out] */ __RPC__out unsigned long *pcelt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ unsigned long celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IEnumTuneRequests **ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumTuneRequestsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IEnumTuneRequests * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IEnumTuneRequests * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IEnumTuneRequests * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            __RPC__in IEnumTuneRequests * This,
            /* [in] */ unsigned long celt,
            /* [out] */ __RPC__deref_out_opt ITuneRequest **ppprop,
            /* [out] */ __RPC__out unsigned long *pcelt);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            __RPC__in IEnumTuneRequests * This,
            /* [in] */ unsigned long celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in IEnumTuneRequests * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            __RPC__in IEnumTuneRequests * This,
            /* [out] */ __RPC__deref_out_opt IEnumTuneRequests **ppenum);
        
        END_INTERFACE
    } IEnumTuneRequestsVtbl;

    interface IEnumTuneRequests
    {
        CONST_VTBL struct IEnumTuneRequestsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumTuneRequests_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumTuneRequests_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumTuneRequests_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumTuneRequests_Next(This,celt,ppprop,pcelt)	\
    ( (This)->lpVtbl -> Next(This,celt,ppprop,pcelt) ) 

#define IEnumTuneRequests_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IEnumTuneRequests_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumTuneRequests_Clone(This,ppenum)	\
    ( (This)->lpVtbl -> Clone(This,ppenum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumTuneRequests_INTERFACE_DEFINED__ */


#ifndef __IGuideData_INTERFACE_DEFINED__
#define __IGuideData_INTERFACE_DEFINED__

/* interface IGuideData */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IGuideData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("61571138-5B01-43cd-AEAF-60B784A0BF93")
    IGuideData : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetServices( 
            /* [retval][out] */ __RPC__deref_out_opt IEnumTuneRequests **ppEnumTuneRequests) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetServiceProperties( 
            /* [in] */ __RPC__in_opt ITuneRequest *pTuneRequest,
            /* [retval][out] */ __RPC__deref_out_opt IEnumGuideDataProperties **ppEnumProperties) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetGuideProgramIDs( 
            /* [retval][out] */ __RPC__deref_out_opt IEnumVARIANT **pEnumPrograms) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetProgramProperties( 
            /* [in] */ VARIANT varProgramDescriptionID,
            /* [retval][out] */ __RPC__deref_out_opt IEnumGuideDataProperties **ppEnumProperties) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetScheduleEntryIDs( 
            /* [retval][out] */ __RPC__deref_out_opt IEnumVARIANT **pEnumScheduleEntries) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetScheduleEntryProperties( 
            /* [in] */ VARIANT varScheduleEntryDescriptionID,
            /* [retval][out] */ __RPC__deref_out_opt IEnumGuideDataProperties **ppEnumProperties) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IGuideDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IGuideData * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IGuideData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IGuideData * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetServices )( 
            __RPC__in IGuideData * This,
            /* [retval][out] */ __RPC__deref_out_opt IEnumTuneRequests **ppEnumTuneRequests);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetServiceProperties )( 
            __RPC__in IGuideData * This,
            /* [in] */ __RPC__in_opt ITuneRequest *pTuneRequest,
            /* [retval][out] */ __RPC__deref_out_opt IEnumGuideDataProperties **ppEnumProperties);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetGuideProgramIDs )( 
            __RPC__in IGuideData * This,
            /* [retval][out] */ __RPC__deref_out_opt IEnumVARIANT **pEnumPrograms);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetProgramProperties )( 
            __RPC__in IGuideData * This,
            /* [in] */ VARIANT varProgramDescriptionID,
            /* [retval][out] */ __RPC__deref_out_opt IEnumGuideDataProperties **ppEnumProperties);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetScheduleEntryIDs )( 
            __RPC__in IGuideData * This,
            /* [retval][out] */ __RPC__deref_out_opt IEnumVARIANT **pEnumScheduleEntries);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetScheduleEntryProperties )( 
            __RPC__in IGuideData * This,
            /* [in] */ VARIANT varScheduleEntryDescriptionID,
            /* [retval][out] */ __RPC__deref_out_opt IEnumGuideDataProperties **ppEnumProperties);
        
        END_INTERFACE
    } IGuideDataVtbl;

    interface IGuideData
    {
        CONST_VTBL struct IGuideDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IGuideData_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IGuideData_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IGuideData_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IGuideData_GetServices(This,ppEnumTuneRequests)	\
    ( (This)->lpVtbl -> GetServices(This,ppEnumTuneRequests) ) 

#define IGuideData_GetServiceProperties(This,pTuneRequest,ppEnumProperties)	\
    ( (This)->lpVtbl -> GetServiceProperties(This,pTuneRequest,ppEnumProperties) ) 

#define IGuideData_GetGuideProgramIDs(This,pEnumPrograms)	\
    ( (This)->lpVtbl -> GetGuideProgramIDs(This,pEnumPrograms) ) 

#define IGuideData_GetProgramProperties(This,varProgramDescriptionID,ppEnumProperties)	\
    ( (This)->lpVtbl -> GetProgramProperties(This,varProgramDescriptionID,ppEnumProperties) ) 

#define IGuideData_GetScheduleEntryIDs(This,pEnumScheduleEntries)	\
    ( (This)->lpVtbl -> GetScheduleEntryIDs(This,pEnumScheduleEntries) ) 

#define IGuideData_GetScheduleEntryProperties(This,varScheduleEntryDescriptionID,ppEnumProperties)	\
    ( (This)->lpVtbl -> GetScheduleEntryProperties(This,varScheduleEntryDescriptionID,ppEnumProperties) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IGuideData_INTERFACE_DEFINED__ */


#ifndef __IGuideDataLoader_INTERFACE_DEFINED__
#define __IGuideDataLoader_INTERFACE_DEFINED__

/* interface IGuideDataLoader */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IGuideDataLoader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4764ff7c-fa95-4525-af4d-d32236db9e38")
    IGuideDataLoader : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Init( 
            /* [in] */ __RPC__in_opt IGuideData *pGuideStore) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Terminate( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IGuideDataLoaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IGuideDataLoader * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IGuideDataLoader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IGuideDataLoader * This);
        
        HRESULT ( STDMETHODCALLTYPE *Init )( 
            __RPC__in IGuideDataLoader * This,
            /* [in] */ __RPC__in_opt IGuideData *pGuideStore);
        
        HRESULT ( STDMETHODCALLTYPE *Terminate )( 
            __RPC__in IGuideDataLoader * This);
        
        END_INTERFACE
    } IGuideDataLoaderVtbl;

    interface IGuideDataLoader
    {
        CONST_VTBL struct IGuideDataLoaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IGuideDataLoader_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IGuideDataLoader_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IGuideDataLoader_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IGuideDataLoader_Init(This,pGuideStore)	\
    ( (This)->lpVtbl -> Init(This,pGuideStore) ) 

#define IGuideDataLoader_Terminate(This)	\
    ( (This)->lpVtbl -> Terminate(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IGuideDataLoader_INTERFACE_DEFINED__ */



#ifndef __PSISLOADLib_LIBRARY_DEFINED__
#define __PSISLOADLib_LIBRARY_DEFINED__

/* library PSISLOADLib */
/* [helpstring][version][uuid] */ 


EXTERN_C const IID LIBID_PSISLOADLib;

EXTERN_C const CLSID CLSID_TIFLoad;

#ifdef __cplusplus

class DECLSPEC_UUID("14EB8748-1753-4393-95AE-4F7E7A87AAD6")
TIFLoad;
#endif
#endif /* __PSISLOADLib_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_bdatif_0000_0012 */
/* [local] */ 

#if ( _MSC_VER >= 800 )
#pragma warning(default:4201)    /* Nameless struct/union */
#endif


extern RPC_IF_HANDLE __MIDL_itf_bdatif_0000_0012_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bdatif_0000_0012_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree64(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bdatypes.h ===
//------------------------------------------------------------------------------
// File: BDATypes.h
//
// Desc: Typedefs and enums needed by both the WDM drivers and the user mode
//       COM interfaces.
//
// Copyright (c) 1999 - 2004, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#ifndef _BDATYPES_

#define _BDATYPES_      1

// !!!! do not #pragma once, we use this file twice(once for native and once for mgd) in managed interop
#include <exposeenums2managed.h>

/* Utility Macros */

#define MIN_DIMENSION   1


//===========================================================================
//
//  BDA Topology Structures
//
//===========================================================================

#ifndef MANAGED_ENUMS

typedef struct _BDA_TEMPLATE_CONNECTION
{
    ULONG   FromNodeType;
    ULONG   FromNodePinType;
    ULONG   ToNodeType;
    ULONG   ToNodePinType;
}BDA_TEMPLATE_CONNECTION, *PBDA_TEMPLATE_CONNECTION;


typedef struct _BDA_TEMPLATE_PIN_JOINT
{
    ULONG   uliTemplateConnection;
    ULONG   ulcInstancesMax;
}BDA_TEMPLATE_PIN_JOINT, *PBDA_TEMPLATE_PIN_JOINT;
#endif


//===========================================================================
//
//  BDA Events
//
//===========================================================================

//  In-band Event IDs
//
ENUM BDA_EVENT_ID {
    BDA_EVENT_SIGNAL_LOSS = 0,
    BDA_EVENT_SIGNAL_LOCK,
    BDA_EVENT_DATA_START,
    BDA_EVENT_DATA_STOP,
    BDA_EVENT_CHANNEL_ACQUIRED,
    BDA_EVENT_CHANNEL_LOST,
    BDA_EVENT_CHANNEL_SOURCE_CHANGED,
    BDA_EVENT_CHANNEL_ACTIVATED,
    BDA_EVENT_CHANNEL_DEACTIVATED,
    BDA_EVENT_SUBCHANNEL_ACQUIRED,
    BDA_EVENT_SUBCHANNEL_LOST,
    BDA_EVENT_SUBCHANNEL_SOURCE_CHANGED,
    BDA_EVENT_SUBCHANNEL_ACTIVATED,
    BDA_EVENT_SUBCHANNEL_DEACTIVATED,
    BDA_EVENT_ACCESS_GRANTED,
    BDA_EVENT_ACCESS_DENIED,
    BDA_EVENT_OFFER_EXTENDED,
    BDA_EVENT_PURCHASE_COMPLETED,
    BDA_EVENT_SMART_CARD_INSERTED,
    BDA_EVENT_SMART_CARD_REMOVED
} BDA_EVENT_ID, *PBDA_EVENT_ID;



//===========================================================================
//
//  KSSTREAM_HEADER extensions for BDA
//
//===========================================================================

#ifndef MANAGED_ENUMS
typedef struct tagKS_BDA_FRAME_INFO {
    ULONG                   ExtendedHeaderSize; // Size of this extended header
    DWORD                   dwFrameFlags;  //
    ULONG                   ulEvent; //
    ULONG                   ulChannelNumber; //
    ULONG                   ulSubchannelNumber; //
    ULONG                   ulReason; //
} KS_BDA_FRAME_INFO, *PKS_BDA_FRAME_INFO;


//------------------------------------------------------------
//
//  BDA Network Ethernet Filter Property Set
//
// {71985F43-1CA1-11d3-9CC8-00C04F7971E0}
//
typedef struct _BDA_ETHERNET_ADDRESS {
    BYTE    rgbAddress[6];
} BDA_ETHERNET_ADDRESS, *PBDA_ETHERNET_ADDRESS;

typedef struct _BDA_ETHERNET_ADDRESS_LIST {
    ULONG               ulcAddresses;
    BDA_ETHERNET_ADDRESS    rgAddressl[MIN_DIMENSION];
} BDA_ETHERNET_ADDRESS_LIST, * PBDA_ETHERNET_ADDRESS_LIST;

#endif

ENUM BDA_MULTICAST_MODE {
    BDA_PROMISCUOUS_MULTICAST = 0,
    BDA_FILTERED_MULTICAST,
    BDA_NO_MULTICAST
} BDA_MULTICAST_MODE, *PBDA_MULTICAST_MODE;


//------------------------------------------------------------
//
//  BDA Network IPv4 Filter Property Set
//
// {71985F44-1CA1-11d3-9CC8-00C04F7971E0}
//
#ifndef MANAGED_ENUMS
typedef struct _BDA_IPv4_ADDRESS {
    BYTE    rgbAddress[4];
} BDA_IPv4_ADDRESS, *PBDA_IPv4_ADDRESS;

typedef struct _BDA_IPv4_ADDRESS_LIST {
    ULONG               ulcAddresses;
    BDA_IPv4_ADDRESS    rgAddressl[MIN_DIMENSION];
} BDA_IPv4_ADDRESS_LIST, * PBDA_IPv4_ADDRESS_LIST;

//------------------------------------------------------------
//
//  BDA Network IPv4 Filter Property Set
//
// {E1785A74-2A23-4fb3-9245-A8F88017EF33}
//
typedef struct _BDA_IPv6_ADDRESS {
    BYTE    rgbAddress[6];
} BDA_IPv6_ADDRESS, *PBDA_IPv6_ADDRESS;

typedef struct _BDA_IPv6_ADDRESS_LIST {
    ULONG               ulcAddresses;
    BDA_IPv6_ADDRESS    rgAddressl[MIN_DIMENSION];
} BDA_IPv6_ADDRESS_LIST, * PBDA_IPv6_ADDRESS_LIST;

#endif


//------------------------------------------------------------
//
//
//  BDA Signal Property Set
//
//  {D2F1644B-B409-11d2-BC69-00A0C9EE9E16}
//
ENUM BDA_SIGNAL_STATE {
    BDA_SIGNAL_UNAVAILABLE = 0,
    BDA_SIGNAL_INACTIVE,
    BDA_SIGNAL_ACTIVE
} BDA_SIGNAL_STATE, * PBDA_SIGNAL_STATE;


//------------------------------------------------------------
//
//
//  BDA Change Sync Method Set
//
// {FD0A5AF3-B41D-11d2-9C95-00C04F7971E0}
//
ENUM BDA_CHANGE_STATE {
    BDA_CHANGES_COMPLETE = 0,
    BDA_CHANGES_PENDING
} BDA_CHANGE_STATE, * PBDA_CHANGE_STATE;


//------------------------------------------------------------
//
//
//  BDA Device Configuration Method Set
//
// {71985F45-1CA1-11d3-9CC8-00C04F7971E0}
//


//------------------------------------------------------------
//
//
//  BDA Topology Property Set
//
// {A14EE835-0A23-11d3-9CC7-00C04F7971E0}
//

#ifndef MANAGED_ENUMS
typedef struct _BDANODE_DESCRIPTOR
{
    ULONG               ulBdaNodeType;  // The node type as it is used
                                        // in the BDA template topology

    GUID                guidFunction;   // GUID from BdaMedia.h describing
                                        // the node's function (e.g.
                                        // KSNODE_BDA_RF_TUNER)

    GUID                guidName;       // GUID that can be use to look up
                                        // a displayable name for the node.
} BDANODE_DESCRIPTOR, *PBDANODE_DESCRIPTOR;


//------------------------------------------------------------
//
//
//  BDA Void Transform Property Set
//
// {71985F46-1CA1-11d3-9CC8-00C04F7971E0}
//


//------------------------------------------------------------
//
//
//  BDA Null Transform Property Set
//
// {DDF15B0D-BD25-11d2-9CA0-00C04F7971E0}
//


//------------------------------------------------------------
//
//
//  BDA Frequency Filter Property Set
//
// {71985F47-1CA1-11d3-9CC8-00C04F7971E0}
//


//------------------------------------------------------------
//
//
//  BDA Autodemodulate Property Set
//
// {DDF15B12-BD25-11d2-9CA0-00C04F7971E0}
//


//------------------------------------------------------------
//
//
//  BDA Table Section Property Set
//
// {516B99C5-971C-4aaf-B3F3-D9FDA8A15E16}
//

typedef struct _BDA_TABLE_SECTION
{
    ULONG               ulPrimarySectionId;
    ULONG               ulSecondarySectionId;
    ULONG               ulcbSectionLength;
    ULONG               argbSectionData[MIN_DIMENSION];
} BDA_TABLE_SECTION, *PBDA_TABLE_SECTION;

#endif

#ifndef MANAGED_ENUMS

//------------------------------------------------------------
//
//
//  BDA Diseq Command Property Set
//
// {F84E2AB0-3C6B-45e3-A0FC-8669D4B81F11}
//

typedef struct _BDA_DISEQC_SEND
{
    ULONG   ulRequestId;
    ULONG   ulPacketLength;
    BYTE    argbPacketData[8];
} BDA_DISEQC_SEND, *PBDA_DISEQC_SEND;

typedef struct _BDA_DISEQC_RESPONSE
{
    ULONG   ulRequestId;
    ULONG   ulPacketLength;
    BYTE    argbPacketData[8];
} BDA_DISEQC_RESPONSE, *PBDA_DISEQC_RESPONSE;


#endif
//------------------------------------------------------------
//
//
//  BDA PID Filter Property Set
//
// {D0A67D65-08DF-4fec-8533-E5B550410B85}
//

//---------------------------------------------------------------------
// From IEnumPIDMap interface
//---------------------------------------------------------------------

ENUM MEDIA_SAMPLE_CONTENT {
    MEDIA_TRANSPORT_PACKET,         //  complete TS packet e.g. pass-through mode
    MEDIA_ELEMENTARY_STREAM,        //  PES payloads; audio/video only
    MEDIA_MPEG2_PSI,                //  PAT, PMT, CAT, Private
    MEDIA_TRANSPORT_PAYLOAD         //  gathered TS packet payloads (PES packets, etc...)
} MEDIA_SAMPLE_CONTENT ;

#ifndef MANAGED_ENUMS
typedef struct {
    ULONG                   ulPID ;
    MEDIA_SAMPLE_CONTENT    MediaSampleContent ;
} PID_MAP ;

typedef struct _BDA_PID_MAP
{
    MEDIA_SAMPLE_CONTENT    MediaSampleContent;
    ULONG                   ulcPIDs;
    ULONG                   aulPIDs[MIN_DIMENSION];
} BDA_PID_MAP, *PBDA_PID_MAP;

typedef struct _BDA_PID_UNMAP
{
    ULONG               ulcPIDs;
    ULONG               aulPIDs[MIN_DIMENSION];
} BDA_PID_UNMAP, *PBDA_PID_UNMAP;


//------------------------------------------------------------
//
//
//  BDA CA Property Set
//
// {B0693766-5278-4ec6-B9E1-3CE40560EF5A}
//
typedef struct _BDA_CA_MODULE_UI
{
    ULONG   ulFormat;
    ULONG   ulbcDesc;
    ULONG   ulDesc[MIN_DIMENSION];
} BDA_CA_MODULE_UI, *PBDA_CA_MODULE_UI;

typedef struct _BDA_PROGRAM_PID_LIST
{
    ULONG   ulProgramNumber;
    ULONG   ulcPIDs;
    ULONG   ulPID[MIN_DIMENSION];
} BDA_PROGRAM_PID_LIST, *PBDA_PROGRAM_PID_LIST;

#endif

//------------------------------------------------------------
//
//
//  BDA CA Event Set
//
// {488C4CCC-B768-4129-8EB1-B00A071F9068}
//

#ifndef MANAGED_ENUMS

//=============================================================
// PBDA RESULT parameter definition 
//=============================================================
typedef LONG PBDARESULT;

//=============================================================
//  BDA_DRM_STATUS used by the DRMService
//=============================================================

typedef struct _BDA_DRM_DRMSTATUS 
{
    PBDARESULT lResult;
    GUID    DRMuuid;
    ULONG   ulDrmUuidListStringSize; 
    GUID    argbDrmUuidListString[MIN_DIMENSION];
} BDA_DRM_DRMSTATUS, *PBDA_DRM_DRMSTATUS;


//=============================================================
// PBDA_WMDRM and PBDA_WMDRMTuner structures 
//=============================================================

typedef struct _BDA_WMDRM_STATUS
{
    PBDARESULT lResult;
    ULONG      ulMaxCaptureTokenSize; 
    ULONG      uMaxStreamingPid; 
    ULONG      ulMaxLicense; 
    ULONG      ulMinSecurityLevel; 
    ULONG      ulRevInfoSequenceNumber; 
    ULONGLONG  ulRevInfoIssuedTime; 
    ULONG      ulRevListVersion; 
    ULONG      ulRevInfoTTL; 
    ULONG      ulState;
} BDA_WMDRM_STATUS, *PBDA_WMDRM_STATUS;

typedef struct _BDA_WMDRM_KEYINFOLIST 
{
    PBDARESULT  lResult;
    ULONG       ulKeyuuidBufferLen;
    GUID        argKeyuuidBuffer[MIN_DIMENSION];
} BDA_WMDRM_KEYINFOLIST, *PBDA_WMDRM_KEYINFOLIST;

typedef struct _BDA_BUFFER 
{
    PBDARESULT  lResult;
    ULONG       ulBufferSize;
    BYTE        argbBuffer[MIN_DIMENSION];
} BDA_BUFFER, *PBDA_BUFFER;

//=============================================================
// PBDA - DRM structures used in methods
//=============================================================

typedef struct _BDA_WMDRM_RENEWLICENSE 
{
    PBDARESULT  lResult;
    ULONG       ulDescrambleStatus; 
    ULONG       ulXmrLicenseOutputLength; 
    BYTE        argbXmrLicenceOutputBuffer[MIN_DIMENSION]; //License and Entitlement Token Buffer 
} BDA_WMDRM_RENEWLICENSE, *PBDA_WMDRM_RENEWLICENSE;

typedef struct _BDA_WMDRMTUNER_PIDPROTECTION 
{
    PBDARESULT  lResult;
    GUID        uuidKeyID;  
} BDA_WMDRMTUNER_PIDPROTECTION, *PBDA_WMDRMTUNER_PIDPROTECTION;

typedef struct _BDA_WMDRMTUNER_PURCHASEENTITLEMENT
{
    PBDARESULT  lResult;
    ULONG       ulDescrambleStatus;
    ULONG       ulCaptureTokenLength;
    BYTE        argbCaptureTokenBuffer[MIN_DIMENSION]; 
} BDA_WMDRMTUNER_PURCHASEENTITLEMENT, *PBDA_WMDRMTUNER_PURCHASEENTITLEMENT;

//=============================================================
// PBDA - TUNER structures used in methods
//=============================================================

typedef struct _BDA_TUNER_TUNERSTATE {
    PBDARESULT  lResult;
    ULONG       ulTuneLength; 
    BYTE        argbTuneData [MIN_DIMENSION];
} BDA_TUNER_TUNERSTATE, *PBDA_TUNER_TUNERSTATE;

typedef struct _BDA_TUNER_DIAGNOSTICS {
    PBDARESULT  lResult;
    ULONG       ulSignalLevel;
    ULONG       ulSignalLevelQuality;
    ULONG       ulSignalNoiseRatio; 
} BDA_TUNER_DIAGNOSTICS, *PBDA_TUNER_DIAGNOSTICS;

//=============================================================
// PBDA - STRING structure used in methods
//=============================================================

typedef struct _BDA_STRING 
{
    PBDARESULT  lResult;
    ULONG       ulStringSize;
    BYTE        argbString[MIN_DIMENSION];
} BDA_STRING, *PBDA_STRING;


//=============================================================
// PBDA - SCANNING structures used in methods
//=============================================================

typedef struct _BDA_SCAN_CAPABILTIES 
{
    PBDARESULT  lResult;
    UINT64      ul64AnalogStandardsSupported;    
} BDA_SCAN_CAPABILTIES, *PBDA_SCAN_CAPABILTIES;

typedef struct _BDA_SCAN_STATE 
{
    PBDARESULT  lResult;
    ULONG       ulSignalLock;
    ULONG       ulSecondsLeft;
    ULONG       ulCurrentFrequency;    
} BDA_SCAN_STATE, *PBDA_SCAN_STATE; 

typedef struct _BDA_SCAN_START 
{
    PBDARESULT  lResult;
    ULONG       LowerFrequency;
    ULONG       HigerFrequency;
} BDA_SCAN_START, *PBDA_SCAN_START;


//=============================================================
// PBDA - GUIDE DATA structures used in methods
//=============================================================

typedef struct _BDA_GDDS_DATATYPE 
{
    PBDARESULT  lResult;
    GUID        uuidDataType; 
} BDA_GDDS_DATATYPE, *P_BDA_GDDS_DATATYPE;

typedef struct _BDA_GDDS_DATA 
{
    PBDARESULT  lResult;
    ULONG       ulDataLength; 
    ULONG       ulPercentageProgress;
    BYTE        argbData [MIN_DIMENSION];
} BDA_GDDS_DATA, *P_BDA_GDDS_DATA;


//=============================================================
// PBDA - USER ACTIVITY structures used in methods
//=============================================================

typedef struct _BDA_USERACTIVITY_INTERVAL 
{
    PBDARESULT  lResult;
    ULONG       ulActivityInterval; 
} BDA_USERACTIVITY_INTERVAL, *P_BDA_USERACTIVITY_INTERVAL;


//=============================================================
// PBDA - CAS structures used in methods
//=============================================================

typedef struct _BDA_CAS_CHECK_ENTITLEMENTTOKEN 
{
    PBDARESULT  lResult;
    ULONG       ulDescrambleStatus; 
} BDA_CAS_CHECK_ENTITLEMENTTOKEN, *PBDA_CAS_CHECK_ENTITLEMENTTOKEN;

typedef struct _BDA_CAS_CLOSE_MMIDIALOG 
{
    PBDARESULT  lResult;
    ULONG       SessionResult;
} BDA_CAS_CLOSE_MMIDIALOG, *PBDA_CAS_CLOSE_MMIDIALOG;

typedef struct _BDA_CAS_REQUESTTUNERDATA
{
    UCHAR       ucRequestPriority;
    UCHAR       ucRequestReason;
    UCHAR       ucRequestConsequences;
    ULONG       ulEstimatedTime;
} BDA_CAS_REQUESTTUNERDATA, *PBDA_CAS_REQUESTTUNERDATA;

typedef struct _BDA_CAS_OPENMMIDATA 
{
    ULONG       ulDialogNumber;
    ULONG       ulDialogRequest;
    GUID        uuidDialogType;
    USHORT      usDialogDataLength;
    BYTE        argbDialogData[MIN_DIMENSION];
} BDA_CAS_OPENMMIDATA, *PBDA_CAS_OPENMMIDATA;

typedef struct _BDA_CAS_CLOSEMMIDATA 
{
    ULONG       ulDialogNumber;
} BDA_CAS_CLOSEMMIDATA, *PBDA_CAS_CLOSEMMIDATA;

//=============================================================
// PBDA - ISDB CAS structures used in methods
//=============================================================

#pragma pack(push, 1)

ENUM ISDBCAS_REQUEST_ID {
    ISDBCAS_REQUEST_ID_EMG = 0x38,
    ISDBCAS_REQUEST_ID_EMD = 0x3A,
} ISDBCAS_REQUEST_ID ;

typedef struct _BDA_ISDBCAS_REQUESTHEADER 
{
    BYTE        bInstruction;                   // EMD/EMG
    BYTE        bReserved[3];                   // future use
    ULONG       ulDataLength;                   // byte size of argbIsdbCommand
    BYTE        argbIsdbCommand[MIN_DIMENSION];
} BDA_ISDBCAS_REQUESTHEADER, *PBDA_ISDBCAS_REQUESTHEADER;

typedef struct _BDA_ISDBCAS_RESPONSEDATA 
{
    PBDARESULT  lResult;
    ULONG       ulRequestID;
    ULONG       ulIsdbStatus;
    ULONG       ulIsdbDataSize;
    BYTE        argbIsdbCommandData[MIN_DIMENSION];
} BDA_ISDBCAS_RESPONSEDATA, *PBDA_ISDBCAS_RESPONSEDATA;

typedef struct _BDA_ISDBCAS_EMG_REQ 
{
    BYTE        bCLA;                           // 0x90
    BYTE        bINS;                           // 0x38
    BYTE        bP1;                            // 0x00
    BYTE        bP2;                            // 0x00
    BYTE        bLC;                            // Following bytes - 1(LE)
    BYTE        bCardId[6];                     // from EMM message packet
    BYTE        bProtocol;                      // from EMM message packet
    BYTE        bCABroadcasterGroupId;          // from EMM message packet
    BYTE        bMessageControl;                // from EMM message packet
    BYTE        bMessageCode[MIN_DIMENSION];    // Last byte is reserved as 'LE'
} BDA_ISDBCAS_EMG_REQ, *PBDA_ISDBCAS_EMG_REQ;

#pragma pack(pop)

//=============================================================
// PBDA - MUX structures used in methods
//=============================================================
ENUM MUX_PID_TYPE {
    PID_OTHER = -1,
    PID_ELEMENTARY_STREAM,            //  PES payloads
    PID_MPEG2_SECTION_PSI_SI,       //  ISO 13818_1 Sections PAT, PMT, CAT, Private. Service Information Sections e.g SDT, NIT, EIT, BAT
} MUX_PID_TYPE ;

#pragma pack(push, 2)
typedef struct _BDA_MUX_PIDLISTITEM 
{
    USHORT          usPIDNumber;        //PID number of the stream
    USHORT          usProgramNumber;    //associated Service Id, if applicable
    MUX_PID_TYPE    ePIDType;           //PID Type of the stream if applicable
} BDA_MUX_PIDLISTITEM, *PBDA_MUX_PIDLISTITEM;
#pragma pack(pop)

#endif

//=============================================================
// BDA - TS Selector structures used in methods
//=============================================================

//  |<-------------- bTSInfolength ---------------------->|
//  |                                                     |
//  |                     |                               |
//  | BDA_TS_SELECTORINFO | BDA_TS_SELECTORINFO_ISDBS_EXT |
//  |                     | (for ISDB-S extension)        |
//  |                     |                               |

#pragma pack(push, 1)
typedef struct _BDA_TS_SELECTORINFO
{
    BYTE            bTSInfolength;          // buffer length including extension
    BYTE            bReserved[2];
    GUID            guidNetworkType;        // current type of tuning
    BYTE            bTSIDCount;             // number of usTSID
    USHORT          usTSID[MIN_DIMENSION];
} BDA_TS_SELECTORINFO, *PBDA_TS_SELECTORINFO;

typedef struct _BDA_TS_SELECTORINFO_ISDBS_EXT
{
    BYTE            bTMCC[48];
} BDA_TS_SELECTORINFO_ISDBS_EXT, *PBDA_TS_SELECTORINFO_ISDBS_EXT;
#pragma pack(pop)

//DVB-T2 related L1 signalling information returned in _GETTSINFORMATION

typedef struct _BDA_DVBT2_L1_SIGNALLING_DATA 
{
    BYTE  L1Pre_TYPE;
    BYTE  L1Pre_BWT_S1_S2;
    BYTE  L1Pre_REPETITION_GUARD_PAPR;
    BYTE  L1Pre_MOD_COD_FEC;
    BYTE  L1Pre_POSTSIZE_INFO_PILOT[5];
    BYTE  L1Pre_TX_ID_AVAIL;
    BYTE  L1Pre_CELL_ID[2];
    BYTE  L1Pre_NETWORK_ID[2];
    BYTE  L1Pre_T2SYSTEM_ID[2];
    BYTE  L1Pre_NUM_T2_FRAMES;
    BYTE  L1Pre_NUM_DATA_REGENFLAG_L1POSTEXT[2];
    BYTE  L1Pre_NUMRF_CURRENTRF_RESERVED[2];
    BYTE  L1Pre_CRC32[4];
    BYTE  L1PostData[MIN_DIMENSION];
} BDA_DVBT2_L1_SIGNALLING_DATA, *PBDA_DVBT2_L1_SIGNALLING_DATA;


//=============================================================
// PBDA - RATING structures used in methods
//=============================================================
typedef struct _BDA_RATING_PINRESET 
{
    BYTE    bPinLength;                 //Buffer size including a null termination
    BYTE    argbNewPin[MIN_DIMENSION];  //Null terminated UTF8. Use empty string if disable pin
} BDA_RATING_PINRESET, *PBDA_RATING_PINRESET;

//=============================================================
//
//
//  BDA Tuning Model enumerations
//
//
//=============================================================

// system type for particular DVB Tuning Space instance
ENUM DVBSystemType {
    DVB_Cable,
    DVB_Terrestrial,
    DVB_Satellite,
    ISDB_Terrestrial,
    ISDB_Satellite,
} DVBSystemType;

//------------------------------------------------------------
//
//  BDA Channel Tune Request

ENUM  BDA_Channel {
    BDA_UNDEFINED_CHANNEL = -1,
} BDA_Channel ;


//------------------------------------------------------------
//
//  BDA Component(substream)
//
//  Note: Persistent TS remember preferred component categories by their number.
//        Please update the rgs files at multimedia\dshow\vidctl\msvidctl\res
//        and multimedia\dshow\vidctl\manifests\Video-TVVideoControl.man accordingly
//        if the order/value changes.
//        Also make sure ehiProxy.asmmeta, ehiVidCtl.asmmeta and bdatunepia.asmmeta
//        are properly updated.
//
ENUM ComponentCategory {
    CategoryNotSet = -1,
    CategoryOther = 0,
    CategoryVideo,
    CategoryAudio,
    CategoryText,
    CategorySubtitles,
    CategoryCaptions,
    CategorySuperimpose,
    CategoryData,
    CATEGORY_COUNT,
} ComponentCategory;

// Component Status
ENUM ComponentStatus {
    StatusActive,
    StatusInactive,
    StatusUnavailable,
} ComponentStatus;


//------------------------------------------------------------
//
//  BDA MPEG2 Component Type
//
// from the MPEG2 specification
ENUM MPEG2StreamType {
    BDA_UNITIALIZED_MPEG2STREAMTYPE = -1,
    Reserved1                       = 0x00,
    ISO_IEC_11172_2_VIDEO           = 0x01,
    ISO_IEC_13818_2_VIDEO           = 0x02,
    ISO_IEC_11172_3_AUDIO           = 0x03,
    ISO_IEC_13818_3_AUDIO           = 0x04,
    ISO_IEC_13818_1_PRIVATE_SECTION = 0x05,
    ISO_IEC_13818_1_PES             = 0x06,
    ISO_IEC_13522_MHEG              = 0x07,
    ANNEX_A_DSM_CC                  = 0x08,
    ITU_T_REC_H_222_1               = 0x09,
    ISO_IEC_13818_6_TYPE_A          = 0x0A,
    ISO_IEC_13818_6_TYPE_B          = 0x0B,
    ISO_IEC_13818_6_TYPE_C          = 0x0C,
    ISO_IEC_13818_6_TYPE_D          = 0x0D,
    ISO_IEC_13818_1_AUXILIARY       = 0x0E,
    ISO_IEC_13818_7_AUDIO           = 0x0F,
    ISO_IEC_14496_2_VISUAL          = 0x10,
    ISO_IEC_14496_3_AUDIO           = 0x11,
    ISO_IEC_14496_1_IN_PES          = 0x12,
    ISO_IEC_14496_1_IN_SECTION      = 0x13,
    ISO_IEC_13818_6_DOWNLOAD        = 0x14,
    METADATA_IN_PES                 = 0x15,
    METADATA_IN_SECTION             = 0x16,
    METADATA_IN_DATA_CAROUSEL       = 0x17,
    METADATA_IN_OBJECT_CAROUSEL     = 0x18,
    METADATA_IN_DOWNLOAD_PROTOCOL   = 0x19,
    IRPM_STREAMM                    = 0x1A,
    ITU_T_H264                      = 0x1B,
    ISO_IEC_13818_1_RESERVED        = 0x1C, // continues until 0x7F
    USER_PRIVATE                    = 0x10, // standard says 0x80, retaining for backwards compatibility
    ISO_IEC_USER_PRIVATE            = 0x80,
    DOLBY_AC3_AUDIO                 = 0x81,
    DOLBY_DIGITAL_PLUS_AUDIO_ATSC   = 0X87
} MPEG2StreamType;

//------------------------------------------------------------
//
//  mpeg-2 transport stride format block; associated with media
//   types MEDIATYPE_Stream/MEDIASUBTYPE_MPEG2_TRANSPORT_STRIDE;
//   *all* format blocks associated with above media type *must*
//   start with the MPEG2_TRANSPORT_STRIDE structure
//

#ifndef MANAGED_ENUMS
typedef struct _MPEG2_TRANSPORT_STRIDE {
    DWORD   dwOffset ;
    DWORD   dwPacketLength ;
    DWORD   dwStride ;
} MPEG2_TRANSPORT_STRIDE, *PMPEG2_TRANSPORT_STRIDE ;
#endif

//------------------------------------------------------------
//
//  BDA ATSC Component Type
//
//
// ATSC made AC3 Audio a descriptor instead of
// defining a user private stream type.

FLAGS ATSCComponentTypeFlags {
    // bit flags for various component type properties
    ATSCCT_AC3 = 0x00000001,
} ATSCComponentTypeFlags;


//------------------------------------------------------------
//
//  BDA Locators
//


ENUM BinaryConvolutionCodeRate {
    BDA_BCC_RATE_NOT_SET = -1,
    BDA_BCC_RATE_NOT_DEFINED = 0,
    BDA_BCC_RATE_1_2 = 1,   // 1/2
    BDA_BCC_RATE_2_3,       // 2/3
    BDA_BCC_RATE_3_4,       // 3/4
    BDA_BCC_RATE_3_5,       // 3/5
    BDA_BCC_RATE_4_5,       // 4/5
    BDA_BCC_RATE_5_6,       // 5/6
    BDA_BCC_RATE_5_11,      // 5/11
    BDA_BCC_RATE_7_8,       // 7/8
    BDA_BCC_RATE_1_4,       // 1/4
    BDA_BCC_RATE_1_3,       // 1/3
    BDA_BCC_RATE_2_5,       // 2/5
    BDA_BCC_RATE_6_7,       // 6/7
    BDA_BCC_RATE_8_9,       // 8/9
    BDA_BCC_RATE_9_10,      // 9/10
    BDA_BCC_RATE_MAX,
} BinaryConvolutionCodeRate;

ENUM FECMethod {
    BDA_FEC_METHOD_NOT_SET = -1,
    BDA_FEC_METHOD_NOT_DEFINED = 0,
    BDA_FEC_VITERBI = 1,    // FEC is a Viterbi Binary Convolution.
    BDA_FEC_RS_204_188,     // The FEC is Reed-Solomon 204/188 (outer FEC)
    BDA_FEC_LDPC,           // Low Density Parity Check error correction code
    BDA_FEC_BCH,            // Bose-Chaudhuri-Hocquenghem multiple error correction binary block code
    BDA_FEC_RS_147_130,     // The FEC is Reed-Solomon 147/130 (outer FEC) DirecTV-DSS
    BDA_FEC_MAX,
} FECMethod;

ENUM ModulationType {
    BDA_MOD_NOT_SET = -1,
    BDA_MOD_NOT_DEFINED = 0,
    BDA_MOD_16QAM = 1,
    BDA_MOD_32QAM,
    BDA_MOD_64QAM,
    BDA_MOD_80QAM,
    BDA_MOD_96QAM,
    BDA_MOD_112QAM,
    BDA_MOD_128QAM,
    BDA_MOD_160QAM,
    BDA_MOD_192QAM,
    BDA_MOD_224QAM,
    BDA_MOD_256QAM,
    BDA_MOD_320QAM,
    BDA_MOD_384QAM,
    BDA_MOD_448QAM,
    BDA_MOD_512QAM,
    BDA_MOD_640QAM,
    BDA_MOD_768QAM,
    BDA_MOD_896QAM,
    BDA_MOD_1024QAM,
    BDA_MOD_QPSK,             // Quadrature Phase Shift Keying (including backwards compatible mode)
    BDA_MOD_BPSK,             // Binary Phase Shift Keying
    BDA_MOD_OQPSK,            // Offset QPSK
    BDA_MOD_8VSB,             // 8-Level Vestigial Sideband
    BDA_MOD_16VSB,            // 16-Level Vestigial Sideband
    BDA_MOD_ANALOG_AMPLITUDE, // std am
    BDA_MOD_ANALOG_FREQUENCY, // std fm
    BDA_MOD_8PSK,             // 8 Phase Shift Keying (including backwards compatible mode)
    BDA_MOD_RF, // analog TV (Video standards such as NTSC/PAL/SECAM specified in IAnalogLocator VideoStandard property)
    BDA_MOD_16APSK,           // DVB-S2 modulation 16-Level APSK
    BDA_MOD_32APSK,           // DVB-S2 modulation 32-Level APSK
    BDA_MOD_NBC_QPSK,         // Non-Backwards Compatible Quadrature Phase Shift Keying
    BDA_MOD_NBC_8PSK,         // Non-Backwards Compatible 8 Phase Shift Keying
    BDA_MOD_DIRECTV,          // DIRECTV DSS
    BDA_MOD_ISDB_T_TMCC,      // Automatic demodulation by Transmission and Multiplexing Configuration Control signal for ISDB-T
    BDA_MOD_ISDB_S_TMCC,      // Automatic demodulation by Transmission and Multiplexing Configuration Control signal for ISDB-S
    BDA_MOD_MAX,
} ModulationType;

FLAGS TAG(ScanModulationTypes)
{
    BDA_SCAN_MOD_16QAM    = 0x00000001,
    BDA_SCAN_MOD_32QAM    = 0x00000002,
    BDA_SCAN_MOD_64QAM    = 0x00000004,
    BDA_SCAN_MOD_80QAM    = 0x00000008,
    BDA_SCAN_MOD_96QAM    = 0x00000010,
    BDA_SCAN_MOD_112QAM   = 0x00000020,
    BDA_SCAN_MOD_128QAM   = 0x00000040,
    BDA_SCAN_MOD_160QAM   = 0x00000080,
    BDA_SCAN_MOD_192QAM   = 0x00000100,
    BDA_SCAN_MOD_224QAM   = 0x00000200,
    BDA_SCAN_MOD_256QAM   = 0x00000400,
    BDA_SCAN_MOD_320QAM   = 0x00000800,
    BDA_SCAN_MOD_384QAM   = 0x00001000,
    BDA_SCAN_MOD_448QAM   = 0x00002000,
    BDA_SCAN_MOD_512QAM   = 0x00004000,
    BDA_SCAN_MOD_640QAM   = 0x00008000,
    BDA_SCAN_MOD_768QAM   = 0x00010000,
    BDA_SCAN_MOD_896QAM   = 0x00020000,
    BDA_SCAN_MOD_1024QAM  = 0x00040000,
    BDA_SCAN_MOD_QPSK     = 0x00080000,
    BDA_SCAN_MOD_BPSK     = 0x00100000,
    BDA_SCAN_MOD_OQPSK    = 0x00200000,
    BDA_SCAN_MOD_8VSB     = 0x00400000,
    BDA_SCAN_MOD_16VSB    = 0x00800000,
    BDA_SCAN_MOD_AM_RADIO = 0x01000000,
    BDA_SCAN_MOD_FM_RADIO = 0x02000000,
    BDA_SCAN_MOD_8PSK     = 0x04000000,
    BDA_SCAN_MOD_RF       = 0x08000000, // analog TV
    ScanModulationTypesMask_MCE_DigitalCable = BDA_MOD_64QAM |
                            BDA_MOD_256QAM,
    ScanModulationTypesMask_MCE_TerrestrialATSC = BDA_MOD_8VSB,
    ScanModulationTypesMask_MCE_AnalogTv = BDA_MOD_RF,
    ScanModulationTypesMask_MCE_All_TV = 0xffffffff,
    ScanModulationTypesMask_DVBC = BDA_MOD_64QAM | BDA_SCAN_MOD_128QAM |
                            BDA_MOD_256QAM,
    BDA_SCAN_MOD_16APSK     = 0x10000000,
    BDA_SCAN_MOD_32APSK     = 0x20000000,
} ScanModulationTypes;

ENUM SpectralInversion {
    BDA_SPECTRAL_INVERSION_NOT_SET = -1,
    BDA_SPECTRAL_INVERSION_NOT_DEFINED = 0,
    BDA_SPECTRAL_INVERSION_AUTOMATIC = 1,
    BDA_SPECTRAL_INVERSION_NORMAL,
    BDA_SPECTRAL_INVERSION_INVERTED,
    BDA_SPECTRAL_INVERSION_MAX
} SpectralInversion;

ENUM Polarisation {
    BDA_POLARISATION_NOT_SET = -1,
    BDA_POLARISATION_NOT_DEFINED = 0,
    BDA_POLARISATION_LINEAR_H = 1, // Linear horizontal polarisation
    BDA_POLARISATION_LINEAR_V, // Linear vertical polarisation
    BDA_POLARISATION_CIRCULAR_L, // Circular left polarisation
    BDA_POLARISATION_CIRCULAR_R, // Circular right polarisation
    BDA_POLARISATION_MAX,
} Polarisation;

ENUM LNB_Source {
    BDA_LNB_SOURCE_NOT_SET = -1,
    BDA_LNB_SOURCE_NOT_DEFINED = 0,
    BDA_LNB_SOURCE_A = 1, // 
    BDA_LNB_SOURCE_B = 2, // 
    BDA_LNB_SOURCE_C = 3, // 
    BDA_LNB_SOURCE_D = 4, // 
    BDA_LNB_SOURCE_MAX,
} LNB_Source;


ENUM GuardInterval {
    BDA_GUARD_NOT_SET = -1,
    BDA_GUARD_NOT_DEFINED = 0,
    BDA_GUARD_1_32 = 1, // Guard interval is 1/32
    BDA_GUARD_1_16, // Guard interval is 1/16
    BDA_GUARD_1_8, // Guard interval is 1/8
    BDA_GUARD_1_4, // Guard interval is 1/4
    BDA_GUARD_1_128, // Guard interval is 1/128 (DVB-T2)
    BDA_GUARD_19_128, // Guard interval is 19/128 (DVB-T2)
    BDA_GUARD_19_256, // Guard interval is 19/256 (DVB-T2)
    BDA_GUARD_MAX,
} GuardInterval;

ENUM HierarchyAlpha {
    BDA_HALPHA_NOT_SET = -1,
    BDA_HALPHA_NOT_DEFINED = 0,
    BDA_HALPHA_1 = 1, // Hierarchy alpha is 1.
    BDA_HALPHA_2, // Hierarchy alpha is 2.
    BDA_HALPHA_4, // Hierarchy alpha is 4.
    BDA_HALPHA_MAX,
} HierarchyAlpha;

ENUM TransmissionMode {
    BDA_XMIT_MODE_NOT_SET = -1,
    BDA_XMIT_MODE_NOT_DEFINED = 0,
    BDA_XMIT_MODE_2K = 1, // Transmission uses 1705 carriers (use a 2K FFT)
    BDA_XMIT_MODE_8K,     // Transmission uses 6817 carriers (use an 8K FFT)
    BDA_XMIT_MODE_4K,
    BDA_XMIT_MODE_2K_INTERLEAVED,
    BDA_XMIT_MODE_4K_INTERLEAVED,
    BDA_XMIT_MODE_1K,    //DVB-T2 (use 1K FFT)
    BDA_XMIT_MODE_16K,   //DVB-T2 (use 16K FFT)
    BDA_XMIT_MODE_32K,   //DVB-T2 (use 32K FFT)
    BDA_XMIT_MODE_MAX,
} TransmissionMode;

ENUM RollOff {
    BDA_ROLL_OFF_NOT_SET = -1,
    BDA_ROLL_OFF_NOT_DEFINED = 0,
    BDA_ROLL_OFF_20 = 1,         // .20 Roll Off (DVB-S2 Only)
    BDA_ROLL_OFF_25,             // .25 Roll Off (DVB-S2 Only)
    BDA_ROLL_OFF_35,             // .35 Roll Off (DVB-S2 Only)
    BDA_ROLL_OFF_MAX,
} RollOff;

ENUM Pilot {
    BDA_PILOT_NOT_SET = -1,
    BDA_PILOT_NOT_DEFINED = 0,
    BDA_PILOT_OFF = 1,           // Pilot Off (DVB-S2 Only)
    BDA_PILOT_ON,                // Pilot On  (DVB-S2 Only)
    BDA_PILOT_MAX,
} Pilot;

typedef struct _BDA_SIGNAL_TIMEOUTS
{
    ULONG      ulCarrierTimeoutMs;
    ULONG      ulScanningTimeoutMs;
    ULONG      ulTuningTimeoutMs;
} BDA_SIGNAL_TIMEOUTS, *PBDA_SIGNAL_TIMEOUTS;

//  Settings for Tuner Frequency
//
ENUM BDA_Frequency {
    BDA_FREQUENCY_NOT_SET = -1,
    BDA_FREQUENCY_NOT_DEFINED = 0
} BDA_Frequency;

//  Settings for Tuner Range
//
//  Tuner range refers to the setting of LNB High/Low as well as the
//  selection of a satellite on a multiple satellite switch.
//
ENUM BDA_Range {
    BDA_RANGE_NOT_SET = -1,
    BDA_RANGE_NOT_DEFINED = 0
} BDA_Range;

//  Settings for Tuner Channel Bandwidth
//
ENUM BDA_Channel_Bandwidth {
    BDA_CHAN_BANDWITH_NOT_SET      = -1,
    BDA_CHAN_BANDWITH_NOT_DEFINED  = 0
} BDA_Channel_Bandwidth;

//  Settings for Tuner Frequency Multiplier
//
ENUM BDA_Frequency_Multiplier {
    BDA_FREQUENCY_MULTIPLIER_NOT_SET       = -1,
    BDA_FREQUENCY_MULTIPLIER_NOT_DEFINED   = 0
} BDA_Frequency_Multiplier;

FLAGS BDA_Comp_Flags {
    // equiv comparison rule overrides, default behavior is type specific
    BDACOMP_NOT_DEFINED              = 0x00000000,
    BDACOMP_EXCLUDE_TS_FROM_TR       = 0x00000001,  // never put TS in TR equiv comparison
    BDACOMP_INCLUDE_LOCATOR_IN_TR    = 0x00000002,  // always include loc in TR equiv comparison
    BDACOMP_INCLUDE_COMPONENTS_IN_TR = 0x00000004, // always include components in TR equiv comparison
} BDA_Comp_Flags;

ENUM ApplicationTypeType
{
    SCTE28_ConditionalAccess = 0,
    SCTE28_POD_Host_Binding_Information,
    SCTE28_IPService,
    SCTE28_NetworkInterface_SCTE55_2,
    SCTE28_NetworkInterface_SCTE55_1,
    SCTE28_CopyProtection,
    SCTE28_Diagnostic,
    SCTE28_Undesignated,
    SCTE28_Reserved,
}ApplicationTypeType;


ENUM BDA_CONDITIONALACCESS_REQUESTTYPE {
    CONDITIONALACCESS_ACCESS_UNSPECIFIED = 0,
    CONDITIONALACCESS_ACCESS_NOT_POSSIBLE,
    CONDITIONALACCESS_ACCESS_POSSIBLE,
    CONDITIONALACCESS_ACCESS_POSSIBLE_NO_STREAMING_DISRUPTION
} BDA_CONDITIONALACCESS_REQUESTTYPE;

ENUM BDA_CONDITIONALACCESS_MMICLOSEREASON {
    CONDITIONALACCESS_UNSPECIFIED = 0,
    CONDITIONALACCESS_CLOSED_ITSELF,
    CONDITIONALACCESS_TUNER_REQUESTED_CLOSE,
    CONDITIONALACCESS_DIALOG_TIMEOUT,
    CONDITIONALACCESS_DIALOG_FOCUS_CHANGE,
    CONDITIONALACCESS_DIALOG_USER_DISMISSED,
    CONDITIONALACCESS_DIALOG_USER_NOT_AVAILABLE
} BDA_CONDITIONALACCESS_MMICLOSEREASON;

ENUM BDA_CONDITIONALACCESS_SESSION_RESULT {
    CONDITIONALACCESS_SUCCESSFULL = 0,
    CONDITIONALACCESS_ENDED_NOCHANGE,
    CONDITIONALACCESS_ABORTED
} BDA_CONDITIONALACCESS_SESSION_RESULT;

ENUM BDA_DISCOVERY_STATE {
    BDA_DISCOVERY_UNSPECIFIED = 0,
    BDA_DISCOVERY_REQUIRED,
    BDA_DISCOVERY_COMPLETE
} BDA_DISCOVERY_STATE;

// Digital Demodulator for DVBT2 Physical Layer Pipe
#define BDA_PLP_ID_NOT_SET -1       

#include <unexposeenums2managed.h>

#endif // not defined _BDATYPES_

// end of file -- bdatypes.h
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bh.h ===
//=============================================================================
//  Microsoft (R) Network Monitor (tm). 
//  Copyright (C) 1991-1999. All rights reserved.
//
//  MODULE: bh.h
//
//  This is the top-level include file for all Network Monitor components.
//=============================================================================

#include "netmon.h"

//
// this file is only here as a placeholder until we get everyone to build
// with netmon.h
//
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bits1_5.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for bits1_5.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __bits1_5_h__
#define __bits1_5_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IBackgroundCopyJob2_FWD_DEFINED__
#define __IBackgroundCopyJob2_FWD_DEFINED__
typedef interface IBackgroundCopyJob2 IBackgroundCopyJob2;
#endif 	/* __IBackgroundCopyJob2_FWD_DEFINED__ */


#ifndef __BackgroundCopyManager1_5_FWD_DEFINED__
#define __BackgroundCopyManager1_5_FWD_DEFINED__

#ifdef __cplusplus
typedef class BackgroundCopyManager1_5 BackgroundCopyManager1_5;
#else
typedef struct BackgroundCopyManager1_5 BackgroundCopyManager1_5;
#endif /* __cplusplus */

#endif 	/* __BackgroundCopyManager1_5_FWD_DEFINED__ */


#ifndef __IBackgroundCopyJob2_FWD_DEFINED__
#define __IBackgroundCopyJob2_FWD_DEFINED__
typedef interface IBackgroundCopyJob2 IBackgroundCopyJob2;
#endif 	/* __IBackgroundCopyJob2_FWD_DEFINED__ */


/* header files for imported files */
#include "bits.h"

#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __IBackgroundCopyJob2_INTERFACE_DEFINED__
#define __IBackgroundCopyJob2_INTERFACE_DEFINED__

/* interface IBackgroundCopyJob2 */
/* [object][helpstring][uuid] */ 

typedef struct _BG_JOB_REPLY_PROGRESS
    {
    UINT64 BytesTotal;
    UINT64 BytesTransferred;
    } 	BG_JOB_REPLY_PROGRESS;

typedef /* [public][public][public][public][public] */ 
enum __MIDL_IBackgroundCopyJob2_0001
    {	BG_AUTH_TARGET_SERVER	= 1,
	BG_AUTH_TARGET_PROXY	= ( BG_AUTH_TARGET_SERVER + 1 ) 
    } 	BG_AUTH_TARGET;

typedef /* [public][public][public][public][public] */ 
enum __MIDL_IBackgroundCopyJob2_0002
    {	BG_AUTH_SCHEME_BASIC	= 1,
	BG_AUTH_SCHEME_DIGEST	= ( BG_AUTH_SCHEME_BASIC + 1 ) ,
	BG_AUTH_SCHEME_NTLM	= ( BG_AUTH_SCHEME_DIGEST + 1 ) ,
	BG_AUTH_SCHEME_NEGOTIATE	= ( BG_AUTH_SCHEME_NTLM + 1 ) ,
	BG_AUTH_SCHEME_PASSPORT	= ( BG_AUTH_SCHEME_NEGOTIATE + 1 ) 
    } 	BG_AUTH_SCHEME;

typedef /* [public][public][public][public][public][public] */ struct __MIDL_IBackgroundCopyJob2_0003
    {
    LPWSTR UserName;
    LPWSTR Password;
    } 	BG_BASIC_CREDENTIALS;

typedef BG_BASIC_CREDENTIALS *PBG_BASIC_CREDENTIALS;

typedef /* [public][public][public][public][switch_type] */ union __MIDL_IBackgroundCopyJob2_0004
    {
    BG_BASIC_CREDENTIALS Basic;
     /* Empty union arm */ 
    } 	BG_AUTH_CREDENTIALS_UNION;

typedef /* [public][public][public] */ struct __MIDL_IBackgroundCopyJob2_0005
    {
    BG_AUTH_TARGET Target;
    BG_AUTH_SCHEME Scheme;
    BG_AUTH_CREDENTIALS_UNION Credentials;
    } 	BG_AUTH_CREDENTIALS;

typedef BG_AUTH_CREDENTIALS *PBG_AUTH_CREDENTIALS;


EXTERN_C const IID IID_IBackgroundCopyJob2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("54b50739-686f-45eb-9dff-d6a9a0faa9af")
    IBackgroundCopyJob2 : public IBackgroundCopyJob
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetNotifyCmdLine( 
            /* [unique][in] */ __RPC__in_opt LPCWSTR Program,
            /* [unique][in] */ __RPC__in_opt LPCWSTR Parameters) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNotifyCmdLine( 
            /* [out] */ __RPC__deref_out_opt LPWSTR *pProgram,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pParameters) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetReplyProgress( 
            /* [out][in] */ __RPC__inout BG_JOB_REPLY_PROGRESS *pProgress) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetReplyData( 
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(( unsigned long  )*pLength) byte **ppBuffer,
            /* [unique][out][in] */ __RPC__inout_opt UINT64 *pLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetReplyFileName( 
            /* [unique][in] */ __RPC__in_opt LPCWSTR ReplyFileName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetReplyFileName( 
            /* [out] */ __RPC__deref_out_opt LPWSTR *pReplyFileName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCredentials( 
            __RPC__in BG_AUTH_CREDENTIALS *credentials) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveCredentials( 
            BG_AUTH_TARGET Target,
            BG_AUTH_SCHEME Scheme) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBackgroundCopyJob2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBackgroundCopyJob2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBackgroundCopyJob2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddFileSet )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [in] */ ULONG cFileCount,
            /* [size_is][in] */ __RPC__in_ecount_full(cFileCount) BG_FILE_INFO *pFileSet);
        
        HRESULT ( STDMETHODCALLTYPE *AddFile )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [in] */ __RPC__in LPCWSTR RemoteUrl,
            /* [in] */ __RPC__in LPCWSTR LocalName);
        
        HRESULT ( STDMETHODCALLTYPE *EnumFiles )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__deref_out_opt IEnumBackgroundCopyFiles **pEnum);
        
        HRESULT ( STDMETHODCALLTYPE *Suspend )( 
            __RPC__in IBackgroundCopyJob2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Resume )( 
            __RPC__in IBackgroundCopyJob2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            __RPC__in IBackgroundCopyJob2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Complete )( 
            __RPC__in IBackgroundCopyJob2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetId )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__out GUID *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__out BG_JOB_TYPE *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProgress )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__out BG_JOB_PROGRESS *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetTimes )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__out BG_JOB_TIMES *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__out BG_JOB_STATE *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetError )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__deref_out_opt IBackgroundCopyError **ppError);
        
        HRESULT ( STDMETHODCALLTYPE *GetOwner )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetDisplayName )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [in] */ __RPC__in LPCWSTR Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetDescription )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [in] */ __RPC__in LPCWSTR Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetDescription )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetPriority )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [in] */ BG_JOB_PRIORITY Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetPriority )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__out BG_JOB_PRIORITY *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetNotifyFlags )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [in] */ ULONG Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetNotifyFlags )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__out ULONG *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetNotifyInterface )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [in] */ __RPC__in_opt IUnknown *Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetNotifyInterface )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__deref_out_opt IUnknown **pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetMinimumRetryDelay )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [in] */ ULONG Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetMinimumRetryDelay )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__out ULONG *Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *SetNoProgressTimeout )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [in] */ ULONG Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetNoProgressTimeout )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__out ULONG *Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetErrorCount )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__out ULONG *Errors);
        
        HRESULT ( STDMETHODCALLTYPE *SetProxySettings )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [in] */ BG_JOB_PROXY_USAGE ProxyUsage,
            /* [unique][string][in] */ __RPC__in_opt_string const WCHAR *ProxyList,
            /* [unique][string][in] */ __RPC__in_opt_string const WCHAR *ProxyBypassList);
        
        HRESULT ( STDMETHODCALLTYPE *GetProxySettings )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__out BG_JOB_PROXY_USAGE *pProxyUsage,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pProxyList,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pProxyBypassList);
        
        HRESULT ( STDMETHODCALLTYPE *TakeOwnership )( 
            __RPC__in IBackgroundCopyJob2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetNotifyCmdLine )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [unique][in] */ __RPC__in_opt LPCWSTR Program,
            /* [unique][in] */ __RPC__in_opt LPCWSTR Parameters);
        
        HRESULT ( STDMETHODCALLTYPE *GetNotifyCmdLine )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pProgram,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pParameters);
        
        HRESULT ( STDMETHODCALLTYPE *GetReplyProgress )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out][in] */ __RPC__inout BG_JOB_REPLY_PROGRESS *pProgress);
        
        HRESULT ( STDMETHODCALLTYPE *GetReplyData )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(( unsigned long  )*pLength) byte **ppBuffer,
            /* [unique][out][in] */ __RPC__inout_opt UINT64 *pLength);
        
        HRESULT ( STDMETHODCALLTYPE *SetReplyFileName )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [unique][in] */ __RPC__in_opt LPCWSTR ReplyFileName);
        
        HRESULT ( STDMETHODCALLTYPE *GetReplyFileName )( 
            __RPC__in IBackgroundCopyJob2 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pReplyFileName);
        
        HRESULT ( STDMETHODCALLTYPE *SetCredentials )( 
            __RPC__in IBackgroundCopyJob2 * This,
            __RPC__in BG_AUTH_CREDENTIALS *credentials);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveCredentials )( 
            __RPC__in IBackgroundCopyJob2 * This,
            BG_AUTH_TARGET Target,
            BG_AUTH_SCHEME Scheme);
        
        END_INTERFACE
    } IBackgroundCopyJob2Vtbl;

    interface IBackgroundCopyJob2
    {
        CONST_VTBL struct IBackgroundCopyJob2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBackgroundCopyJob2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBackgroundCopyJob2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBackgroundCopyJob2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBackgroundCopyJob2_AddFileSet(This,cFileCount,pFileSet)	\
    ( (This)->lpVtbl -> AddFileSet(This,cFileCount,pFileSet) ) 

#define IBackgroundCopyJob2_AddFile(This,RemoteUrl,LocalName)	\
    ( (This)->lpVtbl -> AddFile(This,RemoteUrl,LocalName) ) 

#define IBackgroundCopyJob2_EnumFiles(This,pEnum)	\
    ( (This)->lpVtbl -> EnumFiles(This,pEnum) ) 

#define IBackgroundCopyJob2_Suspend(This)	\
    ( (This)->lpVtbl -> Suspend(This) ) 

#define IBackgroundCopyJob2_Resume(This)	\
    ( (This)->lpVtbl -> Resume(This) ) 

#define IBackgroundCopyJob2_Cancel(This)	\
    ( (This)->lpVtbl -> Cancel(This) ) 

#define IBackgroundCopyJob2_Complete(This)	\
    ( (This)->lpVtbl -> Complete(This) ) 

#define IBackgroundCopyJob2_GetId(This,pVal)	\
    ( (This)->lpVtbl -> GetId(This,pVal) ) 

#define IBackgroundCopyJob2_GetType(This,pVal)	\
    ( (This)->lpVtbl -> GetType(This,pVal) ) 

#define IBackgroundCopyJob2_GetProgress(This,pVal)	\
    ( (This)->lpVtbl -> GetProgress(This,pVal) ) 

#define IBackgroundCopyJob2_GetTimes(This,pVal)	\
    ( (This)->lpVtbl -> GetTimes(This,pVal) ) 

#define IBackgroundCopyJob2_GetState(This,pVal)	\
    ( (This)->lpVtbl -> GetState(This,pVal) ) 

#define IBackgroundCopyJob2_GetError(This,ppError)	\
    ( (This)->lpVtbl -> GetError(This,ppError) ) 

#define IBackgroundCopyJob2_GetOwner(This,pVal)	\
    ( (This)->lpVtbl -> GetOwner(This,pVal) ) 

#define IBackgroundCopyJob2_SetDisplayName(This,Val)	\
    ( (This)->lpVtbl -> SetDisplayName(This,Val) ) 

#define IBackgroundCopyJob2_GetDisplayName(This,pVal)	\
    ( (This)->lpVtbl -> GetDisplayName(This,pVal) ) 

#define IBackgroundCopyJob2_SetDescription(This,Val)	\
    ( (This)->lpVtbl -> SetDescription(This,Val) ) 

#define IBackgroundCopyJob2_GetDescription(This,pVal)	\
    ( (This)->lpVtbl -> GetDescription(This,pVal) ) 

#define IBackgroundCopyJob2_SetPriority(This,Val)	\
    ( (This)->lpVtbl -> SetPriority(This,Val) ) 

#define IBackgroundCopyJob2_GetPriority(This,pVal)	\
    ( (This)->lpVtbl -> GetPriority(This,pVal) ) 

#define IBackgroundCopyJob2_SetNotifyFlags(This,Val)	\
    ( (This)->lpVtbl -> SetNotifyFlags(This,Val) ) 

#define IBackgroundCopyJob2_GetNotifyFlags(This,pVal)	\
    ( (This)->lpVtbl -> GetNotifyFlags(This,pVal) ) 

#define IBackgroundCopyJob2_SetNotifyInterface(This,Val)	\
    ( (This)->lpVtbl -> SetNotifyInterface(This,Val) ) 

#define IBackgroundCopyJob2_GetNotifyInterface(This,pVal)	\
    ( (This)->lpVtbl -> GetNotifyInterface(This,pVal) ) 

#define IBackgroundCopyJob2_SetMinimumRetryDelay(This,Seconds)	\
    ( (This)->lpVtbl -> SetMinimumRetryDelay(This,Seconds) ) 

#define IBackgroundCopyJob2_GetMinimumRetryDelay(This,Seconds)	\
    ( (This)->lpVtbl -> GetMinimumRetryDelay(This,Seconds) ) 

#define IBackgroundCopyJob2_SetNoProgressTimeout(This,Seconds)	\
    ( (This)->lpVtbl -> SetNoProgressTimeout(This,Seconds) ) 

#define IBackgroundCopyJob2_GetNoProgressTimeout(This,Seconds)	\
    ( (This)->lpVtbl -> GetNoProgressTimeout(This,Seconds) ) 

#define IBackgroundCopyJob2_GetErrorCount(This,Errors)	\
    ( (This)->lpVtbl -> GetErrorCount(This,Errors) ) 

#define IBackgroundCopyJob2_SetProxySettings(This,ProxyUsage,ProxyList,ProxyBypassList)	\
    ( (This)->lpVtbl -> SetProxySettings(This,ProxyUsage,ProxyList,ProxyBypassList) ) 

#define IBackgroundCopyJob2_GetProxySettings(This,pProxyUsage,pProxyList,pProxyBypassList)	\
    ( (This)->lpVtbl -> GetProxySettings(This,pProxyUsage,pProxyList,pProxyBypassList) ) 

#define IBackgroundCopyJob2_TakeOwnership(This)	\
    ( (This)->lpVtbl -> TakeOwnership(This) ) 


#define IBackgroundCopyJob2_SetNotifyCmdLine(This,Program,Parameters)	\
    ( (This)->lpVtbl -> SetNotifyCmdLine(This,Program,Parameters) ) 

#define IBackgroundCopyJob2_GetNotifyCmdLine(This,pProgram,pParameters)	\
    ( (This)->lpVtbl -> GetNotifyCmdLine(This,pProgram,pParameters) ) 

#define IBackgroundCopyJob2_GetReplyProgress(This,pProgress)	\
    ( (This)->lpVtbl -> GetReplyProgress(This,pProgress) ) 

#define IBackgroundCopyJob2_GetReplyData(This,ppBuffer,pLength)	\
    ( (This)->lpVtbl -> GetReplyData(This,ppBuffer,pLength) ) 

#define IBackgroundCopyJob2_SetReplyFileName(This,ReplyFileName)	\
    ( (This)->lpVtbl -> SetReplyFileName(This,ReplyFileName) ) 

#define IBackgroundCopyJob2_GetReplyFileName(This,pReplyFileName)	\
    ( (This)->lpVtbl -> GetReplyFileName(This,pReplyFileName) ) 

#define IBackgroundCopyJob2_SetCredentials(This,credentials)	\
    ( (This)->lpVtbl -> SetCredentials(This,credentials) ) 

#define IBackgroundCopyJob2_RemoveCredentials(This,Target,Scheme)	\
    ( (This)->lpVtbl -> RemoveCredentials(This,Target,Scheme) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBackgroundCopyJob2_INTERFACE_DEFINED__ */



#ifndef __BackgroundCopyManager1_5_LIBRARY_DEFINED__
#define __BackgroundCopyManager1_5_LIBRARY_DEFINED__

/* library BackgroundCopyManager1_5 */
/* [version][lcid][helpstring][uuid] */ 




EXTERN_C const IID LIBID_BackgroundCopyManager1_5;

EXTERN_C const CLSID CLSID_BackgroundCopyManager1_5;

#ifdef __cplusplus

class DECLSPEC_UUID("f087771f-d74f-4c1a-bb8a-e16aca9124ea")
BackgroundCopyManager1_5;
#endif
#endif /* __BackgroundCopyManager1_5_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_bits1_5_0000_0001 */
/* [local] */ 

#include "bits2_0.h"


extern RPC_IF_HANDLE __MIDL_itf_bits1_5_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bits1_5_0000_0001_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\Bits.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for bits.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __bits_h__
#define __bits_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IBackgroundCopyFile_FWD_DEFINED__
#define __IBackgroundCopyFile_FWD_DEFINED__
typedef interface IBackgroundCopyFile IBackgroundCopyFile;
#endif 	/* __IBackgroundCopyFile_FWD_DEFINED__ */


#ifndef __IEnumBackgroundCopyFiles_FWD_DEFINED__
#define __IEnumBackgroundCopyFiles_FWD_DEFINED__
typedef interface IEnumBackgroundCopyFiles IEnumBackgroundCopyFiles;
#endif 	/* __IEnumBackgroundCopyFiles_FWD_DEFINED__ */


#ifndef __IBackgroundCopyError_FWD_DEFINED__
#define __IBackgroundCopyError_FWD_DEFINED__
typedef interface IBackgroundCopyError IBackgroundCopyError;
#endif 	/* __IBackgroundCopyError_FWD_DEFINED__ */


#ifndef __IBackgroundCopyJob_FWD_DEFINED__
#define __IBackgroundCopyJob_FWD_DEFINED__
typedef interface IBackgroundCopyJob IBackgroundCopyJob;
#endif 	/* __IBackgroundCopyJob_FWD_DEFINED__ */


#ifndef __IEnumBackgroundCopyJobs_FWD_DEFINED__
#define __IEnumBackgroundCopyJobs_FWD_DEFINED__
typedef interface IEnumBackgroundCopyJobs IEnumBackgroundCopyJobs;
#endif 	/* __IEnumBackgroundCopyJobs_FWD_DEFINED__ */


#ifndef __IBackgroundCopyCallback_FWD_DEFINED__
#define __IBackgroundCopyCallback_FWD_DEFINED__
typedef interface IBackgroundCopyCallback IBackgroundCopyCallback;
#endif 	/* __IBackgroundCopyCallback_FWD_DEFINED__ */


#ifndef __AsyncIBackgroundCopyCallback_FWD_DEFINED__
#define __AsyncIBackgroundCopyCallback_FWD_DEFINED__
typedef interface AsyncIBackgroundCopyCallback AsyncIBackgroundCopyCallback;
#endif 	/* __AsyncIBackgroundCopyCallback_FWD_DEFINED__ */


#ifndef __IBackgroundCopyManager_FWD_DEFINED__
#define __IBackgroundCopyManager_FWD_DEFINED__
typedef interface IBackgroundCopyManager IBackgroundCopyManager;
#endif 	/* __IBackgroundCopyManager_FWD_DEFINED__ */


#ifndef __BackgroundCopyManager_FWD_DEFINED__
#define __BackgroundCopyManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class BackgroundCopyManager BackgroundCopyManager;
#else
typedef struct BackgroundCopyManager BackgroundCopyManager;
#endif /* __cplusplus */

#endif 	/* __BackgroundCopyManager_FWD_DEFINED__ */


#ifndef __IBackgroundCopyCallback_FWD_DEFINED__
#define __IBackgroundCopyCallback_FWD_DEFINED__
typedef interface IBackgroundCopyCallback IBackgroundCopyCallback;
#endif 	/* __IBackgroundCopyCallback_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_bits_0000_0000 */
/* [local] */ 

#include "bitsmsg.h"
#define BG_SIZE_UNKNOWN     (UINT64)(-1)


extern RPC_IF_HANDLE __MIDL_itf_bits_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bits_0000_0000_v0_0_s_ifspec;

#ifndef __IBackgroundCopyFile_INTERFACE_DEFINED__
#define __IBackgroundCopyFile_INTERFACE_DEFINED__

/* interface IBackgroundCopyFile */
/* [object][uuid] */ 

typedef struct _BG_FILE_PROGRESS
    {
    UINT64 BytesTotal;
    UINT64 BytesTransferred;
    BOOL Completed;
    } 	BG_FILE_PROGRESS;


EXTERN_C const IID IID_IBackgroundCopyFile;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("01b7bd23-fb88-4a77-8490-5891d3e4653a")
    IBackgroundCopyFile : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetRemoteName( 
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLocalName( 
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProgress( 
            /* [out] */ __RPC__out BG_FILE_PROGRESS *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBackgroundCopyFileVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBackgroundCopyFile * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBackgroundCopyFile * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBackgroundCopyFile * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetRemoteName )( 
            __RPC__in IBackgroundCopyFile * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocalName )( 
            __RPC__in IBackgroundCopyFile * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProgress )( 
            __RPC__in IBackgroundCopyFile * This,
            /* [out] */ __RPC__out BG_FILE_PROGRESS *pVal);
        
        END_INTERFACE
    } IBackgroundCopyFileVtbl;

    interface IBackgroundCopyFile
    {
        CONST_VTBL struct IBackgroundCopyFileVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBackgroundCopyFile_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBackgroundCopyFile_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBackgroundCopyFile_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBackgroundCopyFile_GetRemoteName(This,pVal)	\
    ( (This)->lpVtbl -> GetRemoteName(This,pVal) ) 

#define IBackgroundCopyFile_GetLocalName(This,pVal)	\
    ( (This)->lpVtbl -> GetLocalName(This,pVal) ) 

#define IBackgroundCopyFile_GetProgress(This,pVal)	\
    ( (This)->lpVtbl -> GetProgress(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBackgroundCopyFile_INTERFACE_DEFINED__ */


#ifndef __IEnumBackgroundCopyFiles_INTERFACE_DEFINED__
#define __IEnumBackgroundCopyFiles_INTERFACE_DEFINED__

/* interface IEnumBackgroundCopyFiles */
/* [object][helpstring][uuid] */ 


EXTERN_C const IID IID_IEnumBackgroundCopyFiles;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ca51e165-c365-424c-8d41-24aaa4ff3c40")
    IEnumBackgroundCopyFiles : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, pceltFetched ? *pceltFetched : celt) IBackgroundCopyFile **rgelt,
            /* [unique][out][in] */ __RPC__inout_opt ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IEnumBackgroundCopyFiles **ppenum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *puCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumBackgroundCopyFilesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IEnumBackgroundCopyFiles * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IEnumBackgroundCopyFiles * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IEnumBackgroundCopyFiles * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            __RPC__in IEnumBackgroundCopyFiles * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, pceltFetched ? *pceltFetched : celt) IBackgroundCopyFile **rgelt,
            /* [unique][out][in] */ __RPC__inout_opt ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            __RPC__in IEnumBackgroundCopyFiles * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in IEnumBackgroundCopyFiles * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            __RPC__in IEnumBackgroundCopyFiles * This,
            /* [out] */ __RPC__deref_out_opt IEnumBackgroundCopyFiles **ppenum);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            __RPC__in IEnumBackgroundCopyFiles * This,
            /* [out] */ __RPC__out ULONG *puCount);
        
        END_INTERFACE
    } IEnumBackgroundCopyFilesVtbl;

    interface IEnumBackgroundCopyFiles
    {
        CONST_VTBL struct IEnumBackgroundCopyFilesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumBackgroundCopyFiles_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumBackgroundCopyFiles_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumBackgroundCopyFiles_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumBackgroundCopyFiles_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IEnumBackgroundCopyFiles_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IEnumBackgroundCopyFiles_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumBackgroundCopyFiles_Clone(This,ppenum)	\
    ( (This)->lpVtbl -> Clone(This,ppenum) ) 

#define IEnumBackgroundCopyFiles_GetCount(This,puCount)	\
    ( (This)->lpVtbl -> GetCount(This,puCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumBackgroundCopyFiles_INTERFACE_DEFINED__ */


#ifndef __IBackgroundCopyError_INTERFACE_DEFINED__
#define __IBackgroundCopyError_INTERFACE_DEFINED__

/* interface IBackgroundCopyError */
/* [object][helpstring][uuid] */ 

typedef /* [public][public] */ 
enum __MIDL_IBackgroundCopyError_0001
    {	BG_ERROR_CONTEXT_NONE	= 0,
	BG_ERROR_CONTEXT_UNKNOWN	= 1,
	BG_ERROR_CONTEXT_GENERAL_QUEUE_MANAGER	= 2,
	BG_ERROR_CONTEXT_QUEUE_MANAGER_NOTIFICATION	= 3,
	BG_ERROR_CONTEXT_LOCAL_FILE	= 4,
	BG_ERROR_CONTEXT_REMOTE_FILE	= 5,
	BG_ERROR_CONTEXT_GENERAL_TRANSPORT	= 6,
	BG_ERROR_CONTEXT_REMOTE_APPLICATION	= 7
    } 	BG_ERROR_CONTEXT;


EXTERN_C const IID IID_IBackgroundCopyError;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("19c613a0-fcb8-4f28-81ae-897c3d078f81")
    IBackgroundCopyError : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetError( 
            /* [ref][out] */ __RPC__out BG_ERROR_CONTEXT *pContext,
            /* [ref][out] */ __RPC__out HRESULT *pCode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFile( 
            /* [out] */ __RPC__deref_out_opt IBackgroundCopyFile **pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetErrorDescription( 
            /* [in] */ DWORD LanguageId,
            /* [ref][out] */ __RPC__deref_out_opt LPWSTR *pErrorDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetErrorContextDescription( 
            /* [in] */ DWORD LanguageId,
            /* [ref][out] */ __RPC__deref_out_opt LPWSTR *pContextDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProtocol( 
            /* [ref][out] */ __RPC__deref_out_opt LPWSTR *pProtocol) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBackgroundCopyErrorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBackgroundCopyError * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBackgroundCopyError * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBackgroundCopyError * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetError )( 
            __RPC__in IBackgroundCopyError * This,
            /* [ref][out] */ __RPC__out BG_ERROR_CONTEXT *pContext,
            /* [ref][out] */ __RPC__out HRESULT *pCode);
        
        HRESULT ( STDMETHODCALLTYPE *GetFile )( 
            __RPC__in IBackgroundCopyError * This,
            /* [out] */ __RPC__deref_out_opt IBackgroundCopyFile **pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetErrorDescription )( 
            __RPC__in IBackgroundCopyError * This,
            /* [in] */ DWORD LanguageId,
            /* [ref][out] */ __RPC__deref_out_opt LPWSTR *pErrorDescription);
        
        HRESULT ( STDMETHODCALLTYPE *GetErrorContextDescription )( 
            __RPC__in IBackgroundCopyError * This,
            /* [in] */ DWORD LanguageId,
            /* [ref][out] */ __RPC__deref_out_opt LPWSTR *pContextDescription);
        
        HRESULT ( STDMETHODCALLTYPE *GetProtocol )( 
            __RPC__in IBackgroundCopyError * This,
            /* [ref][out] */ __RPC__deref_out_opt LPWSTR *pProtocol);
        
        END_INTERFACE
    } IBackgroundCopyErrorVtbl;

    interface IBackgroundCopyError
    {
        CONST_VTBL struct IBackgroundCopyErrorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBackgroundCopyError_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBackgroundCopyError_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBackgroundCopyError_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBackgroundCopyError_GetError(This,pContext,pCode)	\
    ( (This)->lpVtbl -> GetError(This,pContext,pCode) ) 

#define IBackgroundCopyError_GetFile(This,pVal)	\
    ( (This)->lpVtbl -> GetFile(This,pVal) ) 

#define IBackgroundCopyError_GetErrorDescription(This,LanguageId,pErrorDescription)	\
    ( (This)->lpVtbl -> GetErrorDescription(This,LanguageId,pErrorDescription) ) 

#define IBackgroundCopyError_GetErrorContextDescription(This,LanguageId,pContextDescription)	\
    ( (This)->lpVtbl -> GetErrorContextDescription(This,LanguageId,pContextDescription) ) 

#define IBackgroundCopyError_GetProtocol(This,pProtocol)	\
    ( (This)->lpVtbl -> GetProtocol(This,pProtocol) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBackgroundCopyError_INTERFACE_DEFINED__ */


#ifndef __IBackgroundCopyJob_INTERFACE_DEFINED__
#define __IBackgroundCopyJob_INTERFACE_DEFINED__

/* interface IBackgroundCopyJob */
/* [object][helpstring][uuid] */ 

typedef struct _BG_FILE_INFO
    {
    LPWSTR RemoteName;
    LPWSTR LocalName;
    } 	BG_FILE_INFO;

typedef struct _BG_JOB_PROGRESS
    {
    UINT64 BytesTotal;
    UINT64 BytesTransferred;
    ULONG FilesTotal;
    ULONG FilesTransferred;
    } 	BG_JOB_PROGRESS;

typedef struct _BG_JOB_TIMES
    {
    FILETIME CreationTime;
    FILETIME ModificationTime;
    FILETIME TransferCompletionTime;
    } 	BG_JOB_TIMES;

typedef /* [public][public][public] */ 
enum __MIDL_IBackgroundCopyJob_0001
    {	BG_JOB_PRIORITY_FOREGROUND	= 0,
	BG_JOB_PRIORITY_HIGH	= ( BG_JOB_PRIORITY_FOREGROUND + 1 ) ,
	BG_JOB_PRIORITY_NORMAL	= ( BG_JOB_PRIORITY_HIGH + 1 ) ,
	BG_JOB_PRIORITY_LOW	= ( BG_JOB_PRIORITY_NORMAL + 1 ) 
    } 	BG_JOB_PRIORITY;

typedef /* [public][public] */ 
enum __MIDL_IBackgroundCopyJob_0002
    {	BG_JOB_STATE_QUEUED	= 0,
	BG_JOB_STATE_CONNECTING	= ( BG_JOB_STATE_QUEUED + 1 ) ,
	BG_JOB_STATE_TRANSFERRING	= ( BG_JOB_STATE_CONNECTING + 1 ) ,
	BG_JOB_STATE_SUSPENDED	= ( BG_JOB_STATE_TRANSFERRING + 1 ) ,
	BG_JOB_STATE_ERROR	= ( BG_JOB_STATE_SUSPENDED + 1 ) ,
	BG_JOB_STATE_TRANSIENT_ERROR	= ( BG_JOB_STATE_ERROR + 1 ) ,
	BG_JOB_STATE_TRANSFERRED	= ( BG_JOB_STATE_TRANSIENT_ERROR + 1 ) ,
	BG_JOB_STATE_ACKNOWLEDGED	= ( BG_JOB_STATE_TRANSFERRED + 1 ) ,
	BG_JOB_STATE_CANCELLED	= ( BG_JOB_STATE_ACKNOWLEDGED + 1 ) 
    } 	BG_JOB_STATE;

typedef /* [public][public][public] */ 
enum __MIDL_IBackgroundCopyJob_0003
    {	BG_JOB_TYPE_DOWNLOAD	= 0,
	BG_JOB_TYPE_UPLOAD	= ( BG_JOB_TYPE_DOWNLOAD + 1 ) ,
	BG_JOB_TYPE_UPLOAD_REPLY	= ( BG_JOB_TYPE_UPLOAD + 1 ) 
    } 	BG_JOB_TYPE;

typedef /* [public][public][public] */ 
enum __MIDL_IBackgroundCopyJob_0004
    {	BG_JOB_PROXY_USAGE_PRECONFIG	= 0,
	BG_JOB_PROXY_USAGE_NO_PROXY	= ( BG_JOB_PROXY_USAGE_PRECONFIG + 1 ) ,
	BG_JOB_PROXY_USAGE_OVERRIDE	= ( BG_JOB_PROXY_USAGE_NO_PROXY + 1 ) ,
	BG_JOB_PROXY_USAGE_AUTODETECT	= ( BG_JOB_PROXY_USAGE_OVERRIDE + 1 ) 
    } 	BG_JOB_PROXY_USAGE;


EXTERN_C const IID IID_IBackgroundCopyJob;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("37668d37-507e-4160-9316-26306d150b12")
    IBackgroundCopyJob : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddFileSet( 
            /* [in] */ ULONG cFileCount,
            /* [size_is][in] */ __RPC__in_ecount_full(cFileCount) BG_FILE_INFO *pFileSet) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddFile( 
            /* [in] */ __RPC__in LPCWSTR RemoteUrl,
            /* [in] */ __RPC__in LPCWSTR LocalName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumFiles( 
            /* [out] */ __RPC__deref_out_opt IEnumBackgroundCopyFiles **pEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Suspend( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Resume( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Cancel( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Complete( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetId( 
            /* [out] */ __RPC__out GUID *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetType( 
            /* [out] */ __RPC__out BG_JOB_TYPE *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProgress( 
            /* [out] */ __RPC__out BG_JOB_PROGRESS *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTimes( 
            /* [out] */ __RPC__out BG_JOB_TIMES *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetState( 
            /* [out] */ __RPC__out BG_JOB_STATE *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetError( 
            /* [out] */ __RPC__deref_out_opt IBackgroundCopyError **ppError) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOwner( 
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDisplayName( 
            /* [in] */ __RPC__in LPCWSTR Val) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayName( 
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDescription( 
            /* [in] */ __RPC__in LPCWSTR Val) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDescription( 
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPriority( 
            /* [in] */ BG_JOB_PRIORITY Val) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPriority( 
            /* [out] */ __RPC__out BG_JOB_PRIORITY *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNotifyFlags( 
            /* [in] */ ULONG Val) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNotifyFlags( 
            /* [out] */ __RPC__out ULONG *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNotifyInterface( 
            /* [in] */ __RPC__in_opt IUnknown *Val) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNotifyInterface( 
            /* [out] */ __RPC__deref_out_opt IUnknown **pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMinimumRetryDelay( 
            /* [in] */ ULONG Seconds) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMinimumRetryDelay( 
            /* [out] */ __RPC__out ULONG *Seconds) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNoProgressTimeout( 
            /* [in] */ ULONG Seconds) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNoProgressTimeout( 
            /* [out] */ __RPC__out ULONG *Seconds) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetErrorCount( 
            /* [out] */ __RPC__out ULONG *Errors) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProxySettings( 
            /* [in] */ BG_JOB_PROXY_USAGE ProxyUsage,
            /* [unique][string][in] */ __RPC__in_opt_string const WCHAR *ProxyList,
            /* [unique][string][in] */ __RPC__in_opt_string const WCHAR *ProxyBypassList) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProxySettings( 
            /* [out] */ __RPC__out BG_JOB_PROXY_USAGE *pProxyUsage,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pProxyList,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pProxyBypassList) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TakeOwnership( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBackgroundCopyJobVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBackgroundCopyJob * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBackgroundCopyJob * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddFileSet )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [in] */ ULONG cFileCount,
            /* [size_is][in] */ __RPC__in_ecount_full(cFileCount) BG_FILE_INFO *pFileSet);
        
        HRESULT ( STDMETHODCALLTYPE *AddFile )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [in] */ __RPC__in LPCWSTR RemoteUrl,
            /* [in] */ __RPC__in LPCWSTR LocalName);
        
        HRESULT ( STDMETHODCALLTYPE *EnumFiles )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__deref_out_opt IEnumBackgroundCopyFiles **pEnum);
        
        HRESULT ( STDMETHODCALLTYPE *Suspend )( 
            __RPC__in IBackgroundCopyJob * This);
        
        HRESULT ( STDMETHODCALLTYPE *Resume )( 
            __RPC__in IBackgroundCopyJob * This);
        
        HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            __RPC__in IBackgroundCopyJob * This);
        
        HRESULT ( STDMETHODCALLTYPE *Complete )( 
            __RPC__in IBackgroundCopyJob * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetId )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__out GUID *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__out BG_JOB_TYPE *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProgress )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__out BG_JOB_PROGRESS *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetTimes )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__out BG_JOB_TIMES *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__out BG_JOB_STATE *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetError )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__deref_out_opt IBackgroundCopyError **ppError);
        
        HRESULT ( STDMETHODCALLTYPE *GetOwner )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetDisplayName )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [in] */ __RPC__in LPCWSTR Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetDescription )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [in] */ __RPC__in LPCWSTR Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetDescription )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetPriority )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [in] */ BG_JOB_PRIORITY Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetPriority )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__out BG_JOB_PRIORITY *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetNotifyFlags )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [in] */ ULONG Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetNotifyFlags )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__out ULONG *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetNotifyInterface )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [in] */ __RPC__in_opt IUnknown *Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetNotifyInterface )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__deref_out_opt IUnknown **pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetMinimumRetryDelay )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [in] */ ULONG Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetMinimumRetryDelay )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__out ULONG *Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *SetNoProgressTimeout )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [in] */ ULONG Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetNoProgressTimeout )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__out ULONG *Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetErrorCount )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__out ULONG *Errors);
        
        HRESULT ( STDMETHODCALLTYPE *SetProxySettings )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [in] */ BG_JOB_PROXY_USAGE ProxyUsage,
            /* [unique][string][in] */ __RPC__in_opt_string const WCHAR *ProxyList,
            /* [unique][string][in] */ __RPC__in_opt_string const WCHAR *ProxyBypassList);
        
        HRESULT ( STDMETHODCALLTYPE *GetProxySettings )( 
            __RPC__in IBackgroundCopyJob * This,
            /* [out] */ __RPC__out BG_JOB_PROXY_USAGE *pProxyUsage,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pProxyList,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pProxyBypassList);
        
        HRESULT ( STDMETHODCALLTYPE *TakeOwnership )( 
            __RPC__in IBackgroundCopyJob * This);
        
        END_INTERFACE
    } IBackgroundCopyJobVtbl;

    interface IBackgroundCopyJob
    {
        CONST_VTBL struct IBackgroundCopyJobVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBackgroundCopyJob_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBackgroundCopyJob_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBackgroundCopyJob_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBackgroundCopyJob_AddFileSet(This,cFileCount,pFileSet)	\
    ( (This)->lpVtbl -> AddFileSet(This,cFileCount,pFileSet) ) 

#define IBackgroundCopyJob_AddFile(This,RemoteUrl,LocalName)	\
    ( (This)->lpVtbl -> AddFile(This,RemoteUrl,LocalName) ) 

#define IBackgroundCopyJob_EnumFiles(This,pEnum)	\
    ( (This)->lpVtbl -> EnumFiles(This,pEnum) ) 

#define IBackgroundCopyJob_Suspend(This)	\
    ( (This)->lpVtbl -> Suspend(This) ) 

#define IBackgroundCopyJob_Resume(This)	\
    ( (This)->lpVtbl -> Resume(This) ) 

#define IBackgroundCopyJob_Cancel(This)	\
    ( (This)->lpVtbl -> Cancel(This) ) 

#define IBackgroundCopyJob_Complete(This)	\
    ( (This)->lpVtbl -> Complete(This) ) 

#define IBackgroundCopyJob_GetId(This,pVal)	\
    ( (This)->lpVtbl -> GetId(This,pVal) ) 

#define IBackgroundCopyJob_GetType(This,pVal)	\
    ( (This)->lpVtbl -> GetType(This,pVal) ) 

#define IBackgroundCopyJob_GetProgress(This,pVal)	\
    ( (This)->lpVtbl -> GetProgress(This,pVal) ) 

#define IBackgroundCopyJob_GetTimes(This,pVal)	\
    ( (This)->lpVtbl -> GetTimes(This,pVal) ) 

#define IBackgroundCopyJob_GetState(This,pVal)	\
    ( (This)->lpVtbl -> GetState(This,pVal) ) 

#define IBackgroundCopyJob_GetError(This,ppError)	\
    ( (This)->lpVtbl -> GetError(This,ppError) ) 

#define IBackgroundCopyJob_GetOwner(This,pVal)	\
    ( (This)->lpVtbl -> GetOwner(This,pVal) ) 

#define IBackgroundCopyJob_SetDisplayName(This,Val)	\
    ( (This)->lpVtbl -> SetDisplayName(This,Val) ) 

#define IBackgroundCopyJob_GetDisplayName(This,pVal)	\
    ( (This)->lpVtbl -> GetDisplayName(This,pVal) ) 

#define IBackgroundCopyJob_SetDescription(This,Val)	\
    ( (This)->lpVtbl -> SetDescription(This,Val) ) 

#define IBackgroundCopyJob_GetDescription(This,pVal)	\
    ( (This)->lpVtbl -> GetDescription(This,pVal) ) 

#define IBackgroundCopyJob_SetPriority(This,Val)	\
    ( (This)->lpVtbl -> SetPriority(This,Val) ) 

#define IBackgroundCopyJob_GetPriority(This,pVal)	\
    ( (This)->lpVtbl -> GetPriority(This,pVal) ) 

#define IBackgroundCopyJob_SetNotifyFlags(This,Val)	\
    ( (This)->lpVtbl -> SetNotifyFlags(This,Val) ) 

#define IBackgroundCopyJob_GetNotifyFlags(This,pVal)	\
    ( (This)->lpVtbl -> GetNotifyFlags(This,pVal) ) 

#define IBackgroundCopyJob_SetNotifyInterface(This,Val)	\
    ( (This)->lpVtbl -> SetNotifyInterface(This,Val) ) 

#define IBackgroundCopyJob_GetNotifyInterface(This,pVal)	\
    ( (This)->lpVtbl -> GetNotifyInterface(This,pVal) ) 

#define IBackgroundCopyJob_SetMinimumRetryDelay(This,Seconds)	\
    ( (This)->lpVtbl -> SetMinimumRetryDelay(This,Seconds) ) 

#define IBackgroundCopyJob_GetMinimumRetryDelay(This,Seconds)	\
    ( (This)->lpVtbl -> GetMinimumRetryDelay(This,Seconds) ) 

#define IBackgroundCopyJob_SetNoProgressTimeout(This,Seconds)	\
    ( (This)->lpVtbl -> SetNoProgressTimeout(This,Seconds) ) 

#define IBackgroundCopyJob_GetNoProgressTimeout(This,Seconds)	\
    ( (This)->lpVtbl -> GetNoProgressTimeout(This,Seconds) ) 

#define IBackgroundCopyJob_GetErrorCount(This,Errors)	\
    ( (This)->lpVtbl -> GetErrorCount(This,Errors) ) 

#define IBackgroundCopyJob_SetProxySettings(This,ProxyUsage,ProxyList,ProxyBypassList)	\
    ( (This)->lpVtbl -> SetProxySettings(This,ProxyUsage,ProxyList,ProxyBypassList) ) 

#define IBackgroundCopyJob_GetProxySettings(This,pProxyUsage,pProxyList,pProxyBypassList)	\
    ( (This)->lpVtbl -> GetProxySettings(This,pProxyUsage,pProxyList,pProxyBypassList) ) 

#define IBackgroundCopyJob_TakeOwnership(This)	\
    ( (This)->lpVtbl -> TakeOwnership(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBackgroundCopyJob_INTERFACE_DEFINED__ */


#ifndef __IEnumBackgroundCopyJobs_INTERFACE_DEFINED__
#define __IEnumBackgroundCopyJobs_INTERFACE_DEFINED__

/* interface IEnumBackgroundCopyJobs */
/* [object][helpstring][uuid] */ 


EXTERN_C const IID IID_IEnumBackgroundCopyJobs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1af4f612-3b71-466f-8f58-7b6f73ac57ad")
    IEnumBackgroundCopyJobs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, pceltFetched ? *pceltFetched : celt) IBackgroundCopyJob **rgelt,
            /* [unique][out][in] */ __RPC__inout_opt ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IEnumBackgroundCopyJobs **ppenum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *puCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumBackgroundCopyJobsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IEnumBackgroundCopyJobs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IEnumBackgroundCopyJobs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IEnumBackgroundCopyJobs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            __RPC__in IEnumBackgroundCopyJobs * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, pceltFetched ? *pceltFetched : celt) IBackgroundCopyJob **rgelt,
            /* [unique][out][in] */ __RPC__inout_opt ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            __RPC__in IEnumBackgroundCopyJobs * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in IEnumBackgroundCopyJobs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            __RPC__in IEnumBackgroundCopyJobs * This,
            /* [out] */ __RPC__deref_out_opt IEnumBackgroundCopyJobs **ppenum);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            __RPC__in IEnumBackgroundCopyJobs * This,
            /* [out] */ __RPC__out ULONG *puCount);
        
        END_INTERFACE
    } IEnumBackgroundCopyJobsVtbl;

    interface IEnumBackgroundCopyJobs
    {
        CONST_VTBL struct IEnumBackgroundCopyJobsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumBackgroundCopyJobs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumBackgroundCopyJobs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumBackgroundCopyJobs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumBackgroundCopyJobs_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IEnumBackgroundCopyJobs_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IEnumBackgroundCopyJobs_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumBackgroundCopyJobs_Clone(This,ppenum)	\
    ( (This)->lpVtbl -> Clone(This,ppenum) ) 

#define IEnumBackgroundCopyJobs_GetCount(This,puCount)	\
    ( (This)->lpVtbl -> GetCount(This,puCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumBackgroundCopyJobs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_bits_0000_0005 */
/* [local] */ 

#define   BG_NOTIFY_JOB_TRANSFERRED    0x0001
#define   BG_NOTIFY_JOB_ERROR          0x0002
#define   BG_NOTIFY_DISABLE            0x0004
#define   BG_NOTIFY_JOB_MODIFICATION   0x0008
#define   BG_NOTIFY_FILE_TRANSFERRED   0x0010


extern RPC_IF_HANDLE __MIDL_itf_bits_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bits_0000_0005_v0_0_s_ifspec;

#ifndef __IBackgroundCopyCallback_INTERFACE_DEFINED__
#define __IBackgroundCopyCallback_INTERFACE_DEFINED__

/* interface IBackgroundCopyCallback */
/* [object][helpstring][async_uuid][uuid] */ 


EXTERN_C const IID IID_IBackgroundCopyCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("97ea99c7-0186-4ad4-8df9-c5b4e0ed6b22")
    IBackgroundCopyCallback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE JobTransferred( 
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE JobError( 
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob,
            /* [in] */ __RPC__in_opt IBackgroundCopyError *pError) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE JobModification( 
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob,
            /* [in] */ DWORD dwReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBackgroundCopyCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBackgroundCopyCallback * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBackgroundCopyCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBackgroundCopyCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *JobTransferred )( 
            __RPC__in IBackgroundCopyCallback * This,
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob);
        
        HRESULT ( STDMETHODCALLTYPE *JobError )( 
            __RPC__in IBackgroundCopyCallback * This,
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob,
            /* [in] */ __RPC__in_opt IBackgroundCopyError *pError);
        
        HRESULT ( STDMETHODCALLTYPE *JobModification )( 
            __RPC__in IBackgroundCopyCallback * This,
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob,
            /* [in] */ DWORD dwReserved);
        
        END_INTERFACE
    } IBackgroundCopyCallbackVtbl;

    interface IBackgroundCopyCallback
    {
        CONST_VTBL struct IBackgroundCopyCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBackgroundCopyCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBackgroundCopyCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBackgroundCopyCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBackgroundCopyCallback_JobTransferred(This,pJob)	\
    ( (This)->lpVtbl -> JobTransferred(This,pJob) ) 

#define IBackgroundCopyCallback_JobError(This,pJob,pError)	\
    ( (This)->lpVtbl -> JobError(This,pJob,pError) ) 

#define IBackgroundCopyCallback_JobModification(This,pJob,dwReserved)	\
    ( (This)->lpVtbl -> JobModification(This,pJob,dwReserved) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBackgroundCopyCallback_INTERFACE_DEFINED__ */


#ifndef __AsyncIBackgroundCopyCallback_INTERFACE_DEFINED__
#define __AsyncIBackgroundCopyCallback_INTERFACE_DEFINED__

/* interface AsyncIBackgroundCopyCallback */
/* [uuid][object][helpstring] */ 


EXTERN_C const IID IID_AsyncIBackgroundCopyCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ca29d251-b4bb-4679-a3d9-ae8006119d54")
    AsyncIBackgroundCopyCallback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Begin_JobTransferred( 
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Finish_JobTransferred( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Begin_JobError( 
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob,
            /* [in] */ __RPC__in_opt IBackgroundCopyError *pError) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Finish_JobError( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Begin_JobModification( 
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Finish_JobModification( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct AsyncIBackgroundCopyCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in AsyncIBackgroundCopyCallback * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in AsyncIBackgroundCopyCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in AsyncIBackgroundCopyCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *Begin_JobTransferred )( 
            __RPC__in AsyncIBackgroundCopyCallback * This,
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob);
        
        HRESULT ( STDMETHODCALLTYPE *Finish_JobTransferred )( 
            __RPC__in AsyncIBackgroundCopyCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *Begin_JobError )( 
            __RPC__in AsyncIBackgroundCopyCallback * This,
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob,
            /* [in] */ __RPC__in_opt IBackgroundCopyError *pError);
        
        HRESULT ( STDMETHODCALLTYPE *Finish_JobError )( 
            __RPC__in AsyncIBackgroundCopyCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *Begin_JobModification )( 
            __RPC__in AsyncIBackgroundCopyCallback * This,
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Finish_JobModification )( 
            __RPC__in AsyncIBackgroundCopyCallback * This);
        
        END_INTERFACE
    } AsyncIBackgroundCopyCallbackVtbl;

    interface AsyncIBackgroundCopyCallback
    {
        CONST_VTBL struct AsyncIBackgroundCopyCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define AsyncIBackgroundCopyCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define AsyncIBackgroundCopyCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define AsyncIBackgroundCopyCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define AsyncIBackgroundCopyCallback_Begin_JobTransferred(This,pJob)	\
    ( (This)->lpVtbl -> Begin_JobTransferred(This,pJob) ) 

#define AsyncIBackgroundCopyCallback_Finish_JobTransferred(This)	\
    ( (This)->lpVtbl -> Finish_JobTransferred(This) ) 

#define AsyncIBackgroundCopyCallback_Begin_JobError(This,pJob,pError)	\
    ( (This)->lpVtbl -> Begin_JobError(This,pJob,pError) ) 

#define AsyncIBackgroundCopyCallback_Finish_JobError(This)	\
    ( (This)->lpVtbl -> Finish_JobError(This) ) 

#define AsyncIBackgroundCopyCallback_Begin_JobModification(This,pJob,dwReserved)	\
    ( (This)->lpVtbl -> Begin_JobModification(This,pJob,dwReserved) ) 

#define AsyncIBackgroundCopyCallback_Finish_JobModification(This)	\
    ( (This)->lpVtbl -> Finish_JobModification(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __AsyncIBackgroundCopyCallback_INTERFACE_DEFINED__ */


#ifndef __IBackgroundCopyManager_INTERFACE_DEFINED__
#define __IBackgroundCopyManager_INTERFACE_DEFINED__

/* interface IBackgroundCopyManager */
/* [object][helpstring][uuid] */ 

#define    BG_JOB_ENUM_ALL_USERS  0x0001

EXTERN_C const IID IID_IBackgroundCopyManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5ce34c0d-0dc9-4c1f-897c-daa1b78cee7c")
    IBackgroundCopyManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateJob( 
            /* [in] */ __RPC__in LPCWSTR DisplayName,
            /* [in] */ BG_JOB_TYPE Type,
            /* [out] */ __RPC__out GUID *pJobId,
            /* [out] */ __RPC__deref_out_opt IBackgroundCopyJob **ppJob) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetJob( 
            /* [in] */ __RPC__in REFGUID jobID,
            /* [out] */ __RPC__deref_out_opt IBackgroundCopyJob **ppJob) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumJobs( 
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IEnumBackgroundCopyJobs **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetErrorDescription( 
            /* [in] */ HRESULT hResult,
            /* [in] */ DWORD LanguageId,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pErrorDescription) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBackgroundCopyManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBackgroundCopyManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBackgroundCopyManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBackgroundCopyManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateJob )( 
            __RPC__in IBackgroundCopyManager * This,
            /* [in] */ __RPC__in LPCWSTR DisplayName,
            /* [in] */ BG_JOB_TYPE Type,
            /* [out] */ __RPC__out GUID *pJobId,
            /* [out] */ __RPC__deref_out_opt IBackgroundCopyJob **ppJob);
        
        HRESULT ( STDMETHODCALLTYPE *GetJob )( 
            __RPC__in IBackgroundCopyManager * This,
            /* [in] */ __RPC__in REFGUID jobID,
            /* [out] */ __RPC__deref_out_opt IBackgroundCopyJob **ppJob);
        
        HRESULT ( STDMETHODCALLTYPE *EnumJobs )( 
            __RPC__in IBackgroundCopyManager * This,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IEnumBackgroundCopyJobs **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetErrorDescription )( 
            __RPC__in IBackgroundCopyManager * This,
            /* [in] */ HRESULT hResult,
            /* [in] */ DWORD LanguageId,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pErrorDescription);
        
        END_INTERFACE
    } IBackgroundCopyManagerVtbl;

    interface IBackgroundCopyManager
    {
        CONST_VTBL struct IBackgroundCopyManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBackgroundCopyManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBackgroundCopyManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBackgroundCopyManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBackgroundCopyManager_CreateJob(This,DisplayName,Type,pJobId,ppJob)	\
    ( (This)->lpVtbl -> CreateJob(This,DisplayName,Type,pJobId,ppJob) ) 

#define IBackgroundCopyManager_GetJob(This,jobID,ppJob)	\
    ( (This)->lpVtbl -> GetJob(This,jobID,ppJob) ) 

#define IBackgroundCopyManager_EnumJobs(This,dwFlags,ppEnum)	\
    ( (This)->lpVtbl -> EnumJobs(This,dwFlags,ppEnum) ) 

#define IBackgroundCopyManager_GetErrorDescription(This,hResult,LanguageId,pErrorDescription)	\
    ( (This)->lpVtbl -> GetErrorDescription(This,hResult,LanguageId,pErrorDescription) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBackgroundCopyManager_INTERFACE_DEFINED__ */



#ifndef __BackgroundCopyManager_LIBRARY_DEFINED__
#define __BackgroundCopyManager_LIBRARY_DEFINED__

/* library BackgroundCopyManager */
/* [version][lcid][helpstring][uuid] */ 



EXTERN_C const IID LIBID_BackgroundCopyManager;

EXTERN_C const CLSID CLSID_BackgroundCopyManager;

#ifdef __cplusplus

class DECLSPEC_UUID("4991d34b-80a1-4291-83b6-3328366b9097")
BackgroundCopyManager;
#endif
#endif /* __BackgroundCopyManager_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_bits_0000_0007 */
/* [local] */ 

#include "bits1_5.h"


extern RPC_IF_HANDLE __MIDL_itf_bits_0000_0007_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bits_0000_0007_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bitscfg.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for bitscfg.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __bitscfg_h__
#define __bitscfg_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IBITSExtensionSetup_FWD_DEFINED__
#define __IBITSExtensionSetup_FWD_DEFINED__
typedef interface IBITSExtensionSetup IBITSExtensionSetup;
#endif 	/* __IBITSExtensionSetup_FWD_DEFINED__ */


#ifndef __IBITSExtensionSetupFactory_FWD_DEFINED__
#define __IBITSExtensionSetupFactory_FWD_DEFINED__
typedef interface IBITSExtensionSetupFactory IBITSExtensionSetupFactory;
#endif 	/* __IBITSExtensionSetupFactory_FWD_DEFINED__ */


#ifndef __BITSExtensionSetupFactory_FWD_DEFINED__
#define __BITSExtensionSetupFactory_FWD_DEFINED__

#ifdef __cplusplus
typedef class BITSExtensionSetupFactory BITSExtensionSetupFactory;
#else
typedef struct BITSExtensionSetupFactory BITSExtensionSetupFactory;
#endif /* __cplusplus */

#endif 	/* __BITSExtensionSetupFactory_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "mstask.h"

#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __IBITSExtensionSetup_INTERFACE_DEFINED__
#define __IBITSExtensionSetup_INTERFACE_DEFINED__

/* interface IBITSExtensionSetup */
/* [object][dual][uuid] */ 


EXTERN_C const IID IID_IBITSExtensionSetup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("29cfbbf7-09e4-4b97-b0bc-f2287e3d8eb3")
    IBITSExtensionSetup : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE EnableBITSUploads( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DisableBITSUploads( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetCleanupTaskName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pTaskName) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetCleanupTask( 
            /* [in] */ __RPC__in REFIID riid,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppUnk) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBITSExtensionSetupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBITSExtensionSetup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBITSExtensionSetup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBITSExtensionSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IBITSExtensionSetup * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IBITSExtensionSetup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IBITSExtensionSetup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IBITSExtensionSetup * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EnableBITSUploads )( 
            __RPC__in IBITSExtensionSetup * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisableBITSUploads )( 
            __RPC__in IBITSExtensionSetup * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetCleanupTaskName )( 
            __RPC__in IBITSExtensionSetup * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pTaskName);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetCleanupTask )( 
            __RPC__in IBITSExtensionSetup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppUnk);
        
        END_INTERFACE
    } IBITSExtensionSetupVtbl;

    interface IBITSExtensionSetup
    {
        CONST_VTBL struct IBITSExtensionSetupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBITSExtensionSetup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBITSExtensionSetup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBITSExtensionSetup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBITSExtensionSetup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IBITSExtensionSetup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IBITSExtensionSetup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IBITSExtensionSetup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IBITSExtensionSetup_EnableBITSUploads(This)	\
    ( (This)->lpVtbl -> EnableBITSUploads(This) ) 

#define IBITSExtensionSetup_DisableBITSUploads(This)	\
    ( (This)->lpVtbl -> DisableBITSUploads(This) ) 

#define IBITSExtensionSetup_GetCleanupTaskName(This,pTaskName)	\
    ( (This)->lpVtbl -> GetCleanupTaskName(This,pTaskName) ) 

#define IBITSExtensionSetup_GetCleanupTask(This,riid,ppUnk)	\
    ( (This)->lpVtbl -> GetCleanupTask(This,riid,ppUnk) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBITSExtensionSetup_INTERFACE_DEFINED__ */


#ifndef __IBITSExtensionSetupFactory_INTERFACE_DEFINED__
#define __IBITSExtensionSetupFactory_INTERFACE_DEFINED__

/* interface IBITSExtensionSetupFactory */
/* [object][dual][uuid] */ 


EXTERN_C const IID IID_IBITSExtensionSetupFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d5d2d542-5503-4e64-8b48-72ef91a32ee1")
    IBITSExtensionSetupFactory : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetObject( 
            /* [in] */ __RPC__in BSTR Path,
            /* [retval][out] */ __RPC__deref_out_opt IBITSExtensionSetup **ppExtensionSetup) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBITSExtensionSetupFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBITSExtensionSetupFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBITSExtensionSetupFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBITSExtensionSetupFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IBITSExtensionSetupFactory * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IBITSExtensionSetupFactory * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IBITSExtensionSetupFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IBITSExtensionSetupFactory * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetObject )( 
            __RPC__in IBITSExtensionSetupFactory * This,
            /* [in] */ __RPC__in BSTR Path,
            /* [retval][out] */ __RPC__deref_out_opt IBITSExtensionSetup **ppExtensionSetup);
        
        END_INTERFACE
    } IBITSExtensionSetupFactoryVtbl;

    interface IBITSExtensionSetupFactory
    {
        CONST_VTBL struct IBITSExtensionSetupFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBITSExtensionSetupFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBITSExtensionSetupFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBITSExtensionSetupFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBITSExtensionSetupFactory_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IBITSExtensionSetupFactory_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IBITSExtensionSetupFactory_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IBITSExtensionSetupFactory_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IBITSExtensionSetupFactory_GetObject(This,Path,ppExtensionSetup)	\
    ( (This)->lpVtbl -> GetObject(This,Path,ppExtensionSetup) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBITSExtensionSetupFactory_INTERFACE_DEFINED__ */



#ifndef __BITSExtensionSetup_LIBRARY_DEFINED__
#define __BITSExtensionSetup_LIBRARY_DEFINED__

/* library BITSExtensionSetup */
/* [version][helpstring][uuid] */ 


EXTERN_C const IID LIBID_BITSExtensionSetup;

EXTERN_C const CLSID CLSID_BITSExtensionSetupFactory;

#ifdef __cplusplus

class DECLSPEC_UUID("efbbab68-7286-4783-94bf-9461d8b7e7e9")
BITSExtensionSetupFactory;
#endif
#endif /* __BITSExtensionSetup_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\Bits3_0.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for bits3_0.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __bits3_0_h__
#define __bits3_0_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IBitsPeerCacheRecord_FWD_DEFINED__
#define __IBitsPeerCacheRecord_FWD_DEFINED__
typedef interface IBitsPeerCacheRecord IBitsPeerCacheRecord;
#endif 	/* __IBitsPeerCacheRecord_FWD_DEFINED__ */


#ifndef __IEnumBitsPeerCacheRecords_FWD_DEFINED__
#define __IEnumBitsPeerCacheRecords_FWD_DEFINED__
typedef interface IEnumBitsPeerCacheRecords IEnumBitsPeerCacheRecords;
#endif 	/* __IEnumBitsPeerCacheRecords_FWD_DEFINED__ */


#ifndef __IBitsPeer_FWD_DEFINED__
#define __IBitsPeer_FWD_DEFINED__
typedef interface IBitsPeer IBitsPeer;
#endif 	/* __IBitsPeer_FWD_DEFINED__ */


#ifndef __IEnumBitsPeers_FWD_DEFINED__
#define __IEnumBitsPeers_FWD_DEFINED__
typedef interface IEnumBitsPeers IEnumBitsPeers;
#endif 	/* __IEnumBitsPeers_FWD_DEFINED__ */


#ifndef __IBitsPeerCacheAdministration_FWD_DEFINED__
#define __IBitsPeerCacheAdministration_FWD_DEFINED__
typedef interface IBitsPeerCacheAdministration IBitsPeerCacheAdministration;
#endif 	/* __IBitsPeerCacheAdministration_FWD_DEFINED__ */


#ifndef __IBackgroundCopyJob4_FWD_DEFINED__
#define __IBackgroundCopyJob4_FWD_DEFINED__
typedef interface IBackgroundCopyJob4 IBackgroundCopyJob4;
#endif 	/* __IBackgroundCopyJob4_FWD_DEFINED__ */


#ifndef __IBackgroundCopyFile3_FWD_DEFINED__
#define __IBackgroundCopyFile3_FWD_DEFINED__
typedef interface IBackgroundCopyFile3 IBackgroundCopyFile3;
#endif 	/* __IBackgroundCopyFile3_FWD_DEFINED__ */


#ifndef __IBackgroundCopyCallback2_FWD_DEFINED__
#define __IBackgroundCopyCallback2_FWD_DEFINED__
typedef interface IBackgroundCopyCallback2 IBackgroundCopyCallback2;
#endif 	/* __IBackgroundCopyCallback2_FWD_DEFINED__ */


#ifndef __BackgroundCopyManager3_0_FWD_DEFINED__
#define __BackgroundCopyManager3_0_FWD_DEFINED__

#ifdef __cplusplus
typedef class BackgroundCopyManager3_0 BackgroundCopyManager3_0;
#else
typedef struct BackgroundCopyManager3_0 BackgroundCopyManager3_0;
#endif /* __cplusplus */

#endif 	/* __BackgroundCopyManager3_0_FWD_DEFINED__ */


#ifndef __IBackgroundCopyJob4_FWD_DEFINED__
#define __IBackgroundCopyJob4_FWD_DEFINED__
typedef interface IBackgroundCopyJob4 IBackgroundCopyJob4;
#endif 	/* __IBackgroundCopyJob4_FWD_DEFINED__ */


/* header files for imported files */
#include "bits.h"
#include "bits1_5.h"
#include "bits2_0.h"
#include "bits2_5.h"

#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __IBitsPeerCacheRecord_INTERFACE_DEFINED__
#define __IBitsPeerCacheRecord_INTERFACE_DEFINED__

/* interface IBitsPeerCacheRecord */
/* [object][helpstring][uuid] */ 


EXTERN_C const IID IID_IBitsPeerCacheRecord;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("659cdeaf-489e-11d9-a9cd-000d56965251")
    IBitsPeerCacheRecord : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetId( 
            /* [ref][out] */ __RPC__out GUID *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOriginUrl( 
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFileSize( 
            /* [ref][out] */ __RPC__out UINT64 *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFileModificationTime( 
            /* [ref][out] */ __RPC__out FILETIME *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLastAccessTime( 
            /* [ref][out] */ __RPC__out FILETIME *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsFileValidated( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFileRanges( 
            /* [ref][out] */ __RPC__out DWORD *pRangeCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pRangeCount) BG_FILE_RANGE **ppRanges) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBitsPeerCacheRecordVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBitsPeerCacheRecord * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBitsPeerCacheRecord * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBitsPeerCacheRecord * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetId )( 
            __RPC__in IBitsPeerCacheRecord * This,
            /* [ref][out] */ __RPC__out GUID *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetOriginUrl )( 
            __RPC__in IBitsPeerCacheRecord * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetFileSize )( 
            __RPC__in IBitsPeerCacheRecord * This,
            /* [ref][out] */ __RPC__out UINT64 *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetFileModificationTime )( 
            __RPC__in IBitsPeerCacheRecord * This,
            /* [ref][out] */ __RPC__out FILETIME *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetLastAccessTime )( 
            __RPC__in IBitsPeerCacheRecord * This,
            /* [ref][out] */ __RPC__out FILETIME *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *IsFileValidated )( 
            __RPC__in IBitsPeerCacheRecord * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetFileRanges )( 
            __RPC__in IBitsPeerCacheRecord * This,
            /* [ref][out] */ __RPC__out DWORD *pRangeCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pRangeCount) BG_FILE_RANGE **ppRanges);
        
        END_INTERFACE
    } IBitsPeerCacheRecordVtbl;

    interface IBitsPeerCacheRecord
    {
        CONST_VTBL struct IBitsPeerCacheRecordVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBitsPeerCacheRecord_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBitsPeerCacheRecord_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBitsPeerCacheRecord_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBitsPeerCacheRecord_GetId(This,pVal)	\
    ( (This)->lpVtbl -> GetId(This,pVal) ) 

#define IBitsPeerCacheRecord_GetOriginUrl(This,pVal)	\
    ( (This)->lpVtbl -> GetOriginUrl(This,pVal) ) 

#define IBitsPeerCacheRecord_GetFileSize(This,pVal)	\
    ( (This)->lpVtbl -> GetFileSize(This,pVal) ) 

#define IBitsPeerCacheRecord_GetFileModificationTime(This,pVal)	\
    ( (This)->lpVtbl -> GetFileModificationTime(This,pVal) ) 

#define IBitsPeerCacheRecord_GetLastAccessTime(This,pVal)	\
    ( (This)->lpVtbl -> GetLastAccessTime(This,pVal) ) 

#define IBitsPeerCacheRecord_IsFileValidated(This)	\
    ( (This)->lpVtbl -> IsFileValidated(This) ) 

#define IBitsPeerCacheRecord_GetFileRanges(This,pRangeCount,ppRanges)	\
    ( (This)->lpVtbl -> GetFileRanges(This,pRangeCount,ppRanges) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBitsPeerCacheRecord_INTERFACE_DEFINED__ */


#ifndef __IEnumBitsPeerCacheRecords_INTERFACE_DEFINED__
#define __IEnumBitsPeerCacheRecords_INTERFACE_DEFINED__

/* interface IEnumBitsPeerCacheRecords */
/* [object][helpstring][uuid] */ 


EXTERN_C const IID IID_IEnumBitsPeerCacheRecords;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("659cdea4-489e-11d9-a9cd-000d56965251")
    IEnumBitsPeerCacheRecords : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, pceltFetched ? *pceltFetched : celt) IBitsPeerCacheRecord **rgelt,
            /* [unique][out][in] */ __RPC__inout_opt ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IEnumBitsPeerCacheRecords **ppenum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *puCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumBitsPeerCacheRecordsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IEnumBitsPeerCacheRecords * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IEnumBitsPeerCacheRecords * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IEnumBitsPeerCacheRecords * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            __RPC__in IEnumBitsPeerCacheRecords * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, pceltFetched ? *pceltFetched : celt) IBitsPeerCacheRecord **rgelt,
            /* [unique][out][in] */ __RPC__inout_opt ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            __RPC__in IEnumBitsPeerCacheRecords * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in IEnumBitsPeerCacheRecords * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            __RPC__in IEnumBitsPeerCacheRecords * This,
            /* [out] */ __RPC__deref_out_opt IEnumBitsPeerCacheRecords **ppenum);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            __RPC__in IEnumBitsPeerCacheRecords * This,
            /* [out] */ __RPC__out ULONG *puCount);
        
        END_INTERFACE
    } IEnumBitsPeerCacheRecordsVtbl;

    interface IEnumBitsPeerCacheRecords
    {
        CONST_VTBL struct IEnumBitsPeerCacheRecordsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumBitsPeerCacheRecords_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumBitsPeerCacheRecords_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumBitsPeerCacheRecords_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumBitsPeerCacheRecords_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IEnumBitsPeerCacheRecords_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IEnumBitsPeerCacheRecords_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumBitsPeerCacheRecords_Clone(This,ppenum)	\
    ( (This)->lpVtbl -> Clone(This,ppenum) ) 

#define IEnumBitsPeerCacheRecords_GetCount(This,puCount)	\
    ( (This)->lpVtbl -> GetCount(This,puCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumBitsPeerCacheRecords_INTERFACE_DEFINED__ */


#ifndef __IBitsPeer_INTERFACE_DEFINED__
#define __IBitsPeer_INTERFACE_DEFINED__

/* interface IBitsPeer */
/* [object][helpstring][uuid] */ 


EXTERN_C const IID IID_IBitsPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("659cdea2-489e-11d9-a9cd-000d56965251")
    IBitsPeer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPeerName( 
            /* [ref][out] */ __RPC__deref_out_opt LPWSTR *pName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsAuthenticated( 
            /* [ref][out] */ __RPC__out BOOL *pAuth) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsAvailable( 
            /* [ref][out] */ __RPC__out BOOL *pOnline) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBitsPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBitsPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBitsPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBitsPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetPeerName )( 
            __RPC__in IBitsPeer * This,
            /* [ref][out] */ __RPC__deref_out_opt LPWSTR *pName);
        
        HRESULT ( STDMETHODCALLTYPE *IsAuthenticated )( 
            __RPC__in IBitsPeer * This,
            /* [ref][out] */ __RPC__out BOOL *pAuth);
        
        HRESULT ( STDMETHODCALLTYPE *IsAvailable )( 
            __RPC__in IBitsPeer * This,
            /* [ref][out] */ __RPC__out BOOL *pOnline);
        
        END_INTERFACE
    } IBitsPeerVtbl;

    interface IBitsPeer
    {
        CONST_VTBL struct IBitsPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBitsPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBitsPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBitsPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBitsPeer_GetPeerName(This,pName)	\
    ( (This)->lpVtbl -> GetPeerName(This,pName) ) 

#define IBitsPeer_IsAuthenticated(This,pAuth)	\
    ( (This)->lpVtbl -> IsAuthenticated(This,pAuth) ) 

#define IBitsPeer_IsAvailable(This,pOnline)	\
    ( (This)->lpVtbl -> IsAvailable(This,pOnline) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBitsPeer_INTERFACE_DEFINED__ */


#ifndef __IEnumBitsPeers_INTERFACE_DEFINED__
#define __IEnumBitsPeers_INTERFACE_DEFINED__

/* interface IEnumBitsPeers */
/* [object][helpstring][uuid] */ 


EXTERN_C const IID IID_IEnumBitsPeers;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("659cdea5-489e-11d9-a9cd-000d56965251")
    IEnumBitsPeers : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, pceltFetched ? *pceltFetched : celt) IBitsPeer **rgelt,
            /* [unique][out][in] */ __RPC__inout_opt ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IEnumBitsPeers **ppenum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out ULONG *puCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumBitsPeersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IEnumBitsPeers * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IEnumBitsPeers * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IEnumBitsPeers * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            __RPC__in IEnumBitsPeers * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, pceltFetched ? *pceltFetched : celt) IBitsPeer **rgelt,
            /* [unique][out][in] */ __RPC__inout_opt ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            __RPC__in IEnumBitsPeers * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in IEnumBitsPeers * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            __RPC__in IEnumBitsPeers * This,
            /* [out] */ __RPC__deref_out_opt IEnumBitsPeers **ppenum);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            __RPC__in IEnumBitsPeers * This,
            /* [out] */ __RPC__out ULONG *puCount);
        
        END_INTERFACE
    } IEnumBitsPeersVtbl;

    interface IEnumBitsPeers
    {
        CONST_VTBL struct IEnumBitsPeersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumBitsPeers_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumBitsPeers_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumBitsPeers_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumBitsPeers_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IEnumBitsPeers_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IEnumBitsPeers_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumBitsPeers_Clone(This,ppenum)	\
    ( (This)->lpVtbl -> Clone(This,ppenum) ) 

#define IEnumBitsPeers_GetCount(This,puCount)	\
    ( (This)->lpVtbl -> GetCount(This,puCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumBitsPeers_INTERFACE_DEFINED__ */


#ifndef __IBitsPeerCacheAdministration_INTERFACE_DEFINED__
#define __IBitsPeerCacheAdministration_INTERFACE_DEFINED__

/* interface IBitsPeerCacheAdministration */
/* [object][helpstring][uuid] */ 

#define   BG_ENABLE_PEERCACHING_CLIENT   0x0001
#define   BG_ENABLE_PEERCACHING_SERVER   0x0002
#define   BG_DISABLE_BRANCH_CACHE        0x0004

EXTERN_C const IID IID_IBitsPeerCacheAdministration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("659cdead-489e-11d9-a9cd-000d56965251")
    IBitsPeerCacheAdministration : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMaximumCacheSize( 
            /* [out][ref] */ __RPC__out DWORD *pBytes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMaximumCacheSize( 
            DWORD Bytes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMaximumContentAge( 
            /* [out][ref] */ __RPC__out ULONG *pSeconds) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMaximumContentAge( 
            ULONG Seconds) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConfigurationFlags( 
            /* [out][ref] */ __RPC__out DWORD *pFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetConfigurationFlags( 
            DWORD Flags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumRecords( 
            /* [out] */ __RPC__deref_out_opt IEnumBitsPeerCacheRecords **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecord( 
            /* [in] */ __RPC__in REFGUID id,
            /* [out] */ __RPC__deref_out_opt IBitsPeerCacheRecord **ppRecord) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ClearRecords( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteRecord( 
            /* [in] */ __RPC__in REFGUID id) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteUrl( 
            /* [ref][in] */ __RPC__in LPCWSTR url) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumPeers( 
            /* [ref][out] */ __RPC__deref_out_opt IEnumBitsPeers **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ClearPeers( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DiscoverPeers( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBitsPeerCacheAdministrationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBitsPeerCacheAdministration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBitsPeerCacheAdministration * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBitsPeerCacheAdministration * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMaximumCacheSize )( 
            __RPC__in IBitsPeerCacheAdministration * This,
            /* [out][ref] */ __RPC__out DWORD *pBytes);
        
        HRESULT ( STDMETHODCALLTYPE *SetMaximumCacheSize )( 
            __RPC__in IBitsPeerCacheAdministration * This,
            DWORD Bytes);
        
        HRESULT ( STDMETHODCALLTYPE *GetMaximumContentAge )( 
            __RPC__in IBitsPeerCacheAdministration * This,
            /* [out][ref] */ __RPC__out ULONG *pSeconds);
        
        HRESULT ( STDMETHODCALLTYPE *SetMaximumContentAge )( 
            __RPC__in IBitsPeerCacheAdministration * This,
            ULONG Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetConfigurationFlags )( 
            __RPC__in IBitsPeerCacheAdministration * This,
            /* [out][ref] */ __RPC__out DWORD *pFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetConfigurationFlags )( 
            __RPC__in IBitsPeerCacheAdministration * This,
            DWORD Flags);
        
        HRESULT ( STDMETHODCALLTYPE *EnumRecords )( 
            __RPC__in IBitsPeerCacheAdministration * This,
            /* [out] */ __RPC__deref_out_opt IEnumBitsPeerCacheRecords **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecord )( 
            __RPC__in IBitsPeerCacheAdministration * This,
            /* [in] */ __RPC__in REFGUID id,
            /* [out] */ __RPC__deref_out_opt IBitsPeerCacheRecord **ppRecord);
        
        HRESULT ( STDMETHODCALLTYPE *ClearRecords )( 
            __RPC__in IBitsPeerCacheAdministration * This);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteRecord )( 
            __RPC__in IBitsPeerCacheAdministration * This,
            /* [in] */ __RPC__in REFGUID id);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteUrl )( 
            __RPC__in IBitsPeerCacheAdministration * This,
            /* [ref][in] */ __RPC__in LPCWSTR url);
        
        HRESULT ( STDMETHODCALLTYPE *EnumPeers )( 
            __RPC__in IBitsPeerCacheAdministration * This,
            /* [ref][out] */ __RPC__deref_out_opt IEnumBitsPeers **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *ClearPeers )( 
            __RPC__in IBitsPeerCacheAdministration * This);
        
        HRESULT ( STDMETHODCALLTYPE *DiscoverPeers )( 
            __RPC__in IBitsPeerCacheAdministration * This);
        
        END_INTERFACE
    } IBitsPeerCacheAdministrationVtbl;

    interface IBitsPeerCacheAdministration
    {
        CONST_VTBL struct IBitsPeerCacheAdministrationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBitsPeerCacheAdministration_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBitsPeerCacheAdministration_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBitsPeerCacheAdministration_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBitsPeerCacheAdministration_GetMaximumCacheSize(This,pBytes)	\
    ( (This)->lpVtbl -> GetMaximumCacheSize(This,pBytes) ) 

#define IBitsPeerCacheAdministration_SetMaximumCacheSize(This,Bytes)	\
    ( (This)->lpVtbl -> SetMaximumCacheSize(This,Bytes) ) 

#define IBitsPeerCacheAdministration_GetMaximumContentAge(This,pSeconds)	\
    ( (This)->lpVtbl -> GetMaximumContentAge(This,pSeconds) ) 

#define IBitsPeerCacheAdministration_SetMaximumContentAge(This,Seconds)	\
    ( (This)->lpVtbl -> SetMaximumContentAge(This,Seconds) ) 

#define IBitsPeerCacheAdministration_GetConfigurationFlags(This,pFlags)	\
    ( (This)->lpVtbl -> GetConfigurationFlags(This,pFlags) ) 

#define IBitsPeerCacheAdministration_SetConfigurationFlags(This,Flags)	\
    ( (This)->lpVtbl -> SetConfigurationFlags(This,Flags) ) 

#define IBitsPeerCacheAdministration_EnumRecords(This,ppEnum)	\
    ( (This)->lpVtbl -> EnumRecords(This,ppEnum) ) 

#define IBitsPeerCacheAdministration_GetRecord(This,id,ppRecord)	\
    ( (This)->lpVtbl -> GetRecord(This,id,ppRecord) ) 

#define IBitsPeerCacheAdministration_ClearRecords(This)	\
    ( (This)->lpVtbl -> ClearRecords(This) ) 

#define IBitsPeerCacheAdministration_DeleteRecord(This,id)	\
    ( (This)->lpVtbl -> DeleteRecord(This,id) ) 

#define IBitsPeerCacheAdministration_DeleteUrl(This,url)	\
    ( (This)->lpVtbl -> DeleteUrl(This,url) ) 

#define IBitsPeerCacheAdministration_EnumPeers(This,ppEnum)	\
    ( (This)->lpVtbl -> EnumPeers(This,ppEnum) ) 

#define IBitsPeerCacheAdministration_ClearPeers(This)	\
    ( (This)->lpVtbl -> ClearPeers(This) ) 

#define IBitsPeerCacheAdministration_DiscoverPeers(This)	\
    ( (This)->lpVtbl -> DiscoverPeers(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBitsPeerCacheAdministration_INTERFACE_DEFINED__ */


#ifndef __IBackgroundCopyJob4_INTERFACE_DEFINED__
#define __IBackgroundCopyJob4_INTERFACE_DEFINED__

/* interface IBackgroundCopyJob4 */
/* [object][helpstring][uuid] */ 

#define   BG_JOB_ENABLE_PEERCACHING_CLIENT   0x0001
#define   BG_JOB_ENABLE_PEERCACHING_SERVER   0x0002
#define   BG_JOB_DISABLE_BRANCH_CACHE        0x0004

EXTERN_C const IID IID_IBackgroundCopyJob4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("659cdeae-489e-11d9-a9cd-000d56965251")
    IBackgroundCopyJob4 : public IBackgroundCopyJob3
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetPeerCachingFlags( 
            DWORD Flags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPeerCachingFlags( 
            /* [ref][out] */ __RPC__out DWORD *pFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOwnerIntegrityLevel( 
            /* [ref][out] */ __RPC__out ULONG *pLevel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOwnerElevationState( 
            /* [ref][out] */ __RPC__out BOOL *pElevated) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMaximumDownloadTime( 
            ULONG Timeout) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMaximumDownloadTime( 
            /* [ref][out] */ __RPC__out ULONG *pTimeout) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBackgroundCopyJob4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBackgroundCopyJob4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBackgroundCopyJob4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddFileSet )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [in] */ ULONG cFileCount,
            /* [size_is][in] */ __RPC__in_ecount_full(cFileCount) BG_FILE_INFO *pFileSet);
        
        HRESULT ( STDMETHODCALLTYPE *AddFile )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [in] */ __RPC__in LPCWSTR RemoteUrl,
            /* [in] */ __RPC__in LPCWSTR LocalName);
        
        HRESULT ( STDMETHODCALLTYPE *EnumFiles )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__deref_out_opt IEnumBackgroundCopyFiles **pEnum);
        
        HRESULT ( STDMETHODCALLTYPE *Suspend )( 
            __RPC__in IBackgroundCopyJob4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Resume )( 
            __RPC__in IBackgroundCopyJob4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            __RPC__in IBackgroundCopyJob4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Complete )( 
            __RPC__in IBackgroundCopyJob4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetId )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__out GUID *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__out BG_JOB_TYPE *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProgress )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__out BG_JOB_PROGRESS *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetTimes )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__out BG_JOB_TIMES *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__out BG_JOB_STATE *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetError )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__deref_out_opt IBackgroundCopyError **ppError);
        
        HRESULT ( STDMETHODCALLTYPE *GetOwner )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetDisplayName )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [in] */ __RPC__in LPCWSTR Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetDescription )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [in] */ __RPC__in LPCWSTR Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetDescription )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetPriority )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [in] */ BG_JOB_PRIORITY Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetPriority )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__out BG_JOB_PRIORITY *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetNotifyFlags )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [in] */ ULONG Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetNotifyFlags )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__out ULONG *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetNotifyInterface )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [in] */ __RPC__in_opt IUnknown *Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetNotifyInterface )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__deref_out_opt IUnknown **pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetMinimumRetryDelay )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [in] */ ULONG Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetMinimumRetryDelay )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__out ULONG *Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *SetNoProgressTimeout )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [in] */ ULONG Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetNoProgressTimeout )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__out ULONG *Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetErrorCount )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__out ULONG *Errors);
        
        HRESULT ( STDMETHODCALLTYPE *SetProxySettings )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [in] */ BG_JOB_PROXY_USAGE ProxyUsage,
            /* [unique][string][in] */ __RPC__in_opt_string const WCHAR *ProxyList,
            /* [unique][string][in] */ __RPC__in_opt_string const WCHAR *ProxyBypassList);
        
        HRESULT ( STDMETHODCALLTYPE *GetProxySettings )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__out BG_JOB_PROXY_USAGE *pProxyUsage,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pProxyList,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pProxyBypassList);
        
        HRESULT ( STDMETHODCALLTYPE *TakeOwnership )( 
            __RPC__in IBackgroundCopyJob4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetNotifyCmdLine )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [unique][in] */ __RPC__in_opt LPCWSTR Program,
            /* [unique][in] */ __RPC__in_opt LPCWSTR Parameters);
        
        HRESULT ( STDMETHODCALLTYPE *GetNotifyCmdLine )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pProgram,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pParameters);
        
        HRESULT ( STDMETHODCALLTYPE *GetReplyProgress )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out][in] */ __RPC__inout BG_JOB_REPLY_PROGRESS *pProgress);
        
        HRESULT ( STDMETHODCALLTYPE *GetReplyData )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(( unsigned long  )*pLength) byte **ppBuffer,
            /* [unique][out][in] */ __RPC__inout_opt UINT64 *pLength);
        
        HRESULT ( STDMETHODCALLTYPE *SetReplyFileName )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [unique][in] */ __RPC__in_opt LPCWSTR ReplyFileName);
        
        HRESULT ( STDMETHODCALLTYPE *GetReplyFileName )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pReplyFileName);
        
        HRESULT ( STDMETHODCALLTYPE *SetCredentials )( 
            __RPC__in IBackgroundCopyJob4 * This,
            __RPC__in BG_AUTH_CREDENTIALS *credentials);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveCredentials )( 
            __RPC__in IBackgroundCopyJob4 * This,
            BG_AUTH_TARGET Target,
            BG_AUTH_SCHEME Scheme);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceRemotePrefix )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [in] */ __RPC__in LPCWSTR OldPrefix,
            /* [in] */ __RPC__in LPCWSTR NewPrefix);
        
        HRESULT ( STDMETHODCALLTYPE *AddFileWithRanges )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [in] */ __RPC__in LPCWSTR RemoteUrl,
            /* [in] */ __RPC__in LPCWSTR LocalName,
            /* [in] */ DWORD RangeCount,
            /* [size_is][in] */ __RPC__in_ecount_full(RangeCount) BG_FILE_RANGE Ranges[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *SetFileACLFlags )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [in] */ DWORD Flags);
        
        HRESULT ( STDMETHODCALLTYPE *GetFileACLFlags )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [ref][out] */ __RPC__out DWORD *Flags);
        
        HRESULT ( STDMETHODCALLTYPE *SetPeerCachingFlags )( 
            __RPC__in IBackgroundCopyJob4 * This,
            DWORD Flags);
        
        HRESULT ( STDMETHODCALLTYPE *GetPeerCachingFlags )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [ref][out] */ __RPC__out DWORD *pFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetOwnerIntegrityLevel )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [ref][out] */ __RPC__out ULONG *pLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetOwnerElevationState )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [ref][out] */ __RPC__out BOOL *pElevated);
        
        HRESULT ( STDMETHODCALLTYPE *SetMaximumDownloadTime )( 
            __RPC__in IBackgroundCopyJob4 * This,
            ULONG Timeout);
        
        HRESULT ( STDMETHODCALLTYPE *GetMaximumDownloadTime )( 
            __RPC__in IBackgroundCopyJob4 * This,
            /* [ref][out] */ __RPC__out ULONG *pTimeout);
        
        END_INTERFACE
    } IBackgroundCopyJob4Vtbl;

    interface IBackgroundCopyJob4
    {
        CONST_VTBL struct IBackgroundCopyJob4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBackgroundCopyJob4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBackgroundCopyJob4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBackgroundCopyJob4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBackgroundCopyJob4_AddFileSet(This,cFileCount,pFileSet)	\
    ( (This)->lpVtbl -> AddFileSet(This,cFileCount,pFileSet) ) 

#define IBackgroundCopyJob4_AddFile(This,RemoteUrl,LocalName)	\
    ( (This)->lpVtbl -> AddFile(This,RemoteUrl,LocalName) ) 

#define IBackgroundCopyJob4_EnumFiles(This,pEnum)	\
    ( (This)->lpVtbl -> EnumFiles(This,pEnum) ) 

#define IBackgroundCopyJob4_Suspend(This)	\
    ( (This)->lpVtbl -> Suspend(This) ) 

#define IBackgroundCopyJob4_Resume(This)	\
    ( (This)->lpVtbl -> Resume(This) ) 

#define IBackgroundCopyJob4_Cancel(This)	\
    ( (This)->lpVtbl -> Cancel(This) ) 

#define IBackgroundCopyJob4_Complete(This)	\
    ( (This)->lpVtbl -> Complete(This) ) 

#define IBackgroundCopyJob4_GetId(This,pVal)	\
    ( (This)->lpVtbl -> GetId(This,pVal) ) 

#define IBackgroundCopyJob4_GetType(This,pVal)	\
    ( (This)->lpVtbl -> GetType(This,pVal) ) 

#define IBackgroundCopyJob4_GetProgress(This,pVal)	\
    ( (This)->lpVtbl -> GetProgress(This,pVal) ) 

#define IBackgroundCopyJob4_GetTimes(This,pVal)	\
    ( (This)->lpVtbl -> GetTimes(This,pVal) ) 

#define IBackgroundCopyJob4_GetState(This,pVal)	\
    ( (This)->lpVtbl -> GetState(This,pVal) ) 

#define IBackgroundCopyJob4_GetError(This,ppError)	\
    ( (This)->lpVtbl -> GetError(This,ppError) ) 

#define IBackgroundCopyJob4_GetOwner(This,pVal)	\
    ( (This)->lpVtbl -> GetOwner(This,pVal) ) 

#define IBackgroundCopyJob4_SetDisplayName(This,Val)	\
    ( (This)->lpVtbl -> SetDisplayName(This,Val) ) 

#define IBackgroundCopyJob4_GetDisplayName(This,pVal)	\
    ( (This)->lpVtbl -> GetDisplayName(This,pVal) ) 

#define IBackgroundCopyJob4_SetDescription(This,Val)	\
    ( (This)->lpVtbl -> SetDescription(This,Val) ) 

#define IBackgroundCopyJob4_GetDescription(This,pVal)	\
    ( (This)->lpVtbl -> GetDescription(This,pVal) ) 

#define IBackgroundCopyJob4_SetPriority(This,Val)	\
    ( (This)->lpVtbl -> SetPriority(This,Val) ) 

#define IBackgroundCopyJob4_GetPriority(This,pVal)	\
    ( (This)->lpVtbl -> GetPriority(This,pVal) ) 

#define IBackgroundCopyJob4_SetNotifyFlags(This,Val)	\
    ( (This)->lpVtbl -> SetNotifyFlags(This,Val) ) 

#define IBackgroundCopyJob4_GetNotifyFlags(This,pVal)	\
    ( (This)->lpVtbl -> GetNotifyFlags(This,pVal) ) 

#define IBackgroundCopyJob4_SetNotifyInterface(This,Val)	\
    ( (This)->lpVtbl -> SetNotifyInterface(This,Val) ) 

#define IBackgroundCopyJob4_GetNotifyInterface(This,pVal)	\
    ( (This)->lpVtbl -> GetNotifyInterface(This,pVal) ) 

#define IBackgroundCopyJob4_SetMinimumRetryDelay(This,Seconds)	\
    ( (This)->lpVtbl -> SetMinimumRetryDelay(This,Seconds) ) 

#define IBackgroundCopyJob4_GetMinimumRetryDelay(This,Seconds)	\
    ( (This)->lpVtbl -> GetMinimumRetryDelay(This,Seconds) ) 

#define IBackgroundCopyJob4_SetNoProgressTimeout(This,Seconds)	\
    ( (This)->lpVtbl -> SetNoProgressTimeout(This,Seconds) ) 

#define IBackgroundCopyJob4_GetNoProgressTimeout(This,Seconds)	\
    ( (This)->lpVtbl -> GetNoProgressTimeout(This,Seconds) ) 

#define IBackgroundCopyJob4_GetErrorCount(This,Errors)	\
    ( (This)->lpVtbl -> GetErrorCount(This,Errors) ) 

#define IBackgroundCopyJob4_SetProxySettings(This,ProxyUsage,ProxyList,ProxyBypassList)	\
    ( (This)->lpVtbl -> SetProxySettings(This,ProxyUsage,ProxyList,ProxyBypassList) ) 

#define IBackgroundCopyJob4_GetProxySettings(This,pProxyUsage,pProxyList,pProxyBypassList)	\
    ( (This)->lpVtbl -> GetProxySettings(This,pProxyUsage,pProxyList,pProxyBypassList) ) 

#define IBackgroundCopyJob4_TakeOwnership(This)	\
    ( (This)->lpVtbl -> TakeOwnership(This) ) 


#define IBackgroundCopyJob4_SetNotifyCmdLine(This,Program,Parameters)	\
    ( (This)->lpVtbl -> SetNotifyCmdLine(This,Program,Parameters) ) 

#define IBackgroundCopyJob4_GetNotifyCmdLine(This,pProgram,pParameters)	\
    ( (This)->lpVtbl -> GetNotifyCmdLine(This,pProgram,pParameters) ) 

#define IBackgroundCopyJob4_GetReplyProgress(This,pProgress)	\
    ( (This)->lpVtbl -> GetReplyProgress(This,pProgress) ) 

#define IBackgroundCopyJob4_GetReplyData(This,ppBuffer,pLength)	\
    ( (This)->lpVtbl -> GetReplyData(This,ppBuffer,pLength) ) 

#define IBackgroundCopyJob4_SetReplyFileName(This,ReplyFileName)	\
    ( (This)->lpVtbl -> SetReplyFileName(This,ReplyFileName) ) 

#define IBackgroundCopyJob4_GetReplyFileName(This,pReplyFileName)	\
    ( (This)->lpVtbl -> GetReplyFileName(This,pReplyFileName) ) 

#define IBackgroundCopyJob4_SetCredentials(This,credentials)	\
    ( (This)->lpVtbl -> SetCredentials(This,credentials) ) 

#define IBackgroundCopyJob4_RemoveCredentials(This,Target,Scheme)	\
    ( (This)->lpVtbl -> RemoveCredentials(This,Target,Scheme) ) 


#define IBackgroundCopyJob4_ReplaceRemotePrefix(This,OldPrefix,NewPrefix)	\
    ( (This)->lpVtbl -> ReplaceRemotePrefix(This,OldPrefix,NewPrefix) ) 

#define IBackgroundCopyJob4_AddFileWithRanges(This,RemoteUrl,LocalName,RangeCount,Ranges)	\
    ( (This)->lpVtbl -> AddFileWithRanges(This,RemoteUrl,LocalName,RangeCount,Ranges) ) 

#define IBackgroundCopyJob4_SetFileACLFlags(This,Flags)	\
    ( (This)->lpVtbl -> SetFileACLFlags(This,Flags) ) 

#define IBackgroundCopyJob4_GetFileACLFlags(This,Flags)	\
    ( (This)->lpVtbl -> GetFileACLFlags(This,Flags) ) 


#define IBackgroundCopyJob4_SetPeerCachingFlags(This,Flags)	\
    ( (This)->lpVtbl -> SetPeerCachingFlags(This,Flags) ) 

#define IBackgroundCopyJob4_GetPeerCachingFlags(This,pFlags)	\
    ( (This)->lpVtbl -> GetPeerCachingFlags(This,pFlags) ) 

#define IBackgroundCopyJob4_GetOwnerIntegrityLevel(This,pLevel)	\
    ( (This)->lpVtbl -> GetOwnerIntegrityLevel(This,pLevel) ) 

#define IBackgroundCopyJob4_GetOwnerElevationState(This,pElevated)	\
    ( (This)->lpVtbl -> GetOwnerElevationState(This,pElevated) ) 

#define IBackgroundCopyJob4_SetMaximumDownloadTime(This,Timeout)	\
    ( (This)->lpVtbl -> SetMaximumDownloadTime(This,Timeout) ) 

#define IBackgroundCopyJob4_GetMaximumDownloadTime(This,pTimeout)	\
    ( (This)->lpVtbl -> GetMaximumDownloadTime(This,pTimeout) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBackgroundCopyJob4_INTERFACE_DEFINED__ */


#ifndef __IBackgroundCopyFile3_INTERFACE_DEFINED__
#define __IBackgroundCopyFile3_INTERFACE_DEFINED__

/* interface IBackgroundCopyFile3 */
/* [object][helpstring][uuid] */ 


EXTERN_C const IID IID_IBackgroundCopyFile3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("659cdeaa-489e-11d9-a9cd-000d56965251")
    IBackgroundCopyFile3 : public IBackgroundCopyFile2
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTemporaryName( 
            /* [out] */ __RPC__deref_out_opt LPWSTR *pFilename) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetValidationState( 
            /* [in] */ BOOL state) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetValidationState( 
            /* [out] */ __RPC__out BOOL *pState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsDownloadedFromPeer( 
            /* [out] */ __RPC__out BOOL *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBackgroundCopyFile3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBackgroundCopyFile3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBackgroundCopyFile3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBackgroundCopyFile3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetRemoteName )( 
            __RPC__in IBackgroundCopyFile3 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocalName )( 
            __RPC__in IBackgroundCopyFile3 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProgress )( 
            __RPC__in IBackgroundCopyFile3 * This,
            /* [out] */ __RPC__out BG_FILE_PROGRESS *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetFileRanges )( 
            __RPC__in IBackgroundCopyFile3 * This,
            /* [unique][out][in] */ __RPC__inout_opt DWORD *RangeCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*RangeCount) BG_FILE_RANGE **Ranges);
        
        HRESULT ( STDMETHODCALLTYPE *SetRemoteName )( 
            __RPC__in IBackgroundCopyFile3 * This,
            __RPC__in LPCWSTR Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetTemporaryName )( 
            __RPC__in IBackgroundCopyFile3 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pFilename);
        
        HRESULT ( STDMETHODCALLTYPE *SetValidationState )( 
            __RPC__in IBackgroundCopyFile3 * This,
            /* [in] */ BOOL state);
        
        HRESULT ( STDMETHODCALLTYPE *GetValidationState )( 
            __RPC__in IBackgroundCopyFile3 * This,
            /* [out] */ __RPC__out BOOL *pState);
        
        HRESULT ( STDMETHODCALLTYPE *IsDownloadedFromPeer )( 
            __RPC__in IBackgroundCopyFile3 * This,
            /* [out] */ __RPC__out BOOL *pVal);
        
        END_INTERFACE
    } IBackgroundCopyFile3Vtbl;

    interface IBackgroundCopyFile3
    {
        CONST_VTBL struct IBackgroundCopyFile3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBackgroundCopyFile3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBackgroundCopyFile3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBackgroundCopyFile3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBackgroundCopyFile3_GetRemoteName(This,pVal)	\
    ( (This)->lpVtbl -> GetRemoteName(This,pVal) ) 

#define IBackgroundCopyFile3_GetLocalName(This,pVal)	\
    ( (This)->lpVtbl -> GetLocalName(This,pVal) ) 

#define IBackgroundCopyFile3_GetProgress(This,pVal)	\
    ( (This)->lpVtbl -> GetProgress(This,pVal) ) 


#define IBackgroundCopyFile3_GetFileRanges(This,RangeCount,Ranges)	\
    ( (This)->lpVtbl -> GetFileRanges(This,RangeCount,Ranges) ) 

#define IBackgroundCopyFile3_SetRemoteName(This,Val)	\
    ( (This)->lpVtbl -> SetRemoteName(This,Val) ) 


#define IBackgroundCopyFile3_GetTemporaryName(This,pFilename)	\
    ( (This)->lpVtbl -> GetTemporaryName(This,pFilename) ) 

#define IBackgroundCopyFile3_SetValidationState(This,state)	\
    ( (This)->lpVtbl -> SetValidationState(This,state) ) 

#define IBackgroundCopyFile3_GetValidationState(This,pState)	\
    ( (This)->lpVtbl -> GetValidationState(This,pState) ) 

#define IBackgroundCopyFile3_IsDownloadedFromPeer(This,pVal)	\
    ( (This)->lpVtbl -> IsDownloadedFromPeer(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBackgroundCopyFile3_INTERFACE_DEFINED__ */


#ifndef __IBackgroundCopyCallback2_INTERFACE_DEFINED__
#define __IBackgroundCopyCallback2_INTERFACE_DEFINED__

/* interface IBackgroundCopyCallback2 */
/* [object][helpstring][uuid] */ 


EXTERN_C const IID IID_IBackgroundCopyCallback2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("659cdeac-489e-11d9-a9cd-000d56965251")
    IBackgroundCopyCallback2 : public IBackgroundCopyCallback
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE FileTransferred( 
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob,
            /* [in] */ __RPC__in_opt IBackgroundCopyFile *pFile) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBackgroundCopyCallback2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBackgroundCopyCallback2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBackgroundCopyCallback2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBackgroundCopyCallback2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *JobTransferred )( 
            __RPC__in IBackgroundCopyCallback2 * This,
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob);
        
        HRESULT ( STDMETHODCALLTYPE *JobError )( 
            __RPC__in IBackgroundCopyCallback2 * This,
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob,
            /* [in] */ __RPC__in_opt IBackgroundCopyError *pError);
        
        HRESULT ( STDMETHODCALLTYPE *JobModification )( 
            __RPC__in IBackgroundCopyCallback2 * This,
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE *FileTransferred )( 
            __RPC__in IBackgroundCopyCallback2 * This,
            /* [in] */ __RPC__in_opt IBackgroundCopyJob *pJob,
            /* [in] */ __RPC__in_opt IBackgroundCopyFile *pFile);
        
        END_INTERFACE
    } IBackgroundCopyCallback2Vtbl;

    interface IBackgroundCopyCallback2
    {
        CONST_VTBL struct IBackgroundCopyCallback2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBackgroundCopyCallback2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBackgroundCopyCallback2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBackgroundCopyCallback2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBackgroundCopyCallback2_JobTransferred(This,pJob)	\
    ( (This)->lpVtbl -> JobTransferred(This,pJob) ) 

#define IBackgroundCopyCallback2_JobError(This,pJob,pError)	\
    ( (This)->lpVtbl -> JobError(This,pJob,pError) ) 

#define IBackgroundCopyCallback2_JobModification(This,pJob,dwReserved)	\
    ( (This)->lpVtbl -> JobModification(This,pJob,dwReserved) ) 


#define IBackgroundCopyCallback2_FileTransferred(This,pJob,pFile)	\
    ( (This)->lpVtbl -> FileTransferred(This,pJob,pFile) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBackgroundCopyCallback2_INTERFACE_DEFINED__ */



#ifndef __BackgroundCopyManager3_0_LIBRARY_DEFINED__
#define __BackgroundCopyManager3_0_LIBRARY_DEFINED__

/* library BackgroundCopyManager3_0 */
/* [version][lcid][helpstring][uuid] */ 



EXTERN_C const IID LIBID_BackgroundCopyManager3_0;

EXTERN_C const CLSID CLSID_BackgroundCopyManager3_0;

#ifdef __cplusplus

class DECLSPEC_UUID("659cdea7-489e-11d9-a9cd-000d56965251")
BackgroundCopyManager3_0;
#endif
#endif /* __BackgroundCopyManager3_0_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_bits3_0_0000_0008 */
/* [local] */ 

#include "bits4_0.h"


extern RPC_IF_HANDLE __MIDL_itf_bits3_0_0000_0008_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bits3_0_0000_0008_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bits2_0.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for bits2_0.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __bits2_0_h__
#define __bits2_0_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IBackgroundCopyJob3_FWD_DEFINED__
#define __IBackgroundCopyJob3_FWD_DEFINED__
typedef interface IBackgroundCopyJob3 IBackgroundCopyJob3;
#endif 	/* __IBackgroundCopyJob3_FWD_DEFINED__ */


#ifndef __IBackgroundCopyFile2_FWD_DEFINED__
#define __IBackgroundCopyFile2_FWD_DEFINED__
typedef interface IBackgroundCopyFile2 IBackgroundCopyFile2;
#endif 	/* __IBackgroundCopyFile2_FWD_DEFINED__ */


#ifndef __BackgroundCopyManager2_0_FWD_DEFINED__
#define __BackgroundCopyManager2_0_FWD_DEFINED__

#ifdef __cplusplus
typedef class BackgroundCopyManager2_0 BackgroundCopyManager2_0;
#else
typedef struct BackgroundCopyManager2_0 BackgroundCopyManager2_0;
#endif /* __cplusplus */

#endif 	/* __BackgroundCopyManager2_0_FWD_DEFINED__ */


#ifndef __IBackgroundCopyJob3_FWD_DEFINED__
#define __IBackgroundCopyJob3_FWD_DEFINED__
typedef interface IBackgroundCopyJob3 IBackgroundCopyJob3;
#endif 	/* __IBackgroundCopyJob3_FWD_DEFINED__ */


#ifndef __IBackgroundCopyFile2_FWD_DEFINED__
#define __IBackgroundCopyFile2_FWD_DEFINED__
typedef interface IBackgroundCopyFile2 IBackgroundCopyFile2;
#endif 	/* __IBackgroundCopyFile2_FWD_DEFINED__ */


/* header files for imported files */
#include "bits.h"
#include "bits1_5.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_bits2_0_0000_0000 */
/* [local] */ 

#define BG_LENGTH_TO_EOF     (UINT64)(-1)
typedef struct _BG_FILE_RANGE
    {
    UINT64 InitialOffset;
    UINT64 Length;
    } 	BG_FILE_RANGE;

#define BG_COPY_FILE_OWNER   1
#define BG_COPY_FILE_GROUP   2
#define BG_COPY_FILE_DACL    4
#define BG_COPY_FILE_SACL    8
#define BG_COPY_FILE_ALL    15


extern RPC_IF_HANDLE __MIDL_itf_bits2_0_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bits2_0_0000_0000_v0_0_s_ifspec;

#ifndef __IBackgroundCopyJob3_INTERFACE_DEFINED__
#define __IBackgroundCopyJob3_INTERFACE_DEFINED__

/* interface IBackgroundCopyJob3 */
/* [object][helpstring][uuid] */ 


EXTERN_C const IID IID_IBackgroundCopyJob3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("443c8934-90ff-48ed-bcde-26f5c7450042")
    IBackgroundCopyJob3 : public IBackgroundCopyJob2
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ReplaceRemotePrefix( 
            /* [in] */ __RPC__in LPCWSTR OldPrefix,
            /* [in] */ __RPC__in LPCWSTR NewPrefix) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddFileWithRanges( 
            /* [in] */ __RPC__in LPCWSTR RemoteUrl,
            /* [in] */ __RPC__in LPCWSTR LocalName,
            /* [in] */ DWORD RangeCount,
            /* [size_is][in] */ __RPC__in_ecount_full(RangeCount) BG_FILE_RANGE Ranges[  ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFileACLFlags( 
            /* [in] */ DWORD Flags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFileACLFlags( 
            /* [ref][out] */ __RPC__out DWORD *Flags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBackgroundCopyJob3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBackgroundCopyJob3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBackgroundCopyJob3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddFileSet )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [in] */ ULONG cFileCount,
            /* [size_is][in] */ __RPC__in_ecount_full(cFileCount) BG_FILE_INFO *pFileSet);
        
        HRESULT ( STDMETHODCALLTYPE *AddFile )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [in] */ __RPC__in LPCWSTR RemoteUrl,
            /* [in] */ __RPC__in LPCWSTR LocalName);
        
        HRESULT ( STDMETHODCALLTYPE *EnumFiles )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__deref_out_opt IEnumBackgroundCopyFiles **pEnum);
        
        HRESULT ( STDMETHODCALLTYPE *Suspend )( 
            __RPC__in IBackgroundCopyJob3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Resume )( 
            __RPC__in IBackgroundCopyJob3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            __RPC__in IBackgroundCopyJob3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Complete )( 
            __RPC__in IBackgroundCopyJob3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetId )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__out GUID *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__out BG_JOB_TYPE *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProgress )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__out BG_JOB_PROGRESS *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetTimes )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__out BG_JOB_TIMES *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__out BG_JOB_STATE *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetError )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__deref_out_opt IBackgroundCopyError **ppError);
        
        HRESULT ( STDMETHODCALLTYPE *GetOwner )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetDisplayName )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [in] */ __RPC__in LPCWSTR Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetDescription )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [in] */ __RPC__in LPCWSTR Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetDescription )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetPriority )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [in] */ BG_JOB_PRIORITY Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetPriority )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__out BG_JOB_PRIORITY *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetNotifyFlags )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [in] */ ULONG Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetNotifyFlags )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__out ULONG *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetNotifyInterface )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [in] */ __RPC__in_opt IUnknown *Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetNotifyInterface )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__deref_out_opt IUnknown **pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetMinimumRetryDelay )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [in] */ ULONG Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetMinimumRetryDelay )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__out ULONG *Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *SetNoProgressTimeout )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [in] */ ULONG Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetNoProgressTimeout )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__out ULONG *Seconds);
        
        HRESULT ( STDMETHODCALLTYPE *GetErrorCount )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__out ULONG *Errors);
        
        HRESULT ( STDMETHODCALLTYPE *SetProxySettings )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [in] */ BG_JOB_PROXY_USAGE ProxyUsage,
            /* [unique][string][in] */ __RPC__in_opt_string const WCHAR *ProxyList,
            /* [unique][string][in] */ __RPC__in_opt_string const WCHAR *ProxyBypassList);
        
        HRESULT ( STDMETHODCALLTYPE *GetProxySettings )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__out BG_JOB_PROXY_USAGE *pProxyUsage,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pProxyList,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pProxyBypassList);
        
        HRESULT ( STDMETHODCALLTYPE *TakeOwnership )( 
            __RPC__in IBackgroundCopyJob3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetNotifyCmdLine )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [unique][in] */ __RPC__in_opt LPCWSTR Program,
            /* [unique][in] */ __RPC__in_opt LPCWSTR Parameters);
        
        HRESULT ( STDMETHODCALLTYPE *GetNotifyCmdLine )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pProgram,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pParameters);
        
        HRESULT ( STDMETHODCALLTYPE *GetReplyProgress )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out][in] */ __RPC__inout BG_JOB_REPLY_PROGRESS *pProgress);
        
        HRESULT ( STDMETHODCALLTYPE *GetReplyData )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(( unsigned long  )*pLength) byte **ppBuffer,
            /* [unique][out][in] */ __RPC__inout_opt UINT64 *pLength);
        
        HRESULT ( STDMETHODCALLTYPE *SetReplyFileName )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [unique][in] */ __RPC__in_opt LPCWSTR ReplyFileName);
        
        HRESULT ( STDMETHODCALLTYPE *GetReplyFileName )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pReplyFileName);
        
        HRESULT ( STDMETHODCALLTYPE *SetCredentials )( 
            __RPC__in IBackgroundCopyJob3 * This,
            __RPC__in BG_AUTH_CREDENTIALS *credentials);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveCredentials )( 
            __RPC__in IBackgroundCopyJob3 * This,
            BG_AUTH_TARGET Target,
            BG_AUTH_SCHEME Scheme);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceRemotePrefix )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [in] */ __RPC__in LPCWSTR OldPrefix,
            /* [in] */ __RPC__in LPCWSTR NewPrefix);
        
        HRESULT ( STDMETHODCALLTYPE *AddFileWithRanges )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [in] */ __RPC__in LPCWSTR RemoteUrl,
            /* [in] */ __RPC__in LPCWSTR LocalName,
            /* [in] */ DWORD RangeCount,
            /* [size_is][in] */ __RPC__in_ecount_full(RangeCount) BG_FILE_RANGE Ranges[  ]);
        
        HRESULT ( STDMETHODCALLTYPE *SetFileACLFlags )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [in] */ DWORD Flags);
        
        HRESULT ( STDMETHODCALLTYPE *GetFileACLFlags )( 
            __RPC__in IBackgroundCopyJob3 * This,
            /* [ref][out] */ __RPC__out DWORD *Flags);
        
        END_INTERFACE
    } IBackgroundCopyJob3Vtbl;

    interface IBackgroundCopyJob3
    {
        CONST_VTBL struct IBackgroundCopyJob3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBackgroundCopyJob3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBackgroundCopyJob3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBackgroundCopyJob3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBackgroundCopyJob3_AddFileSet(This,cFileCount,pFileSet)	\
    ( (This)->lpVtbl -> AddFileSet(This,cFileCount,pFileSet) ) 

#define IBackgroundCopyJob3_AddFile(This,RemoteUrl,LocalName)	\
    ( (This)->lpVtbl -> AddFile(This,RemoteUrl,LocalName) ) 

#define IBackgroundCopyJob3_EnumFiles(This,pEnum)	\
    ( (This)->lpVtbl -> EnumFiles(This,pEnum) ) 

#define IBackgroundCopyJob3_Suspend(This)	\
    ( (This)->lpVtbl -> Suspend(This) ) 

#define IBackgroundCopyJob3_Resume(This)	\
    ( (This)->lpVtbl -> Resume(This) ) 

#define IBackgroundCopyJob3_Cancel(This)	\
    ( (This)->lpVtbl -> Cancel(This) ) 

#define IBackgroundCopyJob3_Complete(This)	\
    ( (This)->lpVtbl -> Complete(This) ) 

#define IBackgroundCopyJob3_GetId(This,pVal)	\
    ( (This)->lpVtbl -> GetId(This,pVal) ) 

#define IBackgroundCopyJob3_GetType(This,pVal)	\
    ( (This)->lpVtbl -> GetType(This,pVal) ) 

#define IBackgroundCopyJob3_GetProgress(This,pVal)	\
    ( (This)->lpVtbl -> GetProgress(This,pVal) ) 

#define IBackgroundCopyJob3_GetTimes(This,pVal)	\
    ( (This)->lpVtbl -> GetTimes(This,pVal) ) 

#define IBackgroundCopyJob3_GetState(This,pVal)	\
    ( (This)->lpVtbl -> GetState(This,pVal) ) 

#define IBackgroundCopyJob3_GetError(This,ppError)	\
    ( (This)->lpVtbl -> GetError(This,ppError) ) 

#define IBackgroundCopyJob3_GetOwner(This,pVal)	\
    ( (This)->lpVtbl -> GetOwner(This,pVal) ) 

#define IBackgroundCopyJob3_SetDisplayName(This,Val)	\
    ( (This)->lpVtbl -> SetDisplayName(This,Val) ) 

#define IBackgroundCopyJob3_GetDisplayName(This,pVal)	\
    ( (This)->lpVtbl -> GetDisplayName(This,pVal) ) 

#define IBackgroundCopyJob3_SetDescription(This,Val)	\
    ( (This)->lpVtbl -> SetDescription(This,Val) ) 

#define IBackgroundCopyJob3_GetDescription(This,pVal)	\
    ( (This)->lpVtbl -> GetDescription(This,pVal) ) 

#define IBackgroundCopyJob3_SetPriority(This,Val)	\
    ( (This)->lpVtbl -> SetPriority(This,Val) ) 

#define IBackgroundCopyJob3_GetPriority(This,pVal)	\
    ( (This)->lpVtbl -> GetPriority(This,pVal) ) 

#define IBackgroundCopyJob3_SetNotifyFlags(This,Val)	\
    ( (This)->lpVtbl -> SetNotifyFlags(This,Val) ) 

#define IBackgroundCopyJob3_GetNotifyFlags(This,pVal)	\
    ( (This)->lpVtbl -> GetNotifyFlags(This,pVal) ) 

#define IBackgroundCopyJob3_SetNotifyInterface(This,Val)	\
    ( (This)->lpVtbl -> SetNotifyInterface(This,Val) ) 

#define IBackgroundCopyJob3_GetNotifyInterface(This,pVal)	\
    ( (This)->lpVtbl -> GetNotifyInterface(This,pVal) ) 

#define IBackgroundCopyJob3_SetMinimumRetryDelay(This,Seconds)	\
    ( (This)->lpVtbl -> SetMinimumRetryDelay(This,Seconds) ) 

#define IBackgroundCopyJob3_GetMinimumRetryDelay(This,Seconds)	\
    ( (This)->lpVtbl -> GetMinimumRetryDelay(This,Seconds) ) 

#define IBackgroundCopyJob3_SetNoProgressTimeout(This,Seconds)	\
    ( (This)->lpVtbl -> SetNoProgressTimeout(This,Seconds) ) 

#define IBackgroundCopyJob3_GetNoProgressTimeout(This,Seconds)	\
    ( (This)->lpVtbl -> GetNoProgressTimeout(This,Seconds) ) 

#define IBackgroundCopyJob3_GetErrorCount(This,Errors)	\
    ( (This)->lpVtbl -> GetErrorCount(This,Errors) ) 

#define IBackgroundCopyJob3_SetProxySettings(This,ProxyUsage,ProxyList,ProxyBypassList)	\
    ( (This)->lpVtbl -> SetProxySettings(This,ProxyUsage,ProxyList,ProxyBypassList) ) 

#define IBackgroundCopyJob3_GetProxySettings(This,pProxyUsage,pProxyList,pProxyBypassList)	\
    ( (This)->lpVtbl -> GetProxySettings(This,pProxyUsage,pProxyList,pProxyBypassList) ) 

#define IBackgroundCopyJob3_TakeOwnership(This)	\
    ( (This)->lpVtbl -> TakeOwnership(This) ) 


#define IBackgroundCopyJob3_SetNotifyCmdLine(This,Program,Parameters)	\
    ( (This)->lpVtbl -> SetNotifyCmdLine(This,Program,Parameters) ) 

#define IBackgroundCopyJob3_GetNotifyCmdLine(This,pProgram,pParameters)	\
    ( (This)->lpVtbl -> GetNotifyCmdLine(This,pProgram,pParameters) ) 

#define IBackgroundCopyJob3_GetReplyProgress(This,pProgress)	\
    ( (This)->lpVtbl -> GetReplyProgress(This,pProgress) ) 

#define IBackgroundCopyJob3_GetReplyData(This,ppBuffer,pLength)	\
    ( (This)->lpVtbl -> GetReplyData(This,ppBuffer,pLength) ) 

#define IBackgroundCopyJob3_SetReplyFileName(This,ReplyFileName)	\
    ( (This)->lpVtbl -> SetReplyFileName(This,ReplyFileName) ) 

#define IBackgroundCopyJob3_GetReplyFileName(This,pReplyFileName)	\
    ( (This)->lpVtbl -> GetReplyFileName(This,pReplyFileName) ) 

#define IBackgroundCopyJob3_SetCredentials(This,credentials)	\
    ( (This)->lpVtbl -> SetCredentials(This,credentials) ) 

#define IBackgroundCopyJob3_RemoveCredentials(This,Target,Scheme)	\
    ( (This)->lpVtbl -> RemoveCredentials(This,Target,Scheme) ) 


#define IBackgroundCopyJob3_ReplaceRemotePrefix(This,OldPrefix,NewPrefix)	\
    ( (This)->lpVtbl -> ReplaceRemotePrefix(This,OldPrefix,NewPrefix) ) 

#define IBackgroundCopyJob3_AddFileWithRanges(This,RemoteUrl,LocalName,RangeCount,Ranges)	\
    ( (This)->lpVtbl -> AddFileWithRanges(This,RemoteUrl,LocalName,RangeCount,Ranges) ) 

#define IBackgroundCopyJob3_SetFileACLFlags(This,Flags)	\
    ( (This)->lpVtbl -> SetFileACLFlags(This,Flags) ) 

#define IBackgroundCopyJob3_GetFileACLFlags(This,Flags)	\
    ( (This)->lpVtbl -> GetFileACLFlags(This,Flags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBackgroundCopyJob3_INTERFACE_DEFINED__ */


#ifndef __IBackgroundCopyFile2_INTERFACE_DEFINED__
#define __IBackgroundCopyFile2_INTERFACE_DEFINED__

/* interface IBackgroundCopyFile2 */
/* [object][helpstring][uuid] */ 


EXTERN_C const IID IID_IBackgroundCopyFile2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83e81b93-0873-474d-8a8c-f2018b1a939c")
    IBackgroundCopyFile2 : public IBackgroundCopyFile
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFileRanges( 
            /* [unique][out][in] */ __RPC__inout_opt DWORD *RangeCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*RangeCount) BG_FILE_RANGE **Ranges) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetRemoteName( 
            __RPC__in LPCWSTR Val) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBackgroundCopyFile2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBackgroundCopyFile2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBackgroundCopyFile2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBackgroundCopyFile2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetRemoteName )( 
            __RPC__in IBackgroundCopyFile2 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocalName )( 
            __RPC__in IBackgroundCopyFile2 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProgress )( 
            __RPC__in IBackgroundCopyFile2 * This,
            /* [out] */ __RPC__out BG_FILE_PROGRESS *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetFileRanges )( 
            __RPC__in IBackgroundCopyFile2 * This,
            /* [unique][out][in] */ __RPC__inout_opt DWORD *RangeCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*RangeCount) BG_FILE_RANGE **Ranges);
        
        HRESULT ( STDMETHODCALLTYPE *SetRemoteName )( 
            __RPC__in IBackgroundCopyFile2 * This,
            __RPC__in LPCWSTR Val);
        
        END_INTERFACE
    } IBackgroundCopyFile2Vtbl;

    interface IBackgroundCopyFile2
    {
        CONST_VTBL struct IBackgroundCopyFile2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBackgroundCopyFile2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBackgroundCopyFile2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBackgroundCopyFile2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBackgroundCopyFile2_GetRemoteName(This,pVal)	\
    ( (This)->lpVtbl -> GetRemoteName(This,pVal) ) 

#define IBackgroundCopyFile2_GetLocalName(This,pVal)	\
    ( (This)->lpVtbl -> GetLocalName(This,pVal) ) 

#define IBackgroundCopyFile2_GetProgress(This,pVal)	\
    ( (This)->lpVtbl -> GetProgress(This,pVal) ) 


#define IBackgroundCopyFile2_GetFileRanges(This,RangeCount,Ranges)	\
    ( (This)->lpVtbl -> GetFileRanges(This,RangeCount,Ranges) ) 

#define IBackgroundCopyFile2_SetRemoteName(This,Val)	\
    ( (This)->lpVtbl -> SetRemoteName(This,Val) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBackgroundCopyFile2_INTERFACE_DEFINED__ */



#ifndef __BackgroundCopyManager2_0_LIBRARY_DEFINED__
#define __BackgroundCopyManager2_0_LIBRARY_DEFINED__

/* library BackgroundCopyManager2_0 */
/* [version][lcid][helpstring][uuid] */ 





EXTERN_C const IID LIBID_BackgroundCopyManager2_0;

EXTERN_C const CLSID CLSID_BackgroundCopyManager2_0;

#ifdef __cplusplus

class DECLSPEC_UUID("6d18ad12-bde3-4393-b311-099c346e6df9")
BackgroundCopyManager2_0;
#endif
#endif /* __BackgroundCopyManager2_0_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_bits2_0_0000_0002 */
/* [local] */ 

#include "bits2_5.h"


extern RPC_IF_HANDLE __MIDL_itf_bits2_0_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bits2_0_0000_0002_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\BiDiSpl.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for bidispl.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __bidispl_h__
#define __bidispl_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IBidiRequest_FWD_DEFINED__
#define __IBidiRequest_FWD_DEFINED__
typedef interface IBidiRequest IBidiRequest;
#endif 	/* __IBidiRequest_FWD_DEFINED__ */


#ifndef __IBidiRequestContainer_FWD_DEFINED__
#define __IBidiRequestContainer_FWD_DEFINED__
typedef interface IBidiRequestContainer IBidiRequestContainer;
#endif 	/* __IBidiRequestContainer_FWD_DEFINED__ */


#ifndef __IBidiSpl_FWD_DEFINED__
#define __IBidiSpl_FWD_DEFINED__
typedef interface IBidiSpl IBidiSpl;
#endif 	/* __IBidiSpl_FWD_DEFINED__ */


#ifndef __IBidiSpl2_FWD_DEFINED__
#define __IBidiSpl2_FWD_DEFINED__
typedef interface IBidiSpl2 IBidiSpl2;
#endif 	/* __IBidiSpl2_FWD_DEFINED__ */


#ifndef __BidiRequest_FWD_DEFINED__
#define __BidiRequest_FWD_DEFINED__

#ifdef __cplusplus
typedef class BidiRequest BidiRequest;
#else
typedef struct BidiRequest BidiRequest;
#endif /* __cplusplus */

#endif 	/* __BidiRequest_FWD_DEFINED__ */


#ifndef __BidiRequestContainer_FWD_DEFINED__
#define __BidiRequestContainer_FWD_DEFINED__

#ifdef __cplusplus
typedef class BidiRequestContainer BidiRequestContainer;
#else
typedef struct BidiRequestContainer BidiRequestContainer;
#endif /* __cplusplus */

#endif 	/* __BidiRequestContainer_FWD_DEFINED__ */


#ifndef __BidiSpl_FWD_DEFINED__
#define __BidiSpl_FWD_DEFINED__

#ifdef __cplusplus
typedef class BidiSpl BidiSpl;
#else
typedef struct BidiSpl BidiSpl;
#endif /* __cplusplus */

#endif 	/* __BidiSpl_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __IBidiRequest_INTERFACE_DEFINED__
#define __IBidiRequest_INTERFACE_DEFINED__

/* interface IBidiRequest */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBidiRequest;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8F348BD7-4B47-4755-8A9D-0F422DF3DC89")
    IBidiRequest : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetSchema( 
            /* [in] */ __RPC__in const LPCWSTR pszSchema) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetInputData( 
            /* [in] */ const DWORD dwType,
            /* [in] */ __RPC__in const BYTE *pData,
            /* [in] */ const UINT uSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetResult( 
            /* [out] */ __RPC__out HRESULT *phr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputData( 
            /* [in] */ const DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt LPWSTR *ppszSchema,
            /* [out] */ __RPC__out DWORD *pdwType,
            /* [out] */ __RPC__deref_out_opt BYTE **ppData,
            /* [out] */ __RPC__out ULONG *uSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumCount( 
            /* [out] */ __RPC__out DWORD *pdwTotal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBidiRequestVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBidiRequest * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBidiRequest * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBidiRequest * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetSchema )( 
            __RPC__in IBidiRequest * This,
            /* [in] */ __RPC__in const LPCWSTR pszSchema);
        
        HRESULT ( STDMETHODCALLTYPE *SetInputData )( 
            __RPC__in IBidiRequest * This,
            /* [in] */ const DWORD dwType,
            /* [in] */ __RPC__in const BYTE *pData,
            /* [in] */ const UINT uSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetResult )( 
            __RPC__in IBidiRequest * This,
            /* [out] */ __RPC__out HRESULT *phr);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputData )( 
            __RPC__in IBidiRequest * This,
            /* [in] */ const DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt LPWSTR *ppszSchema,
            /* [out] */ __RPC__out DWORD *pdwType,
            /* [out] */ __RPC__deref_out_opt BYTE **ppData,
            /* [out] */ __RPC__out ULONG *uSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnumCount )( 
            __RPC__in IBidiRequest * This,
            /* [out] */ __RPC__out DWORD *pdwTotal);
        
        END_INTERFACE
    } IBidiRequestVtbl;

    interface IBidiRequest
    {
        CONST_VTBL struct IBidiRequestVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBidiRequest_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBidiRequest_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBidiRequest_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBidiRequest_SetSchema(This,pszSchema)	\
    ( (This)->lpVtbl -> SetSchema(This,pszSchema) ) 

#define IBidiRequest_SetInputData(This,dwType,pData,uSize)	\
    ( (This)->lpVtbl -> SetInputData(This,dwType,pData,uSize) ) 

#define IBidiRequest_GetResult(This,phr)	\
    ( (This)->lpVtbl -> GetResult(This,phr) ) 

#define IBidiRequest_GetOutputData(This,dwIndex,ppszSchema,pdwType,ppData,uSize)	\
    ( (This)->lpVtbl -> GetOutputData(This,dwIndex,ppszSchema,pdwType,ppData,uSize) ) 

#define IBidiRequest_GetEnumCount(This,pdwTotal)	\
    ( (This)->lpVtbl -> GetEnumCount(This,pdwTotal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBidiRequest_INTERFACE_DEFINED__ */


#ifndef __IBidiRequestContainer_INTERFACE_DEFINED__
#define __IBidiRequestContainer_INTERFACE_DEFINED__

/* interface IBidiRequestContainer */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBidiRequestContainer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D752F6C0-94A8-4275-A77D-8F1D1A1121AE")
    IBidiRequestContainer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddRequest( 
            /* [in] */ __RPC__in_opt IBidiRequest *pRequest) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumObject( 
            /* [out] */ __RPC__deref_out_opt IEnumUnknown **ppenum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRequestCount( 
            /* [out] */ __RPC__out ULONG *puCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBidiRequestContainerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBidiRequestContainer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBidiRequestContainer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBidiRequestContainer * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddRequest )( 
            __RPC__in IBidiRequestContainer * This,
            /* [in] */ __RPC__in_opt IBidiRequest *pRequest);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnumObject )( 
            __RPC__in IBidiRequestContainer * This,
            /* [out] */ __RPC__deref_out_opt IEnumUnknown **ppenum);
        
        HRESULT ( STDMETHODCALLTYPE *GetRequestCount )( 
            __RPC__in IBidiRequestContainer * This,
            /* [out] */ __RPC__out ULONG *puCount);
        
        END_INTERFACE
    } IBidiRequestContainerVtbl;

    interface IBidiRequestContainer
    {
        CONST_VTBL struct IBidiRequestContainerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBidiRequestContainer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBidiRequestContainer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBidiRequestContainer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBidiRequestContainer_AddRequest(This,pRequest)	\
    ( (This)->lpVtbl -> AddRequest(This,pRequest) ) 

#define IBidiRequestContainer_GetEnumObject(This,ppenum)	\
    ( (This)->lpVtbl -> GetEnumObject(This,ppenum) ) 

#define IBidiRequestContainer_GetRequestCount(This,puCount)	\
    ( (This)->lpVtbl -> GetRequestCount(This,puCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBidiRequestContainer_INTERFACE_DEFINED__ */


#ifndef __IBidiSpl_INTERFACE_DEFINED__
#define __IBidiSpl_INTERFACE_DEFINED__

/* interface IBidiSpl */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBidiSpl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D580DC0E-DE39-4649-BAA8-BF0B85A03A97")
    IBidiSpl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BindDevice( 
            /* [in] */ __RPC__in const LPCWSTR pszDeviceName,
            /* [in] */ const DWORD dwAccess) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnbindDevice( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SendRecv( 
            /* [in] */ __RPC__in const LPCWSTR pszAction,
            /* [in] */ __RPC__in_opt IBidiRequest *pRequest) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MultiSendRecv( 
            /* [in] */ __RPC__in const LPCWSTR pszAction,
            /* [in] */ __RPC__in_opt IBidiRequestContainer *pRequestContainer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBidiSplVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBidiSpl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBidiSpl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBidiSpl * This);
        
        HRESULT ( STDMETHODCALLTYPE *BindDevice )( 
            __RPC__in IBidiSpl * This,
            /* [in] */ __RPC__in const LPCWSTR pszDeviceName,
            /* [in] */ const DWORD dwAccess);
        
        HRESULT ( STDMETHODCALLTYPE *UnbindDevice )( 
            __RPC__in IBidiSpl * This);
        
        HRESULT ( STDMETHODCALLTYPE *SendRecv )( 
            __RPC__in IBidiSpl * This,
            /* [in] */ __RPC__in const LPCWSTR pszAction,
            /* [in] */ __RPC__in_opt IBidiRequest *pRequest);
        
        HRESULT ( STDMETHODCALLTYPE *MultiSendRecv )( 
            __RPC__in IBidiSpl * This,
            /* [in] */ __RPC__in const LPCWSTR pszAction,
            /* [in] */ __RPC__in_opt IBidiRequestContainer *pRequestContainer);
        
        END_INTERFACE
    } IBidiSplVtbl;

    interface IBidiSpl
    {
        CONST_VTBL struct IBidiSplVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBidiSpl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBidiSpl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBidiSpl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBidiSpl_BindDevice(This,pszDeviceName,dwAccess)	\
    ( (This)->lpVtbl -> BindDevice(This,pszDeviceName,dwAccess) ) 

#define IBidiSpl_UnbindDevice(This)	\
    ( (This)->lpVtbl -> UnbindDevice(This) ) 

#define IBidiSpl_SendRecv(This,pszAction,pRequest)	\
    ( (This)->lpVtbl -> SendRecv(This,pszAction,pRequest) ) 

#define IBidiSpl_MultiSendRecv(This,pszAction,pRequestContainer)	\
    ( (This)->lpVtbl -> MultiSendRecv(This,pszAction,pRequestContainer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBidiSpl_INTERFACE_DEFINED__ */


#ifndef __IBidiSpl2_INTERFACE_DEFINED__
#define __IBidiSpl2_INTERFACE_DEFINED__

/* interface IBidiSpl2 */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IBidiSpl2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E8F51B8-8273-4906-8E7B-BE453FFD2E2B")
    IBidiSpl2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BindDevice( 
            /* [in] */ __RPC__in const LPCWSTR pszDeviceName,
            /* [in] */ const DWORD dwAccess) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnbindDevice( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SendRecvXMLString( 
            /* [in] */ __RPC__in BSTR bstrRequest,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrResponse) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SendRecvXMLStream( 
            /* [in] */ __RPC__in_opt IStream *pSRequest,
            /* [out] */ __RPC__deref_out_opt IStream **ppSResponse) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBidiSpl2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBidiSpl2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBidiSpl2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBidiSpl2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *BindDevice )( 
            __RPC__in IBidiSpl2 * This,
            /* [in] */ __RPC__in const LPCWSTR pszDeviceName,
            /* [in] */ const DWORD dwAccess);
        
        HRESULT ( STDMETHODCALLTYPE *UnbindDevice )( 
            __RPC__in IBidiSpl2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *SendRecvXMLString )( 
            __RPC__in IBidiSpl2 * This,
            /* [in] */ __RPC__in BSTR bstrRequest,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrResponse);
        
        HRESULT ( STDMETHODCALLTYPE *SendRecvXMLStream )( 
            __RPC__in IBidiSpl2 * This,
            /* [in] */ __RPC__in_opt IStream *pSRequest,
            /* [out] */ __RPC__deref_out_opt IStream **ppSResponse);
        
        END_INTERFACE
    } IBidiSpl2Vtbl;

    interface IBidiSpl2
    {
        CONST_VTBL struct IBidiSpl2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBidiSpl2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBidiSpl2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBidiSpl2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBidiSpl2_BindDevice(This,pszDeviceName,dwAccess)	\
    ( (This)->lpVtbl -> BindDevice(This,pszDeviceName,dwAccess) ) 

#define IBidiSpl2_UnbindDevice(This)	\
    ( (This)->lpVtbl -> UnbindDevice(This) ) 

#define IBidiSpl2_SendRecvXMLString(This,bstrRequest,pbstrResponse)	\
    ( (This)->lpVtbl -> SendRecvXMLString(This,bstrRequest,pbstrResponse) ) 

#define IBidiSpl2_SendRecvXMLStream(This,pSRequest,ppSResponse)	\
    ( (This)->lpVtbl -> SendRecvXMLStream(This,pSRequest,ppSResponse) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBidiSpl2_INTERFACE_DEFINED__ */



#ifndef __IBidiSplLib_LIBRARY_DEFINED__
#define __IBidiSplLib_LIBRARY_DEFINED__

/* library IBidiSplLib */
/* [helpstring][version][uuid] */ 


EXTERN_C const IID LIBID_IBidiSplLib;

EXTERN_C const CLSID CLSID_BidiRequest;

#ifdef __cplusplus

class DECLSPEC_UUID("B9162A23-45F9-47cc-80F5-FE0FE9B9E1A2")
BidiRequest;
#endif

EXTERN_C const CLSID CLSID_BidiRequestContainer;

#ifdef __cplusplus

class DECLSPEC_UUID("FC5B8A24-DB05-4a01-8388-22EDF6C2BBBA")
BidiRequestContainer;
#endif

EXTERN_C const CLSID CLSID_BidiSpl;

#ifdef __cplusplus

class DECLSPEC_UUID("2A614240-A4C5-4c33-BD87-1BC709331639")
BidiSpl;
#endif
#endif /* __IBidiSplLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bthsdpdef.h ===
#ifndef __BTHSDPDEF_H__
#define __BTHSDPDEF_H__

#if (NTDDI_VERSION >= NTDDI_WINXPSP2)

#ifdef __cplusplus
extern "C" {
#endif

struct SDP_LARGE_INTEGER_16 {
    ULONGLONG LowPart;
    LONGLONG HighPart;
}; 
 

struct SDP_ULARGE_INTEGER_16 {
    ULONGLONG LowPart;
    ULONGLONG HighPart;
};

typedef struct SDP_ULARGE_INTEGER_16 SDP_ULARGE_INTEGER_16, *PSDP_ULARGE_INTEGER_16, *LPSDP_ULARGE_INTEGER_16;
typedef struct SDP_LARGE_INTEGER_16  SDP_LARGE_INTEGER_16,  *PSDP_LARGE_INTEGER_16,  *LPSDP_LARGE_INTEGER_16;

enum NodeContainerType {
	NodeContainerTypeSequence,
    NodeContainerTypeAlternative
};

typedef enum NodeContainerType NodeContainerType;

typedef USHORT SDP_ERROR, *PSDP_ERROR;

enum SDP_TYPE {
    SDP_TYPE_NIL =  0x00,
    SDP_TYPE_UINT = 0x01,
    SDP_TYPE_INT = 0x02,
    SDP_TYPE_UUID = 0x03,
    SDP_TYPE_STRING = 0x04,
    SDP_TYPE_BOOLEAN = 0x05,
    SDP_TYPE_SEQUENCE = 0x06,
    SDP_TYPE_ALTERNATIVE = 0x07,
    SDP_TYPE_URL = 0x08,
    SDP_TYPE_CONTAINER = 0x20
};
//  9 - 31 are reserved
typedef enum SDP_TYPE SDP_TYPE;

// allow for a little easier type checking / sizing for integers and UUIDs
// ((SDP_ST_XXX & 0xF0) >> 4) == SDP_TYPE_XXX
// size of the data (in bytes) is encoded as ((SDP_ST_XXX & 0xF0) >> 8)
enum SDP_SPECIFICTYPE {
    SDP_ST_NONE = 0x0000,

    SDP_ST_UINT8 = 0x0010,
    SDP_ST_UINT16 = 0x0110,
    SDP_ST_UINT32 = 0x0210,
    SDP_ST_UINT64 = 0x0310,
    SDP_ST_UINT128 = 0x0410,
    
    SDP_ST_INT8 = 0x0020,
    SDP_ST_INT16 = 0x0120,
    SDP_ST_INT32 = 0x0220,
    SDP_ST_INT64 = 0x0320,
    SDP_ST_INT128 = 0x0420,
    
    SDP_ST_UUID16 = 0x0130,
    SDP_ST_UUID32 = 0x0220,
    SDP_ST_UUID128 = 0x0430
};
typedef enum SDP_SPECIFICTYPE SDP_SPECIFICTYPE;

typedef struct _SdpAttributeRange {
    USHORT minAttribute;
    USHORT maxAttribute;
} SdpAttributeRange;


typedef
#ifdef USE_MIDL_SYNTAX 
      [switch_type(unsigned short)]
#endif
                                    union SdpQueryUuidUnion {
#ifdef USE_MIDL_SYNTAX 
    [case(SDP_ST_UUID128)]
#endif
       GUID uuid128;

#ifdef USE_MIDL_SYNTAX 
    [case(SDP_ST_UUID32)] 
#endif _NTDDK_
       ULONG uuid32;

#ifdef USE_MIDL_SYNTAX 
    [case(SDP_ST_UUID16)]
#endif _NTDDK_
        USHORT uuid16;
} SdpQueryUuidUnion;

typedef struct _SdpQueryUuid {
#ifdef USE_MIDL_SYNTAX 
    [switch_is(uuidType)]
#endif
       SdpQueryUuidUnion u;

    USHORT uuidType;
} SdpQueryUuid;


#ifdef __cplusplus
};
#endif

#endif // (NTDDI_VERSION >= NTDDI_WINXPSP2)


#endif // __BTHSDPDEF_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\calendardeviceservice.h ===
/*
 *  CalendarDeviceService.h
 *
 *  Contains declarations for the Calendar Device Service
 *
 *  Copyright (c) Microsoft Corporation, All Rights Reserved.
 *
 */

#ifndef _CALENDARDEVICESERVICE_H_
#define _CALENDARDEVICESERVICE_H_

#include <DeviceServices.h>
#include <MessageDeviceService.h>
#include <SyncDeviceService.h>


/*****************************************************************************/
/*  Calendar Service Info                                                    */
/*****************************************************************************/

DEFINE_DEVSVCGUID(SERVICE_Calendar,
    0xE4DFDBD3, 0x7F04, 0x45E9, 0x9F, 0xA1, 0x5C, 0xA0, 0xEA, 0xEB, 0x0A, 0xE3);

#define NAME_CalendarSvc                    L"Calendar"
#define TYPE_CalendarSvc                    DEVSVCTYPE_DEFAULT


/*****************************************************************************/
/*  Calendar Service Properties                                              */
/*****************************************************************************/

DEFINE_DEVSVCGUID(NAMESPACE_CalendarSvc,
    0x63816297, 0x61E5, 0x4306, 0xB1, 0xA3, 0xCE, 0xDF, 0x48, 0x1B, 0x86, 0x29);

/*  PKEY_CalendarSvc_SyncInWindowOnly
 */

#define PKEY_CalendarSvc_SyncInWindowOnly   PKEY_SyncSvc_FilterType
#define NAME_CalendarSvc_SyncInWindowOnly   NAME_SyncSvc_FilterType


/*  PKEY_CalendarSvc_SyncWindowStart
 *
 *  Indicates the number of minutes before TODAY that the sync window starts
 *
 *  Type: UInt32
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_CalendarSvc_SyncWindowStart,
    0x63816297, 0x61E5, 0x4306, 0xB1, 0xA3, 0xCE, 0xDF, 0x48, 0x1B, 0x86, 0x29,
    2);

#define NAME_CalendarSvc_SyncWindowStart    L"SyncWindowStart"


/*  PKEY_CalendarSvc_SyncWindowEnd
 *
 *  Indicates the number of minutes after TODAY that the sync window ends
 *
 *  Type: UInt32
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_CalendarSvc_SyncWindowEnd,
    0x63816297, 0x61E5, 0x4306, 0xB1, 0xA3, 0xCE, 0xDF, 0x48, 0x1B, 0x86, 0x29,
    3);

#define NAME_CalendarSvc_SyncWindowEnd      L"SyncWindowEnd"


/*****************************************************************************/
/*  Calendar Service Object Formats                                          */
/*****************************************************************************/

/*  FORMAT_AbstractActivity
 */

DEFINE_DEVSVCGUID(FORMAT_AbstractActivity,
    0xbf70e114, 0x3901, 0x4449, 0xbe, 0xe7, 0xd9, 0xea, 0x14, 0x93, 0xc3, 0x09);

#define NAME_AbstractActivity               L"AbstractActivity"

/*  FORMAT_AbstractActivityOccurrence
 */

DEFINE_DEVSVCGUID(FORMAT_AbstractActivityOccurrence,
    0xE87A7008, 0x32D1, 0x42C5, 0x84, 0x88, 0x4C, 0x23, 0x58, 0x66, 0xAF, 0x32);

#define NAME_AbstractActivityOccurrence     L"AbstractActivityOccurrence"

/*  FORMAT_VCalendar1Activity
 */

DEFINE_DEVSVCGUID(FORMAT_VCalendar1Activity,
    0x23F7A5A5, 0xF7D3, 0x4585, 0xA1, 0xFF, 0x76, 0xE2, 0xD4, 0x5C, 0x91, 0x21);

#define NAME_VCalendar1Activity             L"VCalendar1"

/*  FORMAT_ICalendarActivity
 *
 *  iCalendar file format (vCalendar Version 2)
 */

DEFINE_DEVSVCGUID(FORMAT_ICalendarActivity,
    0xCC4538CB, 0x7890, 0x41B7, 0xA3, 0xF1, 0xB6, 0xE6, 0x0B, 0xDD, 0x2A, 0x61);

#define NAME_ICalendarActivity              L"ICalendar"

/*****************************************************************************/
/*  Calendar Service Object Property Keys                                    */
/*****************************************************************************/

DEFINE_DEVSVCGUID(NAMESPACE_CalendarObj,
    0xF99EFD03, 0x431D, 0x40D8, 0xA1, 0xC9, 0x4E, 0x22, 0x0D, 0x9C, 0x88, 0xD3);


/*  CalendarObj.Location
 *
 *  MTP Property: Activity Location (0xDD52)
 *  Type: String/AUInt16
 *  Form: None/LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_CalendarObj_Location,
    0xF99EFD03, 0x431D, 0x40D8, 0xA1, 0xC9, 0x4E, 0x22, 0x0D, 0x9C, 0x88, 0xD3,
    3);

#define NAME_CalendarObj_Location           L"Location"


/*  CalendarObj.Accepted
 *
 *  MTP Property: Activity Accepted (0xDD57)
 *  Type: AUInt16
 *  Form: LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_CalendarObj_Accepted,
    0xF99EFD03, 0x431D, 0x40D8, 0xA1, 0xC9, 0x4E, 0x22, 0x0D, 0x9C, 0x88, 0xD3,
    10);

#define NAME_CalendarObj_Accepted           L"Accepted"


/*  CalendarObj.Tentative
 *
 *  MTP Property: Activity Tentative (0xDD58)
 *  Type: AUInt16
 *  Form: LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_CalendarObj_Tentative,
    0xF99EFD03, 0x431D, 0x40D8, 0xA1, 0xC9, 0x4E, 0x22, 0x0D, 0x9C, 0x88, 0xD3,
    12);

#define NAME_CalendarObj_Tentative          L"Tentative"


/*  CalendarObj.Declined
 *
 *  MTP Property: Activity Declined (0xDD59)
 *  Type: AUInt16
 *  Form: LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_CalendarObj_Declined,
    0xF99EFD03, 0x431D, 0x40D8, 0xA1, 0xC9, 0x4E, 0x22, 0x0D, 0x9C, 0x88, 0xD3,
    13);

#define NAME_CalendarObj_Declined           L"Declined"


/*  CalendarObj.TimeZone
 *
 *  Contains the TZ Database name for the time zone in which the appointment
 *  was created.

 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_CalendarObj_TimeZone,
    0xF99EFD03, 0x431D, 0x40D8, 0xA1, 0xC9, 0x4E, 0x22, 0x0D, 0x9C, 0x88, 0xD3,
    14);

#define NAME_CalendarObj_TimeZone           L"TimeZone"


/*  CalendarObj.ReminderOffset
 *
 *  Contains the offset in minutes from the start of the appointment that
 *  a reminder is to be fired.
 *
 *  Type: UInt32
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_CalendarObj_ReminderOffset,
    0xF99EFD03, 0x431D, 0x40D8, 0xA1, 0xC9, 0x4E, 0x22, 0x0D, 0x9C, 0x88, 0xD3,
    15);

#define NAME_CalendarObj_ReminderOffset     L"ReminderOffset"


/*  CalendarObj.BusyStatus
 *
 *  Contains the free/busy status for the specified appointment.
 *
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_CalendarObj_BusyStatus,
    0xF99EFD03, 0x431D, 0x40D8, 0xA1, 0xC9, 0x4E, 0x22, 0x0D, 0x9C, 0x88, 0xD3,
    16);

#define NAME_CalendarObj_BusyStatus         L"BusyStatus"

#define ENUM_CalendarObj_BusyStatusFree         0x0000
#define ENUM_CalendarObj_BusyStatusBusy         0x0001
#define ENUM_CalendarObj_BusyStatusOutOfOffice  0x0002
#define ENUM_CalendarObj_BusyStatusTentative    0x0003


/*  CalendarObj.PatternStartTime
 *
 *  Contains the time of day at which a recurring item is to start.  The
 *  format is the time portion of an ISO 8601 DateTime value- e.g. HHMMSS.S
 *
 *  Type: String
 *  Form: ISO 8601 Time
 */

DEFINE_DEVSVCPROPKEY(PKEY_CalendarObj_PatternStartTime,
    0xF99EFD03, 0x431D, 0x40D8, 0xA1, 0xC9, 0x4E, 0x22, 0x0D, 0x9C, 0x88, 0xD3,
    17);

#define NAME_CalendarObj_PatternStartTime   L"PatternStartTime"


/*  CalendarObj.PatternDuration
 *
 *  Contains the duration of the recurring item in minutes.
 *
 *  Type: UInt32
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_CalendarObj_PatternDuration,
    0xF99EFD03, 0x431D, 0x40D8, 0xA1, 0xC9, 0x4E, 0x22, 0x0D, 0x9C, 0x88, 0xD3,
    18);

#define NAME_CalendarObj_PatternDuration    L"PatternDuration"


/*  CalendarObj.BeginDateTime
 *
 *  Contains the UTC date and time that the calendar item begins
 *
 *  Type: String
 *  Form: DateTime
 */

DEFINE_DEVSVCPROPKEY(PKEY_CalendarObj_BeginDateTime,
    0xF99EFD03, 0x431D, 0x40D8, 0xA1, 0xC9, 0x4E, 0x22, 0x0D, 0x9C, 0x88, 0xD3,
    19);

#define NAME_CalendarObj_BeginDateTime      L"BeginDateTime"


/*  CalendarObj.EndDateTime
 *
 *  Contains the UTC date and time that the calendar item ends
 *
 *  Type: String
 *  Form: DateTime
 */

DEFINE_DEVSVCPROPKEY(PKEY_CalendarObj_EndDateTime,
    0xF99EFD03, 0x431D, 0x40D8, 0xA1, 0xC9, 0x4E, 0x22, 0x0D, 0x9C, 0x88, 0xD3,
    20);

#define NAME_CalendarObj_EndDateTime        L"EndDateTime"



#endif  /* _CALENDARDEVICESERVICE_H_ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bits2_5.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for bits2_5.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __bits2_5_h__
#define __bits2_5_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IBackgroundCopyJobHttpOptions_FWD_DEFINED__
#define __IBackgroundCopyJobHttpOptions_FWD_DEFINED__
typedef interface IBackgroundCopyJobHttpOptions IBackgroundCopyJobHttpOptions;
#endif 	/* __IBackgroundCopyJobHttpOptions_FWD_DEFINED__ */


#ifndef __BackgroundCopyManager2_5_FWD_DEFINED__
#define __BackgroundCopyManager2_5_FWD_DEFINED__

#ifdef __cplusplus
typedef class BackgroundCopyManager2_5 BackgroundCopyManager2_5;
#else
typedef struct BackgroundCopyManager2_5 BackgroundCopyManager2_5;
#endif /* __cplusplus */

#endif 	/* __BackgroundCopyManager2_5_FWD_DEFINED__ */


#ifndef __IBackgroundCopyJobHttpOptions_FWD_DEFINED__
#define __IBackgroundCopyJobHttpOptions_FWD_DEFINED__
typedef interface IBackgroundCopyJobHttpOptions IBackgroundCopyJobHttpOptions;
#endif 	/* __IBackgroundCopyJobHttpOptions_FWD_DEFINED__ */


/* header files for imported files */
#include "bits.h"
#include "bits1_5.h"
#include "bits2_0.h"

#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __IBackgroundCopyJobHttpOptions_INTERFACE_DEFINED__
#define __IBackgroundCopyJobHttpOptions_INTERFACE_DEFINED__

/* interface IBackgroundCopyJobHttpOptions */
/* [object][helpstring][uuid] */ 

typedef /* [public][public][public][public] */ 
enum __MIDL_IBackgroundCopyJobHttpOptions_0001
    {	BG_CERT_STORE_LOCATION_CURRENT_USER	= 0,
	BG_CERT_STORE_LOCATION_LOCAL_MACHINE	= ( BG_CERT_STORE_LOCATION_CURRENT_USER + 1 ) ,
	BG_CERT_STORE_LOCATION_CURRENT_SERVICE	= ( BG_CERT_STORE_LOCATION_LOCAL_MACHINE + 1 ) ,
	BG_CERT_STORE_LOCATION_SERVICES	= ( BG_CERT_STORE_LOCATION_CURRENT_SERVICE + 1 ) ,
	BG_CERT_STORE_LOCATION_USERS	= ( BG_CERT_STORE_LOCATION_SERVICES + 1 ) ,
	BG_CERT_STORE_LOCATION_CURRENT_USER_GROUP_POLICY	= ( BG_CERT_STORE_LOCATION_USERS + 1 ) ,
	BG_CERT_STORE_LOCATION_LOCAL_MACHINE_GROUP_POLICY	= ( BG_CERT_STORE_LOCATION_CURRENT_USER_GROUP_POLICY + 1 ) ,
	BG_CERT_STORE_LOCATION_LOCAL_MACHINE_ENTERPRISE	= ( BG_CERT_STORE_LOCATION_LOCAL_MACHINE_GROUP_POLICY + 1 ) 
    } 	BG_CERT_STORE_LOCATION;


EXTERN_C const IID IID_IBackgroundCopyJobHttpOptions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f1bd1079-9f01-4bdc-8036-f09b70095066")
    IBackgroundCopyJobHttpOptions : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetClientCertificateByID( 
            /* [in] */ BG_CERT_STORE_LOCATION StoreLocation,
            /* [in] */ __RPC__in LPCWSTR StoreName,
            /* [ref][size_is][in] */ __RPC__in_ecount_full(20) byte *pCertHashBlob) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetClientCertificateByName( 
            /* [in] */ BG_CERT_STORE_LOCATION StoreLocation,
            /* [in] */ __RPC__in LPCWSTR StoreName,
            /* [in] */ __RPC__in LPCWSTR SubjectName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveClientCertificate( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetClientCertificate( 
            /* [ref][out] */ __RPC__out BG_CERT_STORE_LOCATION *pStoreLocation,
            /* [ref][out] */ __RPC__deref_out_opt LPWSTR *pStoreName,
            /* [ref][size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(20) byte **ppCertHashBlob,
            /* [ref][out] */ __RPC__deref_out_opt LPWSTR *pSubjectName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCustomHeaders( 
            /* [unique][in] */ __RPC__in_opt LPCWSTR RequestHeaders) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCustomHeaders( 
            /* [ref][out] */ __RPC__deref_out_opt LPWSTR *pRequestHeaders) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSecurityFlags( 
            /* [in] */ ULONG Flags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSecurityFlags( 
            /* [ref][out] */ __RPC__out ULONG *pFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBackgroundCopyJobHttpOptionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBackgroundCopyJobHttpOptions * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBackgroundCopyJobHttpOptions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBackgroundCopyJobHttpOptions * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetClientCertificateByID )( 
            __RPC__in IBackgroundCopyJobHttpOptions * This,
            /* [in] */ BG_CERT_STORE_LOCATION StoreLocation,
            /* [in] */ __RPC__in LPCWSTR StoreName,
            /* [ref][size_is][in] */ __RPC__in_ecount_full(20) byte *pCertHashBlob);
        
        HRESULT ( STDMETHODCALLTYPE *SetClientCertificateByName )( 
            __RPC__in IBackgroundCopyJobHttpOptions * This,
            /* [in] */ BG_CERT_STORE_LOCATION StoreLocation,
            /* [in] */ __RPC__in LPCWSTR StoreName,
            /* [in] */ __RPC__in LPCWSTR SubjectName);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveClientCertificate )( 
            __RPC__in IBackgroundCopyJobHttpOptions * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetClientCertificate )( 
            __RPC__in IBackgroundCopyJobHttpOptions * This,
            /* [ref][out] */ __RPC__out BG_CERT_STORE_LOCATION *pStoreLocation,
            /* [ref][out] */ __RPC__deref_out_opt LPWSTR *pStoreName,
            /* [ref][size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(20) byte **ppCertHashBlob,
            /* [ref][out] */ __RPC__deref_out_opt LPWSTR *pSubjectName);
        
        HRESULT ( STDMETHODCALLTYPE *SetCustomHeaders )( 
            __RPC__in IBackgroundCopyJobHttpOptions * This,
            /* [unique][in] */ __RPC__in_opt LPCWSTR RequestHeaders);
        
        HRESULT ( STDMETHODCALLTYPE *GetCustomHeaders )( 
            __RPC__in IBackgroundCopyJobHttpOptions * This,
            /* [ref][out] */ __RPC__deref_out_opt LPWSTR *pRequestHeaders);
        
        HRESULT ( STDMETHODCALLTYPE *SetSecurityFlags )( 
            __RPC__in IBackgroundCopyJobHttpOptions * This,
            /* [in] */ ULONG Flags);
        
        HRESULT ( STDMETHODCALLTYPE *GetSecurityFlags )( 
            __RPC__in IBackgroundCopyJobHttpOptions * This,
            /* [ref][out] */ __RPC__out ULONG *pFlags);
        
        END_INTERFACE
    } IBackgroundCopyJobHttpOptionsVtbl;

    interface IBackgroundCopyJobHttpOptions
    {
        CONST_VTBL struct IBackgroundCopyJobHttpOptionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBackgroundCopyJobHttpOptions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBackgroundCopyJobHttpOptions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBackgroundCopyJobHttpOptions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBackgroundCopyJobHttpOptions_SetClientCertificateByID(This,StoreLocation,StoreName,pCertHashBlob)	\
    ( (This)->lpVtbl -> SetClientCertificateByID(This,StoreLocation,StoreName,pCertHashBlob) ) 

#define IBackgroundCopyJobHttpOptions_SetClientCertificateByName(This,StoreLocation,StoreName,SubjectName)	\
    ( (This)->lpVtbl -> SetClientCertificateByName(This,StoreLocation,StoreName,SubjectName) ) 

#define IBackgroundCopyJobHttpOptions_RemoveClientCertificate(This)	\
    ( (This)->lpVtbl -> RemoveClientCertificate(This) ) 

#define IBackgroundCopyJobHttpOptions_GetClientCertificate(This,pStoreLocation,pStoreName,ppCertHashBlob,pSubjectName)	\
    ( (This)->lpVtbl -> GetClientCertificate(This,pStoreLocation,pStoreName,ppCertHashBlob,pSubjectName) ) 

#define IBackgroundCopyJobHttpOptions_SetCustomHeaders(This,RequestHeaders)	\
    ( (This)->lpVtbl -> SetCustomHeaders(This,RequestHeaders) ) 

#define IBackgroundCopyJobHttpOptions_GetCustomHeaders(This,pRequestHeaders)	\
    ( (This)->lpVtbl -> GetCustomHeaders(This,pRequestHeaders) ) 

#define IBackgroundCopyJobHttpOptions_SetSecurityFlags(This,Flags)	\
    ( (This)->lpVtbl -> SetSecurityFlags(This,Flags) ) 

#define IBackgroundCopyJobHttpOptions_GetSecurityFlags(This,pFlags)	\
    ( (This)->lpVtbl -> GetSecurityFlags(This,pFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBackgroundCopyJobHttpOptions_INTERFACE_DEFINED__ */



#ifndef __BackgroundCopyManager2_5_LIBRARY_DEFINED__
#define __BackgroundCopyManager2_5_LIBRARY_DEFINED__

/* library BackgroundCopyManager2_5 */
/* [version][lcid][helpstring][uuid] */ 




EXTERN_C const IID LIBID_BackgroundCopyManager2_5;

EXTERN_C const CLSID CLSID_BackgroundCopyManager2_5;

#ifdef __cplusplus

class DECLSPEC_UUID("03ca98d6-ff5d-49b8-abc6-03dd84127020")
BackgroundCopyManager2_5;
#endif
#endif /* __BackgroundCopyManager2_5_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_bits2_5_0000_0001 */
/* [local] */ 

#define   BG_SSL_ENABLE_CRL_CHECK               0x0001
#define   BG_SSL_IGNORE_CERT_CN_INVALID         0x0002
#define   BG_SSL_IGNORE_CERT_DATE_INVALID       0x0004
#define   BG_SSL_IGNORE_UNKNOWN_CA              0x0008
#define   BG_SSL_IGNORE_CERT_WRONG_USAGE        0x0010
#define   BG_HTTP_REDIRECT_POLICY_MASK          0x0700
#define   BG_HTTP_REDIRECT_POLICY_ALLOW_SILENT  0x0000
#define   BG_HTTP_REDIRECT_POLICY_ALLOW_REPORT  0x0100
#define   BG_HTTP_REDIRECT_POLICY_DISALLOW      0x0200
#define   BG_HTTP_REDIRECT_POLICY_ALLOW_HTTPS_TO_HTTP  0x0800
#include "bits3_0.h"


extern RPC_IF_HANDLE __MIDL_itf_bits2_5_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_bits2_5_0000_0001_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bits4_0.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for bits4_0.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __bits4_0_h__
#define __bits4_0_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IBitsTokenOptions_FWD_DEFINED__
#define __IBitsTokenOptions_FWD_DEFINED__
typedef interface IBitsTokenOptions IBitsTokenOptions;
#endif 	/* __IBitsTokenOptions_FWD_DEFINED__ */


#ifndef __IBackgroundCopyFile4_FWD_DEFINED__
#define __IBackgroundCopyFile4_FWD_DEFINED__
typedef interface IBackgroundCopyFile4 IBackgroundCopyFile4;
#endif 	/* __IBackgroundCopyFile4_FWD_DEFINED__ */


#ifndef __BackgroundCopyManager4_0_FWD_DEFINED__
#define __BackgroundCopyManager4_0_FWD_DEFINED__

#ifdef __cplusplus
typedef class BackgroundCopyManager4_0 BackgroundCopyManager4_0;
#else
typedef struct BackgroundCopyManager4_0 BackgroundCopyManager4_0;
#endif /* __cplusplus */

#endif 	/* __BackgroundCopyManager4_0_FWD_DEFINED__ */


/* header files for imported files */
#include "bits.h"
#include "bits1_5.h"
#include "bits2_0.h"
#include "bits2_5.h"
#include "bits3_0.h"

#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __IBitsTokenOptions_INTERFACE_DEFINED__
#define __IBitsTokenOptions_INTERFACE_DEFINED__

/* interface IBitsTokenOptions */
/* [object][helpstring][uuid] */ 

#define BG_TOKEN_LOCAL_FILE      0x0001
#define BG_TOKEN_NETWORK         0x0002

EXTERN_C const IID IID_IBitsTokenOptions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9a2584c3-f7d2-457a-9a5e-22b67bffc7d2")
    IBitsTokenOptions : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetHelperTokenFlags( 
            DWORD UsageFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelperTokenFlags( 
            /* [out] */ __RPC__out DWORD *pFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelperToken( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ClearHelperToken( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelperTokenSid( 
            /* [out] */ __RPC__deref_out_opt LPWSTR *pSid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBitsTokenOptionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBitsTokenOptions * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBitsTokenOptions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBitsTokenOptions * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetHelperTokenFlags )( 
            __RPC__in IBitsTokenOptions * This,
            DWORD UsageFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetHelperTokenFlags )( 
            __RPC__in IBitsTokenOptions * This,
            /* [out] */ __RPC__out DWORD *pFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetHelperToken )( 
            __RPC__in IBitsTokenOptions * This);
        
        HRESULT ( STDMETHODCALLTYPE *ClearHelperToken )( 
            __RPC__in IBitsTokenOptions * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetHelperTokenSid )( 
            __RPC__in IBitsTokenOptions * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pSid);
        
        END_INTERFACE
    } IBitsTokenOptionsVtbl;

    interface IBitsTokenOptions
    {
        CONST_VTBL struct IBitsTokenOptionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBitsTokenOptions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBitsTokenOptions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBitsTokenOptions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBitsTokenOptions_SetHelperTokenFlags(This,UsageFlags)	\
    ( (This)->lpVtbl -> SetHelperTokenFlags(This,UsageFlags) ) 

#define IBitsTokenOptions_GetHelperTokenFlags(This,pFlags)	\
    ( (This)->lpVtbl -> GetHelperTokenFlags(This,pFlags) ) 

#define IBitsTokenOptions_SetHelperToken(This)	\
    ( (This)->lpVtbl -> SetHelperToken(This) ) 

#define IBitsTokenOptions_ClearHelperToken(This)	\
    ( (This)->lpVtbl -> ClearHelperToken(This) ) 

#define IBitsTokenOptions_GetHelperTokenSid(This,pSid)	\
    ( (This)->lpVtbl -> GetHelperTokenSid(This,pSid) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBitsTokenOptions_INTERFACE_DEFINED__ */


#ifndef __IBackgroundCopyFile4_INTERFACE_DEFINED__
#define __IBackgroundCopyFile4_INTERFACE_DEFINED__

/* interface IBackgroundCopyFile4 */
/* [object][helpstring][uuid] */ 


EXTERN_C const IID IID_IBackgroundCopyFile4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ef7e0655-7888-4960-b0e5-730846e03492")
    IBackgroundCopyFile4 : public IBackgroundCopyFile3
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPeerDownloadStats( 
            /* [out] */ __RPC__out PUINT64 pFromOrigin,
            /* [out] */ __RPC__out PUINT64 pFromPeers) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBackgroundCopyFile4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBackgroundCopyFile4 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBackgroundCopyFile4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBackgroundCopyFile4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetRemoteName )( 
            __RPC__in IBackgroundCopyFile4 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocalName )( 
            __RPC__in IBackgroundCopyFile4 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProgress )( 
            __RPC__in IBackgroundCopyFile4 * This,
            /* [out] */ __RPC__out BG_FILE_PROGRESS *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetFileRanges )( 
            __RPC__in IBackgroundCopyFile4 * This,
            /* [unique][out][in] */ __RPC__inout_opt DWORD *RangeCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*RangeCount) BG_FILE_RANGE **Ranges);
        
        HRESULT ( STDMETHODCALLTYPE *SetRemoteName )( 
            __RPC__in IBackgroundCopyFile4 * This,
            __RPC__in LPCWSTR Val);
        
        HRESULT ( STDMETHODCALLTYPE *GetTemporaryName )( 
            __RPC__in IBackgroundCopyFile4 * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *pFilename);
        
        HRESULT ( STDMETHODCALLTYPE *SetValidationState )( 
            __RPC__in IBackgroundCopyFile4 * This,
            /* [in] */ BOOL state);
        
        HRESULT ( STDMETHODCALLTYPE *GetValidationState )( 
            __RPC__in IBackgroundCopyFile4 * This,
            /* [out] */ __RPC__out BOOL *pState);
        
        HRESULT ( STDMETHODCALLTYPE *IsDownloadedFromPeer )( 
            __RPC__in IBackgroundCopyFile4 * This,
            /* [out] */ __RPC__out BOOL *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetPeerDownloadStats )( 
            __RPC__in IBackgroundCopyFile4 * This,
            /* [out] */ __RPC__out PUINT64 pFromOrigin,
            /* [out] */ __RPC__out PUINT64 pFromPeers);
        
        END_INTERFACE
    } IBackgroundCopyFile4Vtbl;

    interface IBackgroundCopyFile4
    {
        CONST_VTBL struct IBackgroundCopyFile4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBackgroundCopyFile4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBackgroundCopyFile4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBackgroundCopyFile4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBackgroundCopyFile4_GetRemoteName(This,pVal)	\
    ( (This)->lpVtbl -> GetRemoteName(This,pVal) ) 

#define IBackgroundCopyFile4_GetLocalName(This,pVal)	\
    ( (This)->lpVtbl -> GetLocalName(This,pVal) ) 

#define IBackgroundCopyFile4_GetProgress(This,pVal)	\
    ( (This)->lpVtbl -> GetProgress(This,pVal) ) 


#define IBackgroundCopyFile4_GetFileRanges(This,RangeCount,Ranges)	\
    ( (This)->lpVtbl -> GetFileRanges(This,RangeCount,Ranges) ) 

#define IBackgroundCopyFile4_SetRemoteName(This,Val)	\
    ( (This)->lpVtbl -> SetRemoteName(This,Val) ) 


#define IBackgroundCopyFile4_GetTemporaryName(This,pFilename)	\
    ( (This)->lpVtbl -> GetTemporaryName(This,pFilename) ) 

#define IBackgroundCopyFile4_SetValidationState(This,state)	\
    ( (This)->lpVtbl -> SetValidationState(This,state) ) 

#define IBackgroundCopyFile4_GetValidationState(This,pState)	\
    ( (This)->lpVtbl -> GetValidationState(This,pState) ) 

#define IBackgroundCopyFile4_IsDownloadedFromPeer(This,pVal)	\
    ( (This)->lpVtbl -> IsDownloadedFromPeer(This,pVal) ) 


#define IBackgroundCopyFile4_GetPeerDownloadStats(This,pFromOrigin,pFromPeers)	\
    ( (This)->lpVtbl -> GetPeerDownloadStats(This,pFromOrigin,pFromPeers) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBackgroundCopyFile4_INTERFACE_DEFINED__ */



#ifndef __BackgroundCopyManager4_0_LIBRARY_DEFINED__
#define __BackgroundCopyManager4_0_LIBRARY_DEFINED__

/* library BackgroundCopyManager4_0 */
/* [version][lcid][helpstring][uuid] */ 


EXTERN_C const IID LIBID_BackgroundCopyManager4_0;

EXTERN_C const CLSID CLSID_BackgroundCopyManager4_0;

#ifdef __cplusplus

class DECLSPEC_UUID("bb6df56b-cace-11dc-9992-0019b93a3a84")
BackgroundCopyManager4_0;
#endif
#endif /* __BackgroundCopyManager4_0_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\CallConv.Inc ===
;****************************CallConv.Inc************************************
;
;   Copyright (c) 1990-1995, Microsoft Corp. All rights reserved. 
;
;****************************************************************************

;****************************Public Macro************************************
;
;   ComposeInst Inst,p1,p2,p3,p4,p5,p6,p7,p8,p9
;
;       This macro simply concatenates all arguments into one string.
;
;
;****************************************************************************

ComposeInst macro   Inst,p1,p2,p3,p4,p5,p6,p7,p8,p9
        &Inst   p1&p2&p3&p4&p5&p6&p7&p8&p9
endm

;****************************Public Macro************************************
;
;   CountArg    cCount,ArgList
;
;       This macro count the number of arguments in the ArgList and returns
;       the value in cCount.
;
;
;****************************************************************************

CountArg    macro   cCount,ArgList

        cCount = 0

        irp arg,<ArgList>
            cCount = cCount+1
        endm
endm

;****************************Public Macro************************************
;
;   RevPush     ArgList,cCount
;
;       This macro pushes the arguments in ArgList in the reverse order
;       and returns the number of arguments in cCount.
;
;
;****************************************************************************

RevPush macro   ArgList,cCount
        Local   index,x

        CountArg cCount,<ArgList>

        index  = cCount
        rept    cCount
            x = 0
            irp arg,<ArgList>
                x = x+1
                ife index-x
                    push    arg
                    exitm
                endif
            endm
            index = index-1
        endm
endm

;****************************Public Macro************************************
;
;   The following sections contain calling-convention related macros for:
;
;   PUBLICP     Func,N
;       to define a public label
;
;   EXTRNP      Func,N,Thunk
;       to define a external near label
;
;   LABELP      Func,N
;       to label an address as a routine entry point
;
;   stdPROC       Func,N,ArgList
;       to declare a routine header
;
;   ProcName    Name,Func,N
;       to rename a function Func to Name. Using it in conjunction with
;       normal function declaration (with the new name) will solve an error
;       caused by a long parameter list routine that exhausts page width.
;
;   stdRET        Func
;       to return from Func routines (declared with stdPROC or ProcName.)
;
;   stdENDP     Func
;       to declare the end of routine (declared with stdPROC or ProcName.)
;
;   endMod      Func
;       to declare the end of module with an entry point at Func (declared
;       with stdPROC or ProcName.)
;
;   stdCall     Func,ArgList
;       to call to a routine--Func--with the arguments pushed on the stack
;
;   MovAddr     dest,Func,n
;       to move the address of the routine--Func--into dest.
;
;   Note that for the standard calling convention all the function names,
;   Func, are automatically converted to Func@N where N is the number of
;   bytes (decimal) in the argument list.
;
;
;****************************************************************************

if      @Version GE 600
        option  nokeyword:<stdcall>
endif

PUBLICP macro   Func,N

        ifb    <N>
            public      Func&@0
        else
            PUBLICP2    Func,%(N*4)
        endif
endm

PUBLICP2 macro   Func,N

        public  Func&@&N
endm

EXTRNP  macro   Func,N,Thunk,FastCall
        ifb    <N>
            IFNDEF  Func&@0
                extrn       Func&@0:NEAR
            ENDIF
        else
            ifb     <FastCall>
                ifb     <Thunk>
                    EXTRNP2     Func,%(N*4)
                else
                    EXTRNTHUNK  Func,%(N*4)
                endif
            else
                cFCall&@&Func equ   (N*4)
                ifb     <Thunk>
                    EXTRNP2     &@&Func,%(N*4)
                else
                    EXTRNTHUNK  &@&Func,%(N*4)
                endif
            endif
        endif
endm

EXTRNP2 macro   Func,N
        IFNDEF  Func&@&N
            extrn   Func&@&N:NEAR
        ENDIF
endm

EXTRNTHUNK macro   Func,N
        IFNDEF  __imp_&Func&@&N
            extrn       __imp_&Func&@&N:DWORD
        ENDIF
endm

LABELP  macro   Func,N

        ifb    <N>
            Func&@0 label   near
        else
            LABELP2 Func,%(N*4)
        endif
endm

LABELP2 macro   Func,N

Func&@&N    label   near

endm

ProcName macro  Name,Func,N

        ifb <N>
            cByte&Func  equ     0
            Name        equ     <Func&@0>
        else
            cByte&Func  equ     N
            Name        equ     <Func&@&N>
        endif
endm

stdPROC   macro   Func,N,ArgList

        ProcName    Func,Func,%(N*4)

        Func        proc    ArgList
endm

cPublicProc macro Func,N,ArgList
        align   dword
        PUBLICP Func,N
        ifb <N>
            stdPROC Func,0,<ArgList>
        else
            stdPROC Func,N,<ArgList>
        endif
endm

ProcNameF macro  Name,Func,N,M

        cByte&Func  equ     M
        cFCall&Func equ     N
        Name        equ     <Func&@&N>

endm

stdPROCF  macro   Func,N,ArgList

        if N gt 2
            ProcNameF   Func,Func,%(N*4),%((N-2)*4)
        else
            ProcNameF   Func,Func,%(N*4),0
        endif

        Func        proc    ArgList
endm

cPublicFastCall macro Func,N,ArgList
        align   dword
        PUBLICP &@&Func,N
        ifb <N>
            stdPROCF &@&Func,0,<ArgList>
        else
            stdPROCF &@&Func,N,<ArgList>
        endif
endm

fstRET  macro   Func
        ret     cByte&@&Func
endm

stdRET  macro   Func
        ret     cByte&Func
endm

cPublicFpo macro FpoLocals, FpoParams

.FPO ( FpoParams, FpoLocals, 0, 0, 0, 0 )

endm


fstENDP macro   Func

        &@&Func    endp
endm

stdENDP macro   Func

        Func    endp
endm

endMod  macro   Func

        end     Func
endm

stdCallCall macro  Func,N
    IFDEF   __imp_&Func&@&N
        call    dword ptr [__imp_&Func&@&N]
    ELSE
        call    Func&@&N
    ENDIF
endm


stdCall macro   Func,ArgList
        Local   Bytes

        RevPush <ArgList>,Bytes
        Bytes = Bytes*4

        stdCallCall   Func,%(Bytes)
endm

fstCall macro   Func,ArgList
        Local   Bytes

        RevPush <ArgList>,Bytes
        Bytes = Bytes*4

        if Bytes eq 0
            stdCallCall   &@&Func,%cFCall&@&Func
        else
            ; must have 2 register params
            stdCallCall   &@&Func,%(Bytes+8)
        endif
endm


MovAddr macro   dest,addr,n

        ComposeInst <mov >,dest,<,offset FLAT:>,addr,<@>,n
endm
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\BitsMsg.h ===
/***************************************************************************
*                                                                          *
*   bitsmsg.h --  error code definitions for the background file copier    *
*                                                                          *
*   Copyright (c) 2000, Microsoft Corp. All rights reserved.               *
*                                                                          *
***************************************************************************/

#ifndef _BGCPYMSG_
#define _BGCPYMSG_

#if defined (_MSC_VER) && (_MSC_VER >= 1020) && !defined(__midl)
#pragma once
#endif

//
//  Values are 32 bit values laid out as follows:
//
//   3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
//   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
//  +---+-+-+-----------------------+-------------------------------+
//  |Sev|C|R|     Facility          |               Code            |
//  +---+-+-+-----------------------+-------------------------------+
//
//  where
//
//      Sev - is the severity code
//
//          00 - Success
//          01 - Informational
//          10 - Warning
//          11 - Error
//
//      C - is the Customer code flag
//
//      R - is a reserved bit
//
//      Facility - is the facility code
//
//      Code - is the facility's status code
//
//
// Define the facility codes
//


//
// Define the severity codes
//


//
// MessageId: BG_E_NOT_FOUND
//
// MessageText:
//
// The requested job was not found.
//
#define BG_E_NOT_FOUND                   0x80200001L

//
// MessageId: BG_E_INVALID_STATE
//
// MessageText:
//
// The requested action is not allowed in the current job state. The job might have been canceled or completed transferring. It is in a read-only state now.
//
#define BG_E_INVALID_STATE               0x80200002L

//
// MessageId: BG_E_EMPTY
//
// MessageText:
//
// There are no files attached to this job. Attach files to the job, and then try again.
//
#define BG_E_EMPTY                       0x80200003L

//
// MessageId: BG_E_FILE_NOT_AVAILABLE
//
// MessageText:
//
// No file is available because no URL generated an error.
//
#define BG_E_FILE_NOT_AVAILABLE          0x80200004L

//
// MessageId: BG_E_PROTOCOL_NOT_AVAILABLE
//
// MessageText:
//
// No protocol is available because no URL generated an error.
//
#define BG_E_PROTOCOL_NOT_AVAILABLE      0x80200005L

//
// MessageId: BG_S_ERROR_CONTEXT_NONE
//
// MessageText:
//
// No errors have occurred.
//
#define BG_S_ERROR_CONTEXT_NONE          0x00200006L

//
// MessageId: BG_E_ERROR_CONTEXT_UNKNOWN
//
// MessageText:
//
// The error occurred in an unknown location.
//
#define BG_E_ERROR_CONTEXT_UNKNOWN       0x80200007L

//
// MessageId: BG_E_ERROR_CONTEXT_GENERAL_QUEUE_MANAGER
//
// MessageText:
//
// The error occurred in the Background Intelligent Transfer Service (BITS) queue manager.
//
#define BG_E_ERROR_CONTEXT_GENERAL_QUEUE_MANAGER 0x80200008L

//
// MessageId: BG_E_ERROR_CONTEXT_LOCAL_FILE
//
// MessageText:
//
// The error occurred while the local file was being processed. Verify that the file is not in use, and then try again.
//
#define BG_E_ERROR_CONTEXT_LOCAL_FILE    0x80200009L

//
// MessageId: BG_E_ERROR_CONTEXT_REMOTE_FILE
//
// MessageText:
//
// The error occurred while the remote file was being processed.
//
#define BG_E_ERROR_CONTEXT_REMOTE_FILE   0x8020000AL

//
// MessageId: BG_E_ERROR_CONTEXT_GENERAL_TRANSPORT
//
// MessageText:
//
// The error occurred in the transport layer. The client could not connect to the server.
//
#define BG_E_ERROR_CONTEXT_GENERAL_TRANSPORT 0x8020000BL

//
// MessageId: BG_E_ERROR_CONTEXT_QUEUE_MANAGER_NOTIFICATION
//
// MessageText:
//
// The error occurred while the notification callback was being processed. Background Intelligent Transfer Service (BITS) will try again later.
//
#define BG_E_ERROR_CONTEXT_QUEUE_MANAGER_NOTIFICATION 0x8020000CL

//
// MessageId: BG_E_DESTINATION_LOCKED
//
// MessageText:
//
// The destination file system volume is not available. Verify that another program, such as CheckDisk, is not running, which would lock the volume. When the volume is available, Background Intelligent Transfer Service (BITS) will try again.
//
#define BG_E_DESTINATION_LOCKED          0x8020000DL

//
// MessageId: BG_E_VOLUME_CHANGED
//
// MessageText:
//
// The destination volume has changed. If the disk is removable, it might have been replaced with a different disk. Reinsert the original disk and resume the job.
//
#define BG_E_VOLUME_CHANGED              0x8020000EL

//
// MessageId: BG_E_ERROR_INFORMATION_UNAVAILABLE
//
// MessageText:
//
// No errors have occurred.
//
#define BG_E_ERROR_INFORMATION_UNAVAILABLE 0x8020000FL

//
// MessageId: BG_E_NETWORK_DISCONNECTED
//
// MessageText:
//
// There are currently no active network connections. Background Intelligent Transfer Service (BITS) will try again when an adapter is connected.
//
#define BG_E_NETWORK_DISCONNECTED        0x80200010L

//
// MessageId: BG_E_MISSING_FILE_SIZE
//
// MessageText:
//
// The server did not return the file size. The URL might point to dynamic content. The Content-Length header is not available in the server's HTTP reply.
//
#define BG_E_MISSING_FILE_SIZE           0x80200011L

//
// MessageId: BG_E_INSUFFICIENT_HTTP_SUPPORT
//
// MessageText:
//
// The server does not support HTTP 1.1.
//
#define BG_E_INSUFFICIENT_HTTP_SUPPORT   0x80200012L

//
// MessageId: BG_E_INSUFFICIENT_RANGE_SUPPORT
//
// MessageText:
//
// The server does not support the necessary HTTP protocol. Background Intelligent Transfer Service (BITS) requires that the server support the Range protocol header.
//
#define BG_E_INSUFFICIENT_RANGE_SUPPORT  0x80200013L

//
// MessageId: BG_E_REMOTE_NOT_SUPPORTED
//
// MessageText:
//
// Background Intelligent Transfer Service (BITS) cannot be used remotely.
//
#define BG_E_REMOTE_NOT_SUPPORTED        0x80200014L

//
// MessageId: BG_E_NEW_OWNER_DIFF_MAPPING
//
// MessageText:
//
// The drive mapping for the job is different for the current owner than for the previous owner. Use a UNC path instead.
//
#define BG_E_NEW_OWNER_DIFF_MAPPING      0x80200015L

//
// MessageId: BG_E_NEW_OWNER_NO_FILE_ACCESS
//
// MessageText:
//
// The new owner has insufficient access to the local files for the job. The new owner might not have permissions to access the job files. Verify that the new owner has sufficient permissions, and then try again.
//
#define BG_E_NEW_OWNER_NO_FILE_ACCESS    0x80200016L

//
// MessageId: BG_S_PARTIAL_COMPLETE
//
// MessageText:
//
// Some of the transferred files were deleted because they were incomplete.
//
#define BG_S_PARTIAL_COMPLETE            0x00200017L

//
// MessageId: BG_E_PROXY_LIST_TOO_LARGE
//
// MessageText:
//
// The HTTP proxy list cannot be longer than 32,000 characters. Try again with a shorter proxy list.
//
#define BG_E_PROXY_LIST_TOO_LARGE        0x80200018L

//
// MessageId: BG_E_PROXY_BYPASS_LIST_TOO_LARGE
//
// MessageText:
//
// The HTTP proxy bypass list cannot be longer than 32,000 characters. Try again with a shorter bypass proxy list.
//
#define BG_E_PROXY_BYPASS_LIST_TOO_LARGE 0x80200019L

//
// MessageId: BG_S_UNABLE_TO_DELETE_FILES
//
// MessageText:
//
// Some of the temporary files could not be deleted. Check the system event log for the complete list of files that could not be deleted.
//
#define BG_S_UNABLE_TO_DELETE_FILES      0x0020001AL

//
// MessageId: BG_E_INVALID_SERVER_RESPONSE
//
// MessageText:
//
// The server's response was not valid. The server was not following the defined protocol. Resume the job, and then Background Intelligent Transfer Service (BITS) will try again.
//
#define BG_E_INVALID_SERVER_RESPONSE     0x8020001BL

//
// MessageId: BG_E_TOO_MANY_FILES
//
// MessageText:
//
// No more files can be added to this job.
//
#define BG_E_TOO_MANY_FILES              0x8020001CL

//
// MessageId: BG_E_LOCAL_FILE_CHANGED
//
// MessageText:
//
// The local file was changed during the transfer. Recreate the job, and then try to transfer it again.
//
#define BG_E_LOCAL_FILE_CHANGED          0x8020001DL

//
// MessageId: BG_E_ERROR_CONTEXT_REMOTE_APPLICATION
//
// MessageText:
//
// The program on the remote server reported the error.
//
#define BG_E_ERROR_CONTEXT_REMOTE_APPLICATION 0x8020001EL

//
// MessageId: BG_E_SESSION_NOT_FOUND
//
// MessageText:
//
// The specified session could not be found on the server. Background Intelligent Transfer Service (BITS) will try again.
//
#define BG_E_SESSION_NOT_FOUND           0x8020001FL

//
// MessageId: BG_E_TOO_LARGE
//
// MessageText:
//
// The job is too large for the server to accept. This job might exceed a job size limit set by the server administrator. Reduce the size of the job, and then try again.
//
#define BG_E_TOO_LARGE                   0x80200020L

//
// MessageId: BG_E_STRING_TOO_LONG
//
// MessageText:
//
// The specified string is too long.
//
#define BG_E_STRING_TOO_LONG             0x80200021L

//
// MessageId: BG_E_CLIENT_SERVER_PROTOCOL_MISMATCH
//
// MessageText:
//
// The client and server versions of Background Intelligent Transfer Service (BITS) are incompatible.
//
#define BG_E_CLIENT_SERVER_PROTOCOL_MISMATCH 0x80200022L

//
// MessageId: BG_E_SERVER_EXECUTE_ENABLE
//
// MessageText:
//
// Scripting OR execute permissions are enabled on the IIS virtual directory associated with the job. To upload files to the virtual directory, disable the scripting and execute permissions on the virtual directory.
//
#define BG_E_SERVER_EXECUTE_ENABLE       0x80200023L

//
// MessageId: BG_E_NO_PROGRESS
//
// MessageText:
//
// The job is not making headway.  The server may be misconfigured.  Background Intelligent Transfer Service (BITS) will try again later.
//
#define BG_E_NO_PROGRESS                 0x80200024L

//
// MessageId: BG_E_USERNAME_TOO_LARGE
//
// MessageText:
//
// The user name cannot be longer than 300 characters. Try again with a shorter name.
//
#define BG_E_USERNAME_TOO_LARGE          0x80200025L

//
// MessageId: BG_E_PASSWORD_TOO_LARGE
//
// MessageText:
//
// The password cannot be longer than 65536 characters. Try again with a shorter password.
//
#define BG_E_PASSWORD_TOO_LARGE          0x80200026L

//
// MessageId: BG_E_INVALID_AUTH_TARGET
//
// MessageText:
//
// The authentication target specified in the credentials is not defined.
//
#define BG_E_INVALID_AUTH_TARGET         0x80200027L

//
// MessageId: BG_E_INVALID_AUTH_SCHEME
//
// MessageText:
//
// The authentication scheme specified in the credentials is not defined.
//
#define BG_E_INVALID_AUTH_SCHEME         0x80200028L

//
// MessageId: BG_E_FILE_NOT_FOUND
//
// MessageText:
//
// The specified file name does not match any of the files in the job.
//
#define BG_E_FILE_NOT_FOUND              0x80200029L

//
// MessageId: BG_S_PROXY_CHANGED
//
// MessageText:
//
// The proxy server was changed.
//
#define BG_S_PROXY_CHANGED               0x0020002AL

//
// MessageId: BG_E_INVALID_RANGE
//
// MessageText:
//
// The requested byte range extends beyond the end of the web page.  Use byte ranges that are wholly within the page.
//
#define BG_E_INVALID_RANGE               0x8020002BL

//
// MessageId: BG_E_OVERLAPPING_RANGES
//
// MessageText:
//
// The list of byte ranges contains some overlapping ranges, which are not supported.
//
#define BG_E_OVERLAPPING_RANGES          0x8020002CL

//
// MessageId: BG_E_CONNECT_FAILURE
//
// MessageText:
//
// A connection could not be established.
//
#define BG_E_CONNECT_FAILURE             0x8020002DL

//
// MessageId: BG_E_CONNECTION_CLOSED
//
// MessageText:
//
// The connection was closed prematurely.
//
#define BG_E_CONNECTION_CLOSED           0x8020002EL

//
// Codes 2F through 3D are reserved for future use.
//
//
// MessageId: BG_E_BLOCKED_BY_POLICY
//
// MessageText:
//
// Group Policy settings prevent background jobs from running at this time.
//
#define BG_E_BLOCKED_BY_POLICY           0x8020003EL

//
// MessageId: BG_E_INVALID_PROXY_INFO
//
// MessageText:
//
// The supplied proxy server or bypass list is invalid.
//
#define BG_E_INVALID_PROXY_INFO          0x8020003FL

//
// MessageId: BG_E_INVALID_CREDENTIALS
//
// MessageText:
//
// The format of the supplied security credentials is invalid.
//
#define BG_E_INVALID_CREDENTIALS         0x80200040L

//
// MessageId: BG_E_INVALID_HASH_ALGORITHM
//
// MessageText:
//
// The application chose an unsupported hashing algorithm.
//
#define BG_E_INVALID_HASH_ALGORITHM      0x80200041L

//
// MessageId: BG_E_RECORD_DELETED
//
// MessageText:
//
// The chosen cache record has been deleted.  The attempt to update it has been abandoned.
//
#define BG_E_RECORD_DELETED              0x80200042L

//
// MessageId: BG_E_COMMIT_IN_PROGRESS
//
// MessageText:
//
// Another application thread is already updating the cache record.  
//
#define BG_E_COMMIT_IN_PROGRESS          0x80200043L

//
// MessageId: BG_E_DISCOVERY_IN_PROGRESS
//
// MessageText:
//
// The system is already searching for neighbors.  Retry the operation after a few seconds.
//
#define BG_E_DISCOVERY_IN_PROGRESS       0x80200044L

//
// MessageId: BG_E_UPNP_ERROR
//
// MessageText:
//
// A Universal Plug and Play (UPnP) error has occured.  Please check your Internet Gateway Device.
//
#define BG_E_UPNP_ERROR                  0x80200045L

//
// MessageId: BG_E_TEST_OPTION_BLOCKED_DOWNLOAD
//
// MessageText:
//
// The test option is blocking the download after the search completed.
//
#define BG_E_TEST_OPTION_BLOCKED_DOWNLOAD 0x80200046L

//
// MessageId: BG_E_PEERCACHING_DISABLED
//
// MessageText:
//
// Peer-caching is disabled.
//
#define BG_E_PEERCACHING_DISABLED        0x80200047L

//
// MessageId: BG_E_BUSYCACHERECORD
//
// MessageText:
//
// The cache record is in use and can not be changed or deleted at this time.  Try again after a few seconds.
//
#define BG_E_BUSYCACHERECORD             0x80200048L

//
// MessageId: BG_E_TOO_MANY_JOBS_PER_USER
//
// MessageText:
//
// Job count for the current user has exceeded the per user job limit.
//
#define BG_E_TOO_MANY_JOBS_PER_USER      0x80200049L

//
// MessageId: BG_E_TOO_MANY_JOBS_PER_MACHINE
//
// MessageText:
//
// Job count for the current machine has exceeded the per machine job limit.
//
#define BG_E_TOO_MANY_JOBS_PER_MACHINE   0x80200050L

//
// MessageId: BG_E_TOO_MANY_FILES_IN_JOB
//
// MessageText:
//
// File count for the current job has exceeded the per job file limit.
//
#define BG_E_TOO_MANY_FILES_IN_JOB       0x80200051L

//
// MessageId: BG_E_TOO_MANY_RANGES_IN_FILE
//
// MessageText:
//
// Range count for the current file has exceeded the per file Range limit.
//
#define BG_E_TOO_MANY_RANGES_IN_FILE     0x80200052L

//
// MessageId: BG_E_VALIDATION_FAILED
//
// MessageText:
//
// The application requested data from a web site, but the response was invalid. Using Event Viewer, check the log 'Application Logs \ Microsoft \ Windows \ Bits-client \ Operational' for more details.
//
#define BG_E_VALIDATION_FAILED           0x80200053L

//
// MessageId: BG_E_MAXDOWNLOAD_TIMEOUT
//
// MessageText:
//
// BITS timed out downloading the job. The download did not complete within the maximum download time set on the job.
//
#define BG_E_MAXDOWNLOAD_TIMEOUT         0x80200054L

//
// MessageId: BG_S_OVERRIDDEN_BY_POLICY
//
// MessageText:
//
// The configuration preferences have been saved successfully, but one or more of them are overridden by Group Policy.
//
#define BG_S_OVERRIDDEN_BY_POLICY        0x00200055L

//
// MessageId: BG_E_TOKEN_REQUIRED
//
// MessageText:
//
// The job is configured to use a different security token for some operations, but the token is not currently available.  The application must provide a token and then resume the job.
//
#define BG_E_TOKEN_REQUIRED              0x80200056L

//
// MessageId: BG_E_HTTP_ERROR_100
//
// MessageText:
//
// HTTP status 100: The request can be continued.
//
#define BG_E_HTTP_ERROR_100              0x80190064L

//
// MessageId: BG_E_HTTP_ERROR_101
//
// MessageText:
//
// HTTP status 101: The server switched protocols in an upgrade header.
//
#define BG_E_HTTP_ERROR_101              0x80190065L

//
// MessageId: BG_E_HTTP_ERROR_200
//
// MessageText:
//
// HTTP status 200: The server's response was not valid. The server was not following the defined protocol. Resume the job, and then Background Intelligent Transfer Service (BITS) will try again.
//
#define BG_E_HTTP_ERROR_200              0x801900C8L

//
// MessageId: BG_E_HTTP_ERROR_201
//
// MessageText:
//
// HTTP status 201: The request was fulfilled and resulted in the creation of a new resource.
//
#define BG_E_HTTP_ERROR_201              0x801900C9L

//
// MessageId: BG_E_HTTP_ERROR_202
//
// MessageText:
//
// HTTP status 202: The request was accepted for processing, but the processing has not been completed yet.
//
#define BG_E_HTTP_ERROR_202              0x801900CAL

//
// MessageId: BG_E_HTTP_ERROR_203
//
// MessageText:
//
// HTTP status 203: The returned metadata in the entity-header is not the definitive set available from the server of origin.
//
#define BG_E_HTTP_ERROR_203              0x801900CBL

//
// MessageId: BG_E_HTTP_ERROR_204
//
// MessageText:
//
// HTTP status 204: The server has fulfilled the request, but there is no new information to send back.
//
#define BG_E_HTTP_ERROR_204              0x801900CCL

//
// MessageId: BG_E_HTTP_ERROR_205
//
// MessageText:
//
// HTTP status 205: The server's response was not valid. The server was not following the defined protocol. Resume the job, and then Background Intelligent Transfer Service (BITS) will try again.
//
#define BG_E_HTTP_ERROR_205              0x801900CDL

//
// MessageId: BG_E_HTTP_ERROR_206
//
// MessageText:
//
// HTTP status 206: The server fulfilled the partial GET request for the resource.
//
#define BG_E_HTTP_ERROR_206              0x801900CEL

//
// MessageId: BG_E_HTTP_ERROR_300
//
// MessageText:
//
// HTTP status 300: The server could not return the requested data.
//
#define BG_E_HTTP_ERROR_300              0x8019012CL

//
// MessageId: BG_E_HTTP_ERROR_301
//
// MessageText:
//
// HTTP status 301: The requested resource was assigned to a new permanent Uniform Resource Identifier (URI), and any future references to this resource should use one of the returned URIs.
//
#define BG_E_HTTP_ERROR_301              0x8019012DL

//
// MessageId: BG_E_HTTP_ERROR_302
//
// MessageText:
//
// HTTP status 302: The requested resource was assigned a different Uniform Resource Identifier (URI). This change is temporary.
//
#define BG_E_HTTP_ERROR_302              0x8019012EL

//
// MessageId: BG_E_HTTP_ERROR_303
//
// MessageText:
//
// HTTP status 303: The response to the request is under a different Uniform Resource Identifier (URI) and must be retrieved using a GET method on that resource.
//
#define BG_E_HTTP_ERROR_303              0x8019012FL

//
// MessageId: BG_E_HTTP_ERROR_304
//
// MessageText:
//
// HTTP status 304: The server's response was not valid. The server was not following the defined protocol. Resume the job, and then Background Intelligent Transfer Service (BITS) will try again.
//
#define BG_E_HTTP_ERROR_304              0x80190130L

//
// MessageId: BG_E_HTTP_ERROR_305
//
// MessageText:
//
// HTTP status 305: The requested resource must be accessed through the proxy given by the location field.
//
#define BG_E_HTTP_ERROR_305              0x80190131L

//
// MessageId: BG_E_HTTP_ERROR_307
//
// MessageText:
//
// HTTP status 307: The URL has been temporarily relocated. Try again later.
//
#define BG_E_HTTP_ERROR_307              0x80190133L

//
// MessageId: BG_E_HTTP_ERROR_400
//
// MessageText:
//
// HTTP status 400: The server cannot process the request because the syntax is not valid.
//
#define BG_E_HTTP_ERROR_400              0x80190190L

//
// MessageId: BG_E_HTTP_ERROR_401
//
// MessageText:
//
// HTTP status 401: The requested resource requires user authentication.
//
#define BG_E_HTTP_ERROR_401              0x80190191L

//
// MessageId: BG_E_HTTP_ERROR_402
//
// MessageText:
//
// HTTP status 402: The server's response was not valid. The server was not following the defined protocol. Resume the job, and then Background Intelligent Transfer Service (BITS) will try again.
//
#define BG_E_HTTP_ERROR_402              0x80190192L

//
// MessageId: BG_E_HTTP_ERROR_403
//
// MessageText:
//
// HTTP status 403: The client does not have sufficient access rights to the requested server object.
//
#define BG_E_HTTP_ERROR_403              0x80190193L

//
// MessageId: BG_E_HTTP_ERROR_404
//
// MessageText:
//
// HTTP status 404: The requested URL does not exist on the server.
//
#define BG_E_HTTP_ERROR_404              0x80190194L

//
// MessageId: BG_E_HTTP_ERROR_405
//
// MessageText:
//
// HTTP status 405: The method used is not allowed.
//
#define BG_E_HTTP_ERROR_405              0x80190195L

//
// MessageId: BG_E_HTTP_ERROR_406
//
// MessageText:
//
// HTTP status 406: No responses acceptable to the client were found.
//
#define BG_E_HTTP_ERROR_406              0x80190196L

//
// MessageId: BG_E_HTTP_ERROR_407
//
// MessageText:
//
// HTTP status 407: Proxy authentication is required.
//
#define BG_E_HTTP_ERROR_407              0x80190197L

//
// MessageId: BG_E_HTTP_ERROR_408
//
// MessageText:
//
// HTTP status 408: The server timed out waiting for the request.
//
#define BG_E_HTTP_ERROR_408              0x80190198L

//
// MessageId: BG_E_HTTP_ERROR_409
//
// MessageText:
//
// HTTP status 409: The request could not be completed because of a conflict with the current state of the resource. The user should resubmit the request with more information.
//
#define BG_E_HTTP_ERROR_409              0x80190199L

//
// MessageId: BG_E_HTTP_ERROR_410
//
// MessageText:
//
// HTTP status 410: The requested resource is not currently available at the server, and no forwarding address is known.
//
#define BG_E_HTTP_ERROR_410              0x8019019AL

//
// MessageId: BG_E_HTTP_ERROR_411
//
// MessageText:
//
// HTTP status 411: The server cannot accept the request without a defined content length.
//
#define BG_E_HTTP_ERROR_411              0x8019019BL

//
// MessageId: BG_E_HTTP_ERROR_412
//
// MessageText:
//
// HTTP status 412: The precondition given in one or more of the request header fields evaluated to false when it was tested on the server.
//
#define BG_E_HTTP_ERROR_412              0x8019019CL

//
// MessageId: BG_E_HTTP_ERROR_413
//
// MessageText:
//
// HTTP status 413: The server cannot process the request because the request entity is too large.
//
#define BG_E_HTTP_ERROR_413              0x8019019DL

//
// MessageId: BG_E_HTTP_ERROR_414
//
// MessageText:
//
// HTTP status 414: The server cannot process the request because the request Uniform Resource Identifier (URI) is longer than the server can interpret.
//
#define BG_E_HTTP_ERROR_414              0x8019019EL

//
// MessageId: BG_E_HTTP_ERROR_415
//
// MessageText:
//
// HTTP status 415: The server's response was not valid. The server was not following the defined protocol. Resume the job, and then Background Intelligent Transfer Service (BITS) will try again.
//
#define BG_E_HTTP_ERROR_415              0x8019019FL

//
// MessageId: BG_E_HTTP_ERROR_416
//
// MessageText:
//
// HTTP status 416: The server could not satisfy the range request.
//
#define BG_E_HTTP_ERROR_416              0x801901A0L

//
// MessageId: BG_E_HTTP_ERROR_417
//
// MessageText:
//
// HTTP status 417: The server could not meet the expectation given in an Expect request-header field.
//
#define BG_E_HTTP_ERROR_417              0x801901A1L

//
// MessageId: BG_E_HTTP_ERROR_449
//
// MessageText:
//
// HTTP status 449: The server's response was not valid. The server was not following the defined protocol. Resume the job, and then Background Intelligent Transfer Service (BITS) will try again.
//
#define BG_E_HTTP_ERROR_449              0x801901C1L

//
// MessageId: BG_E_HTTP_ERROR_500
//
// MessageText:
//
// HTTP status 500: An unexpected condition prevented the server from fulfilling the request.
//
#define BG_E_HTTP_ERROR_500              0x801901F4L

//
// MessageId: BG_E_HTTP_ERROR_501
//
// MessageText:
//
// HTTP status 501: The server does not support the functionality required to fulfill the request.
//
#define BG_E_HTTP_ERROR_501              0x801901F5L

//
// MessageId: BG_E_HTTP_ERROR_502
//
// MessageText:
//
// HTTP status 502: The server, while acting as a gateway or proxy to fulfill the request, received an invalid response from the upstream server it accessed.
//
#define BG_E_HTTP_ERROR_502              0x801901F6L

//
// MessageId: BG_E_HTTP_ERROR_503
//
// MessageText:
//
// HTTP status 503: The service is temporarily overloaded.
//
#define BG_E_HTTP_ERROR_503              0x801901F7L

//
// MessageId: BG_E_HTTP_ERROR_504
//
// MessageText:
//
// HTTP status 504: The request was timed out waiting for a gateway.
//
#define BG_E_HTTP_ERROR_504              0x801901F8L

//
// MessageId: BG_E_HTTP_ERROR_505
//
// MessageText:
//
// HTTP status 505: The server does not support the HTTP protocol version that was used in the request message.
//
#define BG_E_HTTP_ERROR_505              0x801901F9L

//
// Additional Background Intelligent Transfer Service (BITS) mc entries
// Reserved range is 0x4000 to 0x4100
//
//
// MessageId: BITS_MC_JOB_CANCELLED
//
// MessageText:
//
// The administrator %4 canceled job "%2" on behalf of %3.  The job ID was %1.
//
#define BITS_MC_JOB_CANCELLED            0x80194000L

//
// MessageId: BITS_MC_FILE_DELETION_FAILED
//
// MessageText:
//
// While canceling job "%2", BITS was not able to remove the temporary files listed below.
// If you can delete them, then you will regain some disk space.  The job ID was %1.
// 
// %3
//
#define BITS_MC_FILE_DELETION_FAILED     0x80194001L

//
// MessageId: BITS_MC_FILE_DELETION_FAILED_MORE
//
// MessageText:
//
// While canceling job "%2", BITS was not able to remove the temporary files listed below.
// If you can delete them, then you will regain some disk space.  The job ID was %1.
// 
// %3
// 
// Due to space limitations, not all files are listed here.  Check for additional files of the form BITxxx.TMP in the same directory.
//
#define BITS_MC_FILE_DELETION_FAILED_MORE 0x80194002L

//
// MessageId: BITS_MC_JOB_PROPERTY_CHANGE
//
// MessageText:
//
// The administrator %3 modified the %4 property of job "%2".  The job ID was %1.
//
#define BITS_MC_JOB_PROPERTY_CHANGE      0x80194003L

//
// MessageId: BITS_MC_JOB_TAKE_OWNERSHIP
//
// MessageText:
//
// The administrator %4 took ownership of job "%2" from %3.  The job ID was %1.
//
#define BITS_MC_JOB_TAKE_OWNERSHIP       0x80194004L

//
// MessageId: BITS_MC_JOB_SCAVENGED
//
// MessageText:
//
// Job "%2" owned by %3 was canceled after being inactive for more than %4 days.  The job ID was %1.
//
#define BITS_MC_JOB_SCAVENGED            0x80194005L

//
// MessageId: BITS_MC_JOB_NOTIFICATION_FAILURE
//
// MessageText:
//
// Job "%2" owned by %3 failed to notify its associated application.  BITS will retry in %4 minutes.  The job ID was %1.
//
#define BITS_MC_JOB_NOTIFICATION_FAILURE 0x80194006L

//
// MessageId: BITS_MC_STATE_FILE_CORRUPT
//
// MessageText:
//
// The BITS job list is not in a recognized format.  It may have been created by a different version of BITS.  The job list has been cleared.
//
#define BITS_MC_STATE_FILE_CORRUPT       0x80194007L

//
// MessageId: BITS_MC_FAILED_TO_START
//
// MessageText:
//
// The BITS service failed to start. Try restarting the service at a later time.
//
#define BITS_MC_FAILED_TO_START          0x80194008L

//
// MessageId: BITS_MC_FATAL_IGD_ERROR
//
// MessageText:
//
// BITS has hit a fatal error communicating with an Internet Gateway Device.  Please check that the device is functioning properly. BITS will not attempt to use this device until the next system reboot.
//
#define BITS_MC_FATAL_IGD_ERROR          0x80194009L

//
// MessageId: BITS_MC_PEERCACHING_PORT
//
// MessageText:
//
// BITS Peer-caching protocol
//
#define BITS_MC_PEERCACHING_PORT         0x8019400AL

//
// MessageId: BITS_MC_WSD_PORT
//
// MessageText:
//
// Web Services-Discovery protocol
//
#define BITS_MC_WSD_PORT                 0x8019400BL

#endif //_BGCPYMSG_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bthdef.h ===
/*++

Copyright (c) 2000  Microsoft Corporation

Module Name:

   bthdef.h

Abstract:

    This module contains the Bluetooth common structures and definitions

Author:

Notes:

Environment:

    Kernel mode only


Revision History:

  --*/

#ifndef   __BTHDEF_H__
#define   __BTHDEF_H__


//
// Bluetooth 2.1 support added in KB942567
//
#if (NTDDI_VERSION > NTDDI_VISTASP1 || \
    (NTDDI_VERSION == NTDDI_VISTASP1 && defined(VISTA_KB942567)))

  #define BTH_MAJORVERSION 2
  #define BTH_MINORVERSION 1

#elif(NTDDI_VERSION >= NTDDI_WINXPSP2)

  #define BTH_MAJORVERSION 2
  #define BTH_MINORVERSION 0

#endif // >= SP1+KB942567

#if _MSC_VER >= 1200
#pragma warning(push)
#endif
#pragma warning(disable:4201) // nameless struct/union


#if (NTDDI_VERSION >= NTDDI_WINXPSP2)


#ifndef GUID_DEFS_ONLY
  #ifndef NO_BTHSDPDEF_INC
    #include "bthsdpdef.h"
  #endif // NO_BTHSDPDEF_INC
#endif // GUID_DEFS_ONLY

#ifndef NO_GUID_DEFS

// {0850302A-B344-4fda-9BE9-90576B8D46F0}
DEFINE_GUID(GUID_BTHPORT_DEVICE_INTERFACE,          0x850302a, 0xb344, 0x4fda, 0x9b, 0xe9, 0x90, 0x57, 0x6b, 0x8d, 0x46, 0xf0);

// {EA3B5B82-26EE-450E-B0D8-D26FE30A3869}
DEFINE_GUID(GUID_BLUETOOTH_RADIO_IN_RANGE,          0xea3b5b82, 0x26ee, 0x450e, 0xb0, 0xd8, 0xd2, 0x6f, 0xe3, 0x0a, 0x38, 0x69);

// {E28867C9-C2AA-4CED-B969-4570866037C4}
DEFINE_GUID(GUID_BLUETOOTH_RADIO_OUT_OF_RANGE,      0xe28867c9, 0xc2aa, 0x4ced, 0xb9, 0x69, 0x45, 0x70, 0x86, 0x60, 0x37, 0xc4);

// {7EAE4030-B709-4AA8-AC55-E953829C9DAA}
DEFINE_GUID(GUID_BLUETOOTH_L2CAP_EVENT,             0x7eae4030, 0xb709, 0x4aa8, 0xac, 0x55, 0xe9, 0x53, 0x82, 0x9c, 0x9d, 0xaa);

// {FC240062-1541-49BE-B463-84C4DCD7BF7F}
DEFINE_GUID(GUID_BLUETOOTH_HCI_EVENT,               0xfc240062, 0x1541, 0x49be, 0xb4, 0x63, 0x84, 0xc4, 0xdc, 0xd7, 0xbf, 0x7f);

//
// Support added in KB942567
//
#if (NTDDI_VERSION > NTDDI_VISTASP1 || \
    (NTDDI_VERSION == NTDDI_VISTASP1 && defined(VISTA_KB942567)))

// {5DC9136D-996C-46DB-84F5-32C0A3F47352}
DEFINE_GUID(GUID_BLUETOOTH_AUTHENTICATION_REQUEST,   0x5DC9136D, 0x996C, 0x46DB, 0x84, 0xF5, 0x32, 0xC0, 0xA3, 0xF4, 0x73, 0x52);

// {D668DFCD-0F4E-4EFC-BFE0-392EEEC5109C}
DEFINE_GUID(GUID_BLUETOOTH_KEYPRESS_EVENT,          0xD668DFCD, 0x0F4E, 0x4EFC, 0xBF, 0xE0, 0x39, 0x2E, 0xEE, 0xC5, 0x10, 0x9C); 

// {547247e6-45bb-4c33-af8c-c00efe15a71d}
DEFINE_GUID(GUID_BLUETOOTH_HCI_VENDOR_EVENT,        0x547247e6, 0x45bb, 0x4c33, 0xaf, 0x8c, 0xc0, 0x0e, 0xfe, 0x15, 0xa7, 0x1d);

#endif // >= SP1+KB942567


//
// Bluetooth base UUID for service discovery
//
DEFINE_GUID(Bluetooth_Base_UUID,   0x00000000, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);

//
// UUID for the root of the browse group list
//

DEFINE_GUID(SDP_PROTOCOL_UUID,    0x00000001, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(UDP_PROTOCOL_UUID,    0x00000002, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(RFCOMM_PROTOCOL_UUID, 0x00000003, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(TCP_PROTOCOL_UUID,    0x00000004, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(TCSBIN_PROTOCOL_UUID, 0x00000005, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(TCSAT_PROTOCOL_UUID,  0x00000006, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(OBEX_PROTOCOL_UUID,   0x00000008, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(IP_PROTOCOL_UUID,     0x00000009, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(FTP_PROTOCOL_UUID,    0x0000000A, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(HTTP_PROTOCOL_UUID,   0x0000000C, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(WSP_PROTOCOL_UUID,    0x0000000E, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(BNEP_PROTOCOL_UUID,   0x0000000F, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(UPNP_PROTOCOL_UUID,   0x00000010, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(HID_PROTOCOL_UUID,    0x00000011, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(HCCC_PROTOCOL_UUID,   0x00000012, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(HCDC_PROTOCOL_UUID,   0x00000014, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(HN_PROTOCOL_UUID,     0x00000016, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(AVCTP_PROTOCOL_UUID,  0x00000017, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(AVDTP_PROTOCOL_UUID,  0x00000019, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(CMPT_PROTOCOL_UUID,   0x0000001B, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(UDI_C_PLANE_PROTOCOL_UUID, 0x0000001D, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(L2CAP_PROTOCOL_UUID,  0x00000100, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);

#define SDP_PROTOCOL_UUID16                 (0x0001)
#define UDP_PROTOCOL_UUID16                 (0x0002)
#define RFCOMM_PROTOCOL_UUID16              (0x0003)
#define TCP_PROTOCOL_UUID16                 (0x0004)
#define TCSBIN_PROTOCOL_UUID16              (0x0005)
#define TCSAT_PROTOCOL_UUID16               (0x0006)
#define OBEX_PROTOCOL_UUID16                (0x0008)
#define IP_PROTOCOL_UUID16                  (0x0009)
#define FTP_PROTOCOL_UUID16                 (0x000A)
#define HTTP_PROTOCOL_UUID16                (0x000C)
#define WSP_PROTOCOL_UUID16                 (0x000E)
#define BNEP_PROTOCOL_UUID16                (0x000F)
#define UPNP_PROTOCOL_UUID16                (0x0010)
#define HID_PROTOCOL_UUID16                 (0x0011)
#define HCCC_PROTOCOL_UUID16                (0x0012)
#define HCDC_PROTOCOL_UUID16                (0x0014)
#define HCN_PROTOCOL_UUID16                 (0x0016)
#define AVCTP_PROTOCOL_UUID16               (0x0017)
#define AVDTP_PROTOCOL_UUID16               (0x0019)
#define CMPT_PROTOCOL_UUID16                (0x001B)
#define UDI_C_PLANE_PROTOCOL_UUID16         (0x001D)
#define L2CAP_PROTOCOL_UUID16               (0x0100)

DEFINE_GUID(ServiceDiscoveryServerServiceClassID_UUID, 0x00001000, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(BrowseGroupDescriptorServiceClassID_UUID,  0x00001001, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(PublicBrowseGroupServiceClass_UUID,        0x00001002, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(SerialPortServiceClass_UUID,               0x00001101, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(LANAccessUsingPPPServiceClass_UUID,        0x00001102, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(DialupNetworkingServiceClass_UUID,         0x00001103, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(IrMCSyncServiceClass_UUID,                 0x00001104, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(OBEXObjectPushServiceClass_UUID,           0x00001105, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(OBEXFileTransferServiceClass_UUID,         0x00001106, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(IrMCSyncCommandServiceClass_UUID,          0x00001107, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(HeadsetServiceClass_UUID,                  0x00001108, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(CordlessTelephonyServiceClass_UUID,        0x00001109, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(AudioSourceServiceClass_UUID,              0x0000110A, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(AudioSinkServiceClass_UUID,                0x0000110B, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(AVRemoteControlTargetServiceClass_UUID,    0x0000110C, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(AdvancedAudioDistributionServiceClass_UUID,0x0000110D, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(AVRemoteControlServiceClass_UUID,          0x0000110E, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(AVRemoteControlControllerServiceClass_UUID,0x0000110F, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(IntercomServiceClass_UUID,                 0x00001110, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(FaxServiceClass_UUID,                      0x00001111, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(HeadsetAudioGatewayServiceClass_UUID,      0x00001112, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(WAPServiceClass_UUID,                      0x00001113, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(WAPClientServiceClass_UUID,                0x00001114, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(PANUServiceClass_UUID,                     0x00001115, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(NAPServiceClass_UUID,                      0x00001116, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(GNServiceClass_UUID,                       0x00001117, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(DirectPrintingServiceClass_UUID,           0x00001118, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(ReferencePrintingServiceClass_UUID,        0x00001119, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(ImagingServiceClass_UUID,                  0x0000111A, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(ImagingResponderServiceClass_UUID,         0x0000111B, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(ImagingAutomaticArchiveServiceClass_UUID,  0x0000111C, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(ImagingReferenceObjectsServiceClass_UUID,  0x0000111D, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(HandsfreeServiceClass_UUID,                0x0000111E, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(HandsfreeAudioGatewayServiceClass_UUID,    0x0000111F, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(DirectPrintingReferenceObjectsServiceClass_UUID,
                                                       0x00001120, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(ReflectedUIServiceClass_UUID,              0x00001121, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(BasicPringingServiceClass_UUID,            0x00001122, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(PrintingStatusServiceClass_UUID,           0x00001123, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(HumanInterfaceDeviceServiceClass_UUID,     0x00001124, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(HardcopyCableReplacementServiceClass_UUID, 0x00001125, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(HCRPrintServiceClass_UUID,                 0x00001126, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(HCRScanServiceClass_UUID,                  0x00001127, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(CommonISDNAccessServiceClass_UUID,         0x00001128, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(VideoConferencingGWServiceClass_UUID,      0x00001129, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(UDIMTServiceClass_UUID,                    0x0000112A, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(UDITAServiceClass_UUID,                    0x0000112B, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(AudioVideoServiceClass_UUID,               0x0000112C, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);

DEFINE_GUID(SimAccessServiceClass_UUID,                0x0000112D, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(PhonebookAccessPceServiceClass_UUID,       0x0000112E, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(PhonebookAccessPseServiceClass_UUID,       0x0000112F, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(PnPInformationServiceClass_UUID,           0x00001200, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(GenericNetworkingServiceClass_UUID,        0x00001201, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(GenericFileTransferServiceClass_UUID,      0x00001202, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(GenericAudioServiceClass_UUID,             0x00001203, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(GenericTelephonyServiceClass_UUID,         0x00001204, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(UPnpServiceClass_UUID,                     0x00001205, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(UPnpIpServiceClass_UUID,                   0x00001206, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(ESdpUpnpIpPanServiceClass_UUID,            0x00001300, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(ESdpUpnpIpLapServiceClass_UUID,            0x00001301, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(ESdpUpnpL2capServiceClass_UUID,            0x00001302, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(VideoSourceServiceClass_UUID,              0x00001303, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(VideoSinkServiceClass_UUID,                0x00001304, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);
DEFINE_GUID(VideoDistributionServiceClass_UUID,        0x00001305, 0x0000, 0x1000, 0x80, 0x00, 0x00, 0x80, 0x5F, 0x9B, 0x34, 0xFB);

#define ServiceDiscoveryServerServiceClassID_UUID16     (0x1000)
#define BrowseGroupDescriptorServiceClassID_UUID16      (0x1001)
#define PublicBrowseGroupServiceClassID_UUID16          (0x1002)
#define SerialPortServiceClassID_UUID16                 (0x1101)
#define LANAccessUsingPPPServiceClassID_UUID16          (0x1102)
#define DialupNetworkingServiceClassID_UUID16           (0x1103)
#define IrMCSyncServiceClassID_UUID16                   (0x1104)
#define OBEXObjectPushServiceClassID_UUID16             (0x1105)
#define OBEXFileTransferServiceClassID_UUID16           (0x1106)
#define IrMcSyncCommandServiceClassID_UUID16            (0x1107)
#define HeadsetServiceClassID_UUID16                    (0x1108)
#define CordlessServiceClassID_UUID16                   (0x1109)
#define AudioSourceServiceClassID_UUID16                (0x110A)
#define AudioSinkSourceServiceClassID_UUID16            (0x110B)
#define AVRemoteControlTargetServiceClassID_UUID16      (0x110C)
#define AdvancedAudioDistributionServiceClassID_UUID16  (0x110D)
#define AVRemoteControlServiceClassID_UUID16            (0x110E)
#define AVRemoteControlControllerServiceClass_UUID16    (0x110F)
#define IntercomServiceClassID_UUID16                   (0x1110)
#define FaxServiceClassID_UUID16                        (0x1111)
#define HeadsetAudioGatewayServiceClassID_UUID16        (0x1112)
#define WAPServiceClassID_UUID16                        (0x1113)
#define WAPClientServiceClassID_UUID16                  (0x1114)
#define PANUServiceClassID_UUID16                       (0x1115)
#define NAPServiceClassID_UUID16                        (0x1116)
#define GNServiceClassID_UUID16                         (0x1117)
#define DirectPrintingServiceClassID_UUID16             (0x1118)
#define ReferencePrintingServiceClassID_UUID16          (0x1119)
#define ImagingServiceClassID_UUID16                    (0x111A)
#define ImagingResponderServiceClassID_UUID16           (0x111B)
#define ImagingAutomaticArchiveServiceClassID_UUID16    (0x111C)
#define ImagingReferenceObjectsServiceClassID_UUID16    (0x111D)
#define HandsfreeServiceClassID_UUID16                  (0x111E)
#define HandsfreeAudioGatewayServiceClassID_UUID16      (0x111F)
#define DirectPrintingReferenceObjectsServiceClassID_UUID16 \
                                                        (0x1120)
#define ReflectsUIServiceClassID_UUID16                 (0x1121)
#define BasicPrintingServiceClassID_UUID16              (0x1122)
#define PrintingStatusServiceClassID_UUID16             (0x1123)
#define HumanInterfaceDeviceServiceClassID_UUID16       (0x1124)
#define HardcopyCableReplacementServiceClassID_UUID16   (0x1125)
#define HCRPrintServiceClassID_UUID16                   (0x1126)
#define HCRScanServiceClassID_UUID16                    (0x1127)
#define CommonISDNAccessServiceClass_UUID16             (0x1128)
#define VideoConferencingGWServiceClass_UUID16          (0x1129)
#define UDIMTServiceClass_UUID16                        (0x112A)
#define UDITAServiceClass_UUID16                        (0x112B)
#define AudioVideoServiceClass_UUID16                   (0x112C)

#define PnPInformationServiceClassID_UUID16             (0x1200)
#define GenericNetworkingServiceClassID_UUID16          (0x1201)
#define GenericFileTransferServiceClassID_UUID16        (0x1202)
#define GenericAudioServiceClassID_UUID16               (0x1203)
#define GenericTelephonyServiceClassID_UUID16           (0x1204)

//
// The SIG renamed the uuid for VideoConferencingServiceClass
//
#define VideoConferencingServiceClass_UUID              AVRemoteControlControllerServiceClass_UUID
#define VideoConferencingServiceClassID_UUID16          AVRemoteControlControllerServiceClass_UUID16

#endif //  NO_GUID_DEFS

#ifndef GUID_DEFS_ONLY

//
// max length of device friendly name.
//
#define BTH_MAX_NAME_SIZE          (248)

#define BTH_MAX_PIN_SIZE            (16)
#define BTH_LINK_KEY_LENGTH         (16)

#define BTH_MFG_ERICSSON        (0)
#define BTH_MFG_NOKIA           (1)
#define BTH_MFG_INTEL           (2)
#define BTH_MFG_IBM             (3)
#define BTH_MFG_TOSHIBA         (4)
#define BTH_MFG_3COM            (5)
#define BTH_MFG_MICROSOFT       (6)
#define BTH_MFG_LUCENT          (7)
#define BTH_MFG_MOTOROLA        (8)
#define BTH_MFG_INFINEON        (9)
#define BTH_MFG_CSR             (10)
#define BTH_MFG_SILICONWAVE     (11)
#define BTH_MFG_DIGIANSWER      (12)
#define BTH_MFG_TI              (13)
#define BTH_MFG_PARTHUS         (14)
#define BTH_MFG_BROADCOM        (15)
#define BTH_MFG_MITEL           (16)
#define BTH_MFG_WIDCOMM         (17)
#define BTH_MFG_ZEEVO           (18)
#define BTH_MFG_ATMEL           (19)
#define BTH_MFG_MITSIBUSHI      (20)
#define BTH_MFG_RTX_TELECOM     (21)
#define BTH_MFG_KC_TECHNOLOGY   (22)
#define BTH_MFG_NEWLOGIC        (23)
#define BTH_MFG_TRANSILICA      (24)
#define BTH_MFG_ROHDE_SCHWARZ   (25)
#define BTH_MFG_TTPCOM          (26)
#define BTH_MFG_SIGNIA          (27)
#define BTH_MFG_CONEXANT        (28)
#define BTH_MFG_QUALCOMM        (29)
#define BTH_MFG_INVENTEL        (30)
#define BTH_MFG_AVM_BERLIN      (31)
#define BTH_MFG_BANDSPEED       (32)
#define BTH_MFG_MANSELLA        (33)
#define BTH_MFG_NEC             (34)
#define BTH_MFG_WAVEPLUS_TECHNOLOGY_CO (35)
#define BTH_MFG_ALCATEL         (36)
#define BTH_MFG_PHILIPS_SEMICONDUCTOR  (37)
#define BTH_MFG_C_TECHNOLOGIES  (38)
#define BTH_MFG_OPEN_INTERFACE  (39)
#define BTH_MFG_RF_MICRO_DEVICES (40)
#define BTH_MFG_HITACHI        (41)
#define BTH_MFG_SYMBOL_TECHNOLOGIES (42)
#define BTH_MFG_TENOVIS        (43)
#define BTH_MFG_MACRONIX_INTERNATIONAL (44)
#define BTH_MFG_INTERNAL_USE    (65535)

typedef ULONGLONG BTH_ADDR, *PBTH_ADDR;
typedef ULONG BTH_COD, *PBTH_COD;
typedef ULONG BTH_LAP, *PBTH_LAP;

#define BTH_ADDR_NULL            ((ULONGLONG) 0x0000000000000000)

#define NAP_MASK                ((ULONGLONG) 0xFFFF00000000)
#define SAP_MASK                ((ULONGLONG) 0x0000FFFFFFFF)

#define NAP_BIT_OFFSET          (8 * 4)
#define SAP_BIT_OFFSET          (0)

#define GET_NAP(_bth_addr)  ((USHORT) (((_bth_addr) & NAP_MASK) >> NAP_BIT_OFFSET))
#define GET_SAP(_bth_addr)  ((ULONG)  (((_bth_addr) & SAP_MASK) >> SAP_BIT_OFFSET))

#define SET_NAP(_nap) (((ULONGLONG) ((USHORT) (_nap))) << NAP_BIT_OFFSET)
#define SET_SAP(_sap) (((ULONGLONG) ((ULONG)  (_sap))) << SAP_BIT_OFFSET)

#define SET_NAP_SAP(_nap, _sap) (SET_NAP(_nap) | SET_SAP(_sap))

#define COD_FORMAT_BIT_OFFSET   (0)
#define COD_MINOR_BIT_OFFSET    (2)
#define COD_MAJOR_BIT_OFFSET    (8 * 1)
#define COD_SERVICE_BIT_OFFSET  (8 * 1 + 5)

#define COD_FORMAT_MASK         (0x000003)
#define COD_MINOR_MASK          (0x0000FC)
#define COD_MAJOR_MASK          (0x001F00)
#define COD_SERVICE_MASK        (0xFFE000)


#define GET_COD_FORMAT(_cod)    ( (_cod) & COD_FORMAT_MASK   >> COD_FORMAT_BIT_OFFSET)
#define GET_COD_MINOR(_cod)     (((_cod) & COD_MINOR_MASK)   >> COD_MINOR_BIT_OFFSET)
#define GET_COD_MAJOR(_cod)     (((_cod) & COD_MAJOR_MASK)   >> COD_MAJOR_BIT_OFFSET)
#define GET_COD_SERVICE(_cod)   (((_cod) & COD_SERVICE_MASK) >> COD_SERVICE_BIT_OFFSET)

#define SET_COD_MINOR(_cod, _minor) (_cod) = ((_cod) & ~COD_MINOR_MASK) | ((_minor) << COD_MINOR_BIT_OFFSET)
#define SET_COD_MAJOR(_cod, _major) (_cod) = ((_cod) & ~COD_MAJOR_MASK) | ((_major) << COD_MAJOR_BIT_OFFSET)
#define SET_COD_SERVICE(_cod, _service) (_cod) = ((_cod) & ~COD_SERVICE_MASK) | ((_service) << COD_SERVICE_BIT_OFFSET)

#define COD_VERSION                            (0x0)

#define COD_SERVICE_LIMITED                 (0x0001)
#define COD_SERVICE_POSITIONING             (0x0008)
#define COD_SERVICE_NETWORKING              (0x0010)
#define COD_SERVICE_RENDERING               (0x0020)
#define COD_SERVICE_CAPTURING               (0x0040)
#define COD_SERVICE_OBJECT_XFER             (0x0080)
#define COD_SERVICE_AUDIO                   (0x0100)
#define COD_SERVICE_TELEPHONY               (0x0200)
#define COD_SERVICE_INFORMATION             (0x0400)

#define COD_SERVICE_VALID_MASK              (COD_SERVICE_LIMITED        | \
                                             COD_SERVICE_POSITIONING    | \
                                             COD_SERVICE_NETWORKING     | \
                                             COD_SERVICE_RENDERING      | \
                                             COD_SERVICE_CAPTURING      | \
                                             COD_SERVICE_OBJECT_XFER    |\
                                             COD_SERVICE_AUDIO          |\
                                             COD_SERVICE_TELEPHONY      |\
                                             COD_SERVICE_INFORMATION)

#define COD_SERVICE_MAX_COUNT               (9)

//
// Major class codes
//
#define COD_MAJOR_MISCELLANEOUS             (0x00)
#define COD_MAJOR_COMPUTER                  (0x01)
#define COD_MAJOR_PHONE                     (0x02)
#define COD_MAJOR_LAN_ACCESS                (0x03)
#define COD_MAJOR_AUDIO                     (0x04)
#define COD_MAJOR_PERIPHERAL                (0x05)
#define COD_MAJOR_IMAGING                   (0x06)
#define COD_MAJOR_UNCLASSIFIED              (0x1F)

//
// Minor class codes specific to each major class
//
#define COD_COMPUTER_MINOR_UNCLASSIFIED     (0x00)
#define COD_COMPUTER_MINOR_DESKTOP          (0x01)
#define COD_COMPUTER_MINOR_SERVER           (0x02)
#define COD_COMPUTER_MINOR_LAPTOP           (0x03)
#define COD_COMPUTER_MINOR_HANDHELD         (0x04)
#define COD_COMPUTER_MINOR_PALM             (0x05)
#define COD_COMPUTER_MINOR_WEARABLE         (0x06)

#define COD_PHONE_MINOR_UNCLASSIFIED        (0x00)
#define COD_PHONE_MINOR_CELLULAR            (0x01)
#define COD_PHONE_MINOR_CORDLESS            (0x02)
#define COD_PHONE_MINOR_SMART               (0x03)
#define COD_PHONE_MINOR_WIRED_MODEM         (0x04)

#define COD_AUDIO_MINOR_UNCLASSIFIED        (0x00)
#define COD_AUDIO_MINOR_HEADSET             (0x01)
#define COD_AUDIO_MINOR_HANDS_FREE          (0x02)
#define COD_AUDIO_MINOR_HEADSET_HANDS_FREE  (0x03)
#define COD_AUDIO_MINOR_MICROPHONE          (0x04)
#define COD_AUDIO_MINOR_LOUDSPEAKER         (0x05)
#define COD_AUDIO_MINOR_HEADPHONES          (0x06)
#define COD_AUDIO_MINOR_PORTABLE_AUDIO      (0x07)
#define COD_AUDIO_MINOR_CAR_AUDIO           (0x08)
#define COD_AUDIO_MINOR_SET_TOP_BOX         (0x09)
#define COD_AUDIO_MINOR_HIFI_AUDIO          (0x0A)
#define COD_AUDIO_MINOR_VCR                 (0x0B)
#define COD_AUDIO_MINOR_VIDEO_CAMERA        (0x0C)
#define COD_AUDIO_MINOR_CAMCORDER           (0x0D)
#define COD_AUDIO_MINOR_VIDEO_MONITOR       (0x0E)
#define COD_AUDIO_MINOR_VIDEO_DISPLAY_LOUDSPEAKER \
                                            (0x0F)
#define COD_AUDIO_MINOR_VIDEO_DISPLAY_CONFERENCING \
                                            (0x10)
// #define COD_AUDIO_MINOR_RESERVED            (0x11)
#define COD_AUDIO_MINOR_GAMING_TOY          (0x12)

#define COD_PERIPHERAL_MINOR_KEYBOARD_MASK  (0x10)
#define COD_PERIPHERAL_MINOR_POINTER_MASK   (0x20)

#define COD_PERIPHERAL_MINOR_NO_CATEGORY    (0x00)
#define COD_PERIPHERAL_MINOR_JOYSTICK       (0x01)
#define COD_PERIPHERAL_MINOR_GAMEPAD        (0x02)
#define COD_PERIPHERAL_MINOR_REMOTE_CONTROL (0x03)
#define COD_PERIPHERAL_MINOR_SENSING        (0x04)

#define COD_IMAGING_MINOR_DISPLAY_MASK      (0x04)
#define COD_IMAGING_MINOR_CAMERA_MASK       (0x08)
#define COD_IMAGING_MINOR_SCANNER_MASK      (0x10)
#define COD_IMAGING_MINOR_PRINTER_MASK      (0x20)

//
// Cannot use GET_COD_MINOR for this b/c it is embedded in a different manner
// than the rest of the major classes
//

#define COD_LAN_ACCESS_BIT_OFFSET (5)

#define COD_LAN_MINOR_MASK      (0x00001C)
#define COD_LAN_ACCESS_MASK     (0x0000E0)

#define GET_COD_LAN_MINOR(_cod)         (((_cod) & COD_LAN_MINOR_MASK) >> COD_MINOR_BIT_OFFSET)
#define GET_COD_LAN_ACCESS(_cod)         (((_cod) & COD_LAN_ACCESS_MASK) >> COD_LAN_ACCESS_BIT_OFFSET)

//
// LAN access percent usage subcodes
//
#define COD_LAN_MINOR_UNCLASSIFIED    (0x00)

#define COD_LAN_ACCESS_0_USED         (0x00)
#define COD_LAN_ACCESS_17_USED        (0x01)
#define COD_LAN_ACCESS_33_USED        (0x02)
#define COD_LAN_ACCESS_50_USED        (0x03)
#define COD_LAN_ACCESS_67_USED        (0x04)
#define COD_LAN_ACCESS_83_USED        (0x05)
#define COD_LAN_ACCESS_99_USED        (0x06)
#define COD_LAN_ACCESS_FULL           (0x07)

//
// Extended Inquiry Response (EIR) defines.
//
#define BTH_EIR_FLAGS_ID                (0x01)
#define BTH_EIR_16_UUIDS_PARTIAL_ID     (0x02)
#define BTH_EIR_16_UUIDS_COMPLETE_ID    (0x03)
#define BTH_EIR_32_UUIDS_PARTIAL_ID     (0x04)
#define BTH_EIR_32_UUIDS_COMPLETE_ID    (0x05)
#define BTH_EIR_128_UUIDS_PARTIAL_ID    (0x06)
#define BTH_EIR_128_UUIDS_COMPLETE_ID   (0x07)
#define BTH_EIR_LOCAL_NAME_PARTIAL_ID   (0x08)
#define BTH_EIR_LOCAL_NAME_COMPLETE_ID  (0x09)
#define BTH_EIR_TX_POWER_LEVEL_ID       (0x0A)
#define BTH_EIR_OOB_OPT_DATA_LEN_ID     (0x0B) // OOB only.
#define BTH_EIR_OOB_BD_ADDR_ID          (0x0C) // OOB only.
#define BTH_EIR_OOB_COD_ID              (0x0D) // OOB only.
#define BTH_EIR_OOB_SP_HASH_ID          (0x0E) // OOB only.
#define BTH_EIR_OOB_SP_RANDOMIZER_ID    (0x0F) // OOB only.
#define BTH_EIR_MANUFACTURER_ID         (0xFF)

//
// Extended Inquiry Response (EIR) size.
//
#define BTH_EIR_SIZE                    (240)

//
// Used as an initializer of LAP_DATA
//
#define LAP_GIAC_INIT                   { 0x33, 0x8B, 0x9E }
#define LAP_LIAC_INIT                   { 0x00, 0x8B, 0x9E }

//
// General Inquiry Access Code.
//
#define LAP_GIAC_VALUE                  (0x009E8B33)

//
// Limited Inquiry Access Code.
//
#define LAP_LIAC_VALUE                  (0x009E8B00)

#define BTH_ADDR_IAC_FIRST               (0x9E8B00)
#define BTH_ADDR_IAC_LAST                (0x9E8B3f)
#define BTH_ADDR_LIAC                    (0x9E8B00)
#define BTH_ADDR_GIAC                    (0x9E8B33)

typedef UCHAR BTHSTATUS, *PBTHSTATUS;

#define BTH_ERROR(_btStatus)   ((_btStatus) != BTH_ERROR_SUCCESS)
#define BTH_SUCCESS(_btStatus) ((_btStatus) == BTH_ERROR_SUCCESS)

#define BTH_ERROR_SUCCESS                           (0x00)
#define BTH_ERROR_UNKNOWN_HCI_COMMAND               (0x01)
#define BTH_ERROR_NO_CONNECTION                     (0x02)
#define BTH_ERROR_HARDWARE_FAILURE                  (0x03)
#define BTH_ERROR_PAGE_TIMEOUT                      (0x04)
#define BTH_ERROR_AUTHENTICATION_FAILURE            (0x05)
#define BTH_ERROR_KEY_MISSING                       (0x06)
#define BTH_ERROR_MEMORY_FULL                       (0x07)
#define BTH_ERROR_CONNECTION_TIMEOUT                (0x08)
#define BTH_ERROR_MAX_NUMBER_OF_CONNECTIONS         (0x09)
#define BTH_ERROR_MAX_NUMBER_OF_SCO_CONNECTIONS     (0x0a)
#define BTH_ERROR_ACL_CONNECTION_ALREADY_EXISTS     (0x0b)
#define BTH_ERROR_COMMAND_DISALLOWED                (0x0c)
#define BTH_ERROR_HOST_REJECTED_LIMITED_RESOURCES   (0x0d)
#define BTH_ERROR_HOST_REJECTED_SECURITY_REASONS    (0x0e)
#define BTH_ERROR_HOST_REJECTED_PERSONAL_DEVICE     (0x0f)
#define BTH_ERROR_HOST_TIMEOUT                      (0x10)
#define BTH_ERROR_UNSUPPORTED_FEATURE_OR_PARAMETER  (0x11)
#define BTH_ERROR_INVALID_HCI_PARAMETER             (0x12)
#define BTH_ERROR_REMOTE_USER_ENDED_CONNECTION      (0x13)
#define BTH_ERROR_REMOTE_LOW_RESOURCES              (0x14)
#define BTH_ERROR_REMOTE_POWERING_OFF               (0x15)
#define BTH_ERROR_LOCAL_HOST_TERMINATED_CONNECTION  (0x16)
#define BTH_ERROR_REPEATED_ATTEMPTS                 (0x17)
#define BTH_ERROR_PAIRING_NOT_ALLOWED               (0x18)
#define BTH_ERROR_UKNOWN_LMP_PDU                    (0x19)
#define BTH_ERROR_UNSUPPORTED_REMOTE_FEATURE        (0x1a)
#define BTH_ERROR_SCO_OFFSET_REJECTED               (0x1b)
#define BTH_ERROR_SCO_INTERVAL_REJECTED             (0x1c)
#define BTH_ERROR_SCO_AIRMODE_REJECTED              (0x1d)
#define BTH_ERROR_INVALID_LMP_PARAMETERS            (0x1e)
#define BTH_ERROR_UNSPECIFIED_ERROR                 (0x1f)
#define BTH_ERROR_UNSUPPORTED_LMP_PARM_VALUE        (0x20)
#define BTH_ERROR_ROLE_CHANGE_NOT_ALLOWED           (0x21)
#define BTH_ERROR_LMP_RESPONSE_TIMEOUT              (0x22)
#define BTH_ERROR_LMP_TRANSACTION_COLLISION         (0x23)
#define BTH_ERROR_LMP_PDU_NOT_ALLOWED               (0x24)
#define BTH_ERROR_ENCRYPTION_MODE_NOT_ACCEPTABLE    (0x25)
#define BTH_ERROR_UNIT_KEY_NOT_USED                 (0x26)
#define BTH_ERROR_QOS_IS_NOT_SUPPORTED              (0x27)
#define BTH_ERROR_INSTANT_PASSED                    (0x28)
#define BTH_ERROR_PAIRING_WITH_UNIT_KEY_NOT_SUPPORTED (0x29)
#define BTH_ERROR_DIFFERENT_TRANSACTION_COLLISION   (0x2a)
#define BTH_ERROR_QOS_UNACCEPTABLE_PARAMETER        (0x2c)
#define BTH_ERROR_QOS_REJECTED                      (0x2d)
#define BTH_ERROR_CHANNEL_CLASSIFICATION_NOT_SUPPORTED (0x2e)
#define BTH_ERROR_INSUFFICIENT_SECURITY             (0x2f)
#define BTH_ERROR_PARAMETER_OUT_OF_MANDATORY_RANGE  (0x30)
#define BTH_ERROR_ROLE_SWITCH_PENDING               (0x32)
#define BTH_ERROR_RESERVED_SLOT_VIOLATION           (0x34)
#define BTH_ERROR_ROLE_SWITCH_FAILED                (0x35)
#define BTH_ERROR_EXTENDED_INQUIRY_RESPONSE_TOO_LARGE (0x36)
#define BTH_ERROR_SECURE_SIMPLE_PAIRING_NOT_SUPPORTED_BY_HOST (0x37)
#define BTH_ERROR_HOST_BUSY_PAIRING                 (0x38)

#define BTH_ERROR_UNSPECIFIED                       (0xFF)

//
// Min, max, and default L2cap MTU.
//
#define L2CAP_MIN_MTU                       (48)
#define L2CAP_MAX_MTU                       (0xFFFF)
#define L2CAP_DEFAULT_MTU                   (672)

//
// Max l2cap signal size (48) - size of signal header (4)
//
#define MAX_L2CAP_PING_DATA_LENGTH            (44)
#define MAX_L2CAP_INFO_DATA_LENGTH            (44)

//
// the following structures provide information about
// disocvered remote radios.
//

#define BDIF_ADDRESS            (0x00000001)
#define BDIF_COD                (0x00000002)
#define BDIF_NAME               (0x00000004)
#define BDIF_PAIRED             (0x00000008)
#define BDIF_PERSONAL           (0x00000010)
#define BDIF_CONNECTED          (0x00000020)

//
// Support added in KB942567
//
#if (NTDDI_VERSION > NTDDI_VISTASP1 || \
    (NTDDI_VERSION == NTDDI_VISTASP1 && defined(VISTA_KB942567)))

#define BDIF_SHORT_NAME         (0x00000040)
#define BDIF_VISIBLE            (0x00000080)
#define BDIF_SSP_SUPPORTED      (0x00000100)
#define BDIF_SSP_PAIRED         (0x00000200)
#define BDIF_SSP_MITM_PROTECTED (0x00000400)
#define BDIF_RSSI               (0x00001000)
#define BDIF_EIR                (0x00002000)

#define BDIF_VALID_FLAGS                                                    \
    (BDIF_ADDRESS | BDIF_COD | BDIF_NAME | BDIF_PAIRED | BDIF_PERSONAL |    \
     BDIF_CONNECTED | BDIF_SHORT_NAME | BDIF_VISIBLE | BDIF_RSSI | BDIF_EIR | BDIF_SSP_PAIRED | BDIF_SSP_MITM_PROTECTED)

#else // <= SP1

#define BDIF_VALID_FLAGS                                                    \
    (BDIF_ADDRESS | BDIF_COD | BDIF_NAME | BDIF_PAIRED | BDIF_PERSONAL |    \
     BDIF_CONNECTED)

#endif // >= SP1+KB942567


typedef struct _BTH_DEVICE_INFO {
    //
    // Combination BDIF_Xxx flags
    //
    ULONG flags;

    //
    // Address of remote device.
    //
    BTH_ADDR address;

    //
    // Class Of Device.
    //
    BTH_COD classOfDevice;

    //
    // name of the device
    //
    CHAR name[BTH_MAX_NAME_SIZE];

} BTH_DEVICE_INFO, *PBTH_DEVICE_INFO;

//
// Buffer associated with GUID_BLUETOOTH_RADIO_IN_RANGE
//

typedef struct _BTH_RADIO_IN_RANGE {
    //
    // Information about the remote radio
    //
    BTH_DEVICE_INFO deviceInfo;

    //
    // The previous flags value for the BTH_DEVICE_INFO.  The receiver of this
    // notification can compare the deviceInfo.flags and previousDeviceFlags
    // to determine what has changed about this remote radio.
    //
    // For instance, if BDIF_NAME is set in deviceInfo.flags and not in
    // previousDeviceFlags, the remote radio's has just been retrieved.
    //
    ULONG previousDeviceFlags;

} BTH_RADIO_IN_RANGE, *PBTH_RADIO_IN_RANGE;

//
// Buffer associated with GUID_BLUETOOTH_L2CAP_EVENT
//
typedef struct _BTH_L2CAP_EVENT_INFO {
    //
    // Remote radio address which the L2CAP event is associated with
    //
    BTH_ADDR bthAddress;

    //
    // The PSM that is either being connected to or disconnected from
    //
    USHORT psm;

    //
    // If != 0, then the channel has just been established.  If == 0, then the
    // channel has been destroyed.  Notifications for a destroyed channel will
    // only be sent for channels successfully established.
    //
    UCHAR connected;

    //
    // If != 0, then the local host iniated the l2cap connection.  If == 0, then
    // the remote host initated the connection.  This field is only valid if
    // connect is != 0.
    //
    UCHAR initiated;

} BTH_L2CAP_EVENT_INFO, *PBTH_L2CAP_EVENT_INFO;

#define HCI_CONNECTION_TYPE_ACL    (1)
#define HCI_CONNECTION_TYPE_SCO    (2)

//
// Fix typos
//
#define HCI_CONNNECTION_TYPE_ACL    HCI_CONNECTION_TYPE_ACL
#define HCI_CONNNECTION_TYPE_SCO    HCI_CONNECTION_TYPE_SCO


//
// Buffer associated with GUID_BLUETOOTH_HCI_EVENT
//
typedef struct _BTH_HCI_EVENT_INFO {
    //
    // Remote radio address which the HCI event is associated with
    //
    BTH_ADDR bthAddress;

    //
    // HCI_CONNNECTION_TYPE_XXX value
    //
    UCHAR connectionType;

    //
    // If != 0, then the underlying connection to the remote radio has just
    // been estrablished.  If == 0, then the underlying conneciton has just been
    // destroyed.
    //
    UCHAR  connected;

} BTH_HCI_EVENT_INFO, *PBTH_HCI_EVENT_INFO;


//
// Support added in KB942567
//
#if (NTDDI_VERSION > NTDDI_VISTASP1 || \
    (NTDDI_VERSION == NTDDI_VISTASP1 && defined(VISTA_KB942567)))

//
// Buffer associated with GUID_BLUETOOTH_KEYPRESS_EVENT
//

typedef enum _BTH_KEYPRESS_NOTIFICATION_TYPE{
    BTH_KEYPRESS_NOTIFICATION_PASSKEY_STARTED = 0x0,
    BTH_KEYPRESS_NOTIFICATION_PASSKEY_DIGIT_ENTERED = 0x1,
    BTH_KEYPRESS_NOTIFICATION_PASSKEY_DIGIT_ERASED = 0x2,
    BTH_KEYPRESS_NOTIFICATION_PASSKEY_CLEARED = 0x3,
    BTH_KEYPRESS_NOTIFICATION_PASSKEY_ENTRY_COMPLETED = 0x4,
}BTH_KEYPRESS_NOTIFICATION_TYPE, *PBTH_KEYPRESS_NOTIFICATION_TYPE;

typedef struct _BTH_HCI_KEYPRESS_INFO {
    BTH_ADDR  BTH_ADDR;
    //
    // HCI_KEYPRESS_XXX value
    //
    UCHAR   NotificationType;
}BTH_HCI_KEYPRESS_INFO, *PBTH_HCI_KEYPRESS_INFO;

typedef enum _BTH_AUTH_METHOD {
    BTH_AUTH_METHOD_UNDEFINED = 0x0,
    BTH_AUTH_METHOD_LEGACY,
    BTH_AUTH_METHOD_OOB,
    BTH_AUTH_METHOD_NUMERIC_COMPARISON,
    BTH_AUTH_METHOD_PASSKEY_NOTIFICATION,
    BTH_AUTH_METHOD_PASSKEY
} BTH_AUTH_METHOD, * PBTH_AUTH_METHOD;

#define BTH_AUTH_METHOD_MAX BTH_AUTH_METHOD_PASSKEY

typedef enum _IO_CAPABILITY {
    IoCaps_DisplayOnly     = 0x00,
    IoCaps_DisplayYesNo    = 0x01,   
    IoCaps_KeyboardOnly    = 0x02,
    IoCaps_NoInputNoOutput = 0x03,
    IoCaps_Undefined       = 0xff
}IO_CAPABILITY;

typedef enum _OOB_DATA_PRESENT {
    OOBAuthenticationDataNotPresent                 = 0x00,
    OOBAuthenticationDataFromRemoteDevicePresent    = 0x01    
}OOB_DATA_PRESENT;

typedef enum _AUTHENTICATION_REQUIREMENTS {
    MITMProtectionNotRequired               = 0x00,
    MITMProtectionRequired                  = 0x01,
    MITMProtectionNotRequiredBonding        = 0x02,
    MITMProtectionRequiredBonding           = 0x03,
    MITMProtectionNotRequiredGeneralBonding = 0x04,
    MITMProtectionRequiredGeneralBonding    = 0x05,
    MITMProtectionNotDefined                = 0xff
} AUTHENTICATION_REQUIREMENTS;

#define IsMITMProtectionRequired(requirements) \
        ((MITMProtectionRequired == requirements) || (MITMProtectionRequiredBonding == requirements) || (MITMProtectionRequiredGeneralBonding == requirements))
        
        

//
// Buffer associated with GUID_BLUETOOTH_AUTHENTICATION_REQUEST
//
typedef struct _BTH_AUTHENTICATION_REQUEST {
    BTH_DEVICE_INFO             deviceInfo;
    BTH_AUTH_METHOD             authenticationMethod;
    IO_CAPABILITY               IoCapability;
    AUTHENTICATION_REQUIREMENTS AuthenticationRequirements;  // max(local,remote)

    ULONG                       flag; // Reserved
    
    union{
        ULONG   Numeric_Value;
        ULONG   Passkey;
    };
}BTH_AUTHENTICATION_REQUEST, *PBTH_AUTHENTICATION_REQUEST;

#endif // >= SP1+KB942567

//
// Max length we allow for ServiceName in the remote SDP records
//
#define BTH_MAX_SERVICE_NAME_SIZE   (256)

#define MAX_UUIDS_IN_QUERY  (12)

#define BTH_VID_DEFAULT_VALUE                   (0xFFFF)

#define SDP_ERROR_INVALID_SDP_VERSION           (0x0001)
#define SDP_ERROR_INVALID_RECORD_HANDLE         (0x0002)
#define SDP_ERROR_INVALID_REQUEST_SYNTAX        (0x0003)
#define SDP_ERROR_INVALID_PDU_SIZE              (0x0004)
#define SDP_ERROR_INVALID_CONTINUATION_STATE    (0x0005)
#define SDP_ERROR_INSUFFICIENT_RESOURCES        (0x0006)

//
// Defined by windows to handle server errors that are not described by the
// above errors.  Start at 0x0100 so we don't go anywhere near the spec
// defined values.
//

//
// Success, nothing went wrong
//
#define SDP_ERROR_SUCCESS                       ((SDP_ERROR) 0x0000)

//
// The SDP PDU or parameters other than the SDP stream response was not correct
//
#define SDP_ERROR_SERVER_INVALID_RESPONSE       ((SDP_ERROR) 0x0100)

//
// The SDP response stream did not parse correctly.
//
#define SDP_ERROR_SERVER_RESPONSE_DID_NOT_PARSE ((SDP_ERROR) 0x0200)

//
// The SDP response stream was successfully parsed, but did not match the
// required format for the query.
//
#define SDP_ERROR_SERVER_BAD_FORMAT             ((SDP_ERROR) 0x0300)

//
// SDP was unable to send a continued query back to the server
//
#define SDP_ERROR_COULD_NOT_SEND_CONTINUE       ((SDP_ERROR) 0x0400)

//
// Server sent a response that was too large to fit in the caller's buffer.
//
#define SDP_ERROR_RESPONSE_TOO_LARGE            ((SDP_ERROR) 0x0500)


#define SDP_ATTRIB_RECORD_HANDLE            (0x0000)
#define SDP_ATTRIB_CLASS_ID_LIST            (0x0001)
#define SDP_ATTRIB_RECORD_STATE             (0x0002)
#define SDP_ATTRIB_SERVICE_ID               (0x0003)
#define SDP_ATTRIB_PROTOCOL_DESCRIPTOR_LIST (0x0004)
#define SDP_ATTRIB_BROWSE_GROUP_LIST        (0x0005)
#define SDP_ATTRIB_LANG_BASE_ATTRIB_ID_LIST (0x0006)
#define SDP_ATTRIB_INFO_TIME_TO_LIVE        (0x0007)
#define SDP_ATTRIB_AVAILABILITY             (0x0008)
#define SDP_ATTRIB_PROFILE_DESCRIPTOR_LIST  (0x0009)
#define SDP_ATTRIB_DOCUMENTATION_URL        (0x000A)
#define SDP_ATTRIB_CLIENT_EXECUTABLE_URL    (0x000B)
#define SDP_ATTRIB_ICON_URL                 (0x000C)
#define SDP_ATTRIB_ADDITIONAL_PROTOCOL_DESCRIPTOR_LIST \
                                            (0x000D)

//
// Attribute IDs in the range of 0x000D - 0x01FF are reserved for future use
//
#define SDP_ATTRIB_PROFILE_SPECIFIC                     (0x0200)

#define LANG_BASE_LANGUAGE_INDEX                        (0x0000)
#define LANG_BASE_ENCODING_INDEX                        (0x0001)
#define LANG_BASE_OFFSET_INDEX                          (0x0002)
#define LANG_DEFAULT_ID                                 (0x0100)

#define STRING_NAME_OFFSET                              (0x0000)
#define STRING_DESCRIPTION_OFFSET                       (0x0001)
#define STRING_PROVIDER_NAME_OFFSET                     (0x0002)

#define SDP_ATTRIB_SDP_VERSION_NUMBER_LIST              (0x0200)
#define SDP_ATTRIB_SDP_DATABASE_STATE                   (0x0201)

#define SDP_ATTRIB_BROWSE_GROUP_ID                      (0x0200)

#define SDP_ATTRIB_CORDLESS_EXTERNAL_NETWORK            (0x0301)

#define SDP_ATTRIB_FAX_CLASS_1_SUPPORT                  (0x0302)
#define SDP_ATTRIB_FAX_CLASS_2_0_SUPPORT                (0x0303)
#define SDP_ATTRIB_FAX_CLASS_2_SUPPORT                  (0x0304)
#define SDP_ATTRIB_FAX_AUDIO_FEEDBACK_SUPPORT           (0x0305)

#define SDP_ATTRIB_HEADSET_REMOTE_AUDIO_VOLUME_CONTROL  (0x0302)

#define SDP_ATTRIB_LAN_LPSUBNET                         (0x0200)

#define SDP_ATTRIB_OBJECT_PUSH_SUPPORTED_FORMATS_LIST   (0x0303)

#define SDP_ATTRIB_SYNCH_SUPPORTED_DATA_STORES_LIST     (0x0301)

//  this is in the assigned numbers doc, but it does not show up in any profile
#define SDP_ATTRIB_SERVICE_VERSION                      (0x0300)

#define SDP_ATTRIB_PAN_NETWORK_ADDRESS                  (0x0306)
#define SDP_ATTRIB_PAN_WAP_GATEWAY                      (0x0307)
#define SDP_ATTRIB_PAN_HOME_PAGE_URL                    (0x0308)
#define SDP_ATTRIB_PAN_WAP_STACK_TYPE                   (0x0309)
#define SDP_ATTRIB_PAN_SECURITY_DESCRIPTION             (0x030A)
#define SDP_ATTRIB_PAN_NET_ACCESS_TYPE                  (0x030B)
#define SDP_ATTRIB_PAN_MAX_NET_ACCESS_RATE              (0x030C)

#define SDP_ATTRIB_IMAGING_SUPPORTED_CAPABILITIES       (0x0310)
#define SDP_ATTRIB_IMAGING_SUPPORTED_FEATURES           (0x0311)
#define SDP_ATTRIB_IMAGING_SUPPORTED_FUNCTIONS          (0x0312)
#define SDP_ATTRIB_IMAGING_TOTAL_DATA_CAPACITY          (0x0313)

#define SDP_ATTRIB_DI_SPECIFICATION_ID                  (0x0200)
#define SDP_ATTRIB_DI_VENDOR_ID                         (0x0201)
#define SDP_ATTRIB_DI_PRODUCT_ID                        (0x0202)
#define SDP_ATTRIB_DI_VERSION                           (0x0203)
#define SDP_ATTRIB_DI_PRIMARY_RECORD                    (0x0204)
#define SDP_ATTRIB_DI_VENDOR_ID_SOURCE                  (0x0205)

#define SDP_ATTRIB_HID_DEVICE_RELEASE_NUMBER            (0x0200)
#define SDP_ATTRIB_HID_PARSER_VERSION                   (0x0201)
#define SDP_ATTRIB_HID_DEVICE_SUBCLASS                  (0x0202)
#define SDP_ATTRIB_HID_COUNTRY_CODE                     (0x0203)
#define SDP_ATTRIB_HID_VIRTUAL_CABLE                    (0x0204)
#define SDP_ATTRIB_HID_RECONNECT_INITIATE               (0x0205)
#define SDP_ATTRIB_HID_DESCRIPTOR_LIST                  (0x0206)
#define SDP_ATTRIB_HID_LANG_ID_BASE_LIST                (0x0207)
#define SDP_ATTRIB_HID_SDP_DISABLE                      (0x0208)
#define SDP_ATTRIB_HID_BATTERY_POWER                    (0x0209)
#define SDP_ATTRIB_HID_REMOTE_WAKE                      (0x020A)
#define SDP_ATTRIB_HID_PROFILE_VERSION                  (0x020B)
#define SDP_ATTRIB_HID_SUPERVISION_TIMEOUT              (0x020C)
#define SDP_ATTRIB_HID_NORMALLY_CONNECTABLE             (0x020D)
#define SDP_ATTRIB_HID_BOOT_DEVICE                      (0x020E)
#define SDP_ATTRIB_HID_SSR_HOST_MAX_LATENCY             (0x020F)
#define SDP_ATTRIB_HID_SSR_HOST_MIN_TIMEOUT             (0x0210)

//
// Profile specific values
//
#define CORDLESS_EXTERNAL_NETWORK_PSTN              (0x01)
#define CORDLESS_EXTERNAL_NETWORK_ISDN              (0x02)
#define CORDLESS_EXTERNAL_NETWORK_GSM               (0x03)
#define CORDLESS_EXTERNAL_NETWORK_CDMA              (0x04)
#define CORDLESS_EXTERNAL_NETWORK_ANALOG_CELLULAR   (0x05)
#define CORDLESS_EXTERNAL_NETWORK_PACKET_SWITCHED   (0x06)
#define CORDLESS_EXTERNAL_NETWORK_OTHER             (0x07)

#define OBJECT_PUSH_FORMAT_VCARD_2_1                (0x01)
#define OBJECT_PUSH_FORMAT_VCARD_3_0                (0x02)
#define OBJECT_PUSH_FORMAT_VCAL_1_0                 (0x03)
#define OBJECT_PUSH_FORMAT_ICAL_2_0                 (0x04)
#define OBJECT_PUSH_FORMAT_VNOTE                    (0x05)
#define OBJECT_PUSH_FORMAT_VMESSAGE                 (0x06)
#define OBJECT_PUSH_FORMAT_ANY                      (0xFF)

#define SYNCH_DATA_STORE_PHONEBOOK                  (0x01)
#define SYNCH_DATA_STORE_CALENDAR                   (0x03)
#define SYNCH_DATA_STORE_NOTES                      (0x05)
#define SYNCH_DATA_STORE_MESSAGES                   (0x06)

#define DI_VENDOR_ID_SOURCE_BLUETOOTH_SIG           (0x0001)
#define DI_VENDOR_ID_SOURCE_USB_IF                  (0x0002)

#define PSM_SDP                 (0x0001)
#define PSM_RFCOMM              (0x0003)
#define PSM_TCS_BIN             (0x0005)
#define PSM_TCS_BIN_CORDLESS    (0x0007)
#define PSM_BNEP                (0x000F)
#define PSM_HID_CONTROL         (0x0011)
#define PSM_HID_INTERRUPT       (0x0013)
#define PSM_AVCTP               (0x0017)
#define PSM_AVDTP               (0x0019)
#define PSM_UDI_C_PLANE         (0x001D)

//
// Strings
//
#define STR_ADDR_FMTA          "(%02x:%02x:%02x:%02x:%02x:%02x)"
#define STR_ADDR_FMTW          L"(%02x:%02x:%02x:%02x:%02x:%02x)"

#define STR_ADDR_SHORT_FMTA     "%04x%08x"
#define STR_ADDR_SHORT_FMTW     L"%04x%08x"

#if defined(UNICODE) || defined(BTH_KERN)

#define STR_ADDR_FMT            STR_ADDR_FMTW
#define STR_ADDR_SHORT_FMT      STR_ADDR_SHORT_FMTW

#else // UNICODE

#define STR_ADDR_FMT            STR_ADDR_FMTA
#define STR_ADDR_SHORT_FMT      STR_ADDR_SHORT_FMTA

#endif // UNICODE

#define GET_BITS(field,offset,mask)         ( ( (field) >> (offset) ) & (mask) )
#define GET_BIT(field,offset)               ( GET_BITS(field,offset,0x1) )

#define LMP_3_SLOT_PACKETS(x)               (GET_BIT(x, 0))
#define LMP_5_SLOT_PACKETS(x)               (GET_BIT(x, 1))
#define LMP_ENCRYPTION(x)                   (GET_BIT(x, 2))
#define LMP_SLOT_OFFSET(x)                  (GET_BIT(x, 3))
#define LMP_TIMING_ACCURACY(x)              (GET_BIT(x, 4))
#define LMP_SWITCH(x)                       (GET_BIT(x, 5))
#define LMP_HOLD_MODE(x)                    (GET_BIT(x, 6))
#define LMP_SNIFF_MODE(x)                   (GET_BIT(x, 7))
#define LMP_PARK_MODE(x)                    (GET_BIT(x, 8))
#define LMP_RSSI(x)                         (GET_BIT(x, 9))
#define LMP_CHANNEL_QUALITY_DRIVEN_MODE(x)  (GET_BIT(x,10))
#define LMP_SCO_LINK(x)                     (GET_BIT(x,11))
#define LMP_HV2_PACKETS(x)                  (GET_BIT(x,12))
#define LMP_HV3_PACKETS(x)                  (GET_BIT(x,13))
#define LMP_MU_LAW_LOG(x)                   (GET_BIT(x,14))
#define LMP_A_LAW_LOG(x)                    (GET_BIT(x,15))
#define LMP_CVSD(x)                         (GET_BIT(x,16))
#define LMP_PAGING_SCHEME(x)                (GET_BIT(x,17))
#define LMP_POWER_CONTROL(x)                (GET_BIT(x,18))
#define LMP_TRANSPARENT_SCO_DATA(x)         (GET_BIT(x,19))
#define LMP_FLOW_CONTROL_LAG(x)             (GET_BITS(x,20,0x3))
#define LMP_BROADCAST_ENCRYPTION(x)         (GET_BIT(x,23))
#define LMP_ENHANCED_DATA_RATE_ACL_2MBPS_MODE(x) (GET_BIT(x,25))
#define LMP_ENHANCED_DATA_RATE_ACL_3MBPS_MODE(x) (GET_BIT(x,26))
#define LMP_ENHANCED_INQUIRY_SCAN(x)        (GET_BIT(x,27))
#define LMP_INTERLACED_INQUIRY_SCAN(x)      (GET_BIT(x,28))
#define LMP_INTERLACED_PAGE_SCAN(x)         (GET_BIT(x,29))
#define LMP_RSSI_WITH_INQUIRY_RESULTS(x)    (GET_BIT(x,30))
#define LMP_ESCO_LINK(x)                    (GET_BIT(x,31))
#define LMP_EV4_PACKETS(x)                  (GET_BIT(x,32))
#define LMP_EV5_PACKETS(x)                  (GET_BIT(x,33))
#define LMP_AFH_CAPABLE_SLAVE(x)            (GET_BIT(x,35))
#define LMP_AFH_CLASSIFICATION_SLAVE(x)     (GET_BIT(x,36))
#define LMP_3SLOT_EDR_ACL_PACKETS(x)        (GET_BIT(x,39))
#define LMP_5SLOT_EDR_ACL_PACKETS(x)        (GET_BIT(x,40))
#define LMP_SNIFF_SUBRATING(x)              (GET_BIT(x,41))
#define LMP_PAUSE_ENCRYPTION(x)             (GET_BIT(x,42))
#define LMP_AFH_CAPABLE_MASTER(x)           (GET_BIT(x,43))
#define LMP_AFH_CLASSIFICATION_MASTER(x)    (GET_BIT(x,44))
#define LMP_EDR_ESCO_2MBPS_MODE(x)          (GET_BIT(x,45))
#define LMP_EDR_ESCO_3MBPS_MODE(x)          (GET_BIT(x,46))
#define LMP_3SLOT_EDR_ESCO_PACKETS(x)       (GET_BIT(x,47))
#define LMP_EXTENDED_INQUIRY_RESPONSE(x)    (GET_BIT(x,48))
#define LMP_SECURE_SIMPLE_PAIRING(x)        (GET_BIT(x,51))
#define LMP_ENCAPSULATED_PDU(x)             (GET_BIT(x,52))
#define LMP_ERRONEOUS_DATA_REPORTING(x)     (GET_BIT(x,53))
#define LMP_NON_FLUSHABLE_PACKET_BOUNDARY_FLAG(x) (GET_BIT(x,54))
#define LMP_LINK_SUPERVISION_TIMEOUT_CHANGED_EVENT(x) (GET_BIT(x,56))
#define LMP_INQUIRY_RESPONSE_TX_POWER_LEVEL(x)(GET_BIT(x,57))
#define LMP_EXTENDED_FEATURES(x)            (GET_BIT(x,63))

#endif // GUID_DEFS_ONLY

#endif // (NTDDI_VERSION >= NTDDI_WINXPSP2)

#if _MSC_VER >= 1200
#pragma warning(pop)
#else
#pragma warning(default:4201)
#endif


#endif // __BTHDEF_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\CChannel.h ===
/****************************************************************************/
/* Header:    cchannel.h                                                    */
/*                                                                          */
/* Purpose:   Virtual Channel Client API                                    */
/*                                                                          */
/* Copyright(C) Microsoft Corporation 1999                                  */
/*                                                                          */
/****************************************************************************/

#ifndef H_CCHANNEL
#define H_CCHANNEL

/****************************************************************************/
/* Include Virtual Channel Protocol header                                  */
/****************************************************************************/
#include <pchannel.h>

#ifdef _WIN32 
#define VCAPITYPE _stdcall
#define VCEXPORT
#else // _WIN32
#define VCAPITYPE CALLBACK
#define VCEXPORT  __export
#endif // _WIN32

/****************************************************************************/
/* Name: CHANNEL_INIT_EVENT_FN                                              */
/*                                                                          */
/* Purpose:                                                                 */
/*                                                                          */
/* This function is passed to MSTSC on VirtualChannelInit.  It is called by */
/* MSTSC to tell the application about interesting events.                  */
/*                                                                          */
/* Returns:                                                                 */
/*                                                                          */
/* none                                                                     */
/*                                                                          */
/* Params:                                                                  */
/*                                                                          */
/* - pInitHandle - a handle uniquely identifying this connection            */
/* - event - the event that has occurred - see CHANNEL_EVENT_XXX below      */
/* - pData - data associated with the event - see CHANNEL_EVENT_XXX below   */
/* - dataLength - length of the data.                                       */
/*                                                                          */
/****************************************************************************/
typedef VOID VCAPITYPE CHANNEL_INIT_EVENT_FN(LPVOID pInitHandle,
                                             UINT   event,
                                             LPVOID pData,
                                             UINT   dataLength);

typedef CHANNEL_INIT_EVENT_FN FAR * PCHANNEL_INIT_EVENT_FN;

/****************************************************************************/
/* Events passed to VirtualChannelInitEvent                                 */
/****************************************************************************/
/* Client initialized (no data)                                             */
#define CHANNEL_EVENT_INITIALIZED       0

/* Connection established (data = name of Server)                           */
#define CHANNEL_EVENT_CONNECTED         1

/* Connection established with old Server, so no channel support            */
#define CHANNEL_EVENT_V1_CONNECTED      2

/* Connection ended (no data)                                               */
#define CHANNEL_EVENT_DISCONNECTED      3

/* Client terminated (no data)                                              */
#define CHANNEL_EVENT_TERMINATED        4

/****************************************************************************/
/* Name: CHANNEL_OPEN_EVENT_FN                                              */
/*                                                                          */
/* Purpose:                                                                 */
/*                                                                          */
/* This function is passed to MSTSC on VirtualChannelOpen.  It is called by */
/* MSTSC when data is available on the channel.                             */
/*                                                                          */
/* Returns:                                                                 */
/*                                                                          */
/* none                                                                     */
/*                                                                          */
/* Params:                                                                  */
/*                                                                          */
/* - openHandle - a handle uniquely identifying this channel                */
/* - event - event that has occurred - see CHANNEL_EVENT_XXX below          */
/* - pData - data received                                                  */
/* - dataLength - length of the data                                        */
/* - totalLength - total length of data written by the Server               */
/* - dataFlags - flags, zero, one or more of:                               */
/*   - 0x01 - beginning of data from a single write operation at the Server */
/*   - 0x02 - end of data from a single write operation at the Server.      */
/*                                                                          */
/****************************************************************************/
typedef VOID VCAPITYPE CHANNEL_OPEN_EVENT_FN(DWORD  openHandle,
                                             UINT   event,
                                             LPVOID pData,
                                             UINT32 dataLength,
                                             UINT32 totalLength,
                                             UINT32 dataFlags);

typedef CHANNEL_OPEN_EVENT_FN FAR * PCHANNEL_OPEN_EVENT_FN;


/****************************************************************************/
/* Events passed to VirtualChannelOpenEvent                                 */
/****************************************************************************/
/* Data received from Server (data = incoming data)                         */
#define CHANNEL_EVENT_DATA_RECEIVED     10

/* VirtualChannelWrite completed (pData - pUserData passed on
   VirtualChannelWrite)                                                     */
#define CHANNEL_EVENT_WRITE_COMPLETE    11

/* VirtualChannelWrite cancelled (pData - pUserData passed on
   VirtualChannelWrite)                                                     */
#define CHANNEL_EVENT_WRITE_CANCELLED   12


/****************************************************************************/
/* Return codes from VirtualChannelXxx functions                            */
/****************************************************************************/
#define CHANNEL_RC_OK                             0
#define CHANNEL_RC_ALREADY_INITIALIZED            1
#define CHANNEL_RC_NOT_INITIALIZED                2
#define CHANNEL_RC_ALREADY_CONNECTED              3
#define CHANNEL_RC_NOT_CONNECTED                  4
#define CHANNEL_RC_TOO_MANY_CHANNELS              5
#define CHANNEL_RC_BAD_CHANNEL                    6
#define CHANNEL_RC_BAD_CHANNEL_HANDLE             7
#define CHANNEL_RC_NO_BUFFER                      8
#define CHANNEL_RC_BAD_INIT_HANDLE                9
#define CHANNEL_RC_NOT_OPEN                      10
#define CHANNEL_RC_BAD_PROC                      11
#define CHANNEL_RC_NO_MEMORY                     12
#define CHANNEL_RC_UNKNOWN_CHANNEL_NAME          13
#define CHANNEL_RC_ALREADY_OPEN                  14
#define CHANNEL_RC_NOT_IN_VIRTUALCHANNELENTRY    15
#define CHANNEL_RC_NULL_DATA                     16
#define CHANNEL_RC_ZERO_LENGTH                   17

/****************************************************************************/
/* Levels of Virtual Channel Support                                        */
/****************************************************************************/
#define VIRTUAL_CHANNEL_VERSION_WIN2000         1

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/****************************************************************************/
/* Name: VirtualChannelInit                                                 */
/*                                                                          */
/* Purpose:                                                                 */
/*                                                                          */
/* This function is called by the application to register the virtual       */
/* channels it wants to have access to.  Note that this does not open the   */
/* channels, merely reserves the names for use by this application.  This   */
/* function must be called before the Client connects to the Server, hence  */
/* it is recommended that it is called from the DLL's initialization        */
/* procedure.                                                               */
/*                                                                          */
/*                                                                          */
/* On_return, the channels requested have been registered.  However, other  */
/* MSTSC initialization may not yet have completed.  The application        */
/* receives a VirtualChannelInitEvent callback with the "Client             */
/* initialized" event when all MSTSC initialization is complete.            */
/*                                                                          */
/* Returns:                                                                 */
/*                                                                          */
/* CHANNEL_RC_OK                                                            */
/* CHANNEL_RC_ALREADY_INITIALIZED                                           */
/* CHANNEL_RC_ALREADY_CONNECTED                                             */
/* CHANNEL_RC_TOO_MANY_CHANNELS                                             */
/* CHANNEL_RC_NOT_IN_VIRTUALCHANNELENTRY                                    */
/*                                                                          */
/* Parameters                                                               */
/*                                                                          */
/* - ppInitHandle (returned) - handle to pass to subsequent                 */
/*                             VirtualChannelXxx calls                      */
/* - pChannel - list of names registered by this application                */
/* - channelCount - number of channels registered.                          */
/* - versionRequested - level of virtual channel support requested (one of  */
/*                      the VIRTUAL_CHANNEL_LEVEL_XXX parameters)           */
/* - pChannelInitEventProc - address of VirtualChannelInitEvent procedure   */
/*                                                                          */
/****************************************************************************/
typedef UINT VCAPITYPE VIRTUALCHANNELINIT(
                LPVOID FAR *           ppInitHandle,
                PCHANNEL_DEF           pChannel,
                INT                    channelCount,
                ULONG                  versionRequested,
                PCHANNEL_INIT_EVENT_FN pChannelInitEventProc);

typedef VIRTUALCHANNELINIT FAR * PVIRTUALCHANNELINIT;


/****************************************************************************/
/* Name: VirtualChannelOpen                                                 */
/*                                                                          */
/* Purpose:                                                                 */
/*                                                                          */
/* This function is called by the application to open a channel.  It cannot */
/* be called until a connection is established with a Server.               */
/*                                                                          */
/* Returns:                                                                 */
/*                                                                          */
/* CHANNEL_RC_OK                                                            */
/* CHANNEL_RC_NOT_INITIALIZED                                               */
/* CHANNEL_RC_NOT_CONNECTED                                                 */
/* CHANNEL_RC_BAD_CHANNEL_NAME                                              */
/* CHANNEL_RC_BAD_INIT_HANDLE                                               */
/*                                                                          */
/* Params:                                                                  */
/*                                                                          */
/* - pInitHandle - handle from VirtualChannelInit                           */
/*                                                                          */
/* - pOpenHandle (returned) - handle to pass to subsequent                  */
/*                            VirtualChannelXxx calls                       */
/* - pChannelName - name of channel to open                                 */
/* - pChannelOpenEventProc - address of VirtualChannelOpenEvent procedure   */
/*                                                                          */
/****************************************************************************/
typedef UINT VCAPITYPE VIRTUALCHANNELOPEN(
                                LPVOID                 pInitHandle,
                                LPDWORD                pOpenHandle,
                                PCHAR                  pChannelName,
                                PCHANNEL_OPEN_EVENT_FN pChannelOpenEventProc);

typedef VIRTUALCHANNELOPEN FAR * PVIRTUALCHANNELOPEN;


/****************************************************************************/
/* Name: VirtualChannelClose                                                */
/*                                                                          */
/* Purpose:                                                                 */
/*                                                                          */
/* This function is called to close a previously opened channel.            */
/*                                                                          */
/* Returns:                                                                 */
/*                                                                          */
/* CHANNEL_RC_OK                                                            */
/* CHANNEL_RC_BAD_CHANNEL_HANDLE                                            */
/*                                                                          */
/* Params:                                                                  */
/*                                                                          */
/* - openHandle - handle returned on VirtualChannelOpen                     */
/*                                                                          */
/****************************************************************************/
typedef UINT VCAPITYPE VIRTUALCHANNELCLOSE(DWORD openHandle);

typedef VIRTUALCHANNELCLOSE FAR * PVIRTUALCHANNELCLOSE;


/****************************************************************************/
/* Name: VirtualChannelWrite                                                */
/*                                                                          */
/* Purpose:                                                                 */
/*                                                                          */
/* This function is used to send data to the partner app on the Server.     */
/*                                                                          */
/* VirtualChannelWrite copies the data to one or more network buffers as    */
/* necessary.  VirtualChannelWrite ensures that data is sent to the Server  */
/* on the right context.  It sends all data on MS TC's Sender thread.       */
/*                                                                          */
/* VirtualChannelWrite is asynchronous - the VirtualChannelOpenEvent        */
/* procedure is called when the write completes.  Until that callback is    */
/* made, the caller must not free or reuse the buffer passed on             */
/* VirtualChannelWrite.  The caller passes a piece of data (pUserData) to   */
/* VirtualChannelWrite, which is returned on the VirtualChannelOpenEvent    */
/* callback.  The caller can use this data to identify the write which has  */
/* completed.                                                               */
/*                                                                          */
/*                                                                          */
/* Returns:                                                                 */
/*                                                                          */
/* CHANNEL_RC_OK                                                            */
/* CHANNEL_RC_NOT_INITIALIZED                                               */
/* CHANNEL_RC_NOT_CONNECTED                                                 */
/* CHANNEL_RC_BAD_CHANNEL_HANDLE                                            */
/*                                                                          */
/* Params:                                                                  */
/* - openHandle - handle from VirtualChannelOpen                            */
/* - pData - data to write                                                  */
/* - datalength - length of data to write                                   */
/* - pUserData - user supplied data, returned on VirtualChannelOpenEvent    */
/*               when the write completes                                   */
/*                                                                          */
/****************************************************************************/
typedef UINT VCAPITYPE VIRTUALCHANNELWRITE(DWORD  openHandle,
                                           LPVOID pData,
                                           ULONG  dataLength,
                                           LPVOID pUserData);

typedef VIRTUALCHANNELWRITE FAR * PVIRTUALCHANNELWRITE;


/****************************************************************************/
/* Structure: CHANNEL_ENTRY_POINTS                                          */
/*                                                                          */
/* Description: Virtual Channel entry points passed to VirtualChannelEntry  */
/****************************************************************************/
typedef struct tagCHANNEL_ENTRY_POINTS
{
    DWORD cbSize;
    DWORD protocolVersion;
    PVIRTUALCHANNELINIT  pVirtualChannelInit;
    PVIRTUALCHANNELOPEN  pVirtualChannelOpen;
    PVIRTUALCHANNELCLOSE pVirtualChannelClose;
    PVIRTUALCHANNELWRITE pVirtualChannelWrite;
} CHANNEL_ENTRY_POINTS, FAR * PCHANNEL_ENTRY_POINTS;


/****************************************************************************/
/* Name: VirtualChannelEntry                                                */
/*                                                                          */
/* Purpose:                                                                 */
/*                                                                          */
/* This function is provided by addin DLLS.  It is called by MSTSC at       */
/* initialization to tell the addin DLL the addresses of the                */
/* VirtualChannelXxx functions.                                             */
/*                                                                          */
/* Returns:                                                                 */
/*                                                                          */
/* TRUE - everything OK                                                     */
/* FALSE - error, unload the DLL                                            */
/*                                                                          */
/* Parameters:                                                              */
/*                                                                          */
/* - pVirtualChannelInit - pointers to VirtualChannelXxx functions          */
/* - pVirtualChannelOpen                                                    */
/* - pVirtualChannelClose                                                   */
/* - pVirtualChannelWrite                                                   */
/*                                                                          */
/****************************************************************************/
typedef BOOL VCAPITYPE VIRTUALCHANNELENTRY(
                                          PCHANNEL_ENTRY_POINTS pEntryPoints);

typedef VIRTUALCHANNELENTRY FAR * PVIRTUALCHANNELENTRY;


#ifdef __cplusplus
}
#endif  /* __cplusplus */

#endif /* H_CCHANNEL */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\CdErr.h ===
/*****************************************************************************\
*                                                                             *
* cderr.h -     Common dialog error return codes                              *
*                                                                             *
* Version 1.0								      *
*                                                                             *
* Copyright (c) 1992-1999, Microsoft Corp.	All rights reserved.	      *
*                                                                             *
\*****************************************************************************/

#ifndef _INC_CDERR
#define _INC_CDERR

#if _MSC_VER > 1000
#pragma once
#endif

#define CDERR_DIALOGFAILURE   0xFFFF

#define CDERR_GENERALCODES     0x0000
#define CDERR_STRUCTSIZE       0x0001
#define CDERR_INITIALIZATION   0x0002
#define CDERR_NOTEMPLATE       0x0003
#define CDERR_NOHINSTANCE      0x0004
#define CDERR_LOADSTRFAILURE   0x0005
#define CDERR_FINDRESFAILURE   0x0006
#define CDERR_LOADRESFAILURE   0x0007
#define CDERR_LOCKRESFAILURE   0x0008
#define CDERR_MEMALLOCFAILURE  0x0009
#define CDERR_MEMLOCKFAILURE   0x000A
#define CDERR_NOHOOK           0x000B
#define CDERR_REGISTERMSGFAIL  0x000C

#define PDERR_PRINTERCODES     0x1000
#define PDERR_SETUPFAILURE     0x1001
#define PDERR_PARSEFAILURE     0x1002
#define PDERR_RETDEFFAILURE    0x1003
#define PDERR_LOADDRVFAILURE   0x1004
#define PDERR_GETDEVMODEFAIL   0x1005
#define PDERR_INITFAILURE      0x1006
#define PDERR_NODEVICES        0x1007
#define PDERR_NODEFAULTPRN     0x1008
#define PDERR_DNDMMISMATCH     0x1009
#define PDERR_CREATEICFAILURE  0x100A
#define PDERR_PRINTERNOTFOUND  0x100B
#define PDERR_DEFAULTDIFFERENT 0x100C

#define CFERR_CHOOSEFONTCODES  0x2000
#define CFERR_NOFONTS          0x2001
#define CFERR_MAXLESSTHANMIN   0x2002

#define FNERR_FILENAMECODES    0x3000
#define FNERR_SUBCLASSFAILURE  0x3001
#define FNERR_INVALIDFILENAME  0x3002
#define FNERR_BUFFERTOOSMALL   0x3003

#define FRERR_FINDREPLACECODES 0x4000
#define FRERR_BUFFERLENGTHZERO 0x4001

#define CCERR_CHOOSECOLORCODES 0x5000

#endif  /* !_INC_CDERR */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\BluetoothAPIs.h ===
//
//  Copyright 2002 - 2004, Microsoft Corporation
//
//////////////////////////////////////////////////////////////////////////////

#pragma once

#include <bthdef.h>


#define BLUETOOTH_MAX_NAME_SIZE             (248)
#define BLUETOOTH_MAX_PASSKEY_SIZE          (16)
#define BLUETOOTH_MAX_PASSKEY_BUFFER_SIZE   (BLUETOOTH_MAX_PASSKEY_SIZE + 1)
#define BLUETOOTH_MAX_SERVICE_NAME_SIZE     (256)
#define BLUETOOTH_DEVICE_NAME_SIZE          (256)


#ifdef __cplusplus
extern "C" {
#endif

#if (NTDDI_VERSION >= NTDDI_WINXPSP2)

    
// ***************************************************************************
//
//  Bluetooth Address
//
// ***************************************************************************

typedef ULONGLONG BTH_ADDR;

typedef struct _BLUETOOTH_ADDRESS {
    union {
        BTH_ADDR ullLong;       //  easier to compare again BLUETOOTH_NULL_ADDRESS
        BYTE    rgBytes[ 6 ];   //  easier to format when broken out
    };

} BLUETOOTH_ADDRESS_STRUCT;

#define BLUETOOTH_ADDRESS BLUETOOTH_ADDRESS_STRUCT

#define BLUETOOTH_NULL_ADDRESS ( (ULONGLONG) 0x0 )



typedef struct _BLUETOOTH_LOCAL_SERVICE_INFO {
    BOOL                Enabled;                        //  If TRUE, the enable the services

    BLUETOOTH_ADDRESS   btAddr;                         //  If service is to be advertised for a particular remote device

    WCHAR szName[ BLUETOOTH_MAX_SERVICE_NAME_SIZE ];    //  SDP Service Name to be advertised.
    WCHAR szDeviceString[ BLUETOOTH_DEVICE_NAME_SIZE ]; //  Local device name (if any) like COM4 or LPT1

} BLUETOOTH_LOCAL_SERVICE_INFO_STRUCT;

#define BLUETOOTH_LOCAL_SERVICE_INFO BLUETOOTH_LOCAL_SERVICE_INFO_STRUCT

typedef BLUETOOTH_LOCAL_SERVICE_INFO * PBLUETOOTH_LOCAL_SERVICE_INFO;





// ***************************************************************************
//
//  Radio Enumeration
//
//  Description:
//      This group of APIs enumerates the installed Bluetooth radios.
//
//  Sample Usage:
//      HANDLE hRadio;
//      BLUETOOTH_FIND_RADIO_PARAMS btfrp = { sizeof(btfrp) };
//
//      HBLUETOOTH_RADIO_FIND hFind = BluetoothFindFirstRadio( &btfrp, &hRadio );
//      if ( NULL != hFind )
//      {
//          do
//          {
//              //
//              //  TODO: Do something with the radio handle.
//              //
//
//              CloseHandle( hRadio );
//
//          } while( BluetoothFindNextRadio( hFind, &hRadio ) );
//
//          BluetoothFindRadioClose( hFind );
//      }
//
// ***************************************************************************

typedef struct _BLUETOOTH_FIND_RADIO_PARAMS {
    DWORD   dwSize;             //  IN  sizeof this structure

} BLUETOOTH_FIND_RADIO_PARAMS;

typedef HANDLE      HBLUETOOTH_RADIO_FIND;

//
//  Description:
//      Begins the enumeration of local Bluetooth radios.
//
//  Parameters:
//      pbtfrp
//          A pointer to a BLUETOOTH_FIND_RADIO_PARAMS structure. The dwSize 
//          member of this structure must match the sizeof the of the structure.
//
//      phRadio
//          A pointer where the first radio HANDLE enumerated will be returned.
//
//  Return Values:
//      NULL
//          Error opening radios or no devices found. Use GetLastError() for
//          more info.
//
//          ERROR_INVALID_PARAMETER
//              pbtfrp parameter is NULL.
//
//          ERROR_REVISION_MISMATCH
//              The pbtfrp structure is not the right length.
//
//          ERROR_OUTOFMEMORY
//              Out of memory.
//
//          other Win32 errors.
//
//      any other
//          Success. The return handle is valid and phRadio points to a valid handle.
//
__checkReturn
HBLUETOOTH_RADIO_FIND
WINAPI
BluetoothFindFirstRadio(
    __in const BLUETOOTH_FIND_RADIO_PARAMS * pbtfrp,
    __out HANDLE *                      phRadio
    );

//
//  Description:
//      Finds the next installed Bluetooth radio.
//
//  Parameters:
//      hFind
//          The handle returned by BluetoothFindFirstRadio().
//
//      phRadio
//          A pointer where the next radio HANDLE enumerated will be returned.
//
//  Return Values:
//      TRUE
//          Next device succesfully found. pHandleOut points to valid handle.
//
//      FALSE
//          No device found. pHandleOut points to an invalid handle. Call
//          GetLastError() for more details.
//
//          ERROR_INVALID_HANDLE
//              The handle is NULL.
//
//          ERROR_NO_MORE_ITEMS
//              No more radios found.
//
//          ERROR_OUTOFMEMORY
//              Out of memory.
//
//          other Win32 errors
//
__checkReturn
BOOL
WINAPI
BluetoothFindNextRadio(
    __in  HBLUETOOTH_RADIO_FIND hFind,
    __out HANDLE * phRadio
    );

//
//  Description:
//      Closes the enumeration handle.
//
//  Parameters
//      hFind
//          The handle returned by BluetoothFindFirstRadio().
//
//  Return Values:
//      TRUE
//          Handle succesfully closed.
//
//      FALSE
//          Failure. Check GetLastError() for details.
//
//          ERROR_INVALID_HANDLE
//              The handle is NULL.
//
BOOL
WINAPI
BluetoothFindRadioClose(
    __in HBLUETOOTH_RADIO_FIND hFind
    );

// ***************************************************************************
//
//  Radio Information
//
// ***************************************************************************

typedef struct _BLUETOOTH_RADIO_INFO {
    DWORD dwSize;                               // Size, in bytes, of this entire data structure

    BLUETOOTH_ADDRESS address;                  // Address of the local radio

    WCHAR szName[ BLUETOOTH_MAX_NAME_SIZE ];    // Name of the local radio

    ULONG ulClassofDevice;                      // Class of device for the local radio

    USHORT lmpSubversion;                       // lmpSubversion, manufacturer specifc.
    USHORT manufacturer;                        // Manufacturer of the radio, BTH_MFG_Xxx value.  For the most up to date
                                                // list, goto the Bluetooth specification website and get the Bluetooth
                                                // assigned numbers document.
} BLUETOOTH_RADIO_INFO, *PBLUETOOTH_RADIO_INFO;

//
//  Description:
//      Retrieves the information about the radio represented by the handle.
//
//  Parameters:
//      hRadio
//          Handle to a local radio retrieved through BluetoothFindFirstRadio()
//          et al or SetupDiEnumerateDeviceInterfaces()
//
//      pRadioInfo
//          Radio information to be filled in. The dwSize member must match the 
//          size of the structure.
//
//  Return Values:
//      ERROR_SUCCESS
//          The information was retrieved successfully.
//
//      ERROR_INVALID_PARAMETER
//          pRadioInfo or hRadio is NULL.
//
//      ERROR_REVISION_MISMATCH
//          pRadioInfo->dwSize is invalid.
//
//      other Win32 error codes.
//
__checkReturn
DWORD
WINAPI
BluetoothGetRadioInfo(
    __in    HANDLE hRadio,
    __inout PBLUETOOTH_RADIO_INFO pRadioInfo
    );

// ***************************************************************************
//
//  Device Information Stuctures
//
// ***************************************************************************

typedef __struct_bcount(dwSize) struct _BLUETOOTH_DEVICE_INFO {
    __field_range(==, sizeof(BLUETOOTH_DEVICE_INFO_STRUCT))
    DWORD   dwSize;                             //  size, in bytes, of this structure - must be the sizeof(BLUETOOTH_DEVICE_INFO)

    BLUETOOTH_ADDRESS Address;                  //  Bluetooth address

    ULONG   ulClassofDevice;                    //  Bluetooth "Class of Device"

    BOOL    fConnected;                         //  Device connected/in use
    BOOL    fRemembered;                        //  Device remembered
    BOOL    fAuthenticated;                     //  Device authenticated/paired/bonded

    SYSTEMTIME  stLastSeen;                     //  Last time the device was seen
    SYSTEMTIME  stLastUsed;                     //  Last time the device was used for other than RNR, inquiry, or SDP

    WCHAR   szName[ BLUETOOTH_MAX_NAME_SIZE ];  //  Name of the device

} BLUETOOTH_DEVICE_INFO_STRUCT;

#define BLUETOOTH_DEVICE_INFO BLUETOOTH_DEVICE_INFO_STRUCT

typedef BLUETOOTH_DEVICE_INFO * PBLUETOOTH_DEVICE_INFO;

//
// Support added after KB942567
//
#if (NTDDI_VERSION > NTDDI_VISTASP1 || \
    (NTDDI_VERSION == NTDDI_VISTASP1 && defined(VISTA_KB942567)))

typedef enum _BLUETOOTH_AUTHENTICATION_METHOD {
    BLUETOOTH_AUTHENTICATION_METHOD_LEGACY     = 0x1,
    BLUETOOTH_AUTHENTICATION_METHOD_OOB,
    BLUETOOTH_AUTHENTICATION_METHOD_NUMERIC_COMPARISON,
    BLUETOOTH_AUTHENTICATION_METHOD_PASSKEY_NOTIFICATION,
    BLUETOOTH_AUTHENTICATION_METHOD_PASSKEY
} BLUETOOTH_AUTHENTICATION_METHOD, * PBLUETOOTH_AUTHENTICATION_METHOD;

typedef enum _BLUETOOTH_IO_CAPABILITY {
    BLUETOOTH_IO_CAPABILITY_DISPLAYONLY    = 0x00,
    BLUETOOTH_IO_CAPABILITY_DISPLAYYESNO    = 0x01,   
    BLUETOOTH_IO_CAPABILITY_KEYBOARDONLY    = 0x02,
    BLUETOOTH_IO_CAPABILITY_NOINPUTNOOUTPUT = 0x03,
    BLUETOOTH_IO_CAPABILITY_UNDEFINED       = 0xff
}BLUETOOTH_IO_CAPABILITY;

typedef enum _BLUETOOTH_AUTHENTICATION_REQUIREMENTS{	
    BLUETOOTH_MITM_ProtectionNotRequired        = 0,
	BLUETOOTH_MITM_ProtectionRequired	        = 0x1,
	BLUETOOTH_MITM_ProtectionNotRequiredBonding	= 0x2,
	BLUETOOTH_MITM_ProtectionRequiredBonding	= 0x3,
	BLUETOOTH_MITM_ProtectionNotRequiredGeneralBonding	= 0x4,
	BLUETOOTH_MITM_ProtectionRequiredGeneralBonding	= 0x5,
	BLUETOOTH_MITM_ProtectionNotDefined	        = 0xff
}BLUETOOTH_AUTHENTICATION_REQUIREMENTS;


typedef struct _BLUETOOTH_AUTHENTICATION_CALLBACK_PARAMS {
    BLUETOOTH_DEVICE_INFO           deviceInfo;
    BLUETOOTH_AUTHENTICATION_METHOD authenticationMethod;
    BLUETOOTH_IO_CAPABILITY         ioCapability;
    BLUETOOTH_AUTHENTICATION_REQUIREMENTS authenticationRequirements;

    union{
        ULONG   Numeric_Value;
        ULONG   Passkey;
    };
}BLUETOOTH_AUTHENTICATION_CALLBACK_PARAMS, *PBLUETOOTH_AUTHENTICATION_CALLBACK_PARAMS;

#endif // >= SP1+KB942567
    
// ***************************************************************************
//
//  Device Enumeration
//
//  Description:
//      Enumerates the Bluetooth devices. The types of returned device depends
//      on the flags set in the BLUETOOTH_DEVICE_SEARCH_PARAMS (see structure
//      definition for details).
//
//  Sample Usage:
//      HBLUETOOTH_DEVICE_FIND hFind;
//      BLUETOOTH_DEVICE_SEARCH_PARAMS btsp = { sizeof(btsp) };
//      BLUETOOTH_DEVICE_INFO btdi = { sizeof(btdi) };
//
//      btsp.fReturnAuthenticated = TRUE;
//      btsp.fReturnRemembered    = TRUE;
//
//      hFind = BluetoothFindFirstDevice( &btsp, &btdi );
//      if ( NULL != hFind )
//      {
//          do
//          {
//              //
//              //  TODO:   Do something useful with the device info.
//              //
//
//          } while( BluetoothFindNextDevice( hFind, &btdi ) );
//
//          BluetoothFindDeviceClose( hFind );
//      }
//
// ***************************************************************************

typedef struct _BLUETOOTH_DEVICE_SEARCH_PARAMS {
    DWORD   dwSize;                 //  IN  sizeof this structure

    BOOL    fReturnAuthenticated;   //  IN  return authenticated devices
    BOOL    fReturnRemembered;      //  IN  return remembered devices
    BOOL    fReturnUnknown;         //  IN  return unknown devices
    BOOL    fReturnConnected;       //  IN  return connected devices

    BOOL    fIssueInquiry;          //  IN  issue a new inquiry
    UCHAR   cTimeoutMultiplier;     //  IN  timeout for the inquiry

    HANDLE  hRadio;                 //  IN  handle to radio to enumerate - NULL == all radios will be searched

} BLUETOOTH_DEVICE_SEARCH_PARAMS;

typedef HANDLE      HBLUETOOTH_DEVICE_FIND;

//
//  Description:
//      Begins the enumeration of Bluetooth devices.
//
//  Parameters:
//      pbtsp
//          A pointer to a BLUETOOTH_DEVICE_SEARCH_PARAMS structure. This
//          structure contains the flags and inputs used to conduct the search.
//          See BLUETOOTH_DEVICE_SEARCH_PARAMS for details.
//
//      pbtdi
//          A pointer to a BLUETOOTH_DEVICE_INFO structure to return information
//          about the first Bluetooth device found. Note that the dwSize member
//          of the structure must be the sizeof(BLUETOOTH_DEVICE_INFO) before
//          calling because the APIs hast to know the size of the buffer being
//          past in. The dwSize member must also match the exact 
//          sizeof(BLUETOOTH_DEVICE_INFO) or the call will fail.
//
//  Return Values:
//      NULL
//          Error opening radios or not devices found. Use GetLastError for more info.
//
//          ERROR_INVALID_PARAMETER
//              pbtsp parameter or pbtdi parameter is NULL.
//
//          ERROR_REVISION_MISMATCH
//              The pbtfrp structure is not the right length.
//
//          other Win32 errors
//
//      any other value
//          Success. The return handle is valid and pbtdi points to valid data.
//
__checkReturn
HBLUETOOTH_DEVICE_FIND
WINAPI
BluetoothFindFirstDevice(
    __in const   BLUETOOTH_DEVICE_SEARCH_PARAMS * pbtsp,
    __inout BLUETOOTH_DEVICE_INFO *   pbtdi
    );

//
//  Description:
//      Finds the next Bluetooth device in the enumeration.
//
//  Parameters:
//      hFind
//          The handle returned from BluetoothFindFirstDevice().
//
//      pbtdi
//          A pointer to a BLUETOOTH_DEVICE_INFO structure to return information
//          about the first Bluetooth device found. Note that the dwSize member
//          of the structure must be the sizeof(BLUETOOTH_DEVICE_INFO) before
//          calling because the APIs hast to know the size of the buffer being
//          past in. The dwSize member must also match the exact 
//          sizeof(BLUETOOTH_DEVICE_INFO) or the call will fail.
//
//  Return Values:
//      TRUE
//          Next device succesfully found. pHandleOut points to valid handle.
//
//      FALSE
//          No device found. pHandleOut points to an invalid handle. Call
//          GetLastError() for more details.
//
//          ERROR_INVALID_HANDLE
//              The handle is NULL.
//
//          ERROR_NO_MORE_ITEMS
//              No more radios found.
//
//          ERROR_OUTOFMEMORY
//              Out of memory.
//
//          other Win32 errors
//
__checkReturn
BOOL
WINAPI
BluetoothFindNextDevice(
    __in    HBLUETOOTH_DEVICE_FIND  hFind,
    __inout BLUETOOTH_DEVICE_INFO * pbtdi
    );

//
//  Description:
//      Closes the enumeration handle.
//
//  Parameters:
//      hFind
//          The handle returned from BluetoothFindFirstDevice().
//
//  Return Values:
//      TRUE
//          Handle succesfully closed.
//
//      FALSE
//          Failure. Check GetLastError() for details.
//
//          ERROR_INVALID_HANDLE
//              The handle is NULL.
//
BOOL
WINAPI
BluetoothFindDeviceClose(
    __in HBLUETOOTH_DEVICE_FIND hFind
    );

//
//  Description:
//      Retrieves information about a remote device.
//
//      Fill in the dwSize and the Address members of the pbtdi structure
//      being passed in. On success, the rest of the members will be filled
//      out with the information that the system knows.
//
//  Parameters:
//      hRadio
//          Handle to a local radio retrieved through BluetoothFindFirstRadio()
//          et al or SetupDiEnumerateDeviceInterfaces()
//
//      pbtdi
//          A pointer to a BLUETOOTH_DEVICE_INFO structure to return information
//          about the first Bluetooth device found. The dwSize member of the
//          structure must be the sizeof the structure in bytes. The Address
//          member must be filled out with the Bluetooth address of the remote
//          device.
//
//  Return Values:
//      ERROR_SUCCESS
//          Success. Information returned.
//
//      ERROR_REVISION_MISMATCH
//          The size of the BLUETOOTH_DEVICE_INFO isn't compatible. Check
//          the dwSize member of the BLUETOOTH_DEVICE_INFO structure you
//          passed in.
//
//      ERROR_NOT_FOUND
//          The radio is not known by the system or the Address field of
//          the BLUETOOTH_DEVICE_INFO structure is all zeros.
//
//      ERROR_INVALID_PARAMETER
//          pbtdi is NULL.
//
//      other error codes
//
__checkReturn
DWORD
WINAPI
BluetoothGetDeviceInfo(
    __in_opt HANDLE  hRadio,
    __inout BLUETOOTH_DEVICE_INFO * pbtdi
    );

//
//  Description:
//      Updates the computer local cache about the device. 
//
//  Parameters:
//      pbtdi
//          A pointer to the BLUETOOTH_DEVICE_INFO structure to be updated.
//          The following members must be valid:
//              dwSize
//                  Must match the size of the structure.
//              Address
//                  Must be a previously found radio address.
//              szName
//                  New name to be stored.
//
//  Return Values:
//      ERROR_SUCCESS
//          The device information was updated successfully.
//
//      ERROR_INVALID_PARAMETER
//          pbtdi is NULL.
//
//      ERROR_REVISION_MISMATCH
//          pbtdi->dwSize is invalid.
//
//      other Win32 error codes.
//
__checkReturn
DWORD
WINAPI
BluetoothUpdateDeviceRecord(
    __in const BLUETOOTH_DEVICE_INFO * pbtdi
    );

//
//  Description:
//      Delete the authentication (aka "bond") between the computer and the
//      device. Also purges any cached information about the device.
//
//  Return Values:
//      ERROR_SUCCESS
//          The device was removed successfully.
//
//      ERROR_NOT_FOUND
//          The device was not found. If no Bluetooth radio is installed,
//          the devices could not be enumerated or removed.
//
DWORD
WINAPI
BluetoothRemoveDevice(
    __in const BLUETOOTH_ADDRESS * pAddress
    );

// ***************************************************************************
//
//  Device Picker Dialog
//
//  Description:
//      Invokes a common dialog for selecting Bluetooth devices. The list
//      of devices displayed to the user is determined by the flags and
//      settings the caller specifies in the BLUETOOTH_SELECT_DEVICE_PARAMS
//      (see structure definition for more details).
//
//      If BluetoothSelectDevices() returns TRUE, the caller must call
//      BluetoothSelectDevicesFree() or memory will be leaked within the
//      process.
//
//  Sample Usage:
//
//      BLUETOOTH_SELECT_DEVICE_PARAMS btsdp = { sizeof(btsdp) };
//
//      btsdp.hwndParent = hDlg;
//      btsdp.fShowUnknown = TRUE;
//      btsdp.fAddNewDeviceWizard = TRUE;
//
//      BOOL b = BluetoothSelectDevices( &btsdp );
//      if ( b )
//      {
//          BLUETOOTH_DEVICE_INFO * pbtdi = btsdp.pDevices;
//          for ( ULONG cDevice = 0; cDevice < btsdp.cNumDevices; cDevice ++ )
//          {
//              if ( pbtdi->fAuthenticated || pbtdi->fRemembered )
//              {
//                  //
//                  //  TODO:   Do something usefull with the device info
//                  //
//              }
//
//              pbtdi = (BLUETOOTH_DEVICE_INFO *) ((LPBYTE)pbtdi + pbtdi->dwSize);
//          }
//
//          BluetoothSelectDevicesFree( &btsdp );
//      }
//
// ***************************************************************************


typedef struct _BLUETOOTH_COD_PAIRS {
    ULONG   ulCODMask;                          //  ClassOfDevice mask to compare
    LPCWSTR pcszDescription;                    //  Descriptive string of mask

} BLUETOOTH_COD_PAIRS;

typedef BOOL (WINAPI *PFN_DEVICE_CALLBACK)(LPVOID pvParam, const BLUETOOTH_DEVICE_INFO * pDevice);

typedef struct _BLUETOOTH_SELECT_DEVICE_PARAMS {
    DWORD   dwSize;                             //  IN  sizeof this structure

    ULONG   cNumOfClasses;                      //  IN  Number in prgClassOfDevice - if ZERO search for all devices
    BLUETOOTH_COD_PAIRS * prgClassOfDevices;    //  IN  Array of CODs to find.

    LPWSTR  pszInfo;                            //  IN  If not NULL, sets the "information" text

    HWND    hwndParent;                         //  IN  parent window - NULL == no parent

    BOOL    fForceAuthentication;               //  IN  If TRUE, authenication will be forced before returning
    BOOL    fShowAuthenticated;                 //  IN  If TRUE, authenticated devices will be shown in the picker
    BOOL    fShowRemembered;                    //  IN  If TRUE, remembered devices will be shown in the picker
    BOOL    fShowUnknown;                       //  IN  If TRUE, unknown devices that are not authenticated or "remember" will be shown.

    BOOL    fAddNewDeviceWizard;                //  IN  If TRUE, invokes the add new device wizard.
    BOOL    fSkipServicesPage;                  //  IN  If TRUE, skips the "Services" page in the wizard.

    PFN_DEVICE_CALLBACK pfnDeviceCallback;      //  IN  If non-NULL, a callback that will be called for each device. If the
                                                //      the callback returns TRUE, the item will be added. If the callback is
                                                //      is FALSE, the item will not be shown.
    LPVOID  pvParam;                            //  IN  Parameter to be passed to pfnDeviceCallback as the pvParam.

    DWORD   cNumDevices;                        //  IN  number calles wants - ZERO == no limit.
                                                //  OUT the number of devices returned.

    __field_ecount_opt(cNumDevices) PBLUETOOTH_DEVICE_INFO  pDevices;           //  OUT pointer to an array for BLUETOOTH_DEVICE_INFOs.
                                                //      call BluetoothSelectDevicesFree() to free

} BLUETOOTH_SELECT_DEVICE_PARAMS;

//
//  Description:
//      (See header above)
//
//  Return Values:
//      TRUE
//          User selected a device. pbtsdp->pDevices points to valid data.
//          Caller should check the fAuthenticated && fRemembered flags to
//          determine which devices we successfuly authenticated or valid
//          selections by the user.
//
//          Use BluetoothSelectDevicesFree() to free the nessecary data
//          such as pDevices only if this function returns TRUE.
//
//      FALSE
//          No valid data returned. Call GetLastError() for possible details
//          of the failure. If GLE() is:
//
//          ERROR_CANCELLED
//              The user cancelled  the request.
//
//          ERROR_INVALID_PARAMETER
//              The pbtsdp is NULL.
//
//          ERROR_REVISION_MISMATCH
//              The structure passed in as pbtsdp is of an unknown size.
//
//          other WIN32 errors
//
__checkReturn
BOOL
WINAPI
BluetoothSelectDevices(
    __inout BLUETOOTH_SELECT_DEVICE_PARAMS * pbtsdp
    );

//
//  Description:
//      This function should only be called if BluetoothSelectDevices() returns
//      TRUE. This function will free any memory and resource returned by the 
//      BluetoothSelectDevices() in the BLUETOOTH_SELECT_DEVICE_PARAMS 
//      structure.
//
//  Return Values:
//      TRUE
//          Success.
//
//      FALSE
//          Nothing to free.
//
BOOL
WINAPI
BluetoothSelectDevicesFree(
    __inout BLUETOOTH_SELECT_DEVICE_PARAMS * pbtsdp
    );

// ***************************************************************************
//
//  Device Property Sheet
//
// ***************************************************************************

//
//  Description:
//      Invokes the CPLs device info property sheet.
//
//  Parameters:
//      hwndParent
//          HWND to parent the property sheet.
//
//      pbtdi
//          A pointer to a BLUETOOTH_DEVICE_INFO structure of the device
//          to be displayed.
//
//  Return Values:
//      TRUE
//          The property page was successfully displayed.
//
//      FALSE
//          Failure. The property page was not displayed. Check GetLastError
//          for more details.
//
BOOL
WINAPI
BluetoothDisplayDeviceProperties(
    __in_opt HWND hwndParent,
    __inout BLUETOOTH_DEVICE_INFO * pbtdi
    );


// ***************************************************************************
//
//  Radio Authentication
//
// ***************************************************************************

//
//  Description:
//      Sends an authentication request to a remote device. 
//
//      There are two modes of operation. "Wizard mode" and "Blind mode."
//
//      "Wizard mode" is invoked when the pszPasskey is NULL. This will cause
//      the "Bluetooth Connection Wizard" to be invoked. The user will be
//      prompted to enter a passkey during the wizard after which the
//      authentication request will be sent. The user will see the success
//      or failure of the authentication attempt. The user will also be
//      given the oppurtunity to try to fix a failed authentication.
//
//      "Blind mode" is invoked when the pszPasskey is non-NULL. This will
//      cause the computer to send a authentication request to the remote
//      device. No UI is ever displayed. The Bluetooth status code will be
//      mapped to a Win32 Error code.
//
//  Parameters:
//
//      hwndParent
//          The window to parent the authentication wizard. If NULL, the 
//          wizard will be parented off the desktop.
//
//      hRadio
//          A valid local radio handle or NULL. If NULL, then all radios will
//          be tired. If any of the radios succeed, then the call will
//          succeed.
//
//      pbtdi
//          BLUETOOTH_DEVICE_INFO record of the device to be authenticated.
//
//      pszPasskey
//          PIN to be used to authenticate the device.  If NULL, then UI is
//          displayed and the user steps through the authentication process.
//          If not NULL, no UI is shown.  The passkey is NOT NULL terminated.
//
//      ulPasskeyLength
//          Length of szPassKey in bytes. The length must be less than or 
//          equal to BLUETOOTH_MAX_PASSKEY_SIZE * sizeof(WCHAR).
//
//  Return Values:
//
//      ERROR_SUCCESS
//          Success.
//
//      ERROR_CANCELLED
//          User aborted the operation.
//
//      ERROR_INVALID_PARAMETER
//          The device structure in pbtdi is invalid.
//
//      ERROR_NO_MORE_ITEMS
//          The device in pbtdi is already been marked as authenticated.
//
//      other WIN32 error
//          Failure. Return value is the error code.
//
//      For "Blind mode," here is the current mapping of Bluetooth status
//      code to Win32 error codes:
//
//          { BTH_ERROR_SUCCESS,                ERROR_SUCCESS },
//          { BTH_ERROR_NO_CONNECTION,          ERROR_DEVICE_NOT_CONNECTED },
//          { BTH_ERROR_PAGE_TIMEOUT,           WAIT_TIMEOUT },
//          { BTH_ERROR_HARDWARE_FAILURE,       ERROR_GEN_FAILURE },
//          { BTH_ERROR_AUTHENTICATION_FAILURE, ERROR_NOT_AUTHENTICATED },
//          { BTH_ERROR_MEMORY_FULL,            ERROR_NOT_ENOUGH_MEMORY },
//          { BTH_ERROR_CONNECTION_TIMEOUT,     WAIT_TIMEOUT },
//          { BTH_ERROR_LMP_RESPONSE_TIMEOUT,   WAIT_TIMEOUT },
//          { BTH_ERROR_MAX_NUMBER_OF_CONNECTIONS, ERROR_REQ_NOT_ACCEP },
//          { BTH_ERROR_PAIRING_NOT_ALLOWED,    ERROR_ACCESS_DENIED },
//          { BTH_ERROR_UNSPECIFIED_ERROR,      ERROR_NOT_READY },
//          { BTH_ERROR_LOCAL_HOST_TERMINATED_CONNECTION, ERROR_VC_DISCONNECTED },
//
__checkReturn
DWORD
WINAPI
BluetoothAuthenticateDevice(
    __in_opt HWND hwndParent,
    __in_opt HANDLE hRadio,
    __inout  BLUETOOTH_DEVICE_INFO * pbtbi,
    __in_ecount_opt(ulPasskeyLength) PWSTR pszPasskey,
    __in ULONG ulPasskeyLength
    );


//
// Support added after KB942567
//
#if (NTDDI_VERSION > NTDDI_VISTASP1 || \
    (NTDDI_VERSION == NTDDI_VISTASP1 && defined(VISTA_KB942567)))

//
// Replaces previous API
//
#pragma deprecate("BluetoothAuthenticateDevice")
    
//
// Common header for all PIN related structures
//
typedef struct _BLUETOOTH_PIN_INFO {
    UCHAR pin[BTH_MAX_PIN_SIZE];
    UCHAR pinLength;
} BLUETOOTH_PIN_INFO, *PBLUETOOTH_PIN_INFO;

typedef struct _BLUETOOTH_OOB_DATA_INFO {
    UCHAR       C[16];
    UCHAR       R[16];
}BLUETOOTH_OOB_DATA_INFO, *PBLUETOOTH_OOB_DATA_INFO;

typedef struct _BLUETOOTH_NUMERIC_COMPARISON_INFO {
    ULONG       NumericValue;
}BLUETOOTH_NUMERIC_COMPARISON_INFO, *PBLUETOOTH_NUMERIC_COMPARISON_INFO;

typedef struct _BLUETOOTH_PASSKEY_INFO {
    ULONG       passkey;
}BLUETOOTH_PASSKEY_INFO, *PBLUETOOTH_PASSKEY_INFO;

//
//  Description:
//      Sends an authentication request to a remote device. 
//
//      There are two modes of operation. "Wizard mode" and "Blind mode."
//
//      "Wizard mode" is invoked when the pbtOobData is NULL. This will cause
//      the "Bluetooth Connection Wizard" to be invoked. The user will be
//      prompted to respond to the device authentication during the wizard 
//      after which the authentication request will be sent. The user will see the success
//      or failure of the authentication attempt. The user will also be
//      given the oppurtunity to try to fix a failed authentication.
//
//      "Blind mode" is invoked when the pbtOobData is non-NULL. This will
//      cause the computer to send a authentication request to the remote
//      device. No UI is ever displayed. The Bluetooth status code will be
//      mapped to a Win32 Error code.
//
//  Parameters:
//
//      hwndParent
//          The window to parent the authentication wizard. If NULL, the 
//          wizard will be parented off the desktop.
//
//      hRadio
//          A valid local radio handle or NULL. If NULL, then all radios will
//          be tired. If any of the radios succeed, then the call will
//          succeed.
//
//      pbtdi
//          BLUETOOTH_DEVICE_INFO record of the device to be authenticated.
//
//      pbtOobData
//          Out of band data to be used to authenticate the device.  If NULL, then UI is
//          displayed and the user steps through the authentication process.
//          If not NULL, no UI is shown.
//
//      authenticationRequirement
//          The Authentication Requirement of the caller.  MITMProtection*
//
//
//  Return Values:
//
//      ERROR_SUCCESS
//          Success.
//
//      ERROR_CANCELLED
//          User aborted the operation.
//
//      ERROR_INVALID_PARAMETER
//          The device structure in pbtdi is invalid.
//
//      ERROR_NO_MORE_ITEMS
//          The device in pbtdi is already been marked as authenticated.
//
//      other WIN32 error
//          Failure. Return value is the error code.
//
//      For "Blind mode," here is the current mapping of Bluetooth status
//      code to Win32 error codes:
//
//          { BTH_ERROR_SUCCESS,                ERROR_SUCCESS },
//          { BTH_ERROR_NO_CONNECTION,          ERROR_DEVICE_NOT_CONNECTED },
//          { BTH_ERROR_PAGE_TIMEOUT,           WAIT_TIMEOUT },
//          { BTH_ERROR_HARDWARE_FAILURE,       ERROR_GEN_FAILURE },
//          { BTH_ERROR_AUTHENTICATION_FAILURE, ERROR_NOT_AUTHENTICATED },
//          { BTH_ERROR_MEMORY_FULL,            ERROR_NOT_ENOUGH_MEMORY },
//          { BTH_ERROR_CONNECTION_TIMEOUT,     WAIT_TIMEOUT },
//          { BTH_ERROR_LMP_RESPONSE_TIMEOUT,   WAIT_TIMEOUT },
//          { BTH_ERROR_MAX_NUMBER_OF_CONNECTIONS, ERROR_REQ_NOT_ACCEP },
//          { BTH_ERROR_PAIRING_NOT_ALLOWED,    ERROR_ACCESS_DENIED },
//          { BTH_ERROR_UNSPECIFIED_ERROR,      ERROR_NOT_READY },
//          { BTH_ERROR_LOCAL_HOST_TERMINATED_CONNECTION, ERROR_VC_DISCONNECTED },
//
__checkReturn
DWORD
WINAPI
BluetoothAuthenticateDeviceEx(
      __in_opt HWND hwndParentIn
    , __in_opt HANDLE hRadioIn
    , __inout BLUETOOTH_DEVICE_INFO * pbtdiInout
    , __in_opt PBLUETOOTH_OOB_DATA_INFO pbtOobData
    , __in AUTHENTICATION_REQUIREMENTS authenticationRequirement
    );

#endif // >= SP1+KB942567

//
//  Description:
//      Allows the caller to prompt for multiple devices to be authenticated
//      within a single instance of the "Bluetooth Connection Wizard."
//
//  Parameters:
//
//      hwndParent
//          The window to parent the authentication wizard. If NULL, the 
//          wizard will be parented off the desktop.
//
//      hRadio
//          A valid local radio handle or NULL. If NULL, then all radios will
//          be tired. If any of the radios succeed, then the call will
//          succeed.
//
//      cDevices
//          Number of devices in the rgbtdi array.
//
//      rgbtdi
//          An array BLUETOOTH_DEVICE_INFO records of the devices to be
//          authenticated.
//
//  Return Values:
//
//      ERROR_SUCCESS
//          Success. Check the fAuthenticate flag on each of the devices.
//
//      ERROR_CANCELLED
//          User aborted the operation. Check the fAuthenticate flags on 
//          each device to determine if any of the devices were authenticated
//          before the user cancelled the operation.
//
//      ERROR_INVALID_PARAMETER
//          One of the items in the array of devices is invalid.
//
//      ERROR_NO_MORE_ITEMS
//          All the devices in the array of devices are already been marked as
//          being authenticated.
//
//      other WIN32 error
//          Failure. Return value is the error code.
//
__checkReturn
DWORD
WINAPI
BluetoothAuthenticateMultipleDevices(
    __in_opt HWND hwndParent,
    __in_opt HANDLE hRadio,
    __in DWORD cDevices,
    __inout_ecount(cDevices) BLUETOOTH_DEVICE_INFO * rgbtdi
    );

//
// Deprecated after Vista SP1 and KB942567
//
#if (NTDDI_VERSION > NTDDI_VISTASP1 || \
    (NTDDI_VERSION == NTDDI_VISTASP1 && defined(VISTA_KB942567)))

#pragma deprecate("BluetoothAuthenticateMultipleDevices")

#endif // >= SP1+KB942567
    

// ***************************************************************************
//
//  Bluetooth Services
//
// ***************************************************************************

#define BLUETOOTH_SERVICE_DISABLE   0x00
#define BLUETOOTH_SERVICE_ENABLE    0x01
#define BLUETOOTH_SERVICE_MASK      ( BLUETOOTH_ENABLE_SERVICE | BLUETOOTH_DISABLE_SERVICE )

//
//  Description:
//      Enables/disables the services for a particular device.
//
//      The system maintains a mapping of service guids to supported drivers for
//      Bluetooth-enabled devices. Enabling a service installs the corresponding
//      device driver. Disabling a service removes the corresponding device driver.
//
//      If a non-supported service is enabled, a driver will not be installed.
//
//  Parameters
//      hRadio
//          Handle of the local Bluetooth radio device.
//
//      pbtdi
//          Pointer to a BLUETOOTH_DEVICE_INFO record.
//
//      pGuidService
//          The service GUID on the remote device.
//
//      dwServiceFlags
//          Flags to adjust the service.
//              BLUETOOTH_SERVICE_DISABLE   -   disable the service
//              BLUETOOTH_SERVICE_ENABLE    -   enables the service
//
//  Return Values:
//      ERROR_SUCCESS
//          The call was successful.
//
//      ERROR_INVALID_PARAMETER
//          dwServiceFlags are invalid.
//
//      ERROR_SERVICE_DOES_NOT_EXIST
//          The GUID in pGuidService is not supported.
//
//      other WIN32 error
//          The call failed.
//
__checkReturn
DWORD
WINAPI
BluetoothSetServiceState(
    __in_opt HANDLE  hRadio,
    __in const BLUETOOTH_DEVICE_INFO * pbtdi,
    __in const GUID *  pGuidService,
    __in DWORD   dwServiceFlags
    );

//
//  Description:
//      Enumerates the services guids enabled on a particular device. If hRadio
//      is NULL, all device will be searched for the device and all the services 
//      enabled will be returned.
//
//  Parameters:
//      hRadio
//          Handle of the local Bluetooth radio device. If NULL, it will search
//          all the radios for the address in the pbtdi.
//
//      pbtdi
//          Pointer to a BLUETOOTH_DEVICE_INFO record.
//
//      pcService
//          On input, the number of records pointed to by pGuidServices.
//          On output, the number of valid records return in pGuidServices.
//
//      pGuidServices
//          Pointer to memory that is at least *pcService in length.
//
//  Return Values:
//      ERROR_SUCCESS
//          The call succeeded. pGuidServices is valid.
//
//      ERROR_MORE_DATA
//          The call succeeded. pGuidService contains an incomplete list of
//          enabled service GUIDs.
//
//      other WIN32 errors
//          The call failed.
//
__checkReturn
__success(return == 0)
DWORD
WINAPI
BluetoothEnumerateInstalledServices(
    __in_opt HANDLE  hRadio,
    __in const BLUETOOTH_DEVICE_INFO * pbtdi,
    __inout DWORD * pcServices,
    __out_ecount_part_opt(*pcServiceInout, *pcServiceInout) GUID *  pGuidServices
    );

//
//  Description:
//      Change the discovery state of the local radio(s).
//      If hRadio is NULL, all the radios will be set.
//
//      Use BluetoothIsDiscoverable() to determine the radios current state.
//
//      The system ensures that a discoverable system is connectable, thus
//      the radio must allow incoming connections (see 
//      BluetoothEnableIncomingConnections) prior to making a radio 
//      discoverable. Failure to do so will result in this call failing
//      (returns FALSE).
//
//  Parameters:
//      hRadio
//          If not NULL, changes the state of a specific radio.
//          If NULL, the API will interate through all the radios.
//
//      fEnabled
//          If FALSE, discovery will be disabled.
//
//  Return Values
//      TRUE
//          State was successfully changed. If the caller specified NULL for
//          hRadio, at least of the radios accepted the state change.
//
//      FALSE
//          State was not changed. If the caller specified NULL for hRadio, all
//          of the radios did not accept the state change.
//
BOOL
WINAPI
BluetoothEnableDiscovery(
    __in_opt HANDLE hRadio,
    __in BOOL fEnabled
    );

//
//  Description:
//      Determines if the Bluetooth radios are discoverable. If there are 
//      multiple radios, the first one to say it is discoverable will cause 
//      this function to return TRUE.
//
//  Parameters:
//      hRadio
//          Handle of the radio to check. If NULL, it will check all local
//          radios.
//
//  Return Values:
//      TRUE
//          A least one radio is discoverable.
//
//      FALSE
//          No radios are discoverable.
//
__checkReturn
BOOL
WINAPI
BluetoothIsDiscoverable(
    __in_opt HANDLE hRadio
    );

//
//  Description:
//      Enables/disables the state of a radio to accept incoming connections.
//      If hRadio is NULL, all the radios will be set.
//
//      Use BluetoothIsConnectable() to determine the radios current state.
//
//      The system enforces that a radio that is not connectable is not
//      discoverable too. The radio must be made non-discoverable (see 
//      BluetoothEnableDiscovery) prior to making a radio non-connectionable. 
//      Failure to do so will result in this call failing (returns FALSE).
//
//  Parameters:
//      hRadio
//          If not NULL, changes the state of a specific radio.
//          If NULL, the API will interate through all the radios.
//
//      fEnabled
//          If FALSE, incoming connection will be disabled.
//
//  Return Values
//      TRUE
//          State was successfully changed. If the caller specified NULL for
//          hRadio, at least of the radios accepted the state change.
//
//      FALSE
//          State was not changed. If the caller specified NULL for hRadio, all
//          of the radios did not accept the state change.
//
__checkReturn
BOOL
WINAPI
BluetoothEnableIncomingConnections(
    __in_opt HANDLE hRadio,
    __in BOOL fEnabled
    );

//
//  Description:
//      Determines if the Bluetooth radios are connectable. If there are 
//      multiple radios, the first one to say it is connectable will cause 
//      this function to return TRUE.
//
//  Parameters:
//      hRadio
//          Handle of the radio to check. If NULL, it will check all local
//          radios.
//
//  Return Values:
//      TRUE
//          A least one radio is allowing incoming connections.
//
//      FALSE
//          No radios are allowing incoming connections.
//
__checkReturn
BOOL
WINAPI
BluetoothIsConnectable(
    __in_opt HANDLE hRadio
    );

// ***************************************************************************
//
//  Authentication Registration
//
// ***************************************************************************

typedef HANDLE HBLUETOOTH_AUTHENTICATION_REGISTRATION;

typedef BOOL (*PFN_AUTHENTICATION_CALLBACK)(LPVOID pvParam, PBLUETOOTH_DEVICE_INFO pDevice);

//
//  Description:
//      Registers a callback function to be called when a particular device
//      requests authentication. The request is sent to the last application
//      that requested authentication for a particular device.
//
//  Parameters:
//      pbtdi
//          A pointer to a BLUETOOTH_DEVICE_INFO structure. The Bluetooth
//          address will be used for comparision.
//
//      phRegHandle
//          A pointer to where the registration HANDLE value will be 
//          stored. Call BluetoothUnregisterAuthentication() to close
//          the handle.
//
//      pfnCallback
//          The function that will be called when the authentication event
//          occurs. This function should match PFN_AUTHENTICATION_CALLBACK's
//          prototype.
//
//      pvParam
//          Optional parameter to be past through to the callback function.
//          This can be anything the application was to define.
//
//  Return Values:
//      ERROR_SUCCESS
//          Success. A valid registration handle was returned.
//
//      ERROR_OUTOFMEMORY
//          Out of memory.
//
//      other Win32 error.
//          Failure. The registration handle is invalid.
//
__checkReturn
DWORD
WINAPI
BluetoothRegisterForAuthentication(
    __in_opt const BLUETOOTH_DEVICE_INFO * pbtdi,
    __out HBLUETOOTH_AUTHENTICATION_REGISTRATION * phRegHandle,
    __in_opt PFN_AUTHENTICATION_CALLBACK pfnCallback,
    __in_opt PVOID pvParam
    );

//
// Support added in KB942567
//
#if (NTDDI_VERSION > NTDDI_VISTASP1 || \
    (NTDDI_VERSION == NTDDI_VISTASP1 && defined(VISTA_KB942567)))

//
// Replaces previous API
//
#pragma deprecate("BluetoothRegisterForAuthentication")

typedef BOOL (*PFN_AUTHENTICATION_CALLBACK_EX)(__in_opt LPVOID pvParam, __in PBLUETOOTH_AUTHENTICATION_CALLBACK_PARAMS pAuthCallbackParams);

//
//  Description:
//      Registers a callback function to be called when a particular device
//      requests authentication. The request is sent to the last application
//      that requested authentication for a particular device.
//
//  Parameters:
//      pbtdi
//          A pointer to a BLUETOOTH_DEVICE_INFO structure. The Bluetooth
//          address will be used for comparision.
//
//      phRegHandle
//          A pointer to where the registration HANDLE value will be 
//          stored. Call BluetoothUnregisterAuthentication() to close
//          the handle.
//
//      pfnCallback
//          The function that will be called when the authentication event
//          occurs. This function should match PFN_AUTHENTICATION_CALLBACK_EX's
//          prototype.
//
//      pvParam
//          Optional parameter to be past through to the callback function.
//          This can be anything the application was to define.
//
//  Return Values:
//      ERROR_SUCCESS
//          Success. A valid registration handle was returned.
//
//      ERROR_OUTOFMEMORY
//          Out of memory.
//
//      other Win32 error.
//          Failure. The registration handle is invalid.
//
__checkReturn
DWORD
WINAPI
BluetoothRegisterForAuthenticationEx(
      __in_opt const BLUETOOTH_DEVICE_INFO * pbtdiIn
    , __out HBLUETOOTH_AUTHENTICATION_REGISTRATION * phRegHandleOut
    , __in_opt PFN_AUTHENTICATION_CALLBACK_EX pfnCallbackIn
    , __in_opt PVOID pvParam
    );

#endif // >= SP1+KB942567

//
//  Description:
//      Unregisters an authentication callback and closes the handle. See 
//      BluetoothRegisterForAuthentication() for more information about
//      authentication registration.
//
//  Parameters:
//      hRegHandle
//          Handle returned by BluetoothRegisterForAuthentication().
//
//  Return Value:
//      TRUE
//          The handle was successfully closed.
//
//      FALSE
//          The handle was not successfully closed. Check GetLastError for
//          more details.
//
//          ERROR_INVALID_HANDLE
//              The handle is NULL.
//
//          other Win32 errors.
//
BOOL
WINAPI
BluetoothUnregisterAuthentication(
    __in HBLUETOOTH_AUTHENTICATION_REGISTRATION hRegHandle
    );

//
//  Description:
//      This function should be called after receiving an authentication request
//      to send the passkey response.
//
//  Parameters:
//
//      hRadio
//          Optional handle to the local radio. If NULL, the function will try
//          each radio until one succeeds.
//
//      pbtdi
//          A pointer to a BLUETOOTH_DEVICE_INFO structure describing the device
//          being authenticated. This can be the same structure passed to the 
//          callback function.
//
//      pszPasskey
//          A pointer to UNICODE zero-terminated string of the passkey response
//          that should be sent back to the authenticating device.
//
//  Return Values:
//      ERROR_SUCESS
//          The device accepted the passkey response. The device is authenticated.
//
//      ERROR_CANCELED
//          The device denied the passkey reponse. This also will returned if there
//          is a communications problem with the local radio.
//
//      E_FAIL
//          The device returned a failure code during authentication.
//
//      other Win32 error codes
//
__checkReturn
DWORD
WINAPI
BluetoothSendAuthenticationResponse(
    __in_opt HANDLE hRadio,
    __in const BLUETOOTH_DEVICE_INFO * pbtdi,
    __in LPCWSTR pszPasskey
    );


//
// Support added in KB942567
//
#if (NTDDI_VERSION > NTDDI_VISTASP1 || \
    (NTDDI_VERSION == NTDDI_VISTASP1 && defined(VISTA_KB942567)))

//
// Replaces previous API
//
#pragma deprecate("BluetoothSendAuthenticationResponse")

//
// Structure used when responding to BTH_REMOTE_AUTHENTICATE_REQUEST event
//
typedef struct _BLUETOOTH_AUTHENTICATE_RESPONSE {
    BLUETOOTH_ADDRESS bthAddressRemote;
    BLUETOOTH_AUTHENTICATION_METHOD authMethod;

    union{
        BLUETOOTH_PIN_INFO pinInfo;
        BLUETOOTH_OOB_DATA_INFO oobInfo;
        BLUETOOTH_NUMERIC_COMPARISON_INFO numericCompInfo;
        BLUETOOTH_PASSKEY_INFO passkeyInfo;
    };
    
    UCHAR negativeResponse;
} BLUETOOTH_AUTHENTICATE_RESPONSE, *PBLUETOOTH_AUTHENTICATE_RESPONSE;


//
//  Description:
//      This function should be called after receiving an authentication request
//      to send the authentication response. (Bluetooth 2.1 and above)
//
//  Parameters:
//
//      hRadio
//          Optional handle to the local radio. If NULL, the function will try
//          each radio until one succeeds.
//
//      pbtdi
//          A pointer to a BLUETOOTH_DEVICE_INFO structure describing the device
//          being authenticated. This can be the same structure passed to the 
//          callback function.
//
//      pauthResponse
//          A pointer to a BTH_AUTHENTICATION_RESPONSE structure.
//
//  Return Values:
//      ERROR_SUCESS
//          The device accepted the passkey response. The device is authenticated.
//
//      ERROR_CANCELED
//          The device denied the passkey reponse. This also will returned if there
//          is a communications problem with the local radio.
//
//      E_FAIL
//          The device returned a failure code during authentication.
//
//      other Win32 error codes
//
__checkReturn
DWORD
WINAPI
BluetoothSendAuthenticationResponseEx(
      __in_opt HANDLE hRadioIn
    , __in PBLUETOOTH_AUTHENTICATE_RESPONSE pauthResponse
    );

#endif // >= SP1+KB942567

// ***************************************************************************
//
//  SDP Parsing Functions
//
// ***************************************************************************

typedef struct _SDP_ELEMENT_DATA {
    //
    // Enumeration of SDP element types.  Generic element types will have a
    // specificType value other then SDP_ST_NONE.  The generic types are:
    // o SDP_TYPE_UINT
    // o SDP_TYPE_INT
    // o SDP_TYPE_UUID
    //
    SDP_TYPE type;

    //
    // Specific types for the generic SDP element types.
    //
    SDP_SPECIFICTYPE specificType;

    //
    // Union of all possible data types.  type and specificType will indicate
    // which field is valid.  For types which do not have a valid specificType,
    // specific type will be SDP_ST_NONE.
    //
    union {
        // type == SDP_TYPE_INT
        SDP_LARGE_INTEGER_16 int128;        // specificType == SDP_ST_INT128
        LONGLONG int64;                     // specificType == SDP_ST_INT64
        LONG int32;                         // specificType == SDP_ST_INT32
        SHORT int16;                        // specificType == SDP_ST_INT16
        CHAR int8;                          // specificType == SDP_ST_INT8

        // type == SDP_TYPE_UINT
        SDP_ULARGE_INTEGER_16 uint128;      // specificType == SDP_ST_UINT128
        ULONGLONG uint64;                   // specificType == SDP_ST_UINT64
        ULONG uint32;                       // specificType == SDP_ST_UINT32
        USHORT uint16;                      // specificType == SDP_ST_UINT16
        UCHAR uint8;                        // specificType == SDP_ST_UINT8

        // type == SDP_TYPE_BOOLEAN
        UCHAR booleanVal;

        // type == SDP_TYPE_UUID
        GUID uuid128;                       // specificType == SDP_ST_UUID128
        ULONG uuid32;                       // specificType == SDP_ST_UUID32
        USHORT uuid16;                      // specificType == SDP_ST_UUID32

        // type == SDP_TYPE_STRING
        struct {
            // raw string buffer, may not be encoded as ANSI, use
            // BluetoothSdpGetString to convert the value if it is described
            // by the base language attribute ID list
            LPBYTE value;

            // raw length of the string, may not be NULL terminuated
            ULONG length;
        } string;

        // type == SDP_TYPE_URL
        struct {
            LPBYTE value;
            ULONG length;
        } url;

        // type == SDP_TYPE_SEQUENCE
        struct {
            // raw sequence, starts at sequence element header
            LPBYTE value;

            // raw sequence length
            ULONG length;
        } sequence;

        // type == SDP_TYPE_ALTERNATIVE
        struct {
            // raw alternative, starts at alternative element header
            LPBYTE value;

            // raw alternative length
            ULONG length;
        } alternative;

    } data;

} SDP_ELEMENT_DATA, *PSDP_ELEMENT_DATA;

//
// Description:
//      Retrieves and parses the element found at pSdpStream
//
// Parameters:
//      IN pSdpStream
//          pointer to valid SDP stream
//
//      IN cbSdpStreamLength
//          length of pSdpStream in bytes
//
//      OUT pData
//          pointer to be filled in with the data of the SDP element at the
//          beginning of pSdpStream
//
// Return Values:
//      ERROR_INVALID_PARAMETER
//          one of required parameters is NULL or the pSdpStream is invalid
//
//      ERROR_SUCCESS
//          the sdp element was parsed correctly
//
__checkReturn
DWORD
WINAPI
BluetoothSdpGetElementData(
    __in_bcount(cbSdpStreamLength) LPBYTE pSdpStream,
    __in ULONG cbSdpStreamLength,
    __out PSDP_ELEMENT_DATA pData
    );

typedef HANDLE HBLUETOOTH_CONTAINER_ELEMENT;

//
// Description:
//      Iterates over a container stream, returning each elemetn contained with
//      in the container element at the beginning of pContainerStream
//
// Parameters:
//      IN pContainerStream
//          pointer to valid SDP stream whose first element is either a sequence
//          or alternative
//
//      IN cbContainerlength
//          length in bytes of pContainerStream
//
//      IN OUT pElement
//          Value used to keep track of location within the stream.  The first
//          time this function is called for a particular container, *pElement
//          should equal NULL.  Upon subsequent calls, the value should be
//          unmodified.
//
//      OUT pData
//          pointer to be filled in with the data of the SDP element at the
//          current element of pContainerStream
//
//  Return Values:
//      ERROR_SUCCESS
//          The call succeeded, pData contains the data
//
//      ERROR_NO_MORE_ITEMS
//          There are no more items in the list, the caller should cease calling
//          BluetoothSdpGetContainerElementData for this container.
//
//      ERROR_INVALID_PARAMETER
//          A required pointer is NULL or the container is not a valid SDP
//          stream
//
// Usage example:
//
// HBLUETOOTH_CONTAINER_ELEMENT element;
// SDP_ELEMENT_DATA data;
// ULONG result;
//
// element = NULL;
//
// while (TRUE) {
//      result = BluetoothSdpGetContainerElementData(
//          pContainer, ulContainerLength, &element, &data);
//
//      if (result == ERROR_NO_MORE_ITEMS) {
//          // We are done
//          break;
//      }
//      else if (result != ERROR_SUCCESS) {
//          // error
//      }
//
//      // do something with data ...
// }
//
//
__checkReturn
DWORD
WINAPI
BluetoothSdpGetContainerElementData(
    __in_bcount(cbContainerLength) LPBYTE pContainerStream,
    __in ULONG cbContainerLength,
    __inout HBLUETOOTH_CONTAINER_ELEMENT* pElement,
    __out PSDP_ELEMENT_DATA pData
    );

//
// Description:
//      Retrieves the attribute value for the given attribute ID.  pRecordStream
//      must be an SDP stream that is formatted as an SDP record, a SEQUENCE
//      containing UINT16 + element pairs.
//
// Parameters:
//      IN pRecordStream
//          pointer to a valid SDP stream which is formatted as a singl SDP
//          record
//
//      IN cbRecordlnegh
//          length of pRecordStream in bytes
//
//      IN usAttributeId
//          the attribute ID to search for.  see bthdef.h for SDP_ATTRIB_Xxx
//          values.
//
//      OUT pAttributeData
//          pointer that will contain the attribute ID's value
//
// Return Values:
//      ERRROR_SUCCESS
//          Call succeeded, pAttributeData contains the attribute value
//
//      ERROR_INVALID_PARAMETER
//          One of the required pointers was NULL, pRecordStream was not a valid
//          SDP stream, or pRecordStream was not a properly formatted SDP record
//
//      ERROR_FILE_NOT_FOUND
//          usAttributeId was not found in the record
//
// Usage:
//
// ULONG result;
// SDP_DATA_ELEMENT data;
//
// result = BluetoothSdpGetAttributeValue(
//      pRecordStream, cbRecordLength, SDP_ATTRIB_RECORD_HANDLE, &data);
// if (result == ERROR_SUCCESS) {
//      printf("record handle is 0x%x\n", data.data.uint32);
// }
//
__checkReturn
DWORD
WINAPI
BluetoothSdpGetAttributeValue(
    __in_bcount(cbRecordLength) LPBYTE pRecordStream,
    __in ULONG cbRecordLength,
    __in USHORT usAttributeId,
    __out PSDP_ELEMENT_DATA pAttributeData
    );

//
// These three fields correspond one to one with the triplets defined in the
// SDP specification for the language base attribute ID list.
//
typedef struct _SDP_STRING_TYPE_DATA {
    //
    // How the string is encoded according to ISO 639:1988 (E/F): "Code
    // for the representation of names of languages".
    //
    USHORT encoding;

    //
    // MIBE number from IANA database
    //
    USHORT mibeNum;

    //
    // The base attribute where the string is to be found in the record
    //
    USHORT attributeId;

} SDP_STRING_TYPE_DATA, *PSDP_STRING_TYPE_DATA;

//
// Description:
//      Converts a raw string embedded in the SDP record into a UNICODE string
//
// Parameters:
//      IN pRecordStream
//          a valid SDP stream which is formatted as an SDP record
//
//      IN cbRecordLength
//          length of pRecordStream in bytes
//
//      IN pStringData
//          if NULL, then the calling thread's locale will be used to search
//          for a matching string in the SDP record.  If not NUL, the mibeNum
//          and attributeId will be used to find the string to convert.
//
//      IN usStringOffset
//          the SDP string type offset to convert.  usStringOffset is added to
//          the base attribute id of the string.   SDP specification defined
//          offsets are: STRING_NAME_OFFSET, STRING_DESCRIPTION_OFFSET, and
//          STRING_PROVIDER_NAME_OFFSET (found in bthdef.h).
//
//      OUT pszString
//          if NULL, pcchStringLength will be filled in with the required number
//          of characters (not bytes) to retrieve the converted string.
//
//      IN OUT pcchStringLength
//          Upon input, if pszString is not NULL, will contain the length of
//          pszString in characters.  Upon output, it will contain either the
//          number of required characters including NULL if an error is returned
//          or the number of characters written to pszString (including NULL).
//
//  Return Values:
//      ERROR_SUCCES
//          Call was successful and pszString contains the converted string
//
//      ERROR_MORE_DATA
//          pszString was NULL or too small to contain the converted string,
//          pccxhStringLength contains the required length in characters
//
//      ERROR_INVALID_DATA
//          Could not perform the conversion
//
//      ERROR_NO_SYSTEM_RESOURCES
//          Could not allocate memory internally to perform the conversion
//
//      ERROR_INVALID_PARAMETER
//          One of the rquired pointers was NULL, pRecordStream was not a valid
//          SDP stream, pRecordStream was not a properly formatted record, or
//          the desired attribute + offset was not a string.
//
//      Other HRESULTs returned by COM
//
__checkReturn
__success(return == 0)
DWORD
WINAPI
BluetoothSdpGetString(
    __in_bcount(cbRecordLength) LPBYTE pRecordStream,
    __in ULONG cbRecordLength,
    __in_opt const PSDP_STRING_TYPE_DATA pStringData,
    __in USHORT usStringOffset,
    __out_ecount_part(*pcchStringLength, *pcchStringLength) PWSTR pszString,
    __inout PULONG pcchStringLength
    );

// ***************************************************************************
//
//  Raw Attribute  Enumeration
//
// ***************************************************************************

typedef BOOL (CALLBACK *PFN_BLUETOOTH_ENUM_ATTRIBUTES_CALLBACK)(
    __in ULONG   uAttribId,
    __in_bcount(cbStreamSize) LPBYTE  pValueStream,
    __in ULONG   cbStreamSize,
    __in_opt LPVOID  pvParam
    );

//
//  Description:
//      Enumerates through the SDP record stream calling the Callback function
//      for each attribute in the record. If the Callback function returns
//      FALSE, the enumeration is stopped.
//
//  Return Values:
//      TRUE
//          Success! Something was enumerated.
//
//      FALSE
//          Failure. GetLastError() could be one of the following:
//
//          ERROR_INVALID_PARAMETER
//              pSDPStream or pfnCallback is NULL.
//
//          ERROR_INVALID_DATA
//              The SDP stream is corrupt.
//
//          other Win32 errors.
//
#define BluetoothEnumAttributes BluetoothSdpEnumAttributes

__checkReturn
BOOL
WINAPI
BluetoothSdpEnumAttributes(
    __in_bcount(cbStreamSize) LPBYTE  pSDPStream,
    __in ULONG   cbStreamSize,
    __in PFN_BLUETOOTH_ENUM_ATTRIBUTES_CALLBACK pfnCallback,
    __in LPVOID  pvParam
    );

#endif // (NTDDI_VERSION >= NTDDI_WINXPSP2)

#if (NTDDI_VERSION >= NTDDI_VISTA)

//
// The following APIs are only available on Vista or later
//

__checkReturn
DWORD
WINAPI
BluetoothSetLocalServiceInfo(
      __in_opt HANDLE  hRadioIn
    , __in const GUID * pClassGuid
    , __in ULONG ulInstance
    , __in const BLUETOOTH_LOCAL_SERVICE_INFO * pServiceInfoIn
    );

#endif // (NTDDI_VERSION >= NTDDI_VISTA)


//
// Support added in KB942567
//
#if (NTDDI_VERSION > NTDDI_VISTASP1 || \
    (NTDDI_VERSION == NTDDI_VISTASP1 && defined(VISTA_KB942567)))

//
// IsBluetoothVersionAvailable
//
// Description:
//      Indicate if the installed Bluetooth binary set supports
//      the requested version
//
// Return Values:
//      TRUE if the installed bluetooth binaries support the given
//      Major & Minor versions
//
// Note this function is only exported in version 2.1 and later.
//
__checkReturn
BOOL
WINAPI
BluetoothIsVersionAvailable(
        __in UCHAR MajorVersion,
        __in UCHAR MinorVersion
        );


#endif // >= SP1+KB942567

#ifdef __cplusplus
}


#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\CDONTS.h ===
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 5.03.0279 */
/* at Thu Sep 30 09:32:08 1999
 */
/* Compiler settings for P:\cdontrtm\src\cdonts\actmsg.idl:
    Os (OptLev=s), W1, Zp8, env=Win32 (32b run), ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __cdonts_h__
#define __cdonts_h__

/* Forward Declarations */ 

#ifndef __INewMail_FWD_DEFINED__
#define __INewMail_FWD_DEFINED__
typedef interface INewMail INewMail;
#endif 	/* __INewMail_FWD_DEFINED__ */


#ifndef __ISession_FWD_DEFINED__
#define __ISession_FWD_DEFINED__
typedef interface ISession ISession;
#endif 	/* __ISession_FWD_DEFINED__ */


#ifndef __Folder_FWD_DEFINED__
#define __Folder_FWD_DEFINED__
typedef interface Folder Folder;
#endif 	/* __Folder_FWD_DEFINED__ */


#ifndef __Messages_FWD_DEFINED__
#define __Messages_FWD_DEFINED__
typedef interface Messages Messages;
#endif 	/* __Messages_FWD_DEFINED__ */


#ifndef __Message_FWD_DEFINED__
#define __Message_FWD_DEFINED__
typedef interface Message Message;
#endif 	/* __Message_FWD_DEFINED__ */


#ifndef __Recipients_FWD_DEFINED__
#define __Recipients_FWD_DEFINED__
typedef interface Recipients Recipients;
#endif 	/* __Recipients_FWD_DEFINED__ */


#ifndef __Recipient_FWD_DEFINED__
#define __Recipient_FWD_DEFINED__
typedef interface Recipient Recipient;
#endif 	/* __Recipient_FWD_DEFINED__ */


#ifndef __Attachments_FWD_DEFINED__
#define __Attachments_FWD_DEFINED__
typedef interface Attachments Attachments;
#endif 	/* __Attachments_FWD_DEFINED__ */


#ifndef __Attachment_FWD_DEFINED__
#define __Attachment_FWD_DEFINED__
typedef interface Attachment Attachment;
#endif 	/* __Attachment_FWD_DEFINED__ */


#ifndef __AddressEntry_FWD_DEFINED__
#define __AddressEntry_FWD_DEFINED__
typedef interface AddressEntry AddressEntry;
#endif 	/* __AddressEntry_FWD_DEFINED__ */


#ifndef __NewMail_FWD_DEFINED__
#define __NewMail_FWD_DEFINED__

#ifdef __cplusplus
typedef class NewMail NewMail;
#else
typedef struct NewMail NewMail;
#endif /* __cplusplus */

#endif 	/* __NewMail_FWD_DEFINED__ */


#ifndef __Session_FWD_DEFINED__
#define __Session_FWD_DEFINED__

#ifdef __cplusplus
typedef class Session Session;
#else
typedef struct Session Session;
#endif /* __cplusplus */

#endif 	/* __Session_FWD_DEFINED__ */


#ifndef __AddressEntry_FWD_DEFINED__
#define __AddressEntry_FWD_DEFINED__
typedef interface AddressEntry AddressEntry;
#endif 	/* __AddressEntry_FWD_DEFINED__ */


#ifndef __Attachment_FWD_DEFINED__
#define __Attachment_FWD_DEFINED__
typedef interface Attachment Attachment;
#endif 	/* __Attachment_FWD_DEFINED__ */


#ifndef __Attachments_FWD_DEFINED__
#define __Attachments_FWD_DEFINED__
typedef interface Attachments Attachments;
#endif 	/* __Attachments_FWD_DEFINED__ */


#ifndef __Folder_FWD_DEFINED__
#define __Folder_FWD_DEFINED__
typedef interface Folder Folder;
#endif 	/* __Folder_FWD_DEFINED__ */


#ifndef __Messages_FWD_DEFINED__
#define __Messages_FWD_DEFINED__
typedef interface Messages Messages;
#endif 	/* __Messages_FWD_DEFINED__ */


#ifndef __Message_FWD_DEFINED__
#define __Message_FWD_DEFINED__
typedef interface Message Message;
#endif 	/* __Message_FWD_DEFINED__ */


#ifndef __Recipient_FWD_DEFINED__
#define __Recipient_FWD_DEFINED__
typedef interface Recipient Recipient;
#endif 	/* __Recipient_FWD_DEFINED__ */


#ifndef __Recipients_FWD_DEFINED__
#define __Recipients_FWD_DEFINED__
typedef interface Recipients Recipients;
#endif 	/* __Recipients_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/* interface __MIDL_itf_actmsg_0000 */
/* [local] */ 

typedef /* [helpstring] */ 
enum CdoErrorType
    {	CdoE_CALL_FAILED	= 0x80004005,
	CdoE_NOT_ENOUGH_MEMORY	= 0x8007000e,
	CdoE_INVALID_PARAMETER	= 0x80070057,
	CdoE_INTERFACE_NOT_SUPPORTED	= 0x80004002,
	CdoE_NO_ACCESS	= 0x80070005,
	CdoE_NO_SUPPORT	= 0x80040102,
	CdoE_BAD_CHARWIDTH	= 0x80040103,
	CdoE_STRING_TOO_LONG	= 0x80040105,
	CdoE_UNKNOWN_FLAGS	= 0x80040106,
	CdoE_INVALID_ENTRYID	= 0x80040107,
	CdoE_INVALID_OBJECT	= 0x80040108,
	CdoE_OBJECT_CHANGED	= 0x80040109,
	CdoE_OBJECT_DELETED	= 0x8004010a,
	CdoE_BUSY	= 0x8004010b,
	CdoE_NOT_ENOUGH_DISK	= 0x8004010d,
	CdoE_NOT_ENOUGH_RESOURCES	= 0x8004010e,
	CdoE_NOT_FOUND	= 0x8004010f,
	CdoE_VERSION	= 0x80040110,
	CdoE_LOGON_FAILED	= 0x80040111,
	CdoE_SESSION_LIMIT	= 0x80040112,
	CdoE_USER_CANCEL	= 0x80040113,
	CdoE_UNABLE_TO_ABORT	= 0x80040114,
	CdoE_NETWORK_ERROR	= 0x80040115,
	CdoE_DISK_ERROR	= 0x80040116,
	CdoE_TOO_COMPLEX	= 0x80040117,
	CdoE_BAD_COLUMN	= 0x80040118,
	CdoE_EXTENDED_ERROR	= 0x80040119,
	CdoE_COMPUTED	= 0x8004011a,
	CdoE_CORRUPT_DATA	= 0x8004011b,
	CdoE_UNCONFIGURED	= 0x8004011c,
	CdoE_FAILONEPROVIDER	= 0x8004011d,
	CdoE_UNKNOWN_CPID	= 0x8004011e,
	CdoE_UNKNOWN_LCID	= 0x8004011f,
	CdoE_PASSWORD_CHANGE_REQUIRED	= 0x80040120,
	CdoE_PASSWORD_EXPIRED	= 0x80040121,
	CdoE_INVALID_WORKSTATION_ACCOUNT	= 0x80040122,
	CdoE_INVALID_ACCESS_TIME	= 0x80040123,
	CdoE_ACCOUNT_DISABLED	= 0x80040124,
	CdoE_END_OF_SESSION	= 0x80040200,
	CdoE_UNKNOWN_ENTRYID	= 0x80040201,
	CdoE_MISSING_REQUIRED_COLUMN	= 0x80040202,
	CdoW_NO_SERVICE	= 0x40203,
	CdoE_BAD_VALUE	= 0x80040301,
	CdoE_INVALID_TYPE	= 0x80040302,
	CdoE_TYPE_NO_SUPPORT	= 0x80040303,
	CdoE_UNEXPECTED_TYPE	= 0x80040304,
	CdoE_TOO_BIG	= 0x80040305,
	CdoE_DECLINE_COPY	= 0x80040306,
	CdoE_UNEXPECTED_ID	= 0x80040307,
	CdoW_ERRORS_RETURNED	= 0x40380,
	CdoE_UNABLE_TO_COMPLETE	= 0x80040400,
	CdoE_TIMEOUT	= 0x80040401,
	CdoE_TABLE_EMPTY	= 0x80040402,
	CdoE_TABLE_TOO_BIG	= 0x80040403,
	CdoE_INVALID_BOOKMARK	= 0x80040405,
	CdoW_POSITION_CHANGED	= 0x40481,
	CdoW_APPROX_COUNT	= 0x40482,
	CdoE_WAIT	= 0x80040500,
	CdoE_CANCEL	= 0x80040501,
	CdoE_NOT_ME	= 0x80040502,
	CdoW_CANCEL_MESSAGE	= 0x40580,
	CdoE_CORRUPT_STORE	= 0x80040600,
	CdoE_NOT_IN_QUEUE	= 0x80040601,
	CdoE_NO_SUPPRESS	= 0x80040602,
	CdoE_COLLISION	= 0x80040604,
	CdoE_NOT_INITIALIZED	= 0x80040605,
	CdoE_NON_STANDARD	= 0x80040606,
	CdoE_NO_RECIPIENTS	= 0x80040607,
	CdoE_SUBMITTED	= 0x80040608,
	CdoE_HAS_FOLDERS	= 0x80040609,
	CdoE_HAS_MESSAGES	= 0x8004060a,
	CdoE_FOLDER_CYCLE	= 0x8004060b,
	CdoW_PARTIAL_COMPLETION	= 0x40680,
	CdoE_AMBIGUOUS_RECIP	= 0x80040700
    }	CdoErrorType;

//--------------------------------------------------------------------------------
// CDONTS.H
//--------------------------------------------------------------------------------
// (C) Copyright 1995-1999 Microsoft Corporation.  All Rights Reserved.
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
// PARTICULAR PURPOSE.
//--------------------------------------------------------------------------------

#pragma comment(lib,"uuid.lib")

// --------------------------------------------------------------------------------
// GUIDS
// --------------------------------------------------------------------------------
DEFINE_GUID(LIBID_CDONTS, 0x0E064ADD,0x9D99,0x11D0,0xAB,0xE5,0x00,0xAA,0x00,0x64,0xD4,0x70);

DEFINE_GUID(CLSID_NewMail, 0xAF0EB60E,0x0775,0x11D1,0xA7,0x7D,0x00,0xC0,0x4F,0xC2,0xF5,0xB3);

DEFINE_GUID(CLSID_Session, 0x0E064AEC,0x9D99,0x11D0,0xAB,0xE5,0x00,0xAA,0x00,0x64,0xD4,0x70);

DEFINE_GUID(IID_INewMail, 0xAF0EB60D,0x0775,0x11D1,0xA7,0x7D,0x00,0xC0,0x4F,0xC2,0xF5,0xB3);

DEFINE_GUID(IID_ISession, 0x0E064AEB,0x9D99,0x11D0,0xAB,0xE5,0x00,0xAA,0x00,0x64,0xD4,0x70);

DEFINE_GUID(IID_Folder, 0x0E064A01,0x9D99,0x11D0,0xAB,0xE5,0x00,0xAA,0x00,0x64,0xD4,0x70);

DEFINE_GUID(IID_Messages, 0x0E064A02,0x9D99,0x11D0,0xAB,0xE5,0x00,0xAA,0x00,0x64,0xD4,0x70);

DEFINE_GUID(IID_Message, 0x0E064A03,0x9D99,0x11D0,0xAB,0xE5,0x00,0xAA,0x00,0x64,0xD4,0x70);

DEFINE_GUID(IID_Recipients, 0x0E064A04,0x9D99,0x11D0,0xAB,0xE5,0x00,0xAA,0x00,0x64,0xD4,0x70);

DEFINE_GUID(IID_Recipient, 0x0E064A05,0x9D99,0x11D0,0xAB,0xE5,0x00,0xAA,0x00,0x64,0xD4,0x70);

DEFINE_GUID(IID_Attachments, 0x0E064A06,0x9D99,0x11D0,0xAB,0xE5,0x00,0xAA,0x00,0x64,0xD4,0x70);

DEFINE_GUID(IID_Attachment, 0x0E064A07,0x9D99,0x11D0,0xAB,0xE5,0x00,0xAA,0x00,0x64,0xD4,0x70);

DEFINE_GUID(IID_AddressEntry, 0x0E064A08,0x9D99,0x11D0,0xAB,0xE5,0x00,0xAA,0x00,0x64,0xD4,0x70);



extern RPC_IF_HANDLE __MIDL_itf_actmsg_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_actmsg_0000_v0_0_s_ifspec;

#ifndef __INewMail_INTERFACE_DEFINED__
#define __INewMail_INTERFACE_DEFINED__

/* interface INewMail */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_INewMail;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AF0EB60D-0775-11D1-A77D-00C04FC2F5B3")
    INewMail : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
            BSTR bstrHeader,
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_To( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Cc( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Bcc( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Body( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_BodyFormat( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_MailFormat( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_From( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Send( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Subject,
            /* [optional][in] */ VARIANT Body,
            /* [optional][in] */ VARIANT Importance) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AttachFile( 
            /* [in] */ VARIANT Source,
            /* [optional][in] */ VARIANT FileName,
            /* [optional][in] */ VARIANT EncodingMethod) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AttachURL( 
            /* [in] */ VARIANT Source,
            /* [in] */ VARIANT ContentLocation,
            /* [optional][in] */ VARIANT ContentBase,
            /* [optional][in] */ VARIANT EncodingMethod) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetLocaleIDs( 
            /* [in] */ long CodePageID) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ContentLocation( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ContentBase( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ BSTR __RPC_FAR *Version) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INewMailVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INewMail __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INewMail __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INewMail __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            INewMail __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            INewMail __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            INewMail __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            INewMail __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Value )( 
            INewMail __RPC_FAR * This,
            BSTR bstrHeader,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_To )( 
            INewMail __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Cc )( 
            INewMail __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Bcc )( 
            INewMail __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Body )( 
            INewMail __RPC_FAR * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Importance )( 
            INewMail __RPC_FAR * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_BodyFormat )( 
            INewMail __RPC_FAR * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_MailFormat )( 
            INewMail __RPC_FAR * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Subject )( 
            INewMail __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_From )( 
            INewMail __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Send )( 
            INewMail __RPC_FAR * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Subject,
            /* [optional][in] */ VARIANT Body,
            /* [optional][in] */ VARIANT Importance);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AttachFile )( 
            INewMail __RPC_FAR * This,
            /* [in] */ VARIANT Source,
            /* [optional][in] */ VARIANT FileName,
            /* [optional][in] */ VARIANT EncodingMethod);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AttachURL )( 
            INewMail __RPC_FAR * This,
            /* [in] */ VARIANT Source,
            /* [in] */ VARIANT ContentLocation,
            /* [optional][in] */ VARIANT ContentBase,
            /* [optional][in] */ VARIANT EncodingMethod);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLocaleIDs )( 
            INewMail __RPC_FAR * This,
            /* [in] */ long CodePageID);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ContentLocation )( 
            INewMail __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ContentBase )( 
            INewMail __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Version )( 
            INewMail __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Version);
        
        END_INTERFACE
    } INewMailVtbl;

    interface INewMail
    {
        CONST_VTBL struct INewMailVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INewMail_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INewMail_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INewMail_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INewMail_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define INewMail_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define INewMail_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define INewMail_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define INewMail_put_Value(This,bstrHeader,newVal)	\
    (This)->lpVtbl -> put_Value(This,bstrHeader,newVal)

#define INewMail_put_To(This,newVal)	\
    (This)->lpVtbl -> put_To(This,newVal)

#define INewMail_put_Cc(This,newVal)	\
    (This)->lpVtbl -> put_Cc(This,newVal)

#define INewMail_put_Bcc(This,newVal)	\
    (This)->lpVtbl -> put_Bcc(This,newVal)

#define INewMail_put_Body(This,newVal)	\
    (This)->lpVtbl -> put_Body(This,newVal)

#define INewMail_put_Importance(This,newVal)	\
    (This)->lpVtbl -> put_Importance(This,newVal)

#define INewMail_put_BodyFormat(This,newVal)	\
    (This)->lpVtbl -> put_BodyFormat(This,newVal)

#define INewMail_put_MailFormat(This,newVal)	\
    (This)->lpVtbl -> put_MailFormat(This,newVal)

#define INewMail_put_Subject(This,newVal)	\
    (This)->lpVtbl -> put_Subject(This,newVal)

#define INewMail_put_From(This,newVal)	\
    (This)->lpVtbl -> put_From(This,newVal)

#define INewMail_Send(This,From,To,Subject,Body,Importance)	\
    (This)->lpVtbl -> Send(This,From,To,Subject,Body,Importance)

#define INewMail_AttachFile(This,Source,FileName,EncodingMethod)	\
    (This)->lpVtbl -> AttachFile(This,Source,FileName,EncodingMethod)

#define INewMail_AttachURL(This,Source,ContentLocation,ContentBase,EncodingMethod)	\
    (This)->lpVtbl -> AttachURL(This,Source,ContentLocation,ContentBase,EncodingMethod)

#define INewMail_SetLocaleIDs(This,CodePageID)	\
    (This)->lpVtbl -> SetLocaleIDs(This,CodePageID)

#define INewMail_put_ContentLocation(This,newVal)	\
    (This)->lpVtbl -> put_ContentLocation(This,newVal)

#define INewMail_put_ContentBase(This,newVal)	\
    (This)->lpVtbl -> put_ContentBase(This,newVal)

#define INewMail_get_Version(This,Version)	\
    (This)->lpVtbl -> get_Version(This,Version)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE INewMail_put_Value_Proxy( 
    INewMail __RPC_FAR * This,
    BSTR bstrHeader,
    /* [in] */ BSTR newVal);


void __RPC_STUB INewMail_put_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE INewMail_put_To_Proxy( 
    INewMail __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB INewMail_put_To_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE INewMail_put_Cc_Proxy( 
    INewMail __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB INewMail_put_Cc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE INewMail_put_Bcc_Proxy( 
    INewMail __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB INewMail_put_Bcc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE INewMail_put_Body_Proxy( 
    INewMail __RPC_FAR * This,
    /* [in] */ VARIANT newVal);


void __RPC_STUB INewMail_put_Body_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE INewMail_put_Importance_Proxy( 
    INewMail __RPC_FAR * This,
    /* [in] */ long newVal);


void __RPC_STUB INewMail_put_Importance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE INewMail_put_BodyFormat_Proxy( 
    INewMail __RPC_FAR * This,
    /* [in] */ long newVal);


void __RPC_STUB INewMail_put_BodyFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE INewMail_put_MailFormat_Proxy( 
    INewMail __RPC_FAR * This,
    /* [in] */ long newVal);


void __RPC_STUB INewMail_put_MailFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE INewMail_put_Subject_Proxy( 
    INewMail __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB INewMail_put_Subject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE INewMail_put_From_Proxy( 
    INewMail __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB INewMail_put_From_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE INewMail_Send_Proxy( 
    INewMail __RPC_FAR * This,
    /* [optional][in] */ VARIANT From,
    /* [optional][in] */ VARIANT To,
    /* [optional][in] */ VARIANT Subject,
    /* [optional][in] */ VARIANT Body,
    /* [optional][in] */ VARIANT Importance);


void __RPC_STUB INewMail_Send_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE INewMail_AttachFile_Proxy( 
    INewMail __RPC_FAR * This,
    /* [in] */ VARIANT Source,
    /* [optional][in] */ VARIANT FileName,
    /* [optional][in] */ VARIANT EncodingMethod);


void __RPC_STUB INewMail_AttachFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE INewMail_AttachURL_Proxy( 
    INewMail __RPC_FAR * This,
    /* [in] */ VARIANT Source,
    /* [in] */ VARIANT ContentLocation,
    /* [optional][in] */ VARIANT ContentBase,
    /* [optional][in] */ VARIANT EncodingMethod);


void __RPC_STUB INewMail_AttachURL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE INewMail_SetLocaleIDs_Proxy( 
    INewMail __RPC_FAR * This,
    /* [in] */ long CodePageID);


void __RPC_STUB INewMail_SetLocaleIDs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE INewMail_put_ContentLocation_Proxy( 
    INewMail __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB INewMail_put_ContentLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE INewMail_put_ContentBase_Proxy( 
    INewMail __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB INewMail_put_ContentBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE INewMail_get_Version_Proxy( 
    INewMail __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Version);


void __RPC_STUB INewMail_get_Version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INewMail_INTERFACE_DEFINED__ */


#ifndef __ISession_INTERFACE_DEFINED__
#define __ISession_INTERFACE_DEFINED__

/* interface ISession */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ISession;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E064AEB-9D99-11D0-ABE5-00AA0064D470")
    ISession : public IDispatch
    {
    public:
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ VARIANT __RPC_FAR *varParent) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ VARIANT __RPC_FAR *varSession) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ long __RPC_FAR *varClass) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ BSTR __RPC_FAR *varVersion) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *varName) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Inbox( 
            /* [retval][out] */ VARIANT __RPC_FAR *varInbox) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Outbox( 
            /* [retval][out] */ VARIANT __RPC_FAR *varOutbox) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MessageFormat( 
            /* [retval][out] */ long __RPC_FAR *pMessageFormat) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_MessageFormat( 
            /* [in] */ long varMessageFormat) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LogonSMTP( 
            /* [in] */ VARIANT DisplayName,
            /* [in] */ VARIANT Address) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Logoff( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetDefaultFolder( 
            /* [in] */ VARIANT Type,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult) = 0;
        
        virtual /* [hidden][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetMessage( 
            /* [in] */ VARIANT MessageID,
            /* [optional][in] */ VARIANT StoreID,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetLocaleIDs( 
            /* [in] */ long CodePageID) = 0;
        
        virtual /* [hidden][helpstring][id] */ HRESULT STDMETHODCALLTYPE SetReserved( 
            /* [in] */ VARIANT var1,
            /* [in] */ VARIANT var2) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISessionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ISession __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ISession __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ISession __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            ISession __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            ISession __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            ISession __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            ISession __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            ISession __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            ISession __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varParent);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Session )( 
            ISession __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varSession);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Class )( 
            ISession __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *varClass);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Version )( 
            ISession __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *varVersion);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            ISession __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *varName);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Inbox )( 
            ISession __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varInbox);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Outbox )( 
            ISession __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varOutbox);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_MessageFormat )( 
            ISession __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pMessageFormat);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_MessageFormat )( 
            ISession __RPC_FAR * This,
            /* [in] */ long varMessageFormat);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *LogonSMTP )( 
            ISession __RPC_FAR * This,
            /* [in] */ VARIANT DisplayName,
            /* [in] */ VARIANT Address);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Logoff )( 
            ISession __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultFolder )( 
            ISession __RPC_FAR * This,
            /* [in] */ VARIANT Type,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);
        
        /* [hidden][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMessage )( 
            ISession __RPC_FAR * This,
            /* [in] */ VARIANT MessageID,
            /* [optional][in] */ VARIANT StoreID,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLocaleIDs )( 
            ISession __RPC_FAR * This,
            /* [in] */ long CodePageID);
        
        /* [hidden][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetReserved )( 
            ISession __RPC_FAR * This,
            /* [in] */ VARIANT var1,
            /* [in] */ VARIANT var2);
        
        END_INTERFACE
    } ISessionVtbl;

    interface ISession
    {
        CONST_VTBL struct ISessionVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISession_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ISession_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ISession_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ISession_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define ISession_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define ISession_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define ISession_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define ISession_get_Application(This,varApplication)	\
    (This)->lpVtbl -> get_Application(This,varApplication)

#define ISession_get_Parent(This,varParent)	\
    (This)->lpVtbl -> get_Parent(This,varParent)

#define ISession_get_Session(This,varSession)	\
    (This)->lpVtbl -> get_Session(This,varSession)

#define ISession_get_Class(This,varClass)	\
    (This)->lpVtbl -> get_Class(This,varClass)

#define ISession_get_Version(This,varVersion)	\
    (This)->lpVtbl -> get_Version(This,varVersion)

#define ISession_get_Name(This,varName)	\
    (This)->lpVtbl -> get_Name(This,varName)

#define ISession_get_Inbox(This,varInbox)	\
    (This)->lpVtbl -> get_Inbox(This,varInbox)

#define ISession_get_Outbox(This,varOutbox)	\
    (This)->lpVtbl -> get_Outbox(This,varOutbox)

#define ISession_get_MessageFormat(This,pMessageFormat)	\
    (This)->lpVtbl -> get_MessageFormat(This,pMessageFormat)

#define ISession_put_MessageFormat(This,varMessageFormat)	\
    (This)->lpVtbl -> put_MessageFormat(This,varMessageFormat)

#define ISession_LogonSMTP(This,DisplayName,Address)	\
    (This)->lpVtbl -> LogonSMTP(This,DisplayName,Address)

#define ISession_Logoff(This)	\
    (This)->lpVtbl -> Logoff(This)

#define ISession_GetDefaultFolder(This,Type,pvarResult)	\
    (This)->lpVtbl -> GetDefaultFolder(This,Type,pvarResult)

#define ISession_GetMessage(This,MessageID,StoreID,pvarResult)	\
    (This)->lpVtbl -> GetMessage(This,MessageID,StoreID,pvarResult)

#define ISession_SetLocaleIDs(This,CodePageID)	\
    (This)->lpVtbl -> SetLocaleIDs(This,CodePageID)

#define ISession_SetReserved(This,var1,var2)	\
    (This)->lpVtbl -> SetReserved(This,var1,var2)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISession_get_Application_Proxy( 
    ISession __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varApplication);


void __RPC_STUB ISession_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISession_get_Parent_Proxy( 
    ISession __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varParent);


void __RPC_STUB ISession_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISession_get_Session_Proxy( 
    ISession __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varSession);


void __RPC_STUB ISession_get_Session_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISession_get_Class_Proxy( 
    ISession __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *varClass);


void __RPC_STUB ISession_get_Class_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISession_get_Version_Proxy( 
    ISession __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *varVersion);


void __RPC_STUB ISession_get_Version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISession_get_Name_Proxy( 
    ISession __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *varName);


void __RPC_STUB ISession_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISession_get_Inbox_Proxy( 
    ISession __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varInbox);


void __RPC_STUB ISession_get_Inbox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISession_get_Outbox_Proxy( 
    ISession __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varOutbox);


void __RPC_STUB ISession_get_Outbox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISession_get_MessageFormat_Proxy( 
    ISession __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pMessageFormat);


void __RPC_STUB ISession_get_MessageFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE ISession_put_MessageFormat_Proxy( 
    ISession __RPC_FAR * This,
    /* [in] */ long varMessageFormat);


void __RPC_STUB ISession_put_MessageFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISession_LogonSMTP_Proxy( 
    ISession __RPC_FAR * This,
    /* [in] */ VARIANT DisplayName,
    /* [in] */ VARIANT Address);


void __RPC_STUB ISession_LogonSMTP_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISession_Logoff_Proxy( 
    ISession __RPC_FAR * This);


void __RPC_STUB ISession_Logoff_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISession_GetDefaultFolder_Proxy( 
    ISession __RPC_FAR * This,
    /* [in] */ VARIANT Type,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);


void __RPC_STUB ISession_GetDefaultFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISession_GetMessage_Proxy( 
    ISession __RPC_FAR * This,
    /* [in] */ VARIANT MessageID,
    /* [optional][in] */ VARIANT StoreID,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);


void __RPC_STUB ISession_GetMessage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISession_SetLocaleIDs_Proxy( 
    ISession __RPC_FAR * This,
    /* [in] */ long CodePageID);


void __RPC_STUB ISession_SetLocaleIDs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISession_SetReserved_Proxy( 
    ISession __RPC_FAR * This,
    /* [in] */ VARIANT var1,
    /* [in] */ VARIANT var2);


void __RPC_STUB ISession_SetReserved_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISession_INTERFACE_DEFINED__ */


#ifndef __Folder_INTERFACE_DEFINED__
#define __Folder_INTERFACE_DEFINED__

/* interface Folder */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_Folder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E064A01-9D99-11D0-ABE5-00AA0064D470")
    Folder : public IDispatch
    {
    public:
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ VARIANT __RPC_FAR *varParent) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ VARIANT __RPC_FAR *varSession) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ long __RPC_FAR *varClass) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *varName) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Messages( 
            /* [retval][out] */ VARIANT __RPC_FAR *varMessages) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            Folder __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            Folder __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            Folder __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            Folder __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            Folder __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            Folder __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            Folder __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            Folder __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            Folder __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varParent);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Session )( 
            Folder __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varSession);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Class )( 
            Folder __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *varClass);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            Folder __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *varName);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Messages )( 
            Folder __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varMessages);
        
        END_INTERFACE
    } FolderVtbl;

    interface Folder
    {
        CONST_VTBL struct FolderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Folder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define Folder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define Folder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define Folder_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define Folder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define Folder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define Folder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define Folder_get_Application(This,varApplication)	\
    (This)->lpVtbl -> get_Application(This,varApplication)

#define Folder_get_Parent(This,varParent)	\
    (This)->lpVtbl -> get_Parent(This,varParent)

#define Folder_get_Session(This,varSession)	\
    (This)->lpVtbl -> get_Session(This,varSession)

#define Folder_get_Class(This,varClass)	\
    (This)->lpVtbl -> get_Class(This,varClass)

#define Folder_get_Name(This,varName)	\
    (This)->lpVtbl -> get_Name(This,varName)

#define Folder_get_Messages(This,varMessages)	\
    (This)->lpVtbl -> get_Messages(This,varMessages)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Folder_get_Application_Proxy( 
    Folder __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varApplication);


void __RPC_STUB Folder_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Folder_get_Parent_Proxy( 
    Folder __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varParent);


void __RPC_STUB Folder_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Folder_get_Session_Proxy( 
    Folder __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varSession);


void __RPC_STUB Folder_get_Session_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Folder_get_Class_Proxy( 
    Folder __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *varClass);


void __RPC_STUB Folder_get_Class_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Folder_get_Name_Proxy( 
    Folder __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *varName);


void __RPC_STUB Folder_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Folder_get_Messages_Proxy( 
    Folder __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varMessages);


void __RPC_STUB Folder_get_Messages_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __Folder_INTERFACE_DEFINED__ */


#ifndef __Messages_INTERFACE_DEFINED__
#define __Messages_INTERFACE_DEFINED__

/* interface Messages */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_Messages;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E064A02-9D99-11D0-ABE5-00AA0064D470")
    Messages : public IDispatch
    {
    public:
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ VARIANT __RPC_FAR *varParent) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ VARIANT __RPC_FAR *varSession) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ long __RPC_FAR *varClass) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *varCount) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT __RPC_FAR *var,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult) = 0;
        
        virtual /* [helpstring][propget][hidden][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [optional][in] */ VARIANT Subject,
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Importance,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetFirst( 
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetNext( 
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetLast( 
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPrevious( 
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct MessagesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            Messages __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            Messages __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            Messages __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            Messages __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            Messages __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            Messages __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            Messages __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            Messages __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            Messages __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varParent);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Session )( 
            Messages __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varSession);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Class )( 
            Messages __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *varClass);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            Messages __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *varCount);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            Messages __RPC_FAR * This,
            /* [in] */ VARIANT __RPC_FAR *var,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);
        
        /* [helpstring][propget][hidden][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            Messages __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            Messages __RPC_FAR * This,
            /* [optional][in] */ VARIANT Subject,
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Importance,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Delete )( 
            Messages __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFirst )( 
            Messages __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNext )( 
            Messages __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLast )( 
            Messages __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPrevious )( 
            Messages __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);
        
        END_INTERFACE
    } MessagesVtbl;

    interface Messages
    {
        CONST_VTBL struct MessagesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Messages_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define Messages_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define Messages_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define Messages_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define Messages_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define Messages_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define Messages_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define Messages_get_Application(This,varApplication)	\
    (This)->lpVtbl -> get_Application(This,varApplication)

#define Messages_get_Parent(This,varParent)	\
    (This)->lpVtbl -> get_Parent(This,varParent)

#define Messages_get_Session(This,varSession)	\
    (This)->lpVtbl -> get_Session(This,varSession)

#define Messages_get_Class(This,varClass)	\
    (This)->lpVtbl -> get_Class(This,varClass)

#define Messages_get_Count(This,varCount)	\
    (This)->lpVtbl -> get_Count(This,varCount)

#define Messages_get_Item(This,var,pvarResult)	\
    (This)->lpVtbl -> get_Item(This,var,pvarResult)

#define Messages_get__NewEnum(This,ppunkResult)	\
    (This)->lpVtbl -> get__NewEnum(This,ppunkResult)

#define Messages_Add(This,Subject,Text,Importance,pvarResult)	\
    (This)->lpVtbl -> Add(This,Subject,Text,Importance,pvarResult)

#define Messages_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define Messages_GetFirst(This,pvarResult)	\
    (This)->lpVtbl -> GetFirst(This,pvarResult)

#define Messages_GetNext(This,pvarResult)	\
    (This)->lpVtbl -> GetNext(This,pvarResult)

#define Messages_GetLast(This,pvarResult)	\
    (This)->lpVtbl -> GetLast(This,pvarResult)

#define Messages_GetPrevious(This,pvarResult)	\
    (This)->lpVtbl -> GetPrevious(This,pvarResult)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Messages_get_Application_Proxy( 
    Messages __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varApplication);


void __RPC_STUB Messages_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Messages_get_Parent_Proxy( 
    Messages __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varParent);


void __RPC_STUB Messages_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Messages_get_Session_Proxy( 
    Messages __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varSession);


void __RPC_STUB Messages_get_Session_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Messages_get_Class_Proxy( 
    Messages __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *varClass);


void __RPC_STUB Messages_get_Class_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Messages_get_Count_Proxy( 
    Messages __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *varCount);


void __RPC_STUB Messages_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Messages_get_Item_Proxy( 
    Messages __RPC_FAR * This,
    /* [in] */ VARIANT __RPC_FAR *var,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);


void __RPC_STUB Messages_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][hidden][id] */ HRESULT STDMETHODCALLTYPE Messages_get__NewEnum_Proxy( 
    Messages __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkResult);


void __RPC_STUB Messages_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Messages_Add_Proxy( 
    Messages __RPC_FAR * This,
    /* [optional][in] */ VARIANT Subject,
    /* [optional][in] */ VARIANT Text,
    /* [optional][in] */ VARIANT Importance,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);


void __RPC_STUB Messages_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Messages_Delete_Proxy( 
    Messages __RPC_FAR * This);


void __RPC_STUB Messages_Delete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Messages_GetFirst_Proxy( 
    Messages __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);


void __RPC_STUB Messages_GetFirst_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Messages_GetNext_Proxy( 
    Messages __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);


void __RPC_STUB Messages_GetNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Messages_GetLast_Proxy( 
    Messages __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);


void __RPC_STUB Messages_GetLast_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Messages_GetPrevious_Proxy( 
    Messages __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);


void __RPC_STUB Messages_GetPrevious_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __Messages_INTERFACE_DEFINED__ */


#ifndef __Message_INTERFACE_DEFINED__
#define __Message_INTERFACE_DEFINED__

/* interface Message */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_Message;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E064A03-9D99-11D0-ABE5-00AA0064D470")
    Message : public IDispatch
    {
    public:
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ VARIANT __RPC_FAR *varParent) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ VARIANT __RPC_FAR *varSession) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ long __RPC_FAR *varClass) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ long __RPC_FAR *varSize) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Importance( 
            /* [retval][out] */ long __RPC_FAR *pImportance) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Importance( 
            /* [in] */ long varImportance) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ BSTR __RPC_FAR *pSubject) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ BSTR varSubject) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sender( 
            /* [retval][out] */ VARIANT __RPC_FAR *varSender) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TimeSent( 
            /* [retval][out] */ VARIANT __RPC_FAR *varTimeSent) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TimeSent( 
            /* [in] */ VARIANT varTimeSent) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TimeReceived( 
            /* [retval][out] */ VARIANT __RPC_FAR *varTimeReceived) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TimeReceived( 
            /* [in] */ VARIANT varTimeReceived) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Text( 
            /* [retval][out] */ VARIANT __RPC_FAR *varText) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Text( 
            /* [in] */ VARIANT varText) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HTMLText( 
            /* [retval][out] */ VARIANT __RPC_FAR *varHTMLText) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_HTMLText( 
            /* [in] */ VARIANT varHTMLText) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Recipients( 
            /* [retval][out] */ VARIANT __RPC_FAR *varRecipients) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Recipients( 
            /* [in] */ VARIANT varRecipients) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ VARIANT __RPC_FAR *varAttachments) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_MessageFormat( 
            /* [in] */ long __MIDL_0011) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContentLocation( 
            /* [retval][out] */ VARIANT __RPC_FAR *varContentLocation) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ContentLocation( 
            /* [in] */ VARIANT varContentLocation) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContentBase( 
            /* [retval][out] */ VARIANT __RPC_FAR *varContentBase) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ContentBase( 
            /* [in] */ VARIANT varContentBase) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContentID( 
            /* [retval][out] */ VARIANT __RPC_FAR *varContentID) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ContentID( 
            /* [in] */ VARIANT varContentID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Send( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct MessageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            Message __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            Message __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            Message __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            Message __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            Message __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            Message __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            Message __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varParent);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Session )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varSession);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Class )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *varClass);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Size )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *varSize);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Importance )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pImportance);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Importance )( 
            Message __RPC_FAR * This,
            /* [in] */ long varImportance);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Subject )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pSubject);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Subject )( 
            Message __RPC_FAR * This,
            /* [in] */ BSTR varSubject);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Sender )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varSender);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_TimeSent )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varTimeSent);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_TimeSent )( 
            Message __RPC_FAR * This,
            /* [in] */ VARIANT varTimeSent);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_TimeReceived )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varTimeReceived);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_TimeReceived )( 
            Message __RPC_FAR * This,
            /* [in] */ VARIANT varTimeReceived);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Text )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Text )( 
            Message __RPC_FAR * This,
            /* [in] */ VARIANT varText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HTMLText )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varHTMLText);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HTMLText )( 
            Message __RPC_FAR * This,
            /* [in] */ VARIANT varHTMLText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Recipients )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varRecipients);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Recipients )( 
            Message __RPC_FAR * This,
            /* [in] */ VARIANT varRecipients);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Attachments )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varAttachments);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_MessageFormat )( 
            Message __RPC_FAR * This,
            /* [in] */ long __MIDL_0011);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ContentLocation )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varContentLocation);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ContentLocation )( 
            Message __RPC_FAR * This,
            /* [in] */ VARIANT varContentLocation);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ContentBase )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varContentBase);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ContentBase )( 
            Message __RPC_FAR * This,
            /* [in] */ VARIANT varContentBase);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ContentID )( 
            Message __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varContentID);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ContentID )( 
            Message __RPC_FAR * This,
            /* [in] */ VARIANT varContentID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Delete )( 
            Message __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Send )( 
            Message __RPC_FAR * This);
        
        END_INTERFACE
    } MessageVtbl;

    interface Message
    {
        CONST_VTBL struct MessageVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Message_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define Message_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define Message_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define Message_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define Message_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define Message_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define Message_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define Message_get_Application(This,varApplication)	\
    (This)->lpVtbl -> get_Application(This,varApplication)

#define Message_get_Parent(This,varParent)	\
    (This)->lpVtbl -> get_Parent(This,varParent)

#define Message_get_Session(This,varSession)	\
    (This)->lpVtbl -> get_Session(This,varSession)

#define Message_get_Class(This,varClass)	\
    (This)->lpVtbl -> get_Class(This,varClass)

#define Message_get_Size(This,varSize)	\
    (This)->lpVtbl -> get_Size(This,varSize)

#define Message_get_Importance(This,pImportance)	\
    (This)->lpVtbl -> get_Importance(This,pImportance)

#define Message_put_Importance(This,varImportance)	\
    (This)->lpVtbl -> put_Importance(This,varImportance)

#define Message_get_Subject(This,pSubject)	\
    (This)->lpVtbl -> get_Subject(This,pSubject)

#define Message_put_Subject(This,varSubject)	\
    (This)->lpVtbl -> put_Subject(This,varSubject)

#define Message_get_Sender(This,varSender)	\
    (This)->lpVtbl -> get_Sender(This,varSender)

#define Message_get_TimeSent(This,varTimeSent)	\
    (This)->lpVtbl -> get_TimeSent(This,varTimeSent)

#define Message_put_TimeSent(This,varTimeSent)	\
    (This)->lpVtbl -> put_TimeSent(This,varTimeSent)

#define Message_get_TimeReceived(This,varTimeReceived)	\
    (This)->lpVtbl -> get_TimeReceived(This,varTimeReceived)

#define Message_put_TimeReceived(This,varTimeReceived)	\
    (This)->lpVtbl -> put_TimeReceived(This,varTimeReceived)

#define Message_get_Text(This,varText)	\
    (This)->lpVtbl -> get_Text(This,varText)

#define Message_put_Text(This,varText)	\
    (This)->lpVtbl -> put_Text(This,varText)

#define Message_get_HTMLText(This,varHTMLText)	\
    (This)->lpVtbl -> get_HTMLText(This,varHTMLText)

#define Message_put_HTMLText(This,varHTMLText)	\
    (This)->lpVtbl -> put_HTMLText(This,varHTMLText)

#define Message_get_Recipients(This,varRecipients)	\
    (This)->lpVtbl -> get_Recipients(This,varRecipients)

#define Message_put_Recipients(This,varRecipients)	\
    (This)->lpVtbl -> put_Recipients(This,varRecipients)

#define Message_get_Attachments(This,varAttachments)	\
    (This)->lpVtbl -> get_Attachments(This,varAttachments)

#define Message_put_MessageFormat(This,__MIDL_0011)	\
    (This)->lpVtbl -> put_MessageFormat(This,__MIDL_0011)

#define Message_get_ContentLocation(This,varContentLocation)	\
    (This)->lpVtbl -> get_ContentLocation(This,varContentLocation)

#define Message_put_ContentLocation(This,varContentLocation)	\
    (This)->lpVtbl -> put_ContentLocation(This,varContentLocation)

#define Message_get_ContentBase(This,varContentBase)	\
    (This)->lpVtbl -> get_ContentBase(This,varContentBase)

#define Message_put_ContentBase(This,varContentBase)	\
    (This)->lpVtbl -> put_ContentBase(This,varContentBase)

#define Message_get_ContentID(This,varContentID)	\
    (This)->lpVtbl -> get_ContentID(This,varContentID)

#define Message_put_ContentID(This,varContentID)	\
    (This)->lpVtbl -> put_ContentID(This,varContentID)

#define Message_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define Message_Send(This)	\
    (This)->lpVtbl -> Send(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_Application_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varApplication);


void __RPC_STUB Message_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_Parent_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varParent);


void __RPC_STUB Message_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_Session_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varSession);


void __RPC_STUB Message_get_Session_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_Class_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *varClass);


void __RPC_STUB Message_get_Class_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_Size_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *varSize);


void __RPC_STUB Message_get_Size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_Importance_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pImportance);


void __RPC_STUB Message_get_Importance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Message_put_Importance_Proxy( 
    Message __RPC_FAR * This,
    /* [in] */ long varImportance);


void __RPC_STUB Message_put_Importance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_Subject_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pSubject);


void __RPC_STUB Message_get_Subject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Message_put_Subject_Proxy( 
    Message __RPC_FAR * This,
    /* [in] */ BSTR varSubject);


void __RPC_STUB Message_put_Subject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_Sender_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varSender);


void __RPC_STUB Message_get_Sender_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_TimeSent_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varTimeSent);


void __RPC_STUB Message_get_TimeSent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Message_put_TimeSent_Proxy( 
    Message __RPC_FAR * This,
    /* [in] */ VARIANT varTimeSent);


void __RPC_STUB Message_put_TimeSent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_TimeReceived_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varTimeReceived);


void __RPC_STUB Message_get_TimeReceived_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Message_put_TimeReceived_Proxy( 
    Message __RPC_FAR * This,
    /* [in] */ VARIANT varTimeReceived);


void __RPC_STUB Message_put_TimeReceived_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_Text_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varText);


void __RPC_STUB Message_get_Text_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Message_put_Text_Proxy( 
    Message __RPC_FAR * This,
    /* [in] */ VARIANT varText);


void __RPC_STUB Message_put_Text_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_HTMLText_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varHTMLText);


void __RPC_STUB Message_get_HTMLText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Message_put_HTMLText_Proxy( 
    Message __RPC_FAR * This,
    /* [in] */ VARIANT varHTMLText);


void __RPC_STUB Message_put_HTMLText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_Recipients_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varRecipients);


void __RPC_STUB Message_get_Recipients_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Message_put_Recipients_Proxy( 
    Message __RPC_FAR * This,
    /* [in] */ VARIANT varRecipients);


void __RPC_STUB Message_put_Recipients_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_Attachments_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varAttachments);


void __RPC_STUB Message_get_Attachments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE Message_put_MessageFormat_Proxy( 
    Message __RPC_FAR * This,
    /* [in] */ long __MIDL_0011);


void __RPC_STUB Message_put_MessageFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_ContentLocation_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varContentLocation);


void __RPC_STUB Message_get_ContentLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Message_put_ContentLocation_Proxy( 
    Message __RPC_FAR * This,
    /* [in] */ VARIANT varContentLocation);


void __RPC_STUB Message_put_ContentLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_ContentBase_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varContentBase);


void __RPC_STUB Message_get_ContentBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Message_put_ContentBase_Proxy( 
    Message __RPC_FAR * This,
    /* [in] */ VARIANT varContentBase);


void __RPC_STUB Message_put_ContentBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Message_get_ContentID_Proxy( 
    Message __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varContentID);


void __RPC_STUB Message_get_ContentID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Message_put_ContentID_Proxy( 
    Message __RPC_FAR * This,
    /* [in] */ VARIANT varContentID);


void __RPC_STUB Message_put_ContentID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Message_Delete_Proxy( 
    Message __RPC_FAR * This);


void __RPC_STUB Message_Delete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Message_Send_Proxy( 
    Message __RPC_FAR * This);


void __RPC_STUB Message_Send_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __Message_INTERFACE_DEFINED__ */


#ifndef __Recipients_INTERFACE_DEFINED__
#define __Recipients_INTERFACE_DEFINED__

/* interface Recipients */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_Recipients;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E064A04-9D99-11D0-ABE5-00AA0064D470")
    Recipients : public IDispatch
    {
    public:
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ VARIANT __RPC_FAR *varParent) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ VARIANT __RPC_FAR *varSession) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ long __RPC_FAR *varClass) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT __RPC_FAR *var,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *varCount) = 0;
        
        virtual /* [helpstring][propget][hidden][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Address,
            /* [optional][in] */ VARIANT Type,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct RecipientsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            Recipients __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            Recipients __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            Recipients __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            Recipients __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            Recipients __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            Recipients __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            Recipients __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            Recipients __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            Recipients __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varParent);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Session )( 
            Recipients __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varSession);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Class )( 
            Recipients __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *varClass);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            Recipients __RPC_FAR * This,
            /* [in] */ VARIANT __RPC_FAR *var,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            Recipients __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *varCount);
        
        /* [helpstring][propget][hidden][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            Recipients __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            Recipients __RPC_FAR * This,
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Address,
            /* [optional][in] */ VARIANT Type,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Delete )( 
            Recipients __RPC_FAR * This);
        
        END_INTERFACE
    } RecipientsVtbl;

    interface Recipients
    {
        CONST_VTBL struct RecipientsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Recipients_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define Recipients_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define Recipients_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define Recipients_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define Recipients_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define Recipients_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define Recipients_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define Recipients_get_Application(This,varApplication)	\
    (This)->lpVtbl -> get_Application(This,varApplication)

#define Recipients_get_Parent(This,varParent)	\
    (This)->lpVtbl -> get_Parent(This,varParent)

#define Recipients_get_Session(This,varSession)	\
    (This)->lpVtbl -> get_Session(This,varSession)

#define Recipients_get_Class(This,varClass)	\
    (This)->lpVtbl -> get_Class(This,varClass)

#define Recipients_get_Item(This,var,pvarResult)	\
    (This)->lpVtbl -> get_Item(This,var,pvarResult)

#define Recipients_get_Count(This,varCount)	\
    (This)->lpVtbl -> get_Count(This,varCount)

#define Recipients_get__NewEnum(This,ppunkResult)	\
    (This)->lpVtbl -> get__NewEnum(This,ppunkResult)

#define Recipients_Add(This,Name,Address,Type,pvarResult)	\
    (This)->lpVtbl -> Add(This,Name,Address,Type,pvarResult)

#define Recipients_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Recipients_get_Application_Proxy( 
    Recipients __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varApplication);


void __RPC_STUB Recipients_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Recipients_get_Parent_Proxy( 
    Recipients __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varParent);


void __RPC_STUB Recipients_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Recipients_get_Session_Proxy( 
    Recipients __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varSession);


void __RPC_STUB Recipients_get_Session_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Recipients_get_Class_Proxy( 
    Recipients __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *varClass);


void __RPC_STUB Recipients_get_Class_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Recipients_get_Item_Proxy( 
    Recipients __RPC_FAR * This,
    /* [in] */ VARIANT __RPC_FAR *var,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);


void __RPC_STUB Recipients_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Recipients_get_Count_Proxy( 
    Recipients __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *varCount);


void __RPC_STUB Recipients_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][hidden][id] */ HRESULT STDMETHODCALLTYPE Recipients_get__NewEnum_Proxy( 
    Recipients __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkResult);


void __RPC_STUB Recipients_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Recipients_Add_Proxy( 
    Recipients __RPC_FAR * This,
    /* [optional][in] */ VARIANT Name,
    /* [optional][in] */ VARIANT Address,
    /* [optional][in] */ VARIANT Type,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);


void __RPC_STUB Recipients_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Recipients_Delete_Proxy( 
    Recipients __RPC_FAR * This);


void __RPC_STUB Recipients_Delete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __Recipients_INTERFACE_DEFINED__ */


#ifndef __Recipient_INTERFACE_DEFINED__
#define __Recipient_INTERFACE_DEFINED__

/* interface Recipient */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_Recipient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E064A05-9D99-11D0-ABE5-00AA0064D470")
    Recipient : public IDispatch
    {
    public:
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ VARIANT __RPC_FAR *varParent) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ VARIANT __RPC_FAR *varSession) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ long __RPC_FAR *varClass) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ long __RPC_FAR *pType) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ long varType) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Address( 
            /* [retval][out] */ BSTR __RPC_FAR *pAddress) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Address( 
            /* [in] */ BSTR varAddress) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct RecipientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            Recipient __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            Recipient __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            Recipient __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            Recipient __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            Recipient __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            Recipient __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            Recipient __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            Recipient __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            Recipient __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varParent);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Session )( 
            Recipient __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varSession);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Class )( 
            Recipient __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *varClass);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            Recipient __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Name )( 
            Recipient __RPC_FAR * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Type )( 
            Recipient __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pType);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Type )( 
            Recipient __RPC_FAR * This,
            /* [in] */ long varType);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Address )( 
            Recipient __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAddress);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Address )( 
            Recipient __RPC_FAR * This,
            /* [in] */ BSTR varAddress);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Delete )( 
            Recipient __RPC_FAR * This);
        
        END_INTERFACE
    } RecipientVtbl;

    interface Recipient
    {
        CONST_VTBL struct RecipientVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Recipient_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define Recipient_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define Recipient_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define Recipient_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define Recipient_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define Recipient_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define Recipient_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define Recipient_get_Application(This,varApplication)	\
    (This)->lpVtbl -> get_Application(This,varApplication)

#define Recipient_get_Parent(This,varParent)	\
    (This)->lpVtbl -> get_Parent(This,varParent)

#define Recipient_get_Session(This,varSession)	\
    (This)->lpVtbl -> get_Session(This,varSession)

#define Recipient_get_Class(This,varClass)	\
    (This)->lpVtbl -> get_Class(This,varClass)

#define Recipient_get_Name(This,pbstrName)	\
    (This)->lpVtbl -> get_Name(This,pbstrName)

#define Recipient_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define Recipient_get_Type(This,pType)	\
    (This)->lpVtbl -> get_Type(This,pType)

#define Recipient_put_Type(This,varType)	\
    (This)->lpVtbl -> put_Type(This,varType)

#define Recipient_get_Address(This,pAddress)	\
    (This)->lpVtbl -> get_Address(This,pAddress)

#define Recipient_put_Address(This,varAddress)	\
    (This)->lpVtbl -> put_Address(This,varAddress)

#define Recipient_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Recipient_get_Application_Proxy( 
    Recipient __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varApplication);


void __RPC_STUB Recipient_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Recipient_get_Parent_Proxy( 
    Recipient __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varParent);


void __RPC_STUB Recipient_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Recipient_get_Session_Proxy( 
    Recipient __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varSession);


void __RPC_STUB Recipient_get_Session_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Recipient_get_Class_Proxy( 
    Recipient __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *varClass);


void __RPC_STUB Recipient_get_Class_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Recipient_get_Name_Proxy( 
    Recipient __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrName);


void __RPC_STUB Recipient_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Recipient_put_Name_Proxy( 
    Recipient __RPC_FAR * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB Recipient_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Recipient_get_Type_Proxy( 
    Recipient __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pType);


void __RPC_STUB Recipient_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Recipient_put_Type_Proxy( 
    Recipient __RPC_FAR * This,
    /* [in] */ long varType);


void __RPC_STUB Recipient_put_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Recipient_get_Address_Proxy( 
    Recipient __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAddress);


void __RPC_STUB Recipient_get_Address_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Recipient_put_Address_Proxy( 
    Recipient __RPC_FAR * This,
    /* [in] */ BSTR varAddress);


void __RPC_STUB Recipient_put_Address_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Recipient_Delete_Proxy( 
    Recipient __RPC_FAR * This);


void __RPC_STUB Recipient_Delete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __Recipient_INTERFACE_DEFINED__ */


#ifndef __Attachments_INTERFACE_DEFINED__
#define __Attachments_INTERFACE_DEFINED__

/* interface Attachments */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_Attachments;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E064A06-9D99-11D0-ABE5-00AA0064D470")
    Attachments : public IDispatch
    {
    public:
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ VARIANT __RPC_FAR *varParent) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ VARIANT __RPC_FAR *varSession) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ long __RPC_FAR *varClass) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT __RPC_FAR *var,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *varCount) = 0;
        
        virtual /* [helpstring][propget][hidden][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Source,
            /* [optional][in] */ VARIANT ContentLocation,
            /* [optional][in] */ VARIANT ContentBase,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct AttachmentsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            Attachments __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            Attachments __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            Attachments __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            Attachments __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            Attachments __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            Attachments __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            Attachments __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            Attachments __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            Attachments __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varParent);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Session )( 
            Attachments __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varSession);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Class )( 
            Attachments __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *varClass);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            Attachments __RPC_FAR * This,
            /* [in] */ VARIANT __RPC_FAR *var,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            Attachments __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *varCount);
        
        /* [helpstring][propget][hidden][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            Attachments __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            Attachments __RPC_FAR * This,
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Source,
            /* [optional][in] */ VARIANT ContentLocation,
            /* [optional][in] */ VARIANT ContentBase,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Delete )( 
            Attachments __RPC_FAR * This);
        
        END_INTERFACE
    } AttachmentsVtbl;

    interface Attachments
    {
        CONST_VTBL struct AttachmentsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Attachments_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define Attachments_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define Attachments_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define Attachments_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define Attachments_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define Attachments_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define Attachments_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define Attachments_get_Application(This,varApplication)	\
    (This)->lpVtbl -> get_Application(This,varApplication)

#define Attachments_get_Parent(This,varParent)	\
    (This)->lpVtbl -> get_Parent(This,varParent)

#define Attachments_get_Session(This,varSession)	\
    (This)->lpVtbl -> get_Session(This,varSession)

#define Attachments_get_Class(This,varClass)	\
    (This)->lpVtbl -> get_Class(This,varClass)

#define Attachments_get_Item(This,var,pvarResult)	\
    (This)->lpVtbl -> get_Item(This,var,pvarResult)

#define Attachments_get_Count(This,varCount)	\
    (This)->lpVtbl -> get_Count(This,varCount)

#define Attachments_get__NewEnum(This,ppunkResult)	\
    (This)->lpVtbl -> get__NewEnum(This,ppunkResult)

#define Attachments_Add(This,Name,Type,Source,ContentLocation,ContentBase,pvarResult)	\
    (This)->lpVtbl -> Add(This,Name,Type,Source,ContentLocation,ContentBase,pvarResult)

#define Attachments_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachments_get_Application_Proxy( 
    Attachments __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varApplication);


void __RPC_STUB Attachments_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachments_get_Parent_Proxy( 
    Attachments __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varParent);


void __RPC_STUB Attachments_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachments_get_Session_Proxy( 
    Attachments __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varSession);


void __RPC_STUB Attachments_get_Session_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachments_get_Class_Proxy( 
    Attachments __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *varClass);


void __RPC_STUB Attachments_get_Class_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachments_get_Item_Proxy( 
    Attachments __RPC_FAR * This,
    /* [in] */ VARIANT __RPC_FAR *var,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);


void __RPC_STUB Attachments_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachments_get_Count_Proxy( 
    Attachments __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *varCount);


void __RPC_STUB Attachments_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][hidden][id] */ HRESULT STDMETHODCALLTYPE Attachments_get__NewEnum_Proxy( 
    Attachments __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkResult);


void __RPC_STUB Attachments_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Attachments_Add_Proxy( 
    Attachments __RPC_FAR * This,
    /* [optional][in] */ VARIANT Name,
    /* [optional][in] */ VARIANT Type,
    /* [optional][in] */ VARIANT Source,
    /* [optional][in] */ VARIANT ContentLocation,
    /* [optional][in] */ VARIANT ContentBase,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarResult);


void __RPC_STUB Attachments_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Attachments_Delete_Proxy( 
    Attachments __RPC_FAR * This);


void __RPC_STUB Attachments_Delete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __Attachments_INTERFACE_DEFINED__ */


#ifndef __Attachment_INTERFACE_DEFINED__
#define __Attachment_INTERFACE_DEFINED__

/* interface Attachment */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_Attachment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E064A07-9D99-11D0-ABE5-00AA0064D470")
    Attachment : public IDispatch
    {
    public:
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ VARIANT __RPC_FAR *varParent) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ VARIANT __RPC_FAR *varSession) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ long __RPC_FAR *varClass) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrName) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ long __RPC_FAR *pType) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ long varType) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Source( 
            /* [retval][out] */ VARIANT __RPC_FAR *varSource) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Source( 
            /* [in] */ VARIANT varSource) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContentLocation( 
            /* [retval][out] */ VARIANT __RPC_FAR *varContentLocation) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContentBase( 
            /* [retval][out] */ VARIANT __RPC_FAR *varContentBase) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContentID( 
            /* [retval][out] */ VARIANT __RPC_FAR *varContentID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ReadFromFile( 
            /* [in] */ BSTR FileName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE WriteToFile( 
            /* [in] */ BSTR FileName) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct AttachmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            Attachment __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            Attachment __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            Attachment __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            Attachment __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            Attachment __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            Attachment __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            Attachment __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            Attachment __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            Attachment __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varParent);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Session )( 
            Attachment __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varSession);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Class )( 
            Attachment __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *varClass);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            Attachment __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrName);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Name )( 
            Attachment __RPC_FAR * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Type )( 
            Attachment __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pType);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Type )( 
            Attachment __RPC_FAR * This,
            /* [in] */ long varType);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Source )( 
            Attachment __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varSource);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Source )( 
            Attachment __RPC_FAR * This,
            /* [in] */ VARIANT varSource);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ContentLocation )( 
            Attachment __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varContentLocation);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ContentBase )( 
            Attachment __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varContentBase);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ContentID )( 
            Attachment __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varContentID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Delete )( 
            Attachment __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReadFromFile )( 
            Attachment __RPC_FAR * This,
            /* [in] */ BSTR FileName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *WriteToFile )( 
            Attachment __RPC_FAR * This,
            /* [in] */ BSTR FileName);
        
        END_INTERFACE
    } AttachmentVtbl;

    interface Attachment
    {
        CONST_VTBL struct AttachmentVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Attachment_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define Attachment_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define Attachment_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define Attachment_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define Attachment_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define Attachment_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define Attachment_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define Attachment_get_Application(This,varApplication)	\
    (This)->lpVtbl -> get_Application(This,varApplication)

#define Attachment_get_Parent(This,varParent)	\
    (This)->lpVtbl -> get_Parent(This,varParent)

#define Attachment_get_Session(This,varSession)	\
    (This)->lpVtbl -> get_Session(This,varSession)

#define Attachment_get_Class(This,varClass)	\
    (This)->lpVtbl -> get_Class(This,varClass)

#define Attachment_get_Name(This,pbstrName)	\
    (This)->lpVtbl -> get_Name(This,pbstrName)

#define Attachment_put_Name(This,bstrName)	\
    (This)->lpVtbl -> put_Name(This,bstrName)

#define Attachment_get_Type(This,pType)	\
    (This)->lpVtbl -> get_Type(This,pType)

#define Attachment_put_Type(This,varType)	\
    (This)->lpVtbl -> put_Type(This,varType)

#define Attachment_get_Source(This,varSource)	\
    (This)->lpVtbl -> get_Source(This,varSource)

#define Attachment_put_Source(This,varSource)	\
    (This)->lpVtbl -> put_Source(This,varSource)

#define Attachment_get_ContentLocation(This,varContentLocation)	\
    (This)->lpVtbl -> get_ContentLocation(This,varContentLocation)

#define Attachment_get_ContentBase(This,varContentBase)	\
    (This)->lpVtbl -> get_ContentBase(This,varContentBase)

#define Attachment_get_ContentID(This,varContentID)	\
    (This)->lpVtbl -> get_ContentID(This,varContentID)

#define Attachment_Delete(This)	\
    (This)->lpVtbl -> Delete(This)

#define Attachment_ReadFromFile(This,FileName)	\
    (This)->lpVtbl -> ReadFromFile(This,FileName)

#define Attachment_WriteToFile(This,FileName)	\
    (This)->lpVtbl -> WriteToFile(This,FileName)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachment_get_Application_Proxy( 
    Attachment __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varApplication);


void __RPC_STUB Attachment_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachment_get_Parent_Proxy( 
    Attachment __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varParent);


void __RPC_STUB Attachment_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachment_get_Session_Proxy( 
    Attachment __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varSession);


void __RPC_STUB Attachment_get_Session_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachment_get_Class_Proxy( 
    Attachment __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *varClass);


void __RPC_STUB Attachment_get_Class_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachment_get_Name_Proxy( 
    Attachment __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrName);


void __RPC_STUB Attachment_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Attachment_put_Name_Proxy( 
    Attachment __RPC_FAR * This,
    /* [in] */ BSTR bstrName);


void __RPC_STUB Attachment_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachment_get_Type_Proxy( 
    Attachment __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pType);


void __RPC_STUB Attachment_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Attachment_put_Type_Proxy( 
    Attachment __RPC_FAR * This,
    /* [in] */ long varType);


void __RPC_STUB Attachment_put_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachment_get_Source_Proxy( 
    Attachment __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varSource);


void __RPC_STUB Attachment_get_Source_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Attachment_put_Source_Proxy( 
    Attachment __RPC_FAR * This,
    /* [in] */ VARIANT varSource);


void __RPC_STUB Attachment_put_Source_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachment_get_ContentLocation_Proxy( 
    Attachment __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varContentLocation);


void __RPC_STUB Attachment_get_ContentLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachment_get_ContentBase_Proxy( 
    Attachment __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varContentBase);


void __RPC_STUB Attachment_get_ContentBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Attachment_get_ContentID_Proxy( 
    Attachment __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varContentID);


void __RPC_STUB Attachment_get_ContentID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Attachment_Delete_Proxy( 
    Attachment __RPC_FAR * This);


void __RPC_STUB Attachment_Delete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Attachment_ReadFromFile_Proxy( 
    Attachment __RPC_FAR * This,
    /* [in] */ BSTR FileName);


void __RPC_STUB Attachment_ReadFromFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Attachment_WriteToFile_Proxy( 
    Attachment __RPC_FAR * This,
    /* [in] */ BSTR FileName);


void __RPC_STUB Attachment_WriteToFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __Attachment_INTERFACE_DEFINED__ */


#ifndef __AddressEntry_INTERFACE_DEFINED__
#define __AddressEntry_INTERFACE_DEFINED__

/* interface AddressEntry */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_AddressEntry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E064A08-9D99-11D0-ABE5-00AA0064D470")
    AddressEntry : public IDispatch
    {
    public:
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ VARIANT __RPC_FAR *varParent) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ VARIANT __RPC_FAR *varSession) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Class( 
            /* [retval][out] */ long __RPC_FAR *varClass) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrName) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Address( 
            /* [retval][out] */ BSTR __RPC_FAR *varAddress) = 0;
        
        virtual /* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ BSTR __RPC_FAR *varType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct AddressEntryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            AddressEntry __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            AddressEntry __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            AddressEntry __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            AddressEntry __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            AddressEntry __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            AddressEntry __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            AddressEntry __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Application )( 
            AddressEntry __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varApplication);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Parent )( 
            AddressEntry __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varParent);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Session )( 
            AddressEntry __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *varSession);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Class )( 
            AddressEntry __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *varClass);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            AddressEntry __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrName);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Address )( 
            AddressEntry __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *varAddress);
        
        /* [readonly][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Type )( 
            AddressEntry __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *varType);
        
        END_INTERFACE
    } AddressEntryVtbl;

    interface AddressEntry
    {
        CONST_VTBL struct AddressEntryVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define AddressEntry_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define AddressEntry_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define AddressEntry_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define AddressEntry_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define AddressEntry_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define AddressEntry_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define AddressEntry_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define AddressEntry_get_Application(This,varApplication)	\
    (This)->lpVtbl -> get_Application(This,varApplication)

#define AddressEntry_get_Parent(This,varParent)	\
    (This)->lpVtbl -> get_Parent(This,varParent)

#define AddressEntry_get_Session(This,varSession)	\
    (This)->lpVtbl -> get_Session(This,varSession)

#define AddressEntry_get_Class(This,varClass)	\
    (This)->lpVtbl -> get_Class(This,varClass)

#define AddressEntry_get_Name(This,pbstrName)	\
    (This)->lpVtbl -> get_Name(This,pbstrName)

#define AddressEntry_get_Address(This,varAddress)	\
    (This)->lpVtbl -> get_Address(This,varAddress)

#define AddressEntry_get_Type(This,varType)	\
    (This)->lpVtbl -> get_Type(This,varType)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE AddressEntry_get_Application_Proxy( 
    AddressEntry __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varApplication);


void __RPC_STUB AddressEntry_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE AddressEntry_get_Parent_Proxy( 
    AddressEntry __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varParent);


void __RPC_STUB AddressEntry_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE AddressEntry_get_Session_Proxy( 
    AddressEntry __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *varSession);


void __RPC_STUB AddressEntry_get_Session_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE AddressEntry_get_Class_Proxy( 
    AddressEntry __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *varClass);


void __RPC_STUB AddressEntry_get_Class_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE AddressEntry_get_Name_Proxy( 
    AddressEntry __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrName);


void __RPC_STUB AddressEntry_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE AddressEntry_get_Address_Proxy( 
    AddressEntry __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *varAddress);


void __RPC_STUB AddressEntry_get_Address_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [readonly][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE AddressEntry_get_Type_Proxy( 
    AddressEntry __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *varType);


void __RPC_STUB AddressEntry_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __AddressEntry_INTERFACE_DEFINED__ */



#ifndef __CDONTS_LIBRARY_DEFINED__
#define __CDONTS_LIBRARY_DEFINED__

/* library CDONTS */
/* [helpstring][version][uuid] */ 

typedef /* [helpstring] */ 
enum CdoRecipientTypes
    {	CdoTo	= 1,
	CdoCc	= 2,
	CdoBcc	= 3
    }	CdoRecipientTypes;

typedef /* [helpstring] */ 
enum CdoImportance
    {	CdoLow	= 0,
	CdoNormal	= 1,
	CdoHigh	= 2
    }	CdoImportance;

typedef /* [helpstring] */ 
enum CdoAttachmentTypes
    {	CdoFileData	= 1,
	CdoEmbeddedMessage	= 4
    }	CdoAttachmentTypes;

typedef /* [helpstring] */ 
enum CdoFolderTypes
    {	CdoDefaultFolderInbox	= 1,
	CdoDefaultFolderOutbox	= 2
    }	CdoFolderTypes;

typedef /* [helpstring] */ 
enum CdoMessageFormats
    {	CdoMime	= 0,
	CdoText	= 1
    }	CdoMessageFormats;

typedef /* [helpstring] */ 
enum CdoMailFormats
    {	CdoMailFormatMime	= 0,
	CdoMailFormatText	= 1
    }	CdoMailFormats;

typedef /* [helpstring] */ 
enum CdoBodyFormats
    {	CdoBodyFormatHTML	= 0,
	CdoBodyFormatText	= 1
    }	CdoBodyFormats;

typedef /* [helpstring] */ 
enum CdoEncodingMethod
    {	CdoEncodingUUencode	= 0,
	CdoEncodingBase64	= 1
    }	CdoEncodingMethod;

typedef /* [public][helpstring] */ 
enum __MIDL___MIDL_itf_actmsg_0253_0001
    {	CdoSession	= 0,
	CdoFolder	= 2,
	CdoMsg	= 3,
	CdoRecipient	= 4,
	CdoAttachment	= 5,
	CdoAddressEntry	= 8,
	CdoMessages	= 16,
	CdoRecipients	= 17,
	CdoAttachments	= 18,
	CdoClassTotal	= 29
    }	CdoObjectClass;










EXTERN_C const IID LIBID_CDONTS;

EXTERN_C const CLSID CLSID_NewMail;

#ifdef __cplusplus

class DECLSPEC_UUID("AF0EB60E-0775-11D1-A77D-00C04FC2F5B3")
NewMail;
#endif

EXTERN_C const CLSID CLSID_Session;

#ifdef __cplusplus

class DECLSPEC_UUID("0E064AEC-9D99-11D0-ABE5-00AA0064D470")
Session;
#endif
#endif /* __CDONTS_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\capi.h ===
//+---------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//  File:       capi.h
//
//----------------------------------------------------------------------------

#include <wincrypt.h>
#include <sipbase.h>
#include <mscat.h>
#include <mssip.h>
#include <wintrust.h>

#ifndef _JTRUST_H
#define _JTRUST_H

#if !defined(JAVA_TRUST_PROVIDER)

#ifdef __cplusplus
extern "C" {
#endif


// New guids for Java Policy Provider
// {E6F795B1-F738-11d0-A72F-00A0C903B83D}
#define JAVA_POLICY_PROVIDER_DOWNLOAD \
{ 0xe6f795b1, 0xf738, 0x11d0, {0xa7, 0x2f, 0x0, 0xa0, 0xc9, 0x3, 0xb8, 0x3d } }

// {E6F795B2-F738-11d0-A72F-00A0C903B83D}
#define JAVA_POLICY_PROVIDER_CHECK \
{ 0xe6f795b2, 0xf738, 0x11d0, {0xa7, 0x2f, 0x0, 0xa0, 0xc9, 0x3, 0xb8, 0x3d } }

typedef struct _JAVA_TRUST {
    DWORD       cbSize;                   // Size of structure
    DWORD       flag;                     // Reserved
    BOOL        fAllActiveXPermissions;   // ActiveX explicitly asked for all (must have been signed)
    BOOL        fAllPermissions;          // Java permissions, explicit ask for all
    DWORD       dwEncodingType;           // Encoding type
    PBYTE       pbJavaPermissions;        // Encoded java permission blob
    DWORD       cbJavaPermissions;
    PBYTE       pbSigner;                 // Encoded signer.
    DWORD       cbSigner;
    LPCWSTR     pwszZone;                 // Zone index (copied from action data)
    GUID        guidZone;                 // Not used currently
    HRESULT     hVerify;                  // Authenticode policy return
} JAVA_TRUST, *PJAVA_TRUST;

typedef struct _JAVA_POLICY_PROVIDER {
    DWORD                 cbSize;                   // Size of policy provider
    LPVOID                pZoneManager;             // Zone interface manager
    LPCWSTR               pwszZone;                 // Zone index
    BOOL                  fNoBadUI;                 // Optional bad ui
    PJAVA_TRUST           pbJavaTrust;              // Returned java information (CoTaskMemAlloc)
    DWORD                 cbJavaTrust;              // Total allocated size of pJavaTrust
    DWORD                 dwActionID;               // Optional ActionID ID
    DWORD                 dwUnsignedActionID;       // Optional ActionID ID
    BOOL                  VMBased;                  // Called from VM (FALSE by DEFAULT)
} JAVA_POLICY_PROVIDER, *PJAVA_POLICY_PROVIDER;

#ifdef __cplusplus
}
#endif

#endif // !defined(JAVA_TRUST_PROVIDER)
#endif // _JTRUST_H
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\callobj.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for callobj.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __callobj_h__
#define __callobj_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __ICallFrame_FWD_DEFINED__
#define __ICallFrame_FWD_DEFINED__
typedef interface ICallFrame ICallFrame;
#endif 	/* __ICallFrame_FWD_DEFINED__ */


#ifndef __ICallIndirect_FWD_DEFINED__
#define __ICallIndirect_FWD_DEFINED__
typedef interface ICallIndirect ICallIndirect;
#endif 	/* __ICallIndirect_FWD_DEFINED__ */


#ifndef __ICallInterceptor_FWD_DEFINED__
#define __ICallInterceptor_FWD_DEFINED__
typedef interface ICallInterceptor ICallInterceptor;
#endif 	/* __ICallInterceptor_FWD_DEFINED__ */


#ifndef __ICallFrameEvents_FWD_DEFINED__
#define __ICallFrameEvents_FWD_DEFINED__
typedef interface ICallFrameEvents ICallFrameEvents;
#endif 	/* __ICallFrameEvents_FWD_DEFINED__ */


#ifndef __ICallUnmarshal_FWD_DEFINED__
#define __ICallUnmarshal_FWD_DEFINED__
typedef interface ICallUnmarshal ICallUnmarshal;
#endif 	/* __ICallUnmarshal_FWD_DEFINED__ */


#ifndef __ICallFrameWalker_FWD_DEFINED__
#define __ICallFrameWalker_FWD_DEFINED__
typedef interface ICallFrameWalker ICallFrameWalker;
#endif 	/* __ICallFrameWalker_FWD_DEFINED__ */


#ifndef __IInterfaceRelated_FWD_DEFINED__
#define __IInterfaceRelated_FWD_DEFINED__
typedef interface IInterfaceRelated IInterfaceRelated;
#endif 	/* __IInterfaceRelated_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_callobj_0000_0000 */
/* [local] */ 









extern RPC_IF_HANDLE __MIDL_itf_callobj_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_callobj_0000_0000_v0_0_s_ifspec;

#ifndef __ICallFrame_INTERFACE_DEFINED__
#define __ICallFrame_INTERFACE_DEFINED__

/* interface ICallFrame */
/* [local][unique][object][uuid] */ 

typedef /* [public][public][public] */ struct __MIDL_ICallFrame_0001
    {
    ULONG iMethod;
    BOOL fHasInValues;
    BOOL fHasInOutValues;
    BOOL fHasOutValues;
    BOOL fDerivesFromIDispatch;
    LONG cInInterfacesMax;
    LONG cInOutInterfacesMax;
    LONG cOutInterfacesMax;
    LONG cTopLevelInInterfaces;
    IID iid;
    ULONG cMethod;
    ULONG cParams;
    } 	CALLFRAMEINFO;

typedef /* [public][public] */ struct __MIDL_ICallFrame_0002
    {
    BOOLEAN fIn;
    BOOLEAN fOut;
    ULONG stackOffset;
    ULONG cbParam;
    } 	CALLFRAMEPARAMINFO;

typedef /* [public][public] */ 
enum __MIDL_ICallFrame_0003
    {	CALLFRAME_COPY_NESTED	= 1,
	CALLFRAME_COPY_INDEPENDENT	= 2
    } 	CALLFRAME_COPY;


enum CALLFRAME_FREE
    {	CALLFRAME_FREE_NONE	= 0,
	CALLFRAME_FREE_IN	= 1,
	CALLFRAME_FREE_INOUT	= 2,
	CALLFRAME_FREE_OUT	= 4,
	CALLFRAME_FREE_TOP_INOUT	= 8,
	CALLFRAME_FREE_TOP_OUT	= 16,
	CALLFRAME_FREE_ALL	= 31
    } ;

enum CALLFRAME_NULL
    {	CALLFRAME_NULL_NONE	= 0,
	CALLFRAME_NULL_INOUT	= 2,
	CALLFRAME_NULL_OUT	= 4,
	CALLFRAME_NULL_ALL	= 6
    } ;

enum CALLFRAME_WALK
    {	CALLFRAME_WALK_IN	= 1,
	CALLFRAME_WALK_INOUT	= 2,
	CALLFRAME_WALK_OUT	= 4
    } ;
typedef /* [public][public][public][public][public][public][public] */ struct __MIDL_ICallFrame_0004
    {
    BOOLEAN fIn;
    DWORD dwDestContext;
    LPVOID pvDestContext;
    IUnknown *punkReserved;
    GUID guidTransferSyntax;
    } 	CALLFRAME_MARSHALCONTEXT;


EXTERN_C const IID IID_ICallFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D573B4B0-894E-11d2-B8B6-00C04FB9618A")
    ICallFrame : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetInfo( 
            /* [out] */ CALLFRAMEINFO *pInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIIDAndMethod( 
            /* [out] */ IID *pIID,
            /* [out] */ ULONG *piMethod) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNames( 
            /* [annotation][out] */ 
            __deref_out_opt  LPWSTR *pwszInterface,
            /* [annotation][out] */ 
            __deref_out_opt  LPWSTR *pwszMethod) = 0;
        
        virtual PVOID STDMETHODCALLTYPE GetStackLocation( void) = 0;
        
        virtual void STDMETHODCALLTYPE SetStackLocation( 
            /* [in] */ PVOID pvStack) = 0;
        
        virtual void STDMETHODCALLTYPE SetReturnValue( 
            /* [in] */ HRESULT hr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetReturnValue( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetParamInfo( 
            /* [in] */ ULONG iparam,
            /* [out] */ CALLFRAMEPARAMINFO *pInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetParam( 
            /* [in] */ ULONG iparam,
            /* [in] */ VARIANT *pvar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetParam( 
            /* [in] */ ULONG iparam,
            /* [out] */ VARIANT *pvar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Copy( 
            /* [in] */ CALLFRAME_COPY copyControl,
            /* [in] */ ICallFrameWalker *pWalker,
            /* [out] */ ICallFrame **ppFrame) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Free( 
            /* [in] */ ICallFrame *pframeArgsDest,
            /* [in] */ ICallFrameWalker *pWalkerDestFree,
            /* [in] */ ICallFrameWalker *pWalkerCopy,
            /* [in] */ DWORD freeFlags,
            /* [in] */ ICallFrameWalker *pWalkerFree,
            /* [in] */ DWORD nullFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FreeParam( 
            /* [in] */ ULONG iparam,
            /* [in] */ DWORD freeFlags,
            /* [in] */ ICallFrameWalker *pWalkerFree,
            /* [in] */ DWORD nullFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE WalkFrame( 
            /* [in] */ DWORD walkWhat,
            /* [in] */ ICallFrameWalker *pWalker) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMarshalSizeMax( 
            /* [in] */ CALLFRAME_MARSHALCONTEXT *pmshlContext,
            /* [in] */ MSHLFLAGS mshlflags,
            /* [out] */ ULONG *pcbBufferNeeded) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Marshal( 
            /* [in] */ CALLFRAME_MARSHALCONTEXT *pmshlContext,
            /* [in] */ MSHLFLAGS mshlflags,
            /* [size_is][in] */ PVOID pBuffer,
            /* [in] */ ULONG cbBuffer,
            /* [out] */ ULONG *pcbBufferUsed,
            /* [out] */ RPCOLEDATAREP *pdataRep,
            /* [out] */ ULONG *prpcFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unmarshal( 
            /* [size_is][in] */ PVOID pBuffer,
            /* [in] */ ULONG cbBuffer,
            /* [in] */ RPCOLEDATAREP dataRep,
            /* [in] */ CALLFRAME_MARSHALCONTEXT *pcontext,
            /* [out] */ ULONG *pcbUnmarshalled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseMarshalData( 
            /* [size_is][in] */ PVOID pBuffer,
            /* [in] */ ULONG cbBuffer,
            /* [in] */ ULONG ibFirstRelease,
            /* [in] */ RPCOLEDATAREP dataRep,
            /* [in] */ CALLFRAME_MARSHALCONTEXT *pcontext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ void *pvReceiver,
            ...) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICallFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICallFrame * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICallFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICallFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInfo )( 
            ICallFrame * This,
            /* [out] */ CALLFRAMEINFO *pInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIIDAndMethod )( 
            ICallFrame * This,
            /* [out] */ IID *pIID,
            /* [out] */ ULONG *piMethod);
        
        HRESULT ( STDMETHODCALLTYPE *GetNames )( 
            ICallFrame * This,
            /* [annotation][out] */ 
            __deref_out_opt  LPWSTR *pwszInterface,
            /* [annotation][out] */ 
            __deref_out_opt  LPWSTR *pwszMethod);
        
        PVOID ( STDMETHODCALLTYPE *GetStackLocation )( 
            ICallFrame * This);
        
        void ( STDMETHODCALLTYPE *SetStackLocation )( 
            ICallFrame * This,
            /* [in] */ PVOID pvStack);
        
        void ( STDMETHODCALLTYPE *SetReturnValue )( 
            ICallFrame * This,
            /* [in] */ HRESULT hr);
        
        HRESULT ( STDMETHODCALLTYPE *GetReturnValue )( 
            ICallFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetParamInfo )( 
            ICallFrame * This,
            /* [in] */ ULONG iparam,
            /* [out] */ CALLFRAMEPARAMINFO *pInfo);
        
        HRESULT ( STDMETHODCALLTYPE *SetParam )( 
            ICallFrame * This,
            /* [in] */ ULONG iparam,
            /* [in] */ VARIANT *pvar);
        
        HRESULT ( STDMETHODCALLTYPE *GetParam )( 
            ICallFrame * This,
            /* [in] */ ULONG iparam,
            /* [out] */ VARIANT *pvar);
        
        HRESULT ( STDMETHODCALLTYPE *Copy )( 
            ICallFrame * This,
            /* [in] */ CALLFRAME_COPY copyControl,
            /* [in] */ ICallFrameWalker *pWalker,
            /* [out] */ ICallFrame **ppFrame);
        
        HRESULT ( STDMETHODCALLTYPE *Free )( 
            ICallFrame * This,
            /* [in] */ ICallFrame *pframeArgsDest,
            /* [in] */ ICallFrameWalker *pWalkerDestFree,
            /* [in] */ ICallFrameWalker *pWalkerCopy,
            /* [in] */ DWORD freeFlags,
            /* [in] */ ICallFrameWalker *pWalkerFree,
            /* [in] */ DWORD nullFlags);
        
        HRESULT ( STDMETHODCALLTYPE *FreeParam )( 
            ICallFrame * This,
            /* [in] */ ULONG iparam,
            /* [in] */ DWORD freeFlags,
            /* [in] */ ICallFrameWalker *pWalkerFree,
            /* [in] */ DWORD nullFlags);
        
        HRESULT ( STDMETHODCALLTYPE *WalkFrame )( 
            ICallFrame * This,
            /* [in] */ DWORD walkWhat,
            /* [in] */ ICallFrameWalker *pWalker);
        
        HRESULT ( STDMETHODCALLTYPE *GetMarshalSizeMax )( 
            ICallFrame * This,
            /* [in] */ CALLFRAME_MARSHALCONTEXT *pmshlContext,
            /* [in] */ MSHLFLAGS mshlflags,
            /* [out] */ ULONG *pcbBufferNeeded);
        
        HRESULT ( STDMETHODCALLTYPE *Marshal )( 
            ICallFrame * This,
            /* [in] */ CALLFRAME_MARSHALCONTEXT *pmshlContext,
            /* [in] */ MSHLFLAGS mshlflags,
            /* [size_is][in] */ PVOID pBuffer,
            /* [in] */ ULONG cbBuffer,
            /* [out] */ ULONG *pcbBufferUsed,
            /* [out] */ RPCOLEDATAREP *pdataRep,
            /* [out] */ ULONG *prpcFlags);
        
        HRESULT ( STDMETHODCALLTYPE *Unmarshal )( 
            ICallFrame * This,
            /* [size_is][in] */ PVOID pBuffer,
            /* [in] */ ULONG cbBuffer,
            /* [in] */ RPCOLEDATAREP dataRep,
            /* [in] */ CALLFRAME_MARSHALCONTEXT *pcontext,
            /* [out] */ ULONG *pcbUnmarshalled);
        
        HRESULT ( STDMETHODCALLTYPE *ReleaseMarshalData )( 
            ICallFrame * This,
            /* [size_is][in] */ PVOID pBuffer,
            /* [in] */ ULONG cbBuffer,
            /* [in] */ ULONG ibFirstRelease,
            /* [in] */ RPCOLEDATAREP dataRep,
            /* [in] */ CALLFRAME_MARSHALCONTEXT *pcontext);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICallFrame * This,
            /* [in] */ void *pvReceiver,
            ...);
        
        END_INTERFACE
    } ICallFrameVtbl;

    interface ICallFrame
    {
        CONST_VTBL struct ICallFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICallFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICallFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICallFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICallFrame_GetInfo(This,pInfo)	\
    ( (This)->lpVtbl -> GetInfo(This,pInfo) ) 

#define ICallFrame_GetIIDAndMethod(This,pIID,piMethod)	\
    ( (This)->lpVtbl -> GetIIDAndMethod(This,pIID,piMethod) ) 

#define ICallFrame_GetNames(This,pwszInterface,pwszMethod)	\
    ( (This)->lpVtbl -> GetNames(This,pwszInterface,pwszMethod) ) 

#define ICallFrame_GetStackLocation(This)	\
    ( (This)->lpVtbl -> GetStackLocation(This) ) 

#define ICallFrame_SetStackLocation(This,pvStack)	\
    ( (This)->lpVtbl -> SetStackLocation(This,pvStack) ) 

#define ICallFrame_SetReturnValue(This,hr)	\
    ( (This)->lpVtbl -> SetReturnValue(This,hr) ) 

#define ICallFrame_GetReturnValue(This)	\
    ( (This)->lpVtbl -> GetReturnValue(This) ) 

#define ICallFrame_GetParamInfo(This,iparam,pInfo)	\
    ( (This)->lpVtbl -> GetParamInfo(This,iparam,pInfo) ) 

#define ICallFrame_SetParam(This,iparam,pvar)	\
    ( (This)->lpVtbl -> SetParam(This,iparam,pvar) ) 

#define ICallFrame_GetParam(This,iparam,pvar)	\
    ( (This)->lpVtbl -> GetParam(This,iparam,pvar) ) 

#define ICallFrame_Copy(This,copyControl,pWalker,ppFrame)	\
    ( (This)->lpVtbl -> Copy(This,copyControl,pWalker,ppFrame) ) 

#define ICallFrame_Free(This,pframeArgsDest,pWalkerDestFree,pWalkerCopy,freeFlags,pWalkerFree,nullFlags)	\
    ( (This)->lpVtbl -> Free(This,pframeArgsDest,pWalkerDestFree,pWalkerCopy,freeFlags,pWalkerFree,nullFlags) ) 

#define ICallFrame_FreeParam(This,iparam,freeFlags,pWalkerFree,nullFlags)	\
    ( (This)->lpVtbl -> FreeParam(This,iparam,freeFlags,pWalkerFree,nullFlags) ) 

#define ICallFrame_WalkFrame(This,walkWhat,pWalker)	\
    ( (This)->lpVtbl -> WalkFrame(This,walkWhat,pWalker) ) 

#define ICallFrame_GetMarshalSizeMax(This,pmshlContext,mshlflags,pcbBufferNeeded)	\
    ( (This)->lpVtbl -> GetMarshalSizeMax(This,pmshlContext,mshlflags,pcbBufferNeeded) ) 

#define ICallFrame_Marshal(This,pmshlContext,mshlflags,pBuffer,cbBuffer,pcbBufferUsed,pdataRep,prpcFlags)	\
    ( (This)->lpVtbl -> Marshal(This,pmshlContext,mshlflags,pBuffer,cbBuffer,pcbBufferUsed,pdataRep,prpcFlags) ) 

#define ICallFrame_Unmarshal(This,pBuffer,cbBuffer,dataRep,pcontext,pcbUnmarshalled)	\
    ( (This)->lpVtbl -> Unmarshal(This,pBuffer,cbBuffer,dataRep,pcontext,pcbUnmarshalled) ) 

#define ICallFrame_ReleaseMarshalData(This,pBuffer,cbBuffer,ibFirstRelease,dataRep,pcontext)	\
    ( (This)->lpVtbl -> ReleaseMarshalData(This,pBuffer,cbBuffer,ibFirstRelease,dataRep,pcontext) ) 

#define ICallFrame_Invoke(This,pvReceiver,...)	\
    ( (This)->lpVtbl -> Invoke(This,pvReceiver,...) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICallFrame_INTERFACE_DEFINED__ */


#ifndef __ICallIndirect_INTERFACE_DEFINED__
#define __ICallIndirect_INTERFACE_DEFINED__

/* interface ICallIndirect */
/* [local][unique][object][uuid] */ 


EXTERN_C const IID IID_ICallIndirect;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D573B4B1-894E-11d2-B8B6-00C04FB9618A")
    ICallIndirect : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CallIndirect( 
            /* [out] */ HRESULT *phrReturn,
            /* [in] */ ULONG iMethod,
            /* [in] */ void *pvArgs,
            /* [out] */ ULONG *cbArgs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMethodInfo( 
            /* [in] */ ULONG iMethod,
            /* [out] */ CALLFRAMEINFO *pInfo,
            /* [annotation][out] */ 
            __deref_out_opt  LPWSTR *pwszMethod) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStackSize( 
            /* [in] */ ULONG iMethod,
            /* [out] */ ULONG *cbArgs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIID( 
            /* [annotation][out] */ 
            __out_opt  IID *piid,
            /* [annotation][out] */ 
            __out_opt  BOOL *pfDerivesFromIDispatch,
            /* [annotation][out] */ 
            __out_opt  ULONG *pcMethod,
            /* [annotation][out] */ 
            __deref_out_opt  LPWSTR *pwszInterface) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICallIndirectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICallIndirect * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICallIndirect * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICallIndirect * This);
        
        HRESULT ( STDMETHODCALLTYPE *CallIndirect )( 
            ICallIndirect * This,
            /* [out] */ HRESULT *phrReturn,
            /* [in] */ ULONG iMethod,
            /* [in] */ void *pvArgs,
            /* [out] */ ULONG *cbArgs);
        
        HRESULT ( STDMETHODCALLTYPE *GetMethodInfo )( 
            ICallIndirect * This,
            /* [in] */ ULONG iMethod,
            /* [out] */ CALLFRAMEINFO *pInfo,
            /* [annotation][out] */ 
            __deref_out_opt  LPWSTR *pwszMethod);
        
        HRESULT ( STDMETHODCALLTYPE *GetStackSize )( 
            ICallIndirect * This,
            /* [in] */ ULONG iMethod,
            /* [out] */ ULONG *cbArgs);
        
        HRESULT ( STDMETHODCALLTYPE *GetIID )( 
            ICallIndirect * This,
            /* [annotation][out] */ 
            __out_opt  IID *piid,
            /* [annotation][out] */ 
            __out_opt  BOOL *pfDerivesFromIDispatch,
            /* [annotation][out] */ 
            __out_opt  ULONG *pcMethod,
            /* [annotation][out] */ 
            __deref_out_opt  LPWSTR *pwszInterface);
        
        END_INTERFACE
    } ICallIndirectVtbl;

    interface ICallIndirect
    {
        CONST_VTBL struct ICallIndirectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICallIndirect_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICallIndirect_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICallIndirect_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICallIndirect_CallIndirect(This,phrReturn,iMethod,pvArgs,cbArgs)	\
    ( (This)->lpVtbl -> CallIndirect(This,phrReturn,iMethod,pvArgs,cbArgs) ) 

#define ICallIndirect_GetMethodInfo(This,iMethod,pInfo,pwszMethod)	\
    ( (This)->lpVtbl -> GetMethodInfo(This,iMethod,pInfo,pwszMethod) ) 

#define ICallIndirect_GetStackSize(This,iMethod,cbArgs)	\
    ( (This)->lpVtbl -> GetStackSize(This,iMethod,cbArgs) ) 

#define ICallIndirect_GetIID(This,piid,pfDerivesFromIDispatch,pcMethod,pwszInterface)	\
    ( (This)->lpVtbl -> GetIID(This,piid,pfDerivesFromIDispatch,pcMethod,pwszInterface) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICallIndirect_INTERFACE_DEFINED__ */


#ifndef __ICallInterceptor_INTERFACE_DEFINED__
#define __ICallInterceptor_INTERFACE_DEFINED__

/* interface ICallInterceptor */
/* [local][unique][object][uuid] */ 


EXTERN_C const IID IID_ICallInterceptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("60C7CA75-896D-11d2-B8B6-00C04FB9618A")
    ICallInterceptor : public ICallIndirect
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RegisterSink( 
            /* [in] */ ICallFrameEvents *psink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRegisteredSink( 
            /* [out] */ ICallFrameEvents **ppsink) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICallInterceptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICallInterceptor * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICallInterceptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICallInterceptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *CallIndirect )( 
            ICallInterceptor * This,
            /* [out] */ HRESULT *phrReturn,
            /* [in] */ ULONG iMethod,
            /* [in] */ void *pvArgs,
            /* [out] */ ULONG *cbArgs);
        
        HRESULT ( STDMETHODCALLTYPE *GetMethodInfo )( 
            ICallInterceptor * This,
            /* [in] */ ULONG iMethod,
            /* [out] */ CALLFRAMEINFO *pInfo,
            /* [annotation][out] */ 
            __deref_out_opt  LPWSTR *pwszMethod);
        
        HRESULT ( STDMETHODCALLTYPE *GetStackSize )( 
            ICallInterceptor * This,
            /* [in] */ ULONG iMethod,
            /* [out] */ ULONG *cbArgs);
        
        HRESULT ( STDMETHODCALLTYPE *GetIID )( 
            ICallInterceptor * This,
            /* [annotation][out] */ 
            __out_opt  IID *piid,
            /* [annotation][out] */ 
            __out_opt  BOOL *pfDerivesFromIDispatch,
            /* [annotation][out] */ 
            __out_opt  ULONG *pcMethod,
            /* [annotation][out] */ 
            __deref_out_opt  LPWSTR *pwszInterface);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterSink )( 
            ICallInterceptor * This,
            /* [in] */ ICallFrameEvents *psink);
        
        HRESULT ( STDMETHODCALLTYPE *GetRegisteredSink )( 
            ICallInterceptor * This,
            /* [out] */ ICallFrameEvents **ppsink);
        
        END_INTERFACE
    } ICallInterceptorVtbl;

    interface ICallInterceptor
    {
        CONST_VTBL struct ICallInterceptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICallInterceptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICallInterceptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICallInterceptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICallInterceptor_CallIndirect(This,phrReturn,iMethod,pvArgs,cbArgs)	\
    ( (This)->lpVtbl -> CallIndirect(This,phrReturn,iMethod,pvArgs,cbArgs) ) 

#define ICallInterceptor_GetMethodInfo(This,iMethod,pInfo,pwszMethod)	\
    ( (This)->lpVtbl -> GetMethodInfo(This,iMethod,pInfo,pwszMethod) ) 

#define ICallInterceptor_GetStackSize(This,iMethod,cbArgs)	\
    ( (This)->lpVtbl -> GetStackSize(This,iMethod,cbArgs) ) 

#define ICallInterceptor_GetIID(This,piid,pfDerivesFromIDispatch,pcMethod,pwszInterface)	\
    ( (This)->lpVtbl -> GetIID(This,piid,pfDerivesFromIDispatch,pcMethod,pwszInterface) ) 


#define ICallInterceptor_RegisterSink(This,psink)	\
    ( (This)->lpVtbl -> RegisterSink(This,psink) ) 

#define ICallInterceptor_GetRegisteredSink(This,ppsink)	\
    ( (This)->lpVtbl -> GetRegisteredSink(This,ppsink) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICallInterceptor_INTERFACE_DEFINED__ */


#ifndef __ICallFrameEvents_INTERFACE_DEFINED__
#define __ICallFrameEvents_INTERFACE_DEFINED__

/* interface ICallFrameEvents */
/* [local][unique][object][uuid] */ 


EXTERN_C const IID IID_ICallFrameEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FD5E0843-FC91-11d0-97D7-00C04FB9618A")
    ICallFrameEvents : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnCall( 
            /* [in] */ ICallFrame *pFrame) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICallFrameEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICallFrameEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICallFrameEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICallFrameEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnCall )( 
            ICallFrameEvents * This,
            /* [in] */ ICallFrame *pFrame);
        
        END_INTERFACE
    } ICallFrameEventsVtbl;

    interface ICallFrameEvents
    {
        CONST_VTBL struct ICallFrameEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICallFrameEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICallFrameEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICallFrameEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICallFrameEvents_OnCall(This,pFrame)	\
    ( (This)->lpVtbl -> OnCall(This,pFrame) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICallFrameEvents_INTERFACE_DEFINED__ */


#ifndef __ICallUnmarshal_INTERFACE_DEFINED__
#define __ICallUnmarshal_INTERFACE_DEFINED__

/* interface ICallUnmarshal */
/* [local][unique][object][uuid] */ 


EXTERN_C const IID IID_ICallUnmarshal;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5333B003-2E42-11d2-B89D-00C04FB9618A")
    ICallUnmarshal : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Unmarshal( 
            /* [in] */ ULONG iMethod,
            /* [size_is][in] */ PVOID pBuffer,
            /* [in] */ ULONG cbBuffer,
            /* [in] */ BOOL fForceBufferCopy,
            /* [in] */ RPCOLEDATAREP dataRep,
            /* [in] */ CALLFRAME_MARSHALCONTEXT *pcontext,
            /* [out] */ ULONG *pcbUnmarshalled,
            /* [out] */ ICallFrame **ppFrame) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseMarshalData( 
            /* [in] */ ULONG iMethod,
            /* [size_is][in] */ PVOID pBuffer,
            /* [in] */ ULONG cbBuffer,
            /* [in] */ ULONG ibFirstRelease,
            /* [in] */ RPCOLEDATAREP dataRep,
            /* [in] */ CALLFRAME_MARSHALCONTEXT *pcontext) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICallUnmarshalVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICallUnmarshal * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICallUnmarshal * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICallUnmarshal * This);
        
        HRESULT ( STDMETHODCALLTYPE *Unmarshal )( 
            ICallUnmarshal * This,
            /* [in] */ ULONG iMethod,
            /* [size_is][in] */ PVOID pBuffer,
            /* [in] */ ULONG cbBuffer,
            /* [in] */ BOOL fForceBufferCopy,
            /* [in] */ RPCOLEDATAREP dataRep,
            /* [in] */ CALLFRAME_MARSHALCONTEXT *pcontext,
            /* [out] */ ULONG *pcbUnmarshalled,
            /* [out] */ ICallFrame **ppFrame);
        
        HRESULT ( STDMETHODCALLTYPE *ReleaseMarshalData )( 
            ICallUnmarshal * This,
            /* [in] */ ULONG iMethod,
            /* [size_is][in] */ PVOID pBuffer,
            /* [in] */ ULONG cbBuffer,
            /* [in] */ ULONG ibFirstRelease,
            /* [in] */ RPCOLEDATAREP dataRep,
            /* [in] */ CALLFRAME_MARSHALCONTEXT *pcontext);
        
        END_INTERFACE
    } ICallUnmarshalVtbl;

    interface ICallUnmarshal
    {
        CONST_VTBL struct ICallUnmarshalVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICallUnmarshal_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICallUnmarshal_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICallUnmarshal_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICallUnmarshal_Unmarshal(This,iMethod,pBuffer,cbBuffer,fForceBufferCopy,dataRep,pcontext,pcbUnmarshalled,ppFrame)	\
    ( (This)->lpVtbl -> Unmarshal(This,iMethod,pBuffer,cbBuffer,fForceBufferCopy,dataRep,pcontext,pcbUnmarshalled,ppFrame) ) 

#define ICallUnmarshal_ReleaseMarshalData(This,iMethod,pBuffer,cbBuffer,ibFirstRelease,dataRep,pcontext)	\
    ( (This)->lpVtbl -> ReleaseMarshalData(This,iMethod,pBuffer,cbBuffer,ibFirstRelease,dataRep,pcontext) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICallUnmarshal_INTERFACE_DEFINED__ */


#ifndef __ICallFrameWalker_INTERFACE_DEFINED__
#define __ICallFrameWalker_INTERFACE_DEFINED__

/* interface ICallFrameWalker */
/* [local][unique][object][uuid] */ 


EXTERN_C const IID IID_ICallFrameWalker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("08B23919-392D-11d2-B8A4-00C04FB9618A")
    ICallFrameWalker : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnWalkInterface( 
            /* [in] */ REFIID iid,
            /* [in] */ PVOID *ppvInterface,
            /* [in] */ BOOL fIn,
            /* [in] */ BOOL fOut) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICallFrameWalkerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICallFrameWalker * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICallFrameWalker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICallFrameWalker * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnWalkInterface )( 
            ICallFrameWalker * This,
            /* [in] */ REFIID iid,
            /* [in] */ PVOID *ppvInterface,
            /* [in] */ BOOL fIn,
            /* [in] */ BOOL fOut);
        
        END_INTERFACE
    } ICallFrameWalkerVtbl;

    interface ICallFrameWalker
    {
        CONST_VTBL struct ICallFrameWalkerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICallFrameWalker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICallFrameWalker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICallFrameWalker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICallFrameWalker_OnWalkInterface(This,iid,ppvInterface,fIn,fOut)	\
    ( (This)->lpVtbl -> OnWalkInterface(This,iid,ppvInterface,fIn,fOut) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICallFrameWalker_INTERFACE_DEFINED__ */


#ifndef __IInterfaceRelated_INTERFACE_DEFINED__
#define __IInterfaceRelated_INTERFACE_DEFINED__

/* interface IInterfaceRelated */
/* [local][unique][object][uuid] */ 


EXTERN_C const IID IID_IInterfaceRelated;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D1FB5A79-7706-11d1-ADBA-00C04FC2ADC0")
    IInterfaceRelated : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetIID( 
            /* [in] */ REFIID iid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIID( 
            /* [out] */ IID *piid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInterfaceRelatedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IInterfaceRelated * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IInterfaceRelated * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IInterfaceRelated * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetIID )( 
            IInterfaceRelated * This,
            /* [in] */ REFIID iid);
        
        HRESULT ( STDMETHODCALLTYPE *GetIID )( 
            IInterfaceRelated * This,
            /* [out] */ IID *piid);
        
        END_INTERFACE
    } IInterfaceRelatedVtbl;

    interface IInterfaceRelated
    {
        CONST_VTBL struct IInterfaceRelatedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInterfaceRelated_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IInterfaceRelated_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IInterfaceRelated_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IInterfaceRelated_SetIID(This,iid)	\
    ( (This)->lpVtbl -> SetIID(This,iid) ) 

#define IInterfaceRelated_GetIID(This,piid)	\
    ( (This)->lpVtbl -> GetIID(This,piid) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IInterfaceRelated_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_callobj_0000_0007 */
/* [local] */ 

#define CALLFRAME_E_ALREADYINVOKED  _HRESULT_TYPEDEF_(  0x8004d090 )
#define CALLFRAME_E_COULDNTMAKECALL _HRESULT_TYPEDEF_(  0x8004d091 )


extern RPC_IF_HANDLE __MIDL_itf_callobj_0000_0007_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_callobj_0000_0007_v0_0_s_ifspec;

#ifndef __ICallFrameAPIs_INTERFACE_DEFINED__
#define __ICallFrameAPIs_INTERFACE_DEFINED__

/* interface ICallFrameAPIs */
/* [local][uuid] */ 

HRESULT __stdcall CoGetInterceptor( 
    /* [in] */ REFIID iidIntercepted,
    /* [in] */ IUnknown *punkOuter,
    /* [in] */ REFIID iid,
    /* [out] */ void **ppv);

HRESULT __stdcall CoGetInterceptorFromTypeInfo( 
    /* [in] */ REFIID iidIntercepted,
    /* [in] */ IUnknown *punkOuter,
    /* [in] */ ITypeInfo *typeInfo,
    /* [in] */ REFIID iid,
    /* [out] */ void **ppv);



extern RPC_IF_HANDLE ICallFrameAPIs_v0_0_c_ifspec;
extern RPC_IF_HANDLE ICallFrameAPIs_v0_0_s_ifspec;
#endif /* __ICallFrameAPIs_INTERFACE_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\bridgedeviceservice.h ===
/*
 *  BridgeDeviceService.h
 *
 *  Contains declaration of Services PKEYs to support classic MTP-style
 *  formats and generic/media object properties.
 *
 *  Copyright (c) Microsoft Corporation, All Rights Reserved
 */

#ifndef _BRIDGEDEVICESERVICE_H_
#define _BRIDGEDEVICESERVICE_H_

/*****************************************************************************/
/*  MTP Format Codes for Generic and Media Types                             */
/*****************************************************************************/


/*  FORMAT_Undefined
 *
 *  MTP Format: Undefined (0x3000)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_Undefined,
    0x30000000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_Undefined                      L"Undefined"


/*  FORMAT_Association
 *
 *  MTP Format: Association (0x3001)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_Association,
    0x30010000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_Association                    L"Association"


/*  FORMAT_DeviceScript
 *
 *  MTP Format: Device model-specific script (0x3002)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_DeviceScript,
    0x30020000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_DeviceScript                   L"DeviceScript"


/*  FORMAT_DeviceExecutable
 *
 *  MTP Format: Device model-specific executable (0x3003)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_DeviceExecutable,
    0x30030000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_DeviceExecutable               L"DeviceExecutable"


/*  FORMAT_TextDocument
 *
 *  MTP Format: Text file (0x3004)
 *  Suggested MIME Type: text/plain
 */

DEFINE_DEVSVCGUID(FORMAT_TextDocument,
    0x30040000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_TextDocument                   L"TextDocument"


/*  FORMAT_HTMLDocument
 *
 *  MTP Format: HTML file (0x3005)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_HTMLDocument,
    0x30050000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_HTMLDocument                   L"HTMLDocument"


/*  FORMAT_DPOFDocument
 *
 *  MTP Format: Digital Print Order Format file (0x3006)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_DPOFDocument,
    0x30060000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_DPOFDocument                   L"DPOFDocument"


/*  FORMAT_AIFFFile
 *
 *  MTP Format: AIFF file (0x3007)
 *  Suggested MIME Type: audio/aiff
 */

DEFINE_DEVSVCGUID(FORMAT_AIFFFile,
    0x30070000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AIFFFile                       L"AIFFFile"


/*  FORMAT_WAVFile
 *
 *  MTP Format: WAV file (0x3008)
 *  Suggested MIME Type: audio/wav
 */

DEFINE_DEVSVCGUID(FORMAT_WAVFile,
    0x30080000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_WAVFile                        L"WAVFile"


/*  FORMAT_MP3File
 *
 *  MTP Format: MP3 file (0x3009)
 *  Suggested MIME Type: audio/mpeg
 */

DEFINE_DEVSVCGUID(FORMAT_MP3File,
    0x30090000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_MP3File                        L"MP3File"


/*  FORMAT_AVIFile
 *
 *  MTP Format: AVI file (0x300A)
 *  Suggested MIME Type: video/avi
 */

DEFINE_DEVSVCGUID(FORMAT_AVIFile,
    0x300A0000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AVIFile                        L"AVIFile"


/*  FORMAT_MPEGFile
 *
 *  MTP Format: MPEG file (0x300B)
 *  Suggested MIME Type: video/mpeg
 */

DEFINE_DEVSVCGUID(FORMAT_MPEGFile,
    0x300B0000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_MPEGFile                       L"MPEGFile"


/*  FORMAT_ASFFile
 *
 *  MTP Format: ASF File (0x300C)
 *  Suggested MIME Type: audio/asf
 */

DEFINE_DEVSVCGUID(FORMAT_ASFFile,
    0x300C0000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_ASFFile                        L"ASFFile"


/*  FORMAT_UnknownImage
 *
 *  MTP Format: Unknown Image (0x3800)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_UnknownImage,
    0x38000000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_UnknownImage                   L"UnknownImage"


/*  FORMAT_EXIFImage
 *
 *  MTP Format: EXIF/JPEG file (0x3801)
 *  Suggested MIME Type: image/jpeg
 */

DEFINE_DEVSVCGUID(FORMAT_EXIFImage,
    0x38010000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_EXIFImage                      L"EXIFImage"


/*  FORMAT_TIFFEPImage
 *
 *  MTP Format: TIFF/EP (Electronic Photography) file (0x3802)
 *  Suggested MIME Type: image/tif
 */

DEFINE_DEVSVCGUID(FORMAT_TIFFEPImage,
    0x38020000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_TIFFEPImage                    L"TIFFEPImage"


/*  FORMAT_FlashPixImage
 *
 *  MTP Format: Structured Storage Image Format (0x3803)
 *  Suggested MIME Type: image/fpx
 */

DEFINE_DEVSVCGUID(FORMAT_FlashPixImage,
    0x38030000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_FlashPixImage                  L"FlashPixImage"


/*  FORMAT_BMPImage
 *
 *  MTP Format: Microsoft Windows Bitmap file (0x3804)
 *  Suggested MIME Type: image/bmp
 */

DEFINE_DEVSVCGUID(FORMAT_BMPImage,
    0x38040000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_BMPImage                       L"BMPImage"


/*  FORMAT_CIFFImage
 *
 *  MTP Format: Canon Camera Image File format (0x3805)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_CIFFImage,
    0x38050000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_CIFFImage                      L"CIFFImage"


/*  FORMAT_GIFImage
 *
 *  MTP Format: Graphics Interchange Format (0x3807)
 *  Suggested MIME Type: image/gif
 */

DEFINE_DEVSVCGUID(FORMAT_GIFImage,
    0x38070000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_GIFImage                       L"GIFImage"


/*  FORMAT_JFIFImage
 *
 *  MTP Format: JPEF File Interchange Format (0x3808)
 *  Suggested MIME Type: image/jfif
 */

DEFINE_DEVSVCGUID(FORMAT_JFIFImage,
    0x38080000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_JFIFImage                      L"JFIFImage"


/*  FORMAT_PCDImage
 *
 *  MTP Format: PhotoCD Image Pac (0x3809)
 *  Suggested MIME Type: image/pcd
 */

DEFINE_DEVSVCGUID(FORMAT_PCDImage,
    0x38090000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_PCDImage                       L"PCDImage"


/*  FORMAT_PICTImage
 *
 *  MTP Format: Quickdraw Image Format (0x380A)
 *  Suggested MIME Type: image/pict
 */

DEFINE_DEVSVCGUID(FORMAT_PICTImage,
    0x380A0000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_PICTImage                      L"PICTImage"


/*  FORMAT_PNGImage
 *
 *  MTP Format: Portable Network Graphics (0x380B)
 *  Suggested MIME Type: image/png
 */

DEFINE_DEVSVCGUID(FORMAT_PNGImage,
    0x380B0000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_PNGImage                       L"PNGImage"


/*  FORMAT_TIFFImage
 *
 *  MTP Format: TIFF File (0x380D)
 *  Suggested MIME Type: image/tif
 */

DEFINE_DEVSVCGUID(FORMAT_TIFFImage,
    0x380D0000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_TIFFImage                      L"TIFFImage"


/*  FORMAT_TIFFITImage
 *
 *  MTP Format: TIFF/IT (Graphics Arts) file (0x380E)
 *  Suggested MIME Type: image/tif
 */

DEFINE_DEVSVCGUID(FORMAT_TIFFITImage,
    0x380E0000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_TIFFITImage                    L"TIFFITImage"


/*  FORMAT_JP2Image
 *
 *  MTP Format: JPEG2000 Baseline File Format (0x380F)
 *  Suggested MIME Type: image/jp2
 */

DEFINE_DEVSVCGUID(FORMAT_JP2Image,
    0x380F0000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_JP2Image                       L"JP2Image"


/*  FORMAT_JPXImage
 *
 *  MTP Format: JPEG2000 Extended File Format (0x3810)
 *  Suggested MIME Type: image/jp2
 */

DEFINE_DEVSVCGUID(FORMAT_JPXImage,
    0x38100000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_JPXImage                       L"JPXImage"


/*  FORMAT_FirmwareFile
 *
 *  MTP Format: Firmware (0xB802)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_FirmwareFile,
    0xB8020000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_FirmwareFile                   L"FirmwareFile"


/*  FORMAT_HDPhotoImage
 *
 *  MTP Format: HD Photo (Windows Media Photo) file (0xB881)
 *  Suggested MIME Type: image/vnd.ms-photo
 */

DEFINE_DEVSVCGUID(FORMAT_HDPhotoImage,
    0xB8810000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_HDPhotoImage                   L"HDPhotoImage"


/*  FORMAT_UndefinedAudio
 *
 *  MTP Format: Undefined Audio (0xB900)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_UndefinedAudio,
    0xB9000000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_UndefinedAudio                 L"UndefinedAudio"


/*  FORMAT_WMAFile
 *
 *  MTP Format: WMA file (0xB901)
 *  Suggested MIME Type: audio/x-ms-wma
 */

DEFINE_DEVSVCGUID(FORMAT_WMAFile,
    0xB9010000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_WMAFile                        L"WMAFile"


/*  FORMAT_OGGFile
 *
 *  MTP Format: OGG file (0xB902)
 *  Suggested MIME Type: audio/x-ogg
 */

DEFINE_DEVSVCGUID(FORMAT_OGGFile,
    0xB9020000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_OGGFile                        L"OGGFile"


/*  FORMAT_AACFile
 *
 *  MTP Format: AAC file (0xB903)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_AACFile,
    0xB9030000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AACFile                        L"AACFile"


/*  FORMAT_AudibleFile
 *
 *  MTP Format: Audible file (0xB904)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_AudibleFile,
    0xB9040000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AudibleFile                    L"AudibleFile"


/*  FORMAT_FLACFile
 *
 *  MTP Format: FLAC file (0xB906)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_FLACFile,
    0xB9060000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_FLACFile                       L"FLACFile"


/*  FORMAT_UndefinedVideo
 *
 *  MTP Format: Undefined Video (0xB980)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_UndefinedVideo,
    0xB9890000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_UndefinedVideo                 L"UndefinedVideo"


/*  FORMAT_WMVFile
 *
 *  MTP Format: WMV file (0xB981)
 *  Suggested MIME Type: video/x-ms-wmv
 */

DEFINE_DEVSVCGUID(FORMAT_WMVFile,
    0xB9810000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_WMVFile                        L"WMVFile"


/*  FORMAT_MPEG4File
 *
 *  MTP Format: MPEG-4 Video file (0xB982)
 *  Suggested MIME Type: video/mp4v-es
 */

DEFINE_DEVSVCGUID(FORMAT_MPEG4File,
    0xB9820000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_MPEG4File                      L"MPEG4File"


/*  FORMAT_MPEG2File
 *
 *  MTP Format: MPEG-2 Video file (0xB983)
 *  Suggested MIME Type: video/mpeg
 */

DEFINE_DEVSVCGUID(FORMAT_MPEG2File,
    0xB9830000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_MPEG2File                      L"MPEG2File"


/*  FORMAT_3GPPFile
 *
 *  MTP Format: 3GPP Video file (0xB984)
 *  Suggested MIME Type: video/3gpp
 */

DEFINE_DEVSVCGUID(FORMAT_3GPPFile,
    0xB9840000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_3GPPFile                       L"3GPPFile"


/*  FORMAT_UndefinedCollection
 *
 *  MTP Format: Undefined Collection (0xBA00)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_UndefinedCollection,
    0xBA060000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_UndefinedCollection            L"UndefinedCollection"


/*  FORMAT_AbstractMultimediaAlbum
 *
 *  MTP Format: Abstract Multimedia Album (0xBA01)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_AbstractMultimediaAlbum,
    0xBA010000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AbstractMultimediaAlbum        L"AbstractMultimediaAlbum"


/*  FORMAT_AbstractImageAlbum
 *
 *  MTP Format: Abstract Image Album (0xBA02)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_AbstractImageAlbum,
    0xBA020000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AbstractImageAlbum             L"AbstractImageAlbum"


/*  FORMAT_AbstractAudioAlbum
 *
 *  MTP Format: Abstract Audio Album (0xBA03)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_AbstractAudioAlbum,
    0xBA030000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AbstractAudioAlbum             L"AbstractAudioAlbum"


/*  FORMAT_AbstractVideoAlbum
 *
 *  MTP Format: Abstract Video Album (0xBA04)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_AbstractVideoAlbum,
    0xBA040000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AbstractVideoAlbum             L"AbstractVideoAlbum"


/*  FORMAT_AbstractAudioVideoAlbum
 *
 *  MTP Format: Abstract Audio & Video Playlist (0xBA05)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_AbstractAudioVideoAlbum,
    0xBA050000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AbstractAudioVideoAlbum        L"AbstractAudioVideoAlbum"


/*  FORMAT_AbstractChapteredProduction
 *
 *  MTP Format: Abstract Chaptered Production (0xBA08)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_AbstractChapteredProduction,
    0xBA080000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AbstractChapteredProduction    L"AbstractChapteredProduction"


/*  FORMAT_AbstractAudioPlaylist
 *
 *  MTP Format: Abstract Audio Playlist (0xBA09)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_AbstractAudioPlaylist,
    0xBA090000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AbstractAudioPlaylist          L"AbstractAudioPlaylist"


/*  FORMAT_AbstractVideoPlaylist
 *
 *  MTP Format: Abstract Video Playlist (0xBA0A)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_AbstractVideoPlaylist,
    0xBA0A0000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AbstractVideoPlaylist          L"AbstractVideoPlaylist"


/*  FORMAT_AbstractMediacast
 *
 *  MTP Format: Abstract Mediacast (0xBA0B)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_AbstractMediacast,
    0xBA0B0000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AbstractMediacast              L"AbstractMediacast"


/*  FORMAT_WPLPlaylist
 *
 *  MTP Format: WPL Playlist (0xBA10)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_WPLPlaylist,
    0xBA100000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_WPLPlaylist                    L"WPLPlaylist"


/*  FORMAT_M3UPlaylist
 *
 *  MTP Format: M3U Playlist (0xBA11)
 *  Suggested MIME Type: audio/mpeg-url
 */

DEFINE_DEVSVCGUID(FORMAT_M3UPlaylist,
    0xBA110000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_M3UPlaylist                    L"M3UPlaylist"


/*  FORMAT_MPLPlaylist
 *
 *  MTP Format: MPL Playlist (0xBA12)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_MPLPlaylist,
    0xBA120000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_MPLPlaylist                    L"MPLPlaylist"


/*  FORMAT_ASXPlaylist
 *
 *  MTP Format: ASX Playlist (0xBA13)
 *  Suggested MIME Type: video/x-ms-asf
 */

DEFINE_DEVSVCGUID(FORMAT_ASXPlaylist,
    0xBA130000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_ASXPlaylist                    L"ASXPlaylist"


/*  FORMAT_PSLPlaylist
 *
 *  MTP Format: PLS Playlist (0xBA14)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_PSLPlaylist,
    0xBA140000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_PSLPlaylist                    L"PSLPlaylist"


/*  FORMAT_UndefinedDocument
 *
 *  MTP Format: Undefined Document (0xBA80)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_UndefinedDocument,
    0xBA800000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_UndefinedDocument              L"UndefinedDocument"


/*  FORMAT_AbstractDocument
 *
 *  MTP Format: Abstract Document (0xBA81)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_AbstractDocument,
    0xBA810000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AbstractDocument               L"AbstractDocument"


/*  FORMAT_XMLDocument
 *
 *  MTP Format: XML Document (0xBA82)
 *  Suggested MIME Type: text/xml
 */

DEFINE_DEVSVCGUID(FORMAT_XMLDocument,
    0xBA820000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_XMLDocument                    L"XMLDocument"


/*  FORMAT_WordDocument
 *
 *  MTP Format: Microsoft Word Document (0xBA83)
 *  Suggested MIME Type: application/msword
 */

DEFINE_DEVSVCGUID(FORMAT_WordDocument,
    0xBA830000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_WordDocument                   L"WordDocument"


/*  FORMAT_MHTDocument
 *
 *  MTP Format: MHT Compiled HTML Document (0xBA84)
 *  Suggested MIME Type: message/rfc822
 */

DEFINE_DEVSVCGUID(FORMAT_MHTDocument,
    0xBA840000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_MHTDocument                    L"MHTDocument"


/*  FORMAT_ExcelDocument
 *
 *  MTP Format: Microsoft Excel Document (0xBA85)
 *  Suggested MIME Type: application/msexcel
 */

DEFINE_DEVSVCGUID(FORMAT_ExcelDocument,
    0xBA850000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_ExcelDocument                  L"ExcelDocument"


/*  FORMAT_PowerPointDocument
 *
 *  MTP Format: Microsoft PowerPoint Document (0xBA86)
 *  Suggested MIME Type: application/mspowerpoint
 */

DEFINE_DEVSVCGUID(FORMAT_PowerPointDocument,
    0xBA860000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_PowerPointDocument             L"PowerPointDocument"


/*****************************************************************************/
/*  MTP Object Property Codes for Generic and Media Types                    */
/*****************************************************************************/

/*  GenericObj.ObjectID
 *
 *  MTP Property: ()
 *  Type: UInt128
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_ObjectID,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    2);

#define NAME_GenericObj_ObjectID           L"ObjectID"


/*  GenericObj.StorageID
 *
 *  MTP Property: Storage ID (0xDC01)
 *  Type: UInt32
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_StorageID,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    23);

#define NAME_GenericObj_StorageID           L"StorageID"


/*  GenericObj.ObjectFormat
 *
 *  MTP Property: Object Format (0xDC02)
 *  Type: UInt16
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_ObjectFormat,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    6);

#define NAME_GenericObj_ObjectFormat        L"ObjectFormat"


/*  GenericObj.ProtectionStatus
 *
 *  MTP Property: Protection Status (0xDC03)
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_ProtectionStatus,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    26);

#define NAME_GenericObj_ProtectionStatus    L"ProtectionStatus"


/*  GenericObj.ObjectSize
 *
 *  MTP Property: Object Size (0xDC04)
 *  Type: UInt64
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_ObjectSize,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    11);

#define NAME_GenericObj_ObjectSize          L"ObjectSize"


/*  GenericObj.AssociationType
 *
 *  MTP Property: Association Type (0xDC05)
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_AssociationType,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    32);

#define NAME_GenericObj_AssociationType     L"AssociationType"


/*  GenericObj.AssociationDesc
 *
 *  MTP Property: Association Desc (0xDC06)
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_AssociationDesc,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    33);

#define NAME_GenericObj_AssociationDesc     L"AssociationDesc"


/*  GenericObj.ObjectFileName
 *
 *  MTP Property: Object File Name (0xDC07)
 *  Type: String
 *  Form: None/RegEx
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_ObjectFileName,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    12);

#define NAME_GenericObj_ObjectFileName      L"ObjectFileName"


/*  GenericObj.DateCreated
 *
 *  MTP Property: Date Created (0xDC08)
 *  Type: String
 *  Form: DateTime
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_DateCreated,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    39);

#define NAME_GenericObj_DateCreated         L"DateCreated"


/*  GenericObj.DateModified
 *
 *  MTP Property: Date Modified (0xDC09)
 *  Type: String
 *  Form: DateTime
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_DateModified,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    40);

#define NAME_GenericObj_DateModified        L"DateModified"


/*  GenericObj.Keywords
 *
 *  MTP Property: Keywords (0xDC0A)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_Keywords,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    15);

#define NAME_GenericObj_Keywords            L"Keywords"


/*  GenericObj.ParentID
 *
 *  MTP Property: Parent Object (0xDC0B)
 *  Type: UInt32
 *  Form: ObjectID
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_ParentID,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    3);

#define NAME_GenericObj_ParentID            L"ParentID"


/*  GenericObj.AllowedFolderContents
 *
 *  MTP Property: Allowed Folder Contents (0xDC0C)
 *  Type: AUInt16
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_AllowedFolderContents,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    34);

#define NAME_GenericObj_AllowedFolderContents   L"AllowedFolderContents"


/*  GenericObj.Hidden
 *
 *  MTP Property: Hidden (0xDC0D)
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_Hidden,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    28);

#define NAME_GenericObj_Hidden              L"Hidden"


/*  GenericObj.SystemObject
 *
 *  MTP Property: System Object (0xDC0E)
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_SystemObject,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    29);

#define NAME_GenericObj_SystemObject        L"SystemObject"


/*  GenericObj.PersistentUID
 *
 *  MTP Property: Persistent Unique Object ID (0xDC41)
 *  Type: UInt128
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_PersistentUID,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    5);

#define NAME_GenericObj_PersistentUID       L"PersistentUID"


/*  GenericObj.SyncID
 *
 *  MTP Property: Sync ID (0xDC42)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_SyncID,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    16);

#define NAME_GenericObj_SyncID              L"SyncID"


/*  GenericObj.PropertyBag
 *
 *  MTP Property: Property Bag (0xDC43)
 *  Type: AUInt16
 *  Form: LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_PropertyBag,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    35);

#define NAME_GenericObj_PropertyBag         L"PropertyBag"


/*  GenericObj.Name
 *
 *  MTP Property: Name (0xDC44)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_Name,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    4);

#define NAME_GenericObj_Name                L"Name"


/*  MediaObj.Artist
 *
 *  MTP Property: Artist (0xDC46)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_Artist,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    24);

#define NAME_MediaObj_Artist                L"Artist"


/*  GenericObj.DateAuthored
 *
 *  MTP Property: Date Authored (0xDC47)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_DateAuthored,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    41);

#define NAME_GenericObj_DateAuthored        L"DateAuthored"


/*  GenericObj.Description
 *
 *  MTP Property: Description (0xDC48)
 *  Type: AUInt16
 *  Form: LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_Description,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    45);

#define NAME_GenericObj_Description         L"Description"


/*  GenericObj.LanguageLocale
 *
 *  MTP Property: Language Locale (0xDC4A)
 *  Type: String
 *  Form: RegEx
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_LanguageLocale,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    27);

#define NAME_GenericObj_LanguageLocale      L"LanguageLocale"


/*  GenericObj.Copyright
 *
 *  MTP Property: Copyright Information (0xDC4B)
 *  Type: AUInt16
 *  Form: LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_Copyright,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    38);

#define NAME_GenericObj_Copyright           L"Copyright"


/*  VideoObj.Source
 *
 *  MTP Property: Source (0xDC4C)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_VideoObj_Source,
    0x346F2163, 0xF998, 0x4146, 0x8B, 0x01, 0xD1, 0x9B, 0x4C, 0x00, 0xDE, 0x9A,
    4);

#define NAME_VideoObj_Source                L"Source"


/*  MediaObj.GeographicOrigin
 *
 *  MTP Property: Origin Location (0xDC4D)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_GeographicOrigin,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    40);

#define NAME_MediaObj_GeographicOrigin      L"GeographicOrigin"


/*  GenericObj.DateAdded
 *
 *  MTP Property: Date Added (0xDC4E)
 *  Type: String
 *  Form: DateTime
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_DateAdded,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    36);

#define NAME_GenericObj_DateAdded           L"DateAdded"


/*  GenericObj.NonConsumable
 *
 *  MTP Property: Non-Consumable (0xDC4F)
 *  Type: UInt8
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_NonConsumable,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    30);

#define NAME_GenericObj_NonConsumable       L"NonConsumable"


/*  GenericObj.Corrupt
 *
 *  MTP Property: Corrupt (0xDC50)
 *  Type: UInt8
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_Corrupt,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    37);

#define NAME_GenericObj_Corrupt             L"Corrupt"


/*  MediaObj.Width
 *
 *  MTP Property: Width (0xDC87)
 *  Type: UInt32
 *  Form: Range
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_Width,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    22);

#define NAME_MediaObj_Width                 L"Width"


/*  MediaObj.Height
 *
 *  MTP Property: Height (0xDC88)
 *  Type: UInt32
 *  Form: Range
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_Height,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    23);

#define NAME_MediaObj_Height                L"Height"


/*  MediaObj.Duration
 *
 *  MTP Property: Duration (0xDC89)
 *  Type: UInt32
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_Duration,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    19);

#define NAME_MediaObj_Duration              L"Duration"


/*  MediaObj.UserRating
 *
 *  MTP Property: Rating (0xDC8A)
 *  Type: UInt16
 *  Form: Range
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_UserRating,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    17);

#define NAME_MediaObj_UserRating            L"UserRating"


/*  MediaObj.Track
 *
 *  MTP Property: Track (0xDC8B)
 *  Type: UInt16
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_Track,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    43);

#define NAME_MediaObj_Track                 L"Track"


/*  MediaObj.Genre
 *
 *  MTP Property: Genre (0xDC8C)
 *  Type: String
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_Genre,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    32);

#define NAME_MediaObj_Genre                 L"Genre"


/*  MediaObj.Credits
 *
 *  MTP Property: Credits (0xDC8D)
 *  Type: AUInt16
 *  Form: LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_Credits,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    47);

#define NAME_MediaObj_Credits               L"Credits"


/*  AudioObj.Lyrics
 *
 *  MTP Property: Lyrics (0xDC8E)
 *  Type: AUInt16
 *  Form: LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_AudioObj_Lyrics,
    0xB324F56A, 0xDC5D, 0x46E5, 0xB6, 0xDF, 0xD2, 0xEA, 0x41, 0x48, 0x88, 0xC6,
    6);

#define NAME_AudioObj_Lyrics                L"Lyrics"


/*  MediaObj.SubscriptionContentID
 *
 *  MTP Property: Subscription Content ID (0xDC8F)
 *  Type: String
 *  Form: RegEx
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_SubscriptionContentID,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    5);

#define NAME_MediaObj_SubscriptionContentID L"SubscriptionContentID"


/*  MediaObj.Producer
 *
 *  MTP Property: Produced By (0xDC90)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_Producer,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    45);

#define NAME_MediaObj_Producer              L"Producer"


/*  MediaObj.UseCount
 *
 *  MTP Property: Use Count (0xDC91)
 *  Type: UInt32
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_UseCount,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    6);

#define NAME_MediaObj_UseCount              L"UseCount"


/*  MediaObj.SkipCount
 *
 *  MTP Property: Skip Count (0xDC92)
 *  Type: UInt32
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_SkipCount,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    7);

#define NAME_MediaObj_SkipCount             L"SkipCount"


/*  GenericObj.DateAccessed
 *
 *  MTP Property: Last Accessed (0xDC93)
 *  Type: String
 *  Form: DateTime
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_DateAccessed,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    42);

#define NAME_GenericObj_DateAccessed        L"DateAccessed"


/*  MediaObj.ParentalRating
 *
 *  MTP Property: Parental Rating (0xDC94)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_ParentalRating,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    9);

#define NAME_MediaObj_ParentalRating        L"ParentalRating"


/*  MediaObj.MediaType
 *
 *  MTP Property: Meta Genre (0xDC95)
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_MediaType,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    10);

#define NAME_MediaObj_MediaType             L"MediaType"


/*  MediaObj.Composer
 *
 *  MTP Property: Composer (0xDC96)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_Composer,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    11);

#define NAME_MediaObj_Composer              L"Composer"


/*  MediaObj.EffectiveRating
 *
 *  MTP Property: Effective Rating (0xDC97)
 *  Type: UInt16
 *  Form: Range
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_EffectiveRating,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    12);

#define NAME_MediaObj_EffectiveRating       L"EffectiveRating"


/*  MediaObj.Subtitle
 *
 *  MTP Property: Subtitle (0xDC98)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_Subtitle,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    13);

#define NAME_MediaObj_Subtitle              L"Subtitle"


/*  MediaObj.DateOriginalRelease
 *
 *  MTP Property: Original Release Date (0xDC99)
 *  Type: String
 *  Form: DateTime
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_DateOriginalRelease,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    41);

#define NAME_MediaObj_DateOriginalRelease   L"DateOriginalRelease"


/*  MediaObj.AlbumName
 *
 *  MTP Property: Album Name (0xDC9A)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_AlbumName,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    42);

#define NAME_MediaObj_AlbumName             L"AlbumName"


/*  MediaObj.AlbumArtist
 *
 *  MTP Property: Album Artist (0xDC9B)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_AlbumArtist,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    25);

#define NAME_MediaObj_AlbumArtist           L"AlbumArtist"


/*  MediaObj.Mood
 *
 *  MTP Property: Mood (0xDC9C)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_Mood,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    44);

#define NAME_MediaObj_Mood                  L"Mood"


/*  GenericObj.DRMStatus
 *
 *  MTP Property: DRM Status (0xDC9D)
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_DRMStatus,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    31);

#define NAME_GenericObj_DRMStatus           L"DRMStatus"


/*  GenericObj.SubDescription
 *
 *  MTP Property: Sub Description (0xDC9E)
 *  Type: AUInt16
 *  Form: LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_SubDescription,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    46);

#define NAME_GenericObj_SubDescription      L"SubDescription"


/*  ImageObj.IsCropped
 *
 *  MTP Property: Is Cropped (0xDCD1)
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_ImageObj_IsCropped,
    0x63D64908, 0x9FA1, 0x479F, 0x85, 0xBA, 0x99, 0x52, 0x21, 0x64, 0x47, 0xDB,
    4);

#define NAME_ImageObj_IsCropped             L"IsCropped"


/*  ImageObj.IsColorCorrected
 *
 *  MTP Property: Is Colour Corrected (0xDCD2)
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_ImageObj_IsColorCorrected,
    0x63D64908, 0x9FA1, 0x479F, 0x85, 0xBA, 0x99, 0x52, 0x21, 0x64, 0x47, 0xDB,
    5);

#define NAME_ImageObj_IsColorCorrected      L"IsColorCorrected"


/*  ImageObj.ImageBitDepth
 *
 *  MTP Property: Image Bit Depth (0xDCD3)
 *  Type: UInt32
 *  Form: Range/Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_ImageObj_ImageBitDepth,
    0x63D64908, 0x9FA1, 0x479F, 0x85, 0xBA, 0x99, 0x52, 0x21, 0x64, 0x47, 0xDB,
    3);

#define NAME_ImageObj_ImageBitDepth         L"ImageBitDepth"


/*  ImageObj.Aperature
 *
 *  MTP Property: Fnumber (0xDCD4)
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_ImageObj_Aperature,
    0x63D64908, 0x9FA1, 0x479F, 0x85, 0xBA, 0x99, 0x52, 0x21, 0x64, 0x47, 0xDB,
    6);

#define NAME_ImageObj_Aperature             L"Aperature"


/*  ImageObj.Exposure
 *
 *  MTP Property: Exposure Time (0xDCD5)
 *  Type: UInt32
 *  Form: Range/Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_ImageObj_Exposure,
    0x63D64908, 0x9FA1, 0x479F, 0x85, 0xBA, 0x99, 0x52, 0x21, 0x64, 0x47, 0xDB,
    7);

#define NAME_ImageObj_Exposure              L"Exposure"


/*  ImageObj.ISOSpeed
 *
 *  MTP Property: Exposure Index (0xDCD6)
 *  Type: UInt16
 *  Form: Range/Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_ImageObj_ISOSpeed,
    0x63D64908, 0x9FA1, 0x479F, 0x85, 0xBA, 0x99, 0x52, 0x21, 0x64, 0x47, 0xDB,
    8);

#define NAME_ImageObj_ISOSpeed              L"ISOSpeed"


/*  MediaObj.Owner
 *
 *  MTP Property: Owner (0xDD5D)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_Owner,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    26);

#define NAME_MediaObj_Owner                 L"Owner"


/*  MediaObj.Editor
 *
 *  MTP Property: Editor (0xDD5E)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_Editor,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    27);

#define NAME_MediaObj_Editor                L"Editor"


/*  MediaObj.WebMaster
 *
 *  MTP Property: WebMaster (0xDD5F)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_WebMaster,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    28);

#define NAME_MediaObj_WebMaster             L"WebMaster"


/*  MediaObj.URLSource
 *
 *  MTP Property: URL Source (0xDD60)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_URLSource,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    29);

#define NAME_MediaObj_URLSource             L"URLSource"


/*  MediaObj.URLLink
 *
 *  MTP Property: URL Destination (0xDD61)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_URLLink,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    30);

#define NAME_MediaObj_URLLink               L"URLLink"


/*  MediaObj.BookmarkTime
 *
 *  MTP Property: Time Bookmark (0xDD62)
 *  Type: UInt32
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_BookmarkTime,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    33);

#define NAME_MediaObj_BookmarkTime          L"BookmarkTime"


/*  MediaObj.BookmarkObject
 *
 *  MTP Property: Object Bookmark (0xDD63)
 *  Type: UInt32
 *  Form: ObjectID
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_BookmarkObject,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    34);

#define NAME_MediaObj_BookmarkObject        L"BookmarkObject"


/*  MediaObj.BookmarkByte
 *
 *  MTP Property: Byte Bookmark (0xDD64)
 *  Type: UInt64
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_BookmarkByte,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    36);

#define NAME_MediaObj_BookmarkByte          L"BookmarkByte"


/*  GenericObj.DateRevised
 *
 *  MTP Property: Last Build Date (0xDD70)
 *  Type: String
 *  Form: DateTime
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_DateRevised,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    43);

#define NAME_GenericObj_DateRevised         L"DateRevised"


/*  GenericObj.TimeToLive
 *
 *  MTP Property: Time To Live (0xDD71)
 *  Type: UInt64
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_TimeToLive,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    44);

#define NAME_GenericObj_TimeToLive          L"TimeToLive"


/*  MediaObj.MediaUID
 *
 *  MTP Property: Media GUID (0xDD72)
 *  Type: String
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_MediaUID,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    38);

#define NAME_MediaObj_MediaUID              L"MediaUID"


/*  MediaObj.TotalBitRate
 *
 *  MTP Property: Total Bit Rate (0xDE91)
 *  Type: UInt32
 *  Form: Range/Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_TotalBitRate,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    2);

#define NAME_MediaObj_TotalBitRate          L"TotalBitRate"


/*  MediaObj.BitRateType
 *
 *  MTP Property: Bit Rate Type (0xDE92)
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_BitRateType,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    3);

#define NAME_MediaObj_BitRateType           L"BitRateType"


/*  MediaObj.SampleRate
 *
 *  MTP Property: Sample Rate (0xDE93)
 *  Type: UInt32
 *  Form: Range/Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_SampleRate,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    15);

#define NAME_MediaObj_SampleRate            L"SampleRate"


/*  AudioObj.Channels
 *
 *  MTP Property: Number of Channels (0xDE94)
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_AudioObj_Channels,
    0xB324F56A, 0xDC5D, 0x46E5, 0xB6, 0xDF, 0xD2, 0xEA, 0x41, 0x48, 0x88, 0xC6,
    10);

#define NAME_AudioObj_Channels              L"Channels"


/*  AudioObj.AudioBitDepth
 *
 *  MTP Property: Audio Bit Depth (0xDE95)
 *  Type: UInt32
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_AudioObj_AudioBitDepth,
    0xB324F56A, 0xDC5D, 0x46E5, 0xB6, 0xDF, 0xD2, 0xEA, 0x41, 0x48, 0x88, 0xC6,
    12);

#define NAME_AudioObj_AudioBitDepth         L"AudioBitDepth"


/*  AudioObj.AudioBlockAlignment
 *
 *  MTP Property: Audio Block Alignment (0xDE96)
 *  Type: UInt32
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_AudioObj_AudioBlockAlignment,
    0xB324F56A, 0xDC5D, 0x46E5, 0xB6, 0xDF, 0xD2, 0xEA, 0x41, 0x48, 0x88, 0xC6,
    13);

#define NAME_AudioObj_AudioBlockAlignment   L"AudioBlockAlignment"


/*  VideoObj.ScanType
 *
 *  MTP Property: Video Scan Type (0xDE97)
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_VideoObj_ScanType,
    0x346F2163, 0xF998, 0x4146, 0x8B, 0x01, 0xD1, 0x9B, 0x4C, 0x00, 0xDE, 0x9A,
    12);

#define NAME_VideoObj_ScanType              L"ScanType"


/*  AudioObj.AudioFormatCode
 *
 *  MTP Property: Audio WAVE Codec (0xDE99)
 *  Type: UInt32
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_AudioObj_AudioFormatCode,
    0xB324F56A, 0xDC5D, 0x46E5, 0xB6, 0xDF, 0xD2, 0xEA, 0x41, 0x48, 0x88, 0xC6,
    11);

#define NAME_AudioObj_AudioFormatCode       L"AudioFormatCode"


/*  AudioObj.AudioBitRate
 *
 *  MTP Property: Audio Bit Rate (0xDE9A)
 *  Type: UInt32
 *  Form: Range/Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_AudioObj_AudioBitRate,
    0xB324F56A, 0xDC5D, 0x46E5, 0xB6, 0xDF, 0xD2, 0xEA, 0x41, 0x48, 0x88, 0xC6,
    9);

#define NAME_AudioObj_AudioBitRate          L"AudioBitRate"


/*  VideoObj.VideoFormatCode
 *
 *  MTP Property: Video FourCC Codec (0xDE9B)
 *  Type: UInt32
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_VideoObj_VideoFormatCode,
    0x346F2163, 0xF998, 0x4146, 0x8B, 0x01, 0xD1, 0x9B, 0x4C, 0x00, 0xDE, 0x9A,
    14);

#define NAME_VideoObj_VideoFormatCode       L"VideoFormatCode"


/*  VideoObj.VideoBitRate
 *
 *  MTP Property: Video Bit Rate (0xDE9C)
 *  Type: UInt32
 *  Form: Range/Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_VideoObj_VideoBitRate,
    0x346F2163, 0xF998, 0x4146, 0x8B, 0x01, 0xD1, 0x9B, 0x4C, 0x00, 0xDE, 0x9A,
    13);

#define NAME_VideoObj_VideoBitRate          L"VideoBitRate"


/*  VideoObj.VideoFrameRate
 *
 *  MTP Property: Frames Per Thousand Seconds (0xDE9D)
 *  Type: UInt32
 *  Form: Range/Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_VideoObj_VideoFrameRate,
    0x346F2163, 0xF998, 0x4146, 0x8B, 0x01, 0xD1, 0x9B, 0x4C, 0x00, 0xDE, 0x9A,
    15);

#define NAME_VideoObj_VideoFrameRate        L"VideoFrameRate"


/*  VideoObj.KeyFrameDistance
 *
 *  MTP Property: Key Frame Distance (0xDE9E)
 *  Type: UInt32
 *  Form: Range
 */

DEFINE_DEVSVCPROPKEY(PKEY_VideoObj_KeyFrameDistance,
    0x346F2163, 0xF998, 0x4146, 0x8B, 0x01, 0xD1, 0x9B, 0x4C, 0x00, 0xDE, 0x9A,
    10);

#define NAME_VideoObj_KeyFrameDistance      L"KeyFrameDistance"


/*  MediaObj.BufferSize
 *
 *  MTP Property: Buffer Size (0xDE9F)
 *  Type: UInt32
 *  Form: Range
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_BufferSize,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    46);

#define NAME_MediaObj_BufferSize            L"BufferSize"


/*  MediaObj.EncodingQuality
 *
 *  MTP Property: Encoding Quality (0xDEA0)
 *  Type: UInt32
 *  Form: Range
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_EncodingQuality,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    48);

#define NAME_MediaObj_EncodingQuality       L"EncodingQuality"


/*  MediaObj.EncodingProfile
 *
 *  MTP Property: Encoding Profile (0xDEA1)
 *  Type: String
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_MediaObj_EncodingProfile,
    0x2ED8BA05, 0x0AD3, 0x42DC, 0xB0, 0xD0, 0xBC, 0x95, 0xAC, 0x39, 0x6A, 0xC8,
    21);

#define NAME_MediaObj_EncodingProfile       L"EncodingProfile"


/*  GenericObj.ReferenceParentID
 *
 *  This write only property is used when creating object references to help
 *  hint the responder implementation to the parent item that this object will
 *  be associated with.
 *
 *  Type: UInt32
 *  Form: ObjectID
 */

DEFINE_DEVSVCPROPKEY(PKEY_GenericObj_ReferenceParentID,
    0xEF6B490D, 0x5CD8, 0x437A, 0xAF, 0xFC, 0xDA, 0x8B, 0x60, 0xEE, 0x4A, 0x3C,
    47);

#define NAME_GenericObj_ReferenceParentID   L"ReferenceParentID"

#endif  /* _BRIDGEDEVICESERVICE_H_ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\casetup.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for casetup.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __casetup_h__
#define __casetup_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __ICertSrvSetupKeyInformation_FWD_DEFINED__
#define __ICertSrvSetupKeyInformation_FWD_DEFINED__
typedef interface ICertSrvSetupKeyInformation ICertSrvSetupKeyInformation;
#endif 	/* __ICertSrvSetupKeyInformation_FWD_DEFINED__ */


#ifndef __ICertSrvSetupKeyInformationCollection_FWD_DEFINED__
#define __ICertSrvSetupKeyInformationCollection_FWD_DEFINED__
typedef interface ICertSrvSetupKeyInformationCollection ICertSrvSetupKeyInformationCollection;
#endif 	/* __ICertSrvSetupKeyInformationCollection_FWD_DEFINED__ */


#ifndef __ICertSrvSetup_FWD_DEFINED__
#define __ICertSrvSetup_FWD_DEFINED__
typedef interface ICertSrvSetup ICertSrvSetup;
#endif 	/* __ICertSrvSetup_FWD_DEFINED__ */


#ifndef __IMSCEPSetup_FWD_DEFINED__
#define __IMSCEPSetup_FWD_DEFINED__
typedef interface IMSCEPSetup IMSCEPSetup;
#endif 	/* __IMSCEPSetup_FWD_DEFINED__ */


#ifndef __ICertificateEnrollmentServerSetup_FWD_DEFINED__
#define __ICertificateEnrollmentServerSetup_FWD_DEFINED__
typedef interface ICertificateEnrollmentServerSetup ICertificateEnrollmentServerSetup;
#endif 	/* __ICertificateEnrollmentServerSetup_FWD_DEFINED__ */


#ifndef __ICertificateEnrollmentPolicyServerSetup_FWD_DEFINED__
#define __ICertificateEnrollmentPolicyServerSetup_FWD_DEFINED__
typedef interface ICertificateEnrollmentPolicyServerSetup ICertificateEnrollmentPolicyServerSetup;
#endif 	/* __ICertificateEnrollmentPolicyServerSetup_FWD_DEFINED__ */


#ifndef __CCertSrvSetupKeyInformation_FWD_DEFINED__
#define __CCertSrvSetupKeyInformation_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertSrvSetupKeyInformation CCertSrvSetupKeyInformation;
#else
typedef struct CCertSrvSetupKeyInformation CCertSrvSetupKeyInformation;
#endif /* __cplusplus */

#endif 	/* __CCertSrvSetupKeyInformation_FWD_DEFINED__ */


#ifndef __CCertSrvSetup_FWD_DEFINED__
#define __CCertSrvSetup_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertSrvSetup CCertSrvSetup;
#else
typedef struct CCertSrvSetup CCertSrvSetup;
#endif /* __cplusplus */

#endif 	/* __CCertSrvSetup_FWD_DEFINED__ */


#ifndef __CMSCEPSetup_FWD_DEFINED__
#define __CMSCEPSetup_FWD_DEFINED__

#ifdef __cplusplus
typedef class CMSCEPSetup CMSCEPSetup;
#else
typedef struct CMSCEPSetup CMSCEPSetup;
#endif /* __cplusplus */

#endif 	/* __CMSCEPSetup_FWD_DEFINED__ */


#ifndef __CCertificateEnrollmentServerSetup_FWD_DEFINED__
#define __CCertificateEnrollmentServerSetup_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertificateEnrollmentServerSetup CCertificateEnrollmentServerSetup;
#else
typedef struct CCertificateEnrollmentServerSetup CCertificateEnrollmentServerSetup;
#endif /* __cplusplus */

#endif 	/* __CCertificateEnrollmentServerSetup_FWD_DEFINED__ */


#ifndef __CCertificateEnrollmentPolicyServerSetup_FWD_DEFINED__
#define __CCertificateEnrollmentPolicyServerSetup_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertificateEnrollmentPolicyServerSetup CCertificateEnrollmentPolicyServerSetup;
#else
typedef struct CCertificateEnrollmentPolicyServerSetup CCertificateEnrollmentPolicyServerSetup;
#endif /* __cplusplus */

#endif 	/* __CCertificateEnrollmentPolicyServerSetup_FWD_DEFINED__ */


/* header files for imported files */
#include "wtypes.h"
#include "oaidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __ICertSrvSetupKeyInformation_INTERFACE_DEFINED__
#define __ICertSrvSetupKeyInformation_INTERFACE_DEFINED__

/* interface ICertSrvSetupKeyInformation */
/* [unique][dual][helpstring][uuid][object] */ 


EXTERN_C const IID IID_ICertSrvSetupKeyInformation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6ba73778-36da-4c39-8a85-bcfa7d000793")
    ICertSrvSetupKeyInformation : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProviderName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProviderName( 
            /* [in] */ __RPC__in const BSTR bstrVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Length( 
            /* [retval][out] */ __RPC__out LONG *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Length( 
            /* [in] */ LONG lVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Existing( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Existing( 
            /* [in] */ VARIANT_BOOL bVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ContainerName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ContainerName( 
            /* [in] */ __RPC__in const BSTR bstrVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HashAlgorithm( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HashAlgorithm( 
            /* [in] */ __RPC__in const BSTR bstrVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExistingCACertificate( 
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ExistingCACertificate( 
            /* [in] */ VARIANT varVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertSrvSetupKeyInformationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertSrvSetupKeyInformation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertSrvSetupKeyInformation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertSrvSetupKeyInformation * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProviderName )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProviderName )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [in] */ __RPC__in const BSTR bstrVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [retval][out] */ __RPC__out LONG *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Length )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [in] */ LONG lVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Existing )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Existing )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [in] */ VARIANT_BOOL bVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContainerName )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContainerName )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [in] */ __RPC__in const BSTR bstrVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HashAlgorithm )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_HashAlgorithm )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [in] */ __RPC__in const BSTR bstrVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExistingCACertificate )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExistingCACertificate )( 
            __RPC__in ICertSrvSetupKeyInformation * This,
            /* [in] */ VARIANT varVal);
        
        END_INTERFACE
    } ICertSrvSetupKeyInformationVtbl;

    interface ICertSrvSetupKeyInformation
    {
        CONST_VTBL struct ICertSrvSetupKeyInformationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertSrvSetupKeyInformation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertSrvSetupKeyInformation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertSrvSetupKeyInformation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertSrvSetupKeyInformation_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertSrvSetupKeyInformation_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertSrvSetupKeyInformation_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertSrvSetupKeyInformation_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertSrvSetupKeyInformation_get_ProviderName(This,pVal)	\
    ( (This)->lpVtbl -> get_ProviderName(This,pVal) ) 

#define ICertSrvSetupKeyInformation_put_ProviderName(This,bstrVal)	\
    ( (This)->lpVtbl -> put_ProviderName(This,bstrVal) ) 

#define ICertSrvSetupKeyInformation_get_Length(This,pVal)	\
    ( (This)->lpVtbl -> get_Length(This,pVal) ) 

#define ICertSrvSetupKeyInformation_put_Length(This,lVal)	\
    ( (This)->lpVtbl -> put_Length(This,lVal) ) 

#define ICertSrvSetupKeyInformation_get_Existing(This,pVal)	\
    ( (This)->lpVtbl -> get_Existing(This,pVal) ) 

#define ICertSrvSetupKeyInformation_put_Existing(This,bVal)	\
    ( (This)->lpVtbl -> put_Existing(This,bVal) ) 

#define ICertSrvSetupKeyInformation_get_ContainerName(This,pVal)	\
    ( (This)->lpVtbl -> get_ContainerName(This,pVal) ) 

#define ICertSrvSetupKeyInformation_put_ContainerName(This,bstrVal)	\
    ( (This)->lpVtbl -> put_ContainerName(This,bstrVal) ) 

#define ICertSrvSetupKeyInformation_get_HashAlgorithm(This,pVal)	\
    ( (This)->lpVtbl -> get_HashAlgorithm(This,pVal) ) 

#define ICertSrvSetupKeyInformation_put_HashAlgorithm(This,bstrVal)	\
    ( (This)->lpVtbl -> put_HashAlgorithm(This,bstrVal) ) 

#define ICertSrvSetupKeyInformation_get_ExistingCACertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_ExistingCACertificate(This,pVal) ) 

#define ICertSrvSetupKeyInformation_put_ExistingCACertificate(This,varVal)	\
    ( (This)->lpVtbl -> put_ExistingCACertificate(This,varVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertSrvSetupKeyInformation_INTERFACE_DEFINED__ */


#ifndef __ICertSrvSetupKeyInformationCollection_INTERFACE_DEFINED__
#define __ICertSrvSetupKeyInformationCollection_INTERFACE_DEFINED__

/* interface ICertSrvSetupKeyInformationCollection */
/* [unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertSrvSetupKeyInformationCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e65c8b00-e58f-41f9-a9ec-a28d7427c844")
    ICertSrvSetupKeyInformationCollection : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out LONG *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ __RPC__in_opt ICertSrvSetupKeyInformation *pIKeyInformation) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertSrvSetupKeyInformationCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertSrvSetupKeyInformationCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertSrvSetupKeyInformationCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertSrvSetupKeyInformationCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertSrvSetupKeyInformationCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertSrvSetupKeyInformationCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertSrvSetupKeyInformationCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertSrvSetupKeyInformationCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in ICertSrvSetupKeyInformationCollection * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in ICertSrvSetupKeyInformationCollection * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in ICertSrvSetupKeyInformationCollection * This,
            /* [retval][out] */ __RPC__out LONG *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *Add )( 
            __RPC__in ICertSrvSetupKeyInformationCollection * This,
            /* [in] */ __RPC__in_opt ICertSrvSetupKeyInformation *pIKeyInformation);
        
        END_INTERFACE
    } ICertSrvSetupKeyInformationCollectionVtbl;

    interface ICertSrvSetupKeyInformationCollection
    {
        CONST_VTBL struct ICertSrvSetupKeyInformationCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertSrvSetupKeyInformationCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertSrvSetupKeyInformationCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertSrvSetupKeyInformationCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertSrvSetupKeyInformationCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertSrvSetupKeyInformationCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertSrvSetupKeyInformationCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertSrvSetupKeyInformationCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertSrvSetupKeyInformationCollection_get__NewEnum(This,ppVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppVal) ) 

#define ICertSrvSetupKeyInformationCollection_get_Item(This,Index,pVal)	\
    ( (This)->lpVtbl -> get_Item(This,Index,pVal) ) 

#define ICertSrvSetupKeyInformationCollection_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define ICertSrvSetupKeyInformationCollection_Add(This,pIKeyInformation)	\
    ( (This)->lpVtbl -> Add(This,pIKeyInformation) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertSrvSetupKeyInformationCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_casetup_0000_0002 */
/* [local] */ 

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_casetup_0000_0002_0001
    {	ENUM_SETUPPROP_INVALID	= -1,
	ENUM_SETUPPROP_CATYPE	= 0,
	ENUM_SETUPPROP_CAKEYINFORMATION	= 1,
	ENUM_SETUPPROP_INTERACTIVE	= 2,
	ENUM_SETUPPROP_CANAME	= 3,
	ENUM_SETUPPROP_CADSSUFFIX	= 4,
	ENUM_SETUPPROP_VALIDITYPERIOD	= 5,
	ENUM_SETUPPROP_VALIDITYPERIODUNIT	= 6,
	ENUM_SETUPPROP_EXPIRATIONDATE	= 7,
	ENUM_SETUPPROP_PRESERVEDATABASE	= 8,
	ENUM_SETUPPROP_DATABASEDIRECTORY	= 9,
	ENUM_SETUPPROP_LOGDIRECTORY	= 10,
	ENUM_SETUPPROP_SHAREDFOLDER	= 11,
	ENUM_SETUPPROP_PARENTCAMACHINE	= 12,
	ENUM_SETUPPROP_PARENTCANAME	= 13,
	ENUM_SETUPPROP_REQUESTFILE	= 14,
	ENUM_SETUPPROP_WEBCAMACHINE	= 15,
	ENUM_SETUPPROP_WEBCANAME	= 16
    } 	CASetupProperty;



extern RPC_IF_HANDLE __MIDL_itf_casetup_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_casetup_0000_0002_v0_0_s_ifspec;

#ifndef __ICertSrvSetup_INTERFACE_DEFINED__
#define __ICertSrvSetup_INTERFACE_DEFINED__

/* interface ICertSrvSetup */
/* [unique][dual][helpstring][uuid][object] */ 


EXTERN_C const IID IID_ICertSrvSetup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b760a1bb-4784-44c0-8f12-555f0780ff25")
    ICertSrvSetup : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CAErrorId( 
            /* [retval][out] */ __RPC__out LONG *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CAErrorString( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InitializeDefaults( 
            /* [in] */ VARIANT_BOOL bServer,
            /* [in] */ VARIANT_BOOL bClient) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCASetupProperty( 
            /* [in] */ CASetupProperty propertyId,
            /* [retval][out] */ __RPC__out VARIANT *pPropertyValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCASetupProperty( 
            /* [in] */ CASetupProperty propertyId,
            /* [in] */ __RPC__in VARIANT *pPropertyValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsPropertyEditable( 
            /* [in] */ CASetupProperty propertyId,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbEditable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSupportedCATypes( 
            /* [retval][out] */ __RPC__out VARIANT *pCATypes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProviderNameList( 
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetKeyLengthList( 
            /* [in] */ __RPC__in const BSTR bstrProviderName,
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHashAlgorithmList( 
            /* [in] */ __RPC__in const BSTR bstrProviderName,
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPrivateKeyContainerList( 
            /* [in] */ __RPC__in const BSTR bstrProviderName,
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExistingCACertificates( 
            /* [retval][out] */ __RPC__deref_out_opt ICertSrvSetupKeyInformationCollection **ppVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CAImportPFX( 
            /* [in] */ __RPC__in const BSTR bstrFileName,
            /* [in] */ __RPC__in const BSTR bstrPasswd,
            /* [in] */ VARIANT_BOOL bOverwriteExistingKey,
            /* [retval][out] */ __RPC__deref_out_opt ICertSrvSetupKeyInformation **ppVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCADistinguishedName( 
            /* [in] */ __RPC__in const BSTR bstrCADN,
            /* [in] */ VARIANT_BOOL bIgnoreUnicode,
            /* [in] */ VARIANT_BOOL bOverwriteExistingKey,
            /* [in] */ VARIANT_BOOL bOverwriteExistingCAInDS) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDatabaseInformation( 
            /* [in] */ __RPC__in const BSTR bstrDBDirectory,
            /* [in] */ __RPC__in const BSTR bstrLogDirectory,
            /* [in] */ __RPC__in const BSTR bstrSharedFolder,
            /* [in] */ VARIANT_BOOL bForceOverwrite) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetParentCAInformation( 
            /* [in] */ __RPC__in const BSTR bstrCAConfiguration) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetWebCAInformation( 
            /* [in] */ __RPC__in const BSTR bstrCAConfiguration) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Install( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PreUnInstall( 
            /* [in] */ VARIANT_BOOL bClientOnly) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PostUnInstall( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertSrvSetupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertSrvSetup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertSrvSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertSrvSetup * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertSrvSetup * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CAErrorId )( 
            __RPC__in ICertSrvSetup * This,
            /* [retval][out] */ __RPC__out LONG *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CAErrorString )( 
            __RPC__in ICertSrvSetup * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeDefaults )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ VARIANT_BOOL bServer,
            /* [in] */ VARIANT_BOOL bClient);
        
        HRESULT ( STDMETHODCALLTYPE *GetCASetupProperty )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ CASetupProperty propertyId,
            /* [retval][out] */ __RPC__out VARIANT *pPropertyValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetCASetupProperty )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ CASetupProperty propertyId,
            /* [in] */ __RPC__in VARIANT *pPropertyValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsPropertyEditable )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ CASetupProperty propertyId,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbEditable);
        
        HRESULT ( STDMETHODCALLTYPE *GetSupportedCATypes )( 
            __RPC__in ICertSrvSetup * This,
            /* [retval][out] */ __RPC__out VARIANT *pCATypes);
        
        HRESULT ( STDMETHODCALLTYPE *GetProviderNameList )( 
            __RPC__in ICertSrvSetup * This,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetKeyLengthList )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ __RPC__in const BSTR bstrProviderName,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetHashAlgorithmList )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ __RPC__in const BSTR bstrProviderName,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetPrivateKeyContainerList )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ __RPC__in const BSTR bstrProviderName,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetExistingCACertificates )( 
            __RPC__in ICertSrvSetup * This,
            /* [retval][out] */ __RPC__deref_out_opt ICertSrvSetupKeyInformationCollection **ppVal);
        
        HRESULT ( STDMETHODCALLTYPE *CAImportPFX )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ __RPC__in const BSTR bstrFileName,
            /* [in] */ __RPC__in const BSTR bstrPasswd,
            /* [in] */ VARIANT_BOOL bOverwriteExistingKey,
            /* [retval][out] */ __RPC__deref_out_opt ICertSrvSetupKeyInformation **ppVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetCADistinguishedName )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ __RPC__in const BSTR bstrCADN,
            /* [in] */ VARIANT_BOOL bIgnoreUnicode,
            /* [in] */ VARIANT_BOOL bOverwriteExistingKey,
            /* [in] */ VARIANT_BOOL bOverwriteExistingCAInDS);
        
        HRESULT ( STDMETHODCALLTYPE *SetDatabaseInformation )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ __RPC__in const BSTR bstrDBDirectory,
            /* [in] */ __RPC__in const BSTR bstrLogDirectory,
            /* [in] */ __RPC__in const BSTR bstrSharedFolder,
            /* [in] */ VARIANT_BOOL bForceOverwrite);
        
        HRESULT ( STDMETHODCALLTYPE *SetParentCAInformation )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ __RPC__in const BSTR bstrCAConfiguration);
        
        HRESULT ( STDMETHODCALLTYPE *SetWebCAInformation )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ __RPC__in const BSTR bstrCAConfiguration);
        
        HRESULT ( STDMETHODCALLTYPE *Install )( 
            __RPC__in ICertSrvSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *PreUnInstall )( 
            __RPC__in ICertSrvSetup * This,
            /* [in] */ VARIANT_BOOL bClientOnly);
        
        HRESULT ( STDMETHODCALLTYPE *PostUnInstall )( 
            __RPC__in ICertSrvSetup * This);
        
        END_INTERFACE
    } ICertSrvSetupVtbl;

    interface ICertSrvSetup
    {
        CONST_VTBL struct ICertSrvSetupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertSrvSetup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertSrvSetup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertSrvSetup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertSrvSetup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertSrvSetup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertSrvSetup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertSrvSetup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertSrvSetup_get_CAErrorId(This,pVal)	\
    ( (This)->lpVtbl -> get_CAErrorId(This,pVal) ) 

#define ICertSrvSetup_get_CAErrorString(This,pVal)	\
    ( (This)->lpVtbl -> get_CAErrorString(This,pVal) ) 

#define ICertSrvSetup_InitializeDefaults(This,bServer,bClient)	\
    ( (This)->lpVtbl -> InitializeDefaults(This,bServer,bClient) ) 

#define ICertSrvSetup_GetCASetupProperty(This,propertyId,pPropertyValue)	\
    ( (This)->lpVtbl -> GetCASetupProperty(This,propertyId,pPropertyValue) ) 

#define ICertSrvSetup_SetCASetupProperty(This,propertyId,pPropertyValue)	\
    ( (This)->lpVtbl -> SetCASetupProperty(This,propertyId,pPropertyValue) ) 

#define ICertSrvSetup_IsPropertyEditable(This,propertyId,pbEditable)	\
    ( (This)->lpVtbl -> IsPropertyEditable(This,propertyId,pbEditable) ) 

#define ICertSrvSetup_GetSupportedCATypes(This,pCATypes)	\
    ( (This)->lpVtbl -> GetSupportedCATypes(This,pCATypes) ) 

#define ICertSrvSetup_GetProviderNameList(This,pVal)	\
    ( (This)->lpVtbl -> GetProviderNameList(This,pVal) ) 

#define ICertSrvSetup_GetKeyLengthList(This,bstrProviderName,pVal)	\
    ( (This)->lpVtbl -> GetKeyLengthList(This,bstrProviderName,pVal) ) 

#define ICertSrvSetup_GetHashAlgorithmList(This,bstrProviderName,pVal)	\
    ( (This)->lpVtbl -> GetHashAlgorithmList(This,bstrProviderName,pVal) ) 

#define ICertSrvSetup_GetPrivateKeyContainerList(This,bstrProviderName,pVal)	\
    ( (This)->lpVtbl -> GetPrivateKeyContainerList(This,bstrProviderName,pVal) ) 

#define ICertSrvSetup_GetExistingCACertificates(This,ppVal)	\
    ( (This)->lpVtbl -> GetExistingCACertificates(This,ppVal) ) 

#define ICertSrvSetup_CAImportPFX(This,bstrFileName,bstrPasswd,bOverwriteExistingKey,ppVal)	\
    ( (This)->lpVtbl -> CAImportPFX(This,bstrFileName,bstrPasswd,bOverwriteExistingKey,ppVal) ) 

#define ICertSrvSetup_SetCADistinguishedName(This,bstrCADN,bIgnoreUnicode,bOverwriteExistingKey,bOverwriteExistingCAInDS)	\
    ( (This)->lpVtbl -> SetCADistinguishedName(This,bstrCADN,bIgnoreUnicode,bOverwriteExistingKey,bOverwriteExistingCAInDS) ) 

#define ICertSrvSetup_SetDatabaseInformation(This,bstrDBDirectory,bstrLogDirectory,bstrSharedFolder,bForceOverwrite)	\
    ( (This)->lpVtbl -> SetDatabaseInformation(This,bstrDBDirectory,bstrLogDirectory,bstrSharedFolder,bForceOverwrite) ) 

#define ICertSrvSetup_SetParentCAInformation(This,bstrCAConfiguration)	\
    ( (This)->lpVtbl -> SetParentCAInformation(This,bstrCAConfiguration) ) 

#define ICertSrvSetup_SetWebCAInformation(This,bstrCAConfiguration)	\
    ( (This)->lpVtbl -> SetWebCAInformation(This,bstrCAConfiguration) ) 

#define ICertSrvSetup_Install(This)	\
    ( (This)->lpVtbl -> Install(This) ) 

#define ICertSrvSetup_PreUnInstall(This,bClientOnly)	\
    ( (This)->lpVtbl -> PreUnInstall(This,bClientOnly) ) 

#define ICertSrvSetup_PostUnInstall(This)	\
    ( (This)->lpVtbl -> PostUnInstall(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertSrvSetup_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_casetup_0000_0003 */
/* [local] */ 

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_casetup_0000_0003_0001
    {	ENUM_CEPSETUPPROP_USELOCALSYSTEM	= 0,
	ENUM_CEPSETUPPROP_USECHALLENGE	= 1,
	ENUM_CEPSETUPPROP_RANAME_CN	= 2,
	ENUM_CEPSETUPPROP_RANAME_EMAIL	= 3,
	ENUM_CEPSETUPPROP_RANAME_COMPANY	= 4,
	ENUM_CEPSETUPPROP_RANAME_DEPT	= 5,
	ENUM_CEPSETUPPROP_RANAME_CITY	= 6,
	ENUM_CEPSETUPPROP_RANAME_STATE	= 7,
	ENUM_CEPSETUPPROP_RANAME_COUNTRY	= 8,
	ENUM_CEPSETUPPROP_SIGNINGKEYINFORMATION	= 9,
	ENUM_CEPSETUPPROP_EXCHANGEKEYINFORMATION	= 10,
	ENUM_CEPSETUPPROP_CAINFORMATION	= 11,
	ENUM_CEPSETUPPROP_MSCEPURL	= 12,
	ENUM_CEPSETUPPROP_CHALLENGEURL	= 13
    } 	MSCEPSetupProperty;



extern RPC_IF_HANDLE __MIDL_itf_casetup_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_casetup_0000_0003_v0_0_s_ifspec;

#ifndef __IMSCEPSetup_INTERFACE_DEFINED__
#define __IMSCEPSetup_INTERFACE_DEFINED__

/* interface IMSCEPSetup */
/* [unique][dual][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMSCEPSetup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4f7761bb-9f3b-4592-9ee0-9a73259c313e")
    IMSCEPSetup : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_MSCEPErrorId( 
            /* [retval][out] */ __RPC__out LONG *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_MSCEPErrorString( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InitializeDefaults( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMSCEPSetupProperty( 
            /* [in] */ MSCEPSetupProperty propertyId,
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMSCEPSetupProperty( 
            /* [in] */ MSCEPSetupProperty propertyId,
            /* [in] */ __RPC__in VARIANT *pPropertyValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAccountInformation( 
            /* [in] */ __RPC__in const BSTR bstrUserName,
            /* [in] */ __RPC__in const BSTR bstrPassword) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsMSCEPStoreEmpty( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbEmpty) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProviderNameList( 
            /* [in] */ VARIANT_BOOL bExchange,
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetKeyLengthList( 
            /* [in] */ VARIANT_BOOL bExchange,
            /* [in] */ __RPC__in const BSTR bstrProviderName,
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Install( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PreUnInstall( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PostUnInstall( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMSCEPSetupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMSCEPSetup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMSCEPSetup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMSCEPSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IMSCEPSetup * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IMSCEPSetup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IMSCEPSetup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMSCEPSetup * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MSCEPErrorId )( 
            __RPC__in IMSCEPSetup * This,
            /* [retval][out] */ __RPC__out LONG *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MSCEPErrorString )( 
            __RPC__in IMSCEPSetup * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeDefaults )( 
            __RPC__in IMSCEPSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMSCEPSetupProperty )( 
            __RPC__in IMSCEPSetup * This,
            /* [in] */ MSCEPSetupProperty propertyId,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetMSCEPSetupProperty )( 
            __RPC__in IMSCEPSetup * This,
            /* [in] */ MSCEPSetupProperty propertyId,
            /* [in] */ __RPC__in VARIANT *pPropertyValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetAccountInformation )( 
            __RPC__in IMSCEPSetup * This,
            /* [in] */ __RPC__in const BSTR bstrUserName,
            /* [in] */ __RPC__in const BSTR bstrPassword);
        
        HRESULT ( STDMETHODCALLTYPE *IsMSCEPStoreEmpty )( 
            __RPC__in IMSCEPSetup * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbEmpty);
        
        HRESULT ( STDMETHODCALLTYPE *GetProviderNameList )( 
            __RPC__in IMSCEPSetup * This,
            /* [in] */ VARIANT_BOOL bExchange,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetKeyLengthList )( 
            __RPC__in IMSCEPSetup * This,
            /* [in] */ VARIANT_BOOL bExchange,
            /* [in] */ __RPC__in const BSTR bstrProviderName,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *Install )( 
            __RPC__in IMSCEPSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *PreUnInstall )( 
            __RPC__in IMSCEPSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *PostUnInstall )( 
            __RPC__in IMSCEPSetup * This);
        
        END_INTERFACE
    } IMSCEPSetupVtbl;

    interface IMSCEPSetup
    {
        CONST_VTBL struct IMSCEPSetupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMSCEPSetup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMSCEPSetup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMSCEPSetup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMSCEPSetup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMSCEPSetup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMSCEPSetup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMSCEPSetup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMSCEPSetup_get_MSCEPErrorId(This,pVal)	\
    ( (This)->lpVtbl -> get_MSCEPErrorId(This,pVal) ) 

#define IMSCEPSetup_get_MSCEPErrorString(This,pVal)	\
    ( (This)->lpVtbl -> get_MSCEPErrorString(This,pVal) ) 

#define IMSCEPSetup_InitializeDefaults(This)	\
    ( (This)->lpVtbl -> InitializeDefaults(This) ) 

#define IMSCEPSetup_GetMSCEPSetupProperty(This,propertyId,pVal)	\
    ( (This)->lpVtbl -> GetMSCEPSetupProperty(This,propertyId,pVal) ) 

#define IMSCEPSetup_SetMSCEPSetupProperty(This,propertyId,pPropertyValue)	\
    ( (This)->lpVtbl -> SetMSCEPSetupProperty(This,propertyId,pPropertyValue) ) 

#define IMSCEPSetup_SetAccountInformation(This,bstrUserName,bstrPassword)	\
    ( (This)->lpVtbl -> SetAccountInformation(This,bstrUserName,bstrPassword) ) 

#define IMSCEPSetup_IsMSCEPStoreEmpty(This,pbEmpty)	\
    ( (This)->lpVtbl -> IsMSCEPStoreEmpty(This,pbEmpty) ) 

#define IMSCEPSetup_GetProviderNameList(This,bExchange,pVal)	\
    ( (This)->lpVtbl -> GetProviderNameList(This,bExchange,pVal) ) 

#define IMSCEPSetup_GetKeyLengthList(This,bExchange,bstrProviderName,pVal)	\
    ( (This)->lpVtbl -> GetKeyLengthList(This,bExchange,bstrProviderName,pVal) ) 

#define IMSCEPSetup_Install(This)	\
    ( (This)->lpVtbl -> Install(This) ) 

#define IMSCEPSetup_PreUnInstall(This)	\
    ( (This)->lpVtbl -> PreUnInstall(This) ) 

#define IMSCEPSetup_PostUnInstall(This)	\
    ( (This)->lpVtbl -> PostUnInstall(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMSCEPSetup_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_casetup_0000_0004 */
/* [local] */ 

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_casetup_0000_0004_0001
    {	ENUM_CESSETUPPROP_USE_IISAPPPOOLIDENTITY	= 0,
	ENUM_CESSETUPPROP_CACONFIG	= 1,
	ENUM_CESSETUPPROP_AUTHENTICATION	= 2,
	ENUM_CESSETUPPROP_SSLCERTHASH	= 3,
	ENUM_CESSETUPPROP_URL	= 4,
	ENUM_CESSETUPPROP_RENEWALONLY	= 5
    } 	CESSetupProperty;



extern RPC_IF_HANDLE __MIDL_itf_casetup_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_casetup_0000_0004_v0_0_s_ifspec;

#ifndef __ICertificateEnrollmentServerSetup_INTERFACE_DEFINED__
#define __ICertificateEnrollmentServerSetup_INTERFACE_DEFINED__

/* interface ICertificateEnrollmentServerSetup */
/* [unique][dual][helpstring][uuid][object] */ 


EXTERN_C const IID IID_ICertificateEnrollmentServerSetup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("70027FDB-9DD9-4921-8944-B35CB31BD2EC")
    ICertificateEnrollmentServerSetup : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ErrorString( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InitializeInstallDefaults( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ CESSetupProperty propertyId,
            /* [retval][out] */ __RPC__out VARIANT *pPropertyValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProperty( 
            /* [in] */ CESSetupProperty propertyId,
            /* [in] */ __RPC__in VARIANT *pPropertyValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetApplicationPoolCredentials( 
            /* [in] */ __RPC__in const BSTR bstrUsername,
            /* [in] */ __RPC__in const BSTR bstrPassword) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Install( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnInstall( 
            /* [optional][in] */ __RPC__in VARIANT *pCAConfig,
            /* [optional][in] */ __RPC__in VARIANT *pAuthentication) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertificateEnrollmentServerSetupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertificateEnrollmentServerSetup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertificateEnrollmentServerSetup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertificateEnrollmentServerSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertificateEnrollmentServerSetup * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertificateEnrollmentServerSetup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertificateEnrollmentServerSetup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertificateEnrollmentServerSetup * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorString )( 
            __RPC__in ICertificateEnrollmentServerSetup * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeInstallDefaults )( 
            __RPC__in ICertificateEnrollmentServerSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in ICertificateEnrollmentServerSetup * This,
            /* [in] */ CESSetupProperty propertyId,
            /* [retval][out] */ __RPC__out VARIANT *pPropertyValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in ICertificateEnrollmentServerSetup * This,
            /* [in] */ CESSetupProperty propertyId,
            /* [in] */ __RPC__in VARIANT *pPropertyValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetApplicationPoolCredentials )( 
            __RPC__in ICertificateEnrollmentServerSetup * This,
            /* [in] */ __RPC__in const BSTR bstrUsername,
            /* [in] */ __RPC__in const BSTR bstrPassword);
        
        HRESULT ( STDMETHODCALLTYPE *Install )( 
            __RPC__in ICertificateEnrollmentServerSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnInstall )( 
            __RPC__in ICertificateEnrollmentServerSetup * This,
            /* [optional][in] */ __RPC__in VARIANT *pCAConfig,
            /* [optional][in] */ __RPC__in VARIANT *pAuthentication);
        
        END_INTERFACE
    } ICertificateEnrollmentServerSetupVtbl;

    interface ICertificateEnrollmentServerSetup
    {
        CONST_VTBL struct ICertificateEnrollmentServerSetupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertificateEnrollmentServerSetup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertificateEnrollmentServerSetup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertificateEnrollmentServerSetup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertificateEnrollmentServerSetup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertificateEnrollmentServerSetup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertificateEnrollmentServerSetup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertificateEnrollmentServerSetup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertificateEnrollmentServerSetup_get_ErrorString(This,pVal)	\
    ( (This)->lpVtbl -> get_ErrorString(This,pVal) ) 

#define ICertificateEnrollmentServerSetup_InitializeInstallDefaults(This)	\
    ( (This)->lpVtbl -> InitializeInstallDefaults(This) ) 

#define ICertificateEnrollmentServerSetup_GetProperty(This,propertyId,pPropertyValue)	\
    ( (This)->lpVtbl -> GetProperty(This,propertyId,pPropertyValue) ) 

#define ICertificateEnrollmentServerSetup_SetProperty(This,propertyId,pPropertyValue)	\
    ( (This)->lpVtbl -> SetProperty(This,propertyId,pPropertyValue) ) 

#define ICertificateEnrollmentServerSetup_SetApplicationPoolCredentials(This,bstrUsername,bstrPassword)	\
    ( (This)->lpVtbl -> SetApplicationPoolCredentials(This,bstrUsername,bstrPassword) ) 

#define ICertificateEnrollmentServerSetup_Install(This)	\
    ( (This)->lpVtbl -> Install(This) ) 

#define ICertificateEnrollmentServerSetup_UnInstall(This,pCAConfig,pAuthentication)	\
    ( (This)->lpVtbl -> UnInstall(This,pCAConfig,pAuthentication) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertificateEnrollmentServerSetup_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_casetup_0000_0005 */
/* [local] */ 

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_casetup_0000_0005_0001
    {	ENUM_CEPSETUPPROP_AUTHENTICATION	= 0,
	ENUM_CEPSETUPPROP_SSLCERTHASH	= 1,
	ENUM_CEPSETUPPROP_URL	= 2
    } 	CEPSetupProperty;



extern RPC_IF_HANDLE __MIDL_itf_casetup_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_casetup_0000_0005_v0_0_s_ifspec;

#ifndef __ICertificateEnrollmentPolicyServerSetup_INTERFACE_DEFINED__
#define __ICertificateEnrollmentPolicyServerSetup_INTERFACE_DEFINED__

/* interface ICertificateEnrollmentPolicyServerSetup */
/* [unique][dual][helpstring][uuid][object] */ 


EXTERN_C const IID IID_ICertificateEnrollmentPolicyServerSetup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("859252CC-238C-4a88-B8FD-A37E7D04E68B")
    ICertificateEnrollmentPolicyServerSetup : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ErrorString( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InitializeInstallDefaults( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ CEPSetupProperty propertyId,
            /* [retval][out] */ __RPC__out VARIANT *pPropertyValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProperty( 
            /* [in] */ CEPSetupProperty propertyId,
            /* [in] */ __RPC__in VARIANT *pPropertyValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Install( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnInstall( 
            /* [optional][in] */ __RPC__in VARIANT *pReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertificateEnrollmentPolicyServerSetupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertificateEnrollmentPolicyServerSetup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertificateEnrollmentPolicyServerSetup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertificateEnrollmentPolicyServerSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertificateEnrollmentPolicyServerSetup * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertificateEnrollmentPolicyServerSetup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertificateEnrollmentPolicyServerSetup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertificateEnrollmentPolicyServerSetup * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorString )( 
            __RPC__in ICertificateEnrollmentPolicyServerSetup * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeInstallDefaults )( 
            __RPC__in ICertificateEnrollmentPolicyServerSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in ICertificateEnrollmentPolicyServerSetup * This,
            /* [in] */ CEPSetupProperty propertyId,
            /* [retval][out] */ __RPC__out VARIANT *pPropertyValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in ICertificateEnrollmentPolicyServerSetup * This,
            /* [in] */ CEPSetupProperty propertyId,
            /* [in] */ __RPC__in VARIANT *pPropertyValue);
        
        HRESULT ( STDMETHODCALLTYPE *Install )( 
            __RPC__in ICertificateEnrollmentPolicyServerSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnInstall )( 
            __RPC__in ICertificateEnrollmentPolicyServerSetup * This,
            /* [optional][in] */ __RPC__in VARIANT *pReserved);
        
        END_INTERFACE
    } ICertificateEnrollmentPolicyServerSetupVtbl;

    interface ICertificateEnrollmentPolicyServerSetup
    {
        CONST_VTBL struct ICertificateEnrollmentPolicyServerSetupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertificateEnrollmentPolicyServerSetup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertificateEnrollmentPolicyServerSetup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertificateEnrollmentPolicyServerSetup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertificateEnrollmentPolicyServerSetup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertificateEnrollmentPolicyServerSetup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertificateEnrollmentPolicyServerSetup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertificateEnrollmentPolicyServerSetup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertificateEnrollmentPolicyServerSetup_get_ErrorString(This,pVal)	\
    ( (This)->lpVtbl -> get_ErrorString(This,pVal) ) 

#define ICertificateEnrollmentPolicyServerSetup_InitializeInstallDefaults(This)	\
    ( (This)->lpVtbl -> InitializeInstallDefaults(This) ) 

#define ICertificateEnrollmentPolicyServerSetup_GetProperty(This,propertyId,pPropertyValue)	\
    ( (This)->lpVtbl -> GetProperty(This,propertyId,pPropertyValue) ) 

#define ICertificateEnrollmentPolicyServerSetup_SetProperty(This,propertyId,pPropertyValue)	\
    ( (This)->lpVtbl -> SetProperty(This,propertyId,pPropertyValue) ) 

#define ICertificateEnrollmentPolicyServerSetup_Install(This)	\
    ( (This)->lpVtbl -> Install(This) ) 

#define ICertificateEnrollmentPolicyServerSetup_UnInstall(This,pReserved)	\
    ( (This)->lpVtbl -> UnInstall(This,pReserved) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertificateEnrollmentPolicyServerSetup_INTERFACE_DEFINED__ */



#ifndef __CertSrvSetupLib_LIBRARY_DEFINED__
#define __CertSrvSetupLib_LIBRARY_DEFINED__

/* library CertSrvSetupLib */
/* [helpstring][version][uuid] */ 


EXTERN_C const IID LIBID_CertSrvSetupLib;

EXTERN_C const CLSID CLSID_CCertSrvSetupKeyInformation;

#ifdef __cplusplus

class DECLSPEC_UUID("38373906-5433-4633-b0fb-29b7e78262e1")
CCertSrvSetupKeyInformation;
#endif

EXTERN_C const CLSID CLSID_CCertSrvSetup;

#ifdef __cplusplus

class DECLSPEC_UUID("961f180f-f55c-413d-a9b3-7d2af4d8e42f")
CCertSrvSetup;
#endif

EXTERN_C const CLSID CLSID_CMSCEPSetup;

#ifdef __cplusplus

class DECLSPEC_UUID("aa4f5c02-8e7c-49c4-94fa-67a5cc5eadb4")
CMSCEPSetup;
#endif

EXTERN_C const CLSID CLSID_CCertificateEnrollmentServerSetup;

#ifdef __cplusplus

class DECLSPEC_UUID("9902F3BC-88AF-4cf8-AE62-7140531552B6")
CCertificateEnrollmentServerSetup;
#endif

EXTERN_C const CLSID CLSID_CCertificateEnrollmentPolicyServerSetup;

#ifdef __cplusplus

class DECLSPEC_UUID("AFE2FA32-41B1-459d-A5DE-49ADD8A72182")
CCertificateEnrollmentPolicyServerSetup;
#endif
#endif /* __CertSrvSetupLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree64(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\CDOSys_I.c ===
/* this ALWAYS GENERATED file contains the IIDs and CLSIDs */

/* link this file in with the server and any clients */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for cdo.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


#ifdef __cplusplus
extern "C"{
#endif 


#include <rpc.h>
#include <rpcndr.h>

#ifdef _MIDL_USE_GUIDDEF_

#ifndef INITGUID
#define INITGUID
#include <guiddef.h>
#undef INITGUID
#else
#include <guiddef.h>
#endif

#define MIDL_DEFINE_GUID(type,name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) \
        DEFINE_GUID(name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)

#else // !_MIDL_USE_GUIDDEF_

#ifndef __IID_DEFINED__
#define __IID_DEFINED__

typedef struct _IID
{
    unsigned long x;
    unsigned short s1;
    unsigned short s2;
    unsigned char  c[8];
} IID;

#endif // __IID_DEFINED__

#ifndef CLSID_DEFINED
#define CLSID_DEFINED
typedef IID CLSID;
#endif // CLSID_DEFINED

#define MIDL_DEFINE_GUID(type,name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) \
        const type name = {l,w1,w2,{b1,b2,b3,b4,b5,b6,b7,b8}}

#endif !_MIDL_USE_GUIDDEF_

#if defined __cplusplus && !defined CDO_NO_NAMESPACE
namespace CDO {
#else
#undef IDataSource
#endif

MIDL_DEFINE_GUID(IID, IID_IDataSource,0xCD000029,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_IMessage,0xCD000020,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_IBodyPart,0xCD000021,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_IConfiguration,0xCD000022,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_IMessages,0xCD000025,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_IDropDirectory,0xCD000024,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_IBodyParts,0xCD000023,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_ISMTPScriptConnector,0xCD000030,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_INNTPEarlyScriptConnector,0xCD000034,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_INNTPPostScriptConnector,0xCD000031,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_INNTPFinalScriptConnector,0xCD000032,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_ISMTPOnArrival,0xCD000026,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_INNTPOnPostEarly,0xCD000033,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_INNTPOnPost,0xCD000027,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_INNTPOnPostFinal,0xCD000028,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_IProxyObject,0xCD000083,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, IID_IGetInterface,0xCD0ff000,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(IID, LIBID_CDO,0xCD000000,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(CLSID, CLSID_Message,0xCD000001,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(CLSID, CLSID_Configuration,0xCD000002,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(CLSID, CLSID_DropDirectory,0xCD000004,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(CLSID, CLSID_SMTPConnector,0xCD000008,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(CLSID, CLSID_NNTPEarlyConnector,0xCD000011,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(CLSID, CLSID_NNTPPostConnector,0xCD000009,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);


MIDL_DEFINE_GUID(CLSID, CLSID_NNTPFinalConnector,0xCD000010,0x8B95,0x11D1,0x82,0xDB,0x00,0xC0,0x4F,0xB1,0x62,0x5D);

#undef MIDL_DEFINE_GUID
#if defined __cplusplus && !defined CDO_NO_NAMESPACE
} // namespace CDO
#endif

#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\CertBase.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for certbase.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __certbase_h__
#define __certbase_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

/* header files for imported files */
#include "wtypes.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_certbase_0000_0000 */
/* [local] */ 

typedef struct _CERTTRANSBLOB
    {
    unsigned long cb;
    BYTE *pb;
    } 	CERTTRANSBLOB;

typedef struct _CERTVIEWRESTRICTION
    {
    DWORD ColumnIndex;
    LONG SeekOperator;
    LONG SortOrder;
    BYTE *pbValue;
    DWORD cbValue;
    } 	CERTVIEWRESTRICTION;



extern RPC_IF_HANDLE __MIDL_itf_certbase_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_certbase_0000_0000_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\CDOSysErr.h ===
//
//  CDO message file
//
// IMPORTANT:
// if you add a new string do it at the end of the existing strings for the given section (cdosys, cdosvr or cdoex)
// see x5:191917 for more details
//
// Message categories
//
//
//  Values are 32 bit values laid out as follows:
//
//   3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
//   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
//  +---+-+-+-----------------------+-------------------------------+
//  |Sev|C|R|     Facility          |               Code            |
//  +---+-+-+-----------------------+-------------------------------+
//
//  where
//
//      Sev - is the severity code
//
//          00 - Success
//          01 - Informational
//          10 - Warning
//          11 - Error
//
//      C - is the Customer code flag
//
//      R - is a reserved bit
//
//      Facility - is the facility code
//
//      Code - is the facility's status code
//
//
// Define the facility codes
//


//
// Define the severity codes
//


//
// MessageId: categoryHeader
//
// MessageText:
//
// Header
//
#define categoryHeader                   0x00000001L

//
// MessageId: categoryUnused
//
// MessageText:
//
// None
//
#define categoryUnused                   0x00000002L

//
// MessageId: categoryGeneral
//
// MessageText:
//
// General
//
#define categoryGeneral                  0x00000003L

//////////////////////////////////////////////////////////////////////////////
// Error code ranges in FACILITY_ITF. 
// Different libraries sharing the CDO name
// should not conflict in their error codes. Note that below 0x200 is
// reserved by COM.
//	0x200 through 0x5ff    - CDOEX and CDOSYS error codes
// 0x600 through 0x6ff    - workflow error codes
//	0x1000 through 0x1100
//	0x4000 through 0x4100
//
//////////////////////////////////////////////////////////////////////////////
// MessageId Ranges used by the localizer
//
// 1: 0x200 through 0x7ff, 0x4000 through 0x4fff: Library error messages, not localized.
// 2: 0x2000 through 0x2fff: Server error messages, localized in server languages.
// 3: 0x1000 through 0x1fff: Client text, localized in client languages.
//
//////////////////////////////////////////////////////////////////////////////
// Error strings for IErrorInfo
//
// MessageId = 0x200 through 0x7ff or 0x4000 through 0x4fff. Not localized.
//
// 0x200 available - was CDO_E_FAIL
//
// MessageId: CDO_E_UNCAUGHT_EXCEPTION
//
// MessageText:
//
// Exception %1 was generated at address %2
//
#define CDO_E_UNCAUGHT_EXCEPTION         0x80040201L

// 0x202 was CDO_E_NOT_BOUND, was renamed
//
// MessageId: CDO_E_NOT_OPENED
//
// MessageText:
//
// No data source has been opened for the object.
//
#define CDO_E_NOT_OPENED                 0x80040202L

//
// MessageId: CDO_E_UNSUPPORTED_DATASOURCE
//
// MessageText:
//
// The object does not support this type of data source.
//
#define CDO_E_UNSUPPORTED_DATASOURCE     0x80040203L

//
// MessageId: CDO_E_INVALID_PROPERTYNAME
//
// MessageText:
//
// The object does not support the requested property name or namespace.
//
#define CDO_E_INVALID_PROPERTYNAME       0x80040204L

//
// MessageId: CDO_E_PROP_UNSUPPORTED
//
// MessageText:
//
// The object does not support the requested property.
//
#define CDO_E_PROP_UNSUPPORTED           0x80040205L

// 0x206 - was CDO_E_NOT_INITIALIZED
//
// MessageId: CDO_E_INACTIVE
//
// MessageText:
//
// The object is not active. It may have been deleted or it may not have been opened.
//
#define CDO_E_INACTIVE                   0x80040206L

//
// MessageId: CDO_E_NO_SUPPORT_FOR_OBJECTS
//
// MessageText:
//
// The object does not support storing persistent state information for objects.
//
#define CDO_E_NO_SUPPORT_FOR_OBJECTS     0x80040207L

//
// MessageId: CDO_E_NOT_AVAILABLE
//
// MessageText:
//
// The requested property or feature, while supported, is not available at this time or in this context.
//
#define CDO_E_NOT_AVAILABLE              0x80040208L

//
// MessageId: CDO_E_NO_DEFAULT_DROP_DIR
//
// MessageText:
//
// No default drop directory has been configured for this server.
//
#define CDO_E_NO_DEFAULT_DROP_DIR        0x80040209L

//
// MessageId: CDO_E_SMTP_SERVER_REQUIRED
//
// MessageText:
//
// The SMTP server name is required, and was not found in the configuration source.
//
#define CDO_E_SMTP_SERVER_REQUIRED       0x8004020AL

//
// MessageId: CDO_E_NNTP_SERVER_REQUIRED
//
// MessageText:
//
// The NNTP server name is required, and was not found in the configuration source.
//
#define CDO_E_NNTP_SERVER_REQUIRED       0x8004020BL

//
// MessageId: CDO_E_RECIPIENT_MISSING
//
// MessageText:
//
// At least one recipient is required, but none were found.
//
#define CDO_E_RECIPIENT_MISSING          0x8004020CL

//
// MessageId: CDO_E_FROM_MISSING
//
// MessageText:
//
// At least one of the From or Sender fields is required, and neither was found.
//
#define CDO_E_FROM_MISSING               0x8004020DL

//
// MessageId: CDO_E_SENDER_REJECTED
//
// MessageText:
//
// The server rejected the sender address. The server response was: %1
//
#define CDO_E_SENDER_REJECTED            0x8004020EL

//
// MessageId: CDO_E_RECIPIENTS_REJECTED
//
// MessageText:
//
// The server rejected one or more recipient addresses. The server response was: %1
//
#define CDO_E_RECIPIENTS_REJECTED        0x8004020FL

//
// MessageId: CDO_E_NNTP_POST_FAILED
//
// MessageText:
//
// The message could not be posted to the NNTP server. The transport error code was %2. The server response was %1
//
#define CDO_E_NNTP_POST_FAILED           0x80040210L

//
// MessageId: CDO_E_SMTP_SEND_FAILED
//
// MessageText:
//
// The message could not be sent to the SMTP server. The transport error code was %2. The server response was %1
//
#define CDO_E_SMTP_SEND_FAILED           0x80040211L

//
// MessageId: CDO_E_CONNECTION_DROPPED
//
// MessageText:
//
// The transport lost its connection to the server.
//
#define CDO_E_CONNECTION_DROPPED         0x80040212L

//
// MessageId: CDO_E_FAILED_TO_CONNECT
//
// MessageText:
//
// The transport failed to connect to the server.
//
#define CDO_E_FAILED_TO_CONNECT          0x80040213L

//
// MessageId: CDO_E_INVALID_POST
//
// MessageText:
//
// The Subject, From, and Newsgroup fields are all required, and one or more was not found.
//
#define CDO_E_INVALID_POST               0x80040214L

//0x215 was CDO_E_DELETE_FAILED
//
// MessageId: CDO_E_AUTHENTICATION_FAILURE
//
// MessageText:
//
// The server rejected the logon attempt due to authentication failure. The server response was: %1
//
#define CDO_E_AUTHENTICATION_FAILURE     0x80040215L

//
// MessageId: CDO_E_INVALID_CONTENT_TYPE
//
// MessageText:
//
// The content type was not valid in this context. For example, the root of an MHTML message must be an HTML document.
//
#define CDO_E_INVALID_CONTENT_TYPE       0x80040216L

//
// MessageId: CDO_E_LOGON_FAILURE
//
// MessageText:
//
// The transport was unable to log on to the server.
//
#define CDO_E_LOGON_FAILURE              0x80040217L

//
// MessageId: CDO_E_HTTP_NOT_FOUND
//
// MessageText:
//
// The requested resource could not be found. The server response was: %1.
//
#define CDO_E_HTTP_NOT_FOUND             0x80040218L

//
// MessageId: CDO_E_HTTP_FORBIDDEN
//
// MessageText:
//
// Access to the requested resource is denied. The server response was: %1.
//
#define CDO_E_HTTP_FORBIDDEN             0x80040219L

//
// MessageId: CDO_E_HTTP_FAILED
//
// MessageText:
//
// The HTTP request failed.  The server response was: %1.
//
#define CDO_E_HTTP_FAILED                0x8004021AL

//
// MessageId: CDO_E_MULTIPART_NO_DATA
//
// MessageText:
//
// This is a multipart body part. It has no content other than the body parts contained within it.
//
#define CDO_E_MULTIPART_NO_DATA          0x8004021BL

// renamed, was CDO_E_INVALID_ENCODING_FOR_COMPOSITE
//
// MessageId: CDO_E_INVALID_ENCODING_FOR_MULTIPART
//
// MessageText:
//
// Multipart body parts must be encoded as 7bit, 8bit, or binary.
//
#define CDO_E_INVALID_ENCODING_FOR_MULTIPART 0x8004021CL

// 0x21d was CDO_E_PATHTOOLONG
//
// MessageId: CDO_E_UNSAFE_OPERATION
//
// MessageText:
//
// The requested operation is not allowed in secure mode.
//
#define CDO_E_UNSAFE_OPERATION           0x8004021DL

//
// MessageId: CDO_E_PROP_NOT_FOUND
//
// MessageText:
//
// The requested property was not found.
//
#define CDO_E_PROP_NOT_FOUND             0x8004021EL

// 0x21f available, was CDO_E_UNSUPPORTED_PROTOCOL
//
// MessageId: CDO_E_INVALID_SEND_OPTION
//
// MessageText:
//
// The "SendUsing" configuration value is invalid.
//
#define CDO_E_INVALID_SEND_OPTION        0x80040220L

//
// MessageId: CDO_E_INVALID_POST_OPTION
//
// MessageText:
//
// The "PostUsing" configuration value is invalid.
//
#define CDO_E_INVALID_POST_OPTION        0x80040221L

//
// MessageId: CDO_E_NO_PICKUP_DIR
//
// MessageText:
//
// The pickup directory path is required and was not specified. 
//
#define CDO_E_NO_PICKUP_DIR              0x80040222L

//
// MessageId: CDO_E_NOT_ALL_DELETED
//
// MessageText:
//
// One or more messages could not be deleted.
//
#define CDO_E_NOT_ALL_DELETED            0x80040223L

//
// MessageId: CDO_E_NO_METHOD
//
// MessageText:
//
// The requested operation is not available on the underlying object.
//
#define CDO_E_NO_METHOD                  0x80040224L

//0x225 available, was CDO_E_BYTEARRAY_REQUIRED
// 0x226 available, was CDO_E_BSTR_REQUIRED
//
// MessageId: CDO_E_PROP_READONLY
//
// MessageText:
//
// The property is read-only.
//
#define CDO_E_PROP_READONLY              0x80040227L

//
// MessageId: CDO_E_PROP_CANNOT_DELETE
//
// MessageText:
//
// The property cannot be deleted.
//
#define CDO_E_PROP_CANNOT_DELETE         0x80040228L

//
// MessageId: CDO_E_BAD_DATA
//
// MessageText:
//
// Data written to the object are inconsistent or invalid. 
//
#define CDO_E_BAD_DATA                   0x80040229L

//
// MessageId: CDO_E_PROP_NONHEADER
//
// MessageText:
//
// The requested property is not in the mail header namespace.
//
#define CDO_E_PROP_NONHEADER             0x8004022AL

//
// MessageId: CDO_E_INVALID_CHARSET
//
// MessageText:
//
// The requested character set is not installed on the computer.
//
#define CDO_E_INVALID_CHARSET            0x8004022BL

//
// MessageId: CDO_E_ADOSTREAM_NOT_BOUND
//
// MessageText:
//
// The ADO stream has not been opened.
//
#define CDO_E_ADOSTREAM_NOT_BOUND        0x8004022CL

//
// MessageId: CDO_E_CONTENTPROPXML_NOT_FOUND
//
// MessageText:
//
// The content properties are missing.
//
#define CDO_E_CONTENTPROPXML_NOT_FOUND   0x8004022DL

//
// MessageId: CDO_E_CONTENTPROPXML_WRONG_CHARSET
//
// MessageText:
//
// Content properties XML must be encoded using UTF-8.
//
#define CDO_E_CONTENTPROPXML_WRONG_CHARSET 0x8004022EL

//
// MessageId: CDO_E_CONTENTPROPXML_PARSE_FAILED
//
// MessageText:
//
// Failed to parse content properties XML.
//
#define CDO_E_CONTENTPROPXML_PARSE_FAILED 0x8004022FL

//
// MessageId: CDO_E_CONTENTPROPXML_CONVERT_FAILED
//
// MessageText:
//
// Failed to convert a property from XML to a requested type.
//
#define CDO_E_CONTENTPROPXML_CONVERT_FAILED 0x80040230L

//
// MessageId: CDO_E_NO_DIRECTORIES_SPECIFIED
//
// MessageText:
//
// No directories were specified for resolution.
//
#define CDO_E_NO_DIRECTORIES_SPECIFIED   0x80040231L

//
// MessageId: CDO_E_DIRECTORIES_UNREACHABLE
//
// MessageText:
//
// Failed to resolve against one or more of the specified directories.
//
#define CDO_E_DIRECTORIES_UNREACHABLE    0x80040232L

//
// MessageId: CDO_E_BAD_SENDER
//
// MessageText:
//
// Could not find the Sender's mailbox.
//
#define CDO_E_BAD_SENDER                 0x80040233L

//
// MessageId: CDO_E_SELF_BINDING
//
// MessageText:
//
// Binding to self is not allowed.
//
#define CDO_E_SELF_BINDING               0x80040234L

//
// MessageId: CDO_E_BAD_ATTENDEE_DATA
//
// MessageText:
//
// Data of the Attendees in the object are inconsistent or invalid. 
//
#define CDO_E_BAD_ATTENDEE_DATA          0x80040235L

//
// MessageId: CDO_E_ROLE_NOMORE_AVAILABLE
//
// MessageText:
//
// No more roles of the desired type are available - maxed out.
//
#define CDO_E_ROLE_NOMORE_AVAILABLE      0x80040236L

#ifdef CDOTASKS
//
// MessageId: CDO_E_BAD_TASKTYPE_ONASSIGN
//
// MessageText:
//
// The task with its current task type does not permit a call on Assign. Please call CreateUnassignedCopy instead.
//
#define CDO_E_BAD_TASKTYPE_ONASSIGN      0x80040237L

//
// MessageId: CDO_E_NOT_ASSIGNEDTO_USER
//
// MessageText:
//
// The task is not assigned to the current user.
//
#define CDO_E_NOT_ASSIGNEDTO_USER        0x80040238L

#endif
//
// MessageId: CDO_E_OUTOFDATE
//
// MessageText:
//
// The item being accessed or manipulated is out of date.
//
#define CDO_E_OUTOFDATE                  0x80040239L


//////////////////////////////////////////////////////////////////////////////
// parameter validation error messages
//
// MessageId: CDO_E_ARGUMENT1
//
// MessageText:
//
// The first argument is invalid
//
#define CDO_E_ARGUMENT1                  0x80044000L

//
// MessageId: CDO_E_ARGUMENT2
//
// MessageText:
//
// The second argument is invalid
//
#define CDO_E_ARGUMENT2                  0x80044001L

//
// MessageId: CDO_E_ARGUMENT3
//
// MessageText:
//
// The third argument is invalid
//
#define CDO_E_ARGUMENT3                  0x80044002L

//
// MessageId: CDO_E_ARGUMENT4
//
// MessageText:
//
// The fourth argument is invalid
//
#define CDO_E_ARGUMENT4                  0x80044003L

//
// MessageId: CDO_E_ARGUMENT5
//
// MessageText:
//
// The fifth argument is invalid
//
#define CDO_E_ARGUMENT5                  0x80044004L


//////////////////////////////////////////////////////////////////////////////
// Errors returned by MimeOle
//
// These are defined here to provide extended error info text descriptions.
// CDO should never explicitly return any of these errors; they may be passed
// through from MimeOle
// I expect there are numerous places where these errors could still slip through:
// MIME_E_NOT_FOUND
//
// MessageId: CDO_E_NOT_FOUND
//
// MessageText:
//
// The requested body part was not found in this message.
//
#define CDO_E_NOT_FOUND                  0x800CCE05L

// MIME_E_INVALID_ENCODINGTYPE
// Returned when MimeOLE tries to BinHex encode.  Can also be returned if an invalid encoding
// is specified, but CDO should protect from these cases.
//
// Also CDO returns this error when a client sets an invalid encoding
//
// MessageId: CDO_E_INVALID_ENCODING_TYPE
//
// MessageText:
//
// The content encoding type is invalid.
//
#define CDO_E_INVALID_ENCODING_TYPE      0x800CCE1DL

///////////////////////////////////////
// Headers and folder names
//
// MessageId = 0x1000 through 0x1fff, localized in client languages.
///////////////////////////////////////
//
// MessageId: IDS_ORIGINAL_MESSAGE
//
// MessageText:
//
// -----Original Message-----%0
//
#define IDS_ORIGINAL_MESSAGE             0x00011000L

//
// MessageId: IDS_FROM
//
// MessageText:
//
// From:%0
//
#define IDS_FROM                         0x00011001L

//
// MessageId: IDS_SENT
//
// MessageText:
//
// Sent:%0
//
#define IDS_SENT                         0x00011002L

//
// MessageId: IDS_POSTED_AT
//
// MessageText:
//
// Posted At:%0
//
#define IDS_POSTED_AT                    0x00011003L

//
// MessageId: IDS_TO
//
// MessageText:
//
// To:%0
//
#define IDS_TO                           0x00011004L

//
// MessageId: IDS_CC
//
// MessageText:
//
// Cc:%0
//
#define IDS_CC                           0x00011005L

//
// MessageId: IDS_POSTED_TO
//
// MessageText:
//
// Posted To:%0
//
#define IDS_POSTED_TO                    0x00011006L

//
// MessageId: IDS_CONVERSATION
//
// MessageText:
//
// Conversation:%0
//
#define IDS_CONVERSATION                 0x00011007L

//
// MessageId: IDS_SUBJECT
//
// MessageText:
//
// Subject:%0
//
#define IDS_SUBJECT                      0x00011008L

//
// MessageId: IDS_IMPORTANCE
//
// MessageText:
//
// Importance:%0
//
#define IDS_IMPORTANCE                   0x00011009L

//
// MessageId: IDS_ON_BEHALF_OF
//
// MessageText:
//
// on behalf of%0
//
#define IDS_ON_BEHALF_OF                 0x0001100AL

//
// MessageId: IDS_FW
//
// MessageText:
//
// FW:%0
//
#define IDS_FW                           0x0001100BL

//
// MessageId: IDS_RE
//
// MessageText:
//
// RE:%0
//
#define IDS_RE                           0x0001100CL

//
// MessageId: IDS_CODEPAGE
//
// MessageText:
//
// 1252%0
//
#define IDS_CODEPAGE                     0x0001100DL

#ifdef CDOSVR
//
// MessageId: IDS_CalendarFolder
//
// MessageText:
//
// Calendar%0
//
#define IDS_CalendarFolder               0x0001100EL

//
// MessageId: IDS_ContactsFolder
//
// MessageText:
//
// Contacts%0
//
#define IDS_ContactsFolder               0x0001100FL

//
// MessageId: IDS_DraftsFolder
//
// MessageText:
//
// Drafts%0
//
#define IDS_DraftsFolder                 0x00011010L

//
// MessageId: IDS_JournalFolder
//
// MessageText:
//
// Journal%0
//
#define IDS_JournalFolder                0x00011011L

//
// MessageId: IDS_NotesFolder
//
// MessageText:
//
// Notes%0
//
#define IDS_NotesFolder                  0x00011012L

//
// MessageId: IDS_TasksFolder
//
// MessageText:
//
// Tasks%0
//
#define IDS_TasksFolder                  0x00011013L

#endif
//
// MessageId: IDS_NewFolder
//
// MessageText:
//
// New Folder%0
//
#define IDS_NewFolder                    0x00011014L

//
// MessageId: IDS_Location
//
// MessageText:
//
// Location:%0
//
#define IDS_Location                     0x00011015L

//
// MessageId: IDS_StartTime
//
// MessageText:
//
// Start Time:%0
//
#define IDS_StartTime                    0x00011016L

//
// MessageId: IDS_EndTime
//
// MessageText:
//
// End Time:%0
//
#define IDS_EndTime                      0x00011017L

//
// MessageId: IDS_TimeZone
//
// MessageText:
//
// Time Zone:%0
//
#define IDS_TimeZone                     0x00011018L

//
// MessageId: IDS_LocalTime
//
// MessageText:
//
// Local time%0
//
#define IDS_LocalTime                    0x00011019L

//
// MessageId: IDS_Organizer
//
// MessageText:
//
// Organizer:%0
//
#define IDS_Organizer                    0x0001101AL

//
// MessageId: IDS_ApptType
//
// MessageText:
//
// Type:%0
//
#define IDS_ApptType                     0x0001101BL

//
// MessageId: IDS_SingleAppt
//
// MessageText:
//
// Single Appointment%0
//
#define IDS_SingleAppt                   0x0001101CL

//
// MessageId: IDS_SingleMtg
//
// MessageText:
//
// Single Meeting%0
//
#define IDS_SingleMtg                    0x0001101DL

//
// MessageId: IDS_RecurAppt
//
// MessageText:
//
// Recurring Appointment%0
//
#define IDS_RecurAppt                    0x0001101EL

//
// MessageId: IDS_RecurMtg
//
// MessageText:
//
// Recurring Meeting%0
//
#define IDS_RecurMtg                     0x0001101FL

///////////////////////////////////////
// time zones
//
// MessageId = 0x1100 through 0x11ff
///////////////////////////////////////
//
// MessageId: IDS_Universal
//
// MessageText:
//
// Universal Coordinated Time%0
//
#define IDS_Universal                    0x00011100L

//
// MessageId: IDS_Greenwich
//
// MessageText:
//
// (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London%0
//
#define IDS_Greenwich                    0x00011101L

//
// MessageId: IDS_Sarajevo
//
// MessageText:
//
// (GMT+01:00) Sarajevo, Skopje, Sofija, Vilnius, Warsaw, Zagreb%0
//
#define IDS_Sarajevo                     0x00011102L

//
// MessageId: IDS_Paris
//
// MessageText:
//
// (GMT+01:00) Brussels, Copenhagen, Madrid, Paris%0
//
#define IDS_Paris                        0x00011103L

//
// MessageId: IDS_Berlin
//
// MessageText:
//
// (GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna%0
//
#define IDS_Berlin                       0x00011104L

//
// MessageId: IDS_EasternEurope
//
// MessageText:
//
// (GMT+02:00) Bucharest%0
//
#define IDS_EasternEurope                0x00011105L

//
// MessageId: IDS_Prague
//
// MessageText:
//
// (GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague%0
//
#define IDS_Prague                       0x00011106L

//
// MessageId: IDS_Athens
//
// MessageText:
//
// (GMT+02:00) Athens, Istanbul, Minsk%0
//
#define IDS_Athens                       0x00011107L

//
// MessageId: IDS_Brasilia
//
// MessageText:
//
// (GMT-03:00) Brasilia%0
//
#define IDS_Brasilia                     0x00011108L

//
// MessageId: IDS_Atlantic
//
// MessageText:
//
// (GMT-04:00) Atlantic Time (Canada)%0
//
#define IDS_Atlantic                     0x00011109L

//
// MessageId: IDS_Eastern
//
// MessageText:
//
// (GMT-05:00) Eastern Time (US & Canada)%0
//
#define IDS_Eastern                      0x0001110AL

//
// MessageId: IDS_Central
//
// MessageText:
//
// (GMT-06:00) Central Time (US & Canada)%0
//
#define IDS_Central                      0x0001110BL

//
// MessageId: IDS_Mountain
//
// MessageText:
//
// (GMT-07:00) Mountain Time (US & Canada)%0
//
#define IDS_Mountain                     0x0001110CL

//
// MessageId: IDS_Pacific
//
// MessageText:
//
// (GMT-08:00) Pacific Time (US & Canada)%0
//
#define IDS_Pacific                      0x0001110DL

//
// MessageId: IDS_Alaska
//
// MessageText:
//
// (GMT-09:00) Alaska%0
//
#define IDS_Alaska                       0x0001110EL

//
// MessageId: IDS_Hawaii
//
// MessageText:
//
// (GMT-10:00) Hawaii%0
//
#define IDS_Hawaii                       0x0001110FL

//
// MessageId: IDS_Midway
//
// MessageText:
//
// (GMT-11:00) Midway Island, Samoa%0
//
#define IDS_Midway                       0x00011110L

//
// MessageId: IDS_Wellington
//
// MessageText:
//
// (GMT+12:00) Auckland, Wellington%0
//
#define IDS_Wellington                   0x00011111L

//
// MessageId: IDS_Brisbane
//
// MessageText:
//
// (GMT+10:00) Brisbane%0
//
#define IDS_Brisbane                     0x00011112L

//
// MessageId: IDS_Adelaide
//
// MessageText:
//
// (GMT+09:30) Adelaide%0
//
#define IDS_Adelaide                     0x00011113L

//
// MessageId: IDS_Tokyo
//
// MessageText:
//
// (GMT+09:00) Osaka, Sapporo, Tokyo%0
//
#define IDS_Tokyo                        0x00011114L

//
// MessageId: IDS_Singapore
//
// MessageText:
//
// (GMT+08:00) Kuala Lumpur, Singapore%0
//
#define IDS_Singapore                    0x00011115L

//
// MessageId: IDS_Bangkok
//
// MessageText:
//
// (GMT+07:00) Bangkok, Hanoi, Jakarta%0
//
#define IDS_Bangkok                      0x00011116L

//
// MessageId: IDS_Bombay
//
// MessageText:
//
// (GMT+05:30) Kolkata, Chennai, Mumbai, New Delhi%0
//
#define IDS_Bombay                       0x00011117L

//
// MessageId: IDS_AbuDhabi
//
// MessageText:
//
// (GMT+04:00) Abu Dhabi, Muscat%0
//
#define IDS_AbuDhabi                     0x00011118L

//
// MessageId: IDS_Tehran
//
// MessageText:
//
// (GMT+03:30) Tehran%0
//
#define IDS_Tehran                       0x00011119L

//
// MessageId: IDS_Baghdad
//
// MessageText:
//
// (GMT+03:00) Baghdad%0
//
#define IDS_Baghdad                      0x0001111AL

//
// MessageId: IDS_Israel
//
// MessageText:
//
// (GMT+02:00) Jerusalem%0
//
#define IDS_Israel                       0x0001111BL

//
// MessageId: IDS_Newfoundland
//
// MessageText:
//
// (GMT-03:30) Newfoundland%0
//
#define IDS_Newfoundland                 0x0001111CL

//
// MessageId: IDS_Azores
//
// MessageText:
//
// (GMT-01:00) Azores%0
//
#define IDS_Azores                       0x0001111DL

//
// MessageId: IDS_MidAtlantic
//
// MessageText:
//
// (GMT-02:00) Mid-Atlantic%0
//
#define IDS_MidAtlantic                  0x0001111EL

//
// MessageId: IDS_Monrovia
//
// MessageText:
//
// (GMT) Casablanca, Monrovia%0
//
#define IDS_Monrovia                     0x0001111FL

//
// MessageId: IDS_BuenosAires
//
// MessageText:
//
// (GMT-03:00) Buenos Aires, Georgetown%0
//
#define IDS_BuenosAires                  0x00011120L

//
// MessageId: IDS_Caracas
//
// MessageText:
//
// (GMT-04:00) Caracas, La Paz%0
//
#define IDS_Caracas                      0x00011121L

//
// MessageId: IDS_Indiana
//
// MessageText:
//
// (GMT-05:00) Indiana (East)%0
//
#define IDS_Indiana                      0x00011122L

//
// MessageId: IDS_Bogota
//
// MessageText:
//
// (GMT-05:00) Bogota, Lima, Quito%0
//
#define IDS_Bogota                       0x00011123L

//
// MessageId: IDS_Saskatchewan
//
// MessageText:
//
// (GMT-06:00) Saskatchewan%0
//
#define IDS_Saskatchewan                 0x00011124L

//
// MessageId: IDS_Mexico
//
// MessageText:
//
// (GMT-06:00) Mexico City%0
//
#define IDS_Mexico                       0x00011125L

//
// MessageId: IDS_Arizona
//
// MessageText:
//
// (GMT-07:00) Arizona%0
//
#define IDS_Arizona                      0x00011126L

//
// MessageId: IDS_Eniwetok
//
// MessageText:
//
// (GMT-12:00) Eniwetok, Kwajalein%0
//
#define IDS_Eniwetok                     0x00011127L

//
// MessageId: IDS_Fiji
//
// MessageText:
//
// (GMT+12:00) Fiji Is., Kamchatka, Marshall Is.%0
//
#define IDS_Fiji                         0x00011128L

//
// MessageId: IDS_Magadan
//
// MessageText:
//
// (GMT+11:00) Magadan, Solomon Is., New Caledonia%0
//
#define IDS_Magadan                      0x00011129L

//
// MessageId: IDS_Hobart
//
// MessageText:
//
// (GMT+10:00) Hobart%0
//
#define IDS_Hobart                       0x0001112AL

//
// MessageId: IDS_Guam
//
// MessageText:
//
// (GMT+10:00) Guam, Port Moresby%0
//
#define IDS_Guam                         0x0001112BL

//
// MessageId: IDS_Darwin
//
// MessageText:
//
// (GMT+09:30) Darwin%0
//
#define IDS_Darwin                       0x0001112CL

//
// MessageId: IDS_Beijing
//
// MessageText:
//
// (GMT+08:00) Beijing, Chongqing, Hong Kong SAR, Urumqi%0
//
#define IDS_Beijing                      0x0001112DL

//
// MessageId: IDS_Almaty
//
// MessageText:
//
// (GMT+06:00) Almaty, Novosibirsk%0
//
#define IDS_Almaty                       0x0001112EL

//
// MessageId: IDS_Islamabad
//
// MessageText:
//
// (GMT+05:00) Islamabad, Karachi, Tashkent%0
//
#define IDS_Islamabad                    0x0001112FL

//
// MessageId: IDS_Kabul
//
// MessageText:
//
// (GMT+04:30) Kabul%0
//
#define IDS_Kabul                        0x00011130L

//
// MessageId: IDS_Cairo
//
// MessageText:
//
// (GMT+02:00) Cairo%0
//
#define IDS_Cairo                        0x00011131L

//
// MessageId: IDS_Harare
//
// MessageText:
//
// (GMT+02:00) Harare, Pretoria%0
//
#define IDS_Harare                       0x00011132L

//
// MessageId: IDS_Moscow
//
// MessageText:
//
// (GMT+03:00) Moscow, St. Petersburg, Volgograd%0
//
#define IDS_Moscow                       0x00011133L

//
// MessageId: IDS_CapeVerde
//
// MessageText:
//
// (GMT-01:00) Cape Verde Is.%0
//
#define IDS_CapeVerde                    0x00011134L

//
// MessageId: IDS_Caucasus
//
// MessageText:
//
// (GMT+04:00) Baku, Tbilisi, Yerevan%0
//
#define IDS_Caucasus                     0x00011135L

//
// MessageId: IDS_CentralAmerica
//
// MessageText:
//
// (GMT-06:00) Central America%0
//
#define IDS_CentralAmerica               0x00011136L

//
// MessageId: IDS_EastAfrica
//
// MessageText:
//
// (GMT+03:00) Nairobi%0
//
#define IDS_EastAfrica                   0x00011137L

//
// MessageId: IDS_Melbourne
//
// MessageText:
//
// (GMT+10:00) Canberra, Melbourne, Sydney%0
//
#define IDS_Melbourne                    0x00011138L

//
// MessageId: IDS_Ekaterinburg
//
// MessageText:
//
// (GMT+05:00) Ekaterinburg%0
//
#define IDS_Ekaterinburg                 0x00011139L

//
// MessageId: IDS_Helsinki
//
// MessageText:
//
// (GMT+02:00) Helsinki, Riga, Tallinn%0
//
#define IDS_Helsinki                     0x0001113AL

//
// MessageId: IDS_Greenland
//
// MessageText:
//
// (GMT-03:00) Greenland%0
//
#define IDS_Greenland                    0x0001113BL

//
// MessageId: IDS_Rangoon
//
// MessageText:
//
// (GMT+06:30) Yangon (Rangun)%0
//
#define IDS_Rangoon                      0x0001113CL

//
// MessageId: IDS_Nepal
//
// MessageText:
//
// (GMT+05:45) Kathmandu%0
//
#define IDS_Nepal                        0x0001113DL

//
// MessageId: IDS_Irkutsk
//
// MessageText:
//
// (GMT+08:00) Irkutsk, Ulaan Bataar%0
//
#define IDS_Irkutsk                      0x0001113EL

//
// MessageId: IDS_Krasnoyarsk
//
// MessageText:
//
// (GMT+07:00) Krasnoyarsk%0
//
#define IDS_Krasnoyarsk                  0x0001113FL

//
// MessageId: IDS_Santiago
//
// MessageText:
//
// (GMT-04:00) Santiago%0
//
#define IDS_Santiago                     0x00011140L

//
// MessageId: IDS_SriLanka
//
// MessageText:
//
// (GMT+06:00) Sri Jayawardenepura%0
//
#define IDS_SriLanka                     0x00011141L

//
// MessageId: IDS_Tonga
//
// MessageText:
//
// (GMT+13:00) Nuku'alofa%0
//
#define IDS_Tonga                        0x00011142L

//
// MessageId: IDS_Vladivostok
//
// MessageText:
//
// (GMT+10:00) Vladivostok%0
//
#define IDS_Vladivostok                  0x00011143L

//
// MessageId: IDS_WestCentralAfrica
//
// MessageText:
//
// (GMT+01:00) West Central Africa%0
//
#define IDS_WestCentralAfrica            0x00011144L

//
// MessageId: IDS_Yakutsk
//
// MessageText:
//
// (GMT+09:00) Yakutsk%0
//
#define IDS_Yakutsk                      0x00011145L

//
// MessageId: IDS_Dhaka
//
// MessageText:
//
// (GMT+06:00) Astana, Dhaka%0
//
#define IDS_Dhaka                        0x00011146L

//
// MessageId: IDS_Seoul
//
// MessageText:
//
// (GMT+09:00) Seoul%0
//
#define IDS_Seoul                        0x00011147L

//
// MessageId: IDS_Perth
//
// MessageText:
//
// (GMT+08:00) Perth%0
//
#define IDS_Perth                        0x00011148L

//
// MessageId: IDS_Arab
//
// MessageText:
//
// (GMT+03:00) Kuwait, Riyadh%0
//
#define IDS_Arab                         0x00011149L

//
// MessageId: IDS_Taipei
//
// MessageText:
//
// (GMT+08:00) Taipei%0
//
#define IDS_Taipei                       0x0001114AL

//
// MessageId: IDS_Sydney2000
//
// MessageText:
//
// (GMT+10:00) Canberra, Melbourne, Sydney (Year 2000 only)%0
//
#define IDS_Sydney2000                   0x0001114BL

//
// MessageId: IDS_Chihuahua
//
// MessageText:
//
// (GMT-07:00) Chihuahua, La Paz, Mazatlan%0
//
#define IDS_Chihuahua                    0x0001114CL

//
// MessageId: IDS_CanberraCommonwealthGames2006
//
// MessageText:
//
// (GMT+10:00) Canberra, Melbourne, Sydney (Commonwealth Games)%0
//
#define IDS_CanberraCommonwealthGames2006 0x0001114DL

//
// MessageId: IDS_AdelaideCommonwealthGames2006
//
// MessageText:
//
// (GMT+09:30) Adelaide (Commonwealth Games)%0
//
#define IDS_AdelaideCommonwealthGames2006 0x0001114EL

//
// MessageId: IDS_HobartCommonwealthGames2006
//
// MessageText:
//
// (GMT+10:00) Hobart (Commonwealth Games)%0
//
#define IDS_HobartCommonwealthGames2006  0x0001114FL

//
// MessageId: IDS_Tijuana
//
// MessageText:
//
// (GMT-08:00) Tijuana, Baja California%0
//
#define IDS_Tijuana                      0x00011150L

///////////////////////////////////////
// EXCDO messages
//
// MessageId = 0x2000 through 0x2fff, localized in server languages.
///////////////////////////////////////
#ifdef CDOSVR
//
// MessageId: evtMethodCalled
//
// MessageText:
//
// %1 Event on %2 called with Flags %3
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtMethodCalled                  0x00032000L

//
// MessageId: evtMethodReturning
//
// MessageText:
//
// %1 Event Method is returning with HRESULT %2
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtMethodReturning               0x00032001L

//
// MessageId: evtIsAborting
//
// MessageText:
//
// %1 Event Method is halting, HRESULT %2
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtIsAborting                    0xC0032002L

//
// MessageId: evtExpansionInitialized
//
// MessageText:
//
// Calendaring agent is initialized successfully.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpansionInitialized          0x00032003L

//
// MessageId: evtExpansionUnInitialized
//
// MessageText:
//
// Calendaring agent is stopping successfully.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpansionUnInitialized        0x00032004L

//
// MessageId: evtExpansionInitializeFailed
//
// MessageText:
//
// Calendaring agent failed to initialize with error %1.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpansionInitializeFailed     0xC0032005L

//
// MessageId: evtExpansionRegisterFailed
//
// MessageText:
//
// Calendaring recurring item expansion failed to register for notifications for MDB %1.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpansionRegisterFailed       0xC0032006L

//
// MessageId: evtExpansionMessageSaveChangesFailed
//
// MessageText:
//
// Calendaring agent failed in message save notification with error %1 on %2: %3.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpansionMessageSaveChangesFailed 0xC0032007L

//
// MessageId: evtExpansionMessageDeleteFailed
//
// MessageText:
//
// Calendaring agent failed in message delete notification with error %1 on %2: %3.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpansionMessageDeleteFailed  0xC0032008L

//
// MessageId: evtExpansionFolderSaveChangesFailed
//
// MessageText:
//
// Calendaring agent failed in folder save notification with error %1 on %2: %3.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpansionFolderSaveChangesFailed 0xC0032009L

//
// MessageId: evtExpansionTooManyInstancesPerDay
//
// MessageText:
//
// Calendaring agent truncated expansion after %1 instances per day.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpansionTooManyInstancesPerDay 0x8003200AL

//
// MessageId: evtMailboxCreateTotalFailure
//
// MessageText:
//
// The mailbox creation callback failed to create any folders in mailbox %1.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtMailboxCreateTotalFailure     0xC003200BL

//
// MessageId: evtMailboxCreatePartialFailure
//
// MessageText:
//
// The mailbox creation callback failed to create one or more folders in mailbox %1.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtMailboxCreatePartialFailure   0xC003200CL

//
// MessageId: evtUninitImplRestFailed
//
// MessageText:
//
// Calendaring agent failed to uninitialize implied restriction with error %1 on %2: %3.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtUninitImplRestFailed          0xC003200DL

//
// MessageId: evtExpandSavingAppt
//
// MessageText:
//
// Calendaring agent failed with error code %1 while saving appointment.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpandSavingAppt              0xC003200EL

//
// MessageId: evtExpandDeletingAppt
//
// MessageText:
//
// Calendaring agent failed with error code %1 while deleting appointment.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpandDeletingAppt            0xC003200FL

//
// MessageId: evtExpandQuery
//
// MessageText:
//
// Calendaring agent failed with error code %1 while expanding recurring appointments.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpandQuery                   0xC0032010L

//
// MessageId: evtExpandFolderSetProps
//
// MessageText:
//
// Calendaring agent failed with error code %1 while cleaning up the calendar.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpandFolderSetProps          0xC0032011L

//
// MessageId: evtRegistryFailure
//
// MessageText:
//
// Calendaring agent failed to open registry with error code %1.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtRegistryFailure               0xC0032012L

//
// MessageId: evtExpStat
//
// MessageText:
//
// Calendaring agent failed in the following function with error code: %1.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpStat                       0xC0032013L

//
// MessageId: evtDumpFcn
//
// MessageText:
//
// Calendaring agent failed in the following function with error code %1.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtDumpFcn                       0xC0032014L

//
// MessageId: evtSaveDeleteFailFBUpdate
//
// MessageText:
//
// Calendaring agent failed to update the free/busy cache during an appointment save or delete operation.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtSaveDeleteFailFBUpdate        0xC0032015L

//
// MessageId: evtProcessingQueryCallback
//
// MessageText:
//
// Calendaring agent failed to update the free/busy cache and internal data while processing a query.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtProcessingQueryCallback       0xC0032016L

//
// MessageId: evtMailboxLocalizeTotalFailure
//
// MessageText:
//
// The mailbox creation callback failed to rename any folders in mailbox %1.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtMailboxLocalizeTotalFailure   0xC0032017L

//
// MessageId: evtMailboxLocalizePartialFailure
//
// MessageText:
//
// The mailbox creation callback failed to rename one or more folders in mailbox %1.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtMailboxLocalizePartialFailure 0xC0032018L

//
// MessageId: evtExpandMaster
//
// MessageText:
//
// The processing of the recurring appointment with the subject "%1" in mailbox: %2 failed with error code %3.  This appointment will not be visible in the web client or other non-MAPI client.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpandMaster                  0xC0032019L

//
// MessageId: evtExpansionInit
//
// MessageText:
//
// A transaction failed during initialization.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpansionInit                 0xC003201AL

//
// MessageId: evtFBGenerateMsg
//
// MessageText:
//
// The calendaring agent could not publish the free/busy information for "%1" because it failed reading the registry with error: %2.  
// The save/delete calendar operation for "%3" will not be completed.
// Please ensure that MSExchangeFBPublish agent is started.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtFBGenerateMsg                 0xC003201BL

//
// MessageId: evtExpansionInstExpiryInPublicMDB
//
// MessageText:
//
// Expiry of an instance for the recurring appointment with the subject "%1" in the folder "%2" was detected.  The master for that should be expired before this instance.  
// This instance will no longer appear in the web clients until the master is updated manually or through replication.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpansionInstExpiryInPublicMDB 0x8003201CL

//
// MessageId: evtUnhandledExceptionInitialization
//
// MessageText:
//
// Unhandled exception %1 caught during initialization of server agents.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtUnhandledExceptionInitialization 0xC003201DL

//
// MessageId: evtUnhandledExceptionShutdown
//
// MessageText:
//
// Unhandled exception %1 caught trying to stop server agents.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtUnhandledExceptionShutdown    0xC003201EL

//
// MessageId: evtUnhandledExceptionInitializationMDB
//
// MessageText:
//
// Unhandled exception %1 caught during initialization of server agents while an MDB is mounted.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtUnhandledExceptionInitializationMDB 0xC003201FL

//
// MessageId: evtUnhandledExceptionShutdownMDB
//
// MessageText:
//
// Unhandled exception %1 caught trying to stop server agents while an MDB is unmounted.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtUnhandledExceptionShutdownMDB 0xC0032020L

//
// MessageId: evtUnhandledExceptionMsgSaveChanges
//
// MessageText:
//
// Unhandled exception %1 caught during message save changes notification.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtUnhandledExceptionMsgSaveChanges 0xC0032021L

//
// MessageId: evtUnhandledExceptionDelete
//
// MessageText:
//
// Unhandled exception %1 caught during deletion notification.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtUnhandledExceptionDelete      0xC0032022L

//
// MessageId: evtUnhandledExceptionQuery
//
// MessageText:
//
// Unhandled exception %1 caught during query processing.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtUnhandledExceptionQuery       0xC0032023L

//
// MessageId: evtUnhandledExceptionFolderSaveChanges
//
// MessageText:
//
// Unhandled exception %1 caught during folder save changes notification.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtUnhandledExceptionFolderSaveChanges 0xC0032024L

//
// MessageId: evtCorruptedCalendar
//
// MessageText:
//
// The calendar for the mailbox %1 is corrupted.  This calendar needs to be recreated.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtCorruptedCalendar             0xC0032025L

//
// MessageId: evtRebuildCalendar
//
// MessageText:
//
// An inconsistency was detected in %2: %3.  The calendar is being repaired.  If other errors occur with this calendar, please view the calendar using Microsoft Outlook Web Access.  If a problem persists, please recreate the calendar or the containing mailbox.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtRebuildCalendar               0x80032026L

//
// MessageId: evtCheckPrimaryCalendar
//
// MessageText:
//
// Calendar agent failed to determine the primary calendar for mailbox: %1.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtCheckPrimaryCalendar          0x80032027L

//
// MessageId: evtExpandMasterPF
//
// MessageText:
//
// The processing of the recurring appointment with the subject "%1" in public folder: %2 failed with error code %3.  This appointment will not be visible in the web client or other non-MAPI client.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtExpandMasterPF                0xC0032028L

//
// MessageId: evtCorruptedPFCalendar
//
// MessageText:
//
// The public folder %1 is corrupted.  This calendar needs to be recreated.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtCorruptedPFCalendar           0xC0032029L

//
// MessageId: evtRebuildPFCalendar
//
// MessageText:
//
// An inconsistency was detected in %1.  The calendar is being repaired.  If other errors occur with this calendar, please view the calendar using Microsoft Outlook Web Access.  If a problem persists, please recreate the public folder calendar.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtRebuildPFCalendar             0x8003202AL

//
// MessageId: evtMovingMailboxCallbackFailed
//
// MessageText:
//
// Clearing the calendar instances before a move failed for mailbox %1 with error %2.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtMovingMailboxCallbackFailed   0x8003202BL

//
// MessageId: evtGetMsgClassFromMaster
//
// MessageText:
//
// Calendaring agent failed with error %1 while attempting to retrieve the message class for a recurring appointment.  The message class for the instance
// when viewed with the Web Client will not be the same as the one in the series if it is not IPM.Appointment.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtGetMsgClassFromMaster         0x8003202CL

//
// MessageId: evtOpenURL
//
// MessageText:
//
// Calendaring agent failed with error %1 while attempting to open the status message. If the user is a delegate, the access rights to the mailbox might
// not be set up correctly.  Otherwise, the calendar for this mailbox could be corrupted. This could be fixed
// by moving the mailbox to another Exchange server, or exporting the calendar to a Personal Folder File (.PST), and re-importing this into a new calendar.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtOpenURL                       0x8003202DL

//
// MessageId: evtStatusMsgSent
//
// MessageText:
//
// The calendaring data message for %1: %2 has been sent to %3.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtStatusMsgSent                 0x4003202EL

//
// MessageId: evtSaveInvalidStartAppt
//
// MessageText:
//
// An appointment with the subject "%1" was saved to mailbox %2. The start time is missing, so the calendaring agent cannot publish the free/busy information for this appointment. To correct this, please delete the appointment and recreate it.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtSaveInvalidStartAppt          0xC003202FL

//
// MessageId: evtSaveInvalidEndAppt
//
// MessageText:
//
// An appointment with the subject "%1" was saved to mailbox %2. The end time and duration are missing. For the purposes of publishing free/busy information, this appointment has a duration of zero minutes. To correct this, please delete the appointment and recreate it.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtSaveInvalidEndAppt            0x80032030L

//
// MessageId: evtModifyInvalidAppt
//
// MessageText:
//
// An existing appointment with the subject "%1" in mailbox %2 was modified. The start time, or both the duration and end time of the existing appointment were missing.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtModifyInvalidAppt             0x80032031L

//
// MessageId: evtDeleteInvalidAppt
//
// MessageText:
//
// The existing appointment with the subject "%1" in mailbox %2 was deleted. The start time, or both the duration and end time were missing.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtDeleteInvalidAppt             0x80032032L

//
// MessageId: evtBindToInvalidStartAppt
//
// MessageText:
//
// The calendaring agent cannot bind to the appointment with the subject "%1" in mailbox %2 because the appointment is missing a start time. The calendaring agent will not publish free/busy information for this appointment. To correct this, please delete the appointment and recreate it.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBindToInvalidStartAppt        0xC0032033L

//
// MessageId: evtBindToInvalidEndAppt
//
// MessageText:
//
// The calendaring agent did bind to the appointment with the subject "%1" in mailbox %2, but the appointment is missing an end time and duration. For the purposes of publishing free/busy information, this appointment has a duration of zero minutes. To correct this, please delete the appointment and recreate it.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBindToInvalidEndAppt          0x80032034L

//
// MessageId: evtReloadLogType
//
// MessageText:
//
// The EXCDO logging level has been reloaded from the registry and is now set to 0x%1.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtReloadLogType                 0x40032035L

//
// MessageId: evtBackgroundStarted
//
// MessageText:
//
// Calendaring agent has successfully started the background thread.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBackgroundStarted             0x40032036L

//
// MessageId: evtBackgroundStartFailed
//
// MessageText:
//
// Calendaring agent has failed to start the background thread due to %1.  
// Rendering of large calendars with the Web client will be slower.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBackgroundStartFailed         0x80032037L

//
// MessageId: evtBackgroundProcessing
//
// MessageText:
//
// Background calendaring agent is processing the calendar (%1) in the mailbox (%2) in the MDB (%3).
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBackgroundProcessing          0x40032038L

//
// MessageId: evtBackgroundProcessingNoCals
//
// MessageText:
//
// Background calendaring agent did not find any more calendars to process.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBackgroundProcessingNoCals    0x40032039L

//
// MessageId: evtBackgroundProcessingFinished
//
// MessageText:
//
// Background calendaring agent has finished processing the calendar (%1) in the mailbox (%2) in the MDB (%3).  The return code is %4.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBackgroundProcessingFinished  0x4003203AL

//
// MessageId: evtBackgroundAwakeDueToShutdown
//
// MessageText:
//
// Background calendaring agent is awakened due to shutdown.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBackgroundAwakeDueToShutdown  0x4003203BL

//
// MessageId: evtBackgroundAwake
//
// MessageText:
//
// Background calendaring agent is awakened due to calendars needing expansion.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBackgroundAwake               0x4003203CL

//
// MessageId: evtBackgroundTerminating
//
// MessageText:
//
// Background calendaring agent is terminating with return code %1.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBackgroundTerminating         0x4003203DL

//
// MessageId: evtBackgroundRegisterTaskFailed
//
// MessageText:
//
// The background calendaring agent failed with error code %1 while registering task.  
// The rendering of large calendars with the web client or Microsoft Internet Explorer will be slower.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBackgroundRegisterTaskFailed  0xC003203EL

//
// MessageId: evtBackgroundLogonFailed
//
// MessageText:
//
// The background calendaring agent failed to logon to the MDB, or create a session object on the MDB:%1.  
// The error code is %2.
// The rendering of large calendars with the web client or Microsoft Internet Explorer for the mailbox %3 with GUID:%4 will be slower.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBackgroundLogonFailed         0xC003203FL

//
// MessageId: evtBackgroundGetMachineToken
//
// MessageText:
//
// The background calendaring agent failed to retrieve the token required for logon on the MDB:%1.  
// The error code is %2.
// The rendering of large calendars with the web client or Microsoft Internet Explorer on this MDB will be slower.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBackgroundGetMachineToken     0xC0032040L

//
// MessageId: evtBackgroundSleepUntilNewCal
//
// MessageText:
//
// Background calendaring agent is sleeping until shutdown or a calendar is queued.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBackgroundSleepUntilNewCal    0x40032041L

//
// MessageId: evtBackgroundQueued
//
// MessageText:
//
// The calendar (%1) in mailbox (%2) in the MDB (%3) has been queued for background expansion.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBackgroundQueued              0x40032042L

//
// MessageId: evtBkExpDumpFcn
//
// MessageText:
//
// The background calendaring agent failed in the following function with error code %1.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtBkExpDumpFcn                  0xC0032043L

//
// MessageId: evtSaveDurationTooLong
//
// MessageText:
//
// An attempt was made to save an appointment with the subject "%1" to mailbox %2. The duration of the appointment was too large, so it was not saved.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtSaveDurationTooLong           0x80032044L

//
// MessageId: evtModifyDurationTooLong
//
// MessageText:
//
// An existing appointment with the subject "%1" in mailbox %2 was modified. The duration of the existing appointment was too large. Free/busy publishing may not be accurate.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtModifyDurationTooLong         0x80032045L

//
// MessageId: evtDeleteDurationTooLong
//
// MessageText:
//
// The existing appointment with the subject "%1" in mailbox %2 was deleted. The duration of the existing appointment was too large. Free/busy publishing may not be accurate.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtDeleteDurationTooLong         0x80032046L

//
// MessageId: evtTooManyIterationsForQuery
//
// MessageText:
//
// The recurring appointment expansion in mailbox %1 has taken too long. Some recurring appointment instances may not be visible at this time. To ensure that the calendar view is correct, please refresh the calendar view in Microsoft Outlook Web Access.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtTooManyIterationsForQuery     0x80032047L

//
// MessageId: evtTooManyIterationsForFreebusy
//
// MessageText:
//
// The recurring appointment expansion in mailbox %1 has taken too long. The free/busy information for this calendar may be inaccurate. This may be the result of many very old recurring appointments. To correct this, please remove them or change their start date to a more recent date.
// %n%nFor more information, click http://www.microsoft.com/contentredirect.asp.
//
#define evtTooManyIterationsForFreebusy  0x80032048L

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\CertAdm.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for certadm.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __certadm_h__
#define __certadm_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __ICertAdmin_FWD_DEFINED__
#define __ICertAdmin_FWD_DEFINED__
typedef interface ICertAdmin ICertAdmin;
#endif 	/* __ICertAdmin_FWD_DEFINED__ */


#ifndef __ICertAdmin2_FWD_DEFINED__
#define __ICertAdmin2_FWD_DEFINED__
typedef interface ICertAdmin2 ICertAdmin2;
#endif 	/* __ICertAdmin2_FWD_DEFINED__ */


#ifndef __IOCSPProperty_FWD_DEFINED__
#define __IOCSPProperty_FWD_DEFINED__
typedef interface IOCSPProperty IOCSPProperty;
#endif 	/* __IOCSPProperty_FWD_DEFINED__ */


#ifndef __IOCSPPropertyCollection_FWD_DEFINED__
#define __IOCSPPropertyCollection_FWD_DEFINED__
typedef interface IOCSPPropertyCollection IOCSPPropertyCollection;
#endif 	/* __IOCSPPropertyCollection_FWD_DEFINED__ */


#ifndef __IOCSPCAConfiguration_FWD_DEFINED__
#define __IOCSPCAConfiguration_FWD_DEFINED__
typedef interface IOCSPCAConfiguration IOCSPCAConfiguration;
#endif 	/* __IOCSPCAConfiguration_FWD_DEFINED__ */


#ifndef __IOCSPCAConfigurationCollection_FWD_DEFINED__
#define __IOCSPCAConfigurationCollection_FWD_DEFINED__
typedef interface IOCSPCAConfigurationCollection IOCSPCAConfigurationCollection;
#endif 	/* __IOCSPCAConfigurationCollection_FWD_DEFINED__ */


#ifndef __IOCSPAdmin_FWD_DEFINED__
#define __IOCSPAdmin_FWD_DEFINED__
typedef interface IOCSPAdmin IOCSPAdmin;
#endif 	/* __IOCSPAdmin_FWD_DEFINED__ */


#ifndef __CCertAdmin_FWD_DEFINED__
#define __CCertAdmin_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertAdmin CCertAdmin;
#else
typedef struct CCertAdmin CCertAdmin;
#endif /* __cplusplus */

#endif 	/* __CCertAdmin_FWD_DEFINED__ */


#ifndef __CCertView_FWD_DEFINED__
#define __CCertView_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertView CCertView;
#else
typedef struct CCertView CCertView;
#endif /* __cplusplus */

#endif 	/* __CCertView_FWD_DEFINED__ */


#ifndef __OCSPPropertyCollection_FWD_DEFINED__
#define __OCSPPropertyCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class OCSPPropertyCollection OCSPPropertyCollection;
#else
typedef struct OCSPPropertyCollection OCSPPropertyCollection;
#endif /* __cplusplus */

#endif 	/* __OCSPPropertyCollection_FWD_DEFINED__ */


#ifndef __OCSPAdmin_FWD_DEFINED__
#define __OCSPAdmin_FWD_DEFINED__

#ifdef __cplusplus
typedef class OCSPAdmin OCSPAdmin;
#else
typedef struct OCSPAdmin OCSPAdmin;
#endif /* __cplusplus */

#endif 	/* __OCSPAdmin_FWD_DEFINED__ */


/* header files for imported files */
#include "wtypes.h"
#include "certview.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_certadm_0000_0000 */
/* [local] */ 

#define	CA_DISP_INCOMPLETE	( 0 )

#define	CA_DISP_ERROR	( 0x1 )

#define	CA_DISP_REVOKED	( 0x2 )

#define	CA_DISP_VALID	( 0x3 )

#define	CA_DISP_INVALID	( 0x4 )

#define	CA_DISP_UNDER_SUBMISSION	( 0x5 )

#define	KRA_DISP_EXPIRED	( 0 )

#define	KRA_DISP_NOTFOUND	( 0x1 )

#define	KRA_DISP_REVOKED	( 0x2 )

#define	KRA_DISP_VALID	( 0x3 )

#define	KRA_DISP_INVALID	( 0x4 )

#define	KRA_DISP_UNTRUSTED	( 0x5 )

#define	KRA_DISP_NOTLOADED	( 0x6 )

#define	CA_ACCESS_ADMIN	( 0x1 )

#define	CA_ACCESS_OFFICER	( 0x2 )

#define	CA_ACCESS_AUDITOR	( 0x4 )

#define	CA_ACCESS_OPERATOR	( 0x8 )

#define	CA_ACCESS_MASKROLES	( 0xff )

#define	CA_ACCESS_READ	( 0x100 )

#define	CA_ACCESS_ENROLL	( 0x200 )



extern RPC_IF_HANDLE __MIDL_itf_certadm_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_certadm_0000_0000_v0_0_s_ifspec;

#ifndef __ICertAdmin_INTERFACE_DEFINED__
#define __ICertAdmin_INTERFACE_DEFINED__

/* interface ICertAdmin */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertAdmin;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("34df6950-7fb6-11d0-8817-00a0c903b83c")
    ICertAdmin : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE IsValidCertificate( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ __RPC__in const BSTR strSerialNumber,
            /* [retval][out] */ __RPC__out LONG *pDisposition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRevocationReason( 
            /* [retval][out] */ __RPC__out LONG *pReason) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RevokeCertificate( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ __RPC__in const BSTR strSerialNumber,
            /* [in] */ LONG Reason,
            /* [in] */ DATE Date) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetRequestAttributes( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strAttributes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCertificateExtension( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strExtensionName,
            /* [in] */ LONG Type,
            /* [in] */ LONG Flags,
            /* [in] */ __RPC__in const VARIANT *pvarValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DenyRequest( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResubmitRequest( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [retval][out] */ __RPC__out LONG *pDisposition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PublishCRL( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ DATE Date) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCRL( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrCRL) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ImportCertificate( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ __RPC__in const BSTR strCertificate,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__out LONG *pRequestId) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertAdminVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertAdmin * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertAdmin * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertAdmin * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertAdmin * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertAdmin * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertAdmin * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertAdmin * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *IsValidCertificate )( 
            __RPC__in ICertAdmin * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ __RPC__in const BSTR strSerialNumber,
            /* [retval][out] */ __RPC__out LONG *pDisposition);
        
        HRESULT ( STDMETHODCALLTYPE *GetRevocationReason )( 
            __RPC__in ICertAdmin * This,
            /* [retval][out] */ __RPC__out LONG *pReason);
        
        HRESULT ( STDMETHODCALLTYPE *RevokeCertificate )( 
            __RPC__in ICertAdmin * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ __RPC__in const BSTR strSerialNumber,
            /* [in] */ LONG Reason,
            /* [in] */ DATE Date);
        
        HRESULT ( STDMETHODCALLTYPE *SetRequestAttributes )( 
            __RPC__in ICertAdmin * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strAttributes);
        
        HRESULT ( STDMETHODCALLTYPE *SetCertificateExtension )( 
            __RPC__in ICertAdmin * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strExtensionName,
            /* [in] */ LONG Type,
            /* [in] */ LONG Flags,
            /* [in] */ __RPC__in const VARIANT *pvarValue);
        
        HRESULT ( STDMETHODCALLTYPE *DenyRequest )( 
            __RPC__in ICertAdmin * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId);
        
        HRESULT ( STDMETHODCALLTYPE *ResubmitRequest )( 
            __RPC__in ICertAdmin * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [retval][out] */ __RPC__out LONG *pDisposition);
        
        HRESULT ( STDMETHODCALLTYPE *PublishCRL )( 
            __RPC__in ICertAdmin * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ DATE Date);
        
        HRESULT ( STDMETHODCALLTYPE *GetCRL )( 
            __RPC__in ICertAdmin * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrCRL);
        
        HRESULT ( STDMETHODCALLTYPE *ImportCertificate )( 
            __RPC__in ICertAdmin * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ __RPC__in const BSTR strCertificate,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__out LONG *pRequestId);
        
        END_INTERFACE
    } ICertAdminVtbl;

    interface ICertAdmin
    {
        CONST_VTBL struct ICertAdminVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertAdmin_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertAdmin_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertAdmin_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertAdmin_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertAdmin_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertAdmin_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertAdmin_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertAdmin_IsValidCertificate(This,strConfig,strSerialNumber,pDisposition)	\
    ( (This)->lpVtbl -> IsValidCertificate(This,strConfig,strSerialNumber,pDisposition) ) 

#define ICertAdmin_GetRevocationReason(This,pReason)	\
    ( (This)->lpVtbl -> GetRevocationReason(This,pReason) ) 

#define ICertAdmin_RevokeCertificate(This,strConfig,strSerialNumber,Reason,Date)	\
    ( (This)->lpVtbl -> RevokeCertificate(This,strConfig,strSerialNumber,Reason,Date) ) 

#define ICertAdmin_SetRequestAttributes(This,strConfig,RequestId,strAttributes)	\
    ( (This)->lpVtbl -> SetRequestAttributes(This,strConfig,RequestId,strAttributes) ) 

#define ICertAdmin_SetCertificateExtension(This,strConfig,RequestId,strExtensionName,Type,Flags,pvarValue)	\
    ( (This)->lpVtbl -> SetCertificateExtension(This,strConfig,RequestId,strExtensionName,Type,Flags,pvarValue) ) 

#define ICertAdmin_DenyRequest(This,strConfig,RequestId)	\
    ( (This)->lpVtbl -> DenyRequest(This,strConfig,RequestId) ) 

#define ICertAdmin_ResubmitRequest(This,strConfig,RequestId,pDisposition)	\
    ( (This)->lpVtbl -> ResubmitRequest(This,strConfig,RequestId,pDisposition) ) 

#define ICertAdmin_PublishCRL(This,strConfig,Date)	\
    ( (This)->lpVtbl -> PublishCRL(This,strConfig,Date) ) 

#define ICertAdmin_GetCRL(This,strConfig,Flags,pstrCRL)	\
    ( (This)->lpVtbl -> GetCRL(This,strConfig,Flags,pstrCRL) ) 

#define ICertAdmin_ImportCertificate(This,strConfig,strCertificate,Flags,pRequestId)	\
    ( (This)->lpVtbl -> ImportCertificate(This,strConfig,strCertificate,Flags,pRequestId) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertAdmin_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_certadm_0000_0001 */
/* [local] */ 

#define	CA_CRL_BASE	( 0x1 )

#define	CA_CRL_DELTA	( 0x2 )

#define	CA_CRL_REPUBLISH	( 0x10 )

#define	ICF_ALLOWFOREIGN	( 0x10000 )

#define	ICF_EXISTINGROW	( 0x20000 )

#define	IKF_OVERWRITE	( 0x10000 )

#define	CDR_EXPIRED	( 1 )

#define	CDR_REQUEST_LAST_CHANGED	( 2 )



extern RPC_IF_HANDLE __MIDL_itf_certadm_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_certadm_0000_0001_v0_0_s_ifspec;

#ifndef __ICertAdmin2_INTERFACE_DEFINED__
#define __ICertAdmin2_INTERFACE_DEFINED__

/* interface ICertAdmin2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertAdmin2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f7c3ac41-b8ce-4fb4-aa58-3d1dc0e36b39")
    ICertAdmin2 : public ICertAdmin
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE PublishCRLs( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ DATE Date,
            /* [in] */ LONG CRLFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCAProperty( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [in] */ LONG PropIndex,
            /* [in] */ LONG PropType,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__out VARIANT *pvarPropertyValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCAProperty( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [in] */ LONG PropIndex,
            /* [in] */ LONG PropType,
            /* [in] */ __RPC__in VARIANT *pvarPropertyValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCAPropertyFlags( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [retval][out] */ __RPC__out LONG *pPropFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCAPropertyDisplayName( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrDisplayName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetArchivedKey( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrArchivedKey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConfigEntry( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ __RPC__in const BSTR strNodePath,
            /* [in] */ __RPC__in const BSTR strEntryName,
            /* [retval][out] */ __RPC__out VARIANT *pvarEntry) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetConfigEntry( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ __RPC__in const BSTR strNodePath,
            /* [in] */ __RPC__in const BSTR strEntryName,
            /* [in] */ __RPC__in VARIANT *pvarEntry) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ImportKey( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strCertHash,
            /* [in] */ LONG Flags,
            /* [in] */ __RPC__in const BSTR strKey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMyRoles( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [retval][out] */ __RPC__out LONG *pRoles) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteRow( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG Flags,
            /* [in] */ DATE Date,
            /* [in] */ LONG Table,
            /* [in] */ LONG RowId,
            /* [retval][out] */ __RPC__out LONG *pcDeleted) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertAdmin2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertAdmin2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertAdmin2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertAdmin2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertAdmin2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *IsValidCertificate )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ __RPC__in const BSTR strSerialNumber,
            /* [retval][out] */ __RPC__out LONG *pDisposition);
        
        HRESULT ( STDMETHODCALLTYPE *GetRevocationReason )( 
            __RPC__in ICertAdmin2 * This,
            /* [retval][out] */ __RPC__out LONG *pReason);
        
        HRESULT ( STDMETHODCALLTYPE *RevokeCertificate )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ __RPC__in const BSTR strSerialNumber,
            /* [in] */ LONG Reason,
            /* [in] */ DATE Date);
        
        HRESULT ( STDMETHODCALLTYPE *SetRequestAttributes )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strAttributes);
        
        HRESULT ( STDMETHODCALLTYPE *SetCertificateExtension )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strExtensionName,
            /* [in] */ LONG Type,
            /* [in] */ LONG Flags,
            /* [in] */ __RPC__in const VARIANT *pvarValue);
        
        HRESULT ( STDMETHODCALLTYPE *DenyRequest )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId);
        
        HRESULT ( STDMETHODCALLTYPE *ResubmitRequest )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [retval][out] */ __RPC__out LONG *pDisposition);
        
        HRESULT ( STDMETHODCALLTYPE *PublishCRL )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ DATE Date);
        
        HRESULT ( STDMETHODCALLTYPE *GetCRL )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrCRL);
        
        HRESULT ( STDMETHODCALLTYPE *ImportCertificate )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ __RPC__in const BSTR strCertificate,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__out LONG *pRequestId);
        
        HRESULT ( STDMETHODCALLTYPE *PublishCRLs )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ DATE Date,
            /* [in] */ LONG CRLFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetCAProperty )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [in] */ LONG PropIndex,
            /* [in] */ LONG PropType,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__out VARIANT *pvarPropertyValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetCAProperty )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [in] */ LONG PropIndex,
            /* [in] */ LONG PropType,
            /* [in] */ __RPC__in VARIANT *pvarPropertyValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetCAPropertyFlags )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [retval][out] */ __RPC__out LONG *pPropFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetCAPropertyDisplayName )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrDisplayName);
        
        HRESULT ( STDMETHODCALLTYPE *GetArchivedKey )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrArchivedKey);
        
        HRESULT ( STDMETHODCALLTYPE *GetConfigEntry )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ __RPC__in const BSTR strNodePath,
            /* [in] */ __RPC__in const BSTR strEntryName,
            /* [retval][out] */ __RPC__out VARIANT *pvarEntry);
        
        HRESULT ( STDMETHODCALLTYPE *SetConfigEntry )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ __RPC__in const BSTR strNodePath,
            /* [in] */ __RPC__in const BSTR strEntryName,
            /* [in] */ __RPC__in VARIANT *pvarEntry);
        
        HRESULT ( STDMETHODCALLTYPE *ImportKey )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strCertHash,
            /* [in] */ LONG Flags,
            /* [in] */ __RPC__in const BSTR strKey);
        
        HRESULT ( STDMETHODCALLTYPE *GetMyRoles )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [retval][out] */ __RPC__out LONG *pRoles);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteRow )( 
            __RPC__in ICertAdmin2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG Flags,
            /* [in] */ DATE Date,
            /* [in] */ LONG Table,
            /* [in] */ LONG RowId,
            /* [retval][out] */ __RPC__out LONG *pcDeleted);
        
        END_INTERFACE
    } ICertAdmin2Vtbl;

    interface ICertAdmin2
    {
        CONST_VTBL struct ICertAdmin2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertAdmin2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertAdmin2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertAdmin2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertAdmin2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertAdmin2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertAdmin2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertAdmin2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertAdmin2_IsValidCertificate(This,strConfig,strSerialNumber,pDisposition)	\
    ( (This)->lpVtbl -> IsValidCertificate(This,strConfig,strSerialNumber,pDisposition) ) 

#define ICertAdmin2_GetRevocationReason(This,pReason)	\
    ( (This)->lpVtbl -> GetRevocationReason(This,pReason) ) 

#define ICertAdmin2_RevokeCertificate(This,strConfig,strSerialNumber,Reason,Date)	\
    ( (This)->lpVtbl -> RevokeCertificate(This,strConfig,strSerialNumber,Reason,Date) ) 

#define ICertAdmin2_SetRequestAttributes(This,strConfig,RequestId,strAttributes)	\
    ( (This)->lpVtbl -> SetRequestAttributes(This,strConfig,RequestId,strAttributes) ) 

#define ICertAdmin2_SetCertificateExtension(This,strConfig,RequestId,strExtensionName,Type,Flags,pvarValue)	\
    ( (This)->lpVtbl -> SetCertificateExtension(This,strConfig,RequestId,strExtensionName,Type,Flags,pvarValue) ) 

#define ICertAdmin2_DenyRequest(This,strConfig,RequestId)	\
    ( (This)->lpVtbl -> DenyRequest(This,strConfig,RequestId) ) 

#define ICertAdmin2_ResubmitRequest(This,strConfig,RequestId,pDisposition)	\
    ( (This)->lpVtbl -> ResubmitRequest(This,strConfig,RequestId,pDisposition) ) 

#define ICertAdmin2_PublishCRL(This,strConfig,Date)	\
    ( (This)->lpVtbl -> PublishCRL(This,strConfig,Date) ) 

#define ICertAdmin2_GetCRL(This,strConfig,Flags,pstrCRL)	\
    ( (This)->lpVtbl -> GetCRL(This,strConfig,Flags,pstrCRL) ) 

#define ICertAdmin2_ImportCertificate(This,strConfig,strCertificate,Flags,pRequestId)	\
    ( (This)->lpVtbl -> ImportCertificate(This,strConfig,strCertificate,Flags,pRequestId) ) 


#define ICertAdmin2_PublishCRLs(This,strConfig,Date,CRLFlags)	\
    ( (This)->lpVtbl -> PublishCRLs(This,strConfig,Date,CRLFlags) ) 

#define ICertAdmin2_GetCAProperty(This,strConfig,PropId,PropIndex,PropType,Flags,pvarPropertyValue)	\
    ( (This)->lpVtbl -> GetCAProperty(This,strConfig,PropId,PropIndex,PropType,Flags,pvarPropertyValue) ) 

#define ICertAdmin2_SetCAProperty(This,strConfig,PropId,PropIndex,PropType,pvarPropertyValue)	\
    ( (This)->lpVtbl -> SetCAProperty(This,strConfig,PropId,PropIndex,PropType,pvarPropertyValue) ) 

#define ICertAdmin2_GetCAPropertyFlags(This,strConfig,PropId,pPropFlags)	\
    ( (This)->lpVtbl -> GetCAPropertyFlags(This,strConfig,PropId,pPropFlags) ) 

#define ICertAdmin2_GetCAPropertyDisplayName(This,strConfig,PropId,pstrDisplayName)	\
    ( (This)->lpVtbl -> GetCAPropertyDisplayName(This,strConfig,PropId,pstrDisplayName) ) 

#define ICertAdmin2_GetArchivedKey(This,strConfig,RequestId,Flags,pstrArchivedKey)	\
    ( (This)->lpVtbl -> GetArchivedKey(This,strConfig,RequestId,Flags,pstrArchivedKey) ) 

#define ICertAdmin2_GetConfigEntry(This,strConfig,strNodePath,strEntryName,pvarEntry)	\
    ( (This)->lpVtbl -> GetConfigEntry(This,strConfig,strNodePath,strEntryName,pvarEntry) ) 

#define ICertAdmin2_SetConfigEntry(This,strConfig,strNodePath,strEntryName,pvarEntry)	\
    ( (This)->lpVtbl -> SetConfigEntry(This,strConfig,strNodePath,strEntryName,pvarEntry) ) 

#define ICertAdmin2_ImportKey(This,strConfig,RequestId,strCertHash,Flags,strKey)	\
    ( (This)->lpVtbl -> ImportKey(This,strConfig,RequestId,strCertHash,Flags,strKey) ) 

#define ICertAdmin2_GetMyRoles(This,strConfig,pRoles)	\
    ( (This)->lpVtbl -> GetMyRoles(This,strConfig,pRoles) ) 

#define ICertAdmin2_DeleteRow(This,strConfig,Flags,Date,Table,RowId,pcDeleted)	\
    ( (This)->lpVtbl -> DeleteRow(This,strConfig,Flags,Date,Table,RowId,pcDeleted) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertAdmin2_INTERFACE_DEFINED__ */


#ifndef __IOCSPProperty_INTERFACE_DEFINED__
#define __IOCSPProperty_INTERFACE_DEFINED__

/* interface IOCSPProperty */
/* [unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IOCSPProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("66FB7839-5F04-4C25-AD18-9FF1A8376EE0")
    IOCSPProperty : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Modified( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOCSPPropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IOCSPProperty * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IOCSPProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IOCSPProperty * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IOCSPProperty * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IOCSPProperty * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IOCSPProperty * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IOCSPProperty * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IOCSPProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in IOCSPProperty * This,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in IOCSPProperty * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Modified )( 
            __RPC__in IOCSPProperty * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal);
        
        END_INTERFACE
    } IOCSPPropertyVtbl;

    interface IOCSPProperty
    {
        CONST_VTBL struct IOCSPPropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOCSPProperty_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IOCSPProperty_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IOCSPProperty_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IOCSPProperty_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IOCSPProperty_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IOCSPProperty_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IOCSPProperty_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IOCSPProperty_get_Name(This,pVal)	\
    ( (This)->lpVtbl -> get_Name(This,pVal) ) 

#define IOCSPProperty_get_Value(This,pVal)	\
    ( (This)->lpVtbl -> get_Value(This,pVal) ) 

#define IOCSPProperty_put_Value(This,newVal)	\
    ( (This)->lpVtbl -> put_Value(This,newVal) ) 

#define IOCSPProperty_get_Modified(This,pVal)	\
    ( (This)->lpVtbl -> get_Modified(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IOCSPProperty_INTERFACE_DEFINED__ */


#ifndef __IOCSPPropertyCollection_INTERFACE_DEFINED__
#define __IOCSPPropertyCollection_INTERFACE_DEFINED__

/* interface IOCSPPropertyCollection */
/* [unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IOCSPPropertyCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2597C18D-54E6-4B74-9FA9-A6BFDA99CBBE")
    IOCSPPropertyCollection : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out LONG *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ItemByName( 
            /* [in] */ __RPC__in const BSTR bstrPropName,
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateProperty( 
            /* [in] */ __RPC__in const BSTR bstrPropName,
            /* [in] */ __RPC__in const VARIANT *pVarPropValue,
            /* [retval][out] */ __RPC__deref_out_opt IOCSPProperty **ppVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteProperty( 
            /* [in] */ __RPC__in const BSTR bstrPropName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InitializeFromProperties( 
            /* [in] */ __RPC__in const VARIANT *pVarProperties) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetAllProperties( 
            /* [retval][out] */ __RPC__out VARIANT *pVarProperties) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOCSPPropertyCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IOCSPPropertyCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IOCSPPropertyCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IOCSPPropertyCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IOCSPPropertyCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IOCSPPropertyCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IOCSPPropertyCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IOCSPPropertyCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IOCSPPropertyCollection * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IOCSPPropertyCollection * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IOCSPPropertyCollection * This,
            /* [retval][out] */ __RPC__out LONG *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemByName )( 
            __RPC__in IOCSPPropertyCollection * This,
            /* [in] */ __RPC__in const BSTR bstrPropName,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CreateProperty )( 
            __RPC__in IOCSPPropertyCollection * This,
            /* [in] */ __RPC__in const BSTR bstrPropName,
            /* [in] */ __RPC__in const VARIANT *pVarPropValue,
            /* [retval][out] */ __RPC__deref_out_opt IOCSPProperty **ppVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteProperty )( 
            __RPC__in IOCSPPropertyCollection * This,
            /* [in] */ __RPC__in const BSTR bstrPropName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InitializeFromProperties )( 
            __RPC__in IOCSPPropertyCollection * This,
            /* [in] */ __RPC__in const VARIANT *pVarProperties);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetAllProperties )( 
            __RPC__in IOCSPPropertyCollection * This,
            /* [retval][out] */ __RPC__out VARIANT *pVarProperties);
        
        END_INTERFACE
    } IOCSPPropertyCollectionVtbl;

    interface IOCSPPropertyCollection
    {
        CONST_VTBL struct IOCSPPropertyCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOCSPPropertyCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IOCSPPropertyCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IOCSPPropertyCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IOCSPPropertyCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IOCSPPropertyCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IOCSPPropertyCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IOCSPPropertyCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IOCSPPropertyCollection_get__NewEnum(This,ppVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppVal) ) 

#define IOCSPPropertyCollection_get_Item(This,Index,pVal)	\
    ( (This)->lpVtbl -> get_Item(This,Index,pVal) ) 

#define IOCSPPropertyCollection_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IOCSPPropertyCollection_get_ItemByName(This,bstrPropName,pVal)	\
    ( (This)->lpVtbl -> get_ItemByName(This,bstrPropName,pVal) ) 

#define IOCSPPropertyCollection_CreateProperty(This,bstrPropName,pVarPropValue,ppVal)	\
    ( (This)->lpVtbl -> CreateProperty(This,bstrPropName,pVarPropValue,ppVal) ) 

#define IOCSPPropertyCollection_DeleteProperty(This,bstrPropName)	\
    ( (This)->lpVtbl -> DeleteProperty(This,bstrPropName) ) 

#define IOCSPPropertyCollection_InitializeFromProperties(This,pVarProperties)	\
    ( (This)->lpVtbl -> InitializeFromProperties(This,pVarProperties) ) 

#define IOCSPPropertyCollection_GetAllProperties(This,pVarProperties)	\
    ( (This)->lpVtbl -> GetAllProperties(This,pVarProperties) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IOCSPPropertyCollection_INTERFACE_DEFINED__ */


#ifndef __IOCSPCAConfiguration_INTERFACE_DEFINED__
#define __IOCSPCAConfiguration_INTERFACE_DEFINED__

/* interface IOCSPCAConfiguration */
/* [unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IOCSPCAConfiguration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AEC92B40-3D46-433F-87D1-B84D5C1E790D")
    IOCSPCAConfiguration : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Identifier( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CACertificate( 
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HashAlgorithm( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HashAlgorithm( 
            /* [in] */ __RPC__in const BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SigningFlags( 
            /* [retval][out] */ __RPC__out ULONG *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SigningFlags( 
            /* [in] */ ULONG newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SigningCertificate( 
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SigningCertificate( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ReminderDuration( 
            /* [retval][out] */ __RPC__out ULONG *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ReminderDuration( 
            /* [in] */ ULONG newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ErrorCode( 
            /* [retval][out] */ __RPC__out ULONG *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CSPName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_KeySpec( 
            /* [retval][out] */ __RPC__out ULONG *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProviderCLSID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProviderCLSID( 
            /* [in] */ __RPC__in const BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProviderProperties( 
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProviderProperties( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Modified( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LocalRevocationInformation( 
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_LocalRevocationInformation( 
            /* [in] */ VARIANT newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SigningCertificateTemplate( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SigningCertificateTemplate( 
            /* [in] */ __RPC__in const BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CAConfig( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CAConfig( 
            /* [in] */ __RPC__in const BSTR newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOCSPCAConfigurationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IOCSPCAConfiguration * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IOCSPCAConfiguration * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IOCSPCAConfiguration * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Identifier )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CACertificate )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HashAlgorithm )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_HashAlgorithm )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [in] */ __RPC__in const BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SigningFlags )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__out ULONG *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SigningFlags )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [in] */ ULONG newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SigningCertificate )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SigningCertificate )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReminderDuration )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__out ULONG *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ReminderDuration )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [in] */ ULONG newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorCode )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__out ULONG *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CSPName )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeySpec )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__out ULONG *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProviderCLSID )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProviderCLSID )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [in] */ __RPC__in const BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProviderProperties )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProviderProperties )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Modified )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LocalRevocationInformation )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_LocalRevocationInformation )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [in] */ VARIANT newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SigningCertificateTemplate )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SigningCertificateTemplate )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [in] */ __RPC__in const BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CAConfig )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CAConfig )( 
            __RPC__in IOCSPCAConfiguration * This,
            /* [in] */ __RPC__in const BSTR newVal);
        
        END_INTERFACE
    } IOCSPCAConfigurationVtbl;

    interface IOCSPCAConfiguration
    {
        CONST_VTBL struct IOCSPCAConfigurationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOCSPCAConfiguration_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IOCSPCAConfiguration_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IOCSPCAConfiguration_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IOCSPCAConfiguration_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IOCSPCAConfiguration_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IOCSPCAConfiguration_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IOCSPCAConfiguration_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IOCSPCAConfiguration_get_Identifier(This,pVal)	\
    ( (This)->lpVtbl -> get_Identifier(This,pVal) ) 

#define IOCSPCAConfiguration_get_CACertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_CACertificate(This,pVal) ) 

#define IOCSPCAConfiguration_get_HashAlgorithm(This,pVal)	\
    ( (This)->lpVtbl -> get_HashAlgorithm(This,pVal) ) 

#define IOCSPCAConfiguration_put_HashAlgorithm(This,newVal)	\
    ( (This)->lpVtbl -> put_HashAlgorithm(This,newVal) ) 

#define IOCSPCAConfiguration_get_SigningFlags(This,pVal)	\
    ( (This)->lpVtbl -> get_SigningFlags(This,pVal) ) 

#define IOCSPCAConfiguration_put_SigningFlags(This,newVal)	\
    ( (This)->lpVtbl -> put_SigningFlags(This,newVal) ) 

#define IOCSPCAConfiguration_get_SigningCertificate(This,pVal)	\
    ( (This)->lpVtbl -> get_SigningCertificate(This,pVal) ) 

#define IOCSPCAConfiguration_put_SigningCertificate(This,newVal)	\
    ( (This)->lpVtbl -> put_SigningCertificate(This,newVal) ) 

#define IOCSPCAConfiguration_get_ReminderDuration(This,pVal)	\
    ( (This)->lpVtbl -> get_ReminderDuration(This,pVal) ) 

#define IOCSPCAConfiguration_put_ReminderDuration(This,newVal)	\
    ( (This)->lpVtbl -> put_ReminderDuration(This,newVal) ) 

#define IOCSPCAConfiguration_get_ErrorCode(This,pVal)	\
    ( (This)->lpVtbl -> get_ErrorCode(This,pVal) ) 

#define IOCSPCAConfiguration_get_CSPName(This,pVal)	\
    ( (This)->lpVtbl -> get_CSPName(This,pVal) ) 

#define IOCSPCAConfiguration_get_KeySpec(This,pVal)	\
    ( (This)->lpVtbl -> get_KeySpec(This,pVal) ) 

#define IOCSPCAConfiguration_get_ProviderCLSID(This,pVal)	\
    ( (This)->lpVtbl -> get_ProviderCLSID(This,pVal) ) 

#define IOCSPCAConfiguration_put_ProviderCLSID(This,newVal)	\
    ( (This)->lpVtbl -> put_ProviderCLSID(This,newVal) ) 

#define IOCSPCAConfiguration_get_ProviderProperties(This,pVal)	\
    ( (This)->lpVtbl -> get_ProviderProperties(This,pVal) ) 

#define IOCSPCAConfiguration_put_ProviderProperties(This,newVal)	\
    ( (This)->lpVtbl -> put_ProviderProperties(This,newVal) ) 

#define IOCSPCAConfiguration_get_Modified(This,pVal)	\
    ( (This)->lpVtbl -> get_Modified(This,pVal) ) 

#define IOCSPCAConfiguration_get_LocalRevocationInformation(This,pVal)	\
    ( (This)->lpVtbl -> get_LocalRevocationInformation(This,pVal) ) 

#define IOCSPCAConfiguration_put_LocalRevocationInformation(This,newVal)	\
    ( (This)->lpVtbl -> put_LocalRevocationInformation(This,newVal) ) 

#define IOCSPCAConfiguration_get_SigningCertificateTemplate(This,pVal)	\
    ( (This)->lpVtbl -> get_SigningCertificateTemplate(This,pVal) ) 

#define IOCSPCAConfiguration_put_SigningCertificateTemplate(This,newVal)	\
    ( (This)->lpVtbl -> put_SigningCertificateTemplate(This,newVal) ) 

#define IOCSPCAConfiguration_get_CAConfig(This,pVal)	\
    ( (This)->lpVtbl -> get_CAConfig(This,pVal) ) 

#define IOCSPCAConfiguration_put_CAConfig(This,newVal)	\
    ( (This)->lpVtbl -> put_CAConfig(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IOCSPCAConfiguration_INTERFACE_DEFINED__ */


#ifndef __IOCSPCAConfigurationCollection_INTERFACE_DEFINED__
#define __IOCSPCAConfigurationCollection_INTERFACE_DEFINED__

/* interface IOCSPCAConfigurationCollection */
/* [unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IOCSPCAConfigurationCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2BEBEA0B-5ECE-4F28-A91C-86B4BB20F0D3")
    IOCSPCAConfigurationCollection : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out LONG *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ItemByName( 
            /* [in] */ __RPC__in const BSTR bstrIdentifier,
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateCAConfiguration( 
            /* [in] */ __RPC__in const BSTR bstrIdentifier,
            /* [in] */ VARIANT varCACert,
            /* [retval][out] */ __RPC__deref_out_opt IOCSPCAConfiguration **ppVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteCAConfiguration( 
            /* [in] */ __RPC__in const BSTR bstrIdentifier) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOCSPCAConfigurationCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IOCSPCAConfigurationCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IOCSPCAConfigurationCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IOCSPCAConfigurationCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IOCSPCAConfigurationCollection * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IOCSPCAConfigurationCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IOCSPCAConfigurationCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IOCSPCAConfigurationCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IOCSPCAConfigurationCollection * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IOCSPCAConfigurationCollection * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IOCSPCAConfigurationCollection * This,
            /* [retval][out] */ __RPC__out LONG *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemByName )( 
            __RPC__in IOCSPCAConfigurationCollection * This,
            /* [in] */ __RPC__in const BSTR bstrIdentifier,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CreateCAConfiguration )( 
            __RPC__in IOCSPCAConfigurationCollection * This,
            /* [in] */ __RPC__in const BSTR bstrIdentifier,
            /* [in] */ VARIANT varCACert,
            /* [retval][out] */ __RPC__deref_out_opt IOCSPCAConfiguration **ppVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteCAConfiguration )( 
            __RPC__in IOCSPCAConfigurationCollection * This,
            /* [in] */ __RPC__in const BSTR bstrIdentifier);
        
        END_INTERFACE
    } IOCSPCAConfigurationCollectionVtbl;

    interface IOCSPCAConfigurationCollection
    {
        CONST_VTBL struct IOCSPCAConfigurationCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOCSPCAConfigurationCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IOCSPCAConfigurationCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IOCSPCAConfigurationCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IOCSPCAConfigurationCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IOCSPCAConfigurationCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IOCSPCAConfigurationCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IOCSPCAConfigurationCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IOCSPCAConfigurationCollection_get__NewEnum(This,pVal)	\
    ( (This)->lpVtbl -> get__NewEnum(This,pVal) ) 

#define IOCSPCAConfigurationCollection_get_Item(This,Index,pVal)	\
    ( (This)->lpVtbl -> get_Item(This,Index,pVal) ) 

#define IOCSPCAConfigurationCollection_get_Count(This,pVal)	\
    ( (This)->lpVtbl -> get_Count(This,pVal) ) 

#define IOCSPCAConfigurationCollection_get_ItemByName(This,bstrIdentifier,pVal)	\
    ( (This)->lpVtbl -> get_ItemByName(This,bstrIdentifier,pVal) ) 

#define IOCSPCAConfigurationCollection_CreateCAConfiguration(This,bstrIdentifier,varCACert,ppVal)	\
    ( (This)->lpVtbl -> CreateCAConfiguration(This,bstrIdentifier,varCACert,ppVal) ) 

#define IOCSPCAConfigurationCollection_DeleteCAConfiguration(This,bstrIdentifier)	\
    ( (This)->lpVtbl -> DeleteCAConfiguration(This,bstrIdentifier) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IOCSPCAConfigurationCollection_INTERFACE_DEFINED__ */


#ifndef __IOCSPAdmin_INTERFACE_DEFINED__
#define __IOCSPAdmin_INTERFACE_DEFINED__

/* interface IOCSPAdmin */
/* [unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IOCSPAdmin;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("322E830D-67DB-4FE9-9577-4596D9F09294")
    IOCSPAdmin : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_OCSPServiceProperties( 
            /* [retval][out] */ __RPC__deref_out_opt IOCSPPropertyCollection **ppVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_OCSPCAConfigurationCollection( 
            /* [retval][out] */ __RPC__deref_out_opt IOCSPCAConfigurationCollection **pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetConfiguration( 
            /* [in] */ __RPC__in const BSTR bstrServerName,
            /* [in] */ VARIANT_BOOL bForce) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetConfiguration( 
            /* [in] */ __RPC__in const BSTR bstrServerName,
            /* [in] */ VARIANT_BOOL bForce) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetMyRoles( 
            /* [in] */ __RPC__in const BSTR bstrServerName,
            /* [retval][out] */ __RPC__out LONG *pRoles) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Ping( 
            /* [in] */ __RPC__in const BSTR bstrServerName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetSecurity( 
            /* [in] */ __RPC__in const BSTR bstrServerName,
            /* [in] */ __RPC__in const BSTR bstrVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSecurity( 
            /* [in] */ __RPC__in const BSTR bstrServerName,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSigningCertificates( 
            /* [in] */ __RPC__in const BSTR bstrServerName,
            /* [in] */ __RPC__in const VARIANT *pCACertVar,
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetHashAlgorithms( 
            /* [in] */ __RPC__in const BSTR bstrServerName,
            /* [in] */ __RPC__in const BSTR bstrCAId,
            /* [retval][out] */ __RPC__out VARIANT *pVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOCSPAdminVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IOCSPAdmin * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IOCSPAdmin * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IOCSPAdmin * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IOCSPAdmin * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IOCSPAdmin * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IOCSPAdmin * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IOCSPAdmin * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OCSPServiceProperties )( 
            __RPC__in IOCSPAdmin * This,
            /* [retval][out] */ __RPC__deref_out_opt IOCSPPropertyCollection **ppVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OCSPCAConfigurationCollection )( 
            __RPC__in IOCSPAdmin * This,
            /* [retval][out] */ __RPC__deref_out_opt IOCSPCAConfigurationCollection **pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetConfiguration )( 
            __RPC__in IOCSPAdmin * This,
            /* [in] */ __RPC__in const BSTR bstrServerName,
            /* [in] */ VARIANT_BOOL bForce);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetConfiguration )( 
            __RPC__in IOCSPAdmin * This,
            /* [in] */ __RPC__in const BSTR bstrServerName,
            /* [in] */ VARIANT_BOOL bForce);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetMyRoles )( 
            __RPC__in IOCSPAdmin * This,
            /* [in] */ __RPC__in const BSTR bstrServerName,
            /* [retval][out] */ __RPC__out LONG *pRoles);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Ping )( 
            __RPC__in IOCSPAdmin * This,
            /* [in] */ __RPC__in const BSTR bstrServerName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetSecurity )( 
            __RPC__in IOCSPAdmin * This,
            /* [in] */ __RPC__in const BSTR bstrServerName,
            /* [in] */ __RPC__in const BSTR bstrVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSecurity )( 
            __RPC__in IOCSPAdmin * This,
            /* [in] */ __RPC__in const BSTR bstrServerName,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSigningCertificates )( 
            __RPC__in IOCSPAdmin * This,
            /* [in] */ __RPC__in const BSTR bstrServerName,
            /* [in] */ __RPC__in const VARIANT *pCACertVar,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetHashAlgorithms )( 
            __RPC__in IOCSPAdmin * This,
            /* [in] */ __RPC__in const BSTR bstrServerName,
            /* [in] */ __RPC__in const BSTR bstrCAId,
            /* [retval][out] */ __RPC__out VARIANT *pVal);
        
        END_INTERFACE
    } IOCSPAdminVtbl;

    interface IOCSPAdmin
    {
        CONST_VTBL struct IOCSPAdminVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOCSPAdmin_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IOCSPAdmin_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IOCSPAdmin_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IOCSPAdmin_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IOCSPAdmin_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IOCSPAdmin_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IOCSPAdmin_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IOCSPAdmin_get_OCSPServiceProperties(This,ppVal)	\
    ( (This)->lpVtbl -> get_OCSPServiceProperties(This,ppVal) ) 

#define IOCSPAdmin_get_OCSPCAConfigurationCollection(This,pVal)	\
    ( (This)->lpVtbl -> get_OCSPCAConfigurationCollection(This,pVal) ) 

#define IOCSPAdmin_GetConfiguration(This,bstrServerName,bForce)	\
    ( (This)->lpVtbl -> GetConfiguration(This,bstrServerName,bForce) ) 

#define IOCSPAdmin_SetConfiguration(This,bstrServerName,bForce)	\
    ( (This)->lpVtbl -> SetConfiguration(This,bstrServerName,bForce) ) 

#define IOCSPAdmin_GetMyRoles(This,bstrServerName,pRoles)	\
    ( (This)->lpVtbl -> GetMyRoles(This,bstrServerName,pRoles) ) 

#define IOCSPAdmin_Ping(This,bstrServerName)	\
    ( (This)->lpVtbl -> Ping(This,bstrServerName) ) 

#define IOCSPAdmin_SetSecurity(This,bstrServerName,bstrVal)	\
    ( (This)->lpVtbl -> SetSecurity(This,bstrServerName,bstrVal) ) 

#define IOCSPAdmin_GetSecurity(This,bstrServerName,pVal)	\
    ( (This)->lpVtbl -> GetSecurity(This,bstrServerName,pVal) ) 

#define IOCSPAdmin_GetSigningCertificates(This,bstrServerName,pCACertVar,pVal)	\
    ( (This)->lpVtbl -> GetSigningCertificates(This,bstrServerName,pCACertVar,pVal) ) 

#define IOCSPAdmin_GetHashAlgorithms(This,bstrServerName,bstrCAId,pVal)	\
    ( (This)->lpVtbl -> GetHashAlgorithms(This,bstrServerName,bstrCAId,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IOCSPAdmin_INTERFACE_DEFINED__ */



#ifndef __CERTADMINLib_LIBRARY_DEFINED__
#define __CERTADMINLib_LIBRARY_DEFINED__

/* library CERTADMINLib */
/* [helpstring][version][uuid] */ 


enum OCSPSigningFlag
    {	OCSP_SF_SILENT	= 0x1,
	OCSP_SF_USE_CACERT	= 0x2,
	OCSP_SF_ALLOW_SIGNINGCERT_AUTORENEWAL	= 0x4,
	OCSP_SF_FORCE_SIGNINGCERT_ISSUER_ISCA	= 0x8,
	OCSP_SF_AUTODISCOVER_SIGNINGCERT	= 0x10,
	OCSP_SF_MANUAL_ASSIGN_SIGNINGCERT	= 0x20,
	OCSP_SF_RESPONDER_ID_KEYHASH	= 0x40,
	OCSP_SF_RESPONDER_ID_NAME	= 0x80,
	OCSP_SF_ALLOW_NONCE_EXTENSION	= 0x100,
	OCSP_SF_ALLOW_SIGNINGCERT_AUTOENROLLMENT	= 0x200
    } ;

enum OCSPRequestFlag
    {	OCSP_RF_REJECT_SIGNED_REQUESTS	= 0x1
    } ;
#define wszOCSPCAPROP_CACERTIFICATE		L"CACertificate"
#define wszOCSPCAPROP_HASHALGORITHMID		L"HashAlgorithmId"
#define wszOCSPCAPROP_SIGNINGFLAGS		L"SigningFlags"
#define wszOCSPCAPROP_REMINDERDURATION		L"ReminderDuration"
#define wszOCSPCAPROP_SIGNINGCERTIFICATE		L"SigningCertificate"
#define wszOCSPCAPROP_CSPNAME			L"CSPName"
#define wszOCSPCAPROP_KEYSPEC			L"KeySpec"
#define wszOCSPCAPROP_ERRORCODE			L"ErrorCode"
#define wszOCSPCAPROP_PROVIDERCLSID		L"ProviderCLSID"
#define wszOCSPCAPROP_PROVIDERPROPERTIES		L"Provider"
#define wszOCSPCAPROP_LOCALREVOCATIONINFORMATION	L"LocalRevocationInformation"
#define wszOCSPCAPROP_SIGNINGCERTIFICATETEMPLATE	L"SigningCertificateTemplate"
#define wszOCSPCAPROP_CACONFIG	L"CAConfig"
#define wszOCSPPROP_LOGLEVEL  			L"LogLevel"
#define wszOCSPPROP_DEBUG                  	L"Debug"
#define wszOCSPPROP_AUDITFILTER			L"AuditFilter"
#define wszOCSPPROP_ARRAYCONTROLLER		L"ArrayController"
#define wszOCSPPROP_ARRAYMEMBERS		    L"ArrayMembers"
#define wszOCSPPROP_ENROLLPOLLINTERVAL   L"EnrollPollInterval"
#define wszOCSPISAPIPROP_VIRTUALROOTNAME		L"VirtualRootName"
#define wszOCSPISAPIPROP_NUMOFTHREADS		L"NumOfThreads"
#define wszOCSPISAPIPROP_NUMOFBACKENDCONNECTIONS	L"NumOfBackendConnections"
#define wszOCSPISAPIPROP_REFRESHRATE		L"RefreshRate"
#define wszOCSPISAPIPROP_MAXNUMOFCACHEENTRIES	L"MaxNumOfCacheEntries"
#define wszOCSPISAPIPROP_MAXAGE			L"MaxAge"
#define wszOCSPISAPIPROP_DEBUG			L"ISAPIDebug"
#define wszOCSPCOMMONPROP_REQFLAGS			        L"RequestFlags"
#define wszOCSPCOMMONPROP_MAXINCOMINGMESSAGESIZE	    L"MaxIncomingMessageSize"
#define wszOCSPREVPROP_CRLURLTIMEOUT		L"CrlUrlTimeOut"
#define wszOCSPREVPROP_BASECRLURLS		L"BaseCrlUrls"
#define wszOCSPREVPROP_BASECRL			L"BaseCrl"
#define wszOCSPREVPROP_DELTACRLURLS		L"DeltaCrlUrls"
#define wszOCSPREVPROP_DELTACRL			L"DeltaCrl"
#define wszOCSPREVPROP_REFRESHTIMEOUT	L"RefreshTimeOut"
#define wszOCSPREVPROP_ERRORCODE			L"RevocationErrorCode"

EXTERN_C const IID LIBID_CERTADMINLib;

EXTERN_C const CLSID CLSID_CCertAdmin;

#ifdef __cplusplus

class DECLSPEC_UUID("37eabaf0-7fb6-11d0-8817-00a0c903b83c")
CCertAdmin;
#endif

EXTERN_C const CLSID CLSID_CCertView;

#ifdef __cplusplus

class DECLSPEC_UUID("a12d0f7a-1e84-11d1-9bd6-00c04fb683fa")
CCertView;
#endif

EXTERN_C const CLSID CLSID_OCSPPropertyCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("F935A528-BA8A-4DD9-BA79-F283275CB2DE")
OCSPPropertyCollection;
#endif

EXTERN_C const CLSID CLSID_OCSPAdmin;

#ifdef __cplusplus

class DECLSPEC_UUID("D3F73511-92C9-47CB-8FF2-8D891A7C4DE4")
OCSPAdmin;
#endif
#endif /* __CERTADMINLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree64(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\CertEnc.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for certenc.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __certenc_h__
#define __certenc_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __ICertEncodeStringArray_FWD_DEFINED__
#define __ICertEncodeStringArray_FWD_DEFINED__
typedef interface ICertEncodeStringArray ICertEncodeStringArray;
#endif 	/* __ICertEncodeStringArray_FWD_DEFINED__ */


#ifndef __ICertEncodeLongArray_FWD_DEFINED__
#define __ICertEncodeLongArray_FWD_DEFINED__
typedef interface ICertEncodeLongArray ICertEncodeLongArray;
#endif 	/* __ICertEncodeLongArray_FWD_DEFINED__ */


#ifndef __ICertEncodeDateArray_FWD_DEFINED__
#define __ICertEncodeDateArray_FWD_DEFINED__
typedef interface ICertEncodeDateArray ICertEncodeDateArray;
#endif 	/* __ICertEncodeDateArray_FWD_DEFINED__ */


#ifndef __ICertEncodeCRLDistInfo_FWD_DEFINED__
#define __ICertEncodeCRLDistInfo_FWD_DEFINED__
typedef interface ICertEncodeCRLDistInfo ICertEncodeCRLDistInfo;
#endif 	/* __ICertEncodeCRLDistInfo_FWD_DEFINED__ */


#ifndef __ICertEncodeAltName_FWD_DEFINED__
#define __ICertEncodeAltName_FWD_DEFINED__
typedef interface ICertEncodeAltName ICertEncodeAltName;
#endif 	/* __ICertEncodeAltName_FWD_DEFINED__ */


#ifndef __ICertEncodeBitString_FWD_DEFINED__
#define __ICertEncodeBitString_FWD_DEFINED__
typedef interface ICertEncodeBitString ICertEncodeBitString;
#endif 	/* __ICertEncodeBitString_FWD_DEFINED__ */


#ifndef __CCertEncodeStringArray_FWD_DEFINED__
#define __CCertEncodeStringArray_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertEncodeStringArray CCertEncodeStringArray;
#else
typedef struct CCertEncodeStringArray CCertEncodeStringArray;
#endif /* __cplusplus */

#endif 	/* __CCertEncodeStringArray_FWD_DEFINED__ */


#ifndef __CCertEncodeLongArray_FWD_DEFINED__
#define __CCertEncodeLongArray_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertEncodeLongArray CCertEncodeLongArray;
#else
typedef struct CCertEncodeLongArray CCertEncodeLongArray;
#endif /* __cplusplus */

#endif 	/* __CCertEncodeLongArray_FWD_DEFINED__ */


#ifndef __CCertEncodeDateArray_FWD_DEFINED__
#define __CCertEncodeDateArray_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertEncodeDateArray CCertEncodeDateArray;
#else
typedef struct CCertEncodeDateArray CCertEncodeDateArray;
#endif /* __cplusplus */

#endif 	/* __CCertEncodeDateArray_FWD_DEFINED__ */


#ifndef __CCertEncodeCRLDistInfo_FWD_DEFINED__
#define __CCertEncodeCRLDistInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertEncodeCRLDistInfo CCertEncodeCRLDistInfo;
#else
typedef struct CCertEncodeCRLDistInfo CCertEncodeCRLDistInfo;
#endif /* __cplusplus */

#endif 	/* __CCertEncodeCRLDistInfo_FWD_DEFINED__ */


#ifndef __CCertEncodeAltName_FWD_DEFINED__
#define __CCertEncodeAltName_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertEncodeAltName CCertEncodeAltName;
#else
typedef struct CCertEncodeAltName CCertEncodeAltName;
#endif /* __cplusplus */

#endif 	/* __CCertEncodeAltName_FWD_DEFINED__ */


#ifndef __CCertEncodeBitString_FWD_DEFINED__
#define __CCertEncodeBitString_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertEncodeBitString CCertEncodeBitString;
#else
typedef struct CCertEncodeBitString CCertEncodeBitString;
#endif /* __cplusplus */

#endif 	/* __CCertEncodeBitString_FWD_DEFINED__ */


/* header files for imported files */
#include "wtypes.h"
#include "oaidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __ICertEncodeStringArray_INTERFACE_DEFINED__
#define __ICertEncodeStringArray_INTERFACE_DEFINED__

/* interface ICertEncodeStringArray */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertEncodeStringArray;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("12a88820-7494-11d0-8816-00a0c903b83c")
    ICertEncodeStringArray : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Decode( 
            /* [in] */ __RPC__in const BSTR strBinary) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStringType( 
            /* [retval][out] */ __RPC__out LONG *pStringType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [retval][out] */ __RPC__out LONG *pCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetValue( 
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( 
            /* [in] */ LONG Count,
            /* [in] */ LONG StringType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetValue( 
            /* [in] */ LONG Index,
            /* [in] */ __RPC__in const BSTR str) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Encode( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrBinary) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertEncodeStringArrayVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertEncodeStringArray * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertEncodeStringArray * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertEncodeStringArray * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertEncodeStringArray * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertEncodeStringArray * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertEncodeStringArray * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertEncodeStringArray * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *Decode )( 
            __RPC__in ICertEncodeStringArray * This,
            /* [in] */ __RPC__in const BSTR strBinary);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringType )( 
            __RPC__in ICertEncodeStringArray * This,
            /* [retval][out] */ __RPC__out LONG *pStringType);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            __RPC__in ICertEncodeStringArray * This,
            /* [retval][out] */ __RPC__out LONG *pCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetValue )( 
            __RPC__in ICertEncodeStringArray * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstr);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in ICertEncodeStringArray * This,
            /* [in] */ LONG Count,
            /* [in] */ LONG StringType);
        
        HRESULT ( STDMETHODCALLTYPE *SetValue )( 
            __RPC__in ICertEncodeStringArray * This,
            /* [in] */ LONG Index,
            /* [in] */ __RPC__in const BSTR str);
        
        HRESULT ( STDMETHODCALLTYPE *Encode )( 
            __RPC__in ICertEncodeStringArray * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrBinary);
        
        END_INTERFACE
    } ICertEncodeStringArrayVtbl;

    interface ICertEncodeStringArray
    {
        CONST_VTBL struct ICertEncodeStringArrayVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertEncodeStringArray_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertEncodeStringArray_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertEncodeStringArray_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertEncodeStringArray_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertEncodeStringArray_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertEncodeStringArray_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertEncodeStringArray_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertEncodeStringArray_Decode(This,strBinary)	\
    ( (This)->lpVtbl -> Decode(This,strBinary) ) 

#define ICertEncodeStringArray_GetStringType(This,pStringType)	\
    ( (This)->lpVtbl -> GetStringType(This,pStringType) ) 

#define ICertEncodeStringArray_GetCount(This,pCount)	\
    ( (This)->lpVtbl -> GetCount(This,pCount) ) 

#define ICertEncodeStringArray_GetValue(This,Index,pstr)	\
    ( (This)->lpVtbl -> GetValue(This,Index,pstr) ) 

#define ICertEncodeStringArray_Reset(This,Count,StringType)	\
    ( (This)->lpVtbl -> Reset(This,Count,StringType) ) 

#define ICertEncodeStringArray_SetValue(This,Index,str)	\
    ( (This)->lpVtbl -> SetValue(This,Index,str) ) 

#define ICertEncodeStringArray_Encode(This,pstrBinary)	\
    ( (This)->lpVtbl -> Encode(This,pstrBinary) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertEncodeStringArray_INTERFACE_DEFINED__ */


#ifndef __ICertEncodeLongArray_INTERFACE_DEFINED__
#define __ICertEncodeLongArray_INTERFACE_DEFINED__

/* interface ICertEncodeLongArray */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertEncodeLongArray;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("15e2f230-a0a2-11d0-8821-00a0c903b83c")
    ICertEncodeLongArray : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Decode( 
            /* [in] */ __RPC__in const BSTR strBinary) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [retval][out] */ __RPC__out LONG *pCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetValue( 
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out LONG *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( 
            /* [in] */ LONG Count) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetValue( 
            /* [in] */ LONG Index,
            /* [in] */ LONG Value) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Encode( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrBinary) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertEncodeLongArrayVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertEncodeLongArray * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertEncodeLongArray * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertEncodeLongArray * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertEncodeLongArray * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertEncodeLongArray * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertEncodeLongArray * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertEncodeLongArray * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *Decode )( 
            __RPC__in ICertEncodeLongArray * This,
            /* [in] */ __RPC__in const BSTR strBinary);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            __RPC__in ICertEncodeLongArray * This,
            /* [retval][out] */ __RPC__out LONG *pCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetValue )( 
            __RPC__in ICertEncodeLongArray * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out LONG *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in ICertEncodeLongArray * This,
            /* [in] */ LONG Count);
        
        HRESULT ( STDMETHODCALLTYPE *SetValue )( 
            __RPC__in ICertEncodeLongArray * This,
            /* [in] */ LONG Index,
            /* [in] */ LONG Value);
        
        HRESULT ( STDMETHODCALLTYPE *Encode )( 
            __RPC__in ICertEncodeLongArray * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrBinary);
        
        END_INTERFACE
    } ICertEncodeLongArrayVtbl;

    interface ICertEncodeLongArray
    {
        CONST_VTBL struct ICertEncodeLongArrayVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertEncodeLongArray_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertEncodeLongArray_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertEncodeLongArray_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertEncodeLongArray_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertEncodeLongArray_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertEncodeLongArray_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertEncodeLongArray_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertEncodeLongArray_Decode(This,strBinary)	\
    ( (This)->lpVtbl -> Decode(This,strBinary) ) 

#define ICertEncodeLongArray_GetCount(This,pCount)	\
    ( (This)->lpVtbl -> GetCount(This,pCount) ) 

#define ICertEncodeLongArray_GetValue(This,Index,pValue)	\
    ( (This)->lpVtbl -> GetValue(This,Index,pValue) ) 

#define ICertEncodeLongArray_Reset(This,Count)	\
    ( (This)->lpVtbl -> Reset(This,Count) ) 

#define ICertEncodeLongArray_SetValue(This,Index,Value)	\
    ( (This)->lpVtbl -> SetValue(This,Index,Value) ) 

#define ICertEncodeLongArray_Encode(This,pstrBinary)	\
    ( (This)->lpVtbl -> Encode(This,pstrBinary) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertEncodeLongArray_INTERFACE_DEFINED__ */


#ifndef __ICertEncodeDateArray_INTERFACE_DEFINED__
#define __ICertEncodeDateArray_INTERFACE_DEFINED__

/* interface ICertEncodeDateArray */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertEncodeDateArray;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2f9469a0-a470-11d0-8821-00a0c903b83c")
    ICertEncodeDateArray : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Decode( 
            /* [in] */ __RPC__in const BSTR strBinary) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [retval][out] */ __RPC__out LONG *pCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetValue( 
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out DATE *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( 
            /* [in] */ LONG Count) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetValue( 
            /* [in] */ LONG Index,
            /* [in] */ DATE Value) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Encode( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrBinary) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertEncodeDateArrayVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertEncodeDateArray * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertEncodeDateArray * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertEncodeDateArray * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertEncodeDateArray * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertEncodeDateArray * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertEncodeDateArray * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertEncodeDateArray * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *Decode )( 
            __RPC__in ICertEncodeDateArray * This,
            /* [in] */ __RPC__in const BSTR strBinary);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            __RPC__in ICertEncodeDateArray * This,
            /* [retval][out] */ __RPC__out LONG *pCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetValue )( 
            __RPC__in ICertEncodeDateArray * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out DATE *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in ICertEncodeDateArray * This,
            /* [in] */ LONG Count);
        
        HRESULT ( STDMETHODCALLTYPE *SetValue )( 
            __RPC__in ICertEncodeDateArray * This,
            /* [in] */ LONG Index,
            /* [in] */ DATE Value);
        
        HRESULT ( STDMETHODCALLTYPE *Encode )( 
            __RPC__in ICertEncodeDateArray * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrBinary);
        
        END_INTERFACE
    } ICertEncodeDateArrayVtbl;

    interface ICertEncodeDateArray
    {
        CONST_VTBL struct ICertEncodeDateArrayVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertEncodeDateArray_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertEncodeDateArray_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertEncodeDateArray_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertEncodeDateArray_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertEncodeDateArray_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertEncodeDateArray_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertEncodeDateArray_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertEncodeDateArray_Decode(This,strBinary)	\
    ( (This)->lpVtbl -> Decode(This,strBinary) ) 

#define ICertEncodeDateArray_GetCount(This,pCount)	\
    ( (This)->lpVtbl -> GetCount(This,pCount) ) 

#define ICertEncodeDateArray_GetValue(This,Index,pValue)	\
    ( (This)->lpVtbl -> GetValue(This,Index,pValue) ) 

#define ICertEncodeDateArray_Reset(This,Count)	\
    ( (This)->lpVtbl -> Reset(This,Count) ) 

#define ICertEncodeDateArray_SetValue(This,Index,Value)	\
    ( (This)->lpVtbl -> SetValue(This,Index,Value) ) 

#define ICertEncodeDateArray_Encode(This,pstrBinary)	\
    ( (This)->lpVtbl -> Encode(This,pstrBinary) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertEncodeDateArray_INTERFACE_DEFINED__ */


#ifndef __ICertEncodeCRLDistInfo_INTERFACE_DEFINED__
#define __ICertEncodeCRLDistInfo_INTERFACE_DEFINED__

/* interface ICertEncodeCRLDistInfo */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertEncodeCRLDistInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("01958640-bbff-11d0-8825-00a0c903b83c")
    ICertEncodeCRLDistInfo : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Decode( 
            /* [in] */ __RPC__in const BSTR strBinary) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDistPointCount( 
            /* [retval][out] */ __RPC__out LONG *pDistPointCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNameCount( 
            /* [in] */ LONG DistPointIndex,
            /* [retval][out] */ __RPC__out LONG *pNameCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNameChoice( 
            /* [in] */ LONG DistPointIndex,
            /* [in] */ LONG NameIndex,
            /* [retval][out] */ __RPC__out LONG *pNameChoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetName( 
            /* [in] */ LONG DistPointIndex,
            /* [in] */ LONG NameIndex,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( 
            /* [in] */ LONG DistPointCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNameCount( 
            /* [in] */ LONG DistPointIndex,
            /* [in] */ LONG NameCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNameEntry( 
            /* [in] */ LONG DistPointIndex,
            /* [in] */ LONG NameIndex,
            /* [in] */ LONG NameChoice,
            /* [in] */ __RPC__in const BSTR strName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Encode( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrBinary) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertEncodeCRLDistInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertEncodeCRLDistInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertEncodeCRLDistInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertEncodeCRLDistInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertEncodeCRLDistInfo * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertEncodeCRLDistInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertEncodeCRLDistInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertEncodeCRLDistInfo * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *Decode )( 
            __RPC__in ICertEncodeCRLDistInfo * This,
            /* [in] */ __RPC__in const BSTR strBinary);
        
        HRESULT ( STDMETHODCALLTYPE *GetDistPointCount )( 
            __RPC__in ICertEncodeCRLDistInfo * This,
            /* [retval][out] */ __RPC__out LONG *pDistPointCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetNameCount )( 
            __RPC__in ICertEncodeCRLDistInfo * This,
            /* [in] */ LONG DistPointIndex,
            /* [retval][out] */ __RPC__out LONG *pNameCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetNameChoice )( 
            __RPC__in ICertEncodeCRLDistInfo * This,
            /* [in] */ LONG DistPointIndex,
            /* [in] */ LONG NameIndex,
            /* [retval][out] */ __RPC__out LONG *pNameChoice);
        
        HRESULT ( STDMETHODCALLTYPE *GetName )( 
            __RPC__in ICertEncodeCRLDistInfo * This,
            /* [in] */ LONG DistPointIndex,
            /* [in] */ LONG NameIndex,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrName);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in ICertEncodeCRLDistInfo * This,
            /* [in] */ LONG DistPointCount);
        
        HRESULT ( STDMETHODCALLTYPE *SetNameCount )( 
            __RPC__in ICertEncodeCRLDistInfo * This,
            /* [in] */ LONG DistPointIndex,
            /* [in] */ LONG NameCount);
        
        HRESULT ( STDMETHODCALLTYPE *SetNameEntry )( 
            __RPC__in ICertEncodeCRLDistInfo * This,
            /* [in] */ LONG DistPointIndex,
            /* [in] */ LONG NameIndex,
            /* [in] */ LONG NameChoice,
            /* [in] */ __RPC__in const BSTR strName);
        
        HRESULT ( STDMETHODCALLTYPE *Encode )( 
            __RPC__in ICertEncodeCRLDistInfo * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrBinary);
        
        END_INTERFACE
    } ICertEncodeCRLDistInfoVtbl;

    interface ICertEncodeCRLDistInfo
    {
        CONST_VTBL struct ICertEncodeCRLDistInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertEncodeCRLDistInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertEncodeCRLDistInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertEncodeCRLDistInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertEncodeCRLDistInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertEncodeCRLDistInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertEncodeCRLDistInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertEncodeCRLDistInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertEncodeCRLDistInfo_Decode(This,strBinary)	\
    ( (This)->lpVtbl -> Decode(This,strBinary) ) 

#define ICertEncodeCRLDistInfo_GetDistPointCount(This,pDistPointCount)	\
    ( (This)->lpVtbl -> GetDistPointCount(This,pDistPointCount) ) 

#define ICertEncodeCRLDistInfo_GetNameCount(This,DistPointIndex,pNameCount)	\
    ( (This)->lpVtbl -> GetNameCount(This,DistPointIndex,pNameCount) ) 

#define ICertEncodeCRLDistInfo_GetNameChoice(This,DistPointIndex,NameIndex,pNameChoice)	\
    ( (This)->lpVtbl -> GetNameChoice(This,DistPointIndex,NameIndex,pNameChoice) ) 

#define ICertEncodeCRLDistInfo_GetName(This,DistPointIndex,NameIndex,pstrName)	\
    ( (This)->lpVtbl -> GetName(This,DistPointIndex,NameIndex,pstrName) ) 

#define ICertEncodeCRLDistInfo_Reset(This,DistPointCount)	\
    ( (This)->lpVtbl -> Reset(This,DistPointCount) ) 

#define ICertEncodeCRLDistInfo_SetNameCount(This,DistPointIndex,NameCount)	\
    ( (This)->lpVtbl -> SetNameCount(This,DistPointIndex,NameCount) ) 

#define ICertEncodeCRLDistInfo_SetNameEntry(This,DistPointIndex,NameIndex,NameChoice,strName)	\
    ( (This)->lpVtbl -> SetNameEntry(This,DistPointIndex,NameIndex,NameChoice,strName) ) 

#define ICertEncodeCRLDistInfo_Encode(This,pstrBinary)	\
    ( (This)->lpVtbl -> Encode(This,pstrBinary) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertEncodeCRLDistInfo_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_certenc_0000_0004 */
/* [local] */ 

#define	EAN_NAMEOBJECTID	( 0x80000000 )



extern RPC_IF_HANDLE __MIDL_itf_certenc_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_certenc_0000_0004_v0_0_s_ifspec;

#ifndef __ICertEncodeAltName_INTERFACE_DEFINED__
#define __ICertEncodeAltName_INTERFACE_DEFINED__

/* interface ICertEncodeAltName */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertEncodeAltName;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1c9a8c70-1271-11d1-9bd4-00c04fb683fa")
    ICertEncodeAltName : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Decode( 
            /* [in] */ __RPC__in const BSTR strBinary) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNameCount( 
            /* [retval][out] */ __RPC__out LONG *pNameCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNameChoice( 
            /* [in] */ LONG NameIndex,
            /* [retval][out] */ __RPC__out LONG *pNameChoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetName( 
            /* [in] */ LONG NameIndex,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( 
            /* [in] */ LONG NameCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNameEntry( 
            /* [in] */ LONG NameIndex,
            /* [in] */ LONG NameChoice,
            /* [in] */ __RPC__in const BSTR strName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Encode( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrBinary) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertEncodeAltNameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertEncodeAltName * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertEncodeAltName * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertEncodeAltName * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertEncodeAltName * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertEncodeAltName * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertEncodeAltName * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertEncodeAltName * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *Decode )( 
            __RPC__in ICertEncodeAltName * This,
            /* [in] */ __RPC__in const BSTR strBinary);
        
        HRESULT ( STDMETHODCALLTYPE *GetNameCount )( 
            __RPC__in ICertEncodeAltName * This,
            /* [retval][out] */ __RPC__out LONG *pNameCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetNameChoice )( 
            __RPC__in ICertEncodeAltName * This,
            /* [in] */ LONG NameIndex,
            /* [retval][out] */ __RPC__out LONG *pNameChoice);
        
        HRESULT ( STDMETHODCALLTYPE *GetName )( 
            __RPC__in ICertEncodeAltName * This,
            /* [in] */ LONG NameIndex,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrName);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in ICertEncodeAltName * This,
            /* [in] */ LONG NameCount);
        
        HRESULT ( STDMETHODCALLTYPE *SetNameEntry )( 
            __RPC__in ICertEncodeAltName * This,
            /* [in] */ LONG NameIndex,
            /* [in] */ LONG NameChoice,
            /* [in] */ __RPC__in const BSTR strName);
        
        HRESULT ( STDMETHODCALLTYPE *Encode )( 
            __RPC__in ICertEncodeAltName * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrBinary);
        
        END_INTERFACE
    } ICertEncodeAltNameVtbl;

    interface ICertEncodeAltName
    {
        CONST_VTBL struct ICertEncodeAltNameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertEncodeAltName_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertEncodeAltName_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertEncodeAltName_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertEncodeAltName_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertEncodeAltName_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertEncodeAltName_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertEncodeAltName_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertEncodeAltName_Decode(This,strBinary)	\
    ( (This)->lpVtbl -> Decode(This,strBinary) ) 

#define ICertEncodeAltName_GetNameCount(This,pNameCount)	\
    ( (This)->lpVtbl -> GetNameCount(This,pNameCount) ) 

#define ICertEncodeAltName_GetNameChoice(This,NameIndex,pNameChoice)	\
    ( (This)->lpVtbl -> GetNameChoice(This,NameIndex,pNameChoice) ) 

#define ICertEncodeAltName_GetName(This,NameIndex,pstrName)	\
    ( (This)->lpVtbl -> GetName(This,NameIndex,pstrName) ) 

#define ICertEncodeAltName_Reset(This,NameCount)	\
    ( (This)->lpVtbl -> Reset(This,NameCount) ) 

#define ICertEncodeAltName_SetNameEntry(This,NameIndex,NameChoice,strName)	\
    ( (This)->lpVtbl -> SetNameEntry(This,NameIndex,NameChoice,strName) ) 

#define ICertEncodeAltName_Encode(This,pstrBinary)	\
    ( (This)->lpVtbl -> Encode(This,pstrBinary) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertEncodeAltName_INTERFACE_DEFINED__ */


#ifndef __ICertEncodeBitString_INTERFACE_DEFINED__
#define __ICertEncodeBitString_INTERFACE_DEFINED__

/* interface ICertEncodeBitString */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertEncodeBitString;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6db525be-1278-11d1-9bd4-00c04fb683fa")
    ICertEncodeBitString : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Decode( 
            /* [in] */ __RPC__in const BSTR strBinary) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBitCount( 
            /* [retval][out] */ __RPC__out LONG *pBitCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBitString( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrBitString) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Encode( 
            /* [in] */ LONG BitCount,
            /* [in] */ __RPC__in BSTR strBitString,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrBinary) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertEncodeBitStringVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertEncodeBitString * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertEncodeBitString * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertEncodeBitString * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertEncodeBitString * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertEncodeBitString * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertEncodeBitString * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertEncodeBitString * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *Decode )( 
            __RPC__in ICertEncodeBitString * This,
            /* [in] */ __RPC__in const BSTR strBinary);
        
        HRESULT ( STDMETHODCALLTYPE *GetBitCount )( 
            __RPC__in ICertEncodeBitString * This,
            /* [retval][out] */ __RPC__out LONG *pBitCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetBitString )( 
            __RPC__in ICertEncodeBitString * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrBitString);
        
        HRESULT ( STDMETHODCALLTYPE *Encode )( 
            __RPC__in ICertEncodeBitString * This,
            /* [in] */ LONG BitCount,
            /* [in] */ __RPC__in BSTR strBitString,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrBinary);
        
        END_INTERFACE
    } ICertEncodeBitStringVtbl;

    interface ICertEncodeBitString
    {
        CONST_VTBL struct ICertEncodeBitStringVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertEncodeBitString_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertEncodeBitString_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertEncodeBitString_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertEncodeBitString_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertEncodeBitString_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertEncodeBitString_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertEncodeBitString_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertEncodeBitString_Decode(This,strBinary)	\
    ( (This)->lpVtbl -> Decode(This,strBinary) ) 

#define ICertEncodeBitString_GetBitCount(This,pBitCount)	\
    ( (This)->lpVtbl -> GetBitCount(This,pBitCount) ) 

#define ICertEncodeBitString_GetBitString(This,pstrBitString)	\
    ( (This)->lpVtbl -> GetBitString(This,pstrBitString) ) 

#define ICertEncodeBitString_Encode(This,BitCount,strBitString,pstrBinary)	\
    ( (This)->lpVtbl -> Encode(This,BitCount,strBitString,pstrBinary) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertEncodeBitString_INTERFACE_DEFINED__ */



#ifndef __CERTENCODELib_LIBRARY_DEFINED__
#define __CERTENCODELib_LIBRARY_DEFINED__

/* library CERTENCODELib */
/* [helpstring][version][uuid] */ 


EXTERN_C const IID LIBID_CERTENCODELib;

EXTERN_C const CLSID CLSID_CCertEncodeStringArray;

#ifdef __cplusplus

class DECLSPEC_UUID("19a76fe0-7494-11d0-8816-00a0c903b83c")
CCertEncodeStringArray;
#endif

EXTERN_C const CLSID CLSID_CCertEncodeLongArray;

#ifdef __cplusplus

class DECLSPEC_UUID("4e0680a0-a0a2-11d0-8821-00a0c903b83c")
CCertEncodeLongArray;
#endif

EXTERN_C const CLSID CLSID_CCertEncodeDateArray;

#ifdef __cplusplus

class DECLSPEC_UUID("301f77b0-a470-11d0-8821-00a0c903b83c")
CCertEncodeDateArray;
#endif

EXTERN_C const CLSID CLSID_CCertEncodeCRLDistInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("01fa60a0-bbff-11d0-8825-00a0c903b83c")
CCertEncodeCRLDistInfo;
#endif

EXTERN_C const CLSID CLSID_CCertEncodeAltName;

#ifdef __cplusplus

class DECLSPEC_UUID("1cfc4cda-1271-11d1-9bd4-00c04fb683fa")
CCertEncodeAltName;
#endif

EXTERN_C const CLSID CLSID_CCertEncodeBitString;

#ifdef __cplusplus

class DECLSPEC_UUID("6d6b3cd8-1278-11d1-9bd4-00c04fb683fa")
CCertEncodeBitString;
#endif
#endif /* __CERTENCODELib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\CertCli.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for certcli.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __certcli_h__
#define __certcli_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __ICertGetConfig_FWD_DEFINED__
#define __ICertGetConfig_FWD_DEFINED__
typedef interface ICertGetConfig ICertGetConfig;
#endif 	/* __ICertGetConfig_FWD_DEFINED__ */


#ifndef __ICertConfig_FWD_DEFINED__
#define __ICertConfig_FWD_DEFINED__
typedef interface ICertConfig ICertConfig;
#endif 	/* __ICertConfig_FWD_DEFINED__ */


#ifndef __ICertConfig2_FWD_DEFINED__
#define __ICertConfig2_FWD_DEFINED__
typedef interface ICertConfig2 ICertConfig2;
#endif 	/* __ICertConfig2_FWD_DEFINED__ */


#ifndef __ICertRequest_FWD_DEFINED__
#define __ICertRequest_FWD_DEFINED__
typedef interface ICertRequest ICertRequest;
#endif 	/* __ICertRequest_FWD_DEFINED__ */


#ifndef __ICertRequest2_FWD_DEFINED__
#define __ICertRequest2_FWD_DEFINED__
typedef interface ICertRequest2 ICertRequest2;
#endif 	/* __ICertRequest2_FWD_DEFINED__ */


#ifndef __ICertRequest3_FWD_DEFINED__
#define __ICertRequest3_FWD_DEFINED__
typedef interface ICertRequest3 ICertRequest3;
#endif 	/* __ICertRequest3_FWD_DEFINED__ */


#ifndef __CCertGetConfig_FWD_DEFINED__
#define __CCertGetConfig_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertGetConfig CCertGetConfig;
#else
typedef struct CCertGetConfig CCertGetConfig;
#endif /* __cplusplus */

#endif 	/* __CCertGetConfig_FWD_DEFINED__ */


#ifndef __CCertConfig_FWD_DEFINED__
#define __CCertConfig_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertConfig CCertConfig;
#else
typedef struct CCertConfig CCertConfig;
#endif /* __cplusplus */

#endif 	/* __CCertConfig_FWD_DEFINED__ */


#ifndef __CCertRequest_FWD_DEFINED__
#define __CCertRequest_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertRequest CCertRequest;
#else
typedef struct CCertRequest CCertRequest;
#endif /* __cplusplus */

#endif 	/* __CCertRequest_FWD_DEFINED__ */


#ifndef __CCertServerPolicy_FWD_DEFINED__
#define __CCertServerPolicy_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertServerPolicy CCertServerPolicy;
#else
typedef struct CCertServerPolicy CCertServerPolicy;
#endif /* __cplusplus */

#endif 	/* __CCertServerPolicy_FWD_DEFINED__ */


#ifndef __CCertServerExit_FWD_DEFINED__
#define __CCertServerExit_FWD_DEFINED__

#ifdef __cplusplus
typedef class CCertServerExit CCertServerExit;
#else
typedef struct CCertServerExit CCertServerExit;
#endif /* __cplusplus */

#endif 	/* __CCertServerExit_FWD_DEFINED__ */


/* header files for imported files */
#include "wtypes.h"
#include "certif.h"

#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __ICertGetConfig_INTERFACE_DEFINED__
#define __ICertGetConfig_INTERFACE_DEFINED__

/* interface ICertGetConfig */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertGetConfig;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c7ea09c0-ce17-11d0-8833-00a0c903b83c")
    ICertGetConfig : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetConfig( 
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrOut) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertGetConfigVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertGetConfig * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertGetConfig * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertGetConfig * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertGetConfig * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertGetConfig * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertGetConfig * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertGetConfig * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            __RPC__in ICertGetConfig * This,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrOut);
        
        END_INTERFACE
    } ICertGetConfigVtbl;

    interface ICertGetConfig
    {
        CONST_VTBL struct ICertGetConfigVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertGetConfig_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertGetConfig_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertGetConfig_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertGetConfig_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertGetConfig_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertGetConfig_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertGetConfig_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertGetConfig_GetConfig(This,Flags,pstrOut)	\
    ( (This)->lpVtbl -> GetConfig(This,Flags,pstrOut) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertGetConfig_INTERFACE_DEFINED__ */


#ifndef __ICertConfig_INTERFACE_DEFINED__
#define __ICertConfig_INTERFACE_DEFINED__

/* interface ICertConfig */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertConfig;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("372fce34-4324-11d0-8810-00a0c903b83c")
    ICertConfig : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Reset( 
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out LONG *pCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [retval][out] */ __RPC__out LONG *pIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetField( 
            /* [in] */ __RPC__in const BSTR strFieldName,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConfig( 
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrOut) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertConfigVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertConfig * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertConfig * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertConfig * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertConfig * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertConfig * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertConfig * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertConfig * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in ICertConfig * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out LONG *pCount);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            __RPC__in ICertConfig * This,
            /* [retval][out] */ __RPC__out LONG *pIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetField )( 
            __RPC__in ICertConfig * This,
            /* [in] */ __RPC__in const BSTR strFieldName,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrOut);
        
        HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            __RPC__in ICertConfig * This,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrOut);
        
        END_INTERFACE
    } ICertConfigVtbl;

    interface ICertConfig
    {
        CONST_VTBL struct ICertConfigVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertConfig_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertConfig_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertConfig_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertConfig_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertConfig_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertConfig_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertConfig_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertConfig_Reset(This,Index,pCount)	\
    ( (This)->lpVtbl -> Reset(This,Index,pCount) ) 

#define ICertConfig_Next(This,pIndex)	\
    ( (This)->lpVtbl -> Next(This,pIndex) ) 

#define ICertConfig_GetField(This,strFieldName,pstrOut)	\
    ( (This)->lpVtbl -> GetField(This,strFieldName,pstrOut) ) 

#define ICertConfig_GetConfig(This,Flags,pstrOut)	\
    ( (This)->lpVtbl -> GetConfig(This,Flags,pstrOut) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertConfig_INTERFACE_DEFINED__ */


#ifndef __ICertConfig2_INTERFACE_DEFINED__
#define __ICertConfig2_INTERFACE_DEFINED__

/* interface ICertConfig2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertConfig2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7a18edde-7e78-4163-8ded-78e2c9cee924")
    ICertConfig2 : public ICertConfig
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetSharedFolder( 
            /* [in] */ __RPC__in const BSTR strSharedFolder) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertConfig2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertConfig2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertConfig2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertConfig2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertConfig2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertConfig2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertConfig2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertConfig2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in ICertConfig2 * This,
            /* [in] */ LONG Index,
            /* [retval][out] */ __RPC__out LONG *pCount);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            __RPC__in ICertConfig2 * This,
            /* [retval][out] */ __RPC__out LONG *pIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetField )( 
            __RPC__in ICertConfig2 * This,
            /* [in] */ __RPC__in const BSTR strFieldName,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrOut);
        
        HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            __RPC__in ICertConfig2 * This,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrOut);
        
        HRESULT ( STDMETHODCALLTYPE *SetSharedFolder )( 
            __RPC__in ICertConfig2 * This,
            /* [in] */ __RPC__in const BSTR strSharedFolder);
        
        END_INTERFACE
    } ICertConfig2Vtbl;

    interface ICertConfig2
    {
        CONST_VTBL struct ICertConfig2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertConfig2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertConfig2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertConfig2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertConfig2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertConfig2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertConfig2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertConfig2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertConfig2_Reset(This,Index,pCount)	\
    ( (This)->lpVtbl -> Reset(This,Index,pCount) ) 

#define ICertConfig2_Next(This,pIndex)	\
    ( (This)->lpVtbl -> Next(This,pIndex) ) 

#define ICertConfig2_GetField(This,strFieldName,pstrOut)	\
    ( (This)->lpVtbl -> GetField(This,strFieldName,pstrOut) ) 

#define ICertConfig2_GetConfig(This,Flags,pstrOut)	\
    ( (This)->lpVtbl -> GetConfig(This,Flags,pstrOut) ) 


#define ICertConfig2_SetSharedFolder(This,strSharedFolder)	\
    ( (This)->lpVtbl -> SetSharedFolder(This,strSharedFolder) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertConfig2_INTERFACE_DEFINED__ */


#ifndef __ICertRequest_INTERFACE_DEFINED__
#define __ICertRequest_INTERFACE_DEFINED__

/* interface ICertRequest */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertRequest;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("014e4840-5523-11d0-8812-00a0c903b83c")
    ICertRequest : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Submit( 
            /* [in] */ LONG Flags,
            /* [in] */ __RPC__in const BSTR strRequest,
            /* [in] */ __RPC__in const BSTR strAttributes,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [retval][out] */ __RPC__out LONG *pDisposition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RetrievePending( 
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [retval][out] */ __RPC__out LONG *pDisposition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLastStatus( 
            /* [retval][out] */ __RPC__out LONG *pStatus) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRequestId( 
            /* [retval][out] */ __RPC__out LONG *pRequestId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDispositionMessage( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrDispositionMessage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCACertificate( 
            /* [in] */ LONG fExchangeCertificate,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrCertificate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCertificate( 
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrCertificate) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertRequestVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertRequest * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertRequest * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertRequest * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertRequest * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertRequest * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertRequest * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertRequest * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in ICertRequest * This,
            /* [in] */ LONG Flags,
            /* [in] */ __RPC__in const BSTR strRequest,
            /* [in] */ __RPC__in const BSTR strAttributes,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [retval][out] */ __RPC__out LONG *pDisposition);
        
        HRESULT ( STDMETHODCALLTYPE *RetrievePending )( 
            __RPC__in ICertRequest * This,
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [retval][out] */ __RPC__out LONG *pDisposition);
        
        HRESULT ( STDMETHODCALLTYPE *GetLastStatus )( 
            __RPC__in ICertRequest * This,
            /* [retval][out] */ __RPC__out LONG *pStatus);
        
        HRESULT ( STDMETHODCALLTYPE *GetRequestId )( 
            __RPC__in ICertRequest * This,
            /* [retval][out] */ __RPC__out LONG *pRequestId);
        
        HRESULT ( STDMETHODCALLTYPE *GetDispositionMessage )( 
            __RPC__in ICertRequest * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrDispositionMessage);
        
        HRESULT ( STDMETHODCALLTYPE *GetCACertificate )( 
            __RPC__in ICertRequest * This,
            /* [in] */ LONG fExchangeCertificate,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrCertificate);
        
        HRESULT ( STDMETHODCALLTYPE *GetCertificate )( 
            __RPC__in ICertRequest * This,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrCertificate);
        
        END_INTERFACE
    } ICertRequestVtbl;

    interface ICertRequest
    {
        CONST_VTBL struct ICertRequestVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertRequest_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertRequest_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertRequest_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertRequest_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertRequest_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertRequest_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertRequest_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertRequest_Submit(This,Flags,strRequest,strAttributes,strConfig,pDisposition)	\
    ( (This)->lpVtbl -> Submit(This,Flags,strRequest,strAttributes,strConfig,pDisposition) ) 

#define ICertRequest_RetrievePending(This,RequestId,strConfig,pDisposition)	\
    ( (This)->lpVtbl -> RetrievePending(This,RequestId,strConfig,pDisposition) ) 

#define ICertRequest_GetLastStatus(This,pStatus)	\
    ( (This)->lpVtbl -> GetLastStatus(This,pStatus) ) 

#define ICertRequest_GetRequestId(This,pRequestId)	\
    ( (This)->lpVtbl -> GetRequestId(This,pRequestId) ) 

#define ICertRequest_GetDispositionMessage(This,pstrDispositionMessage)	\
    ( (This)->lpVtbl -> GetDispositionMessage(This,pstrDispositionMessage) ) 

#define ICertRequest_GetCACertificate(This,fExchangeCertificate,strConfig,Flags,pstrCertificate)	\
    ( (This)->lpVtbl -> GetCACertificate(This,fExchangeCertificate,strConfig,Flags,pstrCertificate) ) 

#define ICertRequest_GetCertificate(This,Flags,pstrCertificate)	\
    ( (This)->lpVtbl -> GetCertificate(This,Flags,pstrCertificate) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertRequest_INTERFACE_DEFINED__ */


#ifndef __ICertRequest2_INTERFACE_DEFINED__
#define __ICertRequest2_INTERFACE_DEFINED__

/* interface ICertRequest2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertRequest2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a4772988-4a85-4fa9-824e-b5cf5c16405a")
    ICertRequest2 : public ICertRequest
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetIssuedCertificate( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strSerialNumber,
            /* [retval][out] */ __RPC__out LONG *pDisposition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetErrorMessageText( 
            /* [in] */ LONG hrMessage,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrErrorMessageText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCAProperty( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [in] */ LONG PropIndex,
            /* [in] */ LONG PropType,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__out VARIANT *pvarPropertyValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCAPropertyFlags( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [retval][out] */ __RPC__out LONG *pPropFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCAPropertyDisplayName( 
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrDisplayName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFullResponseProperty( 
            /* [in] */ LONG PropId,
            /* [in] */ LONG PropIndex,
            /* [in] */ LONG PropType,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__out VARIANT *pvarPropertyValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertRequest2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertRequest2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertRequest2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertRequest2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertRequest2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertRequest2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertRequest2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertRequest2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in ICertRequest2 * This,
            /* [in] */ LONG Flags,
            /* [in] */ __RPC__in const BSTR strRequest,
            /* [in] */ __RPC__in const BSTR strAttributes,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [retval][out] */ __RPC__out LONG *pDisposition);
        
        HRESULT ( STDMETHODCALLTYPE *RetrievePending )( 
            __RPC__in ICertRequest2 * This,
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [retval][out] */ __RPC__out LONG *pDisposition);
        
        HRESULT ( STDMETHODCALLTYPE *GetLastStatus )( 
            __RPC__in ICertRequest2 * This,
            /* [retval][out] */ __RPC__out LONG *pStatus);
        
        HRESULT ( STDMETHODCALLTYPE *GetRequestId )( 
            __RPC__in ICertRequest2 * This,
            /* [retval][out] */ __RPC__out LONG *pRequestId);
        
        HRESULT ( STDMETHODCALLTYPE *GetDispositionMessage )( 
            __RPC__in ICertRequest2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrDispositionMessage);
        
        HRESULT ( STDMETHODCALLTYPE *GetCACertificate )( 
            __RPC__in ICertRequest2 * This,
            /* [in] */ LONG fExchangeCertificate,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrCertificate);
        
        HRESULT ( STDMETHODCALLTYPE *GetCertificate )( 
            __RPC__in ICertRequest2 * This,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrCertificate);
        
        HRESULT ( STDMETHODCALLTYPE *GetIssuedCertificate )( 
            __RPC__in ICertRequest2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strSerialNumber,
            /* [retval][out] */ __RPC__out LONG *pDisposition);
        
        HRESULT ( STDMETHODCALLTYPE *GetErrorMessageText )( 
            __RPC__in ICertRequest2 * This,
            /* [in] */ LONG hrMessage,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrErrorMessageText);
        
        HRESULT ( STDMETHODCALLTYPE *GetCAProperty )( 
            __RPC__in ICertRequest2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [in] */ LONG PropIndex,
            /* [in] */ LONG PropType,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__out VARIANT *pvarPropertyValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetCAPropertyFlags )( 
            __RPC__in ICertRequest2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [retval][out] */ __RPC__out LONG *pPropFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetCAPropertyDisplayName )( 
            __RPC__in ICertRequest2 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrDisplayName);
        
        HRESULT ( STDMETHODCALLTYPE *GetFullResponseProperty )( 
            __RPC__in ICertRequest2 * This,
            /* [in] */ LONG PropId,
            /* [in] */ LONG PropIndex,
            /* [in] */ LONG PropType,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__out VARIANT *pvarPropertyValue);
        
        END_INTERFACE
    } ICertRequest2Vtbl;

    interface ICertRequest2
    {
        CONST_VTBL struct ICertRequest2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertRequest2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertRequest2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertRequest2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertRequest2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertRequest2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertRequest2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertRequest2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertRequest2_Submit(This,Flags,strRequest,strAttributes,strConfig,pDisposition)	\
    ( (This)->lpVtbl -> Submit(This,Flags,strRequest,strAttributes,strConfig,pDisposition) ) 

#define ICertRequest2_RetrievePending(This,RequestId,strConfig,pDisposition)	\
    ( (This)->lpVtbl -> RetrievePending(This,RequestId,strConfig,pDisposition) ) 

#define ICertRequest2_GetLastStatus(This,pStatus)	\
    ( (This)->lpVtbl -> GetLastStatus(This,pStatus) ) 

#define ICertRequest2_GetRequestId(This,pRequestId)	\
    ( (This)->lpVtbl -> GetRequestId(This,pRequestId) ) 

#define ICertRequest2_GetDispositionMessage(This,pstrDispositionMessage)	\
    ( (This)->lpVtbl -> GetDispositionMessage(This,pstrDispositionMessage) ) 

#define ICertRequest2_GetCACertificate(This,fExchangeCertificate,strConfig,Flags,pstrCertificate)	\
    ( (This)->lpVtbl -> GetCACertificate(This,fExchangeCertificate,strConfig,Flags,pstrCertificate) ) 

#define ICertRequest2_GetCertificate(This,Flags,pstrCertificate)	\
    ( (This)->lpVtbl -> GetCertificate(This,Flags,pstrCertificate) ) 


#define ICertRequest2_GetIssuedCertificate(This,strConfig,RequestId,strSerialNumber,pDisposition)	\
    ( (This)->lpVtbl -> GetIssuedCertificate(This,strConfig,RequestId,strSerialNumber,pDisposition) ) 

#define ICertRequest2_GetErrorMessageText(This,hrMessage,Flags,pstrErrorMessageText)	\
    ( (This)->lpVtbl -> GetErrorMessageText(This,hrMessage,Flags,pstrErrorMessageText) ) 

#define ICertRequest2_GetCAProperty(This,strConfig,PropId,PropIndex,PropType,Flags,pvarPropertyValue)	\
    ( (This)->lpVtbl -> GetCAProperty(This,strConfig,PropId,PropIndex,PropType,Flags,pvarPropertyValue) ) 

#define ICertRequest2_GetCAPropertyFlags(This,strConfig,PropId,pPropFlags)	\
    ( (This)->lpVtbl -> GetCAPropertyFlags(This,strConfig,PropId,pPropFlags) ) 

#define ICertRequest2_GetCAPropertyDisplayName(This,strConfig,PropId,pstrDisplayName)	\
    ( (This)->lpVtbl -> GetCAPropertyDisplayName(This,strConfig,PropId,pstrDisplayName) ) 

#define ICertRequest2_GetFullResponseProperty(This,PropId,PropIndex,PropType,Flags,pvarPropertyValue)	\
    ( (This)->lpVtbl -> GetFullResponseProperty(This,PropId,PropIndex,PropType,Flags,pvarPropertyValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertRequest2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_certcli_0000_0005 */
/* [local] */ 

typedef 
enum X509EnrollmentAuthFlags
    {	X509AuthNone	= 0,
	X509AuthAnonymous	= 1,
	X509AuthKerberos	= 2,
	X509AuthUsername	= 4,
	X509AuthCertificate	= 8
    } 	X509EnrollmentAuthFlags;



extern RPC_IF_HANDLE __MIDL_itf_certcli_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_certcli_0000_0005_v0_0_s_ifspec;

#ifndef __ICertRequest3_INTERFACE_DEFINED__
#define __ICertRequest3_INTERFACE_DEFINED__

/* interface ICertRequest3 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_ICertRequest3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AFC8F92B-33A2-4861-BF36-2933B7CD67B3")
    ICertRequest3 : public ICertRequest2
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetCredential( 
            /* [in] */ LONG hWnd,
            /* [in] */ X509EnrollmentAuthFlags AuthType,
            /* [in] */ __RPC__in BSTR strCredential,
            /* [in] */ __RPC__in BSTR strPassword) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRequestIdString( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrRequestId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIssuedCertificate2( 
            /* [in] */ __RPC__in BSTR strConfig,
            /* [in] */ __RPC__in BSTR strRequestId,
            /* [in] */ __RPC__in BSTR strSerialNumber,
            /* [retval][out] */ __RPC__out LONG *pDisposition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRefreshPolicy( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICertRequest3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICertRequest3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICertRequest3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ICertRequest3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICertRequest3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ LONG Flags,
            /* [in] */ __RPC__in const BSTR strRequest,
            /* [in] */ __RPC__in const BSTR strAttributes,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [retval][out] */ __RPC__out LONG *pDisposition);
        
        HRESULT ( STDMETHODCALLTYPE *RetrievePending )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [retval][out] */ __RPC__out LONG *pDisposition);
        
        HRESULT ( STDMETHODCALLTYPE *GetLastStatus )( 
            __RPC__in ICertRequest3 * This,
            /* [retval][out] */ __RPC__out LONG *pStatus);
        
        HRESULT ( STDMETHODCALLTYPE *GetRequestId )( 
            __RPC__in ICertRequest3 * This,
            /* [retval][out] */ __RPC__out LONG *pRequestId);
        
        HRESULT ( STDMETHODCALLTYPE *GetDispositionMessage )( 
            __RPC__in ICertRequest3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrDispositionMessage);
        
        HRESULT ( STDMETHODCALLTYPE *GetCACertificate )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ LONG fExchangeCertificate,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrCertificate);
        
        HRESULT ( STDMETHODCALLTYPE *GetCertificate )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrCertificate);
        
        HRESULT ( STDMETHODCALLTYPE *GetIssuedCertificate )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG RequestId,
            /* [in] */ __RPC__in const BSTR strSerialNumber,
            /* [retval][out] */ __RPC__out LONG *pDisposition);
        
        HRESULT ( STDMETHODCALLTYPE *GetErrorMessageText )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ LONG hrMessage,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrErrorMessageText);
        
        HRESULT ( STDMETHODCALLTYPE *GetCAProperty )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [in] */ LONG PropIndex,
            /* [in] */ LONG PropType,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__out VARIANT *pvarPropertyValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetCAPropertyFlags )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [retval][out] */ __RPC__out LONG *pPropFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetCAPropertyDisplayName )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ __RPC__in const BSTR strConfig,
            /* [in] */ LONG PropId,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrDisplayName);
        
        HRESULT ( STDMETHODCALLTYPE *GetFullResponseProperty )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ LONG PropId,
            /* [in] */ LONG PropIndex,
            /* [in] */ LONG PropType,
            /* [in] */ LONG Flags,
            /* [retval][out] */ __RPC__out VARIANT *pvarPropertyValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetCredential )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ LONG hWnd,
            /* [in] */ X509EnrollmentAuthFlags AuthType,
            /* [in] */ __RPC__in BSTR strCredential,
            /* [in] */ __RPC__in BSTR strPassword);
        
        HRESULT ( STDMETHODCALLTYPE *GetRequestIdString )( 
            __RPC__in ICertRequest3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pstrRequestId);
        
        HRESULT ( STDMETHODCALLTYPE *GetIssuedCertificate2 )( 
            __RPC__in ICertRequest3 * This,
            /* [in] */ __RPC__in BSTR strConfig,
            /* [in] */ __RPC__in BSTR strRequestId,
            /* [in] */ __RPC__in BSTR strSerialNumber,
            /* [retval][out] */ __RPC__out LONG *pDisposition);
        
        HRESULT ( STDMETHODCALLTYPE *GetRefreshPolicy )( 
            __RPC__in ICertRequest3 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pValue);
        
        END_INTERFACE
    } ICertRequest3Vtbl;

    interface ICertRequest3
    {
        CONST_VTBL struct ICertRequest3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICertRequest3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICertRequest3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICertRequest3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICertRequest3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICertRequest3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICertRequest3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICertRequest3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICertRequest3_Submit(This,Flags,strRequest,strAttributes,strConfig,pDisposition)	\
    ( (This)->lpVtbl -> Submit(This,Flags,strRequest,strAttributes,strConfig,pDisposition) ) 

#define ICertRequest3_RetrievePending(This,RequestId,strConfig,pDisposition)	\
    ( (This)->lpVtbl -> RetrievePending(This,RequestId,strConfig,pDisposition) ) 

#define ICertRequest3_GetLastStatus(This,pStatus)	\
    ( (This)->lpVtbl -> GetLastStatus(This,pStatus) ) 

#define ICertRequest3_GetRequestId(This,pRequestId)	\
    ( (This)->lpVtbl -> GetRequestId(This,pRequestId) ) 

#define ICertRequest3_GetDispositionMessage(This,pstrDispositionMessage)	\
    ( (This)->lpVtbl -> GetDispositionMessage(This,pstrDispositionMessage) ) 

#define ICertRequest3_GetCACertificate(This,fExchangeCertificate,strConfig,Flags,pstrCertificate)	\
    ( (This)->lpVtbl -> GetCACertificate(This,fExchangeCertificate,strConfig,Flags,pstrCertificate) ) 

#define ICertRequest3_GetCertificate(This,Flags,pstrCertificate)	\
    ( (This)->lpVtbl -> GetCertificate(This,Flags,pstrCertificate) ) 


#define ICertRequest3_GetIssuedCertificate(This,strConfig,RequestId,strSerialNumber,pDisposition)	\
    ( (This)->lpVtbl -> GetIssuedCertificate(This,strConfig,RequestId,strSerialNumber,pDisposition) ) 

#define ICertRequest3_GetErrorMessageText(This,hrMessage,Flags,pstrErrorMessageText)	\
    ( (This)->lpVtbl -> GetErrorMessageText(This,hrMessage,Flags,pstrErrorMessageText) ) 

#define ICertRequest3_GetCAProperty(This,strConfig,PropId,PropIndex,PropType,Flags,pvarPropertyValue)	\
    ( (This)->lpVtbl -> GetCAProperty(This,strConfig,PropId,PropIndex,PropType,Flags,pvarPropertyValue) ) 

#define ICertRequest3_GetCAPropertyFlags(This,strConfig,PropId,pPropFlags)	\
    ( (This)->lpVtbl -> GetCAPropertyFlags(This,strConfig,PropId,pPropFlags) ) 

#define ICertRequest3_GetCAPropertyDisplayName(This,strConfig,PropId,pstrDisplayName)	\
    ( (This)->lpVtbl -> GetCAPropertyDisplayName(This,strConfig,PropId,pstrDisplayName) ) 

#define ICertRequest3_GetFullResponseProperty(This,PropId,PropIndex,PropType,Flags,pvarPropertyValue)	\
    ( (This)->lpVtbl -> GetFullResponseProperty(This,PropId,PropIndex,PropType,Flags,pvarPropertyValue) ) 


#define ICertRequest3_SetCredential(This,hWnd,AuthType,strCredential,strPassword)	\
    ( (This)->lpVtbl -> SetCredential(This,hWnd,AuthType,strCredential,strPassword) ) 

#define ICertRequest3_GetRequestIdString(This,pstrRequestId)	\
    ( (This)->lpVtbl -> GetRequestIdString(This,pstrRequestId) ) 

#define ICertRequest3_GetIssuedCertificate2(This,strConfig,strRequestId,strSerialNumber,pDisposition)	\
    ( (This)->lpVtbl -> GetIssuedCertificate2(This,strConfig,strRequestId,strSerialNumber,pDisposition) ) 

#define ICertRequest3_GetRefreshPolicy(This,pValue)	\
    ( (This)->lpVtbl -> GetRefreshPolicy(This,pValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICertRequest3_INTERFACE_DEFINED__ */



#ifndef __CERTCLIENTLib_LIBRARY_DEFINED__
#define __CERTCLIENTLib_LIBRARY_DEFINED__

/* library CERTCLIENTLib */
/* [helpstring][version][uuid] */ 

#define wszCONFIG_COMMONNAME 		L"CommonName"
#define wszCONFIG_ORGUNIT 		L"OrgUnit"
#define wszCONFIG_ORGANIZATION 		L"Organization"
#define wszCONFIG_LOCALITY 		L"Locality"
#define wszCONFIG_STATE			L"State"
#define wszCONFIG_COUNTRY		L"Country"
#define wszCONFIG_CONFIG		L"Config"
#define wszCONFIG_EXCHANGECERTIFICATE	L"ExchangeCertificate"
#define wszCONFIG_SIGNATURECERTIFICATE	L"SignatureCertificate"
#define wszCONFIG_DESCRIPTION		L"Description"
#define wszCONFIG_COMMENT		L"Comment" // obsolete: use Description
#define wszCONFIG_SERVER 		L"Server"
#define wszCONFIG_AUTHORITY 		L"Authority"
#define wszCONFIG_SANITIZEDNAME		L"SanitizedName"
#define wszCONFIG_SHORTNAME		L"ShortName"
#define wszCONFIG_SANITIZEDSHORTNAME	L"SanitizedShortName"
#define wszCONFIG_FLAGS			L"Flags"
#define wszCONFIG_WEBENROLLMENTSERVERS	L"WebEnrollmentServers"
#define	CAIF_DSENTRY	( 0x1 )

#define	CAIF_SHAREDFOLDERENTRY	( 0x2 )

#define	CAIF_REGISTRY	( 0x4 )

#define	CAIF_LOCAL	( 0x8 )

#define	CAIF_REGISTRYPARENT	( 0x10 )

#define	CR_IN_BASE64HEADER	( 0 )

#define	CR_IN_BASE64	( 0x1 )

#define	CR_IN_BINARY	( 0x2 )

#define	CR_IN_ENCODEANY	( 0xff )

#define	CR_IN_ENCODEMASK	( 0xff )

#define	CR_IN_FORMATANY	( 0 )

#define	CR_IN_PKCS10	( 0x100 )

#define	CR_IN_KEYGEN	( 0x200 )

#define	CR_IN_PKCS7	( 0x300 )

#define	CR_IN_CMC	( 0x400 )

#define	CR_IN_FORMATMASK	( 0xff00 )

#define	CR_IN_RPC	( 0x20000 )

#define	CR_IN_FULLRESPONSE	( 0x40000 )

#define	CR_IN_CRLS	( 0x80000 )

#define	CR_IN_MACHINE	( 0x100000 )

#define	CR_IN_ROBO	( 0x200000 )

#define	CR_IN_CLIENTIDNONE	( 0x400000 )

#define	CR_IN_CONNECTONLY	( 0x800000 )

#define	CR_IN_CLIENTFLAGSMASK	( ( ( ( ( CR_IN_ENCODEMASK | CR_IN_RPC )  | CR_IN_MACHINE )  | CR_IN_CLIENTIDNONE )  | CR_IN_CONNECTONLY )  )

#define	CC_DEFAULTCONFIG	( 0 )

#define	CC_UIPICKCONFIG	( 0x1 )

#define	CC_FIRSTCONFIG	( 0x2 )

#define	CC_LOCALCONFIG	( 0x3 )

#define	CC_LOCALACTIVECONFIG	( 0x4 )

#define	CC_UIPICKCONFIGSKIPLOCALCA	( 0x5 )

#define	CR_DISP_INCOMPLETE	( 0 )

#define	CR_DISP_ERROR	( 0x1 )

#define	CR_DISP_DENIED	( 0x2 )

#define	CR_DISP_ISSUED	( 0x3 )

#define	CR_DISP_ISSUED_OUT_OF_BAND	( 0x4 )

#define	CR_DISP_UNDER_SUBMISSION	( 0x5 )

#define	CR_DISP_REVOKED	( 0x6 )

#define	CR_OUT_BASE64HEADER	( 0 )

#define	CR_OUT_BASE64	( 0x1 )

#define	CR_OUT_BINARY	( 0x2 )

#define	CR_OUT_BASE64REQUESTHEADER	( 0x3 )

#define	CR_OUT_HEX	( 0x4 )

#define	CR_OUT_HEXASCII	( 0x5 )

#define	CR_OUT_BASE64X509CRLHEADER	( 0x9 )

#define	CR_OUT_HEXADDR	( 0xa )

#define	CR_OUT_HEXASCIIADDR	( 0xb )

#define	CR_OUT_HEXRAW	( 0xc )

#define	CR_OUT_ENCODEMASK	( 0xff )

#define	CR_OUT_CHAIN	( 0x100 )

#define	CR_OUT_CRLS	( 0x200 )

#define	CR_OUT_NOCRLF	( 0x40000000 )

#define	CR_OUT_NOCR	( 0x80000000 )

#define	CR_GEMT_HRESULT_STRING	( 0x1 )

#define CR_PROP_NONE               0  // Invalid
#define CR_PROP_FILEVERSION        1  // String
#define CR_PROP_PRODUCTVERSION     2  // String
#define CR_PROP_EXITCOUNT          3  // Long

// CR_PROP_EXITCOUNT Elements:
#define CR_PROP_EXITDESCRIPTION    4  // String, Indexed

#define CR_PROP_POLICYDESCRIPTION  5  // String
#define CR_PROP_CANAME             6  // String
#define CR_PROP_SANITIZEDCANAME    7  // String
#define CR_PROP_SHAREDFOLDER       8  // String
#define CR_PROP_PARENTCA           9  // String
#define CR_PROP_CATYPE            10  // Long
#define CR_PROP_CASIGCERTCOUNT    11  // Long

// CR_PROP_CASIGCERTCOUNT Elements:
#define CR_PROP_CASIGCERT         12  // Binary, Indexed

// CR_PROP_CASIGCERTCOUNT Elements:
#define CR_PROP_CASIGCERTCHAIN    13  // Binary, Indexed

#define CR_PROP_CAXCHGCERTCOUNT   14  // Long

// CR_PROP_CAXCHGCERTCOUNT Elements:
#define CR_PROP_CAXCHGCERT        15  // Binary, Indexed

// CR_PROP_CAXCHGCERTCOUNT Elements:
#define CR_PROP_CAXCHGCERTCHAIN   16  // Binary, Indexed

// CR_PROP_CASIGCERTCOUNT Elements:
// Fetch only if CR_PROP_CRLSTATE[i] == CA_DISP_VALID
// May also be available if CR_PROP_CRLSTATE[i] == CA_DISP_INVALID
#define CR_PROP_BASECRL           17  // Binary, Indexed

// CR_PROP_CASIGCERTCOUNT Elements:
// Fetch only if Delta CRLs enabled && CR_PROP_CRLSTATE[i] == CA_DISP_VALID
// May also be available if CR_PROP_CRLSTATE[i] == CA_DISP_INVALID
#define CR_PROP_DELTACRL          18  // Binary, Indexed

// CR_PROP_CASIGCERTCOUNT Elements:
#define CR_PROP_CACERTSTATE       19  // Long, Indexed

// CR_PROP_CASIGCERTCOUNT Elements:
#define CR_PROP_CRLSTATE          20  // Long, Indexed

#define CR_PROP_CAPROPIDMAX       21  // Long
#define CR_PROP_DNSNAME           22  // String
#define CR_PROP_ROLESEPARATIONENABLED 23 // Long
#define CR_PROP_KRACERTUSEDCOUNT  24  // Long
#define CR_PROP_KRACERTCOUNT      25  // Long

// CR_PROP_KRACERTCOUNT Elements:
#define CR_PROP_KRACERT           26  // Binary, Indexed

// CR_PROP_KRACERTCOUNT Elements:
#define CR_PROP_KRACERTSTATE      27  // Long, Indexed

#define CR_PROP_ADVANCEDSERVER    28  // Long
#define CR_PROP_TEMPLATES         29  // String

// CR_PROP_CASIGCERTCOUNT Elements:
// Fetch only if CR_PROP_CRLSTATE[i] == CA_DISP_VALID
#define CR_PROP_BASECRLPUBLISHSTATUS 30  // Long, Indexed

// CR_PROP_CASIGCERTCOUNT Elements:
// Fetch only if Delta CRLs enabled && CR_PROP_CRLSTATE[i] == CA_DISP_VALID
#define CR_PROP_DELTACRLPUBLISHSTATUS 31  // Long, Indexed

// CR_PROP_CASIGCERTCOUNT Elements:
#define CR_PROP_CASIGCERTCRLCHAIN 32  // Binary, Indexed

// CR_PROP_CAXCHGCERTCOUNT Elements:
#define CR_PROP_CAXCHGCERTCRLCHAIN 33 // Binary, Indexed

// CR_PROP_CASIGCERTCOUNT Elements:
#define CR_PROP_CACERTSTATUSCODE  34  // Long, Indexed

// CR_PROP_CASIGCERTCOUNT Elements:
#define CR_PROP_CAFORWARDCROSSCERT 35  // Binary, Indexed

// CR_PROP_CASIGCERTCOUNT Elements:
#define CR_PROP_CABACKWARDCROSSCERT 36  // Binary, Indexed

// CR_PROP_CASIGCERTCOUNT Elements:
#define CR_PROP_CAFORWARDCROSSCERTSTATE 37  // Long, Indexed

// CR_PROP_CASIGCERTCOUNT Elements:
#define CR_PROP_CABACKWARDCROSSCERTSTATE 38  // Long, Indexed

// CR_PROP_CASIGCERTCOUNT Elements:
#define CR_PROP_CACERTVERSION       39  // Long, Indexed
#define CR_PROP_SANITIZEDCASHORTNAME 40  // String

// CR_PROP_CERTCDPURLS Elements:
#define CR_PROP_CERTCDPURLS 41  // String, Indexed

// CR_PROP_CERTAIAURLS Elements:
#define CR_PROP_CERTAIAURLS 42  // String, Indexed

// CR_PROP_CERTAIAOCSPURLS Elements:
#define CR_PROP_CERTAIAOCSPURLS 43  // String, Indexed

// CR_PROP_LOCALENAME Elements:
#define CR_PROP_LOCALENAME 44  // String


#define FR_PROP_NONE                    0  // Invalid
#define FR_PROP_FULLRESPONSE            1  // Binary
#define FR_PROP_STATUSINFOCOUNT         2  // Long

// FR_PROP_STATUSINFOCOUNT Elements:
#define FR_PROP_BODYPARTSTRING          3  // String, Indexed

// FR_PROP_STATUSINFOCOUNT Elements:
#define FR_PROP_STATUS                  4  // Long, Indexed

// FR_PROP_STATUSINFOCOUNT Elements:
#define FR_PROP_STATUSSTRING            5  // String, Indexed

// FR_PROP_STATUSINFOCOUNT Elements:
#define FR_PROP_OTHERINFOCHOICE         6  // Long, Indexed

// FR_PROP_STATUSINFOCOUNT Elements:
#define FR_PROP_FAILINFO                7  // Long, Indexed

// FR_PROP_STATUSINFOCOUNT Elements:
#define FR_PROP_PENDINFOTOKEN           8  // Binary, Indexed

// FR_PROP_STATUSINFOCOUNT Elements:
#define FR_PROP_PENDINFOTIME            9  // Date, Indexed

// FR_PROP_STATUSINFOCOUNT Elements:
#define FR_PROP_ISSUEDCERTIFICATEHASH  10  // Binary, Indexed

// FR_PROP_STATUSINFOCOUNT Elements:
#define FR_PROP_ISSUEDCERTIFICATE      11  // Binary, Indexed

// FR_PROP_STATUSINFOCOUNT Elements:
#define FR_PROP_ISSUEDCERTIFICATECHAIN 12  // Binary, Indexed

// FR_PROP_STATUSINFOCOUNT Elements:
#define FR_PROP_ISSUEDCERTIFICATECRLCHAIN 13  // Binary, Indexed

// FR_PROP_STATUSINFOCOUNT Elements:
#define FR_PROP_ENCRYPTEDKEYHASH	  14  // Binary, Indexed

#define FR_PROP_FULLRESPONSENOPKCS7	  15  // Binary

EXTERN_C const IID LIBID_CERTCLIENTLib;

EXTERN_C const CLSID CLSID_CCertGetConfig;

#ifdef __cplusplus

class DECLSPEC_UUID("c6cc49b0-ce17-11d0-8833-00a0c903b83c")
CCertGetConfig;
#endif

EXTERN_C const CLSID CLSID_CCertConfig;

#ifdef __cplusplus

class DECLSPEC_UUID("372fce38-4324-11d0-8810-00a0c903b83c")
CCertConfig;
#endif

EXTERN_C const CLSID CLSID_CCertRequest;

#ifdef __cplusplus

class DECLSPEC_UUID("98aff3f0-5524-11d0-8812-00a0c903b83c")
CCertRequest;
#endif

EXTERN_C const CLSID CLSID_CCertServerPolicy;

#ifdef __cplusplus

class DECLSPEC_UUID("aa000926-ffbe-11cf-8800-00a0c903b83c")
CCertServerPolicy;
#endif

EXTERN_C const CLSID CLSID_CCertServerExit;

#ifdef __cplusplus

class DECLSPEC_UUID("4c4a5e40-732c-11d0-8816-00a0c903b83c")
CCertServerExit;
#endif
#endif /* __CERTCLIENTLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree64(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\CDOSys.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for cdo.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __cdo_h__
#define __cdo_h__
#include "cdosysstr.h"
#if defined __cplusplus && !defined CDO_NO_NAMESPACE
namespace CDO {
#else
#undef IDataSource
#endif

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IDataSource_FWD_DEFINED__
#define __IDataSource_FWD_DEFINED__
typedef interface IDataSource IDataSource;
#endif 	/* __IDataSource_FWD_DEFINED__ */


#ifndef __IMessage_FWD_DEFINED__
#define __IMessage_FWD_DEFINED__
typedef interface IMessage IMessage;
#endif 	/* __IMessage_FWD_DEFINED__ */


#ifndef __IBodyPart_FWD_DEFINED__
#define __IBodyPart_FWD_DEFINED__
typedef interface IBodyPart IBodyPart;
#endif 	/* __IBodyPart_FWD_DEFINED__ */


#ifndef __IConfiguration_FWD_DEFINED__
#define __IConfiguration_FWD_DEFINED__
typedef interface IConfiguration IConfiguration;
#endif 	/* __IConfiguration_FWD_DEFINED__ */


#ifndef __IMessages_FWD_DEFINED__
#define __IMessages_FWD_DEFINED__
typedef interface IMessages IMessages;
#endif 	/* __IMessages_FWD_DEFINED__ */


#ifndef __IDropDirectory_FWD_DEFINED__
#define __IDropDirectory_FWD_DEFINED__
typedef interface IDropDirectory IDropDirectory;
#endif 	/* __IDropDirectory_FWD_DEFINED__ */


#ifndef __IBodyParts_FWD_DEFINED__
#define __IBodyParts_FWD_DEFINED__
typedef interface IBodyParts IBodyParts;
#endif 	/* __IBodyParts_FWD_DEFINED__ */


#ifndef __ISMTPScriptConnector_FWD_DEFINED__
#define __ISMTPScriptConnector_FWD_DEFINED__
typedef interface ISMTPScriptConnector ISMTPScriptConnector;
#endif 	/* __ISMTPScriptConnector_FWD_DEFINED__ */


#ifndef __INNTPEarlyScriptConnector_FWD_DEFINED__
#define __INNTPEarlyScriptConnector_FWD_DEFINED__
typedef interface INNTPEarlyScriptConnector INNTPEarlyScriptConnector;
#endif 	/* __INNTPEarlyScriptConnector_FWD_DEFINED__ */


#ifndef __INNTPPostScriptConnector_FWD_DEFINED__
#define __INNTPPostScriptConnector_FWD_DEFINED__
typedef interface INNTPPostScriptConnector INNTPPostScriptConnector;
#endif 	/* __INNTPPostScriptConnector_FWD_DEFINED__ */


#ifndef __INNTPFinalScriptConnector_FWD_DEFINED__
#define __INNTPFinalScriptConnector_FWD_DEFINED__
typedef interface INNTPFinalScriptConnector INNTPFinalScriptConnector;
#endif 	/* __INNTPFinalScriptConnector_FWD_DEFINED__ */


#ifndef __ISMTPOnArrival_FWD_DEFINED__
#define __ISMTPOnArrival_FWD_DEFINED__
typedef interface ISMTPOnArrival ISMTPOnArrival;
#endif 	/* __ISMTPOnArrival_FWD_DEFINED__ */


#ifndef __INNTPOnPostEarly_FWD_DEFINED__
#define __INNTPOnPostEarly_FWD_DEFINED__
typedef interface INNTPOnPostEarly INNTPOnPostEarly;
#endif 	/* __INNTPOnPostEarly_FWD_DEFINED__ */


#ifndef __INNTPOnPost_FWD_DEFINED__
#define __INNTPOnPost_FWD_DEFINED__
typedef interface INNTPOnPost INNTPOnPost;
#endif 	/* __INNTPOnPost_FWD_DEFINED__ */


#ifndef __INNTPOnPostFinal_FWD_DEFINED__
#define __INNTPOnPostFinal_FWD_DEFINED__
typedef interface INNTPOnPostFinal INNTPOnPostFinal;
#endif 	/* __INNTPOnPostFinal_FWD_DEFINED__ */


#ifndef __IProxyObject_FWD_DEFINED__
#define __IProxyObject_FWD_DEFINED__
typedef interface IProxyObject IProxyObject;
#endif 	/* __IProxyObject_FWD_DEFINED__ */


#ifndef __IGetInterface_FWD_DEFINED__
#define __IGetInterface_FWD_DEFINED__
typedef interface IGetInterface IGetInterface;
#endif 	/* __IGetInterface_FWD_DEFINED__ */


#ifndef __IBodyParts_FWD_DEFINED__
#define __IBodyParts_FWD_DEFINED__
typedef interface IBodyParts IBodyParts;
#endif 	/* __IBodyParts_FWD_DEFINED__ */


#ifndef __IMessages_FWD_DEFINED__
#define __IMessages_FWD_DEFINED__
typedef interface IMessages IMessages;
#endif 	/* __IMessages_FWD_DEFINED__ */


#ifndef __Message_FWD_DEFINED__
#define __Message_FWD_DEFINED__

#ifdef __cplusplus
typedef class Message Message;
#else
typedef struct Message Message;
#endif /* __cplusplus */

#endif 	/* __Message_FWD_DEFINED__ */


#ifndef __Configuration_FWD_DEFINED__
#define __Configuration_FWD_DEFINED__

#ifdef __cplusplus
typedef class Configuration Configuration;
#else
typedef struct Configuration Configuration;
#endif /* __cplusplus */

#endif 	/* __Configuration_FWD_DEFINED__ */


#ifndef __DropDirectory_FWD_DEFINED__
#define __DropDirectory_FWD_DEFINED__

#ifdef __cplusplus
typedef class DropDirectory DropDirectory;
#else
typedef struct DropDirectory DropDirectory;
#endif /* __cplusplus */

#endif 	/* __DropDirectory_FWD_DEFINED__ */


#ifndef __SMTPConnector_FWD_DEFINED__
#define __SMTPConnector_FWD_DEFINED__

#ifdef __cplusplus
typedef class SMTPConnector SMTPConnector;
#else
typedef struct SMTPConnector SMTPConnector;
#endif /* __cplusplus */

#endif 	/* __SMTPConnector_FWD_DEFINED__ */


#ifndef __NNTPEarlyConnector_FWD_DEFINED__
#define __NNTPEarlyConnector_FWD_DEFINED__

#ifdef __cplusplus
typedef class NNTPEarlyConnector NNTPEarlyConnector;
#else
typedef struct NNTPEarlyConnector NNTPEarlyConnector;
#endif /* __cplusplus */

#endif 	/* __NNTPEarlyConnector_FWD_DEFINED__ */


#ifndef __NNTPPostConnector_FWD_DEFINED__
#define __NNTPPostConnector_FWD_DEFINED__

#ifdef __cplusplus
typedef class NNTPPostConnector NNTPPostConnector;
#else
typedef struct NNTPPostConnector NNTPPostConnector;
#endif /* __cplusplus */

#endif 	/* __NNTPPostConnector_FWD_DEFINED__ */


#ifndef __NNTPFinalConnector_FWD_DEFINED__
#define __NNTPFinalConnector_FWD_DEFINED__

#ifdef __cplusplus
typedef class NNTPFinalConnector NNTPFinalConnector;
#else
typedef struct NNTPFinalConnector NNTPFinalConnector;
#endif /* __cplusplus */

#endif 	/* __NNTPFinalConnector_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#ifndef __cplusplus // X5-101346
typedef interface ADOError ADOError;
typedef interface ADOErrors ADOErrors;
typedef interface _ADOCommand _ADOCommand;
typedef interface _ADOConnection _ADOConnection;
typedef interface _ADORecord _ADORecord;
typedef interface IRecADOFields IRecADOFields;
typedef interface _ADOStream _ADOStream;
typedef interface _ADORecordset _ADORecordset;
typedef interface ADOField ADOField;
typedef interface _ADOField _ADOField;
typedef interface ADOFields ADOFields;
typedef interface _ADOParameter _ADOParameter;
typedef interface ADOParameters ADOParameters;
typedef interface ADOProperty ADOProperty;
typedef interface ADOProperties ADOProperties;
#endif // __cplusplus
#include "adoint.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_cdo_0000_0000 */
/* [local] */ 







typedef /* [helpstring] */ 
enum CdoConfigSource
    {	cdoDefaults	= -1,
	cdoIIS	= 1,
	cdoOutlookExpress	= 2
    } 	CdoConfigSource;

typedef /* [helpstring] */ 
enum CdoDSNOptions
    {	cdoDSNDefault	= 0,
	cdoDSNNever	= 1,
	cdoDSNFailure	= 2,
	cdoDSNSuccess	= 4,
	cdoDSNDelay	= 8,
	cdoDSNSuccessFailOrDelay	= 14
    } 	CdoDSNOptions;

typedef /* [helpstring] */ 
enum CdoEventStatus
    {	cdoRunNextSink	= 0,
	cdoSkipRemainingSinks	= 1
    } 	CdoEventStatus;

typedef /* [helpstring] */ 
enum CdoEventType
    {	cdoSMTPOnArrival	= 1,
	cdoNNTPOnPostEarly	= 2,
	cdoNNTPOnPost	= 3,
	cdoNNTPOnPostFinal	= 4
    } 	CdoEventType;

typedef /* [helpstring] */ 
enum cdoImportanceValues
    {	cdoLow	= 0,
	cdoNormal	= 1,
	cdoHigh	= 2
    } 	cdoImportanceValues;

typedef /* [helpstring] */ 
enum CdoMessageStat
    {	cdoStatSuccess	= 0,
	cdoStatAbortDelivery	= 2,
	cdoStatBadMail	= 3
    } 	CdoMessageStat;

typedef /* [helpstring] */ 
enum CdoMHTMLFlags
    {	cdoSuppressNone	= 0,
	cdoSuppressImages	= 1,
	cdoSuppressBGSounds	= 2,
	cdoSuppressFrames	= 4,
	cdoSuppressObjects	= 8,
	cdoSuppressStyleSheets	= 16,
	cdoSuppressAll	= 31
    } 	CdoMHTMLFlags;

typedef /* [helpstring] */ 
enum CdoNNTPProcessingField
    {	cdoPostMessage	= 1,
	cdoProcessControl	= 2,
	cdoProcessModerator	= 4
    } 	CdoNNTPProcessingField;

typedef /* [helpstring] */ 
enum CdoPostUsing
    {	cdoPostUsingPickup	= 1,
	cdoPostUsingPort	= 2
    } 	CdoPostUsing;

typedef 
enum cdoPriorityValues
    {	cdoPriorityNonUrgent	= -1,
	cdoPriorityNormal	= 0,
	cdoPriorityUrgent	= 1
    } 	cdoPriorityValues;

typedef /* [helpstring] */ 
enum CdoProtocolsAuthentication
    {	cdoAnonymous	= 0,
	cdoBasic	= 1,
	cdoNTLM	= 2
    } 	CdoProtocolsAuthentication;

typedef /* [helpstring] */ 
enum CdoReferenceType
    {	cdoRefTypeId	= 0,
	cdoRefTypeLocation	= 1
    } 	CdoReferenceType;

typedef /* [helpstring] */ 
enum CdoSendUsing
    {	cdoSendUsingPickup	= 1,
	cdoSendUsingPort	= 2
    } 	CdoSendUsing;

typedef /* [helpstring] */ 
enum cdoSensitivityValues
    {	cdoSensitivityNone	= 0,
	cdoPersonal	= 1,
	cdoPrivate	= 2,
	cdoCompanyConfidential	= 3
    } 	cdoSensitivityValues;

typedef /* [helpstring] */ 
enum CdoTimeZoneId
    {	cdoUTC	= 0,
	cdoGMT	= 1,
	cdoSarajevo	= 2,
	cdoParis	= 3,
	cdoBerlin	= 4,
	cdoEasternEurope	= 5,
	cdoPrague	= 6,
	cdoAthens	= 7,
	cdoBrasilia	= 8,
	cdoAtlanticCanada	= 9,
	cdoEastern	= 10,
	cdoCentral	= 11,
	cdoMountain	= 12,
	cdoPacific	= 13,
	cdoAlaska	= 14,
	cdoHawaii	= 15,
	cdoMidwayIsland	= 16,
	cdoWellington	= 17,
	cdoBrisbane	= 18,
	cdoAdelaide	= 19,
	cdoTokyo	= 20,
	cdoSingapore	= 21,
	cdoBangkok	= 22,
	cdoBombay	= 23,
	cdoAbuDhabi	= 24,
	cdoTehran	= 25,
	cdoBaghdad	= 26,
	cdoIsrael	= 27,
	cdoNewfoundland	= 28,
	cdoAzores	= 29,
	cdoMidAtlantic	= 30,
	cdoMonrovia	= 31,
	cdoBuenosAires	= 32,
	cdoCaracas	= 33,
	cdoIndiana	= 34,
	cdoBogota	= 35,
	cdoSaskatchewan	= 36,
	cdoMexicoCity	= 37,
	cdoArizona	= 38,
	cdoEniwetok	= 39,
	cdoFiji	= 40,
	cdoMagadan	= 41,
	cdoHobart	= 42,
	cdoGuam	= 43,
	cdoDarwin	= 44,
	cdoBeijing	= 45,
	cdoAlmaty	= 46,
	cdoIslamabad	= 47,
	cdoKabul	= 48,
	cdoCairo	= 49,
	cdoHarare	= 50,
	cdoMoscow	= 51,
	cdoFloating	= 52,
	cdoCapeVerde	= 53,
	cdoCaucasus	= 54,
	cdoCentralAmerica	= 55,
	cdoEastAfrica	= 56,
	cdoMelbourne	= 57,
	cdoEkaterinburg	= 58,
	cdoHelsinki	= 59,
	cdoGreenland	= 60,
	cdoRangoon	= 61,
	cdoNepal	= 62,
	cdoIrkutsk	= 63,
	cdoKrasnoyarsk	= 64,
	cdoSantiago	= 65,
	cdoSriLanka	= 66,
	cdoTonga	= 67,
	cdoVladivostok	= 68,
	cdoWestCentralAfrica	= 69,
	cdoYakutsk	= 70,
	cdoDhaka	= 71,
	cdoSeoul	= 72,
	cdoPerth	= 73,
	cdoArab	= 74,
	cdoTaipei	= 75,
	cdoSydney2000	= 76,
	cdoChihuahua	= 77,
	cdoCanberraCommonwealthGames2006	= 78,
	cdoAdelaideCommonwealthGames2006	= 79,
	cdoHobartCommonwealthGames2006	= 80,
	cdoTijuana	= 81,
	cdoInvalidTimeZone	= 82
    } 	CdoTimeZoneId;



extern RPC_IF_HANDLE __MIDL_itf_cdo_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_cdo_0000_0000_v0_0_s_ifspec;

#ifndef __IDataSource_INTERFACE_DEFINED__
#define __IDataSource_INTERFACE_DEFINED__

/* interface IDataSource */
/* [unique][helpcontext][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IDataSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000029-8B95-11D1-82DB-00C04FB1625D")
    IDataSource : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SourceClass( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *varSourceClass) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Source( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **varSource) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsDirty( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsDirty) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsDirty( 
            /* [in] */ VARIANT_BOOL varIsDirty) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SourceURL( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *varSourceURL) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveConnection( 
            /* [retval][out] */ __RPC__deref_out_opt _Connection **varActiveConnection) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveToObject( 
            /* [in] */ __RPC__in_opt IUnknown *Source,
            /* [in] */ __RPC__in BSTR InterfaceName) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE OpenObject( 
            /* [in] */ __RPC__in_opt IUnknown *Source,
            /* [in] */ __RPC__in BSTR InterfaceName) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveTo( 
            /* [in] */ __RPC__in BSTR SourceURL,
            /* [defaultvalue][in] */ __RPC__in_opt IDispatch *ActiveConnection,
            /* [optional][in] */ ConnectModeEnum Mode,
            /* [optional][in] */ RecordCreateOptionsEnum CreateOptions,
            /* [optional][in] */ RecordOpenOptionsEnum Options,
            /* [optional][in] */ __RPC__in BSTR UserName,
            /* [optional][in] */ __RPC__in BSTR Password) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [in] */ __RPC__in BSTR SourceURL,
            /* [defaultvalue][in] */ __RPC__in_opt IDispatch *ActiveConnection,
            /* [optional][in] */ ConnectModeEnum Mode,
            /* [defaultvalue][in] */ RecordCreateOptionsEnum CreateOptions,
            /* [optional][in] */ RecordOpenOptionsEnum Options,
            /* [optional][in] */ __RPC__in BSTR UserName,
            /* [optional][in] */ __RPC__in BSTR Password) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveToContainer( 
            /* [in] */ __RPC__in BSTR ContainerURL,
            /* [defaultvalue][in] */ __RPC__in_opt IDispatch *ActiveConnection,
            /* [optional][in] */ ConnectModeEnum Mode,
            /* [optional][in] */ RecordCreateOptionsEnum CreateOptions,
            /* [optional][in] */ RecordOpenOptionsEnum Options,
            /* [optional][in] */ __RPC__in BSTR UserName,
            /* [optional][in] */ __RPC__in BSTR Password) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDataSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IDataSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IDataSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IDataSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IDataSource * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IDataSource * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IDataSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDataSource * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SourceClass )( 
            __RPC__in IDataSource * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *varSourceClass);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            __RPC__in IDataSource * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **varSource);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsDirty )( 
            __RPC__in IDataSource * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pIsDirty);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsDirty )( 
            __RPC__in IDataSource * This,
            /* [in] */ VARIANT_BOOL varIsDirty);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SourceURL )( 
            __RPC__in IDataSource * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *varSourceURL);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveConnection )( 
            __RPC__in IDataSource * This,
            /* [retval][out] */ __RPC__deref_out_opt _Connection **varActiveConnection);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveToObject )( 
            __RPC__in IDataSource * This,
            /* [in] */ __RPC__in_opt IUnknown *Source,
            /* [in] */ __RPC__in BSTR InterfaceName);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OpenObject )( 
            __RPC__in IDataSource * This,
            /* [in] */ __RPC__in_opt IUnknown *Source,
            /* [in] */ __RPC__in BSTR InterfaceName);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveTo )( 
            __RPC__in IDataSource * This,
            /* [in] */ __RPC__in BSTR SourceURL,
            /* [defaultvalue][in] */ __RPC__in_opt IDispatch *ActiveConnection,
            /* [optional][in] */ ConnectModeEnum Mode,
            /* [optional][in] */ RecordCreateOptionsEnum CreateOptions,
            /* [optional][in] */ RecordOpenOptionsEnum Options,
            /* [optional][in] */ __RPC__in BSTR UserName,
            /* [optional][in] */ __RPC__in BSTR Password);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            __RPC__in IDataSource * This,
            /* [in] */ __RPC__in BSTR SourceURL,
            /* [defaultvalue][in] */ __RPC__in_opt IDispatch *ActiveConnection,
            /* [optional][in] */ ConnectModeEnum Mode,
            /* [defaultvalue][in] */ RecordCreateOptionsEnum CreateOptions,
            /* [optional][in] */ RecordOpenOptionsEnum Options,
            /* [optional][in] */ __RPC__in BSTR UserName,
            /* [optional][in] */ __RPC__in BSTR Password);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            __RPC__in IDataSource * This);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveToContainer )( 
            __RPC__in IDataSource * This,
            /* [in] */ __RPC__in BSTR ContainerURL,
            /* [defaultvalue][in] */ __RPC__in_opt IDispatch *ActiveConnection,
            /* [optional][in] */ ConnectModeEnum Mode,
            /* [optional][in] */ RecordCreateOptionsEnum CreateOptions,
            /* [optional][in] */ RecordOpenOptionsEnum Options,
            /* [optional][in] */ __RPC__in BSTR UserName,
            /* [optional][in] */ __RPC__in BSTR Password);
        
        END_INTERFACE
    } IDataSourceVtbl;

    interface IDataSource
    {
        CONST_VTBL struct IDataSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDataSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDataSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDataSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDataSource_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDataSource_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDataSource_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDataSource_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDataSource_get_SourceClass(This,varSourceClass)	\
    ( (This)->lpVtbl -> get_SourceClass(This,varSourceClass) ) 

#define IDataSource_get_Source(This,varSource)	\
    ( (This)->lpVtbl -> get_Source(This,varSource) ) 

#define IDataSource_get_IsDirty(This,pIsDirty)	\
    ( (This)->lpVtbl -> get_IsDirty(This,pIsDirty) ) 

#define IDataSource_put_IsDirty(This,varIsDirty)	\
    ( (This)->lpVtbl -> put_IsDirty(This,varIsDirty) ) 

#define IDataSource_get_SourceURL(This,varSourceURL)	\
    ( (This)->lpVtbl -> get_SourceURL(This,varSourceURL) ) 

#define IDataSource_get_ActiveConnection(This,varActiveConnection)	\
    ( (This)->lpVtbl -> get_ActiveConnection(This,varActiveConnection) ) 

#define IDataSource_SaveToObject(This,Source,InterfaceName)	\
    ( (This)->lpVtbl -> SaveToObject(This,Source,InterfaceName) ) 

#define IDataSource_OpenObject(This,Source,InterfaceName)	\
    ( (This)->lpVtbl -> OpenObject(This,Source,InterfaceName) ) 

#define IDataSource_SaveTo(This,SourceURL,ActiveConnection,Mode,CreateOptions,Options,UserName,Password)	\
    ( (This)->lpVtbl -> SaveTo(This,SourceURL,ActiveConnection,Mode,CreateOptions,Options,UserName,Password) ) 

#define IDataSource_Open(This,SourceURL,ActiveConnection,Mode,CreateOptions,Options,UserName,Password)	\
    ( (This)->lpVtbl -> Open(This,SourceURL,ActiveConnection,Mode,CreateOptions,Options,UserName,Password) ) 

#define IDataSource_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define IDataSource_SaveToContainer(This,ContainerURL,ActiveConnection,Mode,CreateOptions,Options,UserName,Password)	\
    ( (This)->lpVtbl -> SaveToContainer(This,ContainerURL,ActiveConnection,Mode,CreateOptions,Options,UserName,Password) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDataSource_INTERFACE_DEFINED__ */


#ifndef __IMessage_INTERFACE_DEFINED__
#define __IMessage_INTERFACE_DEFINED__

/* interface IMessage */
/* [unique][helpcontext][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IMessage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000020-8B95-11D1-82DB-00C04FB1625D")
    IMessage : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_BCC( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pBCC) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_BCC( 
            /* [in] */ __RPC__in BSTR varBCC) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_CC( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pCC) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_CC( 
            /* [in] */ __RPC__in BSTR varCC) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FollowUpTo( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFollowUpTo) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_FollowUpTo( 
            /* [in] */ __RPC__in BSTR varFollowUpTo) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_From( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFrom) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_From( 
            /* [in] */ __RPC__in BSTR varFrom) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Keywords( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pKeywords) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Keywords( 
            /* [in] */ __RPC__in BSTR varKeywords) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MimeFormatted( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pMimeFormatted) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_MimeFormatted( 
            /* [in] */ VARIANT_BOOL varMimeFormatted) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Newsgroups( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pNewsgroups) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Newsgroups( 
            /* [in] */ __RPC__in BSTR varNewsgroups) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Organization( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pOrganization) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Organization( 
            /* [in] */ __RPC__in BSTR varOrganization) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReceivedTime( 
            /* [retval][out] */ __RPC__out DATE *varReceivedTime) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReplyTo( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pReplyTo) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReplyTo( 
            /* [in] */ __RPC__in BSTR varReplyTo) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DSNOptions( 
            /* [retval][out] */ __RPC__out CdoDSNOptions *pDSNOptions) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DSNOptions( 
            /* [in] */ CdoDSNOptions varDSNOptions) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SentOn( 
            /* [retval][out] */ __RPC__out DATE *varSentOn) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pSubject) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [in] */ __RPC__in BSTR varSubject) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_To( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pTo) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_To( 
            /* [in] */ __RPC__in BSTR varTo) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextBody( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pTextBody) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_TextBody( 
            /* [in] */ __RPC__in BSTR varTextBody) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HTMLBody( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pHTMLBody) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_HTMLBody( 
            /* [in] */ __RPC__in BSTR varHTMLBody) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attachments( 
            /* [retval][out] */ __RPC__deref_out_opt IBodyParts **varAttachments) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sender( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pSender) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Sender( 
            /* [in] */ __RPC__in BSTR varSender) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Configuration( 
            /* [retval][out] */ __RPC__deref_out_opt IConfiguration **pConfiguration) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Configuration( 
            /* [in] */ __RPC__in_opt IConfiguration *varConfiguration) = 0;
        
        virtual /* [helpcontext][helpstring][propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Configuration( 
            /* [in] */ __RPC__in_opt IConfiguration *varConfiguration) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoGenerateTextBody( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pAutoGenerateTextBody) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoGenerateTextBody( 
            /* [in] */ VARIANT_BOOL varAutoGenerateTextBody) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnvelopeFields( 
            /* [retval][out] */ __RPC__deref_out_opt Fields **varEnvelopeFields) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_TextBodyPart( 
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **varTextBodyPart) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HTMLBodyPart( 
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **varHTMLBodyPart) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_BodyPart( 
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **varBodyPart) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DataSource( 
            /* [retval][out] */ __RPC__deref_out_opt IDataSource **varDataSource) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Fields( 
            /* [retval][out] */ __RPC__deref_out_opt Fields **varFields) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_MDNRequested( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pMDNRequested) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_MDNRequested( 
            /* [in] */ VARIANT_BOOL varMDNRequested) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE AddRelatedBodyPart( 
            /* [in] */ __RPC__in BSTR URL,
            /* [in] */ __RPC__in BSTR Reference,
            /* [in] */ CdoReferenceType ReferenceType,
            /* [optional][in] */ __RPC__in BSTR UserName,
            /* [optional][in] */ __RPC__in BSTR Password,
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **ppBody) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE AddAttachment( 
            /* [in] */ __RPC__in BSTR URL,
            /* [optional][in] */ __RPC__in BSTR UserName,
            /* [optional][in] */ __RPC__in BSTR Password,
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **ppBody) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateMHTMLBody( 
            /* [in] */ __RPC__in BSTR URL,
            /* [defaultvalue][in] */ CdoMHTMLFlags Flags,
            /* [optional][in] */ __RPC__in BSTR UserName,
            /* [optional][in] */ __RPC__in BSTR Password) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Forward( 
            /* [retval][out] */ __RPC__deref_out_opt IMessage **ppMsg) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Post( void) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE PostReply( 
            /* [retval][out] */ __RPC__deref_out_opt IMessage **ppMsg) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Reply( 
            /* [retval][out] */ __RPC__deref_out_opt IMessage **ppMsg) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ReplyAll( 
            /* [retval][out] */ __RPC__deref_out_opt IMessage **ppMsg) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Send( void) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetStream( 
            /* [retval][out] */ __RPC__deref_out_opt _Stream **ppStream) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetInterface( 
            /* [in] */ __RPC__in BSTR Interface,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppUnknown) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMessageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMessage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMessage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IMessage * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IMessage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMessage * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BCC )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pBCC);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_BCC )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR varBCC);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CC )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pCC);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CC )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR varCC);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FollowUpTo )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFollowUpTo);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FollowUpTo )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR varFollowUpTo);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_From )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pFrom);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_From )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR varFrom);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Keywords )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pKeywords);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Keywords )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR varKeywords);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MimeFormatted )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pMimeFormatted);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MimeFormatted )( 
            __RPC__in IMessage * This,
            /* [in] */ VARIANT_BOOL varMimeFormatted);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Newsgroups )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pNewsgroups);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Newsgroups )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR varNewsgroups);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Organization )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pOrganization);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Organization )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR varOrganization);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReceivedTime )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__out DATE *varReceivedTime);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReplyTo )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pReplyTo);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReplyTo )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR varReplyTo);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DSNOptions )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__out CdoDSNOptions *pDSNOptions);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DSNOptions )( 
            __RPC__in IMessage * This,
            /* [in] */ CdoDSNOptions varDSNOptions);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SentOn )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__out DATE *varSentOn);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pSubject);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR varSubject);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_To )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pTo);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_To )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR varTo);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextBody )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pTextBody);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TextBody )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR varTextBody);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HTMLBody )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pHTMLBody);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HTMLBody )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR varHTMLBody);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attachments )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt IBodyParts **varAttachments);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sender )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pSender);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Sender )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR varSender);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Configuration )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt IConfiguration **pConfiguration);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Configuration )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in_opt IConfiguration *varConfiguration);
        
        /* [helpcontext][helpstring][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Configuration )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in_opt IConfiguration *varConfiguration);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoGenerateTextBody )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pAutoGenerateTextBody);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoGenerateTextBody )( 
            __RPC__in IMessage * This,
            /* [in] */ VARIANT_BOOL varAutoGenerateTextBody);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnvelopeFields )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt Fields **varEnvelopeFields);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TextBodyPart )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **varTextBodyPart);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HTMLBodyPart )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **varHTMLBodyPart);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BodyPart )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **varBodyPart);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataSource )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt IDataSource **varDataSource);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fields )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt Fields **varFields);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MDNRequested )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pMDNRequested);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MDNRequested )( 
            __RPC__in IMessage * This,
            /* [in] */ VARIANT_BOOL varMDNRequested);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddRelatedBodyPart )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR URL,
            /* [in] */ __RPC__in BSTR Reference,
            /* [in] */ CdoReferenceType ReferenceType,
            /* [optional][in] */ __RPC__in BSTR UserName,
            /* [optional][in] */ __RPC__in BSTR Password,
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **ppBody);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddAttachment )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR URL,
            /* [optional][in] */ __RPC__in BSTR UserName,
            /* [optional][in] */ __RPC__in BSTR Password,
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **ppBody);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CreateMHTMLBody )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR URL,
            /* [defaultvalue][in] */ CdoMHTMLFlags Flags,
            /* [optional][in] */ __RPC__in BSTR UserName,
            /* [optional][in] */ __RPC__in BSTR Password);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Forward )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt IMessage **ppMsg);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Post )( 
            __RPC__in IMessage * This);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *PostReply )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt IMessage **ppMsg);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Reply )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt IMessage **ppMsg);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReplyAll )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt IMessage **ppMsg);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Send )( 
            __RPC__in IMessage * This);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStream )( 
            __RPC__in IMessage * This,
            /* [retval][out] */ __RPC__deref_out_opt _Stream **ppStream);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetInterface )( 
            __RPC__in IMessage * This,
            /* [in] */ __RPC__in BSTR Interface,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppUnknown);
        
        END_INTERFACE
    } IMessageVtbl;

    interface IMessage
    {
        CONST_VTBL struct IMessageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMessage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMessage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMessage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMessage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMessage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMessage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMessage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMessage_get_BCC(This,pBCC)	\
    ( (This)->lpVtbl -> get_BCC(This,pBCC) ) 

#define IMessage_put_BCC(This,varBCC)	\
    ( (This)->lpVtbl -> put_BCC(This,varBCC) ) 

#define IMessage_get_CC(This,pCC)	\
    ( (This)->lpVtbl -> get_CC(This,pCC) ) 

#define IMessage_put_CC(This,varCC)	\
    ( (This)->lpVtbl -> put_CC(This,varCC) ) 

#define IMessage_get_FollowUpTo(This,pFollowUpTo)	\
    ( (This)->lpVtbl -> get_FollowUpTo(This,pFollowUpTo) ) 

#define IMessage_put_FollowUpTo(This,varFollowUpTo)	\
    ( (This)->lpVtbl -> put_FollowUpTo(This,varFollowUpTo) ) 

#define IMessage_get_From(This,pFrom)	\
    ( (This)->lpVtbl -> get_From(This,pFrom) ) 

#define IMessage_put_From(This,varFrom)	\
    ( (This)->lpVtbl -> put_From(This,varFrom) ) 

#define IMessage_get_Keywords(This,pKeywords)	\
    ( (This)->lpVtbl -> get_Keywords(This,pKeywords) ) 

#define IMessage_put_Keywords(This,varKeywords)	\
    ( (This)->lpVtbl -> put_Keywords(This,varKeywords) ) 

#define IMessage_get_MimeFormatted(This,pMimeFormatted)	\
    ( (This)->lpVtbl -> get_MimeFormatted(This,pMimeFormatted) ) 

#define IMessage_put_MimeFormatted(This,varMimeFormatted)	\
    ( (This)->lpVtbl -> put_MimeFormatted(This,varMimeFormatted) ) 

#define IMessage_get_Newsgroups(This,pNewsgroups)	\
    ( (This)->lpVtbl -> get_Newsgroups(This,pNewsgroups) ) 

#define IMessage_put_Newsgroups(This,varNewsgroups)	\
    ( (This)->lpVtbl -> put_Newsgroups(This,varNewsgroups) ) 

#define IMessage_get_Organization(This,pOrganization)	\
    ( (This)->lpVtbl -> get_Organization(This,pOrganization) ) 

#define IMessage_put_Organization(This,varOrganization)	\
    ( (This)->lpVtbl -> put_Organization(This,varOrganization) ) 

#define IMessage_get_ReceivedTime(This,varReceivedTime)	\
    ( (This)->lpVtbl -> get_ReceivedTime(This,varReceivedTime) ) 

#define IMessage_get_ReplyTo(This,pReplyTo)	\
    ( (This)->lpVtbl -> get_ReplyTo(This,pReplyTo) ) 

#define IMessage_put_ReplyTo(This,varReplyTo)	\
    ( (This)->lpVtbl -> put_ReplyTo(This,varReplyTo) ) 

#define IMessage_get_DSNOptions(This,pDSNOptions)	\
    ( (This)->lpVtbl -> get_DSNOptions(This,pDSNOptions) ) 

#define IMessage_put_DSNOptions(This,varDSNOptions)	\
    ( (This)->lpVtbl -> put_DSNOptions(This,varDSNOptions) ) 

#define IMessage_get_SentOn(This,varSentOn)	\
    ( (This)->lpVtbl -> get_SentOn(This,varSentOn) ) 

#define IMessage_get_Subject(This,pSubject)	\
    ( (This)->lpVtbl -> get_Subject(This,pSubject) ) 

#define IMessage_put_Subject(This,varSubject)	\
    ( (This)->lpVtbl -> put_Subject(This,varSubject) ) 

#define IMessage_get_To(This,pTo)	\
    ( (This)->lpVtbl -> get_To(This,pTo) ) 

#define IMessage_put_To(This,varTo)	\
    ( (This)->lpVtbl -> put_To(This,varTo) ) 

#define IMessage_get_TextBody(This,pTextBody)	\
    ( (This)->lpVtbl -> get_TextBody(This,pTextBody) ) 

#define IMessage_put_TextBody(This,varTextBody)	\
    ( (This)->lpVtbl -> put_TextBody(This,varTextBody) ) 

#define IMessage_get_HTMLBody(This,pHTMLBody)	\
    ( (This)->lpVtbl -> get_HTMLBody(This,pHTMLBody) ) 

#define IMessage_put_HTMLBody(This,varHTMLBody)	\
    ( (This)->lpVtbl -> put_HTMLBody(This,varHTMLBody) ) 

#define IMessage_get_Attachments(This,varAttachments)	\
    ( (This)->lpVtbl -> get_Attachments(This,varAttachments) ) 

#define IMessage_get_Sender(This,pSender)	\
    ( (This)->lpVtbl -> get_Sender(This,pSender) ) 

#define IMessage_put_Sender(This,varSender)	\
    ( (This)->lpVtbl -> put_Sender(This,varSender) ) 

#define IMessage_get_Configuration(This,pConfiguration)	\
    ( (This)->lpVtbl -> get_Configuration(This,pConfiguration) ) 

#define IMessage_put_Configuration(This,varConfiguration)	\
    ( (This)->lpVtbl -> put_Configuration(This,varConfiguration) ) 

#define IMessage_putref_Configuration(This,varConfiguration)	\
    ( (This)->lpVtbl -> putref_Configuration(This,varConfiguration) ) 

#define IMessage_get_AutoGenerateTextBody(This,pAutoGenerateTextBody)	\
    ( (This)->lpVtbl -> get_AutoGenerateTextBody(This,pAutoGenerateTextBody) ) 

#define IMessage_put_AutoGenerateTextBody(This,varAutoGenerateTextBody)	\
    ( (This)->lpVtbl -> put_AutoGenerateTextBody(This,varAutoGenerateTextBody) ) 

#define IMessage_get_EnvelopeFields(This,varEnvelopeFields)	\
    ( (This)->lpVtbl -> get_EnvelopeFields(This,varEnvelopeFields) ) 

#define IMessage_get_TextBodyPart(This,varTextBodyPart)	\
    ( (This)->lpVtbl -> get_TextBodyPart(This,varTextBodyPart) ) 

#define IMessage_get_HTMLBodyPart(This,varHTMLBodyPart)	\
    ( (This)->lpVtbl -> get_HTMLBodyPart(This,varHTMLBodyPart) ) 

#define IMessage_get_BodyPart(This,varBodyPart)	\
    ( (This)->lpVtbl -> get_BodyPart(This,varBodyPart) ) 

#define IMessage_get_DataSource(This,varDataSource)	\
    ( (This)->lpVtbl -> get_DataSource(This,varDataSource) ) 

#define IMessage_get_Fields(This,varFields)	\
    ( (This)->lpVtbl -> get_Fields(This,varFields) ) 

#define IMessage_get_MDNRequested(This,pMDNRequested)	\
    ( (This)->lpVtbl -> get_MDNRequested(This,pMDNRequested) ) 

#define IMessage_put_MDNRequested(This,varMDNRequested)	\
    ( (This)->lpVtbl -> put_MDNRequested(This,varMDNRequested) ) 

#define IMessage_AddRelatedBodyPart(This,URL,Reference,ReferenceType,UserName,Password,ppBody)	\
    ( (This)->lpVtbl -> AddRelatedBodyPart(This,URL,Reference,ReferenceType,UserName,Password,ppBody) ) 

#define IMessage_AddAttachment(This,URL,UserName,Password,ppBody)	\
    ( (This)->lpVtbl -> AddAttachment(This,URL,UserName,Password,ppBody) ) 

#define IMessage_CreateMHTMLBody(This,URL,Flags,UserName,Password)	\
    ( (This)->lpVtbl -> CreateMHTMLBody(This,URL,Flags,UserName,Password) ) 

#define IMessage_Forward(This,ppMsg)	\
    ( (This)->lpVtbl -> Forward(This,ppMsg) ) 

#define IMessage_Post(This)	\
    ( (This)->lpVtbl -> Post(This) ) 

#define IMessage_PostReply(This,ppMsg)	\
    ( (This)->lpVtbl -> PostReply(This,ppMsg) ) 

#define IMessage_Reply(This,ppMsg)	\
    ( (This)->lpVtbl -> Reply(This,ppMsg) ) 

#define IMessage_ReplyAll(This,ppMsg)	\
    ( (This)->lpVtbl -> ReplyAll(This,ppMsg) ) 

#define IMessage_Send(This)	\
    ( (This)->lpVtbl -> Send(This) ) 

#define IMessage_GetStream(This,ppStream)	\
    ( (This)->lpVtbl -> GetStream(This,ppStream) ) 

#define IMessage_GetInterface(This,Interface,ppUnknown)	\
    ( (This)->lpVtbl -> GetInterface(This,Interface,ppUnknown) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMessage_INTERFACE_DEFINED__ */


#ifndef __IBodyPart_INTERFACE_DEFINED__
#define __IBodyPart_INTERFACE_DEFINED__

/* interface IBodyPart */
/* [unique][helpcontext][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IBodyPart;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000021-8B95-11D1-82DB-00C04FB1625D")
    IBodyPart : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_BodyParts( 
            /* [retval][out] */ __RPC__deref_out_opt IBodyParts **varBodyParts) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContentTransferEncoding( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pContentTransferEncoding) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ContentTransferEncoding( 
            /* [in] */ __RPC__in BSTR varContentTransferEncoding) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContentMediaType( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pContentMediaType) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ContentMediaType( 
            /* [in] */ __RPC__in BSTR varContentMediaType) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Fields( 
            /* [retval][out] */ __RPC__deref_out_opt Fields **varFields) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Charset( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pCharset) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Charset( 
            /* [in] */ __RPC__in BSTR varCharset) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *varFileName) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DataSource( 
            /* [retval][out] */ __RPC__deref_out_opt IDataSource **varDataSource) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContentClass( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pContentClass) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ContentClass( 
            /* [in] */ __RPC__in BSTR varContentClass) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContentClassName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pContentClassName) = 0;
        
        virtual /* [helpcontext][helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ContentClassName( 
            /* [in] */ __RPC__in BSTR varContentClassName) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **varParent) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE AddBodyPart( 
            /* [defaultvalue][in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **ppPart) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveToFile( 
            /* [in] */ __RPC__in BSTR FileName) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetEncodedContentStream( 
            /* [retval][out] */ __RPC__deref_out_opt _Stream **ppStream) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetDecodedContentStream( 
            /* [retval][out] */ __RPC__deref_out_opt _Stream **ppStream) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetStream( 
            /* [retval][out] */ __RPC__deref_out_opt _Stream **ppStream) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetFieldParameter( 
            /* [in] */ __RPC__in BSTR FieldName,
            /* [in] */ __RPC__in BSTR Parameter,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrValue) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetInterface( 
            /* [in] */ __RPC__in BSTR Interface,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppUnknown) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBodyPartVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBodyPart * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBodyPart * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBodyPart * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IBodyPart * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IBodyPart * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IBodyPart * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IBodyPart * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BodyParts )( 
            __RPC__in IBodyPart * This,
            /* [retval][out] */ __RPC__deref_out_opt IBodyParts **varBodyParts);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTransferEncoding )( 
            __RPC__in IBodyPart * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pContentTransferEncoding);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTransferEncoding )( 
            __RPC__in IBodyPart * This,
            /* [in] */ __RPC__in BSTR varContentTransferEncoding);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ContentMediaType )( 
            __RPC__in IBodyPart * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pContentMediaType);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ContentMediaType )( 
            __RPC__in IBodyPart * This,
            /* [in] */ __RPC__in BSTR varContentMediaType);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fields )( 
            __RPC__in IBodyPart * This,
            /* [retval][out] */ __RPC__deref_out_opt Fields **varFields);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Charset )( 
            __RPC__in IBodyPart * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pCharset);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Charset )( 
            __RPC__in IBodyPart * This,
            /* [in] */ __RPC__in BSTR varCharset);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            __RPC__in IBodyPart * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *varFileName);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataSource )( 
            __RPC__in IBodyPart * This,
            /* [retval][out] */ __RPC__deref_out_opt IDataSource **varDataSource);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ContentClass )( 
            __RPC__in IBodyPart * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pContentClass);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ContentClass )( 
            __RPC__in IBodyPart * This,
            /* [in] */ __RPC__in BSTR varContentClass);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ContentClassName )( 
            __RPC__in IBodyPart * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pContentClassName);
        
        /* [helpcontext][helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ContentClassName )( 
            __RPC__in IBodyPart * This,
            /* [in] */ __RPC__in BSTR varContentClassName);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            __RPC__in IBodyPart * This,
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **varParent);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddBodyPart )( 
            __RPC__in IBodyPart * This,
            /* [defaultvalue][in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **ppPart);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveToFile )( 
            __RPC__in IBodyPart * This,
            /* [in] */ __RPC__in BSTR FileName);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetEncodedContentStream )( 
            __RPC__in IBodyPart * This,
            /* [retval][out] */ __RPC__deref_out_opt _Stream **ppStream);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetDecodedContentStream )( 
            __RPC__in IBodyPart * This,
            /* [retval][out] */ __RPC__deref_out_opt _Stream **ppStream);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetStream )( 
            __RPC__in IBodyPart * This,
            /* [retval][out] */ __RPC__deref_out_opt _Stream **ppStream);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetFieldParameter )( 
            __RPC__in IBodyPart * This,
            /* [in] */ __RPC__in BSTR FieldName,
            /* [in] */ __RPC__in BSTR Parameter,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrValue);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetInterface )( 
            __RPC__in IBodyPart * This,
            /* [in] */ __RPC__in BSTR Interface,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppUnknown);
        
        END_INTERFACE
    } IBodyPartVtbl;

    interface IBodyPart
    {
        CONST_VTBL struct IBodyPartVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBodyPart_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBodyPart_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBodyPart_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBodyPart_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IBodyPart_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IBodyPart_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IBodyPart_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IBodyPart_get_BodyParts(This,varBodyParts)	\
    ( (This)->lpVtbl -> get_BodyParts(This,varBodyParts) ) 

#define IBodyPart_get_ContentTransferEncoding(This,pContentTransferEncoding)	\
    ( (This)->lpVtbl -> get_ContentTransferEncoding(This,pContentTransferEncoding) ) 

#define IBodyPart_put_ContentTransferEncoding(This,varContentTransferEncoding)	\
    ( (This)->lpVtbl -> put_ContentTransferEncoding(This,varContentTransferEncoding) ) 

#define IBodyPart_get_ContentMediaType(This,pContentMediaType)	\
    ( (This)->lpVtbl -> get_ContentMediaType(This,pContentMediaType) ) 

#define IBodyPart_put_ContentMediaType(This,varContentMediaType)	\
    ( (This)->lpVtbl -> put_ContentMediaType(This,varContentMediaType) ) 

#define IBodyPart_get_Fields(This,varFields)	\
    ( (This)->lpVtbl -> get_Fields(This,varFields) ) 

#define IBodyPart_get_Charset(This,pCharset)	\
    ( (This)->lpVtbl -> get_Charset(This,pCharset) ) 

#define IBodyPart_put_Charset(This,varCharset)	\
    ( (This)->lpVtbl -> put_Charset(This,varCharset) ) 

#define IBodyPart_get_FileName(This,varFileName)	\
    ( (This)->lpVtbl -> get_FileName(This,varFileName) ) 

#define IBodyPart_get_DataSource(This,varDataSource)	\
    ( (This)->lpVtbl -> get_DataSource(This,varDataSource) ) 

#define IBodyPart_get_ContentClass(This,pContentClass)	\
    ( (This)->lpVtbl -> get_ContentClass(This,pContentClass) ) 

#define IBodyPart_put_ContentClass(This,varContentClass)	\
    ( (This)->lpVtbl -> put_ContentClass(This,varContentClass) ) 

#define IBodyPart_get_ContentClassName(This,pContentClassName)	\
    ( (This)->lpVtbl -> get_ContentClassName(This,pContentClassName) ) 

#define IBodyPart_put_ContentClassName(This,varContentClassName)	\
    ( (This)->lpVtbl -> put_ContentClassName(This,varContentClassName) ) 

#define IBodyPart_get_Parent(This,varParent)	\
    ( (This)->lpVtbl -> get_Parent(This,varParent) ) 

#define IBodyPart_AddBodyPart(This,Index,ppPart)	\
    ( (This)->lpVtbl -> AddBodyPart(This,Index,ppPart) ) 

#define IBodyPart_SaveToFile(This,FileName)	\
    ( (This)->lpVtbl -> SaveToFile(This,FileName) ) 

#define IBodyPart_GetEncodedContentStream(This,ppStream)	\
    ( (This)->lpVtbl -> GetEncodedContentStream(This,ppStream) ) 

#define IBodyPart_GetDecodedContentStream(This,ppStream)	\
    ( (This)->lpVtbl -> GetDecodedContentStream(This,ppStream) ) 

#define IBodyPart_GetStream(This,ppStream)	\
    ( (This)->lpVtbl -> GetStream(This,ppStream) ) 

#define IBodyPart_GetFieldParameter(This,FieldName,Parameter,pbstrValue)	\
    ( (This)->lpVtbl -> GetFieldParameter(This,FieldName,Parameter,pbstrValue) ) 

#define IBodyPart_GetInterface(This,Interface,ppUnknown)	\
    ( (This)->lpVtbl -> GetInterface(This,Interface,ppUnknown) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBodyPart_INTERFACE_DEFINED__ */


#ifndef __IConfiguration_INTERFACE_DEFINED__
#define __IConfiguration_INTERFACE_DEFINED__

/* interface IConfiguration */
/* [unique][helpcontext][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IConfiguration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000022-8B95-11D1-82DB-00C04FB1625D")
    IConfiguration : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Fields( 
            /* [retval][out] */ __RPC__deref_out_opt Fields **varFields) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ CdoConfigSource LoadFrom,
            /* [optional][in] */ __RPC__in BSTR URL) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetInterface( 
            /* [in] */ __RPC__in BSTR Interface,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppUnknown) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IConfigurationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IConfiguration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IConfiguration * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IConfiguration * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IConfiguration * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IConfiguration * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IConfiguration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IConfiguration * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Fields )( 
            __RPC__in IConfiguration * This,
            /* [retval][out] */ __RPC__deref_out_opt Fields **varFields);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Load )( 
            __RPC__in IConfiguration * This,
            /* [in] */ CdoConfigSource LoadFrom,
            /* [optional][in] */ __RPC__in BSTR URL);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetInterface )( 
            __RPC__in IConfiguration * This,
            /* [in] */ __RPC__in BSTR Interface,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppUnknown);
        
        END_INTERFACE
    } IConfigurationVtbl;

    interface IConfiguration
    {
        CONST_VTBL struct IConfigurationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IConfiguration_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IConfiguration_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IConfiguration_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IConfiguration_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IConfiguration_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IConfiguration_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IConfiguration_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IConfiguration_get_Fields(This,varFields)	\
    ( (This)->lpVtbl -> get_Fields(This,varFields) ) 

#define IConfiguration_Load(This,LoadFrom,URL)	\
    ( (This)->lpVtbl -> Load(This,LoadFrom,URL) ) 

#define IConfiguration_GetInterface(This,Interface,ppUnknown)	\
    ( (This)->lpVtbl -> GetInterface(This,Interface,ppUnknown) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IConfiguration_INTERFACE_DEFINED__ */


#ifndef __IMessages_INTERFACE_DEFINED__
#define __IMessages_INTERFACE_DEFINED__

/* interface IMessages */
/* [unique][helpcontext][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IMessages;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000025-8B95-11D1-82DB-00C04FB1625D")
    IMessages : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            long Index,
            /* [retval][out] */ __RPC__deref_out_opt IMessage **ppMessage) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *varCount) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [in] */ long Index) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteAll( void) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Filename( 
            VARIANT var,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Filename) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMessagesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMessages * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMessages * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMessages * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IMessages * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IMessages * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IMessages * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMessages * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IMessages * This,
            long Index,
            /* [retval][out] */ __RPC__deref_out_opt IMessage **ppMessage);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IMessages * This,
            /* [retval][out] */ __RPC__out long *varCount);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            __RPC__in IMessages * This,
            /* [in] */ long Index);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteAll )( 
            __RPC__in IMessages * This);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IMessages * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Filename )( 
            __RPC__in IMessages * This,
            VARIANT var,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Filename);
        
        END_INTERFACE
    } IMessagesVtbl;

    interface IMessages
    {
        CONST_VTBL struct IMessagesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMessages_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMessages_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMessages_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMessages_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMessages_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMessages_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMessages_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMessages_get_Item(This,Index,ppMessage)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppMessage) ) 

#define IMessages_get_Count(This,varCount)	\
    ( (This)->lpVtbl -> get_Count(This,varCount) ) 

#define IMessages_Delete(This,Index)	\
    ( (This)->lpVtbl -> Delete(This,Index) ) 

#define IMessages_DeleteAll(This)	\
    ( (This)->lpVtbl -> DeleteAll(This) ) 

#define IMessages_get__NewEnum(This,retval)	\
    ( (This)->lpVtbl -> get__NewEnum(This,retval) ) 

#define IMessages_get_Filename(This,var,Filename)	\
    ( (This)->lpVtbl -> get_Filename(This,var,Filename) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMessages_INTERFACE_DEFINED__ */


#ifndef __IDropDirectory_INTERFACE_DEFINED__
#define __IDropDirectory_INTERFACE_DEFINED__

/* interface IDropDirectory */
/* [unique][helpcontext][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IDropDirectory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000024-8B95-11D1-82DB-00C04FB1625D")
    IDropDirectory : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetMessages( 
            /* [optional][in] */ __RPC__in BSTR DirName,
            /* [retval][out] */ __RPC__deref_out_opt IMessages **Msgs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDropDirectoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IDropDirectory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IDropDirectory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IDropDirectory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IDropDirectory * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IDropDirectory * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IDropDirectory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDropDirectory * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetMessages )( 
            __RPC__in IDropDirectory * This,
            /* [optional][in] */ __RPC__in BSTR DirName,
            /* [retval][out] */ __RPC__deref_out_opt IMessages **Msgs);
        
        END_INTERFACE
    } IDropDirectoryVtbl;

    interface IDropDirectory
    {
        CONST_VTBL struct IDropDirectoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDropDirectory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDropDirectory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDropDirectory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDropDirectory_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDropDirectory_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDropDirectory_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDropDirectory_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDropDirectory_GetMessages(This,DirName,Msgs)	\
    ( (This)->lpVtbl -> GetMessages(This,DirName,Msgs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDropDirectory_INTERFACE_DEFINED__ */


#ifndef __IBodyParts_INTERFACE_DEFINED__
#define __IBodyParts_INTERFACE_DEFINED__

/* interface IBodyParts */
/* [unique][helpcontext][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IBodyParts;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000023-8B95-11D1-82DB-00C04FB1625D")
    IBodyParts : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out long *varCount) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **ppBody) = 0;
        
        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [in] */ VARIANT varBP) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteAll( void) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [defaultvalue][in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **ppPart) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBodyPartsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IBodyParts * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IBodyParts * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IBodyParts * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IBodyParts * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IBodyParts * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IBodyParts * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IBodyParts * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IBodyParts * This,
            /* [retval][out] */ __RPC__out long *varCount);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IBodyParts * This,
            /* [in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **ppBody);
        
        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IBodyParts * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            __RPC__in IBodyParts * This,
            /* [in] */ VARIANT varBP);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteAll )( 
            __RPC__in IBodyParts * This);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            __RPC__in IBodyParts * This,
            /* [defaultvalue][in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt IBodyPart **ppPart);
        
        END_INTERFACE
    } IBodyPartsVtbl;

    interface IBodyParts
    {
        CONST_VTBL struct IBodyPartsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBodyParts_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBodyParts_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBodyParts_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBodyParts_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IBodyParts_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IBodyParts_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IBodyParts_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IBodyParts_get_Count(This,varCount)	\
    ( (This)->lpVtbl -> get_Count(This,varCount) ) 

#define IBodyParts_get_Item(This,Index,ppBody)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppBody) ) 

#define IBodyParts_get__NewEnum(This,retval)	\
    ( (This)->lpVtbl -> get__NewEnum(This,retval) ) 

#define IBodyParts_Delete(This,varBP)	\
    ( (This)->lpVtbl -> Delete(This,varBP) ) 

#define IBodyParts_DeleteAll(This)	\
    ( (This)->lpVtbl -> DeleteAll(This) ) 

#define IBodyParts_Add(This,Index,ppPart)	\
    ( (This)->lpVtbl -> Add(This,Index,ppPart) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBodyParts_INTERFACE_DEFINED__ */


#ifndef __ISMTPScriptConnector_INTERFACE_DEFINED__
#define __ISMTPScriptConnector_INTERFACE_DEFINED__

/* interface ISMTPScriptConnector */
/* [hidden][unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_ISMTPScriptConnector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000030-8B95-11D1-82DB-00C04FB1625D")
    ISMTPScriptConnector : public IDispatch
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct ISMTPScriptConnectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ISMTPScriptConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ISMTPScriptConnector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ISMTPScriptConnector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ISMTPScriptConnector * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ISMTPScriptConnector * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ISMTPScriptConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISMTPScriptConnector * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } ISMTPScriptConnectorVtbl;

    interface ISMTPScriptConnector
    {
        CONST_VTBL struct ISMTPScriptConnectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISMTPScriptConnector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISMTPScriptConnector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISMTPScriptConnector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISMTPScriptConnector_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISMTPScriptConnector_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISMTPScriptConnector_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISMTPScriptConnector_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISMTPScriptConnector_INTERFACE_DEFINED__ */


#ifndef __INNTPEarlyScriptConnector_INTERFACE_DEFINED__
#define __INNTPEarlyScriptConnector_INTERFACE_DEFINED__

/* interface INNTPEarlyScriptConnector */
/* [hidden][unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_INNTPEarlyScriptConnector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000034-8B95-11D1-82DB-00C04FB1625D")
    INNTPEarlyScriptConnector : public IDispatch
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct INNTPEarlyScriptConnectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in INNTPEarlyScriptConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in INNTPEarlyScriptConnector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in INNTPEarlyScriptConnector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in INNTPEarlyScriptConnector * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in INNTPEarlyScriptConnector * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in INNTPEarlyScriptConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            INNTPEarlyScriptConnector * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } INNTPEarlyScriptConnectorVtbl;

    interface INNTPEarlyScriptConnector
    {
        CONST_VTBL struct INNTPEarlyScriptConnectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INNTPEarlyScriptConnector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define INNTPEarlyScriptConnector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define INNTPEarlyScriptConnector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define INNTPEarlyScriptConnector_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define INNTPEarlyScriptConnector_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define INNTPEarlyScriptConnector_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define INNTPEarlyScriptConnector_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __INNTPEarlyScriptConnector_INTERFACE_DEFINED__ */


#ifndef __INNTPPostScriptConnector_INTERFACE_DEFINED__
#define __INNTPPostScriptConnector_INTERFACE_DEFINED__

/* interface INNTPPostScriptConnector */
/* [hidden][unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_INNTPPostScriptConnector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000031-8B95-11D1-82DB-00C04FB1625D")
    INNTPPostScriptConnector : public IDispatch
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct INNTPPostScriptConnectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in INNTPPostScriptConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in INNTPPostScriptConnector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in INNTPPostScriptConnector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in INNTPPostScriptConnector * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in INNTPPostScriptConnector * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in INNTPPostScriptConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            INNTPPostScriptConnector * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } INNTPPostScriptConnectorVtbl;

    interface INNTPPostScriptConnector
    {
        CONST_VTBL struct INNTPPostScriptConnectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INNTPPostScriptConnector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define INNTPPostScriptConnector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define INNTPPostScriptConnector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define INNTPPostScriptConnector_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define INNTPPostScriptConnector_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define INNTPPostScriptConnector_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define INNTPPostScriptConnector_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __INNTPPostScriptConnector_INTERFACE_DEFINED__ */


#ifndef __INNTPFinalScriptConnector_INTERFACE_DEFINED__
#define __INNTPFinalScriptConnector_INTERFACE_DEFINED__

/* interface INNTPFinalScriptConnector */
/* [hidden][unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_INNTPFinalScriptConnector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000032-8B95-11D1-82DB-00C04FB1625D")
    INNTPFinalScriptConnector : public IDispatch
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct INNTPFinalScriptConnectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in INNTPFinalScriptConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in INNTPFinalScriptConnector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in INNTPFinalScriptConnector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in INNTPFinalScriptConnector * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in INNTPFinalScriptConnector * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in INNTPFinalScriptConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            INNTPFinalScriptConnector * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } INNTPFinalScriptConnectorVtbl;

    interface INNTPFinalScriptConnector
    {
        CONST_VTBL struct INNTPFinalScriptConnectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INNTPFinalScriptConnector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define INNTPFinalScriptConnector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define INNTPFinalScriptConnector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define INNTPFinalScriptConnector_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define INNTPFinalScriptConnector_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define INNTPFinalScriptConnector_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define INNTPFinalScriptConnector_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __INNTPFinalScriptConnector_INTERFACE_DEFINED__ */


#ifndef __ISMTPOnArrival_INTERFACE_DEFINED__
#define __ISMTPOnArrival_INTERFACE_DEFINED__

/* interface ISMTPOnArrival */
/* [unique][helpcontext][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_ISMTPOnArrival;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000026-8B95-11D1-82DB-00C04FB1625D")
    ISMTPOnArrival : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE OnArrival( 
            /* [in] */ __RPC__in_opt IMessage *Msg,
            /* [out][in] */ __RPC__inout CdoEventStatus *EventStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISMTPOnArrivalVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ISMTPOnArrival * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ISMTPOnArrival * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ISMTPOnArrival * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ISMTPOnArrival * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ISMTPOnArrival * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ISMTPOnArrival * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISMTPOnArrival * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnArrival )( 
            __RPC__in ISMTPOnArrival * This,
            /* [in] */ __RPC__in_opt IMessage *Msg,
            /* [out][in] */ __RPC__inout CdoEventStatus *EventStatus);
        
        END_INTERFACE
    } ISMTPOnArrivalVtbl;

    interface ISMTPOnArrival
    {
        CONST_VTBL struct ISMTPOnArrivalVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISMTPOnArrival_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISMTPOnArrival_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISMTPOnArrival_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISMTPOnArrival_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISMTPOnArrival_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISMTPOnArrival_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISMTPOnArrival_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISMTPOnArrival_OnArrival(This,Msg,EventStatus)	\
    ( (This)->lpVtbl -> OnArrival(This,Msg,EventStatus) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISMTPOnArrival_INTERFACE_DEFINED__ */


#ifndef __INNTPOnPostEarly_INTERFACE_DEFINED__
#define __INNTPOnPostEarly_INTERFACE_DEFINED__

/* interface INNTPOnPostEarly */
/* [unique][helpcontext][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_INNTPOnPostEarly;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000033-8B95-11D1-82DB-00C04FB1625D")
    INNTPOnPostEarly : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE OnPostEarly( 
            /* [in] */ __RPC__in_opt IMessage *Msg,
            /* [out][in] */ __RPC__inout CdoEventStatus *EventStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INNTPOnPostEarlyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in INNTPOnPostEarly * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in INNTPOnPostEarly * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in INNTPOnPostEarly * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in INNTPOnPostEarly * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in INNTPOnPostEarly * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in INNTPOnPostEarly * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            INNTPOnPostEarly * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnPostEarly )( 
            __RPC__in INNTPOnPostEarly * This,
            /* [in] */ __RPC__in_opt IMessage *Msg,
            /* [out][in] */ __RPC__inout CdoEventStatus *EventStatus);
        
        END_INTERFACE
    } INNTPOnPostEarlyVtbl;

    interface INNTPOnPostEarly
    {
        CONST_VTBL struct INNTPOnPostEarlyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INNTPOnPostEarly_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define INNTPOnPostEarly_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define INNTPOnPostEarly_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define INNTPOnPostEarly_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define INNTPOnPostEarly_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define INNTPOnPostEarly_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define INNTPOnPostEarly_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define INNTPOnPostEarly_OnPostEarly(This,Msg,EventStatus)	\
    ( (This)->lpVtbl -> OnPostEarly(This,Msg,EventStatus) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __INNTPOnPostEarly_INTERFACE_DEFINED__ */


#ifndef __INNTPOnPost_INTERFACE_DEFINED__
#define __INNTPOnPost_INTERFACE_DEFINED__

/* interface INNTPOnPost */
/* [unique][helpcontext][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_INNTPOnPost;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000027-8B95-11D1-82DB-00C04FB1625D")
    INNTPOnPost : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE OnPost( 
            /* [in] */ __RPC__in_opt IMessage *Msg,
            /* [out][in] */ __RPC__inout CdoEventStatus *EventStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INNTPOnPostVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in INNTPOnPost * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in INNTPOnPost * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in INNTPOnPost * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in INNTPOnPost * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in INNTPOnPost * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in INNTPOnPost * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            INNTPOnPost * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnPost )( 
            __RPC__in INNTPOnPost * This,
            /* [in] */ __RPC__in_opt IMessage *Msg,
            /* [out][in] */ __RPC__inout CdoEventStatus *EventStatus);
        
        END_INTERFACE
    } INNTPOnPostVtbl;

    interface INNTPOnPost
    {
        CONST_VTBL struct INNTPOnPostVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INNTPOnPost_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define INNTPOnPost_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define INNTPOnPost_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define INNTPOnPost_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define INNTPOnPost_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define INNTPOnPost_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define INNTPOnPost_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define INNTPOnPost_OnPost(This,Msg,EventStatus)	\
    ( (This)->lpVtbl -> OnPost(This,Msg,EventStatus) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __INNTPOnPost_INTERFACE_DEFINED__ */


#ifndef __INNTPOnPostFinal_INTERFACE_DEFINED__
#define __INNTPOnPostFinal_INTERFACE_DEFINED__

/* interface INNTPOnPostFinal */
/* [unique][helpcontext][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_INNTPOnPostFinal;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000028-8B95-11D1-82DB-00C04FB1625D")
    INNTPOnPostFinal : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE OnPostFinal( 
            /* [in] */ __RPC__in_opt IMessage *Msg,
            /* [out][in] */ __RPC__inout CdoEventStatus *EventStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INNTPOnPostFinalVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in INNTPOnPostFinal * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in INNTPOnPostFinal * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in INNTPOnPostFinal * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in INNTPOnPostFinal * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in INNTPOnPostFinal * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in INNTPOnPostFinal * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            INNTPOnPostFinal * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnPostFinal )( 
            __RPC__in INNTPOnPostFinal * This,
            /* [in] */ __RPC__in_opt IMessage *Msg,
            /* [out][in] */ __RPC__inout CdoEventStatus *EventStatus);
        
        END_INTERFACE
    } INNTPOnPostFinalVtbl;

    interface INNTPOnPostFinal
    {
        CONST_VTBL struct INNTPOnPostFinalVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INNTPOnPostFinal_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define INNTPOnPostFinal_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define INNTPOnPostFinal_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define INNTPOnPostFinal_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define INNTPOnPostFinal_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define INNTPOnPostFinal_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define INNTPOnPostFinal_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define INNTPOnPostFinal_OnPostFinal(This,Msg,EventStatus)	\
    ( (This)->lpVtbl -> OnPostFinal(This,Msg,EventStatus) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __INNTPOnPostFinal_INTERFACE_DEFINED__ */


#ifndef __IProxyObject_INTERFACE_DEFINED__
#define __IProxyObject_INTERFACE_DEFINED__

/* interface IProxyObject */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IProxyObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD000083-8B95-11D1-82DB-00C04FB1625D")
    IProxyObject : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Object( 
            /* [out] */ __RPC__deref_out_opt IUnknown **ppParent) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IProxyObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IProxyObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IProxyObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IProxyObject * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Object )( 
            __RPC__in IProxyObject * This,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppParent);
        
        END_INTERFACE
    } IProxyObjectVtbl;

    interface IProxyObject
    {
        CONST_VTBL struct IProxyObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IProxyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IProxyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IProxyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IProxyObject_get_Object(This,ppParent)	\
    ( (This)->lpVtbl -> get_Object(This,ppParent) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IProxyObject_INTERFACE_DEFINED__ */


#ifndef __IGetInterface_INTERFACE_DEFINED__
#define __IGetInterface_INTERFACE_DEFINED__

/* interface IGetInterface */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IGetInterface;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD0ff000-8B95-11D1-82DB-00C04FB1625D")
    IGetInterface : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetInterface( 
            /* [in] */ __RPC__in BSTR Interface,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppUnknown) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInterfaceInner( 
            /* [in] */ __RPC__in BSTR Interface,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppUnknown) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IGetInterfaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IGetInterface * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IGetInterface * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IGetInterface * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInterface )( 
            __RPC__in IGetInterface * This,
            /* [in] */ __RPC__in BSTR Interface,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *GetInterfaceInner )( 
            __RPC__in IGetInterface * This,
            /* [in] */ __RPC__in BSTR Interface,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppUnknown);
        
        END_INTERFACE
    } IGetInterfaceVtbl;

    interface IGetInterface
    {
        CONST_VTBL struct IGetInterfaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IGetInterface_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IGetInterface_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IGetInterface_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IGetInterface_GetInterface(This,Interface,ppUnknown)	\
    ( (This)->lpVtbl -> GetInterface(This,Interface,ppUnknown) ) 

#define IGetInterface_GetInterfaceInner(This,Interface,ppUnknown)	\
    ( (This)->lpVtbl -> GetInterfaceInner(This,Interface,ppUnknown) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IGetInterface_INTERFACE_DEFINED__ */



#ifndef __CDO_LIBRARY_DEFINED__
#define __CDO_LIBRARY_DEFINED__

/* library CDO */
/* [helpstring][helpfile][version][uuid] */ 


















EXTERN_C const IID LIBID_CDO;




/* module CdoCalendar */
/* [dllname] */ 






/* module CdoCharset */
/* [dllname] */ 


























/* module CdoConfiguration */
/* [dllname] */ 






































/* module CdoContentTypeValues */
/* [dllname] */ 
















/* module CdoDAV */
/* [dllname] */ 







/* module CdoEncodingType */
/* [dllname] */ 












/* module CdoExchange */
/* [dllname] */ 






/* module CdoHTTPMail */
/* [dllname] */ 
























/* module CdoInterfaces */
/* [dllname] */ 











/* module CdoMailHeader */
/* [dllname] */ 









































/* module CdoNamespace */
/* [dllname] */ 











/* module CdoNNTPEnvelope */
/* [dllname] */ 







/* module CdoOffice */
/* [dllname] */ 






/* module CdoSMTPEnvelope */
/* [dllname] */ 









#ifndef __CdoErrors_MODULE_DEFINED__
#define __CdoErrors_MODULE_DEFINED__


/* module CdoErrors */
/* [dllname] */ 

const LONG CDO_E_UNCAUGHT_EXCEPTION	=	0x80040201L;

const LONG CDO_E_NOT_OPENED	=	0x80040202L;

const LONG CDO_E_UNSUPPORTED_DATASOURCE	=	0x80040203L;

const LONG CDO_E_INVALID_PROPERTYNAME	=	0x80040204L;

const LONG CDO_E_PROP_UNSUPPORTED	=	0x80040205L;

const LONG CDO_E_INACTIVE	=	0x80040206L;

const LONG CDO_E_NO_SUPPORT_FOR_OBJECTS	=	0x80040207L;

const LONG CDO_E_NOT_AVAILABLE	=	0x80040208L;

const LONG CDO_E_NO_DEFAULT_DROP_DIR	=	0x80040209L;

const LONG CDO_E_SMTP_SERVER_REQUIRED	=	0x8004020aL;

const LONG CDO_E_NNTP_SERVER_REQUIRED	=	0x8004020bL;

const LONG CDO_E_RECIPIENT_MISSING	=	0x8004020cL;

const LONG CDO_E_FROM_MISSING	=	0x8004020dL;

const LONG CDO_E_SENDER_REJECTED	=	0x8004020eL;

const LONG CDO_E_RECIPIENTS_REJECTED	=	0x8004020fL;

const LONG CDO_E_NNTP_POST_FAILED	=	0x80040210L;

const LONG CDO_E_SMTP_SEND_FAILED	=	0x80040211L;

const LONG CDO_E_CONNECTION_DROPPED	=	0x80040212L;

const LONG CDO_E_FAILED_TO_CONNECT	=	0x80040213L;

const LONG CDO_E_INVALID_POST	=	0x80040214L;

const LONG CDO_E_AUTHENTICATION_FAILURE	=	0x80040215L;

const LONG CDO_E_INVALID_CONTENT_TYPE	=	0x80040216L;

const LONG CDO_E_LOGON_FAILURE	=	0x80040217L;

const LONG CDO_E_HTTP_NOT_FOUND	=	0x80040218L;

const LONG CDO_E_HTTP_FORBIDDEN	=	0x80040219L;

const LONG CDO_E_HTTP_FAILED	=	0x8004021aL;

const LONG CDO_E_MULTIPART_NO_DATA	=	0x8004021bL;

const LONG CDO_E_INVALID_ENCODING_FOR_MULTIPART	=	0x8004021cL;

const LONG CDO_E_UNSAFE_OPERATION	=	0x8004021dL;

const LONG CDO_E_PROP_NOT_FOUND	=	0x8004021eL;

const LONG CDO_E_INVALID_SEND_OPTION	=	0x80040220L;

const LONG CDO_E_INVALID_POST_OPTION	=	0x80040221L;

const LONG CDO_E_NO_PICKUP_DIR	=	0x80040222L;

const LONG CDO_E_NOT_ALL_DELETED	=	0x80040223L;

const LONG CDO_E_NO_METHOD	=	0x80040224L;

const LONG CDO_E_PROP_READONLY	=	0x80040227L;

const LONG CDO_E_PROP_CANNOT_DELETE	=	0x80040228L;

const LONG CDO_E_BAD_DATA	=	0x80040229L;

const LONG CDO_E_PROP_NONHEADER	=	0x8004022aL;

const LONG CDO_E_INVALID_CHARSET	=	0x8004022bL;

const LONG CDO_E_ADOSTREAM_NOT_BOUND	=	0x8004022cL;

const LONG CDO_E_CONTENTPROPXML_NOT_FOUND	=	0x8004022dL;

const LONG CDO_E_CONTENTPROPXML_WRONG_CHARSET	=	0x8004022eL;

const LONG CDO_E_CONTENTPROPXML_PARSE_FAILED	=	0x8004022fL;

const LONG CDO_E_CONTENTPROPXML_CONVERT_FAILED	=	0x80040230L;

const LONG CDO_E_NO_DIRECTORIES_SPECIFIED	=	0x80040231L;

const LONG CDO_E_DIRECTORIES_UNREACHABLE	=	0x80040232L;

const LONG CDO_E_BAD_SENDER	=	0x80040233L;

const LONG CDO_E_SELF_BINDING	=	0x80040234L;

const LONG CDO_E_BAD_ATTENDEE_DATA	=	0x80040235L;

const LONG CDO_E_ROLE_NOMORE_AVAILABLE	=	0x80040236L;

const LONG CDO_E_BAD_TASKTYPE_ONASSIGN	=	0x80040237L;

const LONG CDO_E_NOT_ASSIGNEDTO_USER	=	0x80040238L;

const LONG CDO_E_OUTOFDATE	=	0x80040239L;

const LONG CDO_E_ARGUMENT1	=	0x80044000L;

const LONG CDO_E_ARGUMENT2	=	0x80044001L;

const LONG CDO_E_ARGUMENT3	=	0x80044002L;

const LONG CDO_E_ARGUMENT4	=	0x80044003L;

const LONG CDO_E_ARGUMENT5	=	0x80044004L;

const LONG CDO_E_NOT_FOUND	=	0x800cce05L;

const LONG CDO_E_INVALID_ENCODING_TYPE	=	0x800cce1dL;

#endif /* __CdoErrors_MODULE_DEFINED__ */

EXTERN_C const CLSID CLSID_Message;

#ifdef __cplusplus

class DECLSPEC_UUID("CD000001-8B95-11D1-82DB-00C04FB1625D")
Message;
#endif

EXTERN_C const CLSID CLSID_Configuration;

#ifdef __cplusplus

class DECLSPEC_UUID("CD000002-8B95-11D1-82DB-00C04FB1625D")
Configuration;
#endif

EXTERN_C const CLSID CLSID_DropDirectory;

#ifdef __cplusplus

class DECLSPEC_UUID("CD000004-8B95-11D1-82DB-00C04FB1625D")
DropDirectory;
#endif

EXTERN_C const CLSID CLSID_SMTPConnector;

#ifdef __cplusplus

class DECLSPEC_UUID("CD000008-8B95-11D1-82DB-00C04FB1625D")
SMTPConnector;
#endif

EXTERN_C const CLSID CLSID_NNTPEarlyConnector;

#ifdef __cplusplus

class DECLSPEC_UUID("CD000011-8B95-11D1-82DB-00C04FB1625D")
NNTPEarlyConnector;
#endif

EXTERN_C const CLSID CLSID_NNTPPostConnector;

#ifdef __cplusplus

class DECLSPEC_UUID("CD000009-8B95-11D1-82DB-00C04FB1625D")
NNTPPostConnector;
#endif

EXTERN_C const CLSID CLSID_NNTPFinalConnector;

#ifdef __cplusplus

class DECLSPEC_UUID("CD000010-8B95-11D1-82DB-00C04FB1625D")
NNTPFinalConnector;
#endif
#endif /* __CDO_LIBRARY_DEFINED__ */
#if defined __cplusplus && !defined CDO_NO_NAMESPACE
} // namespace CDO
#endif

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree64(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\CertBCli.h ===
//+--------------------------------------------------------------------------
//
// Microsoft Windows
// Copyright (C) Microsoft Corporation, 1996 - 1999
//
// File:        certbcli.h
//
// Contents:    Cert Server backup client APIs
//
//---------------------------------------------------------------------------

#ifdef _CERTBCLI_TYPECHECK
#undef __CERTBCLI_H__	// allow redundant include
#endif

#ifndef __CERTBCLI_H__
#define __CERTBCLI_H__

#ifdef __cplusplus
extern "C" {
#endif

#ifdef	MIDL_PASS
#define	RPC_STRING [string]
#else
#define	RPC_STRING
#endif

#define IN
#define OUT
#define OPTIONAL
#define VOID		void

#define CERTBCLI_CALL	__stdcall

#ifndef _CERTBCLI_DEFINED
#define CERTBCLI_API __declspec(dllimport) CERTBCLI_CALL
#else
#define CERTBCLI_API
#endif

#define szBACKUPANNOTATION   "Cert Server Backup Interface"
#define wszBACKUPANNOTATION  TEXT(szBACKUPANNOTATION)

#define szRESTOREANNOTATION  "Cert Server Restore Interface"
#define wszRESTOREANNOTATION TEXT(szRESTOREANNOTATION)


// Type of Backup passed to CertSrvBackupPrepare:
// CSBACKUP_TYPE_FULL: Requesting backup of the complete DB (DB & Log files)
// CSBACKUP_TYPE_LOGS_ONLY: Requesting backup of only the log files
// CSBACKUP_TYPE_INCREMENTAL: Requesting incremental backup

// CertSrvBackupPrepare flags:
#define CSBACKUP_TYPE_FULL		0x00000001
#define CSBACKUP_TYPE_LOGS_ONLY		0x00000002
//#define CSBACKUP_TYPE_INCREMENTAL	0x00000004	// not yet supported
#define CSBACKUP_TYPE_MASK		0x00000003	// valid flags

// Type of Restore passed to CertSrvRestorePrepare:
// CSRESTORE_TYPE_FULL: Requesting restore of the complete DB (DB & Log files)
// CSRESTORE_TYPE_ONLINE: Restoration is done when Cert Server is online.

#define CSRESTORE_TYPE_FULL		0x00000001	// else incremental
#define CSRESTORE_TYPE_ONLINE		0x00000002	// not yet supported
#define CSRESTORE_TYPE_CATCHUP		0x00000004	// not yet supported
#define CSRESTORE_TYPE_MASK		0x00000005	// valid flags


// Setting the current log # to this value would disable incremental backup
#define CSBACKUP_DISABLE_INCREMENTAL  0xffffffff


// BFT is the bit flag used to represent file types (directory/dit/logfile/etc.)
// We keep them as a character so that we can append/prepend them to the actual
// file path. The code in the Backup API's rely on the fact that values 0-256
// in 8 bit ascii map to the values 0-256 in unicode.

typedef WCHAR CSBFT;


// Bit flags:
//  CSBFT_DIRECTORY               - path specified is a directory
//  CSBFT_DATABASE_DIRECTORY      - that file goes into database directory
//  CSBFT_LOG_DIRECTORY           - that the file goes into log directory

#define	CSBFT_DIRECTORY		    0x80
#define CSBFT_DATABASE_DIRECTORY    0x40
#define	CSBFT_LOG_DIRECTORY	    0x20

// Following combinations are defined for easy use of the filetype and the
// directory into into which it goes

#define	CSBFT_LOG		  ((CSBFT) (TEXT('\x01') | CSBFT_LOG_DIRECTORY))
#define	CSBFT_LOG_DIR		  ((CSBFT) (TEXT('\x02') | CSBFT_DIRECTORY))
#define	CSBFT_CHECKPOINT_DIR	  ((CSBFT) (TEXT('\x03') | CSBFT_DIRECTORY))
#define	CSBFT_CERTSERVER_DATABASE ((CSBFT) (TEXT('\x04') | CSBFT_DATABASE_DIRECTORY))
#define	CSBFT_PATCH_FILE	  ((CSBFT) (TEXT('\x05') | CSBFT_LOG_DIRECTORY))
#define	CSBFT_UNKNOWN		  ((CSBFT) (TEXT('\x0f')))


// Backup Context Handle
typedef void *HCSBC;

#ifndef CSEDB_RSTMAP
typedef struct tagCSEDB_RSTMAPW {
    RPC_STRING WCHAR *pwszDatabaseName;
    RPC_STRING WCHAR *pwszNewDatabaseName;
} CSEDB_RSTMAPW;

#define CSEDB_RSTMAP CSEDB_RSTMAPW
#endif // CSEDB_RSTMAP


// For all the functions in this interface that have at least one string
// parameter, provide macros to invoke the appropriate version of the
// corresponding function.

#define CertSrvIsServerOnline		CertSrvIsServerOnlineW
#define CertSrvBackupGetDynamicFileList	CertSrvBackupGetDynamicFileListW
#define CertSrvBackupPrepare		CertSrvBackupPrepareW
#define CertSrvBackupGetDatabaseNames	CertSrvBackupGetDatabaseNamesW
#define CertSrvBackupOpenFile		CertSrvBackupOpenFileW
#define CertSrvBackupGetBackupLogs	CertSrvBackupGetBackupLogsW

#define CertSrvRestoreGetDatabaseLocations CertSrvRestoreGetDatabaseLocationsW
#define CertSrvRestorePrepare		CertSrvRestorePrepareW
#define CertSrvRestoreRegister		CertSrvRestoreRegisterW

#define CertSrvServerControl		CertSrvServerControlW


//+--------------------------------------------------------------------------
// CertSrvIsServerOnline -- check to see if the Cert Server is Online on the
//	given server. This call is guaranteed to return quickly.
//
// Parameters:
//	[in]  pwszServerName - name or config string of the server to check
//	[out] pfServerOnline - pointer to receive the bool result
//		(TRUE if Cert Server is online; FALSE, otherwise)
// Returns:
//	S_OK if the call executed successfully;
//	Failure code otherwise.
//+--------------------------------------------------------------------------

typedef HRESULT (CERTBCLI_CALL FNCERTSRVISSERVERONLINEW)(
    IN  WCHAR const *pwszServerName,
    OUT BOOL *pfServerOnline);

HRESULT
CERTBCLI_API
CertSrvIsServerOnlineW(
    IN  WCHAR const *pwszServerName,
    OUT BOOL *pfServerOnline);

#ifdef _CERTBCLI_TYPECHECK
FNCERTSRVISSERVERONLINEW *pfnCertSrvIsServerOnline = CertSrvIsServerOnline;
#endif


//+--------------------------------------------------------------------------
// CertSrvBackupGetDynamicFileList -- return the list of dynamic files that
//	need to be backed up in addition to database files.
//
// Parameters:
//	[in]  hbc - backup context handle
//	[out] ppwszzFileList - pointer to receive the pointer to the file list;
//		allocated memory should be freed using CertSrvBackupFree() API
//		by the caller when it is no longer needed; The file list info
//		is an array of null-terminated filenames and the list is
//		terminated by two L'\0's.
//	[out] pcbSize - will receive the number of bytes returned
//
// Returns:
//	S_OK if the call executed successfully;
//	Failure code otherwise.
//---------------------------------------------------------------------------

typedef HRESULT (CERTBCLI_CALL FNCERTSRVBACKUPGETDYNAMICFILELISTW)(
    IN  HCSBC hbc,
    OUT WCHAR **ppwszzFileList,
    OUT DWORD *pcbSize);

HRESULT
CERTBCLI_API
CertSrvBackupGetDynamicFileListW(
    __in IN  HCSBC hbc,
    __deref_out PWSTR *ppwszzFileList,
    __out OUT DWORD *pcbSize);

#ifdef _CERTBCLI_TYPECHECK
FNCERTSRVBACKUPGETDYNAMICFILELISTW *pfnCertSrvBackupGetDynamicFileList = CertSrvBackupGetDynamicFileList;
#endif


//+--------------------------------------------------------------------------
// CertSrvBackupPrepare -- prepare the DB for the online backup and return a
//	Backup Context Handle to be used for subsequent calls to backup
//	functions.
//
// Parameters:
//	[in]  pwszServerName - name or config string of the server to check
//	[in]  grbitJet - flag to be passed to jet while backing up dbs
//	[in]  dwBackupFlags - CSBACKUP_TYPE_FULL or CSBACKUP_TYPE_LOGS_ONLY
//	[out] phbc - pointer that will receive the backup context handle
//
// Returns:
//	S_OK if the call executed successfully;
//	Failure code otherwise.
//---------------------------------------------------------------------------

typedef HRESULT (CERTBCLI_CALL FNCERTSRVBACKUPPREPAREW)(
    IN  WCHAR const *pwszServerName,
    IN  ULONG grbitJet,
    IN  ULONG dwBackupFlags,	// CSBACKUP_TYPE_*
    OUT HCSBC *phbc);

HRESULT
CERTBCLI_API
CertSrvBackupPrepareW(
    IN  WCHAR const *pwszServerName,
    IN  ULONG grbitJet,
    IN  ULONG dwBackupFlags,	// CSBACKUP_TYPE_*
    OUT HCSBC *phbc);

#ifdef _CERTBCLI_TYPECHECK
FNCERTSRVBACKUPPREPAREW *pfnCertSrvBackupPrepare = CertSrvBackupPrepare;
#endif


//+--------------------------------------------------------------------------
// CertSrvBackupGetDatabaseNames -- return the list of data bases that need to
//	be backed up for the given backup context
//
// Parameters:
//	[in]  hbc - backup context handle
//	[out] ppwszzAttachmentInformation - pointer to receive the pointer to
//		the attachment info; allocated memory should be freed using
//		CertSrvBackupFree() API by the caller when it is no longer
//		needed; Attachment info is an array of null-terminated
//		filenames and the list is terminated by two L'\0's.
//	[out] pcbSize - will receive the number of bytes returned
//
// Returns:
//	S_OK if the call executed successfully;
//	Failure code otherwise.
//---------------------------------------------------------------------------

typedef HRESULT (CERTBCLI_CALL FNCERTSRVBACKUPGETDATABASENAMESW)(
    IN  HCSBC hbc,
    OUT WCHAR **ppwszzAttachmentInformation,
    OUT DWORD *pcbSize);

HRESULT
CERTBCLI_API
CertSrvBackupGetDatabaseNamesW(
    __in IN  HCSBC hbc,
    __deref_out PWSTR *ppwszzAttachmentInformation,
    __out OUT DWORD *pcbSize);

#ifdef _CERTBCLI_TYPECHECK
FNCERTSRVBACKUPGETDATABASENAMESW *pfnCertSrvBackupGetDatabaseNames = CertSrvBackupGetDatabaseNames;
#endif


//+--------------------------------------------------------------------------
// CertSrvBackupOpenFile -- open the given attachment for read.
//
// Parameters:
//	[in]  hbc - backup context handle
//	[in]  pwszAttachmentName - name of the attachment to be opened for read
//	[in]  cbReadHintSize - suggested size in bytes that might be used
//		during the subsequent reads on this attachment
//	[out] pliFileSize - pointer to a large integer that would receive the
//		size in bytes of the given attachment
// Returns:
//	S_OK if the call executed successfully;
//	Failure code otherwise.
//---------------------------------------------------------------------------

typedef HRESULT (CERTBCLI_CALL FNCERTSRVBACKUPOPENFILEW)(
    IN  HCSBC hbc,
    IN  WCHAR const *pwszAttachmentName,
    IN  DWORD cbReadHintSize,
    OUT LARGE_INTEGER *pliFileSize);

HRESULT
CERTBCLI_API
CertSrvBackupOpenFileW(
    IN  HCSBC hbc,
    IN  WCHAR const *pwszAttachmentName,
    IN  DWORD cbReadHintSize,
    OUT LARGE_INTEGER *pliFileSize);

#ifdef _CERTBCLI_TYPECHECK
FNCERTSRVBACKUPOPENFILEW *pfnCertSrvBackupOpenFile = CertSrvBackupOpenFile;
#endif


//+--------------------------------------------------------------------------
// CertSrvBackupRead -- read the currently open attachment bytes into the given
//	buffer.  The client application is expected to call this function
//	repeatedly until it gets the entire file (the application would have
//	received the file size through the CertSrvBackupOpenFile call before.
//
// Parameters:
//	[in]  hbc - backup context handle
//	[out] pvBuffer - pointer to the buffer that would receive the read data.
//	[in]  cbBuffer - specifies the size of the above buffer
//	[out] pcbRead - pointer to receive the actual number of bytes read.
//
// Returns:
//	S_OK if the call executed successfully;
//	Failure code otherwise.
//---------------------------------------------------------------------------

typedef HRESULT (CERTBCLI_CALL FNCERTSRVBACKUPREAD)(
    IN  HCSBC hbc,
    OUT VOID *pvBuffer,
    IN  DWORD cbBuffer,
    OUT DWORD *pcbRead);

HRESULT
CERTBCLI_API
CertSrvBackupRead(
    IN  HCSBC hbc,
    OUT VOID *pvBuffer,
    IN  DWORD cbBuffer,
    OUT DWORD *pcbRead);

#ifdef _CERTBCLI_TYPECHECK
FNCERTSRVBACKUPREAD *pfnCertSrvBackupRead = CertSrvBackupRead;
#endif


//+--------------------------------------------------------------------------
// CertSrvBackupClose -- called by the application after it completes reading all
//	the data in the currently opened attachement.
//
// Parameters:
//	[in] hbc - backup context handle
//
// Returns:
//	S_OK if the call executed successfully;
//	Failure code otherwise.
//---------------------------------------------------------------------------

typedef HRESULT (CERTBCLI_CALL FNCERTSRVBACKUPCLOSE)(
    IN HCSBC hbc);

HRESULT
CERTBCLI_API
CertSrvBackupClose(
    IN HCSBC hbc);

#ifdef _CERTBCLI_TYPECHECK
FNCERTSRVBACKUPCLOSE *pfnCertSrvBackupClose = CertSrvBackupClose;
#endif


//+--------------------------------------------------------------------------
// CertSrvBackupGetBackupLogs -- return the list of log files that need to be
//	backed up for the given backup context
//
// Parameters:
//	[in]  hbc - backup context handle
//	[out] pwszzBackupLogFiles - pointer that will receive the pointer to
//		the list of log files; allocated memory should be freed using
//		CertSrvBackupFree() API by the caller when it is no
//		longer needed; Log files are returned in an array of
//		null-terminated filenames and the list is terminated by two
//		L'\0's
//	[out] pcbSize - will receive the number of bytes returned
//
// Returns:
//	S_OK if the call executed successfully;
//	Failure code otherwise.
//---------------------------------------------------------------------------

typedef HRESULT (CERTBCLI_CALL FNCERTSRVBACKUPGETBACKUPLOGSW)(
    IN  HCSBC hbc,
    OUT WCHAR **ppwszzBackupLogFiles,
    OUT DWORD *pcbSize);

HRESULT
CERTBCLI_API
CertSrvBackupGetBackupLogsW(
    __in IN  HCSBC hbc,
    __deref_out PWSTR *ppwszzBackupLogFiles,
    __out OUT DWORD *pcbSize);

#ifdef _CERTBCLI_TYPECHECK
FNCERTSRVBACKUPGETBACKUPLOGSW *pfnCertSrvBackupGetBackupLogs = CertSrvBackupGetBackupLogs;
#endif


//+--------------------------------------------------------------------------
// CertSrvBackupTruncateLogs -- called to truncate the already read backup logs.
//
// Parameters:
//	[in] hbc - backup context handle
//
// Returns:
//	S_OK if the call executed successfully;
//	Failure code otherwise.
//---------------------------------------------------------------------------

typedef HRESULT (CERTBCLI_CALL FNCERTSRVBACKUPTRUNCATELOGS)(
    IN HCSBC hbc);

HRESULT
CERTBCLI_API
CertSrvBackupTruncateLogs(
    IN HCSBC hbc);

#ifdef _CERTBCLI_TYPECHECK
FNCERTSRVBACKUPTRUNCATELOGS *pfnCertSrvBackupTruncateLogs = CertSrvBackupTruncateLogs;
#endif


//+--------------------------------------------------------------------------
// CertSrvBackupEnd -- called to end the current backup session.
//
// Parameters:
//	[in] hbc - backup context handle of the backup session
//
// Returns:
//	S_OK if the call executed successfully;
//	Failure code otherwise.
//---------------------------------------------------------------------------

typedef HRESULT (CERTBCLI_CALL FNCERTSRVBACKUPEND)(
    IN HCSBC hbc);

HRESULT
CERTBCLI_API
CertSrvBackupEnd(
    IN HCSBC hbc);

#ifdef _CERTBCLI_TYPECHECK
FNCERTSRVBACKUPEND *pfnCertSrvBackupEnd = CertSrvBackupEnd;
#endif


//+--------------------------------------------------------------------------
// CertSrvBackupFree -- free any buffer allocated by certbcli.dll APIs.
//
// Parameters:
//	[in] pv - pointer to the buffer that is to be freed.
//
// Returns:
//	None.
//---------------------------------------------------------------------------

typedef VOID (CERTBCLI_CALL FNCERTSRVBACKUPFREE)(
    IN VOID *pv);

VOID
CERTBCLI_API
CertSrvBackupFree(
    IN VOID *pv);

#ifdef _CERTBCLI_TYPECHECK
FNCERTSRVBACKUPFREE *pfnCertSrvBackupFree = CertSrvBackupFree;
#endif


//+--------------------------------------------------------------------------
// CertSrvRestoreGetDatabaseLocations -- called both at backup time as well as
//	at restorate time to get data base locations for different types of
//	files.
//
// Parameters:
//	[in]  hbc - backup context handle which would have been obtained
//		through CertSrvBackupPrepare in the backup case and through
//		CertSrvRestorePrepare in the restore case.
//	[out] ppwszzDatabaseLocationList - pointer that will receive the
//		pointer to the list of database locations; allocated memory
//		should be freed using CertSrvBackupFree() API by the caller
//		when it is no longer needed; locations are returned in an array
//		of null-terminated names and and the list is terminated by
//		two L'\0's.  The first character of each name is the BFT
//		character that indicates the type of the file and the rest of
//		the name tells gives the path into which that particular type
//		of file should be restored.
//	[out] pcbSize - will receive the number of bytes returned
//
// Returns:
//	S_OK if the call executed successfully;
//	Failure code otherwise.
//---------------------------------------------------------------------------

typedef HRESULT (CERTBCLI_CALL FNCERTSRVRESTOREGETDATABASELOCATIONSW)(
    IN  HCSBC hbc,
    OUT WCHAR **ppwszzDatabaseLocationList,
    OUT DWORD *pcbSize);

HRESULT
CERTBCLI_API
CertSrvRestoreGetDatabaseLocationsW(
    __in IN  HCSBC hbc,
    __deref_out PWSTR *ppwszzDatabaseLocationList,
    __out OUT DWORD *pcbSize);

#ifdef _CERTBCLI_TYPECHECK
FNCERTSRVRESTOREGETDATABASELOCATIONSW *pfnCertSrvRestoreGetDatabaseLocations = CertSrvRestoreGetDatabaseLocations;
#endif


//+--------------------------------------------------------------------------
// CertSrvRestorePrepare -- indicate beginning of a restore session.
//
// Parameters:
//	[in]  pwszServerName - name or config string of the server into which
//		the restore operation is going to be performed.
//	[in]  dwRestoreFlags -  Or'ed combination of CSRESTORE_TYPE_* flags;
//		0 if no special flags are to be specified
//	[out] phbc - pointer to receive the backup context handle which is to
//		be passed to the subsequent restore APIs
//
// Returns:
//	S_OK if the call executed successfully;
//	Failure code otherwise.
//---------------------------------------------------------------------------

typedef HRESULT (CERTBCLI_CALL FNCERTSRVRESTOREPREPAREW)(
    IN  WCHAR const *pwszServerName,
    IN  ULONG dwRestoreFlags,
    OUT HCSBC *phbc);

HRESULT
CERTBCLI_API
CertSrvRestorePrepareW(
    IN  WCHAR const *pwszServerName,
    IN  ULONG dwRestoreFlags,		// CSRESTORE_TYPE_*
    OUT