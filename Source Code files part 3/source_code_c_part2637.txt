X_URL_LENGTH]; //Subscrined URL
}
IE4COMPONENT;

typedef IE4COMPONENT *LPIE4COMPONENT;
typedef const IE4COMPONENT *LPCIE4COMPONENT;

//
// The following is the new NT5 component structure. Note that the initial portion of this component exactly
// matches the IE4COMPONENT structure. All new fields are added at the bottom and the dwSize field is used to
// distinguish between IE4COMPONENT and the new COMPONENT structures.
//
typedef struct _tagCOMPONENT
{
    DWORD   dwSize;             //Size of this structure
    DWORD   dwID;               //Reserved: Set it always to zero.
    int     iComponentType;     //One of COMP_TYPE_*
    BOOL    fChecked;           // Is this component enabled?
    BOOL    fDirty;             // Had the component been modified and not yet saved to disk?
    BOOL    fNoScroll;          // Is the component scrollable?
    COMPPOS cpPos;              // Width, height etc.,
    WCHAR   wszFriendlyName[MAX_PATH];          // Friendly name of component.
    WCHAR   wszSource[INTERNET_MAX_URL_LENGTH]; //URL of the component.
    WCHAR   wszSubscribedURL[INTERNET_MAX_URL_LENGTH]; //Subscrined URL

    //New fields are added below. Everything above here must exactly match the IE4COMPONENT Structure.
    DWORD           dwCurItemState; // Current state of the Component.
    COMPSTATEINFO   csiOriginal;    // Original state of the component when it was first added.
    COMPSTATEINFO   csiRestored;    // Restored state of the component.
}
COMPONENT;

typedef COMPONENT *LPCOMPONENT;
typedef const COMPONENT *LPCCOMPONENT;


// Defines for dwCurItemState
#define IS_NORMAL               0x00000001
#define IS_FULLSCREEN           0x00000002
#define IS_SPLIT                0x00000004
#define IS_VALIDSIZESTATEBITS   (IS_NORMAL | IS_SPLIT | IS_FULLSCREEN)  // The set of IS_* state bits which define the "size" of the component - these bits are mutually exclusive.
#define IS_VALIDSTATEBITS       (IS_NORMAL | IS_SPLIT | IS_FULLSCREEN | 0x80000000 | 0x40000000)  // All of the currently defined IS_* bits.

////////////////////////////////////////////
// Flags for IActiveDesktop::ApplyChanges()
#define AD_APPLY_SAVE             0x00000001
#define AD_APPLY_HTMLGEN          0x00000002
#define AD_APPLY_REFRESH          0x00000004
#define AD_APPLY_ALL              (AD_APPLY_SAVE | AD_APPLY_HTMLGEN | AD_APPLY_REFRESH)
#define AD_APPLY_FORCE            0x00000008
#define AD_APPLY_BUFFERED_REFRESH 0x00000010
#define AD_APPLY_DYNAMICREFRESH   0x00000020

////////////////////////////////////////////
// Flags for IActiveDesktop::GetWallpaperOptions()
//           IActiveDesktop::SetWallpaperOptions()
#define WPSTYLE_CENTER      0
#define WPSTYLE_TILE        1
#define WPSTYLE_STRETCH     2
#define WPSTYLE_MAX         3


////////////////////////////////////////////
// Flags for IActiveDesktop::ModifyComponent()

#define COMP_ELEM_TYPE          0x00000001
#define COMP_ELEM_CHECKED       0x00000002
#define COMP_ELEM_DIRTY         0x00000004
#define COMP_ELEM_NOSCROLL      0x00000008
#define COMP_ELEM_POS_LEFT      0x00000010
#define COMP_ELEM_POS_TOP       0x00000020
#define COMP_ELEM_SIZE_WIDTH    0x00000040
#define COMP_ELEM_SIZE_HEIGHT   0x00000080
#define COMP_ELEM_POS_ZINDEX    0x00000100
#define COMP_ELEM_SOURCE        0x00000200
#define COMP_ELEM_FRIENDLYNAME  0x00000400
#define COMP_ELEM_SUBSCRIBEDURL 0x00000800
#define COMP_ELEM_ORIGINAL_CSI  0x00001000
#define COMP_ELEM_RESTORED_CSI  0x00002000
#define COMP_ELEM_CURITEMSTATE  0x00004000

#define COMP_ELEM_ALL   (COMP_ELEM_TYPE | COMP_ELEM_CHECKED | COMP_ELEM_DIRTY |                     \
                         COMP_ELEM_NOSCROLL | COMP_ELEM_POS_LEFT | COMP_ELEM_SIZE_WIDTH  |          \
                         COMP_ELEM_SIZE_HEIGHT | COMP_ELEM_POS_ZINDEX | COMP_ELEM_SOURCE |          \
                         COMP_ELEM_FRIENDLYNAME | COMP_ELEM_POS_TOP | COMP_ELEM_SUBSCRIBEDURL |     \
                         COMP_ELEM_ORIGINAL_CSI | COMP_ELEM_RESTORED_CSI | COMP_ELEM_CURITEMSTATE)


////////////////////////////////////////////
// Flags for IActiveDesktop::AddDesktopItemWithUI()
typedef enum tagDTI_ADTIWUI
{
    DTI_ADDUI_DEFAULT               = 0x00000000,
    DTI_ADDUI_DISPSUBWIZARD         = 0x00000001,
    DTI_ADDUI_POSITIONITEM          = 0x00000002,
};


////////////////////////////////////////////
// Flags for IActiveDesktop::AddUrl()
#define ADDURL_SILENT           0X0001


////////////////////////////////////////////
// Default positions for ADI
#define COMPONENT_DEFAULT_LEFT    (0xFFFF)
#define COMPONENT_DEFAULT_TOP     (0xFFFF)




//
//  Interface for manipulating the Active Desktop.
//

#undef INTERFACE
#define INTERFACE IActiveDesktop

DECLARE_INTERFACE_( IActiveDesktop, IUnknown )
{
    // IUnknown methods
    STDMETHOD (QueryInterface)(THIS_ REFIID riid, void **ppv) PURE;
    STDMETHOD_(ULONG, AddRef) ( THIS ) PURE;
    STDMETHOD_(ULONG, Release) ( THIS ) PURE;

    // IActiveDesktop methods
    STDMETHOD (ApplyChanges)(THIS_ DWORD dwFlags) PURE;
    STDMETHOD (GetWallpaper)(THIS_ LPWSTR pwszWallpaper, UINT cchWallpaper, DWORD dwReserved) PURE;
    STDMETHOD (SetWallpaper)(THIS_ LPCWSTR pwszWallpaper, DWORD dwReserved) PURE;
    STDMETHOD (GetWallpaperOptions)(THIS_ LPWALLPAPEROPT pwpo, DWORD dwReserved) PURE;
    STDMETHOD (SetWallpaperOptions)(THIS_ LPCWALLPAPEROPT pwpo, DWORD dwReserved) PURE;
    STDMETHOD (GetPattern)(THIS_ LPWSTR pwszPattern, UINT cchPattern, DWORD dwReserved) PURE;
    STDMETHOD (SetPattern)(THIS_ LPCWSTR pwszPattern, DWORD dwReserved) PURE;
    STDMETHOD (GetDesktopItemOptions)(THIS_ LPCOMPONENTSOPT pco, DWORD dwReserved) PURE;
    STDMETHOD (SetDesktopItemOptions)(THIS_ LPCCOMPONENTSOPT pco, DWORD dwReserved) PURE;
    STDMETHOD (AddDesktopItem)(THIS_ LPCCOMPONENT pcomp, DWORD dwReserved) PURE;
    STDMETHOD (AddDesktopItemWithUI)(THIS_ HWND hwnd, LPCOMPONENT pcomp, DWORD dwReserved) PURE;
    STDMETHOD (ModifyDesktopItem)(THIS_ LPCCOMPONENT pcomp, DWORD dwFlags) PURE;
    STDMETHOD (RemoveDesktopItem)(THIS_ LPCCOMPONENT pcomp, DWORD dwReserved) PURE;
    STDMETHOD (GetDesktopItemCount)(THIS_ LPINT lpiCount, DWORD dwReserved) PURE;
    STDMETHOD (GetDesktopItem)(THIS_ int nComponent, LPCOMPONENT pcomp, DWORD dwReserved) PURE;
    STDMETHOD (GetDesktopItemByID)(THIS_ ULONG_PTR dwID, LPCOMPONENT pcomp, DWORD dwReserved) PURE;
    STDMETHOD (GenerateDesktopItemHtml)(THIS_ LPCWSTR pwszFileName, LPCOMPONENT pcomp, DWORD dwReserved) PURE;
    STDMETHOD (AddUrl)(THIS_ HWND hwnd, LPCWSTR pszSource, LPCOMPONENT pcomp, DWORD dwFlags) PURE;
    STDMETHOD (GetDesktopItemBySource)(THIS_ LPCWSTR pwszSource, LPCOMPONENT pcomp, DWORD dwReserved) PURE;
};

typedef IActiveDesktop * LPACTIVEDESKTOP;


#endif // _WININET_

#if (_WIN32_IE >= 0x0500)

#define MAX_COLUMN_NAME_LEN 80
#define MAX_COLUMN_DESC_LEN 128

#include <pshpack1.h>

typedef struct {
    SHCOLUMNID  scid;                           // OUT the unique identifier of this column
    VARTYPE     vt;                             // OUT the native type of the data returned
    DWORD       fmt;                            // OUT this listview format (LVCFMT_LEFT, usually)
    UINT        cChars;                         // OUT the default width of the column, in characters
    DWORD       csFlags;                        // OUT SHCOLSTATE flags
    WCHAR wszTitle[MAX_COLUMN_NAME_LEN];        // OUT the title of the column
    WCHAR wszDescription[MAX_COLUMN_DESC_LEN];  // OUT full description of this column
} SHCOLUMNINFO, *LPSHCOLUMNINFO;
typedef const SHCOLUMNINFO* LPCSHCOLUMNINFO;

#include <poppack.h>        /* Return to default */

#include <pshpack8.h>  

typedef struct {
    ULONG   dwFlags;              // initialization flags
    ULONG   dwReserved;           // reserved for future use.
    WCHAR   wszFolder[MAX_PATH];  // fully qualified folder path (or empty if multiple folders)
} SHCOLUMNINIT, *LPSHCOLUMNINIT;
typedef const SHCOLUMNINIT* LPCSHCOLUMNINIT;

#define SHCDF_UPDATEITEM        0x00000001      // this flag is a hint that the file has changed since the last call to GetItemData

typedef struct {
    ULONG   dwFlags;             // combination of SHCDF_ flags.
    DWORD   dwFileAttributes;    // file attributes.
    ULONG   dwReserved;          // reserved for future use.
    WCHAR*  pwszExt;             // address of file name extension
    WCHAR   wszFile[MAX_PATH];   // Absolute path of file.
} SHCOLUMNDATA, *LPSHCOLUMNDATA;
typedef const SHCOLUMNDATA* LPCSHCOLUMNDATA;

#include <poppack.h>        /* Return to byte packing */

#undef INTERFACE
#define INTERFACE IColumnProvider

// Note: these objects must be threadsafe!  GetItemData _will_ be called
// simultaneously from multiple threads.
DECLARE_INTERFACE_(IColumnProvider, IUnknown)
{
    // IUnknown methods
    STDMETHOD (QueryInterface)(THIS_ REFIID riid, void **ppv) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    // IColumnProvider methods
    STDMETHOD (Initialize)(THIS_ LPCSHCOLUMNINIT psci) PURE;
    STDMETHOD (GetColumnInfo)(THIS_ DWORD dwIndex, SHCOLUMNINFO *psci) PURE;
    STDMETHOD (GetItemData)(THIS_ LPCSHCOLUMNID pscid, LPCSHCOLUMNDATA pscd, VARIANT *pvarData) PURE;
};


///////////////////////////////////////////////////////
//
// Drag and Drop helper
//
// Purpose: To expose the Shell drag images
//
// This interface is implemented in the shell by CLSID_DragDropHelper.
// 
// To use:
//   If you are the source of a drag (i.e. in response to LV_DRAGBEGIN or 
//    equivelent begin drag message) call 
//    IDragSourceHelper::InitializeFromWindow
//              (<hwnd of window supporting DI_GETDRAGIMAGE>, 
//               <pointer to POINT indicating offset to the mouse from 
//                  the upper left corner of the image>, 
//               <pointer to data object>)
//
//      NOTE: The Data object must support IDataObject::SetData with multiple 
//            data types and GetData must implement data type cloning 
//            (Including HGLOBAL), not just aliasing.
//
//   If you wish to have an image while over your application add the 
//    IDragImages::Dr* calls to your IDropTarget implementation. For Example:
//
//    STDMETHODIMP CUserDropTarget::DragEnter(IDataObject* pDataObject, 
//                                            DWORD grfKeyState,
//                                            POINTL pt, DWORD* pdwEffect)
//    {
//          // Process your DragEnter
//          // Call IDragImages::DragEnter last. 
//          _pDropTargetHelper->DragEnter(_hwndDragOver, pDataObject, 
//                                        (POINT*)&pt, *pdwEffect);
//          return hres;
//    }
//
//
//   If you wish to be able to source a drag image from a custom control, 
//     implement a handler for the RegisterWindowMessage(DI_GETDRAGIMAGE).
//     The LPARAM is a pointer to an SHDRAGIMAGE structure.
//     
//      sizeDragImage  -   Calculate the length and width required to render 
//                          the images.
//      ptOffset       -   Calculate the offset from the upper left corner to 
//                          the mouse cursor within the image
//      hbmpDragImage  -   CreateBitmap( sizeDragImage.cx, sizeDragImage.cy, 
//                           GetDeviceCaps(hdcScreen, PLANES), 
//                           GetDeviceCaps(hdcScreen, BITSPIXEL),
//                           NULL);
//
//   Drag Images will only be displayed on Windows NT 5.0 or later.
//
//
//   Note about IDropTargetHelper::Show - This method is provided for 
//     showing/hiding the Drag image in low color depth video modes. When 
//     painting to a window that is currently being dragged over (i.e. For
//     indicating a selection) you need to hide the drag image by calling this
//     method passing FALSE. After the window is done painting, Show the image 
//     again by passing TRUE.

#include <pshpack8.h>  

typedef struct
{
    SIZE        sizeDragImage;      // OUT - The length and Width of the 
                                    //        rendered image
    POINT       ptOffset;           // OUT - The Offset from the mouse cursor to 
                                    //        the upper left corner of the image
    HBITMAP     hbmpDragImage;      // OUT - The Bitmap containing the rendered
                                    //        drag images
    COLORREF    crColorKey;         // OUT - The COLORREF that has been blitted 
                                    //        to the background of the images
} SHDRAGIMAGE, *LPSHDRAGIMAGE;

#include <poppack.h>        /* Return to byte packing */

// This is sent to a window to get the rendered images to a bitmap
// Call RegisterWindowMessage to get the ID
#define DI_GETDRAGIMAGE     TEXT("ShellGetDragImage")

#undef INTERFACE
#define INTERFACE IDropTargetHelper

DECLARE_INTERFACE_( IDropTargetHelper, IUnknown )
{
    // IUnknown methods
    STDMETHOD (QueryInterface)(THIS_ REFIID riid, void **ppv) PURE;
    STDMETHOD_(ULONG, AddRef) ( THIS ) PURE;
    STDMETHOD_(ULONG, Release) ( THIS ) PURE;

    // IDropTargetHelper
    STDMETHOD (DragEnter)(THIS_ HWND hwndTarget, IDataObject* pDataObject, 
                          POINT* ppt, DWORD dwEffect) PURE;
    STDMETHOD (DragLeave)(THIS) PURE;
    STDMETHOD (DragOver)(THIS_ POINT* ppt, DWORD dwEffect) PURE;
    STDMETHOD (Drop)(THIS_ IDataObject* pDataObject, POINT* ppt, 
                     DWORD dwEffect) PURE;
    STDMETHOD (Show)(THIS_ BOOL fShow) PURE;
    
};

#undef INTERFACE
#define INTERFACE IDragSourceHelper

DECLARE_INTERFACE_( IDragSourceHelper, IUnknown )
{
    // IUnknown methods
    STDMETHOD (QueryInterface)(THIS_ REFIID riid, void **ppv) PURE;
    STDMETHOD_(ULONG, AddRef) ( THIS ) PURE;
    STDMETHOD_(ULONG, Release) ( THIS ) PURE;

    // IDragSourceHelper
    STDMETHOD (InitializeFromBitmap)(THIS_ LPSHDRAGIMAGE pshdi, 
                                     IDataObject* pDataObject) PURE;
    STDMETHOD (InitializeFromWindow)(THIS_ HWND hwnd, POINT* ppt, 
                                     IDataObject* pDataObject) PURE;
};
#endif // _WIN32_IE >= 0x0500
#endif // _WIN32_IE

//==========================================================================
// Clipboard format which may be supported by IDataObject from system
// defined shell folders (such as directories, network, ...).
//==========================================================================

#define CFSTR_SHELLIDLIST                   TEXT("Shell IDList Array")      // CF_IDLIST
#define CFSTR_SHELLIDLISTOFFSET             TEXT("Shell Object Offsets")    // CF_OBJECTPOSITIONS
#define CFSTR_NETRESOURCES                  TEXT("Net Resource")            // CF_NETRESOURCE
#define CFSTR_FILEDESCRIPTORA               TEXT("FileGroupDescriptor")     // CF_FILEGROUPDESCRIPTORA
#define CFSTR_FILEDESCRIPTORW               TEXT("FileGroupDescriptorW")    // CF_FILEGROUPDESCRIPTORW
#define CFSTR_FILECONTENTS                  TEXT("FileContents")            // CF_FILECONTENTS
#define CFSTR_FILENAMEA                     TEXT("FileName")                // CF_FILENAMEA
#define CFSTR_FILENAMEW                     TEXT("FileNameW")               // CF_FILENAMEW
#define CFSTR_PRINTERGROUP                  TEXT("PrinterFriendlyName")     // CF_PRINTERS
#define CFSTR_FILENAMEMAPA                  TEXT("FileNameMap")             // CF_FILENAMEMAPA
#define CFSTR_FILENAMEMAPW                  TEXT("FileNameMapW")            // CF_FILENAMEMAPW
#define CFSTR_SHELLURL                      TEXT("UniformResourceLocator")
#define CFSTR_INETURLA                      CFSTR_SHELLURL
#define CFSTR_INETURLW                      TEXT("UniformResourceLocatorW")
#define CFSTR_PREFERREDDROPEFFECT           TEXT("Preferred DropEffect")
#define CFSTR_PERFORMEDDROPEFFECT           TEXT("Performed DropEffect")
#define CFSTR_PASTESUCCEEDED                TEXT("Paste Succeeded")
#define CFSTR_INDRAGLOOP                    TEXT("InShellDragLoop")
#define CFSTR_DRAGCONTEXT                   TEXT("DragContext")
#define CFSTR_MOUNTEDVOLUME                 TEXT("MountedVolume")
#define CFSTR_PERSISTEDDATAOBJECT           TEXT("PersistedDataObject")
#define CFSTR_TARGETCLSID                           TEXT("TargetCLSID")                         // HGLOBAL with a CLSID of the drop target
#define CFSTR_LOGICALPERFORMEDDROPEFFECT    TEXT("Logical Performed DropEffect")

#ifdef UNICODE
#define CFSTR_FILEDESCRIPTOR    CFSTR_FILEDESCRIPTORW
#define CFSTR_FILENAME          CFSTR_FILENAMEW
#define CFSTR_FILENAMEMAP       CFSTR_FILENAMEMAPW
#define CFSTR_INETURL           CFSTR_INETURLW
#else
#define CFSTR_FILEDESCRIPTOR    CFSTR_FILEDESCRIPTORA
#define CFSTR_FILENAME          CFSTR_FILENAMEA
#define CFSTR_FILENAMEMAP       CFSTR_FILENAMEMAPA
#define CFSTR_INETURL           CFSTR_INETURLA
#endif

#define DVASPECT_SHORTNAME      2 // use for CF_HDROP to get short name version of file paths
#define DVASPECT_COPY           3 // use to indicate format is a "Copy" of the data (FILECONTENTS, FILEDESCRIPTOR, etc)
#define DVASPECT_LINK           4 // use to indicate format is a "Shortcut" to the data (FILECONTENTS, FILEDESCRIPTOR, etc)

//
// format of CF_NETRESOURCE
//
typedef struct _NRESARRAY {     // anr
    UINT cItems;
    NETRESOURCE nr[1];
} NRESARRAY, * LPNRESARRAY;

//
// format of CF_IDLIST
//
typedef struct _IDA {
    UINT cidl;          // number of relative IDList
    UINT aoffset[1];    // [0]: folder IDList, [1]-[cidl]: item IDList
} CIDA, * LPIDA;

//
// FILEDESCRIPTOR.dwFlags field indicate which fields are to be used
//
typedef enum {
    FD_CLSID            = 0x0001,
    FD_SIZEPOINT        = 0x0002,
    FD_ATTRIBUTES       = 0x0004,
    FD_CREATETIME       = 0x0008,
    FD_ACCESSTIME       = 0x0010,
    FD_WRITESTIME       = 0x0020,
    FD_FILESIZE         = 0x0040,
    FD_PROGRESSUI       = 0x4000,       // Show Progress UI w/Drag and Drop
    FD_LINKUI           = 0x8000,       // 'link' UI is prefered
} FD_FLAGS;

typedef struct _FILEDESCRIPTORA { // fod
    DWORD dwFlags;

    CLSID clsid;
    SIZEL sizel;
    POINTL pointl;

    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    CHAR   cFileName[ MAX_PATH ];
} FILEDESCRIPTORA, *LPFILEDESCRIPTORA;

typedef struct _FILEDESCRIPTORW { // fod
    DWORD dwFlags;

    CLSID clsid;
    SIZEL sizel;
    POINTL pointl;

    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    WCHAR  cFileName[ MAX_PATH ];
} FILEDESCRIPTORW, *LPFILEDESCRIPTORW;

#ifdef UNICODE
#define FILEDESCRIPTOR      FILEDESCRIPTORW
#define LPFILEDESCRIPTOR    LPFILEDESCRIPTORW
#else
#define FILEDESCRIPTOR      FILEDESCRIPTORA
#define LPFILEDESCRIPTOR    LPFILEDESCRIPTORA
#endif

//
// format of CF_FILEGROUPDESCRIPTOR
//
typedef struct _FILEGROUPDESCRIPTORA { // fgd
     UINT cItems;
     FILEDESCRIPTORA fgd[1];
} FILEGROUPDESCRIPTORA, * LPFILEGROUPDESCRIPTORA;

typedef struct _FILEGROUPDESCRIPTORW { // fgd
     UINT cItems;
     FILEDESCRIPTORW fgd[1];
} FILEGROUPDESCRIPTORW, * LPFILEGROUPDESCRIPTORW;

#ifdef UNICODE
#define FILEGROUPDESCRIPTOR     FILEGROUPDESCRIPTORW
#define LPFILEGROUPDESCRIPTOR   LPFILEGROUPDESCRIPTORW
#else
#define FILEGROUPDESCRIPTOR     FILEGROUPDESCRIPTORA
#define LPFILEGROUPDESCRIPTOR   LPFILEGROUPDESCRIPTORA
#endif

//
// format of CF_HDROP and CF_PRINTERS, in the HDROP case the data that follows
// is a double null terinated list of file names, for printers they are printer
// friendly names
//
typedef struct _DROPFILES {
   DWORD pFiles;                       // offset of file list
   POINT pt;                           // drop point (client coords)
   BOOL fNC;                           // is it on NonClient area
                                       // and pt is in screen coords
   BOOL fWide;                         // WIDE character switch
} DROPFILES, *LPDROPFILES;


//====== File System Notification APIs ===============================
//

//
//  File System Notification flags
//

#define SHCNE_RENAMEITEM          0x00000001L
#define SHCNE_CREATE              0x00000002L
#define SHCNE_DELETE              0x00000004L
#define SHCNE_MKDIR               0x00000008L
#define SHCNE_RMDIR               0x00000010L
#define SHCNE_MEDIAINSERTED       0x00000020L
#define SHCNE_MEDIAREMOVED        0x00000040L
#define SHCNE_DRIVEREMOVED        0x00000080L
#define SHCNE_DRIVEADD            0x00000100L
#define SHCNE_NETSHARE            0x00000200L
#define SHCNE_NETUNSHARE          0x00000400L
#define SHCNE_ATTRIBUTES          0x00000800L
#define SHCNE_UPDATEDIR           0x00001000L
#define SHCNE_UPDATEITEM          0x00002000L
#define SHCNE_SERVERDISCONNECT    0x00004000L
#define SHCNE_UPDATEIMAGE         0x00008000L
#define SHCNE_DRIVEADDGUI         0x00010000L
#define SHCNE_RENAMEFOLDER        0x00020000L
#define SHCNE_FREESPACE           0x00040000L

#if (_WIN32_IE >= 0x0400)
// SHCNE_EXTENDED_EVENT: the extended event is identified in dwItem1,
// packed in LPITEMIDLIST format (same as SHCNF_DWORD packing).
// Additional information can be passed in the dwItem2 parameter
// of SHChangeNotify (called "pidl2" below), which if present, must also
// be in LPITEMIDLIST format.
//
// Unlike the standard events, the extended events are ORDINALs, so we
// don't run out of bits.  Extended events follow the SHCNEE_* naming 
// convention.
//
// The dwItem2 parameter varies according to the extended event.

#define SHCNE_EXTENDED_EVENT      0x04000000L
#endif      // _WIN32_IE >= 0x0400

#define SHCNE_ASSOCCHANGED        0x08000000L

#define SHCNE_DISKEVENTS          0x0002381FL
#define SHCNE_GLOBALEVENTS        0x0C0581E0L // Events that dont match pidls first
#define SHCNE_ALLEVENTS           0x7FFFFFFFL
#define SHCNE_INTERRUPT           0x80000000L // The presence of this flag indicates
                                            // that the event was generated by an
                                            // interrupt.  It is stripped out before
                                            // the clients of SHCNNotify_ see it.

#if (_WIN32_IE >= 0x0400)
// SHCNE_EXTENDED_EVENT extended events.  These events are ordinals.
// This is not a bitfield.

#define SHCNEE_ORDERCHANGED         2L  // pidl2 is the changed folder
#define SHCNEE_MSI_CHANGE           4L  // pidl2 is a SHChangeProductKeyAsIDList
#define SHCNEE_MSI_UNINSTALL        5L  // pidl2 is a SHChangeProductKeyAsIDList
#endif


// Flags
// uFlags & SHCNF_TYPE is an ID which indicates what dwItem1 and dwItem2 mean
#define SHCNF_IDLIST      0x0000        // LPITEMIDLIST
#define SHCNF_PATHA       0x0001        // path name
#define SHCNF_PRINTERA    0x0002        // printer friendly name
#define SHCNF_DWORD       0x0003        // DWORD
#define SHCNF_PATHW       0x0005        // path name
#define SHCNF_PRINTERW    0x0006        // printer friendly name
#define SHCNF_TYPE        0x00FF
#define SHCNF_FLUSH       0x1000
#define SHCNF_FLUSHNOWAIT 0x2000

#ifdef UNICODE
#define SHCNF_PATH      SHCNF_PATHW
#define SHCNF_PRINTER   SHCNF_PRINTERW
#else
#define SHCNF_PATH      SHCNF_PATHA
#define SHCNF_PRINTER   SHCNF_PRINTERA
#endif


//
//  APIs
//
SHSTDAPI_(void) SHChangeNotify(LONG wEventId, UINT uFlags, LPCVOID dwItem1, LPCVOID dwItem2);

//
// IShellChangeNotify
//
#undef  INTERFACE
#define INTERFACE  IShellChangeNotify

DECLARE_INTERFACE_(IShellChangeNotify, IUnknown)
{
    // *** IUnknown methods ***
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, void **ppv) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    // *** IShellChangeNotify methods ***
    STDMETHOD(OnChange) (THIS_ LONG lEvent, LPCITEMIDLIST pidl1, LPCITEMIDLIST pidl2) PURE;
} ;

//
// IQueryInfo
//
//-------------------------------------------------------------------------
//
// IQueryInfo interface
//
// [Methods]
//              ::GetInfoTip()
//-------------------------------------------------------------------------

#undef  INTERFACE
#define INTERFACE  IQueryInfo

DECLARE_INTERFACE_(IQueryInfo, IUnknown)
{
    // *** IUnknown methods ***
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, void **ppv) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    // *** IQueryInfo methods ***
    STDMETHOD(GetInfoTip)(THIS_ DWORD dwFlags, WCHAR **ppwszTip) PURE;
    STDMETHOD(GetInfoFlags)(THIS_ DWORD *pdwFlags) PURE;
} ;

#define QITIPF_DEFAULT          0x00000000
#define QITIPF_USENAME          0x00000001
#define QITIPF_LINKNOTARGET     0x00000002
#define QITIPF_LINKUSETARGET    0x00000004
#define QITIPF_USESLOWTIP       0x00000008  // Flag says it's OK to take a long time generating tip

#define QIF_CACHED           0x00000001
#define QIF_DONTEXPANDFOLDER 0x00000002


//
// SHAddToRecentDocs
//
#define SHARD_PIDL      0x00000001L
#define SHARD_PATHA     0x00000002L
#define SHARD_PATHW     0x00000003L

#ifdef UNICODE
#define SHARD_PATH  SHARD_PATHW
#else
#define SHARD_PATH  SHARD_PATHA
#endif

SHSTDAPI_(void) SHAddToRecentDocs(UINT uFlags, LPCVOID pv);


#if (_WIN32_IE >= 0x0400)

                                                                        
typedef struct _SHChangeProductKeyAsIDList {
    USHORT cb;
    WCHAR wszProductKey[39];
    USHORT cbZero;
} SHChangeProductKeyAsIDList, *LPSHChangeProductKeyAsIDList;


SHSTDAPI_(void) SHUpdateImageA(LPCSTR pszHashItem, int iIndex, UINT uFlags, int iImageIndex);
SHSTDAPI_(void) SHUpdateImageW(LPCWSTR pszHashItem, int iIndex, UINT uFlags, int iImageIndex);
#ifdef UNICODE
#define SHUpdateImage  SHUpdateImageW
#else
#define SHUpdateImage  SHUpdateImageA
#endif // !UNICODE
#endif /* _WIN32_IE */


SHSTDAPI SHGetInstanceExplorer(IUnknown **ppunk);

//
// SHGetDataFromIDListA/W
//
// SHGetDataFromIDList nFormat values TCHAR
#define SHGDFIL_FINDDATA        1
#define SHGDFIL_NETRESOURCE     2
#define SHGDFIL_DESCRIPTIONID   3

#define SHDID_ROOT_REGITEM          1
#define SHDID_FS_FILE               2
#define SHDID_FS_DIRECTORY          3
#define SHDID_FS_OTHER              4
#define SHDID_COMPUTER_DRIVE35      5
#define SHDID_COMPUTER_DRIVE525     6
#define SHDID_COMPUTER_REMOVABLE    7
#define SHDID_COMPUTER_FIXED        8
#define SHDID_COMPUTER_NETDRIVE     9
#define SHDID_COMPUTER_CDROM        10
#define SHDID_COMPUTER_RAMDISK      11
#define SHDID_COMPUTER_OTHER        12
#define SHDID_NET_DOMAIN            13
#define SHDID_NET_SERVER            14
#define SHDID_NET_SHARE             15
#define SHDID_NET_RESTOFNET         16
#define SHDID_NET_OTHER             17
#define SHDID_COMPUTER_IMAGING      18
#define SHDID_COMPUTER_AUDIO        19
#define SHDID_COMPUTER_SHAREDDOCS   20

#include <pshpack8.h>  

typedef struct _SHDESCRIPTIONID {
    DWORD   dwDescriptionId;
    CLSID   clsid;
} SHDESCRIPTIONID, *LPSHDESCRIPTIONID;

#include <poppack.h>        /* Return to byte packing */

// these delegate to IShellFolder2::GetItemData()

SHSTDAPI SHGetDataFromIDListA(IShellFolder *psf, LPCITEMIDLIST pidl, int nFormat, void *pv, int cb);
SHSTDAPI SHGetDataFromIDListW(IShellFolder *psf, LPCITEMIDLIST pidl, int nFormat, void *pv, int cb);
#ifdef UNICODE
#define SHGetDataFromIDList  SHGetDataFromIDListW
#else
#define SHGetDataFromIDList  SHGetDataFromIDListA
#endif // !UNICODE


//===========================================================================


//
// PROPIDs for Internet Shortcuts (FMTID_Intshcut) to be used with
// IPropertySetStorage/IPropertyStorage
//
// The known property ids and their variant types are:
//      PID_IS_URL          [VT_LPWSTR]   URL
//      PID_IS_NAME         [VT_LPWSTR]   Name of the internet shortcut
//      PID_IS_WORKINGDIR   [VT_LPWSTR]   Working directory for the shortcut
//      PID_IS_HOTKEY       [VT_UI2]      Hotkey for the shortcut
//      PID_IS_SHOWCMD      [VT_I4]       Show command for shortcut
//      PID_IS_ICONINDEX    [VT_I4]       Index into file that has icon
//      PID_IS_ICONFILE     [VT_LPWSTR]   File that has the icon
//      PID_IS_WHATSNEW     [VT_LPWSTR]   What's New text
//      PID_IS_AUTHOR       [VT_LPWSTR]   Author
//      PID_IS_DESCRIPTION  [VT_LPWSTR]   Description text of site
//      PID_IS_COMMENT      [VT_LPWSTR]   User annotated comment
//

#define PID_IS_URL           2
#define PID_IS_NAME          4
#define PID_IS_WORKINGDIR    5
#define PID_IS_HOTKEY        6
#define PID_IS_SHOWCMD       7
#define PID_IS_ICONINDEX     8
#define PID_IS_ICONFILE      9
#define PID_IS_WHATSNEW      10
#define PID_IS_AUTHOR        11
#define PID_IS_DESCRIPTION   12
#define PID_IS_COMMENT       13

//
// PROPIDs for Internet Sites (FMTID_InternetSite) to be used with
// IPropertySetStorage/IPropertyStorage
//
// The known property ids and their variant types are:
//      PID_INTSITE_WHATSNEW     [VT_LPWSTR]   What's New text
//      PID_INTSITE_AUTHOR       [VT_LPWSTR]   Author
//      PID_INTSITE_LASTVISIT    [VT_FILETIME] Time site was last visited
//      PID_INTSITE_LASTMOD      [VT_FILETIME] Time site was last modified
//      PID_INTSITE_VISITCOUNT   [VT_UI4]      Number of times user has visited
//      PID_INTSITE_DESCRIPTION  [VT_LPWSTR]   Description text of site
//      PID_INTSITE_COMMENT      [VT_LPWSTR]   User annotated comment
//      PID_INTSITE_RECURSE      [VT_UI4]      Levels to recurse (0-3)
//      PID_INTSITE_WATCH        [VT_UI4]      PIDISM_ flags
//      PID_INTSITE_SUBSCRIPTION [VT_UI8]      Subscription cookie
//      PID_INTSITE_URL          [VT_LPWSTR]   URL
//      PID_INTSITE_TITLE        [VT_LPWSTR]   Title
//      PID_INTSITE_CODEPAGE     [VT_UI4]      Codepage of the document
//      PID_INTSITE_TRACKING     [VT_UI4]      Tracking
//      PID_INTSITE_ICONINDEX    [VT_I4]       Retrieve the index to the icon
//      PID_INTSITE_ICONFILE     [VT_LPWSTR]   Retrieve the file containing the icon index.


#define PID_INTSITE_WHATSNEW      2
#define PID_INTSITE_AUTHOR        3
#define PID_INTSITE_LASTVISIT     4
#define PID_INTSITE_LASTMOD       5
#define PID_INTSITE_VISITCOUNT    6
#define PID_INTSITE_DESCRIPTION   7
#define PID_INTSITE_COMMENT       8
#define PID_INTSITE_FLAGS         9
#define PID_INTSITE_CONTENTLEN    10
#define PID_INTSITE_CONTENTCODE   11
#define PID_INTSITE_RECURSE       12
#define PID_INTSITE_WATCH         13
#define PID_INTSITE_SUBSCRIPTION  14
#define PID_INTSITE_URL           15
#define PID_INTSITE_TITLE         16
#define PID_INTSITE_CODEPAGE      18
#define PID_INTSITE_TRACKING      19
#define PID_INTSITE_ICONINDEX     20
#define PID_INTSITE_ICONFILE      21


// Flags for PID_IS_FLAGS
#define PIDISF_RECENTLYCHANGED  0x00000001
#define PIDISF_CACHEDSTICKY     0x00000002
#define PIDISF_CACHEIMAGES      0x00000010
#define PIDISF_FOLLOWALLLINKS   0x00000020

// Values for PID_INTSITE_WATCH
#define PIDISM_GLOBAL           0       // Monitor based on global setting
#define PIDISM_WATCH            1       // User says watch
#define PIDISM_DONTWATCH        2       // User says don't watch


////////////////////////////////////////////////////////////////////
//
// The shell keeps track of some per-user state to handle display
// options that is of major interest to ISVs.
// The key one requested right now is "DoubleClickInWebView".
//
//  SysFiles are these windows special files:
//      "dll sys vxd 386 drv"
//
//  hidden files are files with the FILE_ATTRIBUTE_HIDDEN attribute
//
//  system files are files with the FILE_ATTRIBUTE_SYSTEM attribute
//
//      fShowAllObjects fShowSysFiles   Result
//      --------------- -------------   ------
//      0               0               hide hidden + SysFiles + system files
//      0               1               hide hidden files.
//      1               0               show all files.
//      1               1               show all files.
//
typedef struct {
    BOOL fShowAllObjects : 1;
    BOOL fShowExtensions : 1;
    BOOL fNoConfirmRecycle : 1;
    BOOL fShowSysFiles : 1;
    BOOL fShowCompColor : 1;
    BOOL fDoubleClickInWebView : 1;
    BOOL fDesktopHTML : 1;
    BOOL fWin95Classic : 1;
    BOOL fDontPrettyPath : 1;
    BOOL fShowAttribCol : 1;
    BOOL fMapNetDrvBtn : 1;
    BOOL fShowInfoTip : 1;
    BOOL fHideIcons : 1;
    UINT fRestFlags : 3;
} SHELLFLAGSTATE, * LPSHELLFLAGSTATE;

#define SSF_SHOWALLOBJECTS          0x00000001
#define SSF_SHOWEXTENSIONS          0x00000002
#define SSF_SHOWCOMPCOLOR           0x00000008
#define SSF_SHOWSYSFILES            0x00000020
#define SSF_DOUBLECLICKINWEBVIEW    0x00000080
#define SSF_SHOWATTRIBCOL           0x00000100
#define SSF_DESKTOPHTML             0x00000200
#define SSF_WIN95CLASSIC            0x00000400
#define SSF_DONTPRETTYPATH          0x00000800
#define SSF_SHOWINFOTIP             0x00002000
#define SSF_MAPNETDRVBUTTON         0x00001000
#define SSF_NOCONFIRMRECYCLE        0x00008000
#define SSF_HIDEICONS               0x00004000

// SHGetSettings(LPSHELLFLAGSTATE lpss, DWORD dwMask)
//
// Specify the bits you are interested in in dwMask and they will be
// filled out in the lpss structure.
//
// When these settings change, a WM_SETTINGCHANGE message is sent
// with the string lParam value of "ShellState".
//
SHSTDAPI_(void) SHGetSettings(LPSHELLFLAGSTATE lpsfs, DWORD dwMask);

// SHBindToParent(LPCITEMIDLIST pidl, REFIID riid, void **ppv, LPCITEMIDLIST *ppidlLast)
//
// Given a pidl, you can get an interface pointer (as specified by riid) of the pidl's parent folder (in ppv)
// If ppidlLast is non-NULL, you can also get the pidl of the last item.
//
STDAPI SHBindToParent(LPCITEMIDLIST pidl, REFIID riid, void **ppv, LPCITEMIDLIST *ppidlLast);



// SHPathPrepareForWrite(HWND hwnd, IUnknown *punkEnableModless, LPCTSTR pszPath, DWORD dwFlags)
//
// DESCRIPTION:
//     This API will prepare the path for the caller.  This includes:
// 1. Prompting for the ejectable media to be re-inserted. (Floppy, CD-ROM, ZIP drive, etc.)
// 2. Prompting for the media to be formatted. (Floppy, hard drive, etc.)
// 3. Remount mapped drives if the connection was lost. (\\unc\share mapped to N: becomes disconnected)
// 4. If the path doesn't exist, create it.  (SHPPFW_DIRCREATE and SHPPFW_ASKDIRCREATE)
// 5. Display an error if the media is read only. (SHPPFW_NOWRITECHECK not set)
//                           
// PARAMETERS:
//      hwnd: Parernt window for UI.  NULL means don't display UI. OPTIONAL
//      punkEnableModless: Parent that will be set to modal during UI using IOleInPlaceActiveObject::EnableModeless(). OPTIONAL
//      pszPath: Path to verify is valid for writting.  This can be a UNC or file drive path.  The path
//               should only contain directories.  Pass SHPPFW_IGNOREFILENAME if the last path segment
//               is always filename to ignore.
//      dwFlags: SHPPFW_* Flags to modify behavior
//
//-------------------------------------------------------------------------
#define SHPPFW_NONE             0x00000000
#define SHPPFW_DEFAULT          SHPPFW_DIRCREATE        // May change
#define SHPPFW_DIRCREATE        0x00000001              // Create the directory if it doesn't exist without asking the user.
#define SHPPFW_ASKDIRCREATE     0x00000002              // Create the directory if it doesn't exist after asking the user.
#define SHPPFW_IGNOREFILENAME   0x00000004              // Ignore the last item in pszPath because it's a file.  Example: pszPath="C:\DirA\DirB", only use "C:\DirA".
#define SHPPFW_NOWRITECHECK     0x00000008              // Caller only needs to read from the drive, so don't check if it's READ ONLY.
#define SHPPFW_MEDIACHECKONLY   0x00000010              // do the retrys on the media (or net path), return errors if the file can't be found

STDAPI SHPathPrepareForWriteA(HWND hwnd, IUnknown *punkEnableModless, LPCSTR pszPath, DWORD dwFlags);
STDAPI SHPathPrepareForWriteW(HWND hwnd, IUnknown *punkEnableModless, LPCWSTR pszPath, DWORD dwFlags);
#ifdef UNICODE
#define SHPathPrepareForWrite  SHPathPrepareForWriteW
#else
#define SHPathPrepareForWrite  SHPathPrepareForWriteA
#endif // !UNICODE



#ifdef __urlmon_h__
//    NOTE: urlmon.h must be included before shlobj.h to access this function.
//
//    SoftwareUpdateMessageBox
//
//    Provides a standard message box for the alerting the user that a software
//    update is available or installed. No UI will be displayed if there is no
//    update available or if the available update version is less than or equal
//    to the Advertised update version.
//
//    hWnd                - [in] Handle of owner window
//    szDistUnit          - [in] Unique identifier string for a code distribution unit. For
//                               ActiveX controls and Active Setup installed components, this
//                               is typically a GUID string.
//    dwFlags             - [in] Must be 0.
//    psdi                - [in,out] Pointer to SOFTDISTINFO ( see URLMon.h ). May be NULL.
//                                cbSize should be initialized
//                                by the caller to sizeof(SOFTDISTINFO), dwReserved should be set to 0.
//
//    RETURNS:
//
//    IDNO     - The user chose cancel. If *pbRemind is FALSE, the caller should save the
//               update version from the SOFTDISTINFO and pass it in as the Advertised
//               version in future calls.
//
//    IDYES    - The user has selected Update Now/About Update. The caller should navigate to
//               the SOFTDISTINFO's pszHREF to initiate the install or learn about it.
//               The caller should save the update version from the SOFTDISTINFO and pass
//               it in as the Advertised version in future calls.
//
//    IDIGNORE - There is no pending software update. Note: There is
//               no Ignore button in the standard UI. This occurs if the available
//               version is less than the installed version or is not present or if the
//               Advertised version is greater than or equal to the update version.
//
//    IDABORT  - An error occured. Call GetSoftwareUpdateInfo() for a more specific HRESULT.
//               Note: There is no Abort button in the standard UI.


SHDOCAPI_(DWORD) SoftwareUpdateMessageBox( HWND hWnd,
                                           LPCWSTR szDistUnit,
                                           DWORD dwFlags,
                                           LPSOFTDISTINFO psdi );
#endif // if __urlmon_h__



#ifdef __cplusplus
}

#endif  /* __cplusplus */

#include <poppack.h>

#endif // _SHLOBJ_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\simpdc.h ===
/* Microsoft Corporation Copyright 1999 */
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 3.03.0110 */
/* at Tue Aug 25 10:20:38 1998
 */
/* Compiler settings for S:\zen\ocp.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: none
*/
//@@MIDL_FILE_HEADING(  )


#ifndef I_SIMPDC_H_
#define I_SIMPDC_H_

/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __ISimpleDataConverter_FWD_DEFINED__
#define __ISimpleDataConverter_FWD_DEFINED__
typedef interface ISimpleDataConverter ISimpleDataConverter;
#endif 	/* __ISimpleDataConverter_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 


#ifndef __ISimpleDataConverter_INTERFACE_DEFINED__
#define __ISimpleDataConverter_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: ISimpleDataConverter
 * at Tue Aug 25 10:20:38 1998
 * using MIDL 3.03.0110
 ****************************************/
/* [hidden][helpcontext][unique][uuid][object] */ 



DEFINE_GUID(IID_ISimpleDataConverter,0x78667670,0x3C3D,0x11d2,0x91,0xF9,0x00,0x60,0x97,0xC9,0x7F,0x9B);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("78667670-3C3D-11d2-91F9-006097C97F9B")
    ISimpleDataConverter : public IUnknown
    {
    public:
        virtual /* [helpcontext] */ HRESULT STDMETHODCALLTYPE ConvertData( 
            VARIANT varSrc,
            long vtDest,
            IUnknown __RPC_FAR *pUnknownElement,
            VARIANT __RPC_FAR *pvarDest) = 0;
        
        virtual /* [helpcontext] */ HRESULT STDMETHODCALLTYPE CanConvertData( 
            long vt1,
            long vt2) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISimpleDataConverterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ISimpleDataConverter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ISimpleDataConverter __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ISimpleDataConverter __RPC_FAR * This);
        
        /* [helpcontext] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ConvertData )( 
            ISimpleDataConverter __RPC_FAR * This,
            VARIANT varSrc,
            long vtDest,
            IUnknown __RPC_FAR *pUnknownElement,
            VARIANT __RPC_FAR *pvarDest);
        
        /* [helpcontext] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanConvertData )( 
            ISimpleDataConverter __RPC_FAR * This,
            long vt1,
            long vt2);
        
        END_INTERFACE
    } ISimpleDataConverterVtbl;

    interface ISimpleDataConverter
    {
        CONST_VTBL struct ISimpleDataConverterVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISimpleDataConverter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ISimpleDataConverter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ISimpleDataConverter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ISimpleDataConverter_ConvertData(This,varSrc,vtDest,pUnknownElement,pvarDest)	\
    (This)->lpVtbl -> ConvertData(This,varSrc,vtDest,pUnknownElement,pvarDest)

#define ISimpleDataConverter_CanConvertData(This,vt1,vt2)	\
    (This)->lpVtbl -> CanConvertData(This,vt1,vt2)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext] */ HRESULT STDMETHODCALLTYPE ISimpleDataConverter_ConvertData_Proxy( 
    ISimpleDataConverter __RPC_FAR * This,
    VARIANT varSrc,
    long vtDest,
    IUnknown __RPC_FAR *pUnknownElement,
    VARIANT __RPC_FAR *pvarDest);


void __RPC_STUB ISimpleDataConverter_ConvertData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT STDMETHODCALLTYPE ISimpleDataConverter_CanConvertData_Proxy( 
    ISimpleDataConverter __RPC_FAR * This,
    long vt1,
    long vt2);


void __RPC_STUB ISimpleDataConverter_CanConvertData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISimpleDataConverter_INTERFACE_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif I_SIMPDC_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\sipbase.h ===
//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//
//  Copyright (C) Microsoft Corporation, 1996-1999
//
//  File:       sipbase.h
//
//  Contents:   Generic SIP Provider Main Include File
//
//  History:    14-Feb-1997 pberkman   created
//
//--------------------------------------------------------------------------

#ifndef SIPBASE_H
#define SIPBASE_H

#if _MSC_VER > 1000
#pragma once
#endif

// all moved to mssip.h
#include <mssip.h>

#endif // SIPBASE_H
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\ShObjIdl.h ===
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 6.00.0334 */
/* Compiler settings for shobjidl.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __shobjidl_h__
#define __shobjidl_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IPersistFolder_FWD_DEFINED__
#define __IPersistFolder_FWD_DEFINED__
typedef interface IPersistFolder IPersistFolder;
#endif 	/* __IPersistFolder_FWD_DEFINED__ */


#ifndef __IPersistFolder2_FWD_DEFINED__
#define __IPersistFolder2_FWD_DEFINED__
typedef interface IPersistFolder2 IPersistFolder2;
#endif 	/* __IPersistFolder2_FWD_DEFINED__ */


#ifndef __IPersistIDList_FWD_DEFINED__
#define __IPersistIDList_FWD_DEFINED__
typedef interface IPersistIDList IPersistIDList;
#endif 	/* __IPersistIDList_FWD_DEFINED__ */


#ifndef __IEnumIDList_FWD_DEFINED__
#define __IEnumIDList_FWD_DEFINED__
typedef interface IEnumIDList IEnumIDList;
#endif 	/* __IEnumIDList_FWD_DEFINED__ */


#ifndef __IShellFolder_FWD_DEFINED__
#define __IShellFolder_FWD_DEFINED__
typedef interface IShellFolder IShellFolder;
#endif 	/* __IShellFolder_FWD_DEFINED__ */


#ifndef __IEnumExtraSearch_FWD_DEFINED__
#define __IEnumExtraSearch_FWD_DEFINED__
typedef interface IEnumExtraSearch IEnumExtraSearch;
#endif 	/* __IEnumExtraSearch_FWD_DEFINED__ */


#ifndef __IShellFolder2_FWD_DEFINED__
#define __IShellFolder2_FWD_DEFINED__
typedef interface IShellFolder2 IShellFolder2;
#endif 	/* __IShellFolder2_FWD_DEFINED__ */


#ifndef __IShellView_FWD_DEFINED__
#define __IShellView_FWD_DEFINED__
typedef interface IShellView IShellView;
#endif 	/* __IShellView_FWD_DEFINED__ */


#ifndef __IShellView2_FWD_DEFINED__
#define __IShellView2_FWD_DEFINED__
typedef interface IShellView2 IShellView2;
#endif 	/* __IShellView2_FWD_DEFINED__ */


#ifndef __IFolderView_FWD_DEFINED__
#define __IFolderView_FWD_DEFINED__
typedef interface IFolderView IFolderView;
#endif 	/* __IFolderView_FWD_DEFINED__ */


#ifndef __IShellBrowser_FWD_DEFINED__
#define __IShellBrowser_FWD_DEFINED__
typedef interface IShellBrowser IShellBrowser;
#endif 	/* __IShellBrowser_FWD_DEFINED__ */


#ifndef __IShellNetCrawler_FWD_DEFINED__
#define __IShellNetCrawler_FWD_DEFINED__
typedef interface IShellNetCrawler IShellNetCrawler;
#endif 	/* __IShellNetCrawler_FWD_DEFINED__ */


#ifndef __IProfferService_FWD_DEFINED__
#define __IProfferService_FWD_DEFINED__
typedef interface IProfferService IProfferService;
#endif 	/* __IProfferService_FWD_DEFINED__ */


#ifndef __ICompositeFolder_FWD_DEFINED__
#define __ICompositeFolder_FWD_DEFINED__
typedef interface ICompositeFolder ICompositeFolder;
#endif 	/* __ICompositeFolder_FWD_DEFINED__ */


#ifndef __IParentAndItem_FWD_DEFINED__
#define __IParentAndItem_FWD_DEFINED__
typedef interface IParentAndItem IParentAndItem;
#endif 	/* __IParentAndItem_FWD_DEFINED__ */


#ifndef __IPropertyUI_FWD_DEFINED__
#define __IPropertyUI_FWD_DEFINED__
typedef interface IPropertyUI IPropertyUI;
#endif 	/* __IPropertyUI_FWD_DEFINED__ */


#ifndef __ICategoryProvider_FWD_DEFINED__
#define __ICategoryProvider_FWD_DEFINED__
typedef interface ICategoryProvider ICategoryProvider;
#endif 	/* __ICategoryProvider_FWD_DEFINED__ */


#ifndef __ICategorizer_FWD_DEFINED__
#define __ICategorizer_FWD_DEFINED__
typedef interface ICategorizer ICategorizer;
#endif 	/* __ICategorizer_FWD_DEFINED__ */


#ifndef __IShellItem_FWD_DEFINED__
#define __IShellItem_FWD_DEFINED__
typedef interface IShellItem IShellItem;
#endif 	/* __IShellItem_FWD_DEFINED__ */


#ifndef __IEnumShellItems_FWD_DEFINED__
#define __IEnumShellItems_FWD_DEFINED__
typedef interface IEnumShellItems IEnumShellItems;
#endif 	/* __IEnumShellItems_FWD_DEFINED__ */


#ifndef __IItemHandler_FWD_DEFINED__
#define __IItemHandler_FWD_DEFINED__
typedef interface IItemHandler IItemHandler;
#endif 	/* __IItemHandler_FWD_DEFINED__ */


#ifndef __ILocalCopy_FWD_DEFINED__
#define __ILocalCopy_FWD_DEFINED__
typedef interface ILocalCopy ILocalCopy;
#endif 	/* __ILocalCopy_FWD_DEFINED__ */


#ifndef __IShellLinkA_FWD_DEFINED__
#define __IShellLinkA_FWD_DEFINED__
typedef interface IShellLinkA IShellLinkA;
#endif 	/* __IShellLinkA_FWD_DEFINED__ */


#ifndef __IShellLinkW_FWD_DEFINED__
#define __IShellLinkW_FWD_DEFINED__
typedef interface IShellLinkW IShellLinkW;
#endif 	/* __IShellLinkW_FWD_DEFINED__ */


#ifndef __IActionProgressDialog_FWD_DEFINED__
#define __IActionProgressDialog_FWD_DEFINED__
typedef interface IActionProgressDialog IActionProgressDialog;
#endif 	/* __IActionProgressDialog_FWD_DEFINED__ */


#ifndef __IHWEventHandler_FWD_DEFINED__
#define __IHWEventHandler_FWD_DEFINED__
typedef interface IHWEventHandler IHWEventHandler;
#endif 	/* __IHWEventHandler_FWD_DEFINED__ */


#ifndef __IActionProgress_FWD_DEFINED__
#define __IActionProgress_FWD_DEFINED__
typedef interface IActionProgress IActionProgress;
#endif 	/* __IActionProgress_FWD_DEFINED__ */


#ifndef __IShellExtInit_FWD_DEFINED__
#define __IShellExtInit_FWD_DEFINED__
typedef interface IShellExtInit IShellExtInit;
#endif 	/* __IShellExtInit_FWD_DEFINED__ */


#ifndef __IShellPropSheetExt_FWD_DEFINED__
#define __IShellPropSheetExt_FWD_DEFINED__
typedef interface IShellPropSheetExt IShellPropSheetExt;
#endif 	/* __IShellPropSheetExt_FWD_DEFINED__ */


#ifndef __IRemoteComputer_FWD_DEFINED__
#define __IRemoteComputer_FWD_DEFINED__
typedef interface IRemoteComputer IRemoteComputer;
#endif 	/* __IRemoteComputer_FWD_DEFINED__ */


#ifndef __IDavStorage_FWD_DEFINED__
#define __IDavStorage_FWD_DEFINED__
typedef interface IDavStorage IDavStorage;
#endif 	/* __IDavStorage_FWD_DEFINED__ */


#ifndef __IDynamicStorage_FWD_DEFINED__
#define __IDynamicStorage_FWD_DEFINED__
typedef interface IDynamicStorage IDynamicStorage;
#endif 	/* __IDynamicStorage_FWD_DEFINED__ */


#ifndef __IQueryContinue_FWD_DEFINED__
#define __IQueryContinue_FWD_DEFINED__
typedef interface IQueryContinue IQueryContinue;
#endif 	/* __IQueryContinue_FWD_DEFINED__ */


#ifndef __IUserNotification_FWD_DEFINED__
#define __IUserNotification_FWD_DEFINED__
typedef interface IUserNotification IUserNotification;
#endif 	/* __IUserNotification_FWD_DEFINED__ */


#ifndef __IDockingWindow_FWD_DEFINED__
#define __IDockingWindow_FWD_DEFINED__
typedef interface IDockingWindow IDockingWindow;
#endif 	/* __IDockingWindow_FWD_DEFINED__ */


#ifndef __IDeskBand_FWD_DEFINED__
#define __IDeskBand_FWD_DEFINED__
typedef interface IDeskBand IDeskBand;
#endif 	/* __IDeskBand_FWD_DEFINED__ */


#ifndef __DriveSizeCategorizer_FWD_DEFINED__
#define __DriveSizeCategorizer_FWD_DEFINED__

#ifdef __cplusplus
typedef class DriveSizeCategorizer DriveSizeCategorizer;
#else
typedef struct DriveSizeCategorizer DriveSizeCategorizer;
#endif /* __cplusplus */

#endif 	/* __DriveSizeCategorizer_FWD_DEFINED__ */


#ifndef __DriveTypeCategorizer_FWD_DEFINED__
#define __DriveTypeCategorizer_FWD_DEFINED__

#ifdef __cplusplus
typedef class DriveTypeCategorizer DriveTypeCategorizer;
#else
typedef struct DriveTypeCategorizer DriveTypeCategorizer;
#endif /* __cplusplus */

#endif 	/* __DriveTypeCategorizer_FWD_DEFINED__ */


#ifndef __FreeSpaceCategorizer_FWD_DEFINED__
#define __FreeSpaceCategorizer_FWD_DEFINED__

#ifdef __cplusplus
typedef class FreeSpaceCategorizer FreeSpaceCategorizer;
#else
typedef struct FreeSpaceCategorizer FreeSpaceCategorizer;
#endif /* __cplusplus */

#endif 	/* __FreeSpaceCategorizer_FWD_DEFINED__ */


#ifndef __TimeCategorizer_FWD_DEFINED__
#define __TimeCategorizer_FWD_DEFINED__

#ifdef __cplusplus
typedef class TimeCategorizer TimeCategorizer;
#else
typedef struct TimeCategorizer TimeCategorizer;
#endif /* __cplusplus */

#endif 	/* __TimeCategorizer_FWD_DEFINED__ */


#ifndef __SizeCategorizer_FWD_DEFINED__
#define __SizeCategorizer_FWD_DEFINED__

#ifdef __cplusplus
typedef class SizeCategorizer SizeCategorizer;
#else
typedef struct SizeCategorizer SizeCategorizer;
#endif /* __cplusplus */

#endif 	/* __SizeCategorizer_FWD_DEFINED__ */


#ifndef __AlphabeticalCategorizer_FWD_DEFINED__
#define __AlphabeticalCategorizer_FWD_DEFINED__

#ifdef __cplusplus
typedef class AlphabeticalCategorizer AlphabeticalCategorizer;
#else
typedef struct AlphabeticalCategorizer AlphabeticalCategorizer;
#endif /* __cplusplus */

#endif 	/* __AlphabeticalCategorizer_FWD_DEFINED__ */


#ifndef __CompositeFolder_FWD_DEFINED__
#define __CompositeFolder_FWD_DEFINED__

#ifdef __cplusplus
typedef class CompositeFolder CompositeFolder;
#else
typedef struct CompositeFolder CompositeFolder;
#endif /* __cplusplus */

#endif 	/* __CompositeFolder_FWD_DEFINED__ */


#ifndef __LocalCopyHelper_FWD_DEFINED__
#define __LocalCopyHelper_FWD_DEFINED__

#ifdef __cplusplus
typedef class LocalCopyHelper LocalCopyHelper;
#else
typedef struct LocalCopyHelper LocalCopyHelper;
#endif /* __cplusplus */

#endif 	/* __LocalCopyHelper_FWD_DEFINED__ */


#ifndef __ShellItem_FWD_DEFINED__
#define __ShellItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class ShellItem ShellItem;
#else
typedef struct ShellItem ShellItem;
#endif /* __cplusplus */

#endif 	/* __ShellItem_FWD_DEFINED__ */


#ifndef __ImageProperties_FWD_DEFINED__
#define __ImageProperties_FWD_DEFINED__

#ifdef __cplusplus
typedef class ImageProperties ImageProperties;
#else
typedef struct ImageProperties ImageProperties;
#endif /* __cplusplus */

#endif 	/* __ImageProperties_FWD_DEFINED__ */


#ifndef __PropertiesUI_FWD_DEFINED__
#define __PropertiesUI_FWD_DEFINED__

#ifdef __cplusplus
typedef class PropertiesUI PropertiesUI;
#else
typedef struct PropertiesUI PropertiesUI;
#endif /* __cplusplus */

#endif 	/* __PropertiesUI_FWD_DEFINED__ */


#ifndef __UserNotification_FWD_DEFINED__
#define __UserNotification_FWD_DEFINED__

#ifdef __cplusplus
typedef class UserNotification UserNotification;
#else
typedef struct UserNotification UserNotification;
#endif /* __cplusplus */

#endif 	/* __UserNotification_FWD_DEFINED__ */


/* header files for imported files */
#include "objidl.h"
#include "oleidl.h"
#include "oaidl.h"
#include "shtypes.h"
#include "servprov.h"
#include "comcat.h"

#ifdef __cplusplus
extern "C"{
#endif 

void * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void * ); 

/* interface __MIDL_itf_shobjidl_0000 */
/* [local] */ 

//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (C) Microsoft Corporation, 2000.
//
//--------------------------------------------------------------------------

#ifndef _WINRESRC_
#ifndef _WIN32_IE
#define _WIN32_IE 0x0501
#else
#if (_WIN32_IE < 0x0400) && defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0500)
#error _WIN32_IE setting conflicts with _WIN32_WINNT setting
#endif
#endif
#endif
//===========================================================================
//
// IPersistFolder Interface
//
//  The IPersistFolder interface is used by the file system implementation of
// IShellFolder::BindToObject when it is initializing a shell folder object.
//
//
// [Member functions]
//
// IPersistFolder::Initialize
//
//  This member function is called when the explorer is initializing a
// shell folder object.
//
//  Parameters:
//   pidl -- Specifies the absolute location of the folder.
//
//===========================================================================


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0000_v0_0_s_ifspec;

#ifndef __IPersistFolder_INTERFACE_DEFINED__
#define __IPersistFolder_INTERFACE_DEFINED__

/* interface IPersistFolder */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IPersistFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214EA-0000-0000-C000-000000000046")
    IPersistFolder : public IPersist
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ LPCITEMIDLIST pidl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPersistFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPersistFolder * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPersistFolder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPersistFolder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassID )( 
            IPersistFolder * This,
            /* [out] */ CLSID *pClassID);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IPersistFolder * This,
            /* [in] */ LPCITEMIDLIST pidl);
        
        END_INTERFACE
    } IPersistFolderVtbl;

    interface IPersistFolder
    {
        CONST_VTBL struct IPersistFolderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPersistFolder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPersistFolder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPersistFolder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPersistFolder_GetClassID(This,pClassID)	\
    (This)->lpVtbl -> GetClassID(This,pClassID)


#define IPersistFolder_Initialize(This,pidl)	\
    (This)->lpVtbl -> Initialize(This,pidl)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPersistFolder_Initialize_Proxy( 
    IPersistFolder * This,
    /* [in] */ LPCITEMIDLIST pidl);


void __RPC_STUB IPersistFolder_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPersistFolder_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0143 */
/* [local] */ 

typedef IPersistFolder *LPPERSISTFOLDER;

#if (_WIN32_IE >= 0x0400)


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0143_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0143_v0_0_s_ifspec;

#ifndef __IPersistFolder2_INTERFACE_DEFINED__
#define __IPersistFolder2_INTERFACE_DEFINED__

/* interface IPersistFolder2 */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IPersistFolder2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1AC3D9F0-175C-11d1-95BE-00609797EA4F")
    IPersistFolder2 : public IPersistFolder
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurFolder( 
            /* [out] */ LPITEMIDLIST *ppidl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPersistFolder2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPersistFolder2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPersistFolder2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPersistFolder2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassID )( 
            IPersistFolder2 * This,
            /* [out] */ CLSID *pClassID);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IPersistFolder2 * This,
            /* [in] */ LPCITEMIDLIST pidl);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurFolder )( 
            IPersistFolder2 * This,
            /* [out] */ LPITEMIDLIST *ppidl);
        
        END_INTERFACE
    } IPersistFolder2Vtbl;

    interface IPersistFolder2
    {
        CONST_VTBL struct IPersistFolder2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPersistFolder2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPersistFolder2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPersistFolder2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPersistFolder2_GetClassID(This,pClassID)	\
    (This)->lpVtbl -> GetClassID(This,pClassID)


#define IPersistFolder2_Initialize(This,pidl)	\
    (This)->lpVtbl -> Initialize(This,pidl)


#define IPersistFolder2_GetCurFolder(This,ppidl)	\
    (This)->lpVtbl -> GetCurFolder(This,ppidl)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPersistFolder2_GetCurFolder_Proxy( 
    IPersistFolder2 * This,
    /* [out] */ LPITEMIDLIST *ppidl);


void __RPC_STUB IPersistFolder2_GetCurFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPersistFolder2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0144 */
/* [local] */ 

typedef IPersistFolder2 *LPPERSISTFOLDER2;

#endif


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0144_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0144_v0_0_s_ifspec;

#ifndef __IPersistIDList_INTERFACE_DEFINED__
#define __IPersistIDList_INTERFACE_DEFINED__

/* interface IPersistIDList */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IPersistIDList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1079acfc-29bd-11d3-8e0d-00c04f6837d5")
    IPersistIDList : public IPersist
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE LoadIDList( 
            /* [in] */ LPCITEMIDLIST pidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SaveIDList( 
            /* [out] */ LPITEMIDLIST *ppidl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPersistIDListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPersistIDList * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPersistIDList * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPersistIDList * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassID )( 
            IPersistIDList * This,
            /* [out] */ CLSID *pClassID);
        
        HRESULT ( STDMETHODCALLTYPE *LoadIDList )( 
            IPersistIDList * This,
            /* [in] */ LPCITEMIDLIST pidl);
        
        HRESULT ( STDMETHODCALLTYPE *SaveIDList )( 
            IPersistIDList * This,
            /* [out] */ LPITEMIDLIST *ppidl);
        
        END_INTERFACE
    } IPersistIDListVtbl;

    interface IPersistIDList
    {
        CONST_VTBL struct IPersistIDListVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPersistIDList_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPersistIDList_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPersistIDList_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPersistIDList_GetClassID(This,pClassID)	\
    (This)->lpVtbl -> GetClassID(This,pClassID)


#define IPersistIDList_LoadIDList(This,pidl)	\
    (This)->lpVtbl -> LoadIDList(This,pidl)

#define IPersistIDList_SaveIDList(This,ppidl)	\
    (This)->lpVtbl -> SaveIDList(This,ppidl)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPersistIDList_LoadIDList_Proxy( 
    IPersistIDList * This,
    /* [in] */ LPCITEMIDLIST pidl);


void __RPC_STUB IPersistIDList_LoadIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPersistIDList_SaveIDList_Proxy( 
    IPersistIDList * This,
    /* [out] */ LPITEMIDLIST *ppidl);


void __RPC_STUB IPersistIDList_SaveIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPersistIDList_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0145 */
/* [local] */ 

//-------------------------------------------------------------------------
//
// IEnumIDList interface
//
//  IShellFolder::EnumObjects member returns an IEnumIDList object.
//
//-------------------------------------------------------------------------



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0145_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0145_v0_0_s_ifspec;

#ifndef __IEnumIDList_INTERFACE_DEFINED__
#define __IEnumIDList_INTERFACE_DEFINED__

/* interface IEnumIDList */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IEnumIDList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214F2-0000-0000-C000-000000000046")
    IEnumIDList : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ LPITEMIDLIST *rgelt,
            /* [out] */ ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumIDList **ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumIDListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumIDList * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumIDList * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumIDList * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumIDList * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ LPITEMIDLIST *rgelt,
            /* [out] */ ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumIDList * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumIDList * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumIDList * This,
            /* [out] */ IEnumIDList **ppenum);
        
        END_INTERFACE
    } IEnumIDListVtbl;

    interface IEnumIDList
    {
        CONST_VTBL struct IEnumIDListVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumIDList_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumIDList_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumIDList_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumIDList_Next(This,celt,rgelt,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched)

#define IEnumIDList_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumIDList_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumIDList_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumIDList_Next_Proxy( 
    IEnumIDList * This,
    /* [in] */ ULONG celt,
    /* [length_is][size_is][out] */ LPITEMIDLIST *rgelt,
    /* [out] */ ULONG *pceltFetched);


void __RPC_STUB IEnumIDList_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumIDList_Skip_Proxy( 
    IEnumIDList * This,
    /* [in] */ ULONG celt);


void __RPC_STUB IEnumIDList_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumIDList_Reset_Proxy( 
    IEnumIDList * This);


void __RPC_STUB IEnumIDList_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumIDList_Clone_Proxy( 
    IEnumIDList * This,
    /* [out] */ IEnumIDList **ppenum);


void __RPC_STUB IEnumIDList_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumIDList_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0146 */
/* [local] */ 

typedef IEnumIDList *LPENUMIDLIST;

//-------------------------------------------------------------------------
//
// IShellFolder interface
//
//
// [Member functions]
//
// IShellFolder::BindToObject(pidl, pbc, riid, ppv)
//   This function returns an instance of a sub-folder which is specified
//  by the IDList (pidl).
//
// IShellFolder::BindToStorage(pidl, pbc, riid, ppv)
//   This function returns a storage instance of a sub-folder which is
//  specified by the IDList (pidl). The shell never calls this member
//  function in the first release of Win95.
//
// IShellFolder::CompareIDs(lParam, pidl1, pidl2)
//   This function compares two IDLists and returns the result. The shell
//  explorer always passes 0 as lParam, which indicates 'sort by name'.
//  It should return 0 (as CODE of the scode), if two id indicates the
//  same object; negative value if pidl1 should be placed before pidl2;
//  positive value if pidl2 should be placed before pidl1.
//
// IShellFolder::CreateViewObject(hwndOwner, riid, ppv)
//   This function creates a view object of the folder itself. The view
//  object is a difference instance from the shell folder object.
//   'hwndOwner' can be used  as the owner window of its dialog box or
//  menu during the lifetime of the view object.
//  This member function should always create a new
//  instance which has only one reference count. The explorer may create
//  more than one instances of view object from one shell folder object
//  and treat them as separate instances.
//
// IShellFolder::GetAttributesOf(cidl, apidl, prgfInOut)
//   This function returns the attributes of specified objects in that
//  folder. 'cidl' and 'apidl' specifies objects. 'apidl' contains only
//  simple IDLists. The explorer initializes *prgfInOut with a set of
//  flags to be evaluated. The shell folder may optimize the operation
//  by not returning unspecified flags.
//
// IShellFolder::GetUIObjectOf(hwndOwner, cidl, apidl, riid, prgfInOut, ppv)
//   This function creates a UI object to be used for specified objects.
//  The shell explorer passes either IID_IDataObject (for transfer operation)
//  or IID_IContextMenu (for context menu operation) as riid.
//
// IShellFolder::GetDisplayNameOf
//   This function returns the display name of the specified object.
//  If the ID contains the display name (in the locale character set),
//  it returns the offset to the name. Otherwise, it returns a pointer
//  to the display name string (UNICODE), which is allocated by the
//  task allocator, or fills in a buffer.
//
// IShellFolder::SetNameOf
//   This function sets the display name of the specified object.
//  If it changes the ID as well, it returns the new ID which is
//  alocated by the task allocator.
//
//-------------------------------------------------------------------------
// IShellFolder::GetDisplayNameOf/SetNameOf uFlags
typedef enum tagSHGDN
{
    SHGDN_NORMAL             = 0x0000,  // default (display purpose)
    SHGDN_INFOLDER           = 0x0001,  // displayed under a folder (relative)
    SHGDN_FOREDITING         = 0x1000,  // for in-place editing
    SHGDN_FORADDRESSBAR      = 0x4000,  // UI friendly parsing name (remove ugly stuff)
    SHGDN_FORPARSING         = 0x8000,  // parsing name for ParseDisplayName()
} SHGNO;
typedef DWORD SHGDNF;

// IShellFolder::EnumObjects grfFlags bits
typedef enum tagSHCONTF
{
    SHCONTF_FOLDERS             = 0x0020,   // only want folders enumerated (SHGAO_FOLDER)
    SHCONTF_NONFOLDERS          = 0x0040,   // include non folders
    SHCONTF_INCLUDEHIDDEN       = 0x0080,   // show items normally hidden
    SHCONTF_INIT_ON_FIRST_NEXT  = 0x0100,   // allow EnumObject() to return before validating enum
    SHCONTF_NETPRINTERSRCH      = 0x0200,   // hint that client is looking for printers
    SHCONTF_SHAREABLE           = 0x0400,   // hint that client is looking sharable resources (remote shares)
};
typedef DWORD SHCONTF;

// IShellFolder::CompareIDs lParam flags
//
//  SHCIDS_ALLFIELDS is a mask for lParam indicating that the shell folder
//  should first compare on the lParam column, and if that proves equal,
//  then perform a full comparison on all fields.  This flag is supported
//  if the IShellFolder supports IShellFolder2.
//
//
#define SHCIDS_ALLFIELDS        0x80000000L
#define SHCIDS_COLUMNMASK       0x0000FFFFL
// IShellFolder::GetAttributesOf flags
// DESCRIPTION:
// SFGAO_CANLINK: If this bit is set on an item in the shell folder, a
//            'Create Shortcut' menu item will be added to the File
//            menu and context menus for the item.  If the user selects
//            that command, your IContextMenu::InvokeCommand() will be called
//            with 'link'.
//                 That flag will also be used to determine if 'Create Shortcut'
//            should be added when the item in your folder is dragged to another
//            folder.
#define SFGAO_CANCOPY           DROPEFFECT_COPY // Objects can be copied    (0x1)
#define SFGAO_CANMOVE           DROPEFFECT_MOVE // Objects can be moved     (0x2)
#define SFGAO_CANLINK           DROPEFFECT_LINK // Objects can be linked    (0x4)
#define SFGAO_CANRENAME         0x00000010L     // Objects can be renamed
#define SFGAO_CANDELETE         0x00000020L     // Objects can be deleted
#define SFGAO_HASPROPSHEET      0x00000040L     // Objects have property sheets
#define SFGAO_DROPTARGET        0x00000100L     // Objects are drop target
#define SFGAO_CAPABILITYMASK    0x00000177L
#define SFGAO_ISSLOW            0x00004000L     // 'slow' object
#define SFGAO_GHOSTED           0x00008000L     // ghosted icon
#define SFGAO_LINK              0x00010000L     // Shortcut (link)
#define SFGAO_SHARE             0x00020000L     // shared
#define SFGAO_READONLY          0x00040000L     // read-only
#define SFGAO_HIDDEN            0x00080000L     // hidden object
#define SFGAO_DISPLAYATTRMASK   0x000FC000L
#define SFGAO_FILESYSANCESTOR   0x10000000L     // It contains file system folder
#define SFGAO_STORAGEANCESTOR   0x10000000L     // contains children with accessible storage (supersets FILESYSANCESTOR)
#define SFGAO_FOLDER            0x20000000L     // It's a folder.
#define SFGAO_FILESYSTEM        0x40000000L     // is a file system thing (file/folder/root)
#define SFGAO_HASSUBFOLDER      0x80000000L     // Expandable in the map pane
#define SFGAO_CONTENTSMASK      0x80000000L
#define SFGAO_VALIDATE          0x01000000L     // invalidate cached information
#define SFGAO_REMOVABLE         0x02000000L     // is this removeable media?
#define SFGAO_COMPRESSED        0x04000000L     // Object is compressed (use alt color)
#define SFGAO_BROWSABLE         0x08000000L     // is in-place browsable
#define SFGAO_NONENUMERATED     0x00100000L     // is a non-enumerated object
#define SFGAO_NEWCONTENT        0x00200000L     // should show bold in explorer tree
#define SFGAO_CANMONIKER        0x00400000L     // can create monikers for its objects
#define SFGAO_HASSTORAGE        0x00400000L     // item has accessible storage (replaces CANMONIKER)
typedef ULONG SFGAOF;

// IShellFolder IBindCtx* parameters. the IUnknown for these are
// accessed through IBindCtx::RegisterObjectParam/GetObjectParam

// this object will support IPersist to query a CLSID that should be skipped
// in the binding process. this is to avoid loops or to allow delegation to
// base name space functionality. see SHSkipJunction()

#define STR_SKIP_BINDING_CLSID      L"Skip Binding CLSID"



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0146_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0146_v0_0_s_ifspec;

#ifndef __IShellFolder_INTERFACE_DEFINED__
#define __IShellFolder_INTERFACE_DEFINED__

/* interface IShellFolder */
/* [unique][local][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IShellFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214E6-0000-0000-C000-000000000046")
    IShellFolder : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ParseDisplayName( 
            /* [in] */ HWND hwnd,
            /* [in] */ LPBC pbc,
            /* [string][in] */ LPOLESTR pszDisplayName,
            /* [out] */ ULONG *pchEaten,
            /* [out] */ LPITEMIDLIST *ppidl,
            /* [out][in] */ ULONG *pdwAttributes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumObjects( 
            /* [in] */ HWND hwnd,
            /* [in] */ SHCONTF grfFlags,
            /* [out] */ IEnumIDList **ppenumIDList) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BindToObject( 
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ LPBC pbc,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BindToStorage( 
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ LPBC pbc,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CompareIDs( 
            /* [in] */ LPARAM lParam,
            /* [in] */ LPCITEMIDLIST pidl1,
            /* [in] */ LPCITEMIDLIST pidl2) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateViewObject( 
            /* [in] */ HWND hwndOwner,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAttributesOf( 
            /* [in] */ UINT cidl,
            /* [size_is][in] */ LPCITEMIDLIST *apidl,
            /* [out][in] */ SFGAOF *rgfInOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUIObjectOf( 
            /* [in] */ HWND hwndOwner,
            /* [in] */ UINT cidl,
            /* [size_is][in] */ LPCITEMIDLIST *apidl,
            /* [in] */ REFIID riid,
            UINT *rgfReserved,
            /* [iid_is][out] */ void **ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayNameOf( 
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ SHGDNF uFlags,
            /* [out] */ LPSTRRET lpName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNameOf( 
            /* [in] */ HWND hwnd,
            /* [in] */ LPCITEMIDLIST pidl,
            /* [string][in] */ LPCOLESTR pszName,
            /* [in] */ SHGDNF uFlags,
            /* [out] */ LPITEMIDLIST *ppidlOut) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellFolder * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellFolder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellFolder * This);
        
        HRESULT ( STDMETHODCALLTYPE *ParseDisplayName )( 
            IShellFolder * This,
            /* [in] */ HWND hwnd,
            /* [in] */ LPBC pbc,
            /* [string][in] */ LPOLESTR pszDisplayName,
            /* [out] */ ULONG *pchEaten,
            /* [out] */ LPITEMIDLIST *ppidl,
            /* [out][in] */ ULONG *pdwAttributes);
        
        HRESULT ( STDMETHODCALLTYPE *EnumObjects )( 
            IShellFolder * This,
            /* [in] */ HWND hwnd,
            /* [in] */ SHCONTF grfFlags,
            /* [out] */ IEnumIDList **ppenumIDList);
        
        HRESULT ( STDMETHODCALLTYPE *BindToObject )( 
            IShellFolder * This,
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ LPBC pbc,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv);
        
        HRESULT ( STDMETHODCALLTYPE *BindToStorage )( 
            IShellFolder * This,
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ LPBC pbc,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv);
        
        HRESULT ( STDMETHODCALLTYPE *CompareIDs )( 
            IShellFolder * This,
            /* [in] */ LPARAM lParam,
            /* [in] */ LPCITEMIDLIST pidl1,
            /* [in] */ LPCITEMIDLIST pidl2);
        
        HRESULT ( STDMETHODCALLTYPE *CreateViewObject )( 
            IShellFolder * This,
            /* [in] */ HWND hwndOwner,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv);
        
        HRESULT ( STDMETHODCALLTYPE *GetAttributesOf )( 
            IShellFolder * This,
            /* [in] */ UINT cidl,
            /* [size_is][in] */ LPCITEMIDLIST *apidl,
            /* [out][in] */ SFGAOF *rgfInOut);
        
        HRESULT ( STDMETHODCALLTYPE *GetUIObjectOf )( 
            IShellFolder * This,
            /* [in] */ HWND hwndOwner,
            /* [in] */ UINT cidl,
            /* [size_is][in] */ LPCITEMIDLIST *apidl,
            /* [in] */ REFIID riid,
            UINT *rgfReserved,
            /* [iid_is][out] */ void **ppv);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayNameOf )( 
            IShellFolder * This,
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ SHGDNF uFlags,
            /* [out] */ LPSTRRET lpName);
        
        HRESULT ( STDMETHODCALLTYPE *SetNameOf )( 
            IShellFolder * This,
            /* [in] */ HWND hwnd,
            /* [in] */ LPCITEMIDLIST pidl,
            /* [string][in] */ LPCOLESTR pszName,
            /* [in] */ SHGDNF uFlags,
            /* [out] */ LPITEMIDLIST *ppidlOut);
        
        END_INTERFACE
    } IShellFolderVtbl;

    interface IShellFolder
    {
        CONST_VTBL struct IShellFolderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellFolder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellFolder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellFolder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellFolder_ParseDisplayName(This,hwnd,pbc,pszDisplayName,pchEaten,ppidl,pdwAttributes)	\
    (This)->lpVtbl -> ParseDisplayName(This,hwnd,pbc,pszDisplayName,pchEaten,ppidl,pdwAttributes)

#define IShellFolder_EnumObjects(This,hwnd,grfFlags,ppenumIDList)	\
    (This)->lpVtbl -> EnumObjects(This,hwnd,grfFlags,ppenumIDList)

#define IShellFolder_BindToObject(This,pidl,pbc,riid,ppv)	\
    (This)->lpVtbl -> BindToObject(This,pidl,pbc,riid,ppv)

#define IShellFolder_BindToStorage(This,pidl,pbc,riid,ppv)	\
    (This)->lpVtbl -> BindToStorage(This,pidl,pbc,riid,ppv)

#define IShellFolder_CompareIDs(This,lParam,pidl1,pidl2)	\
    (This)->lpVtbl -> CompareIDs(This,lParam,pidl1,pidl2)

#define IShellFolder_CreateViewObject(This,hwndOwner,riid,ppv)	\
    (This)->lpVtbl -> CreateViewObject(This,hwndOwner,riid,ppv)

#define IShellFolder_GetAttributesOf(This,cidl,apidl,rgfInOut)	\
    (This)->lpVtbl -> GetAttributesOf(This,cidl,apidl,rgfInOut)

#define IShellFolder_GetUIObjectOf(This,hwndOwner,cidl,apidl,riid,rgfReserved,ppv)	\
    (This)->lpVtbl -> GetUIObjectOf(This,hwndOwner,cidl,apidl,riid,rgfReserved,ppv)

#define IShellFolder_GetDisplayNameOf(This,pidl,uFlags,lpName)	\
    (This)->lpVtbl -> GetDisplayNameOf(This,pidl,uFlags,lpName)

#define IShellFolder_SetNameOf(This,hwnd,pidl,pszName,uFlags,ppidlOut)	\
    (This)->lpVtbl -> SetNameOf(This,hwnd,pidl,pszName,uFlags,ppidlOut)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellFolder_ParseDisplayName_Proxy( 
    IShellFolder * This,
    /* [in] */ HWND hwnd,
    /* [in] */ LPBC pbc,
    /* [string][in] */ LPOLESTR pszDisplayName,
    /* [out] */ ULONG *pchEaten,
    /* [out] */ LPITEMIDLIST *ppidl,
    /* [out][in] */ ULONG *pdwAttributes);


void __RPC_STUB IShellFolder_ParseDisplayName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_EnumObjects_Proxy( 
    IShellFolder * This,
    /* [in] */ HWND hwnd,
    /* [in] */ SHCONTF grfFlags,
    /* [out] */ IEnumIDList **ppenumIDList);


void __RPC_STUB IShellFolder_EnumObjects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_BindToObject_Proxy( 
    IShellFolder * This,
    /* [in] */ LPCITEMIDLIST pidl,
    /* [in] */ LPBC pbc,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void **ppv);


void __RPC_STUB IShellFolder_BindToObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_BindToStorage_Proxy( 
    IShellFolder * This,
    /* [in] */ LPCITEMIDLIST pidl,
    /* [in] */ LPBC pbc,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void **ppv);


void __RPC_STUB IShellFolder_BindToStorage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_CompareIDs_Proxy( 
    IShellFolder * This,
    /* [in] */ LPARAM lParam,
    /* [in] */ LPCITEMIDLIST pidl1,
    /* [in] */ LPCITEMIDLIST pidl2);


void __RPC_STUB IShellFolder_CompareIDs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_CreateViewObject_Proxy( 
    IShellFolder * This,
    /* [in] */ HWND hwndOwner,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void **ppv);


void __RPC_STUB IShellFolder_CreateViewObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_GetAttributesOf_Proxy( 
    IShellFolder * This,
    /* [in] */ UINT cidl,
    /* [size_is][in] */ LPCITEMIDLIST *apidl,
    /* [out][in] */ SFGAOF *rgfInOut);


void __RPC_STUB IShellFolder_GetAttributesOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_GetUIObjectOf_Proxy( 
    IShellFolder * This,
    /* [in] */ HWND hwndOwner,
    /* [in] */ UINT cidl,
    /* [size_is][in] */ LPCITEMIDLIST *apidl,
    /* [in] */ REFIID riid,
    UINT *rgfReserved,
    /* [iid_is][out] */ void **ppv);


void __RPC_STUB IShellFolder_GetUIObjectOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_GetDisplayNameOf_Proxy( 
    IShellFolder * This,
    /* [in] */ LPCITEMIDLIST pidl,
    /* [in] */ SHGDNF uFlags,
    /* [out] */ LPSTRRET lpName);


void __RPC_STUB IShellFolder_GetDisplayNameOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder_SetNameOf_Proxy( 
    IShellFolder * This,
    /* [in] */ HWND hwnd,
    /* [in] */ LPCITEMIDLIST pidl,
    /* [string][in] */ LPCOLESTR pszName,
    /* [in] */ SHGDNF uFlags,
    /* [out] */ LPITEMIDLIST *ppidlOut);


void __RPC_STUB IShellFolder_SetNameOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellFolder_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0147 */
/* [local] */ 

typedef IShellFolder *LPSHELLFOLDER;

#if (_WIN32_IE >= 0x0500)
//-------------------------------------------------------------------------
//
// IEnumExtraSearch interface
//
//  IShellFolder2::EnumSearches member returns an IEnumExtraSearch object.
//
//-------------------------------------------------------------------------
typedef struct tagEXTRASEARCH
    {
    GUID guidSearch;
    WCHAR wszFriendlyName[ 80 ];
    WCHAR wszUrl[ 2084 ];
    } 	EXTRASEARCH;

typedef struct tagEXTRASEARCH *LPEXTRASEARCH;

typedef struct IEnumExtraSearch *LPENUMEXTRASEARCH;




extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0147_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0147_v0_0_s_ifspec;

#ifndef __IEnumExtraSearch_INTERFACE_DEFINED__
#define __IEnumExtraSearch_INTERFACE_DEFINED__

/* interface IEnumExtraSearch */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IEnumExtraSearch;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E700BE1-9DB6-11d1-A1CE-00C04FD75D13")
    IEnumExtraSearch : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ EXTRASEARCH *rgelt,
            /* [out] */ ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumExtraSearch **ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumExtraSearchVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumExtraSearch * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumExtraSearch * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumExtraSearch * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumExtraSearch * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ EXTRASEARCH *rgelt,
            /* [out] */ ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumExtraSearch * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumExtraSearch * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumExtraSearch * This,
            /* [out] */ IEnumExtraSearch **ppenum);
        
        END_INTERFACE
    } IEnumExtraSearchVtbl;

    interface IEnumExtraSearch
    {
        CONST_VTBL struct IEnumExtraSearchVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumExtraSearch_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumExtraSearch_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumExtraSearch_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumExtraSearch_Next(This,celt,rgelt,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched)

#define IEnumExtraSearch_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumExtraSearch_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumExtraSearch_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumExtraSearch_Next_Proxy( 
    IEnumExtraSearch * This,
    /* [in] */ ULONG celt,
    /* [length_is][size_is][out] */ EXTRASEARCH *rgelt,
    /* [out] */ ULONG *pceltFetched);


void __RPC_STUB IEnumExtraSearch_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumExtraSearch_Skip_Proxy( 
    IEnumExtraSearch * This,
    /* [in] */ ULONG celt);


void __RPC_STUB IEnumExtraSearch_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumExtraSearch_Reset_Proxy( 
    IEnumExtraSearch * This);


void __RPC_STUB IEnumExtraSearch_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumExtraSearch_Clone_Proxy( 
    IEnumExtraSearch * This,
    /* [out] */ IEnumExtraSearch **ppenum);


void __RPC_STUB IEnumExtraSearch_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumExtraSearch_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0148 */
/* [local] */ 

//--------------------------------------------------------------------------
// IShellFolder2
//
// [member functions]
//
// IShellFolder2::GetDefaultSearchGUID(LPGUID pGuid)
//   Returns the guid of the search that is to be invoked when user clicks 
//   on the search toolbar button
//
// IShellFolder2::EnumSearches(IEnumExtraSearch **ppenum)
//   gives an enumerator of the searches to be added to the search menu
//--------------------------------------------------------------------------
//
// IShellFolder2::GetDefaultColumnState values
typedef /* [public][v1_enum] */ 
enum __MIDL___MIDL_itf_shobjidl_0148_0001
    {	SHCOLSTATE_TYPE_STR	= 0x1,
	SHCOLSTATE_TYPE_INT	= 0x2,
	SHCOLSTATE_TYPE_DATE	= 0x3,
	SHCOLSTATE_TYPEMASK	= 0xf,
	SHCOLSTATE_ONBYDEFAULT	= 0x10,
	SHCOLSTATE_SLOW	= 0x20,
	SHCOLSTATE_EXTENDED	= 0x40,
	SHCOLSTATE_SECONDARYUI	= 0x80,
	SHCOLSTATE_HIDDEN	= 0x100
    } 	SHCOLSTATE;

typedef DWORD SHCOLSTATEF;

typedef /* [public][public][public][public][public][public][public] */ struct __MIDL___MIDL_itf_shobjidl_0148_0002
    {
    GUID fmtid;
    DWORD pid;
    } 	SHCOLUMNID;

typedef struct __MIDL___MIDL_itf_shobjidl_0148_0002 *LPSHCOLUMNID;

typedef const SHCOLUMNID *LPCSHCOLUMNID;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0148_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0148_v0_0_s_ifspec;

#ifndef __IShellFolder2_INTERFACE_DEFINED__
#define __IShellFolder2_INTERFACE_DEFINED__

/* interface IShellFolder2 */
/* [unique][local][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IShellFolder2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("93F2F68C-1D1B-11d3-A30E-00C04F79ABD1")
    IShellFolder2 : public IShellFolder
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDefaultSearchGUID( 
            /* [out] */ GUID *pguid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumSearches( 
            /* [out] */ IEnumExtraSearch **ppenum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultColumn( 
            DWORD dwRes,
            /* [out] */ ULONG *pSort,
            /* [out] */ ULONG *pDisplay) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultColumnState( 
            /* [in] */ UINT iColumn,
            /* [out] */ SHCOLSTATEF *pcsFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDetailsEx( 
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ const SHCOLUMNID *pscid,
            /* [out] */ VARIANT *pv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDetailsOf( 
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ UINT iColumn,
            /* [out] */ SHELLDETAILS *psd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MapColumnToSCID( 
            /* [in] */ UINT iColumn,
            /* [in] */ SHCOLUMNID *pscid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellFolder2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellFolder2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellFolder2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellFolder2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *ParseDisplayName )( 
            IShellFolder2 * This,
            /* [in] */ HWND hwnd,
            /* [in] */ LPBC pbc,
            /* [string][in] */ LPOLESTR pszDisplayName,
            /* [out] */ ULONG *pchEaten,
            /* [out] */ LPITEMIDLIST *ppidl,
            /* [out][in] */ ULONG *pdwAttributes);
        
        HRESULT ( STDMETHODCALLTYPE *EnumObjects )( 
            IShellFolder2 * This,
            /* [in] */ HWND hwnd,
            /* [in] */ SHCONTF grfFlags,
            /* [out] */ IEnumIDList **ppenumIDList);
        
        HRESULT ( STDMETHODCALLTYPE *BindToObject )( 
            IShellFolder2 * This,
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ LPBC pbc,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv);
        
        HRESULT ( STDMETHODCALLTYPE *BindToStorage )( 
            IShellFolder2 * This,
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ LPBC pbc,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv);
        
        HRESULT ( STDMETHODCALLTYPE *CompareIDs )( 
            IShellFolder2 * This,
            /* [in] */ LPARAM lParam,
            /* [in] */ LPCITEMIDLIST pidl1,
            /* [in] */ LPCITEMIDLIST pidl2);
        
        HRESULT ( STDMETHODCALLTYPE *CreateViewObject )( 
            IShellFolder2 * This,
            /* [in] */ HWND hwndOwner,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv);
        
        HRESULT ( STDMETHODCALLTYPE *GetAttributesOf )( 
            IShellFolder2 * This,
            /* [in] */ UINT cidl,
            /* [size_is][in] */ LPCITEMIDLIST *apidl,
            /* [out][in] */ SFGAOF *rgfInOut);
        
        HRESULT ( STDMETHODCALLTYPE *GetUIObjectOf )( 
            IShellFolder2 * This,
            /* [in] */ HWND hwndOwner,
            /* [in] */ UINT cidl,
            /* [size_is][in] */ LPCITEMIDLIST *apidl,
            /* [in] */ REFIID riid,
            UINT *rgfReserved,
            /* [iid_is][out] */ void **ppv);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayNameOf )( 
            IShellFolder2 * This,
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ SHGDNF uFlags,
            /* [out] */ LPSTRRET lpName);
        
        HRESULT ( STDMETHODCALLTYPE *SetNameOf )( 
            IShellFolder2 * This,
            /* [in] */ HWND hwnd,
            /* [in] */ LPCITEMIDLIST pidl,
            /* [string][in] */ LPCOLESTR pszName,
            /* [in] */ SHGDNF uFlags,
            /* [out] */ LPITEMIDLIST *ppidlOut);
        
        HRESULT ( STDMETHODCALLTYPE *GetDefaultSearchGUID )( 
            IShellFolder2 * This,
            /* [out] */ GUID *pguid);
        
        HRESULT ( STDMETHODCALLTYPE *EnumSearches )( 
            IShellFolder2 * This,
            /* [out] */ IEnumExtraSearch **ppenum);
        
        HRESULT ( STDMETHODCALLTYPE *GetDefaultColumn )( 
            IShellFolder2 * This,
            DWORD dwRes,
            /* [out] */ ULONG *pSort,
            /* [out] */ ULONG *pDisplay);
        
        HRESULT ( STDMETHODCALLTYPE *GetDefaultColumnState )( 
            IShellFolder2 * This,
            /* [in] */ UINT iColumn,
            /* [out] */ SHCOLSTATEF *pcsFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetDetailsEx )( 
            IShellFolder2 * This,
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ const SHCOLUMNID *pscid,
            /* [out] */ VARIANT *pv);
        
        HRESULT ( STDMETHODCALLTYPE *GetDetailsOf )( 
            IShellFolder2 * This,
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ UINT iColumn,
            /* [out] */ SHELLDETAILS *psd);
        
        HRESULT ( STDMETHODCALLTYPE *MapColumnToSCID )( 
            IShellFolder2 * This,
            /* [in] */ UINT iColumn,
            /* [in] */ SHCOLUMNID *pscid);
        
        END_INTERFACE
    } IShellFolder2Vtbl;

    interface IShellFolder2
    {
        CONST_VTBL struct IShellFolder2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellFolder2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellFolder2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellFolder2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellFolder2_ParseDisplayName(This,hwnd,pbc,pszDisplayName,pchEaten,ppidl,pdwAttributes)	\
    (This)->lpVtbl -> ParseDisplayName(This,hwnd,pbc,pszDisplayName,pchEaten,ppidl,pdwAttributes)

#define IShellFolder2_EnumObjects(This,hwnd,grfFlags,ppenumIDList)	\
    (This)->lpVtbl -> EnumObjects(This,hwnd,grfFlags,ppenumIDList)

#define IShellFolder2_BindToObject(This,pidl,pbc,riid,ppv)	\
    (This)->lpVtbl -> BindToObject(This,pidl,pbc,riid,ppv)

#define IShellFolder2_BindToStorage(This,pidl,pbc,riid,ppv)	\
    (This)->lpVtbl -> BindToStorage(This,pidl,pbc,riid,ppv)

#define IShellFolder2_CompareIDs(This,lParam,pidl1,pidl2)	\
    (This)->lpVtbl -> CompareIDs(This,lParam,pidl1,pidl2)

#define IShellFolder2_CreateViewObject(This,hwndOwner,riid,ppv)	\
    (This)->lpVtbl -> CreateViewObject(This,hwndOwner,riid,ppv)

#define IShellFolder2_GetAttributesOf(This,cidl,apidl,rgfInOut)	\
    (This)->lpVtbl -> GetAttributesOf(This,cidl,apidl,rgfInOut)

#define IShellFolder2_GetUIObjectOf(This,hwndOwner,cidl,apidl,riid,rgfReserved,ppv)	\
    (This)->lpVtbl -> GetUIObjectOf(This,hwndOwner,cidl,apidl,riid,rgfReserved,ppv)

#define IShellFolder2_GetDisplayNameOf(This,pidl,uFlags,lpName)	\
    (This)->lpVtbl -> GetDisplayNameOf(This,pidl,uFlags,lpName)

#define IShellFolder2_SetNameOf(This,hwnd,pidl,pszName,uFlags,ppidlOut)	\
    (This)->lpVtbl -> SetNameOf(This,hwnd,pidl,pszName,uFlags,ppidlOut)


#define IShellFolder2_GetDefaultSearchGUID(This,pguid)	\
    (This)->lpVtbl -> GetDefaultSearchGUID(This,pguid)

#define IShellFolder2_EnumSearches(This,ppenum)	\
    (This)->lpVtbl -> EnumSearches(This,ppenum)

#define IShellFolder2_GetDefaultColumn(This,dwRes,pSort,pDisplay)	\
    (This)->lpVtbl -> GetDefaultColumn(This,dwRes,pSort,pDisplay)

#define IShellFolder2_GetDefaultColumnState(This,iColumn,pcsFlags)	\
    (This)->lpVtbl -> GetDefaultColumnState(This,iColumn,pcsFlags)

#define IShellFolder2_GetDetailsEx(This,pidl,pscid,pv)	\
    (This)->lpVtbl -> GetDetailsEx(This,pidl,pscid,pv)

#define IShellFolder2_GetDetailsOf(This,pidl,iColumn,psd)	\
    (This)->lpVtbl -> GetDetailsOf(This,pidl,iColumn,psd)

#define IShellFolder2_MapColumnToSCID(This,iColumn,pscid)	\
    (This)->lpVtbl -> MapColumnToSCID(This,iColumn,pscid)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellFolder2_GetDefaultSearchGUID_Proxy( 
    IShellFolder2 * This,
    /* [out] */ GUID *pguid);


void __RPC_STUB IShellFolder2_GetDefaultSearchGUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder2_EnumSearches_Proxy( 
    IShellFolder2 * This,
    /* [out] */ IEnumExtraSearch **ppenum);


void __RPC_STUB IShellFolder2_EnumSearches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder2_GetDefaultColumn_Proxy( 
    IShellFolder2 * This,
    DWORD dwRes,
    /* [out] */ ULONG *pSort,
    /* [out] */ ULONG *pDisplay);


void __RPC_STUB IShellFolder2_GetDefaultColumn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder2_GetDefaultColumnState_Proxy( 
    IShellFolder2 * This,
    /* [in] */ UINT iColumn,
    /* [out] */ SHCOLSTATEF *pcsFlags);


void __RPC_STUB IShellFolder2_GetDefaultColumnState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder2_GetDetailsEx_Proxy( 
    IShellFolder2 * This,
    /* [in] */ LPCITEMIDLIST pidl,
    /* [in] */ const SHCOLUMNID *pscid,
    /* [out] */ VARIANT *pv);


void __RPC_STUB IShellFolder2_GetDetailsEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder2_GetDetailsOf_Proxy( 
    IShellFolder2 * This,
    /* [in] */ LPCITEMIDLIST pidl,
    /* [in] */ UINT iColumn,
    /* [out] */ SHELLDETAILS *psd);


void __RPC_STUB IShellFolder2_GetDetailsOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellFolder2_MapColumnToSCID_Proxy( 
    IShellFolder2 * This,
    /* [in] */ UINT iColumn,
    /* [in] */ SHCOLUMNID *pscid);


void __RPC_STUB IShellFolder2_MapColumnToSCID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellFolder2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0149 */
/* [local] */ 

#endif // _WIN32_IE >= 0x0500)
//--------------------------------------------------------------------------
//
// FOLDERSETTINGS
//
//  FOLDERSETTINGS is a data structure that explorer passes from one folder
// view to another, when the user is browsing. It calls ISV::GetCurrentInfo
// member to get the current settings and pass it to ISV::CreateViewWindow
// to allow the next folder view 'inherit' it. These settings assumes a
// particular UI (which the shell's folder view has), and shell extensions
// may or may not use those settings.
//
//--------------------------------------------------------------------------
typedef char *LPVIEWSETTINGS;

// NB Bitfields.
// FWF_DESKTOP implies FWF_TRANSPARENT/NOCLIENTEDGE/NOSCROLL
typedef /* [public][v1_enum] */ 
enum __MIDL___MIDL_itf_shobjidl_0149_0001
    {	FWF_AUTOARRANGE	= 0x1,
	FWF_ABBREVIATEDNAMES	= 0x2,
	FWF_SNAPTOGRID	= 0x4,
	FWF_OWNERDATA	= 0x8,
	FWF_BESTFITWINDOW	= 0x10,
	FWF_DESKTOP	= 0x20,
	FWF_SINGLESEL	= 0x40,
	FWF_NOSUBFOLDERS	= 0x80,
	FWF_TRANSPARENT	= 0x100,
	FWF_NOCLIENTEDGE	= 0x200,
	FWF_NOSCROLL	= 0x400,
	FWF_ALIGNLEFT	= 0x800,
	FWF_NOICONS	= 0x1000,
	FWF_SHOWSELALWAYS	= 0x2000,
	FWF_NOVISIBLE	= 0x4000,
	FWF_SINGLECLICKACTIVATE	= 0x8000,
	FWF_NOWEBVIEW	= 0x10000,
	FWF_HIDEFILENAMES	= 0x20000
    } 	FOLDERFLAGS;

typedef /* [public][v1_enum] */ 
enum __MIDL___MIDL_itf_shobjidl_0149_0002
    {	FVM_FIRST	= 1,
	FVM_ICON	= 1,
	FVM_SMALLICON	= 2,
	FVM_LIST	= 3,
	FVM_DETAILS	= 4,
	FVM_THUMBNAIL	= 5,
	FVM_TILE	= 6,
	FVM_THUMBSTRIP	= 7,
	FVM_LAST	= 7
    } 	FOLDERVIEWMODE;

typedef /* [public][public][public][public][public][public][public][public][public] */ struct __MIDL___MIDL_itf_shobjidl_0149_0003
    {
    UINT ViewMode;
    UINT fFlags;
    } 	FOLDERSETTINGS;

typedef FOLDERSETTINGS *LPFOLDERSETTINGS;

typedef const FOLDERSETTINGS *LPCFOLDERSETTINGS;

typedef FOLDERSETTINGS *PFOLDERSETTINGS;

#define SVSI_DESELECT   0x0000
#define SVSI_SELECT     0x0001
#define SVSI_EDIT       0x0003  // includes select
#define SVSI_DESELECTOTHERS 0x0004
#define SVSI_ENSUREVISIBLE  0x0008
#define SVSI_FOCUSED        0x0010
#define SVSI_TRANSLATEPT    0x0020
#define SVSI_SELECTIONMARK  0x0040
#define SVGIO_BACKGROUND    0x00000000
#define SVGIO_SELECTION     0x00000001
#define SVGIO_ALLVIEW       0x00000002
typedef /* [public][v1_enum] */ 
enum __MIDL___MIDL_itf_shobjidl_0149_0004
    {	SVUIA_DEACTIVATE	= 0,
	SVUIA_ACTIVATE_NOFOCUS	= 1,
	SVUIA_ACTIVATE_FOCUS	= 2,
	SVUIA_INPLACEACTIVATE	= 3
    } 	SVUIA_STATUS;

#ifdef _FIX_ENABLEMODELESS_CONFLICT
#define    EnableModeless EnableModelessSV
#endif
#ifdef _NEVER_
typedef LPARAM LPFNSVADDPROPSHEETPAGE;

#else //!_NEVER_
#include <prsht.h>
typedef LPFNADDPROPSHEETPAGE LPFNSVADDPROPSHEETPAGE;
#endif //_NEVER_



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0149_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0149_v0_0_s_ifspec;

#ifndef __IShellView_INTERFACE_DEFINED__
#define __IShellView_INTERFACE_DEFINED__

/* interface IShellView */
/* [unique][object][uuid][helpstring] */ 

typedef IShellView *LPSHELLVIEW;


EXTERN_C const IID IID_IShellView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214E3-0000-0000-C000-000000000046")
    IShellView : public IOleWindow
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE TranslateAccelerator( 
            /* [in] */ LPMSG lpmsg) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnableModeless( 
            /* [in] */ BOOL fEnable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UIActivate( 
            /* [in] */ UINT uState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Refresh( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateViewWindow( 
            /* [in] */ IShellView *psvPrevious,
            /* [in] */ LPCFOLDERSETTINGS lpfs,
            /* [in] */ IShellBrowser *psb,
            /* [out] */ RECT *prcView,
            /* [out] */ HWND *phWnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DestroyViewWindow( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentInfo( 
            /* [out] */ LPFOLDERSETTINGS lpfs) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE AddPropertySheetPages( 
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfn,
            /* [in] */ LPARAM lparam) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SaveViewState( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SelectItem( 
            /* [in] */ LPCITEMIDLIST pidlItem,
            /* [in] */ UINT uFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemObject( 
            /* [in] */ UINT uItem,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellView * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellView * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE *GetWindow )( 
            IShellView * This,
            /* [out] */ HWND *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE *ContextSensitiveHelp )( 
            IShellView * This,
            /* [in] */ BOOL fEnterMode);
        
        HRESULT ( STDMETHODCALLTYPE *TranslateAccelerator )( 
            IShellView * This,
            /* [in] */ LPMSG lpmsg);
        
        HRESULT ( STDMETHODCALLTYPE *EnableModeless )( 
            IShellView * This,
            /* [in] */ BOOL fEnable);
        
        HRESULT ( STDMETHODCALLTYPE *UIActivate )( 
            IShellView * This,
            /* [in] */ UINT uState);
        
        HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            IShellView * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateViewWindow )( 
            IShellView * This,
            /* [in] */ IShellView *psvPrevious,
            /* [in] */ LPCFOLDERSETTINGS lpfs,
            /* [in] */ IShellBrowser *psb,
            /* [out] */ RECT *prcView,
            /* [out] */ HWND *phWnd);
        
        HRESULT ( STDMETHODCALLTYPE *DestroyViewWindow )( 
            IShellView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentInfo )( 
            IShellView * This,
            /* [out] */ LPFOLDERSETTINGS lpfs);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *AddPropertySheetPages )( 
            IShellView * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfn,
            /* [in] */ LPARAM lparam);
        
        HRESULT ( STDMETHODCALLTYPE *SaveViewState )( 
            IShellView * This);
        
        HRESULT ( STDMETHODCALLTYPE *SelectItem )( 
            IShellView * This,
            /* [in] */ LPCITEMIDLIST pidlItem,
            /* [in] */ UINT uFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemObject )( 
            IShellView * This,
            /* [in] */ UINT uItem,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv);
        
        END_INTERFACE
    } IShellViewVtbl;

    interface IShellView
    {
        CONST_VTBL struct IShellViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellView_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellView_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellView_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellView_GetWindow(This,phwnd)	\
    (This)->lpVtbl -> GetWindow(This,phwnd)

#define IShellView_ContextSensitiveHelp(This,fEnterMode)	\
    (This)->lpVtbl -> ContextSensitiveHelp(This,fEnterMode)


#define IShellView_TranslateAccelerator(This,lpmsg)	\
    (This)->lpVtbl -> TranslateAccelerator(This,lpmsg)

#define IShellView_EnableModeless(This,fEnable)	\
    (This)->lpVtbl -> EnableModeless(This,fEnable)

#define IShellView_UIActivate(This,uState)	\
    (This)->lpVtbl -> UIActivate(This,uState)

#define IShellView_Refresh(This)	\
    (This)->lpVtbl -> Refresh(This)

#define IShellView_CreateViewWindow(This,psvPrevious,lpfs,psb,prcView,phWnd)	\
    (This)->lpVtbl -> CreateViewWindow(This,psvPrevious,lpfs,psb,prcView,phWnd)

#define IShellView_DestroyViewWindow(This)	\
    (This)->lpVtbl -> DestroyViewWindow(This)

#define IShellView_GetCurrentInfo(This,lpfs)	\
    (This)->lpVtbl -> GetCurrentInfo(This,lpfs)

#define IShellView_AddPropertySheetPages(This,dwReserved,pfn,lparam)	\
    (This)->lpVtbl -> AddPropertySheetPages(This,dwReserved,pfn,lparam)

#define IShellView_SaveViewState(This)	\
    (This)->lpVtbl -> SaveViewState(This)

#define IShellView_SelectItem(This,pidlItem,uFlags)	\
    (This)->lpVtbl -> SelectItem(This,pidlItem,uFlags)

#define IShellView_GetItemObject(This,uItem,riid,ppv)	\
    (This)->lpVtbl -> GetItemObject(This,uItem,riid,ppv)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellView_TranslateAccelerator_Proxy( 
    IShellView * This,
    /* [in] */ LPMSG lpmsg);


void __RPC_STUB IShellView_TranslateAccelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_EnableModeless_Proxy( 
    IShellView * This,
    /* [in] */ BOOL fEnable);


void __RPC_STUB IShellView_EnableModeless_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_UIActivate_Proxy( 
    IShellView * This,
    /* [in] */ UINT uState);


void __RPC_STUB IShellView_UIActivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_Refresh_Proxy( 
    IShellView * This);


void __RPC_STUB IShellView_Refresh_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_CreateViewWindow_Proxy( 
    IShellView * This,
    /* [in] */ IShellView *psvPrevious,
    /* [in] */ LPCFOLDERSETTINGS lpfs,
    /* [in] */ IShellBrowser *psb,
    /* [out] */ RECT *prcView,
    /* [out] */ HWND *phWnd);


void __RPC_STUB IShellView_CreateViewWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_DestroyViewWindow_Proxy( 
    IShellView * This);


void __RPC_STUB IShellView_DestroyViewWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_GetCurrentInfo_Proxy( 
    IShellView * This,
    /* [out] */ LPFOLDERSETTINGS lpfs);


void __RPC_STUB IShellView_GetCurrentInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [local] */ HRESULT STDMETHODCALLTYPE IShellView_AddPropertySheetPages_Proxy( 
    IShellView * This,
    /* [in] */ DWORD dwReserved,
    /* [in] */ LPFNSVADDPROPSHEETPAGE pfn,
    /* [in] */ LPARAM lparam);


void __RPC_STUB IShellView_AddPropertySheetPages_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_SaveViewState_Proxy( 
    IShellView * This);


void __RPC_STUB IShellView_SaveViewState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_SelectItem_Proxy( 
    IShellView * This,
    /* [in] */ LPCITEMIDLIST pidlItem,
    /* [in] */ UINT uFlags);


void __RPC_STUB IShellView_SelectItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView_GetItemObject_Proxy( 
    IShellView * This,
    /* [in] */ UINT uItem,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void **ppv);


void __RPC_STUB IShellView_GetItemObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellView_INTERFACE_DEFINED__ */


#ifndef __IShellView2_INTERFACE_DEFINED__
#define __IShellView2_INTERFACE_DEFINED__

/* interface IShellView2 */
/* [unique][object][uuid][helpstring] */ 

typedef GUID SHELLVIEWID;

#define SV2GV_CURRENTVIEW ((UINT)-1)
#define SV2GV_DEFAULTVIEW ((UINT)-2)
#include <pshpack8.h>
typedef struct _SV2CVW2_PARAMS
    {
    DWORD cbSize;
    IShellView *psvPrev;
    LPCFOLDERSETTINGS pfs;
    IShellBrowser *psbOwner;
    RECT *prcView;
    const SHELLVIEWID *pvid;
    HWND hwndView;
    } 	SV2CVW2_PARAMS;

typedef struct _SV2CVW2_PARAMS *LPSV2CVW2_PARAMS;

#include <poppack.h>

EXTERN_C const IID IID_IShellView2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("88E39E80-3578-11CF-AE69-08002B2E1262")
    IShellView2 : public IShellView
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [out][in] */ SHELLVIEWID *pvid,
            /* [in] */ ULONG uView) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateViewWindow2( 
            /* [in] */ LPSV2CVW2_PARAMS lpParams) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HandleRename( 
            /* [in] */ LPCITEMIDLIST pidlNew) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SelectAndPositionItem( 
            /* [in] */ LPCITEMIDLIST pidlItem,
            /* [in] */ UINT uFlags,
            /* [in] */ POINT *ppt) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellView2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellView2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellView2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellView2 * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE *GetWindow )( 
            IShellView2 * This,
            /* [out] */ HWND *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE *ContextSensitiveHelp )( 
            IShellView2 * This,
            /* [in] */ BOOL fEnterMode);
        
        HRESULT ( STDMETHODCALLTYPE *TranslateAccelerator )( 
            IShellView2 * This,
            /* [in] */ LPMSG lpmsg);
        
        HRESULT ( STDMETHODCALLTYPE *EnableModeless )( 
            IShellView2 * This,
            /* [in] */ BOOL fEnable);
        
        HRESULT ( STDMETHODCALLTYPE *UIActivate )( 
            IShellView2 * This,
            /* [in] */ UINT uState);
        
        HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            IShellView2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateViewWindow )( 
            IShellView2 * This,
            /* [in] */ IShellView *psvPrevious,
            /* [in] */ LPCFOLDERSETTINGS lpfs,
            /* [in] */ IShellBrowser *psb,
            /* [out] */ RECT *prcView,
            /* [out] */ HWND *phWnd);
        
        HRESULT ( STDMETHODCALLTYPE *DestroyViewWindow )( 
            IShellView2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentInfo )( 
            IShellView2 * This,
            /* [out] */ LPFOLDERSETTINGS lpfs);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *AddPropertySheetPages )( 
            IShellView2 * This,
            /* [in] */ DWORD dwReserved,
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfn,
            /* [in] */ LPARAM lparam);
        
        HRESULT ( STDMETHODCALLTYPE *SaveViewState )( 
            IShellView2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *SelectItem )( 
            IShellView2 * This,
            /* [in] */ LPCITEMIDLIST pidlItem,
            /* [in] */ UINT uFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemObject )( 
            IShellView2 * This,
            /* [in] */ UINT uItem,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            IShellView2 * This,
            /* [out][in] */ SHELLVIEWID *pvid,
            /* [in] */ ULONG uView);
        
        HRESULT ( STDMETHODCALLTYPE *CreateViewWindow2 )( 
            IShellView2 * This,
            /* [in] */ LPSV2CVW2_PARAMS lpParams);
        
        HRESULT ( STDMETHODCALLTYPE *HandleRename )( 
            IShellView2 * This,
            /* [in] */ LPCITEMIDLIST pidlNew);
        
        HRESULT ( STDMETHODCALLTYPE *SelectAndPositionItem )( 
            IShellView2 * This,
            /* [in] */ LPCITEMIDLIST pidlItem,
            /* [in] */ UINT uFlags,
            /* [in] */ POINT *ppt);
        
        END_INTERFACE
    } IShellView2Vtbl;

    interface IShellView2
    {
        CONST_VTBL struct IShellView2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellView2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellView2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellView2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellView2_GetWindow(This,phwnd)	\
    (This)->lpVtbl -> GetWindow(This,phwnd)

#define IShellView2_ContextSensitiveHelp(This,fEnterMode)	\
    (This)->lpVtbl -> ContextSensitiveHelp(This,fEnterMode)


#define IShellView2_TranslateAccelerator(This,lpmsg)	\
    (This)->lpVtbl -> TranslateAccelerator(This,lpmsg)

#define IShellView2_EnableModeless(This,fEnable)	\
    (This)->lpVtbl -> EnableModeless(This,fEnable)

#define IShellView2_UIActivate(This,uState)	\
    (This)->lpVtbl -> UIActivate(This,uState)

#define IShellView2_Refresh(This)	\
    (This)->lpVtbl -> Refresh(This)

#define IShellView2_CreateViewWindow(This,psvPrevious,lpfs,psb,prcView,phWnd)	\
    (This)->lpVtbl -> CreateViewWindow(This,psvPrevious,lpfs,psb,prcView,phWnd)

#define IShellView2_DestroyViewWindow(This)	\
    (This)->lpVtbl -> DestroyViewWindow(This)

#define IShellView2_GetCurrentInfo(This,lpfs)	\
    (This)->lpVtbl -> GetCurrentInfo(This,lpfs)

#define IShellView2_AddPropertySheetPages(This,dwReserved,pfn,lparam)	\
    (This)->lpVtbl -> AddPropertySheetPages(This,dwReserved,pfn,lparam)

#define IShellView2_SaveViewState(This)	\
    (This)->lpVtbl -> SaveViewState(This)

#define IShellView2_SelectItem(This,pidlItem,uFlags)	\
    (This)->lpVtbl -> SelectItem(This,pidlItem,uFlags)

#define IShellView2_GetItemObject(This,uItem,riid,ppv)	\
    (This)->lpVtbl -> GetItemObject(This,uItem,riid,ppv)


#define IShellView2_GetView(This,pvid,uView)	\
    (This)->lpVtbl -> GetView(This,pvid,uView)

#define IShellView2_CreateViewWindow2(This,lpParams)	\
    (This)->lpVtbl -> CreateViewWindow2(This,lpParams)

#define IShellView2_HandleRename(This,pidlNew)	\
    (This)->lpVtbl -> HandleRename(This,pidlNew)

#define IShellView2_SelectAndPositionItem(This,pidlItem,uFlags,ppt)	\
    (This)->lpVtbl -> SelectAndPositionItem(This,pidlItem,uFlags,ppt)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellView2_GetView_Proxy( 
    IShellView2 * This,
    /* [out][in] */ SHELLVIEWID *pvid,
    /* [in] */ ULONG uView);


void __RPC_STUB IShellView2_GetView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView2_CreateViewWindow2_Proxy( 
    IShellView2 * This,
    /* [in] */ LPSV2CVW2_PARAMS lpParams);


void __RPC_STUB IShellView2_CreateViewWindow2_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView2_HandleRename_Proxy( 
    IShellView2 * This,
    /* [in] */ LPCITEMIDLIST pidlNew);


void __RPC_STUB IShellView2_HandleRename_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellView2_SelectAndPositionItem_Proxy( 
    IShellView2 * This,
    /* [in] */ LPCITEMIDLIST pidlItem,
    /* [in] */ UINT uFlags,
    /* [in] */ POINT *ppt);


void __RPC_STUB IShellView2_SelectAndPositionItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellView2_INTERFACE_DEFINED__ */


#ifndef __IFolderView_INTERFACE_DEFINED__
#define __IFolderView_INTERFACE_DEFINED__

/* interface IFolderView */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IFolderView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("79ed5811-705c-4d33-af5f-b215f4bb645f")
    IFolderView : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCurrentViewMode( 
            /* [out][in] */ UINT *pViewMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCurrentViewMode( 
            /* [in] */ UINT ViewMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFolder( 
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ItemCount( 
            /* [in] */ int *pcItems) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ int iItemIndex,
            /* [out] */ LPITEMIDLIST *ppidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SelectedItem( 
            /* [out] */ int *piItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SelectItem( 
            /* [in] */ int iItem,
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFolderViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IFolderView * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IFolderView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IFolderView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentViewMode )( 
            IFolderView * This,
            /* [out][in] */ UINT *pViewMode);
        
        HRESULT ( STDMETHODCALLTYPE *SetCurrentViewMode )( 
            IFolderView * This,
            /* [in] */ UINT ViewMode);
        
        HRESULT ( STDMETHODCALLTYPE *GetFolder )( 
            IFolderView * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv);
        
        HRESULT ( STDMETHODCALLTYPE *ItemCount )( 
            IFolderView * This,
            /* [in] */ int *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE *Item )( 
            IFolderView * This,
            /* [in] */ int iItemIndex,
            /* [out] */ LPITEMIDLIST *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE *SelectedItem )( 
            IFolderView * This,
            /* [out] */ int *piItem);
        
        HRESULT ( STDMETHODCALLTYPE *SelectItem )( 
            IFolderView * This,
            /* [in] */ int iItem,
            /* [in] */ DWORD dwFlags);
        
        END_INTERFACE
    } IFolderViewVtbl;

    interface IFolderView
    {
        CONST_VTBL struct IFolderViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFolderView_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFolderView_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFolderView_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFolderView_GetCurrentViewMode(This,pViewMode)	\
    (This)->lpVtbl -> GetCurrentViewMode(This,pViewMode)

#define IFolderView_SetCurrentViewMode(This,ViewMode)	\
    (This)->lpVtbl -> SetCurrentViewMode(This,ViewMode)

#define IFolderView_GetFolder(This,riid,ppv)	\
    (This)->lpVtbl -> GetFolder(This,riid,ppv)

#define IFolderView_ItemCount(This,pcItems)	\
    (This)->lpVtbl -> ItemCount(This,pcItems)

#define IFolderView_Item(This,iItemIndex,ppidl)	\
    (This)->lpVtbl -> Item(This,iItemIndex,ppidl)

#define IFolderView_SelectedItem(This,piItem)	\
    (This)->lpVtbl -> SelectedItem(This,piItem)

#define IFolderView_SelectItem(This,iItem,dwFlags)	\
    (This)->lpVtbl -> SelectItem(This,iItem,dwFlags)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IFolderView_GetCurrentViewMode_Proxy( 
    IFolderView * This,
    /* [out][in] */ UINT *pViewMode);


void __RPC_STUB IFolderView_GetCurrentViewMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_SetCurrentViewMode_Proxy( 
    IFolderView * This,
    /* [in] */ UINT ViewMode);


void __RPC_STUB IFolderView_SetCurrentViewMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_GetFolder_Proxy( 
    IFolderView * This,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void **ppv);


void __RPC_STUB IFolderView_GetFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_ItemCount_Proxy( 
    IFolderView * This,
    /* [in] */ int *pcItems);


void __RPC_STUB IFolderView_ItemCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_Item_Proxy( 
    IFolderView * This,
    /* [in] */ int iItemIndex,
    /* [out] */ LPITEMIDLIST *ppidl);


void __RPC_STUB IFolderView_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_SelectedItem_Proxy( 
    IFolderView * This,
    /* [out] */ int *piItem);


void __RPC_STUB IFolderView_SelectedItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IFolderView_SelectItem_Proxy( 
    IFolderView * This,
    /* [in] */ int iItem,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IFolderView_SelectItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFolderView_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0152 */
/* [local] */ 

#ifdef _FIX_ENABLEMODELESS_CONFLICT
#undef    EnableModeless 
#endif
//
// IShellBrowser::BrowseObject(pidl, wFlags)
//
//   The view calls this member to let shell explorer browse to another
//  folder. The pidl and wFlags specifies the folder to be browsed.
#define SBSP_DEFBROWSER         0x0000
#define SBSP_SAMEBROWSER        0x0001
#define SBSP_NEWBROWSER         0x0002
#define SBSP_DEFMODE            0x0000
#define SBSP_OPENMODE           0x0010
#define SBSP_EXPLOREMODE        0x0020
#define SBSP_HELPMODE           0x0040 // IEUNIX : Help window uses this.
#define SBSP_NOTRANSFERHIST     0x0080
#define SBSP_ABSOLUTE           0x0000
#define SBSP_RELATIVE           0x1000
#define SBSP_PARENT             0x2000
#define SBSP_NAVIGATEBACK       0x4000
#define SBSP_NAVIGATEFORWARD    0x8000
#define SBSP_ALLOW_AUTONAVIGATE 0x10000
#define SBSP_NOAUTOSELECT       0x04000000
#define SBSP_WRITENOHISTORY     0x08000000
#define SBSP_REDIRECT                     0x40000000
#define SBSP_INITIATEDBYHLINKFRAME        0x80000000
#define FCW_STATUS      0x0001
#define FCW_TOOLBAR     0x0002
#define FCW_TREE        0x0003
#define FCW_INTERNETBAR 0x0006
#define FCW_PROGRESS    0x0008
#define FCT_MERGE       0x0001
#define FCT_CONFIGABLE  0x0002
#define FCT_ADDTOEND    0x0004
#ifdef _NEVER_
typedef LPARAM LPTBBUTTONSB;

#else //!_NEVER_
#include <commctrl.h>
typedef LPTBBUTTON LPTBBUTTONSB;
#endif //_NEVER_


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0152_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0152_v0_0_s_ifspec;

#ifndef __IShellBrowser_INTERFACE_DEFINED__
#define __IShellBrowser_INTERFACE_DEFINED__

/* interface IShellBrowser */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IShellBrowser;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214E2-0000-0000-C000-000000000046")
    IShellBrowser : public IOleWindow
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE InsertMenusSB( 
            /* [in] */ HMENU hmenuShared,
            /* [out][in] */ LPOLEMENUGROUPWIDTHS lpMenuWidths) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMenuSB( 
            /* [in] */ HMENU hmenuShared,
            /* [in] */ HOLEMENU holemenuRes,
            /* [in] */ HWND hwndActiveObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveMenusSB( 
            /* [in] */ HMENU hmenuShared) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStatusTextSB( 
            /* [unique][in] */ LPCOLESTR pszStatusText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnableModelessSB( 
            /* [in] */ BOOL fEnable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TranslateAcceleratorSB( 
            /* [in] */ MSG *pmsg,
            /* [in] */ WORD wID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BrowseObject( 
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ UINT wFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetViewStateStream( 
            /* [in] */ DWORD grfMode,
            /* [out] */ IStream **ppStrm) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetControlWindow( 
            /* [in] */ UINT id,
            /* [out] */ HWND *lphwnd) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE SendControlMsg( 
            /* [in] */ UINT id,
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam,
            /* [in] */ LRESULT *pret) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryActiveShellView( 
            /* [in] */ IShellView **ppshv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnViewWindowActive( 
            /* [in] */ IShellView *pshv) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE SetToolbarItems( 
            /* [in] */ LPTBBUTTONSB lpButtons,
            /* [in] */ UINT nButtons,
            /* [in] */ UINT uFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellBrowserVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellBrowser * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellBrowser * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellBrowser * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE *GetWindow )( 
            IShellBrowser * This,
            /* [out] */ HWND *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE *ContextSensitiveHelp )( 
            IShellBrowser * This,
            /* [in] */ BOOL fEnterMode);
        
        HRESULT ( STDMETHODCALLTYPE *InsertMenusSB )( 
            IShellBrowser * This,
            /* [in] */ HMENU hmenuShared,
            /* [out][in] */ LPOLEMENUGROUPWIDTHS lpMenuWidths);
        
        HRESULT ( STDMETHODCALLTYPE *SetMenuSB )( 
            IShellBrowser * This,
            /* [in] */ HMENU hmenuShared,
            /* [in] */ HOLEMENU holemenuRes,
            /* [in] */ HWND hwndActiveObject);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveMenusSB )( 
            IShellBrowser * This,
            /* [in] */ HMENU hmenuShared);
        
        HRESULT ( STDMETHODCALLTYPE *SetStatusTextSB )( 
            IShellBrowser * This,
            /* [unique][in] */ LPCOLESTR pszStatusText);
        
        HRESULT ( STDMETHODCALLTYPE *EnableModelessSB )( 
            IShellBrowser * This,
            /* [in] */ BOOL fEnable);
        
        HRESULT ( STDMETHODCALLTYPE *TranslateAcceleratorSB )( 
            IShellBrowser * This,
            /* [in] */ MSG *pmsg,
            /* [in] */ WORD wID);
        
        HRESULT ( STDMETHODCALLTYPE *BrowseObject )( 
            IShellBrowser * This,
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ UINT wFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetViewStateStream )( 
            IShellBrowser * This,
            /* [in] */ DWORD grfMode,
            /* [out] */ IStream **ppStrm);
        
        HRESULT ( STDMETHODCALLTYPE *GetControlWindow )( 
            IShellBrowser * This,
            /* [in] */ UINT id,
            /* [out] */ HWND *lphwnd);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *SendControlMsg )( 
            IShellBrowser * This,
            /* [in] */ UINT id,
            /* [in] */ UINT uMsg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam,
            /* [in] */ LRESULT *pret);
        
        HRESULT ( STDMETHODCALLTYPE *QueryActiveShellView )( 
            IShellBrowser * This,
            /* [in] */ IShellView **ppshv);
        
        HRESULT ( STDMETHODCALLTYPE *OnViewWindowActive )( 
            IShellBrowser * This,
            /* [in] */ IShellView *pshv);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *SetToolbarItems )( 
            IShellBrowser * This,
            /* [in] */ LPTBBUTTONSB lpButtons,
            /* [in] */ UINT nButtons,
            /* [in] */ UINT uFlags);
        
        END_INTERFACE
    } IShellBrowserVtbl;

    interface IShellBrowser
    {
        CONST_VTBL struct IShellBrowserVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellBrowser_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellBrowser_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellBrowser_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellBrowser_GetWindow(This,phwnd)	\
    (This)->lpVtbl -> GetWindow(This,phwnd)

#define IShellBrowser_ContextSensitiveHelp(This,fEnterMode)	\
    (This)->lpVtbl -> ContextSensitiveHelp(This,fEnterMode)


#define IShellBrowser_InsertMenusSB(This,hmenuShared,lpMenuWidths)	\
    (This)->lpVtbl -> InsertMenusSB(This,hmenuShared,lpMenuWidths)

#define IShellBrowser_SetMenuSB(This,hmenuShared,holemenuRes,hwndActiveObject)	\
    (This)->lpVtbl -> SetMenuSB(This,hmenuShared,holemenuRes,hwndActiveObject)

#define IShellBrowser_RemoveMenusSB(This,hmenuShared)	\
    (This)->lpVtbl -> RemoveMenusSB(This,hmenuShared)

#define IShellBrowser_SetStatusTextSB(This,pszStatusText)	\
    (This)->lpVtbl -> SetStatusTextSB(This,pszStatusText)

#define IShellBrowser_EnableModelessSB(This,fEnable)	\
    (This)->lpVtbl -> EnableModelessSB(This,fEnable)

#define IShellBrowser_TranslateAcceleratorSB(This,pmsg,wID)	\
    (This)->lpVtbl -> TranslateAcceleratorSB(This,pmsg,wID)

#define IShellBrowser_BrowseObject(This,pidl,wFlags)	\
    (This)->lpVtbl -> BrowseObject(This,pidl,wFlags)

#define IShellBrowser_GetViewStateStream(This,grfMode,ppStrm)	\
    (This)->lpVtbl -> GetViewStateStream(This,grfMode,ppStrm)

#define IShellBrowser_GetControlWindow(This,id,lphwnd)	\
    (This)->lpVtbl -> GetControlWindow(This,id,lphwnd)

#define IShellBrowser_SendControlMsg(This,id,uMsg,wParam,lParam,pret)	\
    (This)->lpVtbl -> SendControlMsg(This,id,uMsg,wParam,lParam,pret)

#define IShellBrowser_QueryActiveShellView(This,ppshv)	\
    (This)->lpVtbl -> QueryActiveShellView(This,ppshv)

#define IShellBrowser_OnViewWindowActive(This,pshv)	\
    (This)->lpVtbl -> OnViewWindowActive(This,pshv)

#define IShellBrowser_SetToolbarItems(This,lpButtons,nButtons,uFlags)	\
    (This)->lpVtbl -> SetToolbarItems(This,lpButtons,nButtons,uFlags)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellBrowser_InsertMenusSB_Proxy( 
    IShellBrowser * This,
    /* [in] */ HMENU hmenuShared,
    /* [out][in] */ LPOLEMENUGROUPWIDTHS lpMenuWidths);


void __RPC_STUB IShellBrowser_InsertMenusSB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_SetMenuSB_Proxy( 
    IShellBrowser * This,
    /* [in] */ HMENU hmenuShared,
    /* [in] */ HOLEMENU holemenuRes,
    /* [in] */ HWND hwndActiveObject);


void __RPC_STUB IShellBrowser_SetMenuSB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_RemoveMenusSB_Proxy( 
    IShellBrowser * This,
    /* [in] */ HMENU hmenuShared);


void __RPC_STUB IShellBrowser_RemoveMenusSB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_SetStatusTextSB_Proxy( 
    IShellBrowser * This,
    /* [unique][in] */ LPCOLESTR pszStatusText);


void __RPC_STUB IShellBrowser_SetStatusTextSB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_EnableModelessSB_Proxy( 
    IShellBrowser * This,
    /* [in] */ BOOL fEnable);


void __RPC_STUB IShellBrowser_EnableModelessSB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_TranslateAcceleratorSB_Proxy( 
    IShellBrowser * This,
    /* [in] */ MSG *pmsg,
    /* [in] */ WORD wID);


void __RPC_STUB IShellBrowser_TranslateAcceleratorSB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_BrowseObject_Proxy( 
    IShellBrowser * This,
    /* [in] */ LPCITEMIDLIST pidl,
    /* [in] */ UINT wFlags);


void __RPC_STUB IShellBrowser_BrowseObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_GetViewStateStream_Proxy( 
    IShellBrowser * This,
    /* [in] */ DWORD grfMode,
    /* [out] */ IStream **ppStrm);


void __RPC_STUB IShellBrowser_GetViewStateStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_GetControlWindow_Proxy( 
    IShellBrowser * This,
    /* [in] */ UINT id,
    /* [out] */ HWND *lphwnd);


void __RPC_STUB IShellBrowser_GetControlWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [local] */ HRESULT STDMETHODCALLTYPE IShellBrowser_SendControlMsg_Proxy( 
    IShellBrowser * This,
    /* [in] */ UINT id,
    /* [in] */ UINT uMsg,
    /* [in] */ WPARAM wParam,
    /* [in] */ LPARAM lParam,
    /* [in] */ LRESULT *pret);


void __RPC_STUB IShellBrowser_SendControlMsg_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_QueryActiveShellView_Proxy( 
    IShellBrowser * This,
    /* [in] */ IShellView **ppshv);


void __RPC_STUB IShellBrowser_QueryActiveShellView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellBrowser_OnViewWindowActive_Proxy( 
    IShellBrowser * This,
    /* [in] */ IShellView *pshv);


void __RPC_STUB IShellBrowser_OnViewWindowActive_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [local] */ HRESULT STDMETHODCALLTYPE IShellBrowser_SetToolbarItems_Proxy( 
    IShellBrowser * This,
    /* [in] */ LPTBBUTTONSB lpButtons,
    /* [in] */ UINT nButtons,
    /* [in] */ UINT uFlags);


void __RPC_STUB IShellBrowser_SetToolbarItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellBrowser_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0153 */
/* [local] */ 

typedef IShellBrowser *LPSHELLBROWSER;

#define SNCF_IGNORERAS   0x00000001


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0153_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0153_v0_0_s_ifspec;

#ifndef __IShellNetCrawler_INTERFACE_DEFINED__
#define __IShellNetCrawler_INTERFACE_DEFINED__

/* interface IShellNetCrawler */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IShellNetCrawler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("49c929ee-a1b7-4c58-b539-e63be392b6f3")
    IShellNetCrawler : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Update( 
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellNetCrawlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellNetCrawler * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellNetCrawler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellNetCrawler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Update )( 
            IShellNetCrawler * This,
            /* [in] */ DWORD dwFlags);
        
        END_INTERFACE
    } IShellNetCrawlerVtbl;

    interface IShellNetCrawler
    {
        CONST_VTBL struct IShellNetCrawlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellNetCrawler_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellNetCrawler_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellNetCrawler_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellNetCrawler_Update(This,dwFlags)	\
    (This)->lpVtbl -> Update(This,dwFlags)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellNetCrawler_Update_Proxy( 
    IShellNetCrawler * This,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IShellNetCrawler_Update_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellNetCrawler_INTERFACE_DEFINED__ */


#ifndef __IProfferService_INTERFACE_DEFINED__
#define __IProfferService_INTERFACE_DEFINED__

/* interface IProfferService */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IProfferService;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("cb728b20-f786-11ce-92ad-00aa00a74cd0")
    IProfferService : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ProfferService( 
            /* [in] */ REFGUID rguidService,
            /* [in] */ IServiceProvider *psp,
            /* [out] */ DWORD *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RevokeService( 
            /* [in] */ DWORD dwCookie) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IProfferServiceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IProfferService * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IProfferService * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IProfferService * This);
        
        HRESULT ( STDMETHODCALLTYPE *ProfferService )( 
            IProfferService * This,
            /* [in] */ REFGUID rguidService,
            /* [in] */ IServiceProvider *psp,
            /* [out] */ DWORD *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE *RevokeService )( 
            IProfferService * This,
            /* [in] */ DWORD dwCookie);
        
        END_INTERFACE
    } IProfferServiceVtbl;

    interface IProfferService
    {
        CONST_VTBL struct IProfferServiceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IProfferService_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IProfferService_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IProfferService_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IProfferService_ProfferService(This,rguidService,psp,pdwCookie)	\
    (This)->lpVtbl -> ProfferService(This,rguidService,psp,pdwCookie)

#define IProfferService_RevokeService(This,dwCookie)	\
    (This)->lpVtbl -> RevokeService(This,dwCookie)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IProfferService_ProfferService_Proxy( 
    IProfferService * This,
    /* [in] */ REFGUID rguidService,
    /* [in] */ IServiceProvider *psp,
    /* [out] */ DWORD *pdwCookie);


void __RPC_STUB IProfferService_ProfferService_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IProfferService_RevokeService_Proxy( 
    IProfferService * This,
    /* [in] */ DWORD dwCookie);


void __RPC_STUB IProfferService_RevokeService_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IProfferService_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0155 */
/* [local] */ 

#define SID_SProfferService IID_IProfferService    // nearest service that you can proffer to
typedef /* [v1_enum] */ 
enum _CFITYPE
    {	CFITYPE_CSIDL	= 0,
	CFITYPE_PIDL	= CFITYPE_CSIDL + 1,
	CFITYPE_PATH	= CFITYPE_PIDL + 1
    } 	CFITYPE;

/* [v1_enum] */ 
enum __MIDL___MIDL_itf_shobjidl_0155_0001
    {	CFINITF_CHILDREN	= 0,
	CFINITF_FLAT	= 0x1
    } ;
typedef UINT CFINITF;

typedef struct _COMPFOLDERINIT
    {
    UINT uType;
    /* [switch_is][switch_type] */ union 
        {
        /* [case()] */ int csidl;
        /* [case()] */ LPCITEMIDLIST pidl;
        /* [case()][string] */ LPOLESTR pszPath;
        } 	DUMMYUNIONNAME;
    LPOLESTR pszName;
    } 	COMPFOLDERINIT;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0155_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0155_v0_0_s_ifspec;

#ifndef __ICompositeFolder_INTERFACE_DEFINED__
#define __ICompositeFolder_INTERFACE_DEFINED__

/* interface ICompositeFolder */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_ICompositeFolder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("601ac3dd-786a-4eb0-bf40-ee3521e70bfb")
    ICompositeFolder : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE InitComposite( 
            /* [in] */ WORD wSignature,
            /* [in] */ REFCLSID refclsid,
            /* [in] */ CFINITF flags,
            /* [in] */ ULONG celt,
            /* [size_is][in] */ const COMPFOLDERINIT *rgCFs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BindToParent( 
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv,
            /* [out] */ LPITEMIDLIST *ppidlLast) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICompositeFolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICompositeFolder * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICompositeFolder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICompositeFolder * This);
        
        HRESULT ( STDMETHODCALLTYPE *InitComposite )( 
            ICompositeFolder * This,
            /* [in] */ WORD wSignature,
            /* [in] */ REFCLSID refclsid,
            /* [in] */ CFINITF flags,
            /* [in] */ ULONG celt,
            /* [size_is][in] */ const COMPFOLDERINIT *rgCFs);
        
        HRESULT ( STDMETHODCALLTYPE *BindToParent )( 
            ICompositeFolder * This,
            /* [in] */ LPCITEMIDLIST pidl,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv,
            /* [out] */ LPITEMIDLIST *ppidlLast);
        
        END_INTERFACE
    } ICompositeFolderVtbl;

    interface ICompositeFolder
    {
        CONST_VTBL struct ICompositeFolderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICompositeFolder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ICompositeFolder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ICompositeFolder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ICompositeFolder_InitComposite(This,wSignature,refclsid,flags,celt,rgCFs)	\
    (This)->lpVtbl -> InitComposite(This,wSignature,refclsid,flags,celt,rgCFs)

#define ICompositeFolder_BindToParent(This,pidl,riid,ppv,ppidlLast)	\
    (This)->lpVtbl -> BindToParent(This,pidl,riid,ppv,ppidlLast)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ICompositeFolder_InitComposite_Proxy( 
    ICompositeFolder * This,
    /* [in] */ WORD wSignature,
    /* [in] */ REFCLSID refclsid,
    /* [in] */ CFINITF flags,
    /* [in] */ ULONG celt,
    /* [size_is][in] */ const COMPFOLDERINIT *rgCFs);


void __RPC_STUB ICompositeFolder_InitComposite_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ICompositeFolder_BindToParent_Proxy( 
    ICompositeFolder * This,
    /* [in] */ LPCITEMIDLIST pidl,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void **ppv,
    /* [out] */ LPITEMIDLIST *ppidlLast);


void __RPC_STUB ICompositeFolder_BindToParent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ICompositeFolder_INTERFACE_DEFINED__ */


#ifndef __IParentAndItem_INTERFACE_DEFINED__
#define __IParentAndItem_INTERFACE_DEFINED__

/* interface IParentAndItem */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IParentAndItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b3a4b685-b685-4805-99d9-5dead2873236")
    IParentAndItem : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetParentAndItem( 
            /* [in] */ LPCITEMIDLIST pidlParent,
            /* [in] */ IShellFolder *psf,
            /* [in] */ LPCITEMIDLIST pidlChild) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetParentAndItem( 
            /* [out] */ LPITEMIDLIST *ppidlParent,
            /* [out] */ IShellFolder **ppsf,
            /* [out] */ LPITEMIDLIST *ppidlChild) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IParentAndItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IParentAndItem * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IParentAndItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IParentAndItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetParentAndItem )( 
            IParentAndItem * This,
            /* [in] */ LPCITEMIDLIST pidlParent,
            /* [in] */ IShellFolder *psf,
            /* [in] */ LPCITEMIDLIST pidlChild);
        
        HRESULT ( STDMETHODCALLTYPE *GetParentAndItem )( 
            IParentAndItem * This,
            /* [out] */ LPITEMIDLIST *ppidlParent,
            /* [out] */ IShellFolder **ppsf,
            /* [out] */ LPITEMIDLIST *ppidlChild);
        
        END_INTERFACE
    } IParentAndItemVtbl;

    interface IParentAndItem
    {
        CONST_VTBL struct IParentAndItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IParentAndItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IParentAndItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IParentAndItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IParentAndItem_SetParentAndItem(This,pidlParent,psf,pidlChild)	\
    (This)->lpVtbl -> SetParentAndItem(This,pidlParent,psf,pidlChild)

#define IParentAndItem_GetParentAndItem(This,ppidlParent,ppsf,ppidlChild)	\
    (This)->lpVtbl -> GetParentAndItem(This,ppidlParent,ppsf,ppidlChild)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IParentAndItem_SetParentAndItem_Proxy( 
    IParentAndItem * This,
    /* [in] */ LPCITEMIDLIST pidlParent,
    /* [in] */ IShellFolder *psf,
    /* [in] */ LPCITEMIDLIST pidlChild);


void __RPC_STUB IParentAndItem_SetParentAndItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IParentAndItem_GetParentAndItem_Proxy( 
    IParentAndItem * This,
    /* [out] */ LPITEMIDLIST *ppidlParent,
    /* [out] */ IShellFolder **ppsf,
    /* [out] */ LPITEMIDLIST *ppidlChild);


void __RPC_STUB IParentAndItem_GetParentAndItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IParentAndItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0157 */
/* [local] */ 

typedef /* [public][public][v1_enum] */ 
enum __MIDL___MIDL_itf_shobjidl_0157_0001
    {	PUIF_DEFAULT	= 0,
	PUIF_RIGHTALIGN	= 0x1,
	PUIF_NOLABELININFOTIP	= 0x2
    } 	PROPERTYUI_FLAGS;

typedef /* [public][public][v1_enum] */ 
enum __MIDL___MIDL_itf_shobjidl_0157_0002
    {	PUIFFDF_DEFAULT	= 0,
	PUIFFDF_RIGHTTOLEFT	= 0x1,
	PUIFFDF_SHORTFORMAT	= 0x2,
	PUIFFDF_NOTIME	= 0x4,
	PUIFFDF_FRIENDLYDATE	= 0x8,
	PUIFFDF_NOUNITS	= 0x10
    } 	PROPERTYUI_FORMAT_FLAGS;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0157_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0157_v0_0_s_ifspec;

#ifndef __IPropertyUI_INTERFACE_DEFINED__
#define __IPropertyUI_INTERFACE_DEFINED__

/* interface IPropertyUI */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IPropertyUI;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d43eacec-eaaf-4aae-ba46-eecba97d988a")
    IPropertyUI : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ParsePropertyName( 
            /* [in] */ LPCWSTR pszName,
            /* [out] */ FMTID *pfmtid,
            /* [out] */ PROPID *ppid,
            /* [out] */ ULONG *pchEaten) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCannonicalName( 
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [size_is][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayName( 
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [size_is][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPropertyDescription( 
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [size_is][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultWidth( 
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [out] */ ULONG *pcxChars) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFlags( 
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [out] */ PROPERTYUI_FLAGS *pFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FormatForDisplay( 
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [in] */ const VARIANT *pvar,
            /* [in] */ PROPERTYUI_FORMAT_FLAGS flags,
            /* [size_is][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPropertyUIVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPropertyUI * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPropertyUI * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPropertyUI * This);
        
        HRESULT ( STDMETHODCALLTYPE *ParsePropertyName )( 
            IPropertyUI * This,
            /* [in] */ LPCWSTR pszName,
            /* [out] */ FMTID *pfmtid,
            /* [out] */ PROPID *ppid,
            /* [out] */ ULONG *pchEaten);
        
        HRESULT ( STDMETHODCALLTYPE *GetCannonicalName )( 
            IPropertyUI * This,
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [size_is][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
            IPropertyUI * This,
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [size_is][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText);
        
        HRESULT ( STDMETHODCALLTYPE *GetPropertyDescription )( 
            IPropertyUI * This,
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [size_is][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText);
        
        HRESULT ( STDMETHODCALLTYPE *GetDefaultWidth )( 
            IPropertyUI * This,
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [out] */ ULONG *pcxChars);
        
        HRESULT ( STDMETHODCALLTYPE *GetFlags )( 
            IPropertyUI * This,
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [out] */ PROPERTYUI_FLAGS *pFlags);
        
        HRESULT ( STDMETHODCALLTYPE *FormatForDisplay )( 
            IPropertyUI * This,
            /* [in] */ REFFMTID fmtid,
            /* [in] */ PROPID pid,
            /* [in] */ const VARIANT *pvar,
            /* [in] */ PROPERTYUI_FORMAT_FLAGS flags,
            /* [size_is][out] */ LPWSTR pwszText,
            /* [in] */ DWORD cchText);
        
        END_INTERFACE
    } IPropertyUIVtbl;

    interface IPropertyUI
    {
        CONST_VTBL struct IPropertyUIVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPropertyUI_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IPropertyUI_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IPropertyUI_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IPropertyUI_ParsePropertyName(This,pszName,pfmtid,ppid,pchEaten)	\
    (This)->lpVtbl -> ParsePropertyName(This,pszName,pfmtid,ppid,pchEaten)

#define IPropertyUI_GetCannonicalName(This,fmtid,pid,pwszText,cchText)	\
    (This)->lpVtbl -> GetCannonicalName(This,fmtid,pid,pwszText,cchText)

#define IPropertyUI_GetDisplayName(This,fmtid,pid,pwszText,cchText)	\
    (This)->lpVtbl -> GetDisplayName(This,fmtid,pid,pwszText,cchText)

#define IPropertyUI_GetPropertyDescription(This,fmtid,pid,pwszText,cchText)	\
    (This)->lpVtbl -> GetPropertyDescription(This,fmtid,pid,pwszText,cchText)

#define IPropertyUI_GetDefaultWidth(This,fmtid,pid,pcxChars)	\
    (This)->lpVtbl -> GetDefaultWidth(This,fmtid,pid,pcxChars)

#define IPropertyUI_GetFlags(This,fmtid,pid,pFlags)	\
    (This)->lpVtbl -> GetFlags(This,fmtid,pid,pFlags)

#define IPropertyUI_FormatForDisplay(This,fmtid,pid,pvar,flags,pwszText,cchText)	\
    (This)->lpVtbl -> FormatForDisplay(This,fmtid,pid,pvar,flags,pwszText,cchText)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IPropertyUI_ParsePropertyName_Proxy( 
    IPropertyUI * This,
    /* [in] */ LPCWSTR pszName,
    /* [out] */ FMTID *pfmtid,
    /* [out] */ PROPID *ppid,
    /* [out] */ ULONG *pchEaten);


void __RPC_STUB IPropertyUI_ParsePropertyName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyUI_GetCannonicalName_Proxy( 
    IPropertyUI * This,
    /* [in] */ REFFMTID fmtid,
    /* [in] */ PROPID pid,
    /* [size_is][out] */ LPWSTR pwszText,
    /* [in] */ DWORD cchText);


void __RPC_STUB IPropertyUI_GetCannonicalName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyUI_GetDisplayName_Proxy( 
    IPropertyUI * This,
    /* [in] */ REFFMTID fmtid,
    /* [in] */ PROPID pid,
    /* [size_is][out] */ LPWSTR pwszText,
    /* [in] */ DWORD cchText);


void __RPC_STUB IPropertyUI_GetDisplayName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyUI_GetPropertyDescription_Proxy( 
    IPropertyUI * This,
    /* [in] */ REFFMTID fmtid,
    /* [in] */ PROPID pid,
    /* [size_is][out] */ LPWSTR pwszText,
    /* [in] */ DWORD cchText);


void __RPC_STUB IPropertyUI_GetPropertyDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyUI_GetDefaultWidth_Proxy( 
    IPropertyUI * This,
    /* [in] */ REFFMTID fmtid,
    /* [in] */ PROPID pid,
    /* [out] */ ULONG *pcxChars);


void __RPC_STUB IPropertyUI_GetDefaultWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyUI_GetFlags_Proxy( 
    IPropertyUI * This,
    /* [in] */ REFFMTID fmtid,
    /* [in] */ PROPID pid,
    /* [out] */ PROPERTYUI_FLAGS *pFlags);


void __RPC_STUB IPropertyUI_GetFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IPropertyUI_FormatForDisplay_Proxy( 
    IPropertyUI * This,
    /* [in] */ REFFMTID fmtid,
    /* [in] */ PROPID pid,
    /* [in] */ const VARIANT *pvar,
    /* [in] */ PROPERTYUI_FORMAT_FLAGS flags,
    /* [size_is][out] */ LPWSTR pwszText,
    /* [in] */ DWORD cchText);


void __RPC_STUB IPropertyUI_FormatForDisplay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IPropertyUI_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0158 */
/* [local] */ 

#if (_WIN32_IE >= 0x0500)
//-------------------------------------------------------------------------
//
// Folder Category Support
//


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0158_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0158_v0_0_s_ifspec;

#ifndef __ICategoryProvider_INTERFACE_DEFINED__
#define __ICategoryProvider_INTERFACE_DEFINED__

/* interface ICategoryProvider */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_ICategoryProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9af64809-5864-4c26-a720-c1f78c086ee3")
    ICategoryProvider : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CanCategorizeOnSCID( 
            SHCOLUMNID *pscid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetDefaultCategory( 
            GUID *pguid,
            SHCOLUMNID *pscid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCategoryForSCID( 
            SHCOLUMNID *pscid,
            GUID *pguid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EnumCategories( 
            IEnumGUID **penum) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCategoryName( 
            GUID *pguid,
            LPWSTR pszName,
            UINT cch) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateCategory( 
            GUID *pguid,
            REFIID riid,
            /* [iid_is] */ void **ppv) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICategoryProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICategoryProvider * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICategoryProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICategoryProvider * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CanCategorizeOnSCID )( 
            ICategoryProvider * This,
            SHCOLUMNID *pscid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetDefaultCategory )( 
            ICategoryProvider * This,
            GUID *pguid,
            SHCOLUMNID *pscid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCategoryForSCID )( 
            ICategoryProvider * This,
            SHCOLUMNID *pscid,
            GUID *pguid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EnumCategories )( 
            ICategoryProvider * This,
            IEnumGUID **penum);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCategoryName )( 
            ICategoryProvider * This,
            GUID *pguid,
            LPWSTR pszName,
            UINT cch);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateCategory )( 
            ICategoryProvider * This,
            GUID *pguid,
            REFIID riid,
            /* [iid_is] */ void **ppv);
        
        END_INTERFACE
    } ICategoryProviderVtbl;

    interface ICategoryProvider
    {
        CONST_VTBL struct ICategoryProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICategoryProvider_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ICategoryProvider_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ICategoryProvider_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ICategoryProvider_CanCategorizeOnSCID(This,pscid)	\
    (This)->lpVtbl -> CanCategorizeOnSCID(This,pscid)

#define ICategoryProvider_GetDefaultCategory(This,pguid,pscid)	\
    (This)->lpVtbl -> GetDefaultCategory(This,pguid,pscid)

#define ICategoryProvider_GetCategoryForSCID(This,pscid,pguid)	\
    (This)->lpVtbl -> GetCategoryForSCID(This,pscid,pguid)

#define ICategoryProvider_EnumCategories(This,penum)	\
    (This)->lpVtbl -> EnumCategories(This,penum)

#define ICategoryProvider_GetCategoryName(This,pguid,pszName,cch)	\
    (This)->lpVtbl -> GetCategoryName(This,pguid,pszName,cch)

#define ICategoryProvider_CreateCategory(This,pguid,riid,ppv)	\
    (This)->lpVtbl -> CreateCategory(This,pguid,riid,ppv)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategoryProvider_CanCategorizeOnSCID_Proxy( 
    ICategoryProvider * This,
    SHCOLUMNID *pscid);


void __RPC_STUB ICategoryProvider_CanCategorizeOnSCID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategoryProvider_GetDefaultCategory_Proxy( 
    ICategoryProvider * This,
    GUID *pguid,
    SHCOLUMNID *pscid);


void __RPC_STUB ICategoryProvider_GetDefaultCategory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategoryProvider_GetCategoryForSCID_Proxy( 
    ICategoryProvider * This,
    SHCOLUMNID *pscid,
    GUID *pguid);


void __RPC_STUB ICategoryProvider_GetCategoryForSCID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategoryProvider_EnumCategories_Proxy( 
    ICategoryProvider * This,
    IEnumGUID **penum);


void __RPC_STUB ICategoryProvider_EnumCategories_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategoryProvider_GetCategoryName_Proxy( 
    ICategoryProvider * This,
    GUID *pguid,
    LPWSTR pszName,
    UINT cch);


void __RPC_STUB ICategoryProvider_GetCategoryName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategoryProvider_CreateCategory_Proxy( 
    ICategoryProvider * This,
    GUID *pguid,
    REFIID riid,
    /* [iid_is] */ void **ppv);


void __RPC_STUB ICategoryProvider_CreateCategory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ICategoryProvider_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0159 */
/* [local] */ 

typedef /* [public][public][public][v1_enum] */ 
enum __MIDL___MIDL_itf_shobjidl_0159_0001
    {	CATINFO_NORMAL	= 0,
	CATINFO_COLLAPSED	= 0x1,
	CATINFO_HIDDEN	= 0x2
    } 	CATEGORYINFO_FLAGS;

typedef /* [public][public][v1_enum] */ 
enum __MIDL___MIDL_itf_shobjidl_0159_0002
    {	CATSORT_DEFAULT	= 0,
	CATSORT_NAME	= 0x1
    } 	CATSORT_FLAGS;

typedef /* [public][public] */ struct __MIDL___MIDL_itf_shobjidl_0159_0003
    {
    CATEGORYINFO_FLAGS cif;
    WCHAR wszName[ 260 ];
    } 	CATEGORY_INFO;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0159_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0159_v0_0_s_ifspec;

#ifndef __ICategorizer_INTERFACE_DEFINED__
#define __ICategorizer_INTERFACE_DEFINED__

/* interface ICategorizer */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_ICategorizer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a3b14589-9174-49a8-89a3-06a1ae2b9ba7")
    ICategorizer : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetDescription( 
            LPWSTR pszDesc,
            UINT cch) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCategory( 
            /* [in] */ UINT cidl,
            /* [size_is][in] */ LPCITEMIDLIST *apidl,
            /* [size_is][out][in] */ DWORD *rgCategoryIds) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCategoryInfo( 
            DWORD dwCategoryId,
            CATEGORY_INFO *pci) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CompareCategory( 
            CATSORT_FLAGS csfFlags,
            DWORD dwCategoryId1,
            DWORD dwCategoryId2) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICategorizerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICategorizer * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICategorizer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICategorizer * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetDescription )( 
            ICategorizer * This,
            LPWSTR pszDesc,
            UINT cch);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCategory )( 
            ICategorizer * This,
            /* [in] */ UINT cidl,
            /* [size_is][in] */ LPCITEMIDLIST *apidl,
            /* [size_is][out][in] */ DWORD *rgCategoryIds);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCategoryInfo )( 
            ICategorizer * This,
            DWORD dwCategoryId,
            CATEGORY_INFO *pci);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CompareCategory )( 
            ICategorizer * This,
            CATSORT_FLAGS csfFlags,
            DWORD dwCategoryId1,
            DWORD dwCategoryId2);
        
        END_INTERFACE
    } ICategorizerVtbl;

    interface ICategorizer
    {
        CONST_VTBL struct ICategorizerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICategorizer_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ICategorizer_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ICategorizer_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ICategorizer_GetDescription(This,pszDesc,cch)	\
    (This)->lpVtbl -> GetDescription(This,pszDesc,cch)

#define ICategorizer_GetCategory(This,cidl,apidl,rgCategoryIds)	\
    (This)->lpVtbl -> GetCategory(This,cidl,apidl,rgCategoryIds)

#define ICategorizer_GetCategoryInfo(This,dwCategoryId,pci)	\
    (This)->lpVtbl -> GetCategoryInfo(This,dwCategoryId,pci)

#define ICategorizer_CompareCategory(This,csfFlags,dwCategoryId1,dwCategoryId2)	\
    (This)->lpVtbl -> CompareCategory(This,csfFlags,dwCategoryId1,dwCategoryId2)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategorizer_GetDescription_Proxy( 
    ICategorizer * This,
    LPWSTR pszDesc,
    UINT cch);


void __RPC_STUB ICategorizer_GetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategorizer_GetCategory_Proxy( 
    ICategorizer * This,
    /* [in] */ UINT cidl,
    /* [size_is][in] */ LPCITEMIDLIST *apidl,
    /* [size_is][out][in] */ DWORD *rgCategoryIds);


void __RPC_STUB ICategorizer_GetCategory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategorizer_GetCategoryInfo_Proxy( 
    ICategorizer * This,
    DWORD dwCategoryId,
    CATEGORY_INFO *pci);


void __RPC_STUB ICategorizer_GetCategoryInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICategorizer_CompareCategory_Proxy( 
    ICategorizer * This,
    CATSORT_FLAGS csfFlags,
    DWORD dwCategoryId1,
    DWORD dwCategoryId2);


void __RPC_STUB ICategorizer_CompareCategory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ICategorizer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0160 */
/* [local] */ 

#endif // (_WIN32_IE >= 0x0500)
//  BindHandler GUIDs for IShellItem::BindToHandler (defined in shlguid.h)
//  BHID_SFObject            restricts usage to IShellFolder::BindToObject()
//  BHID_SFUIObject          restricts usage to IShellFolder::GetUIObjectOf()
//  BHID_SFViewObject        restricts usage to IShellFolder::CreateViewObject()
//  BHID_LocalCopyHelper     creates and initializes CLSID_LocalCopyHelper
//  BHID_LinkTargetItem      CLSID_ShellItem initialized with the target this item (SFGAO_LINK only)
//  BHID_Storage             attempts to get the stg/stm riid from BTO, but defaults to shell implementations on failure


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0160_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0160_v0_0_s_ifspec;

#ifndef __IShellItem_INTERFACE_DEFINED__
#define __IShellItem_INTERFACE_DEFINED__

/* interface IShellItem */
/* [unique][object][uuid][helpstring] */ 

typedef /* [public][public][v1_enum] */ 
enum __MIDL_IShellItem_0001
    {	SIGDN_NORMALDISPLAY	= 0,
	SIGDN_PARENTRELATIVEPARSING	= 0x80018001,
	SIGDN_DESKTOPABSOLUTEPARSING	= 0x80028000,
	SIGDN_PARENTRELATIVEEDITING	= 0x80031001,
	SIGDN_DESKTOPABSOLUTEEDITING	= 0x8004c000,
	SIGDN_FILESYSPATH	= 0x80058000,
	SIGDN_URL	= 0x80068000
    } 	SIGDN;


EXTERN_C const IID IID_IShellItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1079acf9-29bd-11d3-8e0d-00c04f6837d5")
    IShellItem : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BindToHandler( 
            /* [in] */ IBindCtx *pbc,
            /* [in] */ REFGUID rbhid,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetParent( 
            /* [out] */ IShellItem **ppsi) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayName( 
            /* [in] */ SIGDN sigdnName,
            /* [string][out] */ LPOLESTR *ppszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAttributes( 
            /* [in] */ SFGAOF sfgaoMask,
            /* [out] */ SFGAOF *psfgaoAttribs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsEqual( 
            /* [in] */ IShellItem *psi) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellItem * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *BindToHandler )( 
            IShellItem * This,
            /* [in] */ IBindCtx *pbc,
            /* [in] */ REFGUID rbhid,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvOut);
        
        HRESULT ( STDMETHODCALLTYPE *GetParent )( 
            IShellItem * This,
            /* [out] */ IShellItem **ppsi);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
            IShellItem * This,
            /* [in] */ SIGDN sigdnName,
            /* [string][out] */ LPOLESTR *ppszName);
        
        HRESULT ( STDMETHODCALLTYPE *GetAttributes )( 
            IShellItem * This,
            /* [in] */ SFGAOF sfgaoMask,
            /* [out] */ SFGAOF *psfgaoAttribs);
        
        HRESULT ( STDMETHODCALLTYPE *IsEqual )( 
            IShellItem * This,
            /* [in] */ IShellItem *psi);
        
        END_INTERFACE
    } IShellItemVtbl;

    interface IShellItem
    {
        CONST_VTBL struct IShellItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellItem_BindToHandler(This,pbc,rbhid,riid,ppvOut)	\
    (This)->lpVtbl -> BindToHandler(This,pbc,rbhid,riid,ppvOut)

#define IShellItem_GetParent(This,ppsi)	\
    (This)->lpVtbl -> GetParent(This,ppsi)

#define IShellItem_GetDisplayName(This,sigdnName,ppszName)	\
    (This)->lpVtbl -> GetDisplayName(This,sigdnName,ppszName)

#define IShellItem_GetAttributes(This,sfgaoMask,psfgaoAttribs)	\
    (This)->lpVtbl -> GetAttributes(This,sfgaoMask,psfgaoAttribs)

#define IShellItem_IsEqual(This,psi)	\
    (This)->lpVtbl -> IsEqual(This,psi)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellItem_BindToHandler_Proxy( 
    IShellItem * This,
    /* [in] */ IBindCtx *pbc,
    /* [in] */ REFGUID rbhid,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void **ppvOut);


void __RPC_STUB IShellItem_BindToHandler_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem_GetParent_Proxy( 
    IShellItem * This,
    /* [out] */ IShellItem **ppsi);


void __RPC_STUB IShellItem_GetParent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem_GetDisplayName_Proxy( 
    IShellItem * This,
    /* [in] */ SIGDN sigdnName,
    /* [string][out] */ LPOLESTR *ppszName);


void __RPC_STUB IShellItem_GetDisplayName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem_GetAttributes_Proxy( 
    IShellItem * This,
    /* [in] */ SFGAOF sfgaoMask,
    /* [out] */ SFGAOF *psfgaoAttribs);


void __RPC_STUB IShellItem_GetAttributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellItem_IsEqual_Proxy( 
    IShellItem * This,
    /* [in] */ IShellItem *psi);


void __RPC_STUB IShellItem_IsEqual_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellItem_INTERFACE_DEFINED__ */


#ifndef __IEnumShellItems_INTERFACE_DEFINED__
#define __IEnumShellItems_INTERFACE_DEFINED__

/* interface IEnumShellItems */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IEnumShellItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("70629033-e363-4a28-a567-0db78006e6d7")
    IEnumShellItems : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ IShellItem **rgelt,
            /* [out] */ ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumShellItems **ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumShellItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumShellItems * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumShellItems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumShellItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumShellItems * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ IShellItem **rgelt,
            /* [out] */ ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumShellItems * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumShellItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumShellItems * This,
            /* [out] */ IEnumShellItems **ppenum);
        
        END_INTERFACE
    } IEnumShellItemsVtbl;

    interface IEnumShellItems
    {
        CONST_VTBL struct IEnumShellItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumShellItems_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumShellItems_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumShellItems_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumShellItems_Next(This,celt,rgelt,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched)

#define IEnumShellItems_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumShellItems_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumShellItems_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumShellItems_Next_Proxy( 
    IEnumShellItems * This,
    /* [in] */ ULONG celt,
    /* [length_is][size_is][out] */ IShellItem **rgelt,
    /* [out] */ ULONG *pceltFetched);


void __RPC_STUB IEnumShellItems_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumShellItems_Skip_Proxy( 
    IEnumShellItems * This,
    /* [in] */ ULONG celt);


void __RPC_STUB IEnumShellItems_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumShellItems_Reset_Proxy( 
    IEnumShellItems * This);


void __RPC_STUB IEnumShellItems_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumShellItems_Clone_Proxy( 
    IEnumShellItems * This,
    /* [out] */ IEnumShellItems **ppenum);


void __RPC_STUB IEnumShellItems_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumShellItems_INTERFACE_DEFINED__ */


#ifndef __IItemHandler_INTERFACE_DEFINED__
#define __IItemHandler_INTERFACE_DEFINED__

/* interface IItemHandler */
/* [object][uuid] */ 


EXTERN_C const IID IID_IItemHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c830b704-f3a3-4e3c-a099-d8bdbbc29a07")
    IItemHandler : public IPersist
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Init( 
            IShellItem *psi) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IItemHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IItemHandler * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IItemHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IItemHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassID )( 
            IItemHandler * This,
            /* [out] */ CLSID *pClassID);
        
        HRESULT ( STDMETHODCALLTYPE *Init )( 
            IItemHandler * This,
            IShellItem *psi);
        
        END_INTERFACE
    } IItemHandlerVtbl;

    interface IItemHandler
    {
        CONST_VTBL struct IItemHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IItemHandler_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IItemHandler_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IItemHandler_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IItemHandler_GetClassID(This,pClassID)	\
    (This)->lpVtbl -> GetClassID(This,pClassID)


#define IItemHandler_Init(This,psi)	\
    (This)->lpVtbl -> Init(This,psi)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IItemHandler_Init_Proxy( 
    IItemHandler * This,
    IShellItem *psi);


void __RPC_STUB IItemHandler_Init_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IItemHandler_INTERFACE_DEFINED__ */


#ifndef __ILocalCopy_INTERFACE_DEFINED__
#define __ILocalCopy_INTERFACE_DEFINED__

/* interface ILocalCopy */
/* [object][uuid][helpstring] */ 

//  flags for ILocalCopy methods
//  LCDOWN_READONLY            read only helper, Upload() fails with E_ACCESSDENIED
//  LCDOWN_SAVEAS              write only helper, no download required for Download()
//  LC_FORCEROUNDTRIP          never use local cache (always roundtrip both Upload() and Download())

enum __MIDL_ILocalCopy_0001
    {	LCDOWN_READONLY	= 0x1,
	LC_SAVEAS	= 0x2,
	LC_FORCEROUNDTRIP	= 0x10
    } ;
typedef DWORD LCFLAGS;


EXTERN_C const IID IID_ILocalCopy;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("679d9e36-f8f9-11d2-8deb-00c04f6837d5")
    ILocalCopy : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Download( 
            /* [in] */ LCFLAGS flags,
            /* [in] */ IBindCtx *pbc,
            /* [string][out] */ LPWSTR *ppszPath) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Upload( 
            /* [in] */ LCFLAGS flags,
            /* [in] */ IBindCtx *pbc) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ILocalCopyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILocalCopy * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILocalCopy * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILocalCopy * This);
        
        HRESULT ( STDMETHODCALLTYPE *Download )( 
            ILocalCopy * This,
            /* [in] */ LCFLAGS flags,
            /* [in] */ IBindCtx *pbc,
            /* [string][out] */ LPWSTR *ppszPath);
        
        HRESULT ( STDMETHODCALLTYPE *Upload )( 
            ILocalCopy * This,
            /* [in] */ LCFLAGS flags,
            /* [in] */ IBindCtx *pbc);
        
        END_INTERFACE
    } ILocalCopyVtbl;

    interface ILocalCopy
    {
        CONST_VTBL struct ILocalCopyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILocalCopy_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ILocalCopy_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ILocalCopy_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ILocalCopy_Download(This,flags,pbc,ppszPath)	\
    (This)->lpVtbl -> Download(This,flags,pbc,ppszPath)

#define ILocalCopy_Upload(This,flags,pbc)	\
    (This)->lpVtbl -> Upload(This,flags,pbc)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ILocalCopy_Download_Proxy( 
    ILocalCopy * This,
    /* [in] */ LCFLAGS flags,
    /* [in] */ IBindCtx *pbc,
    /* [string][out] */ LPWSTR *ppszPath);


void __RPC_STUB ILocalCopy_Download_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ILocalCopy_Upload_Proxy( 
    ILocalCopy * This,
    /* [in] */ LCFLAGS flags,
    /* [in] */ IBindCtx *pbc);


void __RPC_STUB ILocalCopy_Upload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ILocalCopy_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0164 */
/* [local] */ 

#ifdef UNICODE
#define IShellLink      IShellLinkW
#else
#define IShellLink      IShellLinkA
#endif
typedef /* [public] */ 
enum __MIDL___MIDL_itf_shobjidl_0164_0001
    {	SLR_NO_UI	= 0x1,
	SLR_ANY_MATCH	= 0x2,
	SLR_UPDATE	= 0x4,
	SLR_NOUPDATE	= 0x8,
	SLR_NOSEARCH	= 0x10,
	SLR_NOTRACK	= 0x20,
	SLR_NOLINKINFO	= 0x40,
	SLR_INVOKE_MSI	= 0x80
    } 	SLR_FLAGS;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_shobjidl_0164_0002
    {	SLGP_SHORTPATH	= 0x1,
	SLGP_UNCPRIORITY	= 0x2,
	SLGP_RAWPATH	= 0x4
    } 	SLGP_FLAGS;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0164_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0164_v0_0_s_ifspec;

#ifndef __IShellLinkA_INTERFACE_DEFINED__
#define __IShellLinkA_INTERFACE_DEFINED__

/* interface IShellLinkA */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IShellLinkA;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214EE-0000-0000-C000-000000000046")
    IShellLinkA : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPath( 
            /* [size_is][out] */ LPSTR pszFile,
            /* [in] */ int cch,
            /* [full][out][in] */ WIN32_FIND_DATAA *pfd,
            /* [in] */ DWORD fFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIDList( 
            /* [out] */ LPITEMIDLIST *ppidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIDList( 
            /* [in] */ LPCITEMIDLIST pidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDescription( 
            /* [size_is][out] */ LPSTR pszName,
            /* [in] */ int cch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDescription( 
            /* [in] */ LPCSTR pszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetWorkingDirectory( 
            /* [size_is][out] */ LPSTR pszDir,
            /* [in] */ int cch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetWorkingDirectory( 
            /* [in] */ LPCSTR pszDir) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetArguments( 
            /* [size_is][out] */ LPSTR pszArgs,
            /* [in] */ int cch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetArguments( 
            /* [in] */ LPCSTR pszArgs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHotkey( 
            /* [out] */ WORD *pwHotkey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHotkey( 
            /* [in] */ WORD wHotkey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetShowCmd( 
            /* [out] */ int *piShowCmd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetShowCmd( 
            /* [in] */ int iShowCmd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIconLocation( 
            /* [size_is][out] */ LPSTR pszIconPath,
            /* [in] */ int cch,
            /* [out] */ int *piIcon) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIconLocation( 
            /* [in] */ LPCSTR pszIconPath,
            /* [in] */ int iIcon) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetRelativePath( 
            /* [in] */ LPCSTR pszPathRel,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Resolve( 
            /* [in] */ HWND hwnd,
            /* [in] */ DWORD fFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPath( 
            /* [in] */ LPCSTR pszFile) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellLinkAVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellLinkA * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellLinkA * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellLinkA * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetPath )( 
            IShellLinkA * This,
            /* [size_is][out] */ LPSTR pszFile,
            /* [in] */ int cch,
            /* [full][out][in] */ WIN32_FIND_DATAA *pfd,
            /* [in] */ DWORD fFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDList )( 
            IShellLinkA * This,
            /* [out] */ LPITEMIDLIST *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE *SetIDList )( 
            IShellLinkA * This,
            /* [in] */ LPCITEMIDLIST pidl);
        
        HRESULT ( STDMETHODCALLTYPE *GetDescription )( 
            IShellLinkA * This,
            /* [size_is][out] */ LPSTR pszName,
            /* [in] */ int cch);
        
        HRESULT ( STDMETHODCALLTYPE *SetDescription )( 
            IShellLinkA * This,
            /* [in] */ LPCSTR pszName);
        
        HRESULT ( STDMETHODCALLTYPE *GetWorkingDirectory )( 
            IShellLinkA * This,
            /* [size_is][out] */ LPSTR pszDir,
            /* [in] */ int cch);
        
        HRESULT ( STDMETHODCALLTYPE *SetWorkingDirectory )( 
            IShellLinkA * This,
            /* [in] */ LPCSTR pszDir);
        
        HRESULT ( STDMETHODCALLTYPE *GetArguments )( 
            IShellLinkA * This,
            /* [size_is][out] */ LPSTR pszArgs,
            /* [in] */ int cch);
        
        HRESULT ( STDMETHODCALLTYPE *SetArguments )( 
            IShellLinkA * This,
            /* [in] */ LPCSTR pszArgs);
        
        HRESULT ( STDMETHODCALLTYPE *GetHotkey )( 
            IShellLinkA * This,
            /* [out] */ WORD *pwHotkey);
        
        HRESULT ( STDMETHODCALLTYPE *SetHotkey )( 
            IShellLinkA * This,
            /* [in] */ WORD wHotkey);
        
        HRESULT ( STDMETHODCALLTYPE *GetShowCmd )( 
            IShellLinkA * This,
            /* [out] */ int *piShowCmd);
        
        HRESULT ( STDMETHODCALLTYPE *SetShowCmd )( 
            IShellLinkA * This,
            /* [in] */ int iShowCmd);
        
        HRESULT ( STDMETHODCALLTYPE *GetIconLocation )( 
            IShellLinkA * This,
            /* [size_is][out] */ LPSTR pszIconPath,
            /* [in] */ int cch,
            /* [out] */ int *piIcon);
        
        HRESULT ( STDMETHODCALLTYPE *SetIconLocation )( 
            IShellLinkA * This,
            /* [in] */ LPCSTR pszIconPath,
            /* [in] */ int iIcon);
        
        HRESULT ( STDMETHODCALLTYPE *SetRelativePath )( 
            IShellLinkA * This,
            /* [in] */ LPCSTR pszPathRel,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Resolve )( 
            IShellLinkA * This,
            /* [in] */ HWND hwnd,
            /* [in] */ DWORD fFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetPath )( 
            IShellLinkA * This,
            /* [in] */ LPCSTR pszFile);
        
        END_INTERFACE
    } IShellLinkAVtbl;

    interface IShellLinkA
    {
        CONST_VTBL struct IShellLinkAVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellLinkA_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellLinkA_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellLinkA_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellLinkA_GetPath(This,pszFile,cch,pfd,fFlags)	\
    (This)->lpVtbl -> GetPath(This,pszFile,cch,pfd,fFlags)

#define IShellLinkA_GetIDList(This,ppidl)	\
    (This)->lpVtbl -> GetIDList(This,ppidl)

#define IShellLinkA_SetIDList(This,pidl)	\
    (This)->lpVtbl -> SetIDList(This,pidl)

#define IShellLinkA_GetDescription(This,pszName,cch)	\
    (This)->lpVtbl -> GetDescription(This,pszName,cch)

#define IShellLinkA_SetDescription(This,pszName)	\
    (This)->lpVtbl -> SetDescription(This,pszName)

#define IShellLinkA_GetWorkingDirectory(This,pszDir,cch)	\
    (This)->lpVtbl -> GetWorkingDirectory(This,pszDir,cch)

#define IShellLinkA_SetWorkingDirectory(This,pszDir)	\
    (This)->lpVtbl -> SetWorkingDirectory(This,pszDir)

#define IShellLinkA_GetArguments(This,pszArgs,cch)	\
    (This)->lpVtbl -> GetArguments(This,pszArgs,cch)

#define IShellLinkA_SetArguments(This,pszArgs)	\
    (This)->lpVtbl -> SetArguments(This,pszArgs)

#define IShellLinkA_GetHotkey(This,pwHotkey)	\
    (This)->lpVtbl -> GetHotkey(This,pwHotkey)

#define IShellLinkA_SetHotkey(This,wHotkey)	\
    (This)->lpVtbl -> SetHotkey(This,wHotkey)

#define IShellLinkA_GetShowCmd(This,piShowCmd)	\
    (This)->lpVtbl -> GetShowCmd(This,piShowCmd)

#define IShellLinkA_SetShowCmd(This,iShowCmd)	\
    (This)->lpVtbl -> SetShowCmd(This,iShowCmd)

#define IShellLinkA_GetIconLocation(This,pszIconPath,cch,piIcon)	\
    (This)->lpVtbl -> GetIconLocation(This,pszIconPath,cch,piIcon)

#define IShellLinkA_SetIconLocation(This,pszIconPath,iIcon)	\
    (This)->lpVtbl -> SetIconLocation(This,pszIconPath,iIcon)

#define IShellLinkA_SetRelativePath(This,pszPathRel,dwReserved)	\
    (This)->lpVtbl -> SetRelativePath(This,pszPathRel,dwReserved)

#define IShellLinkA_Resolve(This,hwnd,fFlags)	\
    (This)->lpVtbl -> Resolve(This,hwnd,fFlags)

#define IShellLinkA_SetPath(This,pszFile)	\
    (This)->lpVtbl -> SetPath(This,pszFile)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellLinkA_GetPath_Proxy( 
    IShellLinkA * This,
    /* [size_is][out] */ LPSTR pszFile,
    /* [in] */ int cch,
    /* [full][out][in] */ WIN32_FIND_DATAA *pfd,
    /* [in] */ DWORD fFlags);


void __RPC_STUB IShellLinkA_GetPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_GetIDList_Proxy( 
    IShellLinkA * This,
    /* [out] */ LPITEMIDLIST *ppidl);


void __RPC_STUB IShellLinkA_GetIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetIDList_Proxy( 
    IShellLinkA * This,
    /* [in] */ LPCITEMIDLIST pidl);


void __RPC_STUB IShellLinkA_SetIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_GetDescription_Proxy( 
    IShellLinkA * This,
    /* [size_is][out] */ LPSTR pszName,
    /* [in] */ int cch);


void __RPC_STUB IShellLinkA_GetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetDescription_Proxy( 
    IShellLinkA * This,
    /* [in] */ LPCSTR pszName);


void __RPC_STUB IShellLinkA_SetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_GetWorkingDirectory_Proxy( 
    IShellLinkA * This,
    /* [size_is][out] */ LPSTR pszDir,
    /* [in] */ int cch);


void __RPC_STUB IShellLinkA_GetWorkingDirectory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetWorkingDirectory_Proxy( 
    IShellLinkA * This,
    /* [in] */ LPCSTR pszDir);


void __RPC_STUB IShellLinkA_SetWorkingDirectory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_GetArguments_Proxy( 
    IShellLinkA * This,
    /* [size_is][out] */ LPSTR pszArgs,
    /* [in] */ int cch);


void __RPC_STUB IShellLinkA_GetArguments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetArguments_Proxy( 
    IShellLinkA * This,
    /* [in] */ LPCSTR pszArgs);


void __RPC_STUB IShellLinkA_SetArguments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_GetHotkey_Proxy( 
    IShellLinkA * This,
    /* [out] */ WORD *pwHotkey);


void __RPC_STUB IShellLinkA_GetHotkey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetHotkey_Proxy( 
    IShellLinkA * This,
    /* [in] */ WORD wHotkey);


void __RPC_STUB IShellLinkA_SetHotkey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_GetShowCmd_Proxy( 
    IShellLinkA * This,
    /* [out] */ int *piShowCmd);


void __RPC_STUB IShellLinkA_GetShowCmd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetShowCmd_Proxy( 
    IShellLinkA * This,
    /* [in] */ int iShowCmd);


void __RPC_STUB IShellLinkA_SetShowCmd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_GetIconLocation_Proxy( 
    IShellLinkA * This,
    /* [size_is][out] */ LPSTR pszIconPath,
    /* [in] */ int cch,
    /* [out] */ int *piIcon);


void __RPC_STUB IShellLinkA_GetIconLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetIconLocation_Proxy( 
    IShellLinkA * This,
    /* [in] */ LPCSTR pszIconPath,
    /* [in] */ int iIcon);


void __RPC_STUB IShellLinkA_SetIconLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetRelativePath_Proxy( 
    IShellLinkA * This,
    /* [in] */ LPCSTR pszPathRel,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB IShellLinkA_SetRelativePath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_Resolve_Proxy( 
    IShellLinkA * This,
    /* [in] */ HWND hwnd,
    /* [in] */ DWORD fFlags);


void __RPC_STUB IShellLinkA_Resolve_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkA_SetPath_Proxy( 
    IShellLinkA * This,
    /* [in] */ LPCSTR pszFile);


void __RPC_STUB IShellLinkA_SetPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellLinkA_INTERFACE_DEFINED__ */


#ifndef __IShellLinkW_INTERFACE_DEFINED__
#define __IShellLinkW_INTERFACE_DEFINED__

/* interface IShellLinkW */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IShellLinkW;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214F9-0000-0000-C000-000000000046")
    IShellLinkW : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPath( 
            /* [size_is][out] */ LPWSTR pszFile,
            /* [in] */ int cch,
            /* [full][out][in] */ WIN32_FIND_DATAW *pfd,
            /* [in] */ DWORD fFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIDList( 
            /* [out] */ LPITEMIDLIST *ppidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIDList( 
            /* [in] */ LPCITEMIDLIST pidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDescription( 
            /* [size_is][out] */ LPWSTR pszName,
            int cch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDescription( 
            /* [in] */ LPCWSTR pszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetWorkingDirectory( 
            /* [size_is][out] */ LPWSTR pszDir,
            int cch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetWorkingDirectory( 
            /* [in] */ LPCWSTR pszDir) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetArguments( 
            /* [size_is][out] */ LPWSTR pszArgs,
            int cch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetArguments( 
            /* [in] */ LPCWSTR pszArgs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHotkey( 
            /* [out] */ WORD *pwHotkey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHotkey( 
            /* [in] */ WORD wHotkey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetShowCmd( 
            /* [out] */ int *piShowCmd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetShowCmd( 
            /* [in] */ int iShowCmd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIconLocation( 
            /* [size_is][out] */ LPWSTR pszIconPath,
            /* [in] */ int cch,
            /* [out] */ int *piIcon) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIconLocation( 
            /* [in] */ LPCWSTR pszIconPath,
            /* [in] */ int iIcon) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetRelativePath( 
            /* [in] */ LPCWSTR pszPathRel,
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Resolve( 
            /* [in] */ HWND hwnd,
            /* [in] */ DWORD fFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPath( 
            /* [in] */ LPCWSTR pszFile) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellLinkWVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellLinkW * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellLinkW * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellLinkW * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetPath )( 
            IShellLinkW * This,
            /* [size_is][out] */ LPWSTR pszFile,
            /* [in] */ int cch,
            /* [full][out][in] */ WIN32_FIND_DATAW *pfd,
            /* [in] */ DWORD fFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDList )( 
            IShellLinkW * This,
            /* [out] */ LPITEMIDLIST *ppidl);
        
        HRESULT ( STDMETHODCALLTYPE *SetIDList )( 
            IShellLinkW * This,
            /* [in] */ LPCITEMIDLIST pidl);
        
        HRESULT ( STDMETHODCALLTYPE *GetDescription )( 
            IShellLinkW * This,
            /* [size_is][out] */ LPWSTR pszName,
            int cch);
        
        HRESULT ( STDMETHODCALLTYPE *SetDescription )( 
            IShellLinkW * This,
            /* [in] */ LPCWSTR pszName);
        
        HRESULT ( STDMETHODCALLTYPE *GetWorkingDirectory )( 
            IShellLinkW * This,
            /* [size_is][out] */ LPWSTR pszDir,
            int cch);
        
        HRESULT ( STDMETHODCALLTYPE *SetWorkingDirectory )( 
            IShellLinkW * This,
            /* [in] */ LPCWSTR pszDir);
        
        HRESULT ( STDMETHODCALLTYPE *GetArguments )( 
            IShellLinkW * This,
            /* [size_is][out] */ LPWSTR pszArgs,
            int cch);
        
        HRESULT ( STDMETHODCALLTYPE *SetArguments )( 
            IShellLinkW * This,
            /* [in] */ LPCWSTR pszArgs);
        
        HRESULT ( STDMETHODCALLTYPE *GetHotkey )( 
            IShellLinkW * This,
            /* [out] */ WORD *pwHotkey);
        
        HRESULT ( STDMETHODCALLTYPE *SetHotkey )( 
            IShellLinkW * This,
            /* [in] */ WORD wHotkey);
        
        HRESULT ( STDMETHODCALLTYPE *GetShowCmd )( 
            IShellLinkW * This,
            /* [out] */ int *piShowCmd);
        
        HRESULT ( STDMETHODCALLTYPE *SetShowCmd )( 
            IShellLinkW * This,
            /* [in] */ int iShowCmd);
        
        HRESULT ( STDMETHODCALLTYPE *GetIconLocation )( 
            IShellLinkW * This,
            /* [size_is][out] */ LPWSTR pszIconPath,
            /* [in] */ int cch,
            /* [out] */ int *piIcon);
        
        HRESULT ( STDMETHODCALLTYPE *SetIconLocation )( 
            IShellLinkW * This,
            /* [in] */ LPCWSTR pszIconPath,
            /* [in] */ int iIcon);
        
        HRESULT ( STDMETHODCALLTYPE *SetRelativePath )( 
            IShellLinkW * This,
            /* [in] */ LPCWSTR pszPathRel,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Resolve )( 
            IShellLinkW * This,
            /* [in] */ HWND hwnd,
            /* [in] */ DWORD fFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetPath )( 
            IShellLinkW * This,
            /* [in] */ LPCWSTR pszFile);
        
        END_INTERFACE
    } IShellLinkWVtbl;

    interface IShellLinkW
    {
        CONST_VTBL struct IShellLinkWVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellLinkW_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellLinkW_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellLinkW_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellLinkW_GetPath(This,pszFile,cch,pfd,fFlags)	\
    (This)->lpVtbl -> GetPath(This,pszFile,cch,pfd,fFlags)

#define IShellLinkW_GetIDList(This,ppidl)	\
    (This)->lpVtbl -> GetIDList(This,ppidl)

#define IShellLinkW_SetIDList(This,pidl)	\
    (This)->lpVtbl -> SetIDList(This,pidl)

#define IShellLinkW_GetDescription(This,pszName,cch)	\
    (This)->lpVtbl -> GetDescription(This,pszName,cch)

#define IShellLinkW_SetDescription(This,pszName)	\
    (This)->lpVtbl -> SetDescription(This,pszName)

#define IShellLinkW_GetWorkingDirectory(This,pszDir,cch)	\
    (This)->lpVtbl -> GetWorkingDirectory(This,pszDir,cch)

#define IShellLinkW_SetWorkingDirectory(This,pszDir)	\
    (This)->lpVtbl -> SetWorkingDirectory(This,pszDir)

#define IShellLinkW_GetArguments(This,pszArgs,cch)	\
    (This)->lpVtbl -> GetArguments(This,pszArgs,cch)

#define IShellLinkW_SetArguments(This,pszArgs)	\
    (This)->lpVtbl -> SetArguments(This,pszArgs)

#define IShellLinkW_GetHotkey(This,pwHotkey)	\
    (This)->lpVtbl -> GetHotkey(This,pwHotkey)

#define IShellLinkW_SetHotkey(This,wHotkey)	\
    (This)->lpVtbl -> SetHotkey(This,wHotkey)

#define IShellLinkW_GetShowCmd(This,piShowCmd)	\
    (This)->lpVtbl -> GetShowCmd(This,piShowCmd)

#define IShellLinkW_SetShowCmd(This,iShowCmd)	\
    (This)->lpVtbl -> SetShowCmd(This,iShowCmd)

#define IShellLinkW_GetIconLocation(This,pszIconPath,cch,piIcon)	\
    (This)->lpVtbl -> GetIconLocation(This,pszIconPath,cch,piIcon)

#define IShellLinkW_SetIconLocation(This,pszIconPath,iIcon)	\
    (This)->lpVtbl -> SetIconLocation(This,pszIconPath,iIcon)

#define IShellLinkW_SetRelativePath(This,pszPathRel,dwReserved)	\
    (This)->lpVtbl -> SetRelativePath(This,pszPathRel,dwReserved)

#define IShellLinkW_Resolve(This,hwnd,fFlags)	\
    (This)->lpVtbl -> Resolve(This,hwnd,fFlags)

#define IShellLinkW_SetPath(This,pszFile)	\
    (This)->lpVtbl -> SetPath(This,pszFile)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellLinkW_GetPath_Proxy( 
    IShellLinkW * This,
    /* [size_is][out] */ LPWSTR pszFile,
    /* [in] */ int cch,
    /* [full][out][in] */ WIN32_FIND_DATAW *pfd,
    /* [in] */ DWORD fFlags);


void __RPC_STUB IShellLinkW_GetPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_GetIDList_Proxy( 
    IShellLinkW * This,
    /* [out] */ LPITEMIDLIST *ppidl);


void __RPC_STUB IShellLinkW_GetIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetIDList_Proxy( 
    IShellLinkW * This,
    /* [in] */ LPCITEMIDLIST pidl);


void __RPC_STUB IShellLinkW_SetIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_GetDescription_Proxy( 
    IShellLinkW * This,
    /* [size_is][out] */ LPWSTR pszName,
    int cch);


void __RPC_STUB IShellLinkW_GetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetDescription_Proxy( 
    IShellLinkW * This,
    /* [in] */ LPCWSTR pszName);


void __RPC_STUB IShellLinkW_SetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_GetWorkingDirectory_Proxy( 
    IShellLinkW * This,
    /* [size_is][out] */ LPWSTR pszDir,
    int cch);


void __RPC_STUB IShellLinkW_GetWorkingDirectory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetWorkingDirectory_Proxy( 
    IShellLinkW * This,
    /* [in] */ LPCWSTR pszDir);


void __RPC_STUB IShellLinkW_SetWorkingDirectory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_GetArguments_Proxy( 
    IShellLinkW * This,
    /* [size_is][out] */ LPWSTR pszArgs,
    int cch);


void __RPC_STUB IShellLinkW_GetArguments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetArguments_Proxy( 
    IShellLinkW * This,
    /* [in] */ LPCWSTR pszArgs);


void __RPC_STUB IShellLinkW_SetArguments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_GetHotkey_Proxy( 
    IShellLinkW * This,
    /* [out] */ WORD *pwHotkey);


void __RPC_STUB IShellLinkW_GetHotkey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetHotkey_Proxy( 
    IShellLinkW * This,
    /* [in] */ WORD wHotkey);


void __RPC_STUB IShellLinkW_SetHotkey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_GetShowCmd_Proxy( 
    IShellLinkW * This,
    /* [out] */ int *piShowCmd);


void __RPC_STUB IShellLinkW_GetShowCmd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetShowCmd_Proxy( 
    IShellLinkW * This,
    /* [in] */ int iShowCmd);


void __RPC_STUB IShellLinkW_SetShowCmd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_GetIconLocation_Proxy( 
    IShellLinkW * This,
    /* [size_is][out] */ LPWSTR pszIconPath,
    /* [in] */ int cch,
    /* [out] */ int *piIcon);


void __RPC_STUB IShellLinkW_GetIconLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetIconLocation_Proxy( 
    IShellLinkW * This,
    /* [in] */ LPCWSTR pszIconPath,
    /* [in] */ int iIcon);


void __RPC_STUB IShellLinkW_SetIconLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetRelativePath_Proxy( 
    IShellLinkW * This,
    /* [in] */ LPCWSTR pszPathRel,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB IShellLinkW_SetRelativePath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_Resolve_Proxy( 
    IShellLinkW * This,
    /* [in] */ HWND hwnd,
    /* [in] */ DWORD fFlags);


void __RPC_STUB IShellLinkW_Resolve_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellLinkW_SetPath_Proxy( 
    IShellLinkW * This,
    /* [in] */ LPCWSTR pszFile);


void __RPC_STUB IShellLinkW_SetPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellLinkW_INTERFACE_DEFINED__ */


#ifndef __IActionProgressDialog_INTERFACE_DEFINED__
#define __IActionProgressDialog_INTERFACE_DEFINED__

/* interface IActionProgressDialog */
/* [unique][helpstring][uuid][object] */ 

/* [v1_enum] */ 
enum __MIDL_IActionProgressDialog_0001
    {	SPINITF_NORMAL	= 0,
	SPINITF_MODAL	= 0x1,
	SPINITF_NOMINIMIZE	= 0x8
    } ;
typedef DWORD SPINITF;


EXTERN_C const IID IID_IActionProgressDialog;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("49ff1172-eadc-446d-9285-156453a6431c")
    IActionProgressDialog : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ SPINITF flags,
            /* [string][in] */ LPCWSTR pszTitle,
            /* [string][in] */ LPCWSTR pszCancel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IActionProgressDialogVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IActionProgressDialog * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IActionProgressDialog * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IActionProgressDialog * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IActionProgressDialog * This,
            /* [in] */ SPINITF flags,
            /* [string][in] */ LPCWSTR pszTitle,
            /* [string][in] */ LPCWSTR pszCancel);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IActionProgressDialog * This);
        
        END_INTERFACE
    } IActionProgressDialogVtbl;

    interface IActionProgressDialog
    {
        CONST_VTBL struct IActionProgressDialogVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IActionProgressDialog_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IActionProgressDialog_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IActionProgressDialog_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IActionProgressDialog_Initialize(This,flags,pszTitle,pszCancel)	\
    (This)->lpVtbl -> Initialize(This,flags,pszTitle,pszCancel)

#define IActionProgressDialog_Stop(This)	\
    (This)->lpVtbl -> Stop(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IActionProgressDialog_Initialize_Proxy( 
    IActionProgressDialog * This,
    /* [in] */ SPINITF flags,
    /* [string][in] */ LPCWSTR pszTitle,
    /* [string][in] */ LPCWSTR pszCancel);


void __RPC_STUB IActionProgressDialog_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActionProgressDialog_Stop_Proxy( 
    IActionProgressDialog * This);


void __RPC_STUB IActionProgressDialog_Stop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IActionProgressDialog_INTERFACE_DEFINED__ */


#ifndef __IHWEventHandler_INTERFACE_DEFINED__
#define __IHWEventHandler_INTERFACE_DEFINED__

/* interface IHWEventHandler */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IHWEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C1FB73D0-EC3A-4ba2-B512-8CDB9187B6D1")
    IHWEventHandler : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [string][in] */ LPCWSTR pszParams) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HandleEvent( 
            /* [string][in] */ LPCWSTR pszDeviceID,
            /* [string][in] */ LPCWSTR pszAltDeviceID,
            /* [string][in] */ LPCWSTR pszEventType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHWEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHWEventHandler * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHWEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHWEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IHWEventHandler * This,
            /* [string][in] */ LPCWSTR pszParams);
        
        HRESULT ( STDMETHODCALLTYPE *HandleEvent )( 
            IHWEventHandler * This,
            /* [string][in] */ LPCWSTR pszDeviceID,
            /* [string][in] */ LPCWSTR pszAltDeviceID,
            /* [string][in] */ LPCWSTR pszEventType);
        
        END_INTERFACE
    } IHWEventHandlerVtbl;

    interface IHWEventHandler
    {
        CONST_VTBL struct IHWEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHWEventHandler_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHWEventHandler_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHWEventHandler_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHWEventHandler_Initialize(This,pszParams)	\
    (This)->lpVtbl -> Initialize(This,pszParams)

#define IHWEventHandler_HandleEvent(This,pszDeviceID,pszAltDeviceID,pszEventType)	\
    (This)->lpVtbl -> HandleEvent(This,pszDeviceID,pszAltDeviceID,pszEventType)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IHWEventHandler_Initialize_Proxy( 
    IHWEventHandler * This,
    /* [string][in] */ LPCWSTR pszParams);


void __RPC_STUB IHWEventHandler_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHWEventHandler_HandleEvent_Proxy( 
    IHWEventHandler * This,
    /* [string][in] */ LPCWSTR pszDeviceID,
    /* [string][in] */ LPCWSTR pszAltDeviceID,
    /* [string][in] */ LPCWSTR pszEventType);


void __RPC_STUB IHWEventHandler_HandleEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHWEventHandler_INTERFACE_DEFINED__ */


#ifndef __IActionProgress_INTERFACE_DEFINED__
#define __IActionProgress_INTERFACE_DEFINED__

/* interface IActionProgress */
/* [unique][helpstring][uuid][object] */ 

/* [v1_enum] */ 
enum __MIDL_IActionProgress_0001
    {	SPBEGINF_NORMAL	= 0,
	SPBEGINF_AUTOTIME	= 0x2,
	SPBEGINF_NOPROGRESSBAR	= 0x10
    } ;
typedef DWORD SPBEGINF;

typedef /* [v1_enum] */ 
enum _SPACTION
    {	SPACTION_NONE	= 0,
	SPACTION_MOVING	= SPACTION_NONE + 1,
	SPACTION_COPYING	= SPACTION_MOVING + 1,
	SPACTION_RECYCLING	= SPACTION_COPYING + 1,
	SPACTION_APPLYINGATTRIBS	= SPACTION_RECYCLING + 1,
	SPACTION_DOWNLOADING	= SPACTION_APPLYINGATTRIBS + 1,
	SPACTION_SEARCHING_INTERNET	= SPACTION_DOWNLOADING + 1,
	SPACTION_CALCULATING	= SPACTION_SEARCHING_INTERNET + 1,
	SPACTION_UPLOADING	= SPACTION_CALCULATING + 1
    } 	SPACTION;

typedef /* [v1_enum] */ 
enum _SPTEXT
    {	SPTEXT_ACTIONDESCRIPTION	= 1,
	SPTEXT_ACTIONDETAIL	= SPTEXT_ACTIONDESCRIPTION + 1
    } 	SPTEXT;


EXTERN_C const IID IID_IActionProgress;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("49ff1173-eadc-446d-9285-156453a6431c")
    IActionProgress : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Begin( 
            /* [in] */ SPACTION action,
            /* [in] */ SPBEGINF flags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateProgress( 
            /* [in] */ ULONGLONG ulCompleted,
            /* [in] */ ULONGLONG ulTotal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateText( 
            /* [in] */ SPTEXT sptext,
            /* [string][in] */ LPCWSTR pszText,
            /* [in] */ BOOL fMayCompact) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryCancel( 
            /* [out] */ BOOL *pfCancelled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResetCancel( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE End( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IActionProgressVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IActionProgress * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IActionProgress * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IActionProgress * This);
        
        HRESULT ( STDMETHODCALLTYPE *Begin )( 
            IActionProgress * This,
            /* [in] */ SPACTION action,
            /* [in] */ SPBEGINF flags);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateProgress )( 
            IActionProgress * This,
            /* [in] */ ULONGLONG ulCompleted,
            /* [in] */ ULONGLONG ulTotal);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateText )( 
            IActionProgress * This,
            /* [in] */ SPTEXT sptext,
            /* [string][in] */ LPCWSTR pszText,
            /* [in] */ BOOL fMayCompact);
        
        HRESULT ( STDMETHODCALLTYPE *QueryCancel )( 
            IActionProgress * This,
            /* [out] */ BOOL *pfCancelled);
        
        HRESULT ( STDMETHODCALLTYPE *ResetCancel )( 
            IActionProgress * This);
        
        HRESULT ( STDMETHODCALLTYPE *End )( 
            IActionProgress * This);
        
        END_INTERFACE
    } IActionProgressVtbl;

    interface IActionProgress
    {
        CONST_VTBL struct IActionProgressVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IActionProgress_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IActionProgress_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IActionProgress_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IActionProgress_Begin(This,action,flags)	\
    (This)->lpVtbl -> Begin(This,action,flags)

#define IActionProgress_UpdateProgress(This,ulCompleted,ulTotal)	\
    (This)->lpVtbl -> UpdateProgress(This,ulCompleted,ulTotal)

#define IActionProgress_UpdateText(This,sptext,pszText,fMayCompact)	\
    (This)->lpVtbl -> UpdateText(This,sptext,pszText,fMayCompact)

#define IActionProgress_QueryCancel(This,pfCancelled)	\
    (This)->lpVtbl -> QueryCancel(This,pfCancelled)

#define IActionProgress_ResetCancel(This)	\
    (This)->lpVtbl -> ResetCancel(This)

#define IActionProgress_End(This)	\
    (This)->lpVtbl -> End(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IActionProgress_Begin_Proxy( 
    IActionProgress * This,
    /* [in] */ SPACTION action,
    /* [in] */ SPBEGINF flags);


void __RPC_STUB IActionProgress_Begin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActionProgress_UpdateProgress_Proxy( 
    IActionProgress * This,
    /* [in] */ ULONGLONG ulCompleted,
    /* [in] */ ULONGLONG ulTotal);


void __RPC_STUB IActionProgress_UpdateProgress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActionProgress_UpdateText_Proxy( 
    IActionProgress * This,
    /* [in] */ SPTEXT sptext,
    /* [string][in] */ LPCWSTR pszText,
    /* [in] */ BOOL fMayCompact);


void __RPC_STUB IActionProgress_UpdateText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActionProgress_QueryCancel_Proxy( 
    IActionProgress * This,
    /* [out] */ BOOL *pfCancelled);


void __RPC_STUB IActionProgress_QueryCancel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActionProgress_ResetCancel_Proxy( 
    IActionProgress * This);


void __RPC_STUB IActionProgress_ResetCancel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActionProgress_End_Proxy( 
    IActionProgress * This);


void __RPC_STUB IActionProgress_End_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IActionProgress_INTERFACE_DEFINED__ */


#ifndef __IShellExtInit_INTERFACE_DEFINED__
#define __IShellExtInit_INTERFACE_DEFINED__

/* interface IShellExtInit */
/* [unique][local][object][uuid] */ 


EXTERN_C const IID IID_IShellExtInit;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214E8-0000-0000-C000-000000000046")
    IShellExtInit : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ LPCITEMIDLIST pidlFolder,
            /* [in] */ IDataObject *pdtobj,
            /* [in] */ HKEY hkeyProgID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellExtInitVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellExtInit * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellExtInit * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellExtInit * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IShellExtInit * This,
            /* [in] */ LPCITEMIDLIST pidlFolder,
            /* [in] */ IDataObject *pdtobj,
            /* [in] */ HKEY hkeyProgID);
        
        END_INTERFACE
    } IShellExtInitVtbl;

    interface IShellExtInit
    {
        CONST_VTBL struct IShellExtInitVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellExtInit_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellExtInit_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellExtInit_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellExtInit_Initialize(This,pidlFolder,pdtobj,hkeyProgID)	\
    (This)->lpVtbl -> Initialize(This,pidlFolder,pdtobj,hkeyProgID)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellExtInit_Initialize_Proxy( 
    IShellExtInit * This,
    /* [in] */ LPCITEMIDLIST pidlFolder,
    /* [in] */ IDataObject *pdtobj,
    /* [in] */ HKEY hkeyProgID);


void __RPC_STUB IShellExtInit_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellExtInit_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0170 */
/* [local] */ 

typedef IShellExtInit *LPSHELLEXTINIT;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0170_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0170_v0_0_s_ifspec;

#ifndef __IShellPropSheetExt_INTERFACE_DEFINED__
#define __IShellPropSheetExt_INTERFACE_DEFINED__

/* interface IShellPropSheetExt */
/* [unique][local][object][uuid] */ 


enum __MIDL_IShellPropSheetExt_0001
    {	EXPPS_FILETYPES	= 0x1
    } ;
typedef UINT EXPPS;


EXTERN_C const IID IID_IShellPropSheetExt;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214E9-0000-0000-C000-000000000046")
    IShellPropSheetExt : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddPages( 
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfnAddPage,
            /* [in] */ LPARAM lParam) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplacePage( 
            /* [in] */ EXPPS uPageID,
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfnReplaceWith,
            /* [in] */ LPARAM lParam) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellPropSheetExtVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellPropSheetExt * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellPropSheetExt * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellPropSheetExt * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddPages )( 
            IShellPropSheetExt * This,
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfnAddPage,
            /* [in] */ LPARAM lParam);
        
        HRESULT ( STDMETHODCALLTYPE *ReplacePage )( 
            IShellPropSheetExt * This,
            /* [in] */ EXPPS uPageID,
            /* [in] */ LPFNSVADDPROPSHEETPAGE pfnReplaceWith,
            /* [in] */ LPARAM lParam);
        
        END_INTERFACE
    } IShellPropSheetExtVtbl;

    interface IShellPropSheetExt
    {
        CONST_VTBL struct IShellPropSheetExtVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellPropSheetExt_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellPropSheetExt_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellPropSheetExt_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellPropSheetExt_AddPages(This,pfnAddPage,lParam)	\
    (This)->lpVtbl -> AddPages(This,pfnAddPage,lParam)

#define IShellPropSheetExt_ReplacePage(This,uPageID,pfnReplaceWith,lParam)	\
    (This)->lpVtbl -> ReplacePage(This,uPageID,pfnReplaceWith,lParam)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IShellPropSheetExt_AddPages_Proxy( 
    IShellPropSheetExt * This,
    /* [in] */ LPFNSVADDPROPSHEETPAGE pfnAddPage,
    /* [in] */ LPARAM lParam);


void __RPC_STUB IShellPropSheetExt_AddPages_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IShellPropSheetExt_ReplacePage_Proxy( 
    IShellPropSheetExt * This,
    /* [in] */ EXPPS uPageID,
    /* [in] */ LPFNSVADDPROPSHEETPAGE pfnReplaceWith,
    /* [in] */ LPARAM lParam);


void __RPC_STUB IShellPropSheetExt_ReplacePage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellPropSheetExt_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0171 */
/* [local] */ 

typedef IShellPropSheetExt *LPSHELLPROPSHEETEXT;



extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0171_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0171_v0_0_s_ifspec;

#ifndef __IRemoteComputer_INTERFACE_DEFINED__
#define __IRemoteComputer_INTERFACE_DEFINED__

/* interface IRemoteComputer */
/* [unique][object][uuid][helpstring] */ 


EXTERN_C const IID IID_IRemoteComputer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000214FE-0000-0000-C000-000000000046")
    IRemoteComputer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ LPCWSTR pszMachine,
            /* [in] */ BOOL bEnumerating) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IRemoteComputerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRemoteComputer * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRemoteComputer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRemoteComputer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IRemoteComputer * This,
            /* [in] */ LPCWSTR pszMachine,
            /* [in] */ BOOL bEnumerating);
        
        END_INTERFACE
    } IRemoteComputerVtbl;

    interface IRemoteComputer
    {
        CONST_VTBL struct IRemoteComputerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRemoteComputer_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IRemoteComputer_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IRemoteComputer_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IRemoteComputer_Initialize(This,pszMachine,bEnumerating)	\
    (This)->lpVtbl -> Initialize(This,pszMachine,bEnumerating)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IRemoteComputer_Initialize_Proxy( 
    IRemoteComputer * This,
    /* [in] */ LPCWSTR pszMachine,
    /* [in] */ BOOL bEnumerating);


void __RPC_STUB IRemoteComputer_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IRemoteComputer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0172 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0172_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0172_v0_0_s_ifspec;

#ifndef __IDavStorage_INTERFACE_DEFINED__
#define __IDavStorage_INTERFACE_DEFINED__

/* interface IDavStorage */
/* [object][uuid][helpstring] */ 


EXTERN_C const IID IID_IDavStorage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D0E62481-D5A2-4b86-AC11-C048E6D81DB6")
    IDavStorage : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Init( 
            /* [in] */ LPWSTR pwszUrl,
            /* [in] */ LPWSTR pwszUsername,
            /* [in] */ LPWSTR pwszPassword) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDavStorageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDavStorage * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDavStorage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDavStorage * This);
        
        HRESULT ( STDMETHODCALLTYPE *Init )( 
            IDavStorage * This,
            /* [in] */ LPWSTR pwszUrl,
            /* [in] */ LPWSTR pwszUsername,
            /* [in] */ LPWSTR pwszPassword);
        
        END_INTERFACE
    } IDavStorageVtbl;

    interface IDavStorage
    {
        CONST_VTBL struct IDavStorageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDavStorage_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDavStorage_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDavStorage_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDavStorage_Init(This,pwszUrl,pwszUsername,pwszPassword)	\
    (This)->lpVtbl -> Init(This,pwszUrl,pwszUsername,pwszPassword)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDavStorage_Init_Proxy( 
    IDavStorage * This,
    /* [in] */ LPWSTR pwszUrl,
    /* [in] */ LPWSTR pwszUsername,
    /* [in] */ LPWSTR pwszPassword);


void __RPC_STUB IDavStorage_Init_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDavStorage_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0173 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0173_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0173_v0_0_s_ifspec;

#ifndef __IDynamicStorage_INTERFACE_DEFINED__
#define __IDynamicStorage_INTERFACE_DEFINED__

/* interface IDynamicStorage */
/* [object][uuid][helpstring] */ 


EXTERN_C const IID IID_IDynamicStorage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("694D8DB5-F7A4-4e72-A547-2F3DD5FA5B0D")
    IDynamicStorage : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddIDList( 
            /* [in] */ DWORD cpidl,
            /* [size_is][in] */ LPITEMIDLIST *rgpidl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddUnknown( 
            /* [in] */ REFIID riid,
            /* [in] */ IUnknown *pUnknown) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddStorage( 
            /* [in] */ IStorage *pStorage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddStream( 
            /* [in] */ IStream *pStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddDataObject( 
            /* [in] */ LPDATAOBJECT pdtobj) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDynamicStorageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDynamicStorage * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDynamicStorage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDynamicStorage * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddIDList )( 
            IDynamicStorage * This,
            /* [in] */ DWORD cpidl,
            /* [size_is][in] */ LPITEMIDLIST *rgpidl);
        
        HRESULT ( STDMETHODCALLTYPE *AddUnknown )( 
            IDynamicStorage * This,
            /* [in] */ REFIID riid,
            /* [in] */ IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *AddStorage )( 
            IDynamicStorage * This,
            /* [in] */ IStorage *pStorage);
        
        HRESULT ( STDMETHODCALLTYPE *AddStream )( 
            IDynamicStorage * This,
            /* [in] */ IStream *pStream);
        
        HRESULT ( STDMETHODCALLTYPE *AddDataObject )( 
            IDynamicStorage * This,
            /* [in] */ LPDATAOBJECT pdtobj);
        
        END_INTERFACE
    } IDynamicStorageVtbl;

    interface IDynamicStorage
    {
        CONST_VTBL struct IDynamicStorageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDynamicStorage_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDynamicStorage_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDynamicStorage_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDynamicStorage_AddIDList(This,cpidl,rgpidl)	\
    (This)->lpVtbl -> AddIDList(This,cpidl,rgpidl)

#define IDynamicStorage_AddUnknown(This,riid,pUnknown)	\
    (This)->lpVtbl -> AddUnknown(This,riid,pUnknown)

#define IDynamicStorage_AddStorage(This,pStorage)	\
    (This)->lpVtbl -> AddStorage(This,pStorage)

#define IDynamicStorage_AddStream(This,pStream)	\
    (This)->lpVtbl -> AddStream(This,pStream)

#define IDynamicStorage_AddDataObject(This,pdtobj)	\
    (This)->lpVtbl -> AddDataObject(This,pdtobj)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDynamicStorage_AddIDList_Proxy( 
    IDynamicStorage * This,
    /* [in] */ DWORD cpidl,
    /* [size_is][in] */ LPITEMIDLIST *rgpidl);


void __RPC_STUB IDynamicStorage_AddIDList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDynamicStorage_AddUnknown_Proxy( 
    IDynamicStorage * This,
    /* [in] */ REFIID riid,
    /* [in] */ IUnknown *pUnknown);


void __RPC_STUB IDynamicStorage_AddUnknown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDynamicStorage_AddStorage_Proxy( 
    IDynamicStorage * This,
    /* [in] */ IStorage *pStorage);


void __RPC_STUB IDynamicStorage_AddStorage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDynamicStorage_AddStream_Proxy( 
    IDynamicStorage * This,
    /* [in] */ IStream *pStream);


void __RPC_STUB IDynamicStorage_AddStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDynamicStorage_AddDataObject_Proxy( 
    IDynamicStorage * This,
    /* [in] */ LPDATAOBJECT pdtobj);


void __RPC_STUB IDynamicStorage_AddDataObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDynamicStorage_INTERFACE_DEFINED__ */


#ifndef __IQueryContinue_INTERFACE_DEFINED__
#define __IQueryContinue_INTERFACE_DEFINED__

/* interface IQueryContinue */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IQueryContinue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7307055c-b24a-486b-9f25-163e597a28a9")
    IQueryContinue : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE QueryContinue( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IQueryContinueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IQueryContinue * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IQueryContinue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IQueryContinue * This);
        
        HRESULT ( STDMETHODCALLTYPE *QueryContinue )( 
            IQueryContinue * This);
        
        END_INTERFACE
    } IQueryContinueVtbl;

    interface IQueryContinue
    {
        CONST_VTBL struct IQueryContinueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IQueryContinue_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IQueryContinue_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IQueryContinue_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IQueryContinue_QueryContinue(This)	\
    (This)->lpVtbl -> QueryContinue(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IQueryContinue_QueryContinue_Proxy( 
    IQueryContinue * This);


void __RPC_STUB IQueryContinue_QueryContinue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IQueryContinue_INTERFACE_DEFINED__ */


#ifndef __IUserNotification_INTERFACE_DEFINED__
#define __IUserNotification_INTERFACE_DEFINED__

/* interface IUserNotification */
/* [unique][object][uuid] */ 


EXTERN_C const IID IID_IUserNotification;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("70f9d15e-6e45-45e7-aaff-836f0343485f")
    IUserNotification : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetBalloonInfo( 
            /* [in] */ LPCWSTR pszTitle,
            /* [in] */ LPCWSTR pszText,
            /* [in] */ DWORD dwInfoFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBalloonRetry( 
            /* [in] */ DWORD dwShowTime,
            /* [in] */ DWORD dwInterval,
            /* [in] */ UINT cRetryCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIconInfo( 
            /* [in] */ HICON hIcon,
            /* [in] */ LPCWSTR pszToolTip) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Show( 
            /* [in] */ IQueryContinue *pqc,
            /* [in] */ DWORD dwContinuePollInterval) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IUserNotificationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IUserNotification * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IUserNotification * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IUserNotification * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetBalloonInfo )( 
            IUserNotification * This,
            /* [in] */ LPCWSTR pszTitle,
            /* [in] */ LPCWSTR pszText,
            /* [in] */ DWORD dwInfoFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetBalloonRetry )( 
            IUserNotification * This,
            /* [in] */ DWORD dwShowTime,
            /* [in] */ DWORD dwInterval,
            /* [in] */ UINT cRetryCount);
        
        HRESULT ( STDMETHODCALLTYPE *SetIconInfo )( 
            IUserNotification * This,
            /* [in] */ HICON hIcon,
            /* [in] */ LPCWSTR pszToolTip);
        
        HRESULT ( STDMETHODCALLTYPE *Show )( 
            IUserNotification * This,
            /* [in] */ IQueryContinue *pqc,
            /* [in] */ DWORD dwContinuePollInterval);
        
        END_INTERFACE
    } IUserNotificationVtbl;

    interface IUserNotification
    {
        CONST_VTBL struct IUserNotificationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IUserNotification_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IUserNotification_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IUserNotification_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IUserNotification_SetBalloonInfo(This,pszTitle,pszText,dwInfoFlags)	\
    (This)->lpVtbl -> SetBalloonInfo(This,pszTitle,pszText,dwInfoFlags)

#define IUserNotification_SetBalloonRetry(This,dwShowTime,dwInterval,cRetryCount)	\
    (This)->lpVtbl -> SetBalloonRetry(This,dwShowTime,dwInterval,cRetryCount)

#define IUserNotification_SetIconInfo(This,hIcon,pszToolTip)	\
    (This)->lpVtbl -> SetIconInfo(This,hIcon,pszToolTip)

#define IUserNotification_Show(This,pqc,dwContinuePollInterval)	\
    (This)->lpVtbl -> Show(This,pqc,dwContinuePollInterval)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IUserNotification_SetBalloonInfo_Proxy( 
    IUserNotification * This,
    /* [in] */ LPCWSTR pszTitle,
    /* [in] */ LPCWSTR pszText,
    /* [in] */ DWORD dwInfoFlags);


void __RPC_STUB IUserNotification_SetBalloonInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IUserNotification_SetBalloonRetry_Proxy( 
    IUserNotification * This,
    /* [in] */ DWORD dwShowTime,
    /* [in] */ DWORD dwInterval,
    /* [in] */ UINT cRetryCount);


void __RPC_STUB IUserNotification_SetBalloonRetry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IUserNotification_SetIconInfo_Proxy( 
    IUserNotification * This,
    /* [in] */ HICON hIcon,
    /* [in] */ LPCWSTR pszToolTip);


void __RPC_STUB IUserNotification_SetIconInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IUserNotification_Show_Proxy( 
    IUserNotification * This,
    /* [in] */ IQueryContinue *pqc,
    /* [in] */ DWORD dwContinuePollInterval);


void __RPC_STUB IUserNotification_Show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IUserNotification_INTERFACE_DEFINED__ */


#ifndef __IDockingWindow_INTERFACE_DEFINED__
#define __IDockingWindow_INTERFACE_DEFINED__

/* interface IDockingWindow */
/* [object][uuid] */ 


EXTERN_C const IID IID_IDockingWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("012dd920-7b26-11d0-8ca9-00a0c92dbfe8")
    IDockingWindow : public IOleWindow
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ShowDW( 
            /* [in] */ BOOL fShow) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseDW( 
            /* [in] */ DWORD dwReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResizeBorderDW( 
            /* [in] */ LPCRECT prcBorder,
            /* [in] */ IUnknown *punkToolbarSite,
            /* [in] */ BOOL fReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDockingWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDockingWindow * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDockingWindow * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDockingWindow * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE *GetWindow )( 
            IDockingWindow * This,
            /* [out] */ HWND *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE *ContextSensitiveHelp )( 
            IDockingWindow * This,
            /* [in] */ BOOL fEnterMode);
        
        HRESULT ( STDMETHODCALLTYPE *ShowDW )( 
            IDockingWindow * This,
            /* [in] */ BOOL fShow);
        
        HRESULT ( STDMETHODCALLTYPE *CloseDW )( 
            IDockingWindow * This,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE *ResizeBorderDW )( 
            IDockingWindow * This,
            /* [in] */ LPCRECT prcBorder,
            /* [in] */ IUnknown *punkToolbarSite,
            /* [in] */ BOOL fReserved);
        
        END_INTERFACE
    } IDockingWindowVtbl;

    interface IDockingWindow
    {
        CONST_VTBL struct IDockingWindowVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDockingWindow_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDockingWindow_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDockingWindow_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDockingWindow_GetWindow(This,phwnd)	\
    (This)->lpVtbl -> GetWindow(This,phwnd)

#define IDockingWindow_ContextSensitiveHelp(This,fEnterMode)	\
    (This)->lpVtbl -> ContextSensitiveHelp(This,fEnterMode)


#define IDockingWindow_ShowDW(This,fShow)	\
    (This)->lpVtbl -> ShowDW(This,fShow)

#define IDockingWindow_CloseDW(This,dwReserved)	\
    (This)->lpVtbl -> CloseDW(This,dwReserved)

#define IDockingWindow_ResizeBorderDW(This,prcBorder,punkToolbarSite,fReserved)	\
    (This)->lpVtbl -> ResizeBorderDW(This,prcBorder,punkToolbarSite,fReserved)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDockingWindow_ShowDW_Proxy( 
    IDockingWindow * This,
    /* [in] */ BOOL fShow);


void __RPC_STUB IDockingWindow_ShowDW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDockingWindow_CloseDW_Proxy( 
    IDockingWindow * This,
    /* [in] */ DWORD dwReserved);


void __RPC_STUB IDockingWindow_CloseDW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDockingWindow_ResizeBorderDW_Proxy( 
    IDockingWindow * This,
    /* [in] */ LPCRECT prcBorder,
    /* [in] */ IUnknown *punkToolbarSite,
    /* [in] */ BOOL fReserved);


void __RPC_STUB IDockingWindow_ResizeBorderDW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDockingWindow_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shobjidl_0177 */
/* [local] */ 

#define DBIM_MINSIZE    0x0001
#define DBIM_MAXSIZE    0x0002
#define DBIM_INTEGRAL   0x0004
#define DBIM_ACTUAL     0x0008
#define DBIM_TITLE      0x0010
#define DBIM_MODEFLAGS  0x0020
#define DBIM_BKCOLOR    0x0040
#include <pshpack8.h>
typedef /* [public][public] */ struct __MIDL___MIDL_itf_shobjidl_0177_0001
    {
    DWORD dwMask;
    POINTL ptMinSize;
    POINTL ptMaxSize;
    POINTL ptIntegral;
    POINTL ptActual;
    WCHAR wszTitle[ 256 ];
    DWORD dwModeFlags;
    COLORREF crBkgnd;
    } 	DESKBANDINFO;

#include <poppack.h>
#define DBIMF_NORMAL            0x0000
#define DBIMF_FIXED             0x0001
#define DBIMF_FIXEDBMP          0x0004   // a fixed background bitmap (if supported)
#define DBIMF_VARIABLEHEIGHT    0x0008
#define DBIMF_UNDELETEABLE      0x0010
#define DBIMF_DEBOSSED          0x0020
#define DBIMF_BKCOLOR           0x0040
#define DBIMF_USECHEVRON        0x0080
#define DBIMF_BREAK             0x0100
#define DBIF_VIEWMODE_NORMAL         0x0000
#define DBIF_VIEWMODE_VERTICAL       0x0001
#define DBIF_VIEWMODE_FLOATING       0x0002
#define DBIF_VIEWMODE_TRANSPARENT    0x0004

enum __MIDL___MIDL_itf_shobjidl_0177_0002
    {	DBID_BANDINFOCHANGED	= 0,
	DBID_SHOWONLY	= 1,
	DBID_MAXIMIZEBAND	= 2,
	DBID_PUSHCHEVRON	= 3,
	DBID_DELAYINIT	= 4,
	DBID_FINISHINIT	= 5,
	DBID_SETWINDOWTHEME	= 6
    } ;
#define DBPC_SELECTFIRST    (DWORD)-1
#define DBPC_SELECTLAST     (DWORD)-2
#define CGID_DeskBand IID_IDeskBand


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0177_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0177_v0_0_s_ifspec;

#ifndef __IDeskBand_INTERFACE_DEFINED__
#define __IDeskBand_INTERFACE_DEFINED__

/* interface IDeskBand */
/* [object][uuid] */ 


EXTERN_C const IID IID_IDeskBand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EB0FE172-1A3A-11D0-89B3-00A0C90A90AC")
    IDeskBand : public IDockingWindow
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetBandInfo( 
            /* [in] */ DWORD dwBandID,
            /* [in] */ DWORD dwViewMode,
            /* [out][in] */ DESKBANDINFO *pdbi) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDeskBandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDeskBand * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDeskBand * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDeskBand * This);
        
        /* [input_sync] */ HRESULT ( STDMETHODCALLTYPE *GetWindow )( 
            IDeskBand * This,
            /* [out] */ HWND *phwnd);
        
        HRESULT ( STDMETHODCALLTYPE *ContextSensitiveHelp )( 
            IDeskBand * This,
            /* [in] */ BOOL fEnterMode);
        
        HRESULT ( STDMETHODCALLTYPE *ShowDW )( 
            IDeskBand * This,
            /* [in] */ BOOL fShow);
        
        HRESULT ( STDMETHODCALLTYPE *CloseDW )( 
            IDeskBand * This,
            /* [in] */ DWORD dwReserved);
        
        HRESULT ( STDMETHODCALLTYPE *ResizeBorderDW )( 
            IDeskBand * This,
            /* [in] */ LPCRECT prcBorder,
            /* [in] */ IUnknown *punkToolbarSite,
            /* [in] */ BOOL fReserved);
        
        HRESULT ( STDMETHODCALLTYPE *GetBandInfo )( 
            IDeskBand * This,
            /* [in] */ DWORD dwBandID,
            /* [in] */ DWORD dwViewMode,
            /* [out][in] */ DESKBANDINFO *pdbi);
        
        END_INTERFACE
    } IDeskBandVtbl;

    interface IDeskBand
    {
        CONST_VTBL struct IDeskBandVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDeskBand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IDeskBand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IDeskBand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IDeskBand_GetWindow(This,phwnd)	\
    (This)->lpVtbl -> GetWindow(This,phwnd)

#define IDeskBand_ContextSensitiveHelp(This,fEnterMode)	\
    (This)->lpVtbl -> ContextSensitiveHelp(This,fEnterMode)


#define IDeskBand_ShowDW(This,fShow)	\
    (This)->lpVtbl -> ShowDW(This,fShow)

#define IDeskBand_CloseDW(This,dwReserved)	\
    (This)->lpVtbl -> CloseDW(This,dwReserved)

#define IDeskBand_ResizeBorderDW(This,prcBorder,punkToolbarSite,fReserved)	\
    (This)->lpVtbl -> ResizeBorderDW(This,prcBorder,punkToolbarSite,fReserved)


#define IDeskBand_GetBandInfo(This,dwBandID,dwViewMode,pdbi)	\
    (This)->lpVtbl -> GetBandInfo(This,dwBandID,dwViewMode,pdbi)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IDeskBand_GetBandInfo_Proxy( 
    IDeskBand * This,
    /* [in] */ DWORD dwBandID,
    /* [in] */ DWORD dwViewMode,
    /* [out][in] */ DESKBANDINFO *pdbi);


void __RPC_STUB IDeskBand_GetBandInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDeskBand_INTERFACE_DEFINED__ */



#ifndef __ShellObjects_LIBRARY_DEFINED__
#define __ShellObjects_LIBRARY_DEFINED__

/* library ShellObjects */
/* [version][lcid][helpstring][uuid] */ 


EXTERN_C const IID LIBID_ShellObjects;

EXTERN_C const CLSID CLSID_DriveSizeCategorizer;

#ifdef __cplusplus

class DECLSPEC_UUID("94357B53-CA29-4b78-83AE-E8FE7409134F")
DriveSizeCategorizer;
#endif

EXTERN_C const CLSID CLSID_DriveTypeCategorizer;

#ifdef __cplusplus

class DECLSPEC_UUID("B0A8F3CF-4333-4bab-8873-1CCB1CADA48B")
DriveTypeCategorizer;
#endif

EXTERN_C const CLSID CLSID_FreeSpaceCategorizer;

#ifdef __cplusplus

class DECLSPEC_UUID("B5607793-24AC-44c7-82E2-831726AA6CB7")
FreeSpaceCategorizer;
#endif

EXTERN_C const CLSID CLSID_TimeCategorizer;

#ifdef __cplusplus

class DECLSPEC_UUID("3bb4118f-ddfd-4d30-a348-9fb5d6bf1afe")
TimeCategorizer;
#endif

EXTERN_C const CLSID CLSID_SizeCategorizer;

#ifdef __cplusplus

class DECLSPEC_UUID("55d7b852-f6d1-42f2-aa75-8728a1b2d264")
SizeCategorizer;
#endif

EXTERN_C const CLSID CLSID_AlphabeticalCategorizer;

#ifdef __cplusplus

class DECLSPEC_UUID("3c2654c6-7372-4f6b-b310-55d6128f49d2")
AlphabeticalCategorizer;
#endif

EXTERN_C const CLSID CLSID_CompositeFolder;

#ifdef __cplusplus

class DECLSPEC_UUID("FEF10DED-355E-4e06-9381-9B24D7F7CC88")
CompositeFolder;
#endif

EXTERN_C const CLSID CLSID_LocalCopyHelper;

#ifdef __cplusplus

class DECLSPEC_UUID("021003e9-aac0-4975-979f-14b5d4e717f8")
LocalCopyHelper;
#endif

EXTERN_C const CLSID CLSID_ShellItem;

#ifdef __cplusplus

class DECLSPEC_UUID("9ac9fbe1-e0a2-4ad6-b4ee-e212013ea917")
ShellItem;
#endif

EXTERN_C const CLSID CLSID_ImageProperties;

#ifdef __cplusplus

class DECLSPEC_UUID("7ab770c7-0e23-4d7a-8aa2-19bfad479829")
ImageProperties;
#endif

EXTERN_C const CLSID CLSID_PropertiesUI;

#ifdef __cplusplus

class DECLSPEC_UUID("d912f8cf-0396-4915-884e-fb425d32943b")
PropertiesUI;
#endif

EXTERN_C const CLSID CLSID_UserNotification;

#ifdef __cplusplus

class DECLSPEC_UUID("0010890e-8789-413c-adbc-48f5b511b3af")
UserNotification;
#endif
#endif /* __ShellObjects_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_shobjidl_0178 */
/* [local] */ 


extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0178_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shobjidl_0178_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  HGLOBAL_UserSize(     unsigned long *, unsigned long            , HGLOBAL * ); 
unsigned char * __RPC_USER  HGLOBAL_UserMarshal(  unsigned long *, unsigned char *, HGLOBAL * ); 
unsigned char * __RPC_USER  HGLOBAL_UserUnmarshal(unsigned long *, unsigned char *, HGLOBAL * ); 
void                      __RPC_USER  HGLOBAL_UserFree(     unsigned long *, HGLOBAL * ); 

unsigned long             __RPC_USER  HICON_UserSize(     unsigned long *, unsigned long            , HICON * ); 
unsigned char * __RPC_USER  HICON_UserMarshal(  unsigned long *, unsigned char *, HICON * ); 
unsigned char * __RPC_USER  HICON_UserUnmarshal(unsigned long *, unsigned char *, HICON * ); 
void                      __RPC_USER  HICON_UserFree(     unsigned long *, HICON * ); 

unsigned long             __RPC_USER  HMENU_UserSize(     unsigned long *, unsigned long            , HMENU * ); 
unsigned char * __RPC_USER  HMENU_UserMarshal(  unsigned long *, unsigned char *, HMENU * ); 
unsigned char * __RPC_USER  HMENU_UserUnmarshal(unsigned long *, unsigned char *, HMENU * ); 
void                      __RPC_USER  HMENU_UserFree(     unsigned long *, HMENU * ); 

unsigned long             __RPC_USER  HWND_UserSize(     unsigned long *, unsigned long            , HWND * ); 
unsigned char * __RPC_USER  HWND_UserMarshal(  unsigned long *, unsigned char *, HWND * ); 
unsigned char * __RPC_USER  HWND_UserUnmarshal(unsigned long *, unsigned char *, HWND * ); 
void                      __RPC_USER  HWND_UserFree(     unsigned long *, HWND * ); 

unsigned long             __RPC_USER  LPCITEMIDLIST_UserSize(     unsigned long *, unsigned long            , LPCITEMIDLIST * ); 
unsigned char * __RPC_USER  LPCITEMIDLIST_UserMarshal(  unsigned long *, unsigned char *, LPCITEMIDLIST * ); 
unsigned char * __RPC_USER  LPCITEMIDLIST_UserUnmarshal(unsigned long *, unsigned char *, LPCITEMIDLIST * ); 
void                      __RPC_USER  LPCITEMIDLIST_UserFree(     unsigned long *, LPCITEMIDLIST * ); 

unsigned long             __RPC_USER  LPITEMIDLIST_UserSize(     unsigned long *, unsigned long            , LPITEMIDLIST * ); 
unsigned char * __RPC_USER  LPITEMIDLIST_UserMarshal(  unsigned long *, unsigned char *, LPITEMIDLIST * ); 
unsigned char * __RPC_USER  LPITEMIDLIST_UserUnmarshal(unsigned long *, unsigned char *, LPITEMIDLIST * ); 
void                      __RPC_USER  LPITEMIDLIST_UserFree(     unsigned long *, LPITEMIDLIST * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long *, unsigned long            , VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  unsigned long *, unsigned char *, VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(unsigned long *, unsigned char *, VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long *, VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\smpab.h ===
/*
 *  S M P A B . H
 *  
 *  Definitions used by the Microsoft Sample Address Book
 *  provider for service entry calls
 *  
 *  Copyright 1993-1999 Microsoft Corporation. All Rights Reserved.
 */

/*
 *  Property tag definitions
 */

/*      The following MAPI-defined properties are settable in service entry */
/*      calls:                                                              */
/*                                                                          */
/*          PR_SAB_FILE_NAME                                                */
/*          PR_SAB_UID                                                      */

#define PR_SAB_FILE PROP_TAG(PT_STRING8,0x6604)
#define PR_SAB_UID  PROP_TAG(PT_BINARY,0x6601)

/*
 *  PR_SAB_FILE_NAME is the full path name of the .SAB file (e.g. c:\foo\mylist.sab).
 *                   This string must be ANSI.
 *
 *  PR_SAB_UID is the UID uniquely identifying this session of the SAB.  If you have
 *             multiple SABs configured, they must have different PR_SAB_UIDs.
 */

/*
 *  The Sample Address Book's PR_AB_PROVIDER_ID
 */
#define SAB_PROVIDER_ID {0x34,0xda,0x7e,0x60,0x03,0x1b,0x11,0xce,0x95,0x74,0x00,0xaa,0x00,0x3c,0xd2,0x07}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\smpms.h ===
/*
 *  S M P M S . H
 *
 *  Definitions used by the Microsoft Sample Message Store Provider
 *  for service entry calls.
 *
 *  The following MAPI-defined properties are settable in service
 *  entry calls for the Sample Message Store Provider.
 *  
 *  Copyright 1993-1999 Microsoft Corporation. All Rights Reserved.
 */

#ifndef _SMPMS_H_
#define _SMPMS_H_

#define SMS_EXTERN_PROPID_BASE  0x6700      /* From MAPITAGS.H comments */

#define PR_SMS_PATH         PROP_TAG(PT_STRING8, SMS_EXTERN_PROPID_BASE + 0)
#define PR_SMS_PASSWORD     PROP_TAG(PT_STRING8, SMS_EXTERN_PROPID_BASE + 1)
#define PR_SMS_REMEMBER_PW  PROP_TAG(PT_BOOLEAN, SMS_EXTERN_PROPID_BASE + 2)
#define PR_SMS_CREATE       PROP_TAG(PT_BOOLEAN, SMS_EXTERN_PROPID_BASE + 3)


/* 
 *  The following is a description of each of the Sample Message Store
 *  Provider properties:
 *
 *  PR_SMS_PATH
 *      The full pathname to the root directory of the sample message store.
 *
 *  PR_SMS_PASSWORD
 *      The password needed to open the store (if already present), or the
 *      new password (if creating the store).
 *
 *  PR_SMS_REMEMBER_PW
 *      If non-zero (TRUE), this property asks the service entry to save the
 *      password in the profile, and to not prompt for it.
 *
 *  PR_SMS_CREATE
 *      If non-zero (TRUE), this property asks the service entry to create the
 *      sample store. Otherwise, the service entry will attempt to open an
 *      existing store.
 */

/*
 *  PR_MDB_PROVIDER is the GUID that represent the Sample Message Store
 *  Provider.  This guid is available as a property in the stores
 *  table and on the message store object.
 */
#define SMPMS_UID_PROVIDER      \
    {   0x38, 0x5d, 0x47, 0x5f, \
        0xec, 0xf1, 0xcd, 0x11, \
        0x93, 0xdc, 0x5a, 0xab, \
        0x3C, 0x47, 0x84, 0x37 }

#endif  /* _SMPMS_H_ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\shlwapi.h ===
/*****************************************************************************\
*                                                                             *
* shlwapi.h - Interface for the Windows light-weight utility APIs             *
*                                                                             *
* Version 1.0                                                                 *
*                                                                             *
* Copyright (c) 1991-1998, Microsoft Corp.      All rights reserved.          *
*                                                                             *
\*****************************************************************************/


#ifndef _INC_SHLWAPI
#define _INC_SHLWAPI

#ifndef NOSHLWAPI

#include <objbase.h>
#include <shtypes.h>


#ifndef _WINRESRC_
#ifndef _WIN32_IE
#define _WIN32_IE 0x0501
#else
#if (_WIN32_IE < 0x0400) && defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0500)
#error _WIN32_IE setting conflicts with _WIN32_WINNT setting
#endif
#endif
#endif


#ifdef UNIX
typedef interface IInternetSecurityMgrSite IInternetSecurityMgrSite;
typedef interface IInternetSecurityManager IInternetSecurityManager;
typedef interface IInternetHostSecurityManager IInternetHostSecurityManager;
#endif

//
// Define API decoration for direct importing of DLL references.
//
#ifndef WINSHLWAPI
#if !defined(_SHLWAPI_)
#define LWSTDAPI          EXTERN_C DECLSPEC_IMPORT HRESULT STDAPICALLTYPE
#define LWSTDAPI_(type)   EXTERN_C DECLSPEC_IMPORT type STDAPICALLTYPE
#define LWSTDAPIV         EXTERN_C DECLSPEC_IMPORT HRESULT STDAPIVCALLTYPE
#define LWSTDAPIV_(type)  EXTERN_C DECLSPEC_IMPORT type STDAPIVCALLTYPE
#else
#define LWSTDAPI          STDAPI
#define LWSTDAPI_(type)   STDAPI_(type)
#define LWSTDAPIV         STDAPIV
#define LWSTDAPIV_(type)  STDAPIV_(type)
#endif
#endif // WINSHLWAPI

#ifdef _WIN32
#include <pshpack8.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

//
// Users of this header may define any number of these constants to avoid
// the definitions of each functional group.
//
//    NO_SHLWAPI_STRFCNS    String functions
//    NO_SHLWAPI_PATH       Path functions
//    NO_SHLWAPI_REG        Registry functions
//    NO_SHLWAPI_STREAM     Stream functions
//    NO_SHLWAPI_GDI        GDI helper functions

#ifndef NO_SHLWAPI_STRFCNS
//
//=============== String Routines ===================================
//

LWSTDAPI_(LPSTR)    StrChrA(LPCSTR lpStart, WORD wMatch);
LWSTDAPI_(LPWSTR)   StrChrW(LPCWSTR lpStart, WCHAR wMatch);
LWSTDAPI_(LPSTR)    StrChrIA(LPCSTR lpStart, WORD wMatch);
LWSTDAPI_(LPWSTR)   StrChrIW(LPCWSTR lpStart, WCHAR wMatch);
LWSTDAPI_(int)      StrCmpNA(LPCSTR lpStr1, LPCSTR lpStr2, int nChar);
LWSTDAPI_(int)      StrCmpNW(LPCWSTR lpStr1, LPCWSTR lpStr2, int nChar);
LWSTDAPI_(int)      StrCmpNIA(LPCSTR lpStr1, LPCSTR lpStr2, int nChar);
LWSTDAPI_(int)      StrCmpNIW(LPCWSTR lpStr1, LPCWSTR lpStr2, int nChar);
LWSTDAPI_(int)      StrCSpnA(LPCSTR lpStr, LPCSTR lpSet);
LWSTDAPI_(int)      StrCSpnW(LPCWSTR lpStr, LPCWSTR lpSet);
LWSTDAPI_(int)      StrCSpnIA(LPCSTR lpStr, LPCSTR lpSet);
LWSTDAPI_(int)      StrCSpnIW(LPCWSTR lpStr, LPCWSTR lpSet);
LWSTDAPI_(LPSTR)    StrDupA(LPCSTR lpSrch);
LWSTDAPI_(LPWSTR)   StrDupW(LPCWSTR lpSrch);
LWSTDAPI_(LPSTR)    StrFormatByteSizeA(DWORD dw, LPSTR szBuf, UINT uiBufSize);
LWSTDAPI_(LPSTR)    StrFormatByteSize64A(LONGLONG qdw, LPSTR szBuf, UINT uiBufSize);
LWSTDAPI_(LPWSTR)   StrFormatByteSizeW(LONGLONG qdw, LPWSTR szBuf, UINT uiBufSize);
LWSTDAPI_(LPWSTR)   StrFormatKBSizeW(LONGLONG qdw, LPWSTR szBuf, UINT uiBufSize);
LWSTDAPI_(LPSTR)    StrFormatKBSizeA(LONGLONG qdw, LPSTR szBuf, UINT uiBufSize);
LWSTDAPI_(int)      StrFromTimeIntervalA(LPSTR pszOut, UINT cchMax, DWORD dwTimeMS, int digits);
LWSTDAPI_(int)      StrFromTimeIntervalW(LPWSTR pszOut, UINT cchMax, DWORD dwTimeMS, int digits);
LWSTDAPI_(BOOL)     StrIsIntlEqualA(BOOL fCaseSens, LPCSTR lpString1, LPCSTR lpString2, int nChar);
LWSTDAPI_(BOOL)     StrIsIntlEqualW(BOOL fCaseSens, LPCWSTR lpString1, LPCWSTR lpString2, int nChar);
LWSTDAPI_(LPSTR)    StrNCatA(LPSTR psz1, LPCSTR psz2, int cchMax);
LWSTDAPI_(LPWSTR)   StrNCatW(LPWSTR psz1, LPCWSTR psz2, int cchMax);
LWSTDAPI_(LPSTR)    StrPBrkA(LPCSTR psz, LPCSTR pszSet);
LWSTDAPI_(LPWSTR)   StrPBrkW(LPCWSTR psz, LPCWSTR pszSet);
LWSTDAPI_(LPSTR)    StrRChrA(LPCSTR lpStart, LPCSTR lpEnd, WORD wMatch);
LWSTDAPI_(LPWSTR)   StrRChrW(LPCWSTR lpStart, LPCWSTR lpEnd, WCHAR wMatch);
LWSTDAPI_(LPSTR)    StrRChrIA(LPCSTR lpStart, LPCSTR lpEnd, WORD wMatch);
LWSTDAPI_(LPWSTR)   StrRChrIW(LPCWSTR lpStart, LPCWSTR lpEnd, WCHAR wMatch);
LWSTDAPI_(LPSTR)    StrRStrIA(LPCSTR lpSource, LPCSTR lpLast, LPCSTR lpSrch);
LWSTDAPI_(LPWSTR)   StrRStrIW(LPCWSTR lpSource, LPCWSTR lpLast, LPCWSTR lpSrch);
LWSTDAPI_(int)      StrSpnA(LPCSTR psz, LPCSTR pszSet);
LWSTDAPI_(int)      StrSpnW(LPCWSTR psz, LPCWSTR pszSet);
LWSTDAPI_(LPSTR)    StrStrA(LPCSTR lpFirst, LPCSTR lpSrch);
LWSTDAPI_(LPWSTR)   StrStrW(LPCWSTR lpFirst, LPCWSTR lpSrch);
LWSTDAPI_(LPSTR)    StrStrIA(LPCSTR lpFirst, LPCSTR lpSrch);
LWSTDAPI_(LPWSTR)   StrStrIW(LPCWSTR lpFirst, LPCWSTR lpSrch);
LWSTDAPI_(int)      StrToIntA(LPCSTR lpSrc);
LWSTDAPI_(int)      StrToIntW(LPCWSTR lpSrc);
LWSTDAPI_(BOOL)     StrToIntExA(LPCSTR pszString, DWORD dwFlags, int * piRet);
LWSTDAPI_(BOOL)     StrToIntExW(LPCWSTR pszString, DWORD dwFlags, int * piRet);
#if (_WIN32_IE >= 0x0560)
LWSTDAPI_(BOOL)     StrToInt64ExA(LPCSTR pszString, DWORD dwFlags, LONGLONG * pllRet);
LWSTDAPI_(BOOL)     StrToInt64ExW(LPCWSTR pszString, DWORD dwFlags, LONGLONG * pllRet);
#endif
LWSTDAPI_(BOOL)     StrTrimA(LPSTR psz, LPCSTR pszTrimChars);
LWSTDAPI_(BOOL)     StrTrimW(LPWSTR psz, LPCWSTR pszTrimChars);

LWSTDAPI_(LPWSTR)   StrCatW(LPWSTR psz1, LPCWSTR psz2);
LWSTDAPI_(int)      StrCmpW(LPCWSTR psz1, LPCWSTR psz2);
LWSTDAPI_(int)      StrCmpIW(LPCWSTR psz1, LPCWSTR psz2);
LWSTDAPI_(LPWSTR)   StrCpyW(LPWSTR psz1, LPCWSTR psz2);
LWSTDAPI_(LPWSTR)   StrCpyNW(LPWSTR psz1, LPCWSTR psz2, int cchMax);

LWSTDAPI_(LPWSTR)   StrCatBuffW(LPWSTR pszDest, LPCWSTR pszSrc, int cchDestBuffSize);
LWSTDAPI_(LPSTR)    StrCatBuffA(LPSTR pszDest, LPCSTR pszSrc, int cchDestBuffSize);

LWSTDAPI_(BOOL)     ChrCmpIA(WORD w1, WORD w2);
LWSTDAPI_(BOOL)     ChrCmpIW(WCHAR w1, WCHAR w2);

LWSTDAPI_(int)      wvnsprintfA(LPSTR lpOut, int cchLimitIn, LPCSTR lpFmt, va_list arglist);
LWSTDAPI_(int)      wvnsprintfW(LPWSTR lpOut, int cchLimitIn, LPCWSTR lpFmt, va_list arglist);
LWSTDAPIV_(int)     wnsprintfA(LPSTR lpOut, int cchLimitIn, LPCSTR lpFmt, ...);
LWSTDAPIV_(int)     wnsprintfW(LPWSTR lpOut, int cchLimitIn, LPCWSTR lpFmt, ...);

#define StrIntlEqNA( s1, s2, nChar) StrIsIntlEqualA( TRUE, s1, s2, nChar)
#define StrIntlEqNW( s1, s2, nChar) StrIsIntlEqualW( TRUE, s1, s2, nChar)
#define StrIntlEqNIA(s1, s2, nChar) StrIsIntlEqualA(FALSE, s1, s2, nChar)
#define StrIntlEqNIW(s1, s2, nChar) StrIsIntlEqualW(FALSE, s1, s2, nChar)

LWSTDAPI StrRetToStrA(STRRET *pstr, LPCITEMIDLIST pidl, LPSTR *ppsz);
LWSTDAPI StrRetToStrW(STRRET *pstr, LPCITEMIDLIST pidl, LPWSTR *ppsz);
#ifdef UNICODE
#define StrRetToStr  StrRetToStrW
#else
#define StrRetToStr  StrRetToStrA
#endif // !UNICODE
LWSTDAPI StrRetToBufA(STRRET *pstr, LPCITEMIDLIST pidl, LPSTR pszBuf, UINT cchBuf);
LWSTDAPI StrRetToBufW(STRRET *pstr, LPCITEMIDLIST pidl, LPWSTR pszBuf, UINT cchBuf);
#ifdef UNICODE
#define StrRetToBuf  StrRetToBufW
#else
#define StrRetToBuf  StrRetToBufA
#endif // !UNICODE

// helper to duplicate a string using the task allocator

LWSTDAPI SHStrDupA(LPCSTR psz, WCHAR **ppwsz);
LWSTDAPI SHStrDupW(LPCWSTR psz, WCHAR **ppwsz);
#ifdef UNICODE
#define SHStrDup  SHStrDupW
#else
#define SHStrDup  SHStrDupA
#endif // !UNICODE

STDAPI_(int) StrCmpLogicalW(LPCWSTR psz1, LPCWSTR psz2);
STDAPI_(DWORD) StrCatChainW(LPWSTR pszDst, DWORD cchDst, DWORD ichAt, LPCWSTR pszSrc);


#ifdef UNICODE
#define StrChr                  StrChrW
#define StrRChr                 StrRChrW
#define StrChrI                 StrChrIW
#define StrRChrI                StrRChrIW
#define StrCmpN                 StrCmpNW
#define StrCmpNI                StrCmpNIW
#define StrStr                  StrStrW
#define StrStrI                 StrStrIW
#define StrDup                  StrDupW
#define StrRStrI                StrRStrIW
#define StrCSpn                 StrCSpnW
#define StrCSpnI                StrCSpnIW
#define StrSpn                  StrSpnW
#define StrToInt                StrToIntW
#define StrPBrk                 StrPBrkW
#define StrToIntEx              StrToIntExW
#if (_WIN32_IE >= 0x0560)
#define StrToInt64Ex            StrToInt64ExW
#endif
#define StrFromTimeInterval     StrFromTimeIntervalW
#define StrIntlEqN              StrIntlEqNW
#define StrIntlEqNI             StrIntlEqNIW
#define StrFormatByteSize       StrFormatByteSizeW
#define StrFormatByteSize64     StrFormatByteSizeW
#define StrFormatKBSize         StrFormatKBSizeW
#define StrNCat                 StrNCatW
#define StrTrim                 StrTrimW
#define StrCatBuff              StrCatBuffW
#define ChrCmpI                 ChrCmpIW
#define wvnsprintf              wvnsprintfW
#define wnsprintf               wnsprintfW
#define StrIsIntlEqual          StrIsIntlEqualW


#else
#define StrChr                  StrChrA
#define StrRChr                 StrRChrA
#define StrChrI                 StrChrIA
#define StrRChrI                StrRChrIA
#define StrCmpN                 StrCmpNA
#define StrCmpNI                StrCmpNIA
#define StrStr                  StrStrA
#define StrStrI                 StrStrIA
#define StrDup                  StrDupA
#define StrRStrI                StrRStrIA
#define StrCSpn                 StrCSpnA
#define StrCSpnI                StrCSpnIA
#define StrSpn                  StrSpnA
#define StrToInt                StrToIntA
#define StrPBrk                 StrPBrkA
#define StrToIntEx              StrToIntExA
#if (_WIN32_IE >= 0x0560)
#define StrToInt64Ex            StrToInt64ExA
#endif
#define StrFromTimeInterval     StrFromTimeIntervalA
#define StrIntlEqN              StrIntlEqNA
#define StrIntlEqNI             StrIntlEqNIA
#define StrFormatByteSize       StrFormatByteSizeA
#define StrFormatByteSize64     StrFormatByteSize64A
#define StrFormatKBSize         StrFormatKBSizeA
#define StrNCat                 StrNCatA
#define StrTrim                 StrTrimA
#define StrCatBuff              StrCatBuffA
#define ChrCmpI                 ChrCmpIA
#define wvnsprintf              wvnsprintfA
#define wnsprintf               wnsprintfA
#define StrIsIntlEqual          StrIsIntlEqualA
#endif


// Backward compatible to NT's non-standard naming (strictly
// for comctl32)
//
LWSTDAPI_(BOOL)     IntlStrEqWorkerA(BOOL fCaseSens, LPCSTR lpString1, LPCSTR lpString2, int nChar);
LWSTDAPI_(BOOL)     IntlStrEqWorkerW(BOOL fCaseSens, LPCWSTR lpString1, LPCWSTR lpString2, int nChar);

#define IntlStrEqNA( s1, s2, nChar) IntlStrEqWorkerA( TRUE, s1, s2, nChar)
#define IntlStrEqNW( s1, s2, nChar) IntlStrEqWorkerW( TRUE, s1, s2, nChar)
#define IntlStrEqNIA(s1, s2, nChar) IntlStrEqWorkerA(FALSE, s1, s2, nChar)
#define IntlStrEqNIW(s1, s2, nChar) IntlStrEqWorkerW(FALSE, s1, s2, nChar)

#ifdef UNICODE
#define IntlStrEqN              IntlStrEqNW
#define IntlStrEqNI             IntlStrEqNIW
#else
#define IntlStrEqN              IntlStrEqNA
#define IntlStrEqNI             IntlStrEqNIA
#endif

#define SZ_CONTENTTYPE_HTMLA       "text/html"
#define SZ_CONTENTTYPE_HTMLW       L"text/html"
#define SZ_CONTENTTYPE_CDFA        "application/x-cdf"
#define SZ_CONTENTTYPE_CDFW        L"application/x-cdf"

#ifdef UNICODE
#define SZ_CONTENTTYPE_HTML     SZ_CONTENTTYPE_HTMLW
#define SZ_CONTENTTYPE_CDF      SZ_CONTENTTYPE_CDFW
#else
#define SZ_CONTENTTYPE_HTML     SZ_CONTENTTYPE_HTMLA
#define SZ_CONTENTTYPE_CDF      SZ_CONTENTTYPE_CDFA
#endif

#define PathIsHTMLFileA(pszPath)     PathIsContentTypeA(pszPath, SZ_CONTENTTYPE_HTMLA)
#define PathIsHTMLFileW(pszPath)     PathIsContentTypeW(pszPath, SZ_CONTENTTYPE_HTMLW)

// Flags for StrToIntEx
#define STIF_DEFAULT        0x00000000L
#define STIF_SUPPORT_HEX    0x00000001L


#define StrCatA                 lstrcatA
#define StrCmpA                 lstrcmpA
#define StrCmpIA                lstrcmpiA
#define StrCpyA                 lstrcpyA
#define StrCpyNA                lstrcpynA


#define StrToLong               StrToInt
#define StrNCmp                 StrCmpN
#define StrNCmpI                StrCmpNI
#define StrNCpy                 StrCpyN
#define StrCatN                 StrNCat

#ifdef UNICODE
#define StrCat                  StrCatW
#define StrCmp                  StrCmpW
#define StrCmpI                 StrCmpIW
#define StrCpy                  StrCpyW
#define StrCpyN                 StrCpyNW
#define StrCatBuff              StrCatBuffW
#else
#define StrCat                  lstrcatA
#define StrCmp                  lstrcmpA
#define StrCmpI                 lstrcmpiA
#define StrCpy                  lstrcpyA
#define StrCpyN                 lstrcpynA
#define StrCatBuff              StrCatBuffA
#endif


#endif //  NO_SHLWAPI_STRFCNS


#ifndef NO_SHLWAPI_PATH

//
//=============== Path Routines ===================================
//

LWSTDAPI_(LPSTR)  PathAddBackslashA(LPSTR pszPath);
LWSTDAPI_(LPWSTR)  PathAddBackslashW(LPWSTR pszPath);
#ifdef UNICODE
#define PathAddBackslash  PathAddBackslashW
#else
#define PathAddBackslash  PathAddBackslashA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathAddExtensionA(LPSTR pszPath, LPCSTR pszExt);
LWSTDAPI_(BOOL)     PathAddExtensionW(LPWSTR pszPath, LPCWSTR pszExt);
#ifdef UNICODE
#define PathAddExtension  PathAddExtensionW
#else
#define PathAddExtension  PathAddExtensionA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathAppendA(LPSTR pszPath, LPCSTR pMore);
LWSTDAPI_(BOOL)     PathAppendW(LPWSTR pszPath, LPCWSTR pMore);
LWSTDAPI_(LPSTR)  PathBuildRootA(LPSTR pszRoot, int iDrive);
LWSTDAPI_(LPWSTR)  PathBuildRootW(LPWSTR pszRoot, int iDrive);
#ifdef UNICODE
#define PathBuildRoot  PathBuildRootW
#else
#define PathBuildRoot  PathBuildRootA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathCanonicalizeA(LPSTR pszBuf, LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathCanonicalizeW(LPWSTR pszBuf, LPCWSTR pszPath);
LWSTDAPI_(LPSTR)  PathCombineA(LPSTR pszDest, LPCSTR pszDir, LPCSTR pszFile);
LWSTDAPI_(LPWSTR)  PathCombineW(LPWSTR pszDest, LPCWSTR pszDir, LPCWSTR pszFile);
#ifdef UNICODE
#define PathCombine  PathCombineW
#else
#define PathCombine  PathCombineA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathCompactPathA(HDC hDC, LPSTR pszPath, UINT dx);
LWSTDAPI_(BOOL)     PathCompactPathW(HDC hDC, LPWSTR pszPath, UINT dx);
LWSTDAPI_(BOOL)     PathCompactPathExA(LPSTR pszOut, LPCSTR pszSrc, UINT cchMax, DWORD dwFlags);
LWSTDAPI_(BOOL)     PathCompactPathExW(LPWSTR pszOut, LPCWSTR pszSrc, UINT cchMax, DWORD dwFlags);
LWSTDAPI_(int)      PathCommonPrefixA(LPCSTR pszFile1, LPCSTR pszFile2, LPSTR achPath);
LWSTDAPI_(int)      PathCommonPrefixW(LPCWSTR pszFile1, LPCWSTR pszFile2, LPWSTR achPath);
LWSTDAPI_(BOOL)     PathFileExistsA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathFileExistsW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathFileExists  PathFileExistsW
#else
#define PathFileExists  PathFileExistsA
#endif // !UNICODE
LWSTDAPI_(LPSTR)  PathFindExtensionA(LPCSTR pszPath);
LWSTDAPI_(LPWSTR)  PathFindExtensionW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathFindExtension  PathFindExtensionW
#else
#define PathFindExtension  PathFindExtensionA
#endif // !UNICODE
LWSTDAPI_(LPSTR)  PathFindFileNameA(LPCSTR pszPath);
LWSTDAPI_(LPWSTR)  PathFindFileNameW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathFindFileName  PathFindFileNameW
#else
#define PathFindFileName  PathFindFileNameA
#endif // !UNICODE
LWSTDAPI_(LPSTR)  PathFindNextComponentA(LPCSTR pszPath);
LWSTDAPI_(LPWSTR)  PathFindNextComponentW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathFindNextComponent  PathFindNextComponentW
#else
#define PathFindNextComponent  PathFindNextComponentA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathFindOnPathA(LPSTR pszPath, LPCSTR * ppszOtherDirs);
LWSTDAPI_(BOOL)     PathFindOnPathW(LPWSTR pszPath, LPCWSTR * ppszOtherDirs);
LWSTDAPI_(LPSTR)  PathGetArgsA(LPCSTR pszPath);
LWSTDAPI_(LPWSTR)  PathGetArgsW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathGetArgs  PathGetArgsW
#else
#define PathGetArgs  PathGetArgsA
#endif // !UNICODE
LWSTDAPI_(LPCSTR) PathFindSuffixArrayA(LPCSTR pszPath, const LPCSTR *apszSuffix, int iArraySize);
LWSTDAPI_(LPCWSTR) PathFindSuffixArrayW(LPCWSTR pszPath, const LPCWSTR *apszSuffix, int iArraySize);
#ifdef UNICODE
#define PathFindSuffixArray  PathFindSuffixArrayW
#else
#define PathFindSuffixArray  PathFindSuffixArrayA
#endif // !UNICODE
STDAPI_(BOOL)       PathIsLFNFileSpecA(LPCSTR lpName);
STDAPI_(BOOL)       PathIsLFNFileSpecW(LPCWSTR lpName);
#ifdef UNICODE
#define PathIsLFNFileSpec  PathIsLFNFileSpecW
#else
#define PathIsLFNFileSpec  PathIsLFNFileSpecA
#endif // !UNICODE

LWSTDAPI_(UINT)     PathGetCharTypeA(UCHAR ch);
LWSTDAPI_(UINT)     PathGetCharTypeW(WCHAR ch);

// Return flags for PathGetCharType
#define GCT_INVALID             0x0000
#define GCT_LFNCHAR             0x0001
#define GCT_SHORTCHAR           0x0002
#define GCT_WILD                0x0004
#define GCT_SEPARATOR           0x0008

LWSTDAPI_(int)      PathGetDriveNumberA(LPCSTR pszPath);
LWSTDAPI_(int)      PathGetDriveNumberW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathGetDriveNumber  PathGetDriveNumberW
#else
#define PathGetDriveNumber  PathGetDriveNumberA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsDirectoryA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsDirectoryW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsDirectory  PathIsDirectoryW
#else
#define PathIsDirectory  PathIsDirectoryA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsDirectoryEmptyA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsDirectoryEmptyW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsDirectoryEmpty  PathIsDirectoryEmptyW
#else
#define PathIsDirectoryEmpty  PathIsDirectoryEmptyA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsFileSpecA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsFileSpecW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsFileSpec  PathIsFileSpecW
#else
#define PathIsFileSpec  PathIsFileSpecA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsPrefixA(LPCSTR pszPrefix, LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsPrefixW(LPCWSTR pszPrefix, LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsPrefix  PathIsPrefixW
#else
#define PathIsPrefix  PathIsPrefixA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsRelativeA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsRelativeW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsRelative  PathIsRelativeW
#else
#define PathIsRelative  PathIsRelativeA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsRootA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsRootW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsRoot  PathIsRootW
#else
#define PathIsRoot  PathIsRootA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsSameRootA(LPCSTR pszPath1, LPCSTR pszPath2);
LWSTDAPI_(BOOL)     PathIsSameRootW(LPCWSTR pszPath1, LPCWSTR pszPath2);
#ifdef UNICODE
#define PathIsSameRoot  PathIsSameRootW
#else
#define PathIsSameRoot  PathIsSameRootA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsUNCA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsUNCW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsUNC  PathIsUNCW
#else
#define PathIsUNC  PathIsUNCA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsNetworkPathA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsNetworkPathW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsNetworkPath  PathIsNetworkPathW
#else
#define PathIsNetworkPath  PathIsNetworkPathA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsUNCServerA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsUNCServerW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsUNCServer  PathIsUNCServerW
#else
#define PathIsUNCServer  PathIsUNCServerA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsUNCServerShareA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsUNCServerShareW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsUNCServerShare  PathIsUNCServerShareW
#else
#define PathIsUNCServerShare  PathIsUNCServerShareA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsContentTypeA(LPCSTR pszPath, LPCSTR pszContentType);
LWSTDAPI_(BOOL)     PathIsContentTypeW(LPCWSTR pszPath, LPCWSTR pszContentType);
LWSTDAPI_(BOOL)     PathIsURLA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathIsURLW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathIsURL  PathIsURLW
#else
#define PathIsURL  PathIsURLA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathMakePrettyA(LPSTR pszPath);
LWSTDAPI_(BOOL)     PathMakePrettyW(LPWSTR pszPath);
LWSTDAPI_(BOOL)     PathMatchSpecA(LPCSTR pszFile, LPCSTR pszSpec);
LWSTDAPI_(BOOL)     PathMatchSpecW(LPCWSTR pszFile, LPCWSTR pszSpec);
LWSTDAPI_(int)      PathParseIconLocationA(LPSTR pszIconFile);
LWSTDAPI_(int)      PathParseIconLocationW(LPWSTR pszIconFile);
LWSTDAPI_(void)     PathQuoteSpacesA(LPSTR lpsz);
LWSTDAPI_(void)     PathQuoteSpacesW(LPWSTR lpsz);
LWSTDAPI_(BOOL)     PathRelativePathToA(LPSTR pszPath, LPCSTR pszFrom, DWORD dwAttrFrom, LPCSTR pszTo, DWORD dwAttrTo);
LWSTDAPI_(BOOL)     PathRelativePathToW(LPWSTR pszPath, LPCWSTR pszFrom, DWORD dwAttrFrom, LPCWSTR pszTo, DWORD dwAttrTo);
LWSTDAPI_(void)     PathRemoveArgsA(LPSTR pszPath);
LWSTDAPI_(void)     PathRemoveArgsW(LPWSTR pszPath);
LWSTDAPI_(LPSTR)  PathRemoveBackslashA(LPSTR pszPath);
LWSTDAPI_(LPWSTR)  PathRemoveBackslashW(LPWSTR pszPath);
#ifdef UNICODE
#define PathRemoveBackslash  PathRemoveBackslashW
#else
#define PathRemoveBackslash  PathRemoveBackslashA
#endif // !UNICODE
LWSTDAPI_(void)     PathRemoveBlanksA(LPSTR pszPath);
LWSTDAPI_(void)     PathRemoveBlanksW(LPWSTR pszPath);
LWSTDAPI_(void)     PathRemoveExtensionA(LPSTR pszPath);
LWSTDAPI_(void)     PathRemoveExtensionW(LPWSTR pszPath);
LWSTDAPI_(BOOL)     PathRemoveFileSpecA(LPSTR pszPath);
LWSTDAPI_(BOOL)     PathRemoveFileSpecW(LPWSTR pszPath);
LWSTDAPI_(BOOL)     PathRenameExtensionA(LPSTR pszPath, LPCSTR pszExt);
LWSTDAPI_(BOOL)     PathRenameExtensionW(LPWSTR pszPath, LPCWSTR pszExt);
LWSTDAPI_(BOOL)     PathSearchAndQualifyA(LPCSTR pszPath, LPSTR pszBuf, UINT cchBuf);
LWSTDAPI_(BOOL)     PathSearchAndQualifyW(LPCWSTR pszPath, LPWSTR pszBuf, UINT cchBuf);
LWSTDAPI_(void)     PathSetDlgItemPathA(HWND hDlg, int id, LPCSTR pszPath);
LWSTDAPI_(void)     PathSetDlgItemPathW(HWND hDlg, int id, LPCWSTR pszPath);
LWSTDAPI_(LPSTR)  PathSkipRootA(LPCSTR pszPath);
LWSTDAPI_(LPWSTR)  PathSkipRootW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathSkipRoot  PathSkipRootW
#else
#define PathSkipRoot  PathSkipRootA
#endif // !UNICODE
LWSTDAPI_(void)     PathStripPathA(LPSTR pszPath);
LWSTDAPI_(void)     PathStripPathW(LPWSTR pszPath);
#ifdef UNICODE
#define PathStripPath  PathStripPathW
#else
#define PathStripPath  PathStripPathA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathStripToRootA(LPSTR pszPath);
LWSTDAPI_(BOOL)     PathStripToRootW(LPWSTR pszPath);
#ifdef UNICODE
#define PathStripToRoot  PathStripToRootW
#else
#define PathStripToRoot  PathStripToRootA
#endif // !UNICODE
LWSTDAPI_(void)     PathUnquoteSpacesA(LPSTR lpsz);
LWSTDAPI_(void)     PathUnquoteSpacesW(LPWSTR lpsz);
LWSTDAPI_(BOOL)     PathMakeSystemFolderA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathMakeSystemFolderW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathMakeSystemFolder  PathMakeSystemFolderW
#else
#define PathMakeSystemFolder  PathMakeSystemFolderA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathUnmakeSystemFolderA(LPCSTR pszPath);
LWSTDAPI_(BOOL)     PathUnmakeSystemFolderW(LPCWSTR pszPath);
#ifdef UNICODE
#define PathUnmakeSystemFolder  PathUnmakeSystemFolderW
#else
#define PathUnmakeSystemFolder  PathUnmakeSystemFolderA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathIsSystemFolderA(LPCSTR pszPath, DWORD dwAttrb);
LWSTDAPI_(BOOL)     PathIsSystemFolderW(LPCWSTR pszPath, DWORD dwAttrb);
#ifdef UNICODE
#define PathIsSystemFolder  PathIsSystemFolderW
#else
#define PathIsSystemFolder  PathIsSystemFolderA
#endif // !UNICODE
LWSTDAPI_(void)     PathUndecorateA(LPSTR pszPath);
LWSTDAPI_(void)     PathUndecorateW(LPWSTR pszPath);
#ifdef UNICODE
#define PathUndecorate  PathUndecorateW
#else
#define PathUndecorate  PathUndecorateA
#endif // !UNICODE
LWSTDAPI_(BOOL)     PathUnExpandEnvStringsA(LPCSTR pszPath, LPSTR pszBuf, UINT cchBuf);
LWSTDAPI_(BOOL)     PathUnExpandEnvStringsW(LPCWSTR pszPath, LPWSTR pszBuf, UINT cchBuf);
#ifdef UNICODE
#define PathUnExpandEnvStrings  PathUnExpandEnvStringsW
#else
#define PathUnExpandEnvStrings  PathUnExpandEnvStringsA
#endif // !UNICODE


#ifdef UNICODE
#define PathAppend              PathAppendW
#define PathCanonicalize        PathCanonicalizeW
#define PathCompactPath         PathCompactPathW
#define PathCompactPathEx       PathCompactPathExW
#define PathCommonPrefix        PathCommonPrefixW
#define PathFindOnPath          PathFindOnPathW
#define PathGetCharType         PathGetCharTypeW
#define PathIsContentType       PathIsContentTypeW
#define PathIsHTMLFile          PathIsHTMLFileW
#define PathMakePretty          PathMakePrettyW
#define PathMatchSpec           PathMatchSpecW
#define PathParseIconLocation   PathParseIconLocationW
#define PathQuoteSpaces         PathQuoteSpacesW
#define PathRelativePathTo      PathRelativePathToW
#define PathRemoveArgs          PathRemoveArgsW
#define PathRemoveBlanks        PathRemoveBlanksW
#define PathRemoveExtension     PathRemoveExtensionW
#define PathRemoveFileSpec      PathRemoveFileSpecW
#define PathRenameExtension     PathRenameExtensionW
#define PathSearchAndQualify    PathSearchAndQualifyW
#define PathSetDlgItemPath      PathSetDlgItemPathW
#define PathUnquoteSpaces       PathUnquoteSpacesW
#else
#define PathAppend              PathAppendA
#define PathCanonicalize        PathCanonicalizeA
#define PathCompactPath         PathCompactPathA
#define PathCompactPathEx       PathCompactPathExA
#define PathCommonPrefix        PathCommonPrefixA
#define PathFindOnPath          PathFindOnPathA
#define PathGetCharType         PathGetCharTypeA
#define PathIsContentType       PathIsContentTypeA
#define PathIsHTMLFile          PathIsHTMLFileA
#define PathMakePretty          PathMakePrettyA
#define PathMatchSpec           PathMatchSpecA
#define PathParseIconLocation   PathParseIconLocationA
#define PathQuoteSpaces         PathQuoteSpacesA
#define PathRelativePathTo      PathRelativePathToA
#define PathRemoveArgs          PathRemoveArgsA
#define PathRemoveBlanks        PathRemoveBlanksA
#define PathRemoveExtension     PathRemoveExtensionA
#define PathRemoveFileSpec      PathRemoveFileSpecA
#define PathRenameExtension     PathRenameExtensionA
#define PathSearchAndQualify    PathSearchAndQualifyA
#define PathSetDlgItemPath      PathSetDlgItemPathA
#define PathUnquoteSpaces       PathUnquoteSpacesA
#endif

typedef enum {
    URL_SCHEME_INVALID     = -1,
    URL_SCHEME_UNKNOWN     =  0,
    URL_SCHEME_FTP,
    URL_SCHEME_HTTP,
    URL_SCHEME_GOPHER,
    URL_SCHEME_MAILTO,
    URL_SCHEME_NEWS,
    URL_SCHEME_NNTP,
    URL_SCHEME_TELNET,
    URL_SCHEME_WAIS,
    URL_SCHEME_FILE,
    URL_SCHEME_MK,
    URL_SCHEME_HTTPS,
    URL_SCHEME_SHELL,
    URL_SCHEME_SNEWS,
    URL_SCHEME_LOCAL,
    URL_SCHEME_JAVASCRIPT,
    URL_SCHEME_VBSCRIPT,
    URL_SCHEME_ABOUT,
    URL_SCHEME_RES,
    URL_SCHEME_MSSHELLROOTED,
    URL_SCHEME_MSSHELLIDLIST,
    URL_SCHEME_MAXVALUE
} URL_SCHEME;

typedef enum {
    URL_PART_NONE       = 0,
    URL_PART_SCHEME     = 1,
    URL_PART_HOSTNAME,
    URL_PART_USERNAME,
    URL_PART_PASSWORD,
    URL_PART_PORT,
    URL_PART_QUERY,
} URL_PART;

typedef enum {
    URLIS_URL,
    URLIS_OPAQUE,
    URLIS_NOHISTORY,
    URLIS_FILEURL,
    URLIS_APPLIABLE,
    URLIS_DIRECTORY,
    URLIS_HASQUERY,
} URLIS;

#define URL_UNESCAPE                    0x10000000
#define URL_ESCAPE_UNSAFE               0x20000000
#define URL_PLUGGABLE_PROTOCOL          0x40000000
#define URL_WININET_COMPATIBILITY       0x80000000
#define URL_DONT_ESCAPE_EXTRA_INFO      0x02000000
#define URL_DONT_UNESCAPE_EXTRA_INFO    URL_DONT_ESCAPE_EXTRA_INFO
#define URL_BROWSER_MODE                URL_DONT_ESCAPE_EXTRA_INFO
#define URL_ESCAPE_SPACES_ONLY          0x04000000
#define URL_DONT_SIMPLIFY               0x08000000
#define URL_NO_META                     URL_DONT_SIMPLIFY
#define URL_UNESCAPE_INPLACE            0x00100000
#define URL_CONVERT_IF_DOSPATH          0x00200000
#define URL_UNESCAPE_HIGH_ANSI_ONLY     0x00400000
#define URL_INTERNAL_PATH               0x00800000  // Will escape #'s in paths
#define URL_FILE_USE_PATHURL            0x00010000
#define URL_ESCAPE_PERCENT              0x00001000
#define URL_ESCAPE_SEGMENT_ONLY         0x00002000  // Treat the entire URL param as one URL segment.

#define URL_PARTFLAG_KEEPSCHEME         0x00000001

#define URL_APPLY_DEFAULT               0x00000001
#define URL_APPLY_GUESSSCHEME           0x00000002
#define URL_APPLY_GUESSFILE             0x00000004
#define URL_APPLY_FORCEAPPLY            0x00000008


LWSTDAPI_(int)          UrlCompareA(LPCSTR psz1, LPCSTR psz2, BOOL fIgnoreSlash);
LWSTDAPI_(int)          UrlCompareW(LPCWSTR psz1, LPCWSTR psz2, BOOL fIgnoreSlash);
LWSTDAPI                UrlCombineA(LPCSTR pszBase, LPCSTR pszRelative, LPSTR pszCombined, LPDWORD pcchCombined, DWORD dwFlags);
LWSTDAPI                UrlCombineW(LPCWSTR pszBase, LPCWSTR pszRelative, LPWSTR pszCombined, LPDWORD pcchCombined, DWORD dwFlags);
LWSTDAPI                UrlCanonicalizeA(LPCSTR pszUrl, LPSTR pszCanonicalized, LPDWORD pcchCanonicalized, DWORD dwFlags);
LWSTDAPI                UrlCanonicalizeW(LPCWSTR pszUrl, LPWSTR pszCanonicalized, LPDWORD pcchCanonicalized, DWORD dwFlags);
LWSTDAPI_(BOOL)         UrlIsOpaqueA(LPCSTR pszURL);
LWSTDAPI_(BOOL)         UrlIsOpaqueW(LPCWSTR pszURL);
LWSTDAPI_(BOOL)         UrlIsNoHistoryA(LPCSTR pszURL);
LWSTDAPI_(BOOL)         UrlIsNoHistoryW(LPCWSTR pszURL);
#define                 UrlIsFileUrlA(pszURL) UrlIsA(pszURL, URLIS_FILEURL)
#define                 UrlIsFileUrlW(pszURL) UrlIsW(pszURL, URLIS_FILEURL)
LWSTDAPI_(BOOL)         UrlIsA(LPCSTR pszUrl, URLIS UrlIs);
LWSTDAPI_(BOOL)         UrlIsW(LPCWSTR pszUrl, URLIS UrlIs);
LWSTDAPI_(LPCSTR)       UrlGetLocationA(LPCSTR psz1);
LWSTDAPI_(LPCWSTR)      UrlGetLocationW(LPCWSTR psz1);
LWSTDAPI                UrlUnescapeA(LPSTR pszUrl, LPSTR pszUnescaped, LPDWORD pcchUnescaped, DWORD dwFlags);
LWSTDAPI                UrlUnescapeW(LPWSTR pszUrl, LPWSTR pszUnescaped, LPDWORD pcchUnescaped, DWORD dwFlags);
LWSTDAPI                UrlEscapeA(LPCSTR pszUrl, LPSTR pszEscaped, LPDWORD pcchEscaped, DWORD dwFlags);
LWSTDAPI                UrlEscapeW(LPCWSTR pszUrl, LPWSTR pszEscaped, LPDWORD pcchEscaped, DWORD dwFlags);
LWSTDAPI                UrlCreateFromPathA(LPCSTR pszPath, LPSTR pszUrl, LPDWORD pcchUrl, DWORD dwFlags);
LWSTDAPI                UrlCreateFromPathW(LPCWSTR pszPath, LPWSTR pszUrl, LPDWORD pcchUrl, DWORD dwFlags);
LWSTDAPI                PathCreateFromUrlA(LPCSTR pszUrl, LPSTR pszPath, LPDWORD pcchPath, DWORD dwFlags);
LWSTDAPI                PathCreateFromUrlW(LPCWSTR pszUrl, LPWSTR pszPath, LPDWORD pcchPath, DWORD dwFlags);
LWSTDAPI                UrlHashA(LPCSTR pszUrl, LPBYTE pbHash, DWORD cbHash);
LWSTDAPI                UrlHashW(LPCWSTR pszUrl, LPBYTE pbHash, DWORD cbHash);
LWSTDAPI                UrlGetPartW(LPCWSTR pszIn, LPWSTR pszOut, LPDWORD pcchOut, DWORD dwPart, DWORD dwFlags);
LWSTDAPI                UrlGetPartA(LPCSTR pszIn, LPSTR pszOut, LPDWORD pcchOut, DWORD dwPart, DWORD dwFlags);
LWSTDAPI                UrlApplySchemeA(LPCSTR pszIn, LPSTR pszOut, LPDWORD pcchOut, DWORD dwFlags);
LWSTDAPI                UrlApplySchemeW(LPCWSTR pszIn, LPWSTR pszOut, LPDWORD pcchOut, DWORD dwFlags);
LWSTDAPI                HashData(LPBYTE pbData, DWORD cbData, LPBYTE pbHash, DWORD cbHash);



#ifdef UNICODE
#define UrlCompare              UrlCompareW
#define UrlCombine              UrlCombineW
#define UrlCanonicalize         UrlCanonicalizeW
#define UrlIsOpaque             UrlIsOpaqueW
#define UrlIsFileUrl            UrlIsFileUrlW
#define UrlGetLocation          UrlGetLocationW
#define UrlUnescape             UrlUnescapeW
#define UrlEscape               UrlEscapeW
#define UrlCreateFromPath       UrlCreateFromPathW
#define PathCreateFromUrl       PathCreateFromUrlW
#define UrlHash                 UrlHashW
#define UrlGetPart              UrlGetPartW
#define UrlApplyScheme          UrlApplySchemeW
#define UrlIs                   UrlIsW


#else //!UNICODE
#define UrlCompare              UrlCompareA
#define UrlCombine              UrlCombineA
#define UrlCanonicalize         UrlCanonicalizeA
#define UrlIsOpaque             UrlIsOpaqueA
#define UrlIsFileUrl            UrlIsFileUrlA
#define UrlGetLocation          UrlGetLocationA
#define UrlUnescape             UrlUnescapeA
#define UrlEscape               UrlEscapeA
#define UrlCreateFromPath       UrlCreateFromPathA
#define PathCreateFromUrl       PathCreateFromUrlA
#define UrlHash                 UrlHashA
#define UrlGetPart              UrlGetPartA
#define UrlApplyScheme          UrlApplySchemeA
#define UrlIs                   UrlIsA


#endif //UNICODE

#define UrlEscapeSpaces(pszUrl, pszEscaped, pcchEscaped)        UrlCanonicalize(pszUrl, pszEscaped, pcchEscaped, URL_ESCAPE_SPACES_ONLY |URL_DONT_ESCAPE_EXTRA_INFO )
#define UrlUnescapeInPlace(pszUrl, dwFlags)                     UrlUnescape(pszUrl, NULL, NULL, dwFlags | URL_UNESCAPE_INPLACE)



#endif //  NO_SHLWAPI_PATH



#ifndef NO_SHLWAPI_REG
//
//=============== Registry Routines ===================================
//

// SHDeleteEmptyKey mimics RegDeleteKey as it behaves on NT.
// SHDeleteKey mimics RegDeleteKey as it behaves on Win95.

LWSTDAPI_(DWORD)    SHDeleteEmptyKeyA(HKEY hkey, LPCSTR pszSubKey);
LWSTDAPI_(DWORD)    SHDeleteEmptyKeyW(HKEY hkey, LPCWSTR pszSubKey);
#ifdef UNICODE
#define SHDeleteEmptyKey  SHDeleteEmptyKeyW
#else
#define SHDeleteEmptyKey  SHDeleteEmptyKeyA
#endif // !UNICODE
LWSTDAPI_(DWORD)    SHDeleteKeyA(HKEY hkey, LPCSTR pszSubKey);
LWSTDAPI_(DWORD)    SHDeleteKeyW(HKEY hkey, LPCWSTR pszSubKey);
#ifdef UNICODE
#define SHDeleteKey  SHDeleteKeyW
#else
#define SHDeleteKey  SHDeleteKeyA
#endif // !UNICODE
LWSTDAPI_(HKEY)     SHRegDuplicateHKey(HKEY hkey);


// These functions open the key, get/set/delete the value, then close
// the key.

LWSTDAPI_(DWORD)    SHDeleteValueA(HKEY hkey, LPCSTR pszSubKey, LPCSTR pszValue);
LWSTDAPI_(DWORD)    SHDeleteValueW(HKEY hkey, LPCWSTR pszSubKey, LPCWSTR pszValue);
#ifdef UNICODE
#define SHDeleteValue  SHDeleteValueW
#else
#define SHDeleteValue  SHDeleteValueA
#endif // !UNICODE
LWSTDAPI_(DWORD)    SHGetValueA(HKEY hkey, LPCSTR pszSubKey, LPCSTR pszValue, DWORD *pdwType, void *pvData, DWORD *pcbData);
LWSTDAPI_(DWORD)    SHGetValueW(HKEY hkey, LPCWSTR pszSubKey, LPCWSTR pszValue, DWORD *pdwType, void *pvData, DWORD *pcbData);
#ifdef UNICODE
#define SHGetValue  SHGetValueW
#else
#define SHGetValue  SHGetValueA
#endif // !UNICODE
LWSTDAPI_(DWORD)    SHSetValueA(HKEY hkey, LPCSTR pszSubKey, LPCSTR pszValue, DWORD dwType, LPCVOID pvData, DWORD cbData);
LWSTDAPI_(DWORD)    SHSetValueW(HKEY hkey, LPCWSTR pszSubKey, LPCWSTR pszValue, DWORD dwType, LPCVOID pvData, DWORD cbData);
#ifdef UNICODE
#define SHSetValue  SHSetValueW
#else
#define SHSetValue  SHSetValueA
#endif // !UNICODE

// These functions work just like RegQueryValueEx, except if the
// data type is REG_EXPAND_SZ, then these will go ahead and expand
// out the string.  *pdwType will always be massaged to REG_SZ
// if this happens.  REG_SZ values are also guaranteed to be null
// terminated.

LWSTDAPI_(DWORD)    SHQueryValueExA(HKEY hkey, LPCSTR pszValue, DWORD *pdwReserved, DWORD *pdwType, void *pvData, DWORD *pcbData);
LWSTDAPI_(DWORD)    SHQueryValueExW(HKEY hkey, LPCWSTR pszValue, DWORD *pdwReserved, DWORD *pdwType, void *pvData, DWORD *pcbData);
#ifdef UNICODE
#define SHQueryValueEx  SHQueryValueExW
#else
#define SHQueryValueEx  SHQueryValueExA
#endif // !UNICODE

// Enumeration functions support.

LWSTDAPI_(LONG)     SHEnumKeyExA(HKEY hkey, DWORD dwIndex, LPSTR pszName, LPDWORD pcchName);
LWSTDAPI_(LONG)     SHEnumKeyExW(HKEY hkey, DWORD dwIndex, LPWSTR pszName, LPDWORD pcchName);
LWSTDAPI_(LONG)     SHEnumValueA(HKEY hkey, DWORD dwIndex, LPSTR pszValueName, LPDWORD pcchValueName, LPDWORD pdwType, void *pvData, LPDWORD pcbData);
LWSTDAPI_(LONG)     SHEnumValueW(HKEY hkey, DWORD dwIndex, LPWSTR pszValueName, LPDWORD pcchValueName, LPDWORD pdwType, void *pvData, LPDWORD pcbData);
LWSTDAPI_(LONG)     SHQueryInfoKeyA(HKEY hkey, LPDWORD pcSubKeys, LPDWORD pcchMaxSubKeyLen, LPDWORD pcValues, LPDWORD pcchMaxValueNameLen);
LWSTDAPI_(LONG)     SHQueryInfoKeyW(HKEY hkey, LPDWORD pcSubKeys, LPDWORD pcchMaxSubKeyLen, LPDWORD pcValues, LPDWORD pcchMaxValueNameLen);

// recursive key copy
LWSTDAPI_(DWORD)     SHCopyKeyA(HKEY hkeySrc, LPCSTR   szSrcSubKey, HKEY hkeyDest, DWORD fReserved);
LWSTDAPI_(DWORD)     SHCopyKeyW(HKEY hkeySrc, LPCWSTR wszSrcSubKey, HKEY hkeyDest, DWORD fReserved);

// Getting and setting file system paths with environment variables

LWSTDAPI_(DWORD)    SHRegGetPathA(HKEY hKey, LPCSTR pcszSubKey, LPCSTR pcszValue, LPSTR pszPath, DWORD dwFlags);
LWSTDAPI_(DWORD)    SHRegGetPathW(HKEY hKey, LPCWSTR pcszSubKey, LPCWSTR pcszValue, LPWSTR pszPath, DWORD dwFlags);
LWSTDAPI_(DWORD)    SHRegSetPathA(HKEY hKey, LPCSTR pcszSubKey, LPCSTR pcszValue, LPCSTR pcszPath, DWORD dwFlags);
LWSTDAPI_(DWORD)    SHRegSetPathW(HKEY hKey, LPCWSTR pcszSubKey, LPCWSTR pcszValue, LPCWSTR pcszPath, DWORD dwFlags);

#ifdef UNICODE
#define SHEnumKeyEx           SHEnumKeyExW
#define SHEnumValue           SHEnumValueW
#define SHQueryInfoKey        SHQueryInfoKeyW
#define SHCopyKey             SHCopyKeyW
#define SHRegGetPath          SHRegGetPathW
#define SHRegSetPath          SHRegSetPathW
#else
#define SHEnumKeyEx           SHEnumKeyExA
#define SHEnumValue           SHEnumValueA
#define SHQueryInfoKey        SHQueryInfoKeyA
#define SHCopyKey             SHCopyKeyA
#define SHRegGetPath          SHRegGetPathA
#define SHRegSetPath          SHRegSetPathA
#endif


//////////////////////////////////////////////
// User Specific Registry Access Functions
//////////////////////////////////////////////

//
// Type definitions.
//

typedef enum
{
    SHREGDEL_DEFAULT = 0x00000000,       // Delete's HKCU, or HKLM if HKCU is not found.
    SHREGDEL_HKCU    = 0x00000001,       // Delete HKCU only
    SHREGDEL_HKLM    = 0x00000010,       // Delete HKLM only.
    SHREGDEL_BOTH    = 0x00000011,       // Delete both HKCU and HKLM.
} SHREGDEL_FLAGS;

typedef enum
{
    SHREGENUM_DEFAULT = 0x00000000,       // Enumerates HKCU or HKLM if not found.
    SHREGENUM_HKCU    = 0x00000001,       // Enumerates HKCU only
    SHREGENUM_HKLM    = 0x00000010,       // Enumerates HKLM only.
    SHREGENUM_BOTH    = 0x00000011,       // Enumerates both HKCU and HKLM without duplicates.
                                          // This option is NYI.
} SHREGENUM_FLAGS;

#define     SHREGSET_HKCU           0x00000001       // Write to HKCU if empty.
#define     SHREGSET_FORCE_HKCU     0x00000002       // Write to HKCU.
#define     SHREGSET_HKLM           0x00000004       // Write to HKLM if empty.
#define     SHREGSET_FORCE_HKLM     0x00000008       // Write to HKLM.
#define     SHREGSET_DEFAULT        (SHREGSET_FORCE_HKCU | SHREGSET_HKLM)          // Default is SHREGSET_FORCE_HKCU | SHREGSET_HKLM.

typedef HANDLE HUSKEY;  // HUSKEY is a Handle to a User Specific KEY.
typedef HUSKEY *PHUSKEY;

LWSTDAPI_(LONG)        SHRegCreateUSKeyA(LPCSTR pszPath, REGSAM samDesired, HUSKEY hRelativeUSKey, PHUSKEY phNewUSKey, DWORD dwFlags);
LWSTDAPI_(LONG)        SHRegCreateUSKeyW(LPCWSTR pwzPath, REGSAM samDesired, HUSKEY hRelativeUSKey, PHUSKEY phNewUSKey, DWORD dwFlags);
LWSTDAPI_(LONG)        SHRegOpenUSKeyA(LPCSTR pszPath, REGSAM samDesired, HUSKEY hRelativeUSKey, PHUSKEY phNewUSKey, BOOL fIgnoreHKCU);
LWSTDAPI_(LONG)        SHRegOpenUSKeyW(LPCWSTR pwzPath, REGSAM samDesired, HUSKEY hRelativeUSKey, PHUSKEY phNewUSKey, BOOL fIgnoreHKCU);
LWSTDAPI_(LONG)        SHRegQueryUSValueA(HUSKEY hUSKey, LPCSTR pszValue, LPDWORD pdwType, void *pvData, LPDWORD pcbData, BOOL fIgnoreHKCU, void *pvDefaultData, DWORD dwDefaultDataSize);
LWSTDAPI_(LONG)        SHRegQueryUSValueW(HUSKEY hUSKey, LPCWSTR pwzValue, LPDWORD pdwType, void *pvData, LPDWORD pcbData, BOOL fIgnoreHKCU, void *pvDefaultData, DWORD dwDefaultDataSize);
LWSTDAPI_(LONG)        SHRegWriteUSValueA(HUSKEY hUSKey, LPCSTR pszValue, DWORD dwType, const void *pvData, DWORD cbData, DWORD dwFlags);
LWSTDAPI_(LONG)        SHRegWriteUSValueW(HUSKEY hUSKey, LPCWSTR pwzValue, DWORD dwType, const void *pvData, DWORD cbData, DWORD dwFlags);
LWSTDAPI_(LONG)        SHRegDeleteUSValueA(HUSKEY hUSKey, LPCSTR pszValue, SHREGDEL_FLAGS delRegFlags);
LWSTDAPI_(LONG)        SHRegDeleteEmptyUSKeyW(HUSKEY hUSKey, LPCWSTR pwzSubKey, SHREGDEL_FLAGS delRegFlags);
LWSTDAPI_(LONG)        SHRegDeleteEmptyUSKeyA(HUSKEY hUSKey, LPCSTR pszSubKey, SHREGDEL_FLAGS delRegFlags);
LWSTDAPI_(LONG)        SHRegDeleteUSValueW(HUSKEY hUSKey, LPCWSTR pwzValue, SHREGDEL_FLAGS delRegFlags);
LWSTDAPI_(LONG)        SHRegEnumUSKeyA(HUSKEY hUSKey, DWORD dwIndex, LPSTR pszName, LPDWORD pcchName, SHREGENUM_FLAGS enumRegFlags);
LWSTDAPI_(LONG)        SHRegEnumUSKeyW(HUSKEY hUSKey, DWORD dwIndex, LPWSTR pwzName, LPDWORD pcchName, SHREGENUM_FLAGS enumRegFlags);
LWSTDAPI_(LONG)        SHRegEnumUSValueA(HUSKEY hUSkey, DWORD dwIndex, LPSTR pszValueName, LPDWORD pcchValueName, LPDWORD pdwType, void *pvData, LPDWORD pcbData, SHREGENUM_FLAGS enumRegFlags);
LWSTDAPI_(LONG)        SHRegEnumUSValueW(HUSKEY hUSkey, DWORD dwIndex, LPWSTR pszValueName, LPDWORD pcchValueName, LPDWORD pdwType, void *pvData, LPDWORD pcbData, SHREGENUM_FLAGS enumRegFlags);
LWSTDAPI_(LONG)        SHRegQueryInfoUSKeyA(HUSKEY hUSKey, LPDWORD pcSubKeys, LPDWORD pcchMaxSubKeyLen, LPDWORD pcValues, LPDWORD pcchMaxValueNameLen, SHREGENUM_FLAGS enumRegFlags);
LWSTDAPI_(LONG)        SHRegQueryInfoUSKeyW(HUSKEY hUSKey, LPDWORD pcSubKeys, LPDWORD pcchMaxSubKeyLen, LPDWORD pcValues, LPDWORD pcchMaxValueNameLen, SHREGENUM_FLAGS enumRegFlags);
LWSTDAPI_(LONG)        SHRegCloseUSKey(HUSKEY hUSKey);


// These calls are equal to an SHRegOpenUSKey, SHRegQueryUSValue, and then a SHRegCloseUSKey.
LWSTDAPI_(LONG)        SHRegGetUSValueA(LPCSTR pszSubKey, LPCSTR pszValue, LPDWORD pdwType, void * pvData, LPDWORD pcbData, BOOL fIgnoreHKCU, void *pvDefaultData, DWORD dwDefaultDataSize);
LWSTDAPI_(LONG)        SHRegGetUSValueW(LPCWSTR pwzSubKey, LPCWSTR pwzValue, LPDWORD pdwType, void * pvData, LPDWORD pcbData, BOOL fIgnoreHKCU, void *pvDefaultData, DWORD dwDefaultDataSize);
LWSTDAPI_(LONG)        SHRegSetUSValueA(LPCSTR pszSubKey, LPCSTR pszValue, DWORD dwType, const void *pvData, DWORD cbData, DWORD dwFlags);
LWSTDAPI_(LONG)        SHRegSetUSValueW(LPCWSTR pwzSubKey, LPCWSTR pwzValue, DWORD dwType, const void *pvData, DWORD cbData, DWORD dwFlags);
LWSTDAPI_(int)         SHRegGetIntW(HKEY hk, LPCWSTR pwzKey, int iDefault);

#ifdef UNICODE
#define SHRegCreateUSKey        SHRegCreateUSKeyW
#define SHRegOpenUSKey          SHRegOpenUSKeyW
#define SHRegQueryUSValue       SHRegQueryUSValueW
#define SHRegWriteUSValue       SHRegWriteUSValueW
#define SHRegDeleteUSValue      SHRegDeleteUSValueW
#define SHRegDeleteEmptyUSKey   SHRegDeleteEmptyUSKeyW
#define SHRegEnumUSKey          SHRegEnumUSKeyW
#define SHRegEnumUSValue        SHRegEnumUSValueW
#define SHRegQueryInfoUSKey     SHRegQueryInfoUSKeyW
#define SHRegGetUSValue         SHRegGetUSValueW
#define SHRegSetUSValue         SHRegSetUSValueW
#define SHRegGetInt             SHRegGetIntW
#else
#define SHRegCreateUSKey        SHRegCreateUSKeyA
#define SHRegOpenUSKey          SHRegOpenUSKeyA
#define SHRegQueryUSValue       SHRegQueryUSValueA
#define SHRegWriteUSValue       SHRegWriteUSValueA
#define SHRegDeleteUSValue      SHRegDeleteUSValueA
#define SHRegDeleteEmptyUSKey   SHRegDeleteEmptyUSKeyA
#define SHRegEnumUSKey          SHRegEnumUSKeyA
#define SHRegEnumUSValue        SHRegEnumUSValueA
#define SHRegQueryInfoUSKey     SHRegQueryInfoUSKeyA
#define SHRegGetUSValue         SHRegGetUSValueA
#define SHRegSetUSValue         SHRegSetUSValueA
#endif

LWSTDAPI_(BOOL) SHRegGetBoolUSValueA(LPCSTR pszSubKey, LPCSTR pszValue, BOOL fIgnoreHKCU, BOOL fDefault);
LWSTDAPI_(BOOL) SHRegGetBoolUSValueW(LPCWSTR pszSubKey, LPCWSTR pszValue, BOOL fIgnoreHKCU, BOOL fDefault);

#ifdef UNICODE
#define SHRegGetBoolUSValue SHRegGetBoolUSValueW
#else
#define SHRegGetBoolUSValue SHRegGetBoolUSValueA
#endif

//
//  Association APIs
//
//  these APIs are to assist in accessing the data in HKCR
//  getting the Command strings and exe paths
//  for different verbs and extensions are simplified this way
//

enum {
    ASSOCF_INIT_NOREMAPCLSID           = 0x00000001,  //  do not remap clsids to progids
    ASSOCF_INIT_BYEXENAME              = 0x00000002,  //  executable is being passed in
    ASSOCF_OPEN_BYEXENAME              = 0x00000002,  //  executable is being passed in
    ASSOCF_INIT_DEFAULTTOSTAR          = 0x00000004,  //  treat "*" as the BaseClass
    ASSOCF_INIT_DEFAULTTOFOLDER        = 0x00000008,  //  treat "Folder" as the BaseClass
    ASSOCF_NOUSERSETTINGS              = 0x00000010,  //  dont use HKCU
    ASSOCF_NOTRUNCATE                  = 0x00000020,  //  dont truncate the return string
    ASSOCF_VERIFY                      = 0x00000040,  //  verify data is accurate (DISK HITS)
    ASSOCF_REMAPRUNDLL                 = 0x00000080,  //  actually gets info about rundlls target if applicable
    ASSOCF_NOFIXUPS                    = 0x00000100,  //  attempt to fix errors if found
    ASSOCF_IGNOREBASECLASS             = 0x00000200,  //  dont recurse into the baseclass
};

typedef DWORD ASSOCF;


typedef enum {
    ASSOCSTR_COMMAND      = 1,  //  shell\verb\command string
    ASSOCSTR_EXECUTABLE,        //  the executable part of command string
    ASSOCSTR_FRIENDLYDOCNAME,   //  friendly name of the document type
    ASSOCSTR_FRIENDLYAPPNAME,   //  friendly name of executable
    ASSOCSTR_NOOPEN,            //  noopen value
    ASSOCSTR_SHELLNEWVALUE,     //  query values under the shellnew key
    ASSOCSTR_DDECOMMAND,        //  template for DDE commands
    ASSOCSTR_DDEIFEXEC,         //  DDECOMMAND to use if just create a process
    ASSOCSTR_DDEAPPLICATION,    //  Application name in DDE broadcast
    ASSOCSTR_DDETOPIC,          //  Topic Name in DDE broadcast
    ASSOCSTR_INFOTIP,           //  info tip for an item, or list of properties to create info tip from
    ASSOCSTR_QUICKTIP,          //  same as ASSOCSTR_INFOTIP, except, this list contains only quickly retrievable properties
    ASSOCSTR_TILEINFO,          //  similar to ASSOCSTR_INFOTIP - lists important properties for tileview
    ASSOCSTR_CONTENTTYPE,       //  MIME Content type
    ASSOCSTR_APPURL,            //  App URL
    ASSOCSTR_DEFAULTSHELLVERBS, //  Default shell verbs list
    ASSOCSTR_DEFAULTICON,       //  Default icon source
    ASSOCSTR_DEFAULTHANDLER,    //  Default handler
    ASSOCSTR_WEBVIEWDISPLAYPROPS,   //  list of properties to display in webview
    ASSOCSTR_SHELLEXTENSION,    //  Guid string pointing to the Shellex\Shellextensionhandler value.
    ASSOCSTR_MAX                //  last item in enum...
} ASSOCSTR;

typedef enum {
    ASSOCKEY_SHELLEXECCLASS = 1,  //  the key that should be passed to ShellExec(hkeyClass)
    ASSOCKEY_APP,                 //  the "Application" key for the association
    ASSOCKEY_CLASS,               //  the progid or class key
    ASSOCKEY_BASECLASS,           //  the BaseClass key
    ASSOCKEY_SHELLVERB,           //  the CLASS\shell\pszExtra key
    ASSOCKEY_MAX                  //  last item in enum...
} ASSOCKEY;

typedef enum {
    ASSOCDATA_MSIDESCRIPTOR = 1,  //  Component Descriptor to pass to MSI APIs
    ASSOCDATA_NOACTIVATEHANDLER,  //  restrict attempts to activate window
    ASSOCDATA_QUERYCLASSSTORE,    //  should check with the NT Class Store
    ASSOCDATA_HASPERUSERASSOC,    //  defaults to user specified association
    ASSOCDATA_EDITFLAGS,          //  Edit flags.
    ASSOCDATA_MAX
} ASSOCDATA;

typedef enum {
    ASSOCENUM_NONE
} ASSOCENUM;

#undef INTERFACE
#define INTERFACE IQueryAssociations

DECLARE_INTERFACE_( IQueryAssociations, IUnknown )
{
    // IUnknown methods
    STDMETHOD (QueryInterface)(THIS_ REFIID riid, void **ppv) PURE;
    STDMETHOD_(ULONG, AddRef) ( THIS ) PURE;
    STDMETHOD_(ULONG, Release) ( THIS ) PURE;

    // IAssociations methods
    STDMETHOD (Init)(THIS_ ASSOCF flags, LPCWSTR pszAssoc, HKEY hkProgid, HWND hwnd) PURE;
    STDMETHOD (GetString)(THIS_ ASSOCF flags, ASSOCSTR str, LPCWSTR pszExtra, LPWSTR pszOut, DWORD *pcchOut) PURE;
    STDMETHOD (GetKey)(THIS_ ASSOCF flags, ASSOCKEY key, LPCWSTR pszExtra, HKEY *phkeyOut) PURE;
    STDMETHOD (GetData)(THIS_ ASSOCF flags, ASSOCDATA data, LPCWSTR pszExtra, LPVOID pvOut, DWORD *pcbOut) PURE;
    STDMETHOD (GetEnum)(THIS_ ASSOCF flags, ASSOCENUM assocenum, LPCWSTR pszExtra, REFIID riid, LPVOID *ppvOut) PURE;
};


LWSTDAPI AssocCreate(CLSID clsid, REFIID riid, LPVOID *ppv);

//  wrappers for the interface
LWSTDAPI AssocQueryStringA(ASSOCF flags, ASSOCSTR str, LPCSTR pszAssoc, LPCSTR pszExtra, LPSTR pszOut, DWORD *pcchOut);
//  wrappers for the interface
LWSTDAPI AssocQueryStringW(ASSOCF flags, ASSOCSTR str, LPCWSTR pszAssoc, LPCWSTR pszExtra, LPWSTR pszOut, DWORD *pcchOut);
#ifdef UNICODE
#define AssocQueryString  AssocQueryStringW
#else
#define AssocQueryString  AssocQueryStringA
#endif // !UNICODE
LWSTDAPI AssocQueryStringByKeyA(ASSOCF flags, ASSOCSTR str, HKEY hkAssoc, LPCSTR pszExtra, LPSTR pszOut, DWORD *pcchOut);
LWSTDAPI AssocQueryStringByKeyW(ASSOCF flags, ASSOCSTR str, HKEY hkAssoc, LPCWSTR pszExtra, LPWSTR pszOut, DWORD *pcchOut);
#ifdef UNICODE
#define AssocQueryStringByKey  AssocQueryStringByKeyW
#else
#define AssocQueryStringByKey  AssocQueryStringByKeyA
#endif // !UNICODE
LWSTDAPI AssocQueryKeyA(ASSOCF flags, ASSOCKEY key, LPCSTR pszAssoc, LPCSTR pszExtra, HKEY *phkeyOut);
LWSTDAPI AssocQueryKeyW(ASSOCF flags, ASSOCKEY key, LPCWSTR pszAssoc, LPCWSTR pszExtra, HKEY *phkeyOut);
#ifdef UNICODE
#define AssocQueryKey  AssocQueryKeyW
#else
#define AssocQueryKey  AssocQueryKeyA
#endif // !UNICODE



#endif //  NO_SHLWAPI_REG



#ifndef NO_SHLWAPI_STREAM
//
//=============== Stream Routines ===================================
//

LWSTDAPI_(struct IStream *) SHOpenRegStreamA(HKEY hkey, LPCSTR pszSubkey, LPCSTR pszValue, DWORD grfMode);
LWSTDAPI_(struct IStream *) SHOpenRegStreamW(HKEY hkey, LPCWSTR pszSubkey, LPCWSTR pszValue, DWORD grfMode);
#ifdef UNICODE
#define SHOpenRegStream  SHOpenRegStreamW
#else
#define SHOpenRegStream  SHOpenRegStreamA
#endif // !UNICODE
LWSTDAPI_(struct IStream *) SHOpenRegStream2A(HKEY hkey, LPCSTR pszSubkey, LPCSTR pszValue, DWORD grfMode);
LWSTDAPI_(struct IStream *) SHOpenRegStream2W(HKEY hkey, LPCWSTR pszSubkey, LPCWSTR pszValue, DWORD grfMode);
#ifdef UNICODE
#define SHOpenRegStream2  SHOpenRegStream2W
#else
#define SHOpenRegStream2  SHOpenRegStream2A
#endif // !UNICODE
// New code always wants new implementation...
#undef SHOpenRegStream
#define SHOpenRegStream SHOpenRegStream2

LWSTDAPI SHCreateStreamOnFileA(LPCSTR pszFile, DWORD grfMode, struct IStream **ppstm);
LWSTDAPI SHCreateStreamOnFileW(LPCWSTR pszFile, DWORD grfMode, struct IStream **ppstm);
#ifdef UNICODE
#define SHCreateStreamOnFile  SHCreateStreamOnFileW
#else
#define SHCreateStreamOnFile  SHCreateStreamOnFileA
#endif // !UNICODE

#if (_WIN32_IE >= 0x0560)

LWSTDAPI SHCreateStreamOnFileEx(LPCWSTR pszFile, DWORD grfMode, DWORD dwAttributes, BOOL fCreate, struct IStream * pstmTemplate, struct IStream **ppstm);

#endif // (_WIN32_IE >= 0x0560)



#endif // NO_SHLWAPI_STREAM



#if (_WIN32_IE >= 0x0500)

// SHAutoComplete
//      hwndEdit - HWND of editbox, ComboBox or ComboBoxEx.
//      dwFlags - Flags to indicate what to AutoAppend or AutoSuggest for the editbox.
//
// WARNING:
//    Caller needs to have called CoInitialize() or OleInitialize()
//    and cannot call CoUninit/OleUninit until after
//    WM_DESTROY on hwndEdit.
//
//  dwFlags values:
#define SHACF_DEFAULT                   0x00000000  // Currently (SHACF_FILESYSTEM | SHACF_URLALL)
#define SHACF_FILESYSTEM                0x00000001  // This includes the File System as well as the rest of the shell (Desktop\My Computer\Control Panel\)
#define SHACF_URLALL                    (SHACF_URLHISTORY | SHACF_URLMRU)
#define SHACF_URLHISTORY                0x00000002  // URLs in the User's History
#define SHACF_URLMRU                    0x00000004  // URLs in the User's Recently Used list.
#define SHACF_USETAB                    0x00000008  // Use the tab to move thru the autocomplete possibilities instead of to the next dialog/window control.
#define SHACF_FILESYS_ONLY              0x00000010  // Obsolete

#define SHACF_AUTOSUGGEST_FORCE_ON      0x10000000  // Ignore the registry default and force the feature on.
#define SHACF_AUTOSUGGEST_FORCE_OFF     0x20000000  // Ignore the registry default and force the feature off.
#define SHACF_AUTOAPPEND_FORCE_ON       0x40000000  // Ignore the registry default and force the feature on. (Also know as AutoComplete)
#define SHACF_AUTOAPPEND_FORCE_OFF      0x80000000  // Ignore the registry default and force the feature off. (Also know as AutoComplete)

LWSTDAPI SHAutoComplete(HWND hwndEdit, DWORD dwFlags);

STDAPI SHSetThreadRef(IUnknown *punk);
STDAPI SHGetThreadRef(IUnknown **ppunk);

LWSTDAPI_(BOOL) SHSkipJunction(struct IBindCtx* pbc, const CLSID *pclsid);
#endif

#define CTF_INSIST          0x00000001      // SHCreateThread() dwFlags - call pfnThreadProc synchronously if CreateThread() fails
#define CTF_THREAD_REF      0x00000002      // hold a reference to the creating thread
#define CTF_PROCESS_REF     0x00000004      // hold a reference to the creating process
#define CTF_COINIT          0x00000008      // init COM for the created thread
#define CTF_FREELIBANDEXIT  0x00000010      // hold a ref to the DLL and call FreeLibraryAndExitThread() when done

LWSTDAPI_(BOOL) SHCreateThread(LPTHREAD_START_ROUTINE pfnThreadProc, void *pData, DWORD dwFlags, LPTHREAD_START_ROUTINE pfnCallback);


#ifndef NO_SHLWAPI_GDI
//
//====== GDI helper functions  ================================================
//

LWSTDAPI_(HPALETTE) SHCreateShellPalette(HDC hdc);

#if (_WIN32_IE >= 0x0500)

LWSTDAPI_(void)     ColorRGBToHLS(COLORREF clrRGB, WORD* pwHue, WORD* pwLuminance, WORD* pwSaturation);
LWSTDAPI_(COLORREF) ColorHLSToRGB(WORD wHue, WORD wLuminance, WORD wSaturation);
LWSTDAPI_(COLORREF) ColorAdjustLuma(COLORREF clrRGB, int n, BOOL fScale);


#endif  // _WIN32_IE >= 0x0500

#endif // NO_SHLWAPI_GDI


//
//====== DllGetVersion  =======================================================
//

typedef struct _DLLVERSIONINFO
{
    DWORD cbSize;
    DWORD dwMajorVersion;                   // Major version
    DWORD dwMinorVersion;                   // Minor version
    DWORD dwBuildNumber;                    // Build number
    DWORD dwPlatformID;                     // DLLVER_PLATFORM_*
} DLLVERSIONINFO;

// Platform IDs for DLLVERSIONINFO
#define DLLVER_PLATFORM_WINDOWS         0x00000001      // Windows 95
#define DLLVER_PLATFORM_NT              0x00000002      // Windows NT

#if (_WIN32_IE >= 0x0501)

typedef struct _DLLVERSIONINFO2
{
    DLLVERSIONINFO info1;
    DWORD dwFlags;                          // No flags currently defined
    ULONGLONG ullVersion;                   // Encoded as:
                                            // Major 0xFFFF 0000 0000 0000
                                            // Minor 0x0000 FFFF 0000 0000
                                            // Build 0x0000 0000 FFFF 0000
                                            // QFE   0x0000 0000 0000 FFFF
} DLLVERSIONINFO2;

#define DLLVER_MAJOR_MASK                    0xFFFF000000000000
#define DLLVER_MINOR_MASK                    0x0000FFFF00000000
#define DLLVER_BUILD_MASK                    0x00000000FFFF0000
#define DLLVER_QFE_MASK                      0x000000000000FFFF

#endif

#define MAKEDLLVERULL(major, minor, build, qfe) \
        (((ULONGLONG)(major) << 48) |        \
         ((ULONGLONG)(minor) << 32) |        \
         ((ULONGLONG)(build) << 16) |        \
         ((ULONGLONG)(  qfe) <<  0))

//
// The caller should always GetProcAddress("DllGetVersion"), not
// implicitly link to it.
//

typedef HRESULT (CALLBACK* DLLGETVERSIONPROC)(DLLVERSIONINFO *);

// DllInstall (to be implemented by self-installing DLLs)
STDAPI DllInstall(BOOL bInstall, LPCWSTR pszCmdLine);



#ifdef __cplusplus
}
#endif

#ifdef _WIN32
#include <poppack.h>
#endif

#endif


#endif  // _INC_SHLWAPI
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\signal.h ===
/***
*signal.h - defines signal values and routines
*
*       Copyright (c) 1985-2000, Microsoft Corporation. All rights reserved.
*
*Purpose:
*       This file defines the signal values and declares the signal functions.
*       [ANSI/System V]
*
*       [Public]
*
****/

#if     _MSC_VER > 1000
#pragma once
#endif

#ifndef _INC_SIGNAL
#define _INC_SIGNAL

#if     !defined(_WIN32)
#error ERROR: Only Win32 target supported!
#endif


#ifdef  __cplusplus
extern "C" {
#endif



/* Define _CRTIMP */

#ifndef _CRTIMP
#ifdef  _DLL
#define _CRTIMP __declspec(dllimport)
#else   /* ndef _DLL */
#define _CRTIMP
#endif  /* _DLL */
#endif  /* _CRTIMP */

/* Define __cdecl for non-Microsoft compilers */

#if     ( !defined(_MSC_VER) && !defined(__cdecl) )
#define __cdecl
#endif

#ifndef _SIG_ATOMIC_T_DEFINED
typedef int sig_atomic_t;
#define _SIG_ATOMIC_T_DEFINED
#endif

#define NSIG 23     /* maximum signal number + 1 */


/* Signal types */

#define SIGINT          2       /* interrupt */
#define SIGILL          4       /* illegal instruction - invalid function image */
#define SIGFPE          8       /* floating point exception */
#define SIGSEGV         11      /* segment violation */
#define SIGTERM         15      /* Software termination signal from kill */
#define SIGBREAK        21      /* Ctrl-Break sequence */
#define SIGABRT         22      /* abnormal termination triggered by abort call */


/* signal action codes */

#define SIG_DFL (void (__cdecl *)(int))0           /* default signal action */
#define SIG_IGN (void (__cdecl *)(int))1           /* ignore signal */
#define SIG_SGE (void (__cdecl *)(int))3           /* signal gets error */
#define SIG_ACK (void (__cdecl *)(int))4           /* acknowledge */


/* signal error value (returned by signal call on error) */

#define SIG_ERR (void (__cdecl *)(int))-1          /* signal error value */


/* pointer to exception information pointers structure */

#if     defined(_MT) || defined(_DLL)
extern void * * __cdecl __pxcptinfoptrs(void);
#define _pxcptinfoptrs  (*__pxcptinfoptrs())
#else   /* ndef _MT && ndef _DLL */
extern void * _pxcptinfoptrs;
#endif  /* _MT || _DLL */


/* Function prototypes */

_CRTIMP void (__cdecl * __cdecl signal(int, void (__cdecl *)(int)))(int);
_CRTIMP int __cdecl raise(int);


#ifdef  __cplusplus
}
#endif

#endif  /* _INC_SIGNAL */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\shldisp.h ===
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 6.00.0334 */
/* Compiler settings for shldisp.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __shldisp_h__
#define __shldisp_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IFolderViewOC_FWD_DEFINED__
#define __IFolderViewOC_FWD_DEFINED__
typedef interface IFolderViewOC IFolderViewOC;
#endif 	/* __IFolderViewOC_FWD_DEFINED__ */


#ifndef __DShellFolderViewEvents_FWD_DEFINED__
#define __DShellFolderViewEvents_FWD_DEFINED__
typedef interface DShellFolderViewEvents DShellFolderViewEvents;
#endif 	/* __DShellFolderViewEvents_FWD_DEFINED__ */


#ifndef __ShellFolderViewOC_FWD_DEFINED__
#define __ShellFolderViewOC_FWD_DEFINED__

#ifdef __cplusplus
typedef class ShellFolderViewOC ShellFolderViewOC;
#else
typedef struct ShellFolderViewOC ShellFolderViewOC;
#endif /* __cplusplus */

#endif 	/* __ShellFolderViewOC_FWD_DEFINED__ */


#ifndef __DFConstraint_FWD_DEFINED__
#define __DFConstraint_FWD_DEFINED__
typedef interface DFConstraint DFConstraint;
#endif 	/* __DFConstraint_FWD_DEFINED__ */


#ifndef __ISearchCommandExt_FWD_DEFINED__
#define __ISearchCommandExt_FWD_DEFINED__
typedef interface ISearchCommandExt ISearchCommandExt;
#endif 	/* __ISearchCommandExt_FWD_DEFINED__ */


#ifndef __FolderItem_FWD_DEFINED__
#define __FolderItem_FWD_DEFINED__
typedef interface FolderItem FolderItem;
#endif 	/* __FolderItem_FWD_DEFINED__ */


#ifndef __FolderItems_FWD_DEFINED__
#define __FolderItems_FWD_DEFINED__
typedef interface FolderItems FolderItems;
#endif 	/* __FolderItems_FWD_DEFINED__ */


#ifndef __FolderItemVerb_FWD_DEFINED__
#define __FolderItemVerb_FWD_DEFINED__
typedef interface FolderItemVerb FolderItemVerb;
#endif 	/* __FolderItemVerb_FWD_DEFINED__ */


#ifndef __FolderItemVerbs_FWD_DEFINED__
#define __FolderItemVerbs_FWD_DEFINED__
typedef interface FolderItemVerbs FolderItemVerbs;
#endif 	/* __FolderItemVerbs_FWD_DEFINED__ */


#ifndef __Folder_FWD_DEFINED__
#define __Folder_FWD_DEFINED__
typedef interface Folder Folder;
#endif 	/* __Folder_FWD_DEFINED__ */


#ifndef __Folder2_FWD_DEFINED__
#define __Folder2_FWD_DEFINED__
typedef interface Folder2 Folder2;
#endif 	/* __Folder2_FWD_DEFINED__ */


#ifndef __Folder3_FWD_DEFINED__
#define __Folder3_FWD_DEFINED__
typedef interface Folder3 Folder3;
#endif 	/* __Folder3_FWD_DEFINED__ */


#ifndef __FolderItem2_FWD_DEFINED__
#define __FolderItem2_FWD_DEFINED__
typedef interface FolderItem2 FolderItem2;
#endif 	/* __FolderItem2_FWD_DEFINED__ */


#ifndef __ShellFolderItem_FWD_DEFINED__
#define __ShellFolderItem_FWD_DEFINED__

#ifdef __cplusplus
typedef class ShellFolderItem ShellFolderItem;
#else
typedef struct ShellFolderItem ShellFolderItem;
#endif /* __cplusplus */

#endif 	/* __ShellFolderItem_FWD_DEFINED__ */


#ifndef __FolderItems2_FWD_DEFINED__
#define __FolderItems2_FWD_DEFINED__
typedef interface FolderItems2 FolderItems2;
#endif 	/* __FolderItems2_FWD_DEFINED__ */


#ifndef __FolderItems3_FWD_DEFINED__
#define __FolderItems3_FWD_DEFINED__
typedef interface FolderItems3 FolderItems3;
#endif 	/* __FolderItems3_FWD_DEFINED__ */


#ifndef __IShellLinkDual_FWD_DEFINED__
#define __IShellLinkDual_FWD_DEFINED__
typedef interface IShellLinkDual IShellLinkDual;
#endif 	/* __IShellLinkDual_FWD_DEFINED__ */


#ifndef __IShellLinkDual2_FWD_DEFINED__
#define __IShellLinkDual2_FWD_DEFINED__
typedef interface IShellLinkDual2 IShellLinkDual2;
#endif 	/* __IShellLinkDual2_FWD_DEFINED__ */


#ifndef __ShellLinkObject_FWD_DEFINED__
#define __ShellLinkObject_FWD_DEFINED__

#ifdef __cplusplus
typedef class ShellLinkObject ShellLinkObject;
#else
typedef struct ShellLinkObject ShellLinkObject;
#endif /* __cplusplus */

#endif 	/* __ShellLinkObject_FWD_DEFINED__ */


#ifndef __IShellFolderViewDual_FWD_DEFINED__
#define __IShellFolderViewDual_FWD_DEFINED__
typedef interface IShellFolderViewDual IShellFolderViewDual;
#endif 	/* __IShellFolderViewDual_FWD_DEFINED__ */


#ifndef __IShellFolderViewDual2_FWD_DEFINED__
#define __IShellFolderViewDual2_FWD_DEFINED__
typedef interface IShellFolderViewDual2 IShellFolderViewDual2;
#endif 	/* __IShellFolderViewDual2_FWD_DEFINED__ */


#ifndef __ShellFolderView_FWD_DEFINED__
#define __ShellFolderView_FWD_DEFINED__

#ifdef __cplusplus
typedef class ShellFolderView ShellFolderView;
#else
typedef struct ShellFolderView ShellFolderView;
#endif /* __cplusplus */

#endif 	/* __ShellFolderView_FWD_DEFINED__ */


#ifndef __IShellDispatch_FWD_DEFINED__
#define __IShellDispatch_FWD_DEFINED__
typedef interface IShellDispatch IShellDispatch;
#endif 	/* __IShellDispatch_FWD_DEFINED__ */


#ifndef __IShellDispatch2_FWD_DEFINED__
#define __IShellDispatch2_FWD_DEFINED__
typedef interface IShellDispatch2 IShellDispatch2;
#endif 	/* __IShellDispatch2_FWD_DEFINED__ */


#ifndef __IShellDispatch3_FWD_DEFINED__
#define __IShellDispatch3_FWD_DEFINED__
typedef interface IShellDispatch3 IShellDispatch3;
#endif 	/* __IShellDispatch3_FWD_DEFINED__ */


#ifndef __IShellDispatch4_FWD_DEFINED__
#define __IShellDispatch4_FWD_DEFINED__
typedef interface IShellDispatch4 IShellDispatch4;
#endif 	/* __IShellDispatch4_FWD_DEFINED__ */


#ifndef __Shell_FWD_DEFINED__
#define __Shell_FWD_DEFINED__

#ifdef __cplusplus
typedef class Shell Shell;
#else
typedef struct Shell Shell;
#endif /* __cplusplus */

#endif 	/* __Shell_FWD_DEFINED__ */


#ifndef __ShellDispatchInproc_FWD_DEFINED__
#define __ShellDispatchInproc_FWD_DEFINED__

#ifdef __cplusplus
typedef class ShellDispatchInproc ShellDispatchInproc;
#else
typedef struct ShellDispatchInproc ShellDispatchInproc;
#endif /* __cplusplus */

#endif 	/* __ShellDispatchInproc_FWD_DEFINED__ */


#ifndef __WebViewFolderContents_FWD_DEFINED__
#define __WebViewFolderContents_FWD_DEFINED__

#ifdef __cplusplus
typedef class WebViewFolderContents WebViewFolderContents;
#else
typedef struct WebViewFolderContents WebViewFolderContents;
#endif /* __cplusplus */

#endif 	/* __WebViewFolderContents_FWD_DEFINED__ */


#ifndef __DSearchCommandEvents_FWD_DEFINED__
#define __DSearchCommandEvents_FWD_DEFINED__
typedef interface DSearchCommandEvents DSearchCommandEvents;
#endif 	/* __DSearchCommandEvents_FWD_DEFINED__ */


#ifndef __SearchCommand_FWD_DEFINED__
#define __SearchCommand_FWD_DEFINED__

#ifdef __cplusplus
typedef class SearchCommand SearchCommand;
#else
typedef struct SearchCommand SearchCommand;
#endif /* __cplusplus */

#endif 	/* __SearchCommand_FWD_DEFINED__ */


#ifndef __IFileSearchBand_FWD_DEFINED__
#define __IFileSearchBand_FWD_DEFINED__
typedef interface IFileSearchBand IFileSearchBand;
#endif 	/* __IFileSearchBand_FWD_DEFINED__ */


#ifndef __FileSearchBand_FWD_DEFINED__
#define __FileSearchBand_FWD_DEFINED__

#ifdef __cplusplus
typedef class FileSearchBand FileSearchBand;
#else
typedef struct FileSearchBand FileSearchBand;
#endif /* __cplusplus */

#endif 	/* __FileSearchBand_FWD_DEFINED__ */


#ifndef __IAutoComplete_FWD_DEFINED__
#define __IAutoComplete_FWD_DEFINED__
typedef interface IAutoComplete IAutoComplete;
#endif 	/* __IAutoComplete_FWD_DEFINED__ */


#ifndef __IAutoComplete2_FWD_DEFINED__
#define __IAutoComplete2_FWD_DEFINED__
typedef interface IAutoComplete2 IAutoComplete2;
#endif 	/* __IAutoComplete2_FWD_DEFINED__ */


#ifndef __IEnumACString_FWD_DEFINED__
#define __IEnumACString_FWD_DEFINED__
typedef interface IEnumACString IEnumACString;
#endif 	/* __IEnumACString_FWD_DEFINED__ */


#ifndef __IAsyncOperation_FWD_DEFINED__
#define __IAsyncOperation_FWD_DEFINED__
typedef interface IAsyncOperation IAsyncOperation;
#endif 	/* __IAsyncOperation_FWD_DEFINED__ */


/* header files for imported files */
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 

void * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void * ); 

/* interface __MIDL_itf_shldisp_0000 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_shldisp_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shldisp_0000_v0_0_s_ifspec;


#ifndef __Shell32_LIBRARY_DEFINED__
#define __Shell32_LIBRARY_DEFINED__

/* library Shell32 */
/* [version][lcid][helpstring][uuid] */ 

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("418f4e6a-b903-11d1-b0a6-00c04fc33aa5") 
enum SearchCommandExecuteErrors
    {	SCEE_PATHNOTFOUND	= 1,
	SCEE_MAXFILESFOUND	= SCEE_PATHNOTFOUND + 1,
	SCEE_INDEXSEARCH	= SCEE_MAXFILESFOUND + 1,
	SCEE_CONSTRAINT	= SCEE_INDEXSEARCH + 1,
	SCEE_SCOPEMISMATCH	= SCEE_CONSTRAINT + 1,
	SCEE_CASESENINDEX	= SCEE_SCOPEMISMATCH + 1,
	SCEE_INDEXNOTCOMPLETE	= SCEE_CASESENINDEX + 1
    } 	SearchCommandExecuteErrors;





typedef /* [helpstring][uuid] */  DECLSPEC_UUID("35f1a0d0-3e9a-11d2-8499-005345000000") 
enum OfflineFolderStatus
    {	OFS_INACTIVE	= -1,
	OFS_ONLINE	= OFS_INACTIVE + 1,
	OFS_OFFLINE	= OFS_ONLINE + 1,
	OFS_SERVERBACK	= OFS_OFFLINE + 1,
	OFS_DIRTYCACHE	= OFS_SERVERBACK + 1
    } 	OfflineFolderStatus;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("742A99A0-C77E-11D0-A32C-00A0C91EEDBA") 
enum ShellFolderViewOptions
    {	SFVVO_SHOWALLOBJECTS	= 0x1,
	SFVVO_SHOWEXTENSIONS	= 0x2,
	SFVVO_SHOWCOMPCOLOR	= 0x8,
	SFVVO_SHOWSYSFILES	= 0x20,
	SFVVO_WIN95CLASSIC	= 0x40,
	SFVVO_DOUBLECLICKINWEBVIEW	= 0x80,
	SFVVO_DESKTOPHTML	= 0x200
    } 	ShellFolderViewOptions;

typedef /* [helpstring][uuid] */  DECLSPEC_UUID("CA31EA20-48D0-11CF-8350-444553540000") 
enum ShellSpecialFolderConstants
    {	ssfDESKTOP	= 0,
	ssfPROGRAMS	= 0x2,
	ssfCONTROLS	= 0x3,
	ssfPRINTERS	= 0x4,
	ssfPERSONAL	= 0x5,
	ssfFAVORITES	= 0x6,
	ssfSTARTUP	= 0x7,
	ssfRECENT	= 0x8,
	ssfSENDTO	= 0x9,
	ssfBITBUCKET	= 0xa,
	ssfSTARTMENU	= 0xb,
	ssfDESKTOPDIRECTORY	= 0x10,
	ssfDRIVES	= 0x11,
	ssfNETWORK	= 0x12,
	ssfNETHOOD	= 0x13,
	ssfFONTS	= 0x14,
	ssfTEMPLATES	= 0x15,
	ssfCOMMONSTARTMENU	= 0x16,
	ssfCOMMONPROGRAMS	= 0x17,
	ssfCOMMONSTARTUP	= 0x18,
	ssfCOMMONDESKTOPDIR	= 0x19,
	ssfAPPDATA	= 0x1a,
	ssfPRINTHOOD	= 0x1b,
	ssfLOCALAPPDATA	= 0x1c,
	ssfALTSTARTUP	= 0x1d,
	ssfCOMMONALTSTARTUP	= 0x1e,
	ssfCOMMONFAVORITES	= 0x1f,
	ssfINTERNETCACHE	= 0x20,
	ssfCOOKIES	= 0x21,
	ssfHISTORY	= 0x22,
	ssfCOMMONAPPDATA	= 0x23,
	ssfWINDOWS	= 0x24,
	ssfSYSTEM	= 0x25,
	ssfPROGRAMFILES	= 0x26,
	ssfMYPICTURES	= 0x27,
	ssfPROFILE	= 0x28,
	ssfSYSTEMx86	= 0x29,
	ssfPROGRAMFILESx86	= 0x30
    } 	ShellSpecialFolderConstants;


EXTERN_C const IID LIBID_Shell32;

#ifndef __IFolderViewOC_INTERFACE_DEFINED__
#define __IFolderViewOC_INTERFACE_DEFINED__

/* interface IFolderViewOC */
/* [object][dual][oleautomation][hidden][helpcontext][helpstring][uuid] */ 


EXTERN_C const IID IID_IFolderViewOC;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9BA05970-F6A8-11CF-A442-00A0C90A8F39")
    IFolderViewOC : public IDispatch
    {
    public:
        virtual /* [helpcontext][helpstring] */ HRESULT STDMETHODCALLTYPE SetFolderView( 
            /* [in] */ IDispatch *pdisp) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFolderViewOCVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IFolderViewOC * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IFolderViewOC * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IFolderViewOC * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IFolderViewOC * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IFolderViewOC * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IFolderViewOC * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IFolderViewOC * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetFolderView )( 
            IFolderViewOC * This,
            /* [in] */ IDispatch *pdisp);
        
        END_INTERFACE
    } IFolderViewOCVtbl;

    interface IFolderViewOC
    {
        CONST_VTBL struct IFolderViewOCVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFolderViewOC_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFolderViewOC_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFolderViewOC_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFolderViewOC_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IFolderViewOC_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IFolderViewOC_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IFolderViewOC_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IFolderViewOC_SetFolderView(This,pdisp)	\
    (This)->lpVtbl -> SetFolderView(This,pdisp)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring] */ HRESULT STDMETHODCALLTYPE IFolderViewOC_SetFolderView_Proxy( 
    IFolderViewOC * This,
    /* [in] */ IDispatch *pdisp);


void __RPC_STUB IFolderViewOC_SetFolderView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFolderViewOC_INTERFACE_DEFINED__ */


#ifndef __DShellFolderViewEvents_DISPINTERFACE_DEFINED__
#define __DShellFolderViewEvents_DISPINTERFACE_DEFINED__

/* dispinterface DShellFolderViewEvents */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID_DShellFolderViewEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("62112AA2-EBE4-11cf-A5FB-0020AFE7292D")
    DShellFolderViewEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DShellFolderViewEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DShellFolderViewEvents * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DShellFolderViewEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DShellFolderViewEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DShellFolderViewEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DShellFolderViewEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DShellFolderViewEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DShellFolderViewEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DShellFolderViewEventsVtbl;

    interface DShellFolderViewEvents
    {
        CONST_VTBL struct DShellFolderViewEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DShellFolderViewEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DShellFolderViewEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DShellFolderViewEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DShellFolderViewEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DShellFolderViewEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DShellFolderViewEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DShellFolderViewEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DShellFolderViewEvents_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_ShellFolderViewOC;

#ifdef __cplusplus

class DECLSPEC_UUID("9BA05971-F6A8-11CF-A442-00A0C90A8F39")
ShellFolderViewOC;
#endif

#ifndef __DFConstraint_INTERFACE_DEFINED__
#define __DFConstraint_INTERFACE_DEFINED__

/* interface DFConstraint */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_DFConstraint;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4a3df050-23bd-11d2-939f-00a0c91eedba")
    DFConstraint : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *pv) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct DFConstraintVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DFConstraint * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DFConstraint * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DFConstraint * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DFConstraint * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DFConstraint * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DFConstraint * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DFConstraint * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            DFConstraint * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            DFConstraint * This,
            /* [retval][out] */ VARIANT *pv);
        
        END_INTERFACE
    } DFConstraintVtbl;

    interface DFConstraint
    {
        CONST_VTBL struct DFConstraintVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DFConstraint_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DFConstraint_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DFConstraint_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DFConstraint_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DFConstraint_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DFConstraint_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DFConstraint_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define DFConstraint_get_Name(This,pbs)	\
    (This)->lpVtbl -> get_Name(This,pbs)

#define DFConstraint_get_Value(This,pv)	\
    (This)->lpVtbl -> get_Value(This,pv)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE DFConstraint_get_Name_Proxy( 
    DFConstraint * This,
    /* [retval][out] */ BSTR *pbs);


void __RPC_STUB DFConstraint_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE DFConstraint_get_Value_Proxy( 
    DFConstraint * This,
    /* [retval][out] */ VARIANT *pv);


void __RPC_STUB DFConstraint_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __DFConstraint_INTERFACE_DEFINED__ */


#ifndef __ISearchCommandExt_INTERFACE_DEFINED__
#define __ISearchCommandExt_INTERFACE_DEFINED__

/* interface ISearchCommandExt */
/* [object][oleautomation][dual][helpstring][uuid] */ 

typedef /* [public][helpstring][id] */ 
enum __MIDL_ISearchCommandExt_0001
    {	SCE_SEARCHFORFILES	= 0,
	SCE_SEARCHFORCOMPUTERS	= 1
    } 	SEARCH_FOR_TYPE;


EXTERN_C const IID IID_ISearchCommandExt;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1D2EFD50-75CE-11d1-B75A-00A0C90564FE")
    ISearchCommandExt : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ClearResults( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE NavigateToSearchResults( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProgressText( 
            /* [retval][out] */ BSTR *pbs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveSearch( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetErrorInfo( 
            /* [out] */ BSTR *pbs,
            /* [retval][out] */ int *phr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SearchFor( 
            /* [in] */ int iFor) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetScopeInfo( 
            /* [in] */ BSTR bsScope,
            /* [out] */ int *pdwScopeInfo) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RestoreSavedSearch( 
            /* [in] */ VARIANT *pvarFile) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Execute( 
            /* [optional][in] */ VARIANT *RecordsAffected,
            /* [optional][in] */ VARIANT *Parameters,
            /* [optional][in] */ long Options) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddConstraint( 
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetNextConstraint( 
            /* [in] */ VARIANT_BOOL fReset,
            /* [retval][out] */ DFConstraint **ppdfc) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISearchCommandExtVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISearchCommandExt * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISearchCommandExt * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISearchCommandExt * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISearchCommandExt * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISearchCommandExt * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISearchCommandExt * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISearchCommandExt * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ClearResults )( 
            ISearchCommandExt * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *NavigateToSearchResults )( 
            ISearchCommandExt * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProgressText )( 
            ISearchCommandExt * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveSearch )( 
            ISearchCommandExt * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetErrorInfo )( 
            ISearchCommandExt * This,
            /* [out] */ BSTR *pbs,
            /* [retval][out] */ int *phr);
        
        HRESULT ( STDMETHODCALLTYPE *SearchFor )( 
            ISearchCommandExt * This,
            /* [in] */ int iFor);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetScopeInfo )( 
            ISearchCommandExt * This,
            /* [in] */ BSTR bsScope,
            /* [out] */ int *pdwScopeInfo);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RestoreSavedSearch )( 
            ISearchCommandExt * This,
            /* [in] */ VARIANT *pvarFile);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            ISearchCommandExt * This,
            /* [optional][in] */ VARIANT *RecordsAffected,
            /* [optional][in] */ VARIANT *Parameters,
            /* [optional][in] */ long Options);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddConstraint )( 
            ISearchCommandExt * This,
            /* [in] */ BSTR Name,
            /* [in] */ VARIANT Value);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetNextConstraint )( 
            ISearchCommandExt * This,
            /* [in] */ VARIANT_BOOL fReset,
            /* [retval][out] */ DFConstraint **ppdfc);
        
        END_INTERFACE
    } ISearchCommandExtVtbl;

    interface ISearchCommandExt
    {
        CONST_VTBL struct ISearchCommandExtVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISearchCommandExt_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ISearchCommandExt_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ISearchCommandExt_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ISearchCommandExt_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define ISearchCommandExt_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define ISearchCommandExt_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define ISearchCommandExt_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define ISearchCommandExt_ClearResults(This)	\
    (This)->lpVtbl -> ClearResults(This)

#define ISearchCommandExt_NavigateToSearchResults(This)	\
    (This)->lpVtbl -> NavigateToSearchResults(This)

#define ISearchCommandExt_get_ProgressText(This,pbs)	\
    (This)->lpVtbl -> get_ProgressText(This,pbs)

#define ISearchCommandExt_SaveSearch(This)	\
    (This)->lpVtbl -> SaveSearch(This)

#define ISearchCommandExt_GetErrorInfo(This,pbs,phr)	\
    (This)->lpVtbl -> GetErrorInfo(This,pbs,phr)

#define ISearchCommandExt_SearchFor(This,iFor)	\
    (This)->lpVtbl -> SearchFor(This,iFor)

#define ISearchCommandExt_GetScopeInfo(This,bsScope,pdwScopeInfo)	\
    (This)->lpVtbl -> GetScopeInfo(This,bsScope,pdwScopeInfo)

#define ISearchCommandExt_RestoreSavedSearch(This,pvarFile)	\
    (This)->lpVtbl -> RestoreSavedSearch(This,pvarFile)

#define ISearchCommandExt_Execute(This,RecordsAffected,Parameters,Options)	\
    (This)->lpVtbl -> Execute(This,RecordsAffected,Parameters,Options)

#define ISearchCommandExt_AddConstraint(This,Name,Value)	\
    (This)->lpVtbl -> AddConstraint(This,Name,Value)

#define ISearchCommandExt_GetNextConstraint(This,fReset,ppdfc)	\
    (This)->lpVtbl -> GetNextConstraint(This,fReset,ppdfc)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISearchCommandExt_ClearResults_Proxy( 
    ISearchCommandExt * This);


void __RPC_STUB ISearchCommandExt_ClearResults_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISearchCommandExt_NavigateToSearchResults_Proxy( 
    ISearchCommandExt * This);


void __RPC_STUB ISearchCommandExt_NavigateToSearchResults_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISearchCommandExt_get_ProgressText_Proxy( 
    ISearchCommandExt * This,
    /* [retval][out] */ BSTR *pbs);


void __RPC_STUB ISearchCommandExt_get_ProgressText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISearchCommandExt_SaveSearch_Proxy( 
    ISearchCommandExt * This);


void __RPC_STUB ISearchCommandExt_SaveSearch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISearchCommandExt_GetErrorInfo_Proxy( 
    ISearchCommandExt * This,
    /* [out] */ BSTR *pbs,
    /* [retval][out] */ int *phr);


void __RPC_STUB ISearchCommandExt_GetErrorInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISearchCommandExt_SearchFor_Proxy( 
    ISearchCommandExt * This,
    /* [in] */ int iFor);


void __RPC_STUB ISearchCommandExt_SearchFor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISearchCommandExt_GetScopeInfo_Proxy( 
    ISearchCommandExt * This,
    /* [in] */ BSTR bsScope,
    /* [out] */ int *pdwScopeInfo);


void __RPC_STUB ISearchCommandExt_GetScopeInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISearchCommandExt_RestoreSavedSearch_Proxy( 
    ISearchCommandExt * This,
    /* [in] */ VARIANT *pvarFile);


void __RPC_STUB ISearchCommandExt_RestoreSavedSearch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISearchCommandExt_Execute_Proxy( 
    ISearchCommandExt * This,
    /* [optional][in] */ VARIANT *RecordsAffected,
    /* [optional][in] */ VARIANT *Parameters,
    /* [optional][in] */ long Options);


void __RPC_STUB ISearchCommandExt_Execute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISearchCommandExt_AddConstraint_Proxy( 
    ISearchCommandExt * This,
    /* [in] */ BSTR Name,
    /* [in] */ VARIANT Value);


void __RPC_STUB ISearchCommandExt_AddConstraint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISearchCommandExt_GetNextConstraint_Proxy( 
    ISearchCommandExt * This,
    /* [in] */ VARIANT_BOOL fReset,
    /* [retval][out] */ DFConstraint **ppdfc);


void __RPC_STUB ISearchCommandExt_GetNextConstraint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISearchCommandExt_INTERFACE_DEFINED__ */


#ifndef __FolderItem_INTERFACE_DEFINED__
#define __FolderItem_INTERFACE_DEFINED__

/* interface FolderItem */
/* [object][dual][oleautomation][helpstring][uuid] */ 

typedef /* [unique] */ FolderItem *LPFOLDERITEM;


EXTERN_C const IID IID_FolderItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FAC32C80-CBE4-11CE-8350-444553540000")
    FolderItem : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbs) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [retval][out] */ BSTR *pbs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_GetLink( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_GetFolder( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsLink( 
            /* [retval][out] */ VARIANT_BOOL *pb) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsFolder( 
            /* [retval][out] */ VARIANT_BOOL *pb) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsFileSystem( 
            /* [retval][out] */ VARIANT_BOOL *pb) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IsBrowsable( 
            /* [retval][out] */ VARIANT_BOOL *pb) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ModifyDate( 
            /* [retval][out] */ DATE *pdt) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ModifyDate( 
            /* [in] */ DATE dt) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ LONG *pul) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ BSTR *pbs) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Verbs( 
            /* [retval][out] */ FolderItemVerbs **ppfic) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InvokeVerb( 
            /* [optional][in] */ VARIANT vVerb) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FolderItem * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FolderItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FolderItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FolderItem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FolderItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FolderItem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FolderItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FolderItem * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FolderItem * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            FolderItem * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            FolderItem * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            FolderItem * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_GetLink )( 
            FolderItem * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_GetFolder )( 
            FolderItem * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLink )( 
            FolderItem * This,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsFolder )( 
            FolderItem * This,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsFileSystem )( 
            FolderItem * This,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsBrowsable )( 
            FolderItem * This,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ModifyDate )( 
            FolderItem * This,
            /* [retval][out] */ DATE *pdt);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ModifyDate )( 
            FolderItem * This,
            /* [in] */ DATE dt);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            FolderItem * This,
            /* [retval][out] */ LONG *pul);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            FolderItem * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Verbs )( 
            FolderItem * This,
            /* [retval][out] */ FolderItemVerbs **ppfic);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InvokeVerb )( 
            FolderItem * This,
            /* [optional][in] */ VARIANT vVerb);
        
        END_INTERFACE
    } FolderItemVtbl;

    interface FolderItem
    {
        CONST_VTBL struct FolderItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FolderItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define FolderItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define FolderItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define FolderItem_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define FolderItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define FolderItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define FolderItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define FolderItem_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define FolderItem_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define FolderItem_get_Name(This,pbs)	\
    (This)->lpVtbl -> get_Name(This,pbs)

#define FolderItem_put_Name(This,bs)	\
    (This)->lpVtbl -> put_Name(This,bs)

#define FolderItem_get_Path(This,pbs)	\
    (This)->lpVtbl -> get_Path(This,pbs)

#define FolderItem_get_GetLink(This,ppid)	\
    (This)->lpVtbl -> get_GetLink(This,ppid)

#define FolderItem_get_GetFolder(This,ppid)	\
    (This)->lpVtbl -> get_GetFolder(This,ppid)

#define FolderItem_get_IsLink(This,pb)	\
    (This)->lpVtbl -> get_IsLink(This,pb)

#define FolderItem_get_IsFolder(This,pb)	\
    (This)->lpVtbl -> get_IsFolder(This,pb)

#define FolderItem_get_IsFileSystem(This,pb)	\
    (This)->lpVtbl -> get_IsFileSystem(This,pb)

#define FolderItem_get_IsBrowsable(This,pb)	\
    (This)->lpVtbl -> get_IsBrowsable(This,pb)

#define FolderItem_get_ModifyDate(This,pdt)	\
    (This)->lpVtbl -> get_ModifyDate(This,pdt)

#define FolderItem_put_ModifyDate(This,dt)	\
    (This)->lpVtbl -> put_ModifyDate(This,dt)

#define FolderItem_get_Size(This,pul)	\
    (This)->lpVtbl -> get_Size(This,pul)

#define FolderItem_get_Type(This,pbs)	\
    (This)->lpVtbl -> get_Type(This,pbs)

#define FolderItem_Verbs(This,ppfic)	\
    (This)->lpVtbl -> Verbs(This,ppfic)

#define FolderItem_InvokeVerb(This,vVerb)	\
    (This)->lpVtbl -> InvokeVerb(This,vVerb)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItem_get_Application_Proxy( 
    FolderItem * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB FolderItem_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItem_get_Parent_Proxy( 
    FolderItem * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB FolderItem_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE FolderItem_get_Name_Proxy( 
    FolderItem * This,
    /* [retval][out] */ BSTR *pbs);


void __RPC_STUB FolderItem_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE FolderItem_put_Name_Proxy( 
    FolderItem * This,
    /* [in] */ BSTR bs);


void __RPC_STUB FolderItem_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItem_get_Path_Proxy( 
    FolderItem * This,
    /* [retval][out] */ BSTR *pbs);


void __RPC_STUB FolderItem_get_Path_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItem_get_GetLink_Proxy( 
    FolderItem * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB FolderItem_get_GetLink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItem_get_GetFolder_Proxy( 
    FolderItem * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB FolderItem_get_GetFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItem_get_IsLink_Proxy( 
    FolderItem * This,
    /* [retval][out] */ VARIANT_BOOL *pb);


void __RPC_STUB FolderItem_get_IsLink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItem_get_IsFolder_Proxy( 
    FolderItem * This,
    /* [retval][out] */ VARIANT_BOOL *pb);


void __RPC_STUB FolderItem_get_IsFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItem_get_IsFileSystem_Proxy( 
    FolderItem * This,
    /* [retval][out] */ VARIANT_BOOL *pb);


void __RPC_STUB FolderItem_get_IsFileSystem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItem_get_IsBrowsable_Proxy( 
    FolderItem * This,
    /* [retval][out] */ VARIANT_BOOL *pb);


void __RPC_STUB FolderItem_get_IsBrowsable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItem_get_ModifyDate_Proxy( 
    FolderItem * This,
    /* [retval][out] */ DATE *pdt);


void __RPC_STUB FolderItem_get_ModifyDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE FolderItem_put_ModifyDate_Proxy( 
    FolderItem * This,
    /* [in] */ DATE dt);


void __RPC_STUB FolderItem_put_ModifyDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItem_get_Size_Proxy( 
    FolderItem * This,
    /* [retval][out] */ LONG *pul);


void __RPC_STUB FolderItem_get_Size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItem_get_Type_Proxy( 
    FolderItem * This,
    /* [retval][out] */ BSTR *pbs);


void __RPC_STUB FolderItem_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItem_Verbs_Proxy( 
    FolderItem * This,
    /* [retval][out] */ FolderItemVerbs **ppfic);


void __RPC_STUB FolderItem_Verbs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItem_InvokeVerb_Proxy( 
    FolderItem * This,
    /* [optional][in] */ VARIANT vVerb);


void __RPC_STUB FolderItem_InvokeVerb_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __FolderItem_INTERFACE_DEFINED__ */


#ifndef __FolderItems_INTERFACE_DEFINED__
#define __FolderItems_INTERFACE_DEFINED__

/* interface FolderItems */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_FolderItems;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("744129E0-CBE5-11CE-8350-444553540000")
    FolderItems : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [optional][in] */ VARIANT index,
            /* [retval][out] */ FolderItem **ppid) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ IUnknown **ppunk) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FolderItems * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FolderItems * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FolderItems * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FolderItems * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FolderItems * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FolderItems * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FolderItems * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            FolderItems * This,
            /* [retval][out] */ long *plCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FolderItems * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FolderItems * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            FolderItems * This,
            /* [optional][in] */ VARIANT index,
            /* [retval][out] */ FolderItem **ppid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            FolderItems * This,
            /* [retval][out] */ IUnknown **ppunk);
        
        END_INTERFACE
    } FolderItemsVtbl;

    interface FolderItems
    {
        CONST_VTBL struct FolderItemsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FolderItems_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define FolderItems_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define FolderItems_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define FolderItems_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define FolderItems_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define FolderItems_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define FolderItems_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define FolderItems_get_Count(This,plCount)	\
    (This)->lpVtbl -> get_Count(This,plCount)

#define FolderItems_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define FolderItems_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define FolderItems_Item(This,index,ppid)	\
    (This)->lpVtbl -> Item(This,index,ppid)

#define FolderItems__NewEnum(This,ppunk)	\
    (This)->lpVtbl -> _NewEnum(This,ppunk)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItems_get_Count_Proxy( 
    FolderItems * This,
    /* [retval][out] */ long *plCount);


void __RPC_STUB FolderItems_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItems_get_Application_Proxy( 
    FolderItems * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB FolderItems_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItems_get_Parent_Proxy( 
    FolderItems * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB FolderItems_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItems_Item_Proxy( 
    FolderItems * This,
    /* [optional][in] */ VARIANT index,
    /* [retval][out] */ FolderItem **ppid);


void __RPC_STUB FolderItems_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FolderItems__NewEnum_Proxy( 
    FolderItems * This,
    /* [retval][out] */ IUnknown **ppunk);


void __RPC_STUB FolderItems__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __FolderItems_INTERFACE_DEFINED__ */


#ifndef __FolderItemVerb_INTERFACE_DEFINED__
#define __FolderItemVerb_INTERFACE_DEFINED__

/* interface FolderItemVerb */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_FolderItemVerb;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("08EC3E00-50B0-11CF-960C-0080C7F4EE85")
    FolderItemVerb : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbs) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DoIt( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderItemVerbVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FolderItemVerb * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FolderItemVerb * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FolderItemVerb * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FolderItemVerb * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FolderItemVerb * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FolderItemVerb * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FolderItemVerb * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FolderItemVerb * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FolderItemVerb * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            FolderItemVerb * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DoIt )( 
            FolderItemVerb * This);
        
        END_INTERFACE
    } FolderItemVerbVtbl;

    interface FolderItemVerb
    {
        CONST_VTBL struct FolderItemVerbVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FolderItemVerb_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define FolderItemVerb_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define FolderItemVerb_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define FolderItemVerb_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define FolderItemVerb_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define FolderItemVerb_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define FolderItemVerb_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define FolderItemVerb_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define FolderItemVerb_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define FolderItemVerb_get_Name(This,pbs)	\
    (This)->lpVtbl -> get_Name(This,pbs)

#define FolderItemVerb_DoIt(This)	\
    (This)->lpVtbl -> DoIt(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItemVerb_get_Application_Proxy( 
    FolderItemVerb * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB FolderItemVerb_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItemVerb_get_Parent_Proxy( 
    FolderItemVerb * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB FolderItemVerb_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE FolderItemVerb_get_Name_Proxy( 
    FolderItemVerb * This,
    /* [retval][out] */ BSTR *pbs);


void __RPC_STUB FolderItemVerb_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItemVerb_DoIt_Proxy( 
    FolderItemVerb * This);


void __RPC_STUB FolderItemVerb_DoIt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __FolderItemVerb_INTERFACE_DEFINED__ */


#ifndef __FolderItemVerbs_INTERFACE_DEFINED__
#define __FolderItemVerbs_INTERFACE_DEFINED__

/* interface FolderItemVerbs */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_FolderItemVerbs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1F8352C0-50B0-11CF-960C-0080C7F4EE85")
    FolderItemVerbs : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [optional][in] */ VARIANT index,
            /* [retval][out] */ FolderItemVerb **ppid) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ IUnknown **ppunk) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderItemVerbsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FolderItemVerbs * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FolderItemVerbs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FolderItemVerbs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FolderItemVerbs * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FolderItemVerbs * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FolderItemVerbs * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FolderItemVerbs * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            FolderItemVerbs * This,
            /* [retval][out] */ long *plCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FolderItemVerbs * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FolderItemVerbs * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            FolderItemVerbs * This,
            /* [optional][in] */ VARIANT index,
            /* [retval][out] */ FolderItemVerb **ppid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            FolderItemVerbs * This,
            /* [retval][out] */ IUnknown **ppunk);
        
        END_INTERFACE
    } FolderItemVerbsVtbl;

    interface FolderItemVerbs
    {
        CONST_VTBL struct FolderItemVerbsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FolderItemVerbs_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define FolderItemVerbs_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define FolderItemVerbs_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define FolderItemVerbs_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define FolderItemVerbs_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define FolderItemVerbs_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define FolderItemVerbs_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define FolderItemVerbs_get_Count(This,plCount)	\
    (This)->lpVtbl -> get_Count(This,plCount)

#define FolderItemVerbs_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define FolderItemVerbs_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define FolderItemVerbs_Item(This,index,ppid)	\
    (This)->lpVtbl -> Item(This,index,ppid)

#define FolderItemVerbs__NewEnum(This,ppunk)	\
    (This)->lpVtbl -> _NewEnum(This,ppunk)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItemVerbs_get_Count_Proxy( 
    FolderItemVerbs * This,
    /* [retval][out] */ long *plCount);


void __RPC_STUB FolderItemVerbs_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItemVerbs_get_Application_Proxy( 
    FolderItemVerbs * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB FolderItemVerbs_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE FolderItemVerbs_get_Parent_Proxy( 
    FolderItemVerbs * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB FolderItemVerbs_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItemVerbs_Item_Proxy( 
    FolderItemVerbs * This,
    /* [optional][in] */ VARIANT index,
    /* [retval][out] */ FolderItemVerb **ppid);


void __RPC_STUB FolderItemVerbs_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FolderItemVerbs__NewEnum_Proxy( 
    FolderItemVerbs * This,
    /* [retval][out] */ IUnknown **ppunk);


void __RPC_STUB FolderItemVerbs__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __FolderItemVerbs_INTERFACE_DEFINED__ */


#ifndef __Folder_INTERFACE_DEFINED__
#define __Folder_INTERFACE_DEFINED__

/* interface Folder */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_Folder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BBCBDE60-C3FF-11CE-8350-444553540000")
    Folder : public IDispatch
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Title( 
            /* [retval][out] */ BSTR *pbs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParentFolder( 
            /* [retval][out] */ Folder **ppsf) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Items( 
            /* [retval][out] */ FolderItems **ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ParseName( 
            /* [in] */ BSTR bName,
            /* [retval][out] */ FolderItem **ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE NewFolder( 
            /* [in] */ BSTR bName,
            /* [optional][in] */ VARIANT vOptions) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MoveHere( 
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CopyHere( 
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetDetailsOf( 
            /* [in] */ VARIANT vItem,
            /* [in] */ int iColumn,
            /* [retval][out] */ BSTR *pbs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Folder * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Folder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Folder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Folder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Folder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Folder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Folder * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            Folder * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Folder * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Folder * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentFolder )( 
            Folder * This,
            /* [retval][out] */ Folder **ppsf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Items )( 
            Folder * This,
            /* [retval][out] */ FolderItems **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ParseName )( 
            Folder * This,
            /* [in] */ BSTR bName,
            /* [retval][out] */ FolderItem **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *NewFolder )( 
            Folder * This,
            /* [in] */ BSTR bName,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MoveHere )( 
            Folder * This,
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CopyHere )( 
            Folder * This,
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetDetailsOf )( 
            Folder * This,
            /* [in] */ VARIANT vItem,
            /* [in] */ int iColumn,
            /* [retval][out] */ BSTR *pbs);
        
        END_INTERFACE
    } FolderVtbl;

    interface Folder
    {
        CONST_VTBL struct FolderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Folder_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define Folder_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define Folder_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define Folder_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define Folder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define Folder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define Folder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define Folder_get_Title(This,pbs)	\
    (This)->lpVtbl -> get_Title(This,pbs)

#define Folder_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define Folder_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define Folder_get_ParentFolder(This,ppsf)	\
    (This)->lpVtbl -> get_ParentFolder(This,ppsf)

#define Folder_Items(This,ppid)	\
    (This)->lpVtbl -> Items(This,ppid)

#define Folder_ParseName(This,bName,ppid)	\
    (This)->lpVtbl -> ParseName(This,bName,ppid)

#define Folder_NewFolder(This,bName,vOptions)	\
    (This)->lpVtbl -> NewFolder(This,bName,vOptions)

#define Folder_MoveHere(This,vItem,vOptions)	\
    (This)->lpVtbl -> MoveHere(This,vItem,vOptions)

#define Folder_CopyHere(This,vItem,vOptions)	\
    (This)->lpVtbl -> CopyHere(This,vItem,vOptions)

#define Folder_GetDetailsOf(This,vItem,iColumn,pbs)	\
    (This)->lpVtbl -> GetDetailsOf(This,vItem,iColumn,pbs)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Folder_get_Title_Proxy( 
    Folder * This,
    /* [retval][out] */ BSTR *pbs);


void __RPC_STUB Folder_get_Title_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE Folder_get_Application_Proxy( 
    Folder * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB Folder_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE Folder_get_Parent_Proxy( 
    Folder * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB Folder_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE Folder_get_ParentFolder_Proxy( 
    Folder * This,
    /* [retval][out] */ Folder **ppsf);


void __RPC_STUB Folder_get_ParentFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder_Items_Proxy( 
    Folder * This,
    /* [retval][out] */ FolderItems **ppid);


void __RPC_STUB Folder_Items_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder_ParseName_Proxy( 
    Folder * This,
    /* [in] */ BSTR bName,
    /* [retval][out] */ FolderItem **ppid);


void __RPC_STUB Folder_ParseName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder_NewFolder_Proxy( 
    Folder * This,
    /* [in] */ BSTR bName,
    /* [optional][in] */ VARIANT vOptions);


void __RPC_STUB Folder_NewFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder_MoveHere_Proxy( 
    Folder * This,
    /* [in] */ VARIANT vItem,
    /* [optional][in] */ VARIANT vOptions);


void __RPC_STUB Folder_MoveHere_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder_CopyHere_Proxy( 
    Folder * This,
    /* [in] */ VARIANT vItem,
    /* [optional][in] */ VARIANT vOptions);


void __RPC_STUB Folder_CopyHere_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder_GetDetailsOf_Proxy( 
    Folder * This,
    /* [in] */ VARIANT vItem,
    /* [in] */ int iColumn,
    /* [retval][out] */ BSTR *pbs);


void __RPC_STUB Folder_GetDetailsOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __Folder_INTERFACE_DEFINED__ */


#ifndef __Folder2_INTERFACE_DEFINED__
#define __Folder2_INTERFACE_DEFINED__

/* interface Folder2 */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_Folder2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f0d2d8ef-3890-11d2-bf8b-00c04fb93661")
    Folder2 : public Folder
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Self( 
            /* [retval][out] */ FolderItem **ppfi) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_OfflineStatus( 
            /* [retval][out] */ LONG *pul) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Synchronize( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_HaveToShowWebViewBarricade( 
            /* [retval][out] */ VARIANT_BOOL *pbHaveToShowWebViewBarricade) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DismissedWebViewBarricade( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Folder2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Folder2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Folder2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Folder2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Folder2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Folder2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Folder2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Folder2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            Folder2 * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Folder2 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Folder2 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentFolder )( 
            Folder2 * This,
            /* [retval][out] */ Folder **ppsf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Items )( 
            Folder2 * This,
            /* [retval][out] */ FolderItems **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ParseName )( 
            Folder2 * This,
            /* [in] */ BSTR bName,
            /* [retval][out] */ FolderItem **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *NewFolder )( 
            Folder2 * This,
            /* [in] */ BSTR bName,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MoveHere )( 
            Folder2 * This,
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CopyHere )( 
            Folder2 * This,
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetDetailsOf )( 
            Folder2 * This,
            /* [in] */ VARIANT vItem,
            /* [in] */ int iColumn,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Self )( 
            Folder2 * This,
            /* [retval][out] */ FolderItem **ppfi);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OfflineStatus )( 
            Folder2 * This,
            /* [retval][out] */ LONG *pul);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Synchronize )( 
            Folder2 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HaveToShowWebViewBarricade )( 
            Folder2 * This,
            /* [retval][out] */ VARIANT_BOOL *pbHaveToShowWebViewBarricade);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DismissedWebViewBarricade )( 
            Folder2 * This);
        
        END_INTERFACE
    } Folder2Vtbl;

    interface Folder2
    {
        CONST_VTBL struct Folder2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Folder2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define Folder2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define Folder2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define Folder2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define Folder2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define Folder2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define Folder2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define Folder2_get_Title(This,pbs)	\
    (This)->lpVtbl -> get_Title(This,pbs)

#define Folder2_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define Folder2_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define Folder2_get_ParentFolder(This,ppsf)	\
    (This)->lpVtbl -> get_ParentFolder(This,ppsf)

#define Folder2_Items(This,ppid)	\
    (This)->lpVtbl -> Items(This,ppid)

#define Folder2_ParseName(This,bName,ppid)	\
    (This)->lpVtbl -> ParseName(This,bName,ppid)

#define Folder2_NewFolder(This,bName,vOptions)	\
    (This)->lpVtbl -> NewFolder(This,bName,vOptions)

#define Folder2_MoveHere(This,vItem,vOptions)	\
    (This)->lpVtbl -> MoveHere(This,vItem,vOptions)

#define Folder2_CopyHere(This,vItem,vOptions)	\
    (This)->lpVtbl -> CopyHere(This,vItem,vOptions)

#define Folder2_GetDetailsOf(This,vItem,iColumn,pbs)	\
    (This)->lpVtbl -> GetDetailsOf(This,vItem,iColumn,pbs)


#define Folder2_get_Self(This,ppfi)	\
    (This)->lpVtbl -> get_Self(This,ppfi)

#define Folder2_get_OfflineStatus(This,pul)	\
    (This)->lpVtbl -> get_OfflineStatus(This,pul)

#define Folder2_Synchronize(This)	\
    (This)->lpVtbl -> Synchronize(This)

#define Folder2_get_HaveToShowWebViewBarricade(This,pbHaveToShowWebViewBarricade)	\
    (This)->lpVtbl -> get_HaveToShowWebViewBarricade(This,pbHaveToShowWebViewBarricade)

#define Folder2_DismissedWebViewBarricade(This)	\
    (This)->lpVtbl -> DismissedWebViewBarricade(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE Folder2_get_Self_Proxy( 
    Folder2 * This,
    /* [retval][out] */ FolderItem **ppfi);


void __RPC_STUB Folder2_get_Self_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE Folder2_get_OfflineStatus_Proxy( 
    Folder2 * This,
    /* [retval][out] */ LONG *pul);


void __RPC_STUB Folder2_get_OfflineStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder2_Synchronize_Proxy( 
    Folder2 * This);


void __RPC_STUB Folder2_Synchronize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Folder2_get_HaveToShowWebViewBarricade_Proxy( 
    Folder2 * This,
    /* [retval][out] */ VARIANT_BOOL *pbHaveToShowWebViewBarricade);


void __RPC_STUB Folder2_get_HaveToShowWebViewBarricade_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE Folder2_DismissedWebViewBarricade_Proxy( 
    Folder2 * This);


void __RPC_STUB Folder2_DismissedWebViewBarricade_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __Folder2_INTERFACE_DEFINED__ */


#ifndef __Folder3_INTERFACE_DEFINED__
#define __Folder3_INTERFACE_DEFINED__

/* interface Folder3 */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_Folder3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7AE5F64-C4D7-4d7f-9307-4D24EE54B841")
    Folder3 : public Folder2
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowWebViewBarricade( 
            /* [retval][out] */ VARIANT_BOOL *pbShowWebViewBarricade) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowWebViewBarricade( 
            /* [in] */ VARIANT_BOOL bShowWebViewBarricade) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct Folder3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Folder3 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Folder3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Folder3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Folder3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Folder3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Folder3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Folder3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            Folder3 * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Folder3 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Folder3 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentFolder )( 
            Folder3 * This,
            /* [retval][out] */ Folder **ppsf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Items )( 
            Folder3 * This,
            /* [retval][out] */ FolderItems **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ParseName )( 
            Folder3 * This,
            /* [in] */ BSTR bName,
            /* [retval][out] */ FolderItem **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *NewFolder )( 
            Folder3 * This,
            /* [in] */ BSTR bName,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MoveHere )( 
            Folder3 * This,
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CopyHere )( 
            Folder3 * This,
            /* [in] */ VARIANT vItem,
            /* [optional][in] */ VARIANT vOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetDetailsOf )( 
            Folder3 * This,
            /* [in] */ VARIANT vItem,
            /* [in] */ int iColumn,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Self )( 
            Folder3 * This,
            /* [retval][out] */ FolderItem **ppfi);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OfflineStatus )( 
            Folder3 * This,
            /* [retval][out] */ LONG *pul);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Synchronize )( 
            Folder3 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HaveToShowWebViewBarricade )( 
            Folder3 * This,
            /* [retval][out] */ VARIANT_BOOL *pbHaveToShowWebViewBarricade);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DismissedWebViewBarricade )( 
            Folder3 * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowWebViewBarricade )( 
            Folder3 * This,
            /* [retval][out] */ VARIANT_BOOL *pbShowWebViewBarricade);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowWebViewBarricade )( 
            Folder3 * This,
            /* [in] */ VARIANT_BOOL bShowWebViewBarricade);
        
        END_INTERFACE
    } Folder3Vtbl;

    interface Folder3
    {
        CONST_VTBL struct Folder3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Folder3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define Folder3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define Folder3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define Folder3_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define Folder3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define Folder3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define Folder3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define Folder3_get_Title(This,pbs)	\
    (This)->lpVtbl -> get_Title(This,pbs)

#define Folder3_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define Folder3_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define Folder3_get_ParentFolder(This,ppsf)	\
    (This)->lpVtbl -> get_ParentFolder(This,ppsf)

#define Folder3_Items(This,ppid)	\
    (This)->lpVtbl -> Items(This,ppid)

#define Folder3_ParseName(This,bName,ppid)	\
    (This)->lpVtbl -> ParseName(This,bName,ppid)

#define Folder3_NewFolder(This,bName,vOptions)	\
    (This)->lpVtbl -> NewFolder(This,bName,vOptions)

#define Folder3_MoveHere(This,vItem,vOptions)	\
    (This)->lpVtbl -> MoveHere(This,vItem,vOptions)

#define Folder3_CopyHere(This,vItem,vOptions)	\
    (This)->lpVtbl -> CopyHere(This,vItem,vOptions)

#define Folder3_GetDetailsOf(This,vItem,iColumn,pbs)	\
    (This)->lpVtbl -> GetDetailsOf(This,vItem,iColumn,pbs)


#define Folder3_get_Self(This,ppfi)	\
    (This)->lpVtbl -> get_Self(This,ppfi)

#define Folder3_get_OfflineStatus(This,pul)	\
    (This)->lpVtbl -> get_OfflineStatus(This,pul)

#define Folder3_Synchronize(This)	\
    (This)->lpVtbl -> Synchronize(This)

#define Folder3_get_HaveToShowWebViewBarricade(This,pbHaveToShowWebViewBarricade)	\
    (This)->lpVtbl -> get_HaveToShowWebViewBarricade(This,pbHaveToShowWebViewBarricade)

#define Folder3_DismissedWebViewBarricade(This)	\
    (This)->lpVtbl -> DismissedWebViewBarricade(This)


#define Folder3_get_ShowWebViewBarricade(This,pbShowWebViewBarricade)	\
    (This)->lpVtbl -> get_ShowWebViewBarricade(This,pbShowWebViewBarricade)

#define Folder3_put_ShowWebViewBarricade(This,bShowWebViewBarricade)	\
    (This)->lpVtbl -> put_ShowWebViewBarricade(This,bShowWebViewBarricade)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE Folder3_get_ShowWebViewBarricade_Proxy( 
    Folder3 * This,
    /* [retval][out] */ VARIANT_BOOL *pbShowWebViewBarricade);


void __RPC_STUB Folder3_get_ShowWebViewBarricade_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE Folder3_put_ShowWebViewBarricade_Proxy( 
    Folder3 * This,
    /* [in] */ VARIANT_BOOL bShowWebViewBarricade);


void __RPC_STUB Folder3_put_ShowWebViewBarricade_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __Folder3_INTERFACE_DEFINED__ */


#ifndef __FolderItem2_INTERFACE_DEFINED__
#define __FolderItem2_INTERFACE_DEFINED__

/* interface FolderItem2 */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_FolderItem2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("edc817aa-92b8-11d1-b075-00c04fc33aa5")
    FolderItem2 : public FolderItem
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InvokeVerbEx( 
            /* [optional][in] */ VARIANT vVerb,
            /* [optional][in] */ VARIANT vArgs) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ExtendedProperty( 
            /* [in] */ BSTR bstrPropName,
            /* [retval][out] */ VARIANT *pvRet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderItem2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FolderItem2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FolderItem2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FolderItem2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FolderItem2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FolderItem2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FolderItem2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FolderItem2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FolderItem2 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FolderItem2 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            FolderItem2 * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            FolderItem2 * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            FolderItem2 * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_GetLink )( 
            FolderItem2 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_GetFolder )( 
            FolderItem2 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLink )( 
            FolderItem2 * This,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsFolder )( 
            FolderItem2 * This,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsFileSystem )( 
            FolderItem2 * This,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsBrowsable )( 
            FolderItem2 * This,
            /* [retval][out] */ VARIANT_BOOL *pb);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ModifyDate )( 
            FolderItem2 * This,
            /* [retval][out] */ DATE *pdt);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ModifyDate )( 
            FolderItem2 * This,
            /* [in] */ DATE dt);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            FolderItem2 * This,
            /* [retval][out] */ LONG *pul);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            FolderItem2 * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Verbs )( 
            FolderItem2 * This,
            /* [retval][out] */ FolderItemVerbs **ppfic);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InvokeVerb )( 
            FolderItem2 * This,
            /* [optional][in] */ VARIANT vVerb);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InvokeVerbEx )( 
            FolderItem2 * This,
            /* [optional][in] */ VARIANT vVerb,
            /* [optional][in] */ VARIANT vArgs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ExtendedProperty )( 
            FolderItem2 * This,
            /* [in] */ BSTR bstrPropName,
            /* [retval][out] */ VARIANT *pvRet);
        
        END_INTERFACE
    } FolderItem2Vtbl;

    interface FolderItem2
    {
        CONST_VTBL struct FolderItem2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FolderItem2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define FolderItem2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define FolderItem2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define FolderItem2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define FolderItem2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define FolderItem2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define FolderItem2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define FolderItem2_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define FolderItem2_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define FolderItem2_get_Name(This,pbs)	\
    (This)->lpVtbl -> get_Name(This,pbs)

#define FolderItem2_put_Name(This,bs)	\
    (This)->lpVtbl -> put_Name(This,bs)

#define FolderItem2_get_Path(This,pbs)	\
    (This)->lpVtbl -> get_Path(This,pbs)

#define FolderItem2_get_GetLink(This,ppid)	\
    (This)->lpVtbl -> get_GetLink(This,ppid)

#define FolderItem2_get_GetFolder(This,ppid)	\
    (This)->lpVtbl -> get_GetFolder(This,ppid)

#define FolderItem2_get_IsLink(This,pb)	\
    (This)->lpVtbl -> get_IsLink(This,pb)

#define FolderItem2_get_IsFolder(This,pb)	\
    (This)->lpVtbl -> get_IsFolder(This,pb)

#define FolderItem2_get_IsFileSystem(This,pb)	\
    (This)->lpVtbl -> get_IsFileSystem(This,pb)

#define FolderItem2_get_IsBrowsable(This,pb)	\
    (This)->lpVtbl -> get_IsBrowsable(This,pb)

#define FolderItem2_get_ModifyDate(This,pdt)	\
    (This)->lpVtbl -> get_ModifyDate(This,pdt)

#define FolderItem2_put_ModifyDate(This,dt)	\
    (This)->lpVtbl -> put_ModifyDate(This,dt)

#define FolderItem2_get_Size(This,pul)	\
    (This)->lpVtbl -> get_Size(This,pul)

#define FolderItem2_get_Type(This,pbs)	\
    (This)->lpVtbl -> get_Type(This,pbs)

#define FolderItem2_Verbs(This,ppfic)	\
    (This)->lpVtbl -> Verbs(This,ppfic)

#define FolderItem2_InvokeVerb(This,vVerb)	\
    (This)->lpVtbl -> InvokeVerb(This,vVerb)


#define FolderItem2_InvokeVerbEx(This,vVerb,vArgs)	\
    (This)->lpVtbl -> InvokeVerbEx(This,vVerb,vArgs)

#define FolderItem2_ExtendedProperty(This,bstrPropName,pvRet)	\
    (This)->lpVtbl -> ExtendedProperty(This,bstrPropName,pvRet)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItem2_InvokeVerbEx_Proxy( 
    FolderItem2 * This,
    /* [optional][in] */ VARIANT vVerb,
    /* [optional][in] */ VARIANT vArgs);


void __RPC_STUB FolderItem2_InvokeVerbEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItem2_ExtendedProperty_Proxy( 
    FolderItem2 * This,
    /* [in] */ BSTR bstrPropName,
    /* [retval][out] */ VARIANT *pvRet);


void __RPC_STUB FolderItem2_ExtendedProperty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __FolderItem2_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_ShellFolderItem;

#ifdef __cplusplus

class DECLSPEC_UUID("2fe352ea-fd1f-11d2-b1f4-00c04f8eeb3e")
ShellFolderItem;
#endif

#ifndef __FolderItems2_INTERFACE_DEFINED__
#define __FolderItems2_INTERFACE_DEFINED__

/* interface FolderItems2 */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_FolderItems2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C94F0AD0-F363-11d2-A327-00C04F8EEC7F")
    FolderItems2 : public FolderItems
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InvokeVerbEx( 
            /* [optional][in] */ VARIANT vVerb,
            /* [optional][in] */ VARIANT vArgs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderItems2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FolderItems2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FolderItems2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FolderItems2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FolderItems2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FolderItems2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FolderItems2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FolderItems2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            FolderItems2 * This,
            /* [retval][out] */ long *plCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FolderItems2 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FolderItems2 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            FolderItems2 * This,
            /* [optional][in] */ VARIANT index,
            /* [retval][out] */ FolderItem **ppid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            FolderItems2 * This,
            /* [retval][out] */ IUnknown **ppunk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InvokeVerbEx )( 
            FolderItems2 * This,
            /* [optional][in] */ VARIANT vVerb,
            /* [optional][in] */ VARIANT vArgs);
        
        END_INTERFACE
    } FolderItems2Vtbl;

    interface FolderItems2
    {
        CONST_VTBL struct FolderItems2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FolderItems2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define FolderItems2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define FolderItems2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define FolderItems2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define FolderItems2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define FolderItems2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define FolderItems2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define FolderItems2_get_Count(This,plCount)	\
    (This)->lpVtbl -> get_Count(This,plCount)

#define FolderItems2_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define FolderItems2_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define FolderItems2_Item(This,index,ppid)	\
    (This)->lpVtbl -> Item(This,index,ppid)

#define FolderItems2__NewEnum(This,ppunk)	\
    (This)->lpVtbl -> _NewEnum(This,ppunk)


#define FolderItems2_InvokeVerbEx(This,vVerb,vArgs)	\
    (This)->lpVtbl -> InvokeVerbEx(This,vVerb,vArgs)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItems2_InvokeVerbEx_Proxy( 
    FolderItems2 * This,
    /* [optional][in] */ VARIANT vVerb,
    /* [optional][in] */ VARIANT vArgs);


void __RPC_STUB FolderItems2_InvokeVerbEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __FolderItems2_INTERFACE_DEFINED__ */


#ifndef __FolderItems3_INTERFACE_DEFINED__
#define __FolderItems3_INTERFACE_DEFINED__

/* interface FolderItems3 */
/* [object][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_FolderItems3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("eaa7c309-bbec-49d5-821d-64d966cb667f")
    FolderItems3 : public FolderItems2
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Filter( 
            /* [in] */ long grfFlags,
            /* [in] */ BSTR bstrFileSpec) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Verbs( 
            /* [retval][out] */ FolderItemVerbs **ppfic) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FolderItems3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            FolderItems3 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            FolderItems3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            FolderItems3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            FolderItems3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            FolderItems3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            FolderItems3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            FolderItems3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            FolderItems3 * This,
            /* [retval][out] */ long *plCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            FolderItems3 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            FolderItems3 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            FolderItems3 * This,
            /* [optional][in] */ VARIANT index,
            /* [retval][out] */ FolderItem **ppid);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            FolderItems3 * This,
            /* [retval][out] */ IUnknown **ppunk);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InvokeVerbEx )( 
            FolderItems3 * This,
            /* [optional][in] */ VARIANT vVerb,
            /* [optional][in] */ VARIANT vArgs);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Filter )( 
            FolderItems3 * This,
            /* [in] */ long grfFlags,
            /* [in] */ BSTR bstrFileSpec);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Verbs )( 
            FolderItems3 * This,
            /* [retval][out] */ FolderItemVerbs **ppfic);
        
        END_INTERFACE
    } FolderItems3Vtbl;

    interface FolderItems3
    {
        CONST_VTBL struct FolderItems3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define FolderItems3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define FolderItems3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define FolderItems3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define FolderItems3_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define FolderItems3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define FolderItems3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define FolderItems3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define FolderItems3_get_Count(This,plCount)	\
    (This)->lpVtbl -> get_Count(This,plCount)

#define FolderItems3_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define FolderItems3_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define FolderItems3_Item(This,index,ppid)	\
    (This)->lpVtbl -> Item(This,index,ppid)

#define FolderItems3__NewEnum(This,ppunk)	\
    (This)->lpVtbl -> _NewEnum(This,ppunk)


#define FolderItems3_InvokeVerbEx(This,vVerb,vArgs)	\
    (This)->lpVtbl -> InvokeVerbEx(This,vVerb,vArgs)


#define FolderItems3_Filter(This,grfFlags,bstrFileSpec)	\
    (This)->lpVtbl -> Filter(This,grfFlags,bstrFileSpec)

#define FolderItems3_get_Verbs(This,ppfic)	\
    (This)->lpVtbl -> get_Verbs(This,ppfic)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE FolderItems3_Filter_Proxy( 
    FolderItems3 * This,
    /* [in] */ long grfFlags,
    /* [in] */ BSTR bstrFileSpec);


void __RPC_STUB FolderItems3_Filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE FolderItems3_get_Verbs_Proxy( 
    FolderItems3 * This,
    /* [retval][out] */ FolderItemVerbs **ppfic);


void __RPC_STUB FolderItems3_get_Verbs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __FolderItems3_INTERFACE_DEFINED__ */


#ifndef __IShellLinkDual_INTERFACE_DEFINED__
#define __IShellLinkDual_INTERFACE_DEFINED__

/* interface IShellLinkDual */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellLinkDual;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("88A05C00-F000-11CE-8350-444553540000")
    IShellLinkDual : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [retval][out] */ BSTR *pbs) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Path( 
            /* [in] */ BSTR bs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *pbs) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR bs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_WorkingDirectory( 
            /* [retval][out] */ BSTR *pbs) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_WorkingDirectory( 
            /* [in] */ BSTR bs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Arguments( 
            /* [retval][out] */ BSTR *pbs) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Arguments( 
            /* [in] */ BSTR bs) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Hotkey( 
            /* [retval][out] */ int *piHK) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Hotkey( 
            /* [in] */ int iHK) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ShowCommand( 
            /* [retval][out] */ int *piShowCommand) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ShowCommand( 
            /* [in] */ int iShowCommand) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Resolve( 
            /* [in] */ int fFlags) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetIconLocation( 
            /* [out] */ BSTR *pbs,
            /* [retval][out] */ int *piIcon) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetIconLocation( 
            /* [in] */ BSTR bs,
            /* [in] */ int iIcon) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Save( 
            /* [optional][in] */ VARIANT vWhere) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellLinkDualVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellLinkDual * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellLinkDual * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellLinkDual * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IShellLinkDual * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IShellLinkDual * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IShellLinkDual * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IShellLinkDual * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            IShellLinkDual * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Path )( 
            IShellLinkDual * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IShellLinkDual * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            IShellLinkDual * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WorkingDirectory )( 
            IShellLinkDual * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WorkingDirectory )( 
            IShellLinkDual * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arguments )( 
            IShellLinkDual * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arguments )( 
            IShellLinkDual * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hotkey )( 
            IShellLinkDual * This,
            /* [retval][out] */ int *piHK);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Hotkey )( 
            IShellLinkDual * This,
            /* [in] */ int iHK);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowCommand )( 
            IShellLinkDual * This,
            /* [retval][out] */ int *piShowCommand);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowCommand )( 
            IShellLinkDual * This,
            /* [in] */ int iShowCommand);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Resolve )( 
            IShellLinkDual * This,
            /* [in] */ int fFlags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetIconLocation )( 
            IShellLinkDual * This,
            /* [out] */ BSTR *pbs,
            /* [retval][out] */ int *piIcon);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetIconLocation )( 
            IShellLinkDual * This,
            /* [in] */ BSTR bs,
            /* [in] */ int iIcon);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            IShellLinkDual * This,
            /* [optional][in] */ VARIANT vWhere);
        
        END_INTERFACE
    } IShellLinkDualVtbl;

    interface IShellLinkDual
    {
        CONST_VTBL struct IShellLinkDualVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellLinkDual_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellLinkDual_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellLinkDual_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellLinkDual_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellLinkDual_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellLinkDual_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellLinkDual_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellLinkDual_get_Path(This,pbs)	\
    (This)->lpVtbl -> get_Path(This,pbs)

#define IShellLinkDual_put_Path(This,bs)	\
    (This)->lpVtbl -> put_Path(This,bs)

#define IShellLinkDual_get_Description(This,pbs)	\
    (This)->lpVtbl -> get_Description(This,pbs)

#define IShellLinkDual_put_Description(This,bs)	\
    (This)->lpVtbl -> put_Description(This,bs)

#define IShellLinkDual_get_WorkingDirectory(This,pbs)	\
    (This)->lpVtbl -> get_WorkingDirectory(This,pbs)

#define IShellLinkDual_put_WorkingDirectory(This,bs)	\
    (This)->lpVtbl -> put_WorkingDirectory(This,bs)

#define IShellLinkDual_get_Arguments(This,pbs)	\
    (This)->lpVtbl -> get_Arguments(This,pbs)

#define IShellLinkDual_put_Arguments(This,bs)	\
    (This)->lpVtbl -> put_Arguments(This,bs)

#define IShellLinkDual_get_Hotkey(This,piHK)	\
    (This)->lpVtbl -> get_Hotkey(This,piHK)

#define IShellLinkDual_put_Hotkey(This,iHK)	\
    (This)->lpVtbl -> put_Hotkey(This,iHK)

#define IShellLinkDual_get_ShowCommand(This,piShowCommand)	\
    (This)->lpVtbl -> get_ShowCommand(This,piShowCommand)

#define IShellLinkDual_put_ShowCommand(This,iShowCommand)	\
    (This)->lpVtbl -> put_ShowCommand(This,iShowCommand)

#define IShellLinkDual_Resolve(This,fFlags)	\
    (This)->lpVtbl -> Resolve(This,fFlags)

#define IShellLinkDual_GetIconLocation(This,pbs,piIcon)	\
    (This)->lpVtbl -> GetIconLocation(This,pbs,piIcon)

#define IShellLinkDual_SetIconLocation(This,bs,iIcon)	\
    (This)->lpVtbl -> SetIconLocation(This,bs,iIcon)

#define IShellLinkDual_Save(This,vWhere)	\
    (This)->lpVtbl -> Save(This,vWhere)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_get_Path_Proxy( 
    IShellLinkDual * This,
    /* [retval][out] */ BSTR *pbs);


void __RPC_STUB IShellLinkDual_get_Path_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_put_Path_Proxy( 
    IShellLinkDual * This,
    /* [in] */ BSTR bs);


void __RPC_STUB IShellLinkDual_put_Path_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_get_Description_Proxy( 
    IShellLinkDual * This,
    /* [retval][out] */ BSTR *pbs);


void __RPC_STUB IShellLinkDual_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_put_Description_Proxy( 
    IShellLinkDual * This,
    /* [in] */ BSTR bs);


void __RPC_STUB IShellLinkDual_put_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_get_WorkingDirectory_Proxy( 
    IShellLinkDual * This,
    /* [retval][out] */ BSTR *pbs);


void __RPC_STUB IShellLinkDual_get_WorkingDirectory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_put_WorkingDirectory_Proxy( 
    IShellLinkDual * This,
    /* [in] */ BSTR bs);


void __RPC_STUB IShellLinkDual_put_WorkingDirectory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_get_Arguments_Proxy( 
    IShellLinkDual * This,
    /* [retval][out] */ BSTR *pbs);


void __RPC_STUB IShellLinkDual_get_Arguments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_put_Arguments_Proxy( 
    IShellLinkDual * This,
    /* [in] */ BSTR bs);


void __RPC_STUB IShellLinkDual_put_Arguments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_get_Hotkey_Proxy( 
    IShellLinkDual * This,
    /* [retval][out] */ int *piHK);


void __RPC_STUB IShellLinkDual_get_Hotkey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_put_Hotkey_Proxy( 
    IShellLinkDual * This,
    /* [in] */ int iHK);


void __RPC_STUB IShellLinkDual_put_Hotkey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_get_ShowCommand_Proxy( 
    IShellLinkDual * This,
    /* [retval][out] */ int *piShowCommand);


void __RPC_STUB IShellLinkDual_get_ShowCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_put_ShowCommand_Proxy( 
    IShellLinkDual * This,
    /* [in] */ int iShowCommand);


void __RPC_STUB IShellLinkDual_put_ShowCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_Resolve_Proxy( 
    IShellLinkDual * This,
    /* [in] */ int fFlags);


void __RPC_STUB IShellLinkDual_Resolve_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_GetIconLocation_Proxy( 
    IShellLinkDual * This,
    /* [out] */ BSTR *pbs,
    /* [retval][out] */ int *piIcon);


void __RPC_STUB IShellLinkDual_GetIconLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_SetIconLocation_Proxy( 
    IShellLinkDual * This,
    /* [in] */ BSTR bs,
    /* [in] */ int iIcon);


void __RPC_STUB IShellLinkDual_SetIconLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellLinkDual_Save_Proxy( 
    IShellLinkDual * This,
    /* [optional][in] */ VARIANT vWhere);


void __RPC_STUB IShellLinkDual_Save_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellLinkDual_INTERFACE_DEFINED__ */


#ifndef __IShellLinkDual2_INTERFACE_DEFINED__
#define __IShellLinkDual2_INTERFACE_DEFINED__

/* interface IShellLinkDual2 */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellLinkDual2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("317EE249-F12E-11d2-B1E4-00C04F8EEB3E")
    IShellLinkDual2 : public IShellLinkDual
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Target( 
            /* [retval][out] */ FolderItem **ppfi) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellLinkDual2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellLinkDual2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellLinkDual2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellLinkDual2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IShellLinkDual2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IShellLinkDual2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IShellLinkDual2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IShellLinkDual2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            IShellLinkDual2 * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Path )( 
            IShellLinkDual2 * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IShellLinkDual2 * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            IShellLinkDual2 * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WorkingDirectory )( 
            IShellLinkDual2 * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WorkingDirectory )( 
            IShellLinkDual2 * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Arguments )( 
            IShellLinkDual2 * This,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Arguments )( 
            IShellLinkDual2 * This,
            /* [in] */ BSTR bs);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Hotkey )( 
            IShellLinkDual2 * This,
            /* [retval][out] */ int *piHK);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Hotkey )( 
            IShellLinkDual2 * This,
            /* [in] */ int iHK);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShowCommand )( 
            IShellLinkDual2 * This,
            /* [retval][out] */ int *piShowCommand);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ShowCommand )( 
            IShellLinkDual2 * This,
            /* [in] */ int iShowCommand);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Resolve )( 
            IShellLinkDual2 * This,
            /* [in] */ int fFlags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetIconLocation )( 
            IShellLinkDual2 * This,
            /* [out] */ BSTR *pbs,
            /* [retval][out] */ int *piIcon);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetIconLocation )( 
            IShellLinkDual2 * This,
            /* [in] */ BSTR bs,
            /* [in] */ int iIcon);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            IShellLinkDual2 * This,
            /* [optional][in] */ VARIANT vWhere);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            IShellLinkDual2 * This,
            /* [retval][out] */ FolderItem **ppfi);
        
        END_INTERFACE
    } IShellLinkDual2Vtbl;

    interface IShellLinkDual2
    {
        CONST_VTBL struct IShellLinkDual2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellLinkDual2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellLinkDual2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellLinkDual2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellLinkDual2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellLinkDual2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellLinkDual2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellLinkDual2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellLinkDual2_get_Path(This,pbs)	\
    (This)->lpVtbl -> get_Path(This,pbs)

#define IShellLinkDual2_put_Path(This,bs)	\
    (This)->lpVtbl -> put_Path(This,bs)

#define IShellLinkDual2_get_Description(This,pbs)	\
    (This)->lpVtbl -> get_Description(This,pbs)

#define IShellLinkDual2_put_Description(This,bs)	\
    (This)->lpVtbl -> put_Description(This,bs)

#define IShellLinkDual2_get_WorkingDirectory(This,pbs)	\
    (This)->lpVtbl -> get_WorkingDirectory(This,pbs)

#define IShellLinkDual2_put_WorkingDirectory(This,bs)	\
    (This)->lpVtbl -> put_WorkingDirectory(This,bs)

#define IShellLinkDual2_get_Arguments(This,pbs)	\
    (This)->lpVtbl -> get_Arguments(This,pbs)

#define IShellLinkDual2_put_Arguments(This,bs)	\
    (This)->lpVtbl -> put_Arguments(This,bs)

#define IShellLinkDual2_get_Hotkey(This,piHK)	\
    (This)->lpVtbl -> get_Hotkey(This,piHK)

#define IShellLinkDual2_put_Hotkey(This,iHK)	\
    (This)->lpVtbl -> put_Hotkey(This,iHK)

#define IShellLinkDual2_get_ShowCommand(This,piShowCommand)	\
    (This)->lpVtbl -> get_ShowCommand(This,piShowCommand)

#define IShellLinkDual2_put_ShowCommand(This,iShowCommand)	\
    (This)->lpVtbl -> put_ShowCommand(This,iShowCommand)

#define IShellLinkDual2_Resolve(This,fFlags)	\
    (This)->lpVtbl -> Resolve(This,fFlags)

#define IShellLinkDual2_GetIconLocation(This,pbs,piIcon)	\
    (This)->lpVtbl -> GetIconLocation(This,pbs,piIcon)

#define IShellLinkDual2_SetIconLocation(This,bs,iIcon)	\
    (This)->lpVtbl -> SetIconLocation(This,bs,iIcon)

#define IShellLinkDual2_Save(This,vWhere)	\
    (This)->lpVtbl -> Save(This,vWhere)


#define IShellLinkDual2_get_Target(This,ppfi)	\
    (This)->lpVtbl -> get_Target(This,ppfi)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellLinkDual2_get_Target_Proxy( 
    IShellLinkDual2 * This,
    /* [retval][out] */ FolderItem **ppfi);


void __RPC_STUB IShellLinkDual2_get_Target_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellLinkDual2_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_ShellLinkObject;

#ifdef __cplusplus

class DECLSPEC_UUID("11219420-1768-11d1-95BE-00609797EA4F")
ShellLinkObject;
#endif

#ifndef __IShellFolderViewDual_INTERFACE_DEFINED__
#define __IShellFolderViewDual_INTERFACE_DEFINED__

/* interface IShellFolderViewDual */
/* [object][dual][hidden][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellFolderViewDual;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E7A1AF80-4D96-11CF-960C-0080C7F4EE85")
    IShellFolderViewDual : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Folder( 
            /* [retval][out] */ Folder **ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SelectedItems( 
            /* [retval][out] */ FolderItems **ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FocusedItem( 
            /* [retval][out] */ FolderItem **ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SelectItem( 
            /* [in] */ VARIANT *pvfi,
            /* [in] */ int dwFlags) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PopupItemMenu( 
            /* [in] */ FolderItem *pfi,
            /* [optional][in] */ VARIANT vx,
            /* [optional][in] */ VARIANT vy,
            /* [retval][out] */ BSTR *pbs) = 0;
        
        virtual /* [helpcontext][helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Script( 
            /* [retval][out] */ IDispatch **ppDisp) = 0;
        
        virtual /* [helpcontext][helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ViewOptions( 
            /* [retval][out] */ long *plViewOptions) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellFolderViewDualVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellFolderViewDual * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellFolderViewDual * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellFolderViewDual * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IShellFolderViewDual * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IShellFolderViewDual * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IShellFolderViewDual * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IShellFolderViewDual * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IShellFolderViewDual * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IShellFolderViewDual * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Folder )( 
            IShellFolderViewDual * This,
            /* [retval][out] */ Folder **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SelectedItems )( 
            IShellFolderViewDual * This,
            /* [retval][out] */ FolderItems **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FocusedItem )( 
            IShellFolderViewDual * This,
            /* [retval][out] */ FolderItem **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SelectItem )( 
            IShellFolderViewDual * This,
            /* [in] */ VARIANT *pvfi,
            /* [in] */ int dwFlags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PopupItemMenu )( 
            IShellFolderViewDual * This,
            /* [in] */ FolderItem *pfi,
            /* [optional][in] */ VARIANT vx,
            /* [optional][in] */ VARIANT vy,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpcontext][helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Script )( 
            IShellFolderViewDual * This,
            /* [retval][out] */ IDispatch **ppDisp);
        
        /* [helpcontext][helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ViewOptions )( 
            IShellFolderViewDual * This,
            /* [retval][out] */ long *plViewOptions);
        
        END_INTERFACE
    } IShellFolderViewDualVtbl;

    interface IShellFolderViewDual
    {
        CONST_VTBL struct IShellFolderViewDualVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellFolderViewDual_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellFolderViewDual_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellFolderViewDual_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellFolderViewDual_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellFolderViewDual_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellFolderViewDual_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellFolderViewDual_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellFolderViewDual_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define IShellFolderViewDual_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define IShellFolderViewDual_get_Folder(This,ppid)	\
    (This)->lpVtbl -> get_Folder(This,ppid)

#define IShellFolderViewDual_SelectedItems(This,ppid)	\
    (This)->lpVtbl -> SelectedItems(This,ppid)

#define IShellFolderViewDual_get_FocusedItem(This,ppid)	\
    (This)->lpVtbl -> get_FocusedItem(This,ppid)

#define IShellFolderViewDual_SelectItem(This,pvfi,dwFlags)	\
    (This)->lpVtbl -> SelectItem(This,pvfi,dwFlags)

#define IShellFolderViewDual_PopupItemMenu(This,pfi,vx,vy,pbs)	\
    (This)->lpVtbl -> PopupItemMenu(This,pfi,vx,vy,pbs)

#define IShellFolderViewDual_get_Script(This,ppDisp)	\
    (This)->lpVtbl -> get_Script(This,ppDisp)

#define IShellFolderViewDual_get_ViewOptions(This,plViewOptions)	\
    (This)->lpVtbl -> get_ViewOptions(This,plViewOptions)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_get_Application_Proxy( 
    IShellFolderViewDual * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB IShellFolderViewDual_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_get_Parent_Proxy( 
    IShellFolderViewDual * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB IShellFolderViewDual_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_get_Folder_Proxy( 
    IShellFolderViewDual * This,
    /* [retval][out] */ Folder **ppid);


void __RPC_STUB IShellFolderViewDual_get_Folder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_SelectedItems_Proxy( 
    IShellFolderViewDual * This,
    /* [retval][out] */ FolderItems **ppid);


void __RPC_STUB IShellFolderViewDual_SelectedItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_get_FocusedItem_Proxy( 
    IShellFolderViewDual * This,
    /* [retval][out] */ FolderItem **ppid);


void __RPC_STUB IShellFolderViewDual_get_FocusedItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_SelectItem_Proxy( 
    IShellFolderViewDual * This,
    /* [in] */ VARIANT *pvfi,
    /* [in] */ int dwFlags);


void __RPC_STUB IShellFolderViewDual_SelectItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_PopupItemMenu_Proxy( 
    IShellFolderViewDual * This,
    /* [in] */ FolderItem *pfi,
    /* [optional][in] */ VARIANT vx,
    /* [optional][in] */ VARIANT vy,
    /* [retval][out] */ BSTR *pbs);


void __RPC_STUB IShellFolderViewDual_PopupItemMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_get_Script_Proxy( 
    IShellFolderViewDual * This,
    /* [retval][out] */ IDispatch **ppDisp);


void __RPC_STUB IShellFolderViewDual_get_Script_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual_get_ViewOptions_Proxy( 
    IShellFolderViewDual * This,
    /* [retval][out] */ long *plViewOptions);


void __RPC_STUB IShellFolderViewDual_get_ViewOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellFolderViewDual_INTERFACE_DEFINED__ */


#ifndef __IShellFolderViewDual2_INTERFACE_DEFINED__
#define __IShellFolderViewDual2_INTERFACE_DEFINED__

/* interface IShellFolderViewDual2 */
/* [object][dual][hidden][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellFolderViewDual2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("31C147b6-0ADE-4A3C-B514-DDF932EF6D17")
    IShellFolderViewDual2 : public IShellFolderViewDual
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CurrentViewMode( 
            /* [retval][out] */ UINT *pViewMode) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_CurrentViewMode( 
            /* [in] */ UINT ViewMode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SelectItemRelative( 
            /* [in] */ int iRelative) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellFolderViewDual2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellFolderViewDual2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellFolderViewDual2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellFolderViewDual2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IShellFolderViewDual2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IShellFolderViewDual2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IShellFolderViewDual2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IShellFolderViewDual2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IShellFolderViewDual2 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IShellFolderViewDual2 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Folder )( 
            IShellFolderViewDual2 * This,
            /* [retval][out] */ Folder **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SelectedItems )( 
            IShellFolderViewDual2 * This,
            /* [retval][out] */ FolderItems **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FocusedItem )( 
            IShellFolderViewDual2 * This,
            /* [retval][out] */ FolderItem **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SelectItem )( 
            IShellFolderViewDual2 * This,
            /* [in] */ VARIANT *pvfi,
            /* [in] */ int dwFlags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PopupItemMenu )( 
            IShellFolderViewDual2 * This,
            /* [in] */ FolderItem *pfi,
            /* [optional][in] */ VARIANT vx,
            /* [optional][in] */ VARIANT vy,
            /* [retval][out] */ BSTR *pbs);
        
        /* [helpcontext][helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Script )( 
            IShellFolderViewDual2 * This,
            /* [retval][out] */ IDispatch **ppDisp);
        
        /* [helpcontext][helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ViewOptions )( 
            IShellFolderViewDual2 * This,
            /* [retval][out] */ long *plViewOptions);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentViewMode )( 
            IShellFolderViewDual2 * This,
            /* [retval][out] */ UINT *pViewMode);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CurrentViewMode )( 
            IShellFolderViewDual2 * This,
            /* [in] */ UINT ViewMode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SelectItemRelative )( 
            IShellFolderViewDual2 * This,
            /* [in] */ int iRelative);
        
        END_INTERFACE
    } IShellFolderViewDual2Vtbl;

    interface IShellFolderViewDual2
    {
        CONST_VTBL struct IShellFolderViewDual2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellFolderViewDual2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellFolderViewDual2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellFolderViewDual2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellFolderViewDual2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellFolderViewDual2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellFolderViewDual2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellFolderViewDual2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellFolderViewDual2_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define IShellFolderViewDual2_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define IShellFolderViewDual2_get_Folder(This,ppid)	\
    (This)->lpVtbl -> get_Folder(This,ppid)

#define IShellFolderViewDual2_SelectedItems(This,ppid)	\
    (This)->lpVtbl -> SelectedItems(This,ppid)

#define IShellFolderViewDual2_get_FocusedItem(This,ppid)	\
    (This)->lpVtbl -> get_FocusedItem(This,ppid)

#define IShellFolderViewDual2_SelectItem(This,pvfi,dwFlags)	\
    (This)->lpVtbl -> SelectItem(This,pvfi,dwFlags)

#define IShellFolderViewDual2_PopupItemMenu(This,pfi,vx,vy,pbs)	\
    (This)->lpVtbl -> PopupItemMenu(This,pfi,vx,vy,pbs)

#define IShellFolderViewDual2_get_Script(This,ppDisp)	\
    (This)->lpVtbl -> get_Script(This,ppDisp)

#define IShellFolderViewDual2_get_ViewOptions(This,plViewOptions)	\
    (This)->lpVtbl -> get_ViewOptions(This,plViewOptions)


#define IShellFolderViewDual2_get_CurrentViewMode(This,pViewMode)	\
    (This)->lpVtbl -> get_CurrentViewMode(This,pViewMode)

#define IShellFolderViewDual2_put_CurrentViewMode(This,ViewMode)	\
    (This)->lpVtbl -> put_CurrentViewMode(This,ViewMode)

#define IShellFolderViewDual2_SelectItemRelative(This,iRelative)	\
    (This)->lpVtbl -> SelectItemRelative(This,iRelative)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual2_get_CurrentViewMode_Proxy( 
    IShellFolderViewDual2 * This,
    /* [retval][out] */ UINT *pViewMode);


void __RPC_STUB IShellFolderViewDual2_get_CurrentViewMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual2_put_CurrentViewMode_Proxy( 
    IShellFolderViewDual2 * This,
    /* [in] */ UINT ViewMode);


void __RPC_STUB IShellFolderViewDual2_put_CurrentViewMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellFolderViewDual2_SelectItemRelative_Proxy( 
    IShellFolderViewDual2 * This,
    /* [in] */ int iRelative);


void __RPC_STUB IShellFolderViewDual2_SelectItemRelative_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellFolderViewDual2_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_ShellFolderView;

#ifdef __cplusplus

class DECLSPEC_UUID("62112AA1-EBE4-11cf-A5FB-0020AFE7292D")
ShellFolderView;
#endif

#ifndef __IShellDispatch_INTERFACE_DEFINED__
#define __IShellDispatch_INTERFACE_DEFINED__

/* interface IShellDispatch */
/* [object][dual][hidden][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellDispatch;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D8F015C0-C278-11CE-A49E-444553540000")
    IShellDispatch : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE NameSpace( 
            /* [in] */ VARIANT vDir,
            /* [retval][out] */ Folder **ppsdf) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE BrowseForFolder( 
            /* [in] */ long Hwnd,
            /* [in] */ BSTR Title,
            /* [in] */ long Options,
            /* [optional][in] */ VARIANT RootFolder,
            /* [retval][out] */ Folder **ppsdf) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Windows( 
            /* [retval][out] */ IDispatch **ppid) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [in] */ VARIANT vDir) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Explore( 
            /* [in] */ VARIANT vDir) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MinimizeAll( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UndoMinimizeALL( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FileRun( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CascadeWindows( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE TileVertically( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE TileHorizontally( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ShutdownWindows( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Suspend( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EjectPC( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetTime( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE TrayProperties( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Help( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FindFiles( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FindComputer( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RefreshMenu( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ControlPanelItem( 
            /* [in] */ BSTR szDir) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellDispatchVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellDispatch * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellDispatch * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellDispatch * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IShellDispatch * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IShellDispatch * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IShellDispatch * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IShellDispatch * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IShellDispatch * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IShellDispatch * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *NameSpace )( 
            IShellDispatch * This,
            /* [in] */ VARIANT vDir,
            /* [retval][out] */ Folder **ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *BrowseForFolder )( 
            IShellDispatch * This,
            /* [in] */ long Hwnd,
            /* [in] */ BSTR Title,
            /* [in] */ long Options,
            /* [optional][in] */ VARIANT RootFolder,
            /* [retval][out] */ Folder **ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Windows )( 
            IShellDispatch * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IShellDispatch * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Explore )( 
            IShellDispatch * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MinimizeAll )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UndoMinimizeALL )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FileRun )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CascadeWindows )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TileVertically )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TileHorizontally )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShutdownWindows )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Suspend )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EjectPC )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetTime )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TrayProperties )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Help )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindFiles )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindComputer )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RefreshMenu )( 
            IShellDispatch * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ControlPanelItem )( 
            IShellDispatch * This,
            /* [in] */ BSTR szDir);
        
        END_INTERFACE
    } IShellDispatchVtbl;

    interface IShellDispatch
    {
        CONST_VTBL struct IShellDispatchVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellDispatch_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellDispatch_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellDispatch_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellDispatch_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellDispatch_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellDispatch_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellDispatch_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellDispatch_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define IShellDispatch_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define IShellDispatch_NameSpace(This,vDir,ppsdf)	\
    (This)->lpVtbl -> NameSpace(This,vDir,ppsdf)

#define IShellDispatch_BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)	\
    (This)->lpVtbl -> BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)

#define IShellDispatch_Windows(This,ppid)	\
    (This)->lpVtbl -> Windows(This,ppid)

#define IShellDispatch_Open(This,vDir)	\
    (This)->lpVtbl -> Open(This,vDir)

#define IShellDispatch_Explore(This,vDir)	\
    (This)->lpVtbl -> Explore(This,vDir)

#define IShellDispatch_MinimizeAll(This)	\
    (This)->lpVtbl -> MinimizeAll(This)

#define IShellDispatch_UndoMinimizeALL(This)	\
    (This)->lpVtbl -> UndoMinimizeALL(This)

#define IShellDispatch_FileRun(This)	\
    (This)->lpVtbl -> FileRun(This)

#define IShellDispatch_CascadeWindows(This)	\
    (This)->lpVtbl -> CascadeWindows(This)

#define IShellDispatch_TileVertically(This)	\
    (This)->lpVtbl -> TileVertically(This)

#define IShellDispatch_TileHorizontally(This)	\
    (This)->lpVtbl -> TileHorizontally(This)

#define IShellDispatch_ShutdownWindows(This)	\
    (This)->lpVtbl -> ShutdownWindows(This)

#define IShellDispatch_Suspend(This)	\
    (This)->lpVtbl -> Suspend(This)

#define IShellDispatch_EjectPC(This)	\
    (This)->lpVtbl -> EjectPC(This)

#define IShellDispatch_SetTime(This)	\
    (This)->lpVtbl -> SetTime(This)

#define IShellDispatch_TrayProperties(This)	\
    (This)->lpVtbl -> TrayProperties(This)

#define IShellDispatch_Help(This)	\
    (This)->lpVtbl -> Help(This)

#define IShellDispatch_FindFiles(This)	\
    (This)->lpVtbl -> FindFiles(This)

#define IShellDispatch_FindComputer(This)	\
    (This)->lpVtbl -> FindComputer(This)

#define IShellDispatch_RefreshMenu(This)	\
    (This)->lpVtbl -> RefreshMenu(This)

#define IShellDispatch_ControlPanelItem(This,szDir)	\
    (This)->lpVtbl -> ControlPanelItem(This,szDir)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellDispatch_get_Application_Proxy( 
    IShellDispatch * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB IShellDispatch_get_Application_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IShellDispatch_get_Parent_Proxy( 
    IShellDispatch * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB IShellDispatch_get_Parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_NameSpace_Proxy( 
    IShellDispatch * This,
    /* [in] */ VARIANT vDir,
    /* [retval][out] */ Folder **ppsdf);


void __RPC_STUB IShellDispatch_NameSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_BrowseForFolder_Proxy( 
    IShellDispatch * This,
    /* [in] */ long Hwnd,
    /* [in] */ BSTR Title,
    /* [in] */ long Options,
    /* [optional][in] */ VARIANT RootFolder,
    /* [retval][out] */ Folder **ppsdf);


void __RPC_STUB IShellDispatch_BrowseForFolder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_Windows_Proxy( 
    IShellDispatch * This,
    /* [retval][out] */ IDispatch **ppid);


void __RPC_STUB IShellDispatch_Windows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_Open_Proxy( 
    IShellDispatch * This,
    /* [in] */ VARIANT vDir);


void __RPC_STUB IShellDispatch_Open_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_Explore_Proxy( 
    IShellDispatch * This,
    /* [in] */ VARIANT vDir);


void __RPC_STUB IShellDispatch_Explore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_MinimizeAll_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_MinimizeAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_UndoMinimizeALL_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_UndoMinimizeALL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_FileRun_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_FileRun_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_CascadeWindows_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_CascadeWindows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_TileVertically_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_TileVertically_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_TileHorizontally_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_TileHorizontally_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_ShutdownWindows_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_ShutdownWindows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_Suspend_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_Suspend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_EjectPC_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_EjectPC_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_SetTime_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_SetTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_TrayProperties_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_TrayProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_Help_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_Help_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_FindFiles_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_FindFiles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_FindComputer_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_FindComputer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_RefreshMenu_Proxy( 
    IShellDispatch * This);


void __RPC_STUB IShellDispatch_RefreshMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch_ControlPanelItem_Proxy( 
    IShellDispatch * This,
    /* [in] */ BSTR szDir);


void __RPC_STUB IShellDispatch_ControlPanelItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellDispatch_INTERFACE_DEFINED__ */


#ifndef __IShellDispatch2_INTERFACE_DEFINED__
#define __IShellDispatch2_INTERFACE_DEFINED__

/* interface IShellDispatch2 */
/* [object][dual][hidden][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellDispatch2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A4C6892C-3BA9-11d2-9DEA-00C04FB16162")
    IShellDispatch2 : public IShellDispatch
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE IsRestricted( 
            /* [in] */ BSTR Group,
            /* [in] */ BSTR Restriction,
            /* [retval][out] */ long *plRestrictValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ShellExecute( 
            /* [in] */ BSTR File,
            /* [optional][in] */ VARIANT vArgs,
            /* [optional][in] */ VARIANT vDir,
            /* [optional][in] */ VARIANT vOperation,
            /* [optional][in] */ VARIANT vShow) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FindPrinter( 
            /* [optional][in] */ BSTR name,
            /* [optional][in] */ BSTR location,
            /* [optional][in] */ BSTR model) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetSystemInformation( 
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pv) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ServiceStart( 
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT *pSuccess) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ServiceStop( 
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT *pSuccess) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE IsServiceRunning( 
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT *pRunning) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CanStartStopService( 
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT *pCanStartStop) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ShowBrowserBar( 
            /* [in] */ BSTR bstrClsid,
            /* [in] */ VARIANT bShow,
            /* [retval][out] */ VARIANT *pSuccess) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellDispatch2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellDispatch2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellDispatch2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellDispatch2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IShellDispatch2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IShellDispatch2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IShellDispatch2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IShellDispatch2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IShellDispatch2 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IShellDispatch2 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *NameSpace )( 
            IShellDispatch2 * This,
            /* [in] */ VARIANT vDir,
            /* [retval][out] */ Folder **ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *BrowseForFolder )( 
            IShellDispatch2 * This,
            /* [in] */ long Hwnd,
            /* [in] */ BSTR Title,
            /* [in] */ long Options,
            /* [optional][in] */ VARIANT RootFolder,
            /* [retval][out] */ Folder **ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Windows )( 
            IShellDispatch2 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IShellDispatch2 * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Explore )( 
            IShellDispatch2 * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MinimizeAll )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UndoMinimizeALL )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FileRun )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CascadeWindows )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TileVertically )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TileHorizontally )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShutdownWindows )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Suspend )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EjectPC )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetTime )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TrayProperties )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Help )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindFiles )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindComputer )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RefreshMenu )( 
            IShellDispatch2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ControlPanelItem )( 
            IShellDispatch2 * This,
            /* [in] */ BSTR szDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IsRestricted )( 
            IShellDispatch2 * This,
            /* [in] */ BSTR Group,
            /* [in] */ BSTR Restriction,
            /* [retval][out] */ long *plRestrictValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShellExecute )( 
            IShellDispatch2 * This,
            /* [in] */ BSTR File,
            /* [optional][in] */ VARIANT vArgs,
            /* [optional][in] */ VARIANT vDir,
            /* [optional][in] */ VARIANT vOperation,
            /* [optional][in] */ VARIANT vShow);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindPrinter )( 
            IShellDispatch2 * This,
            /* [optional][in] */ BSTR name,
            /* [optional][in] */ BSTR location,
            /* [optional][in] */ BSTR model);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetSystemInformation )( 
            IShellDispatch2 * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pv);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ServiceStart )( 
            IShellDispatch2 * This,
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ServiceStop )( 
            IShellDispatch2 * This,
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IsServiceRunning )( 
            IShellDispatch2 * This,
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT *pRunning);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CanStartStopService )( 
            IShellDispatch2 * This,
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT *pCanStartStop);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShowBrowserBar )( 
            IShellDispatch2 * This,
            /* [in] */ BSTR bstrClsid,
            /* [in] */ VARIANT bShow,
            /* [retval][out] */ VARIANT *pSuccess);
        
        END_INTERFACE
    } IShellDispatch2Vtbl;

    interface IShellDispatch2
    {
        CONST_VTBL struct IShellDispatch2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellDispatch2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellDispatch2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellDispatch2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellDispatch2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellDispatch2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellDispatch2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellDispatch2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellDispatch2_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define IShellDispatch2_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define IShellDispatch2_NameSpace(This,vDir,ppsdf)	\
    (This)->lpVtbl -> NameSpace(This,vDir,ppsdf)

#define IShellDispatch2_BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)	\
    (This)->lpVtbl -> BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)

#define IShellDispatch2_Windows(This,ppid)	\
    (This)->lpVtbl -> Windows(This,ppid)

#define IShellDispatch2_Open(This,vDir)	\
    (This)->lpVtbl -> Open(This,vDir)

#define IShellDispatch2_Explore(This,vDir)	\
    (This)->lpVtbl -> Explore(This,vDir)

#define IShellDispatch2_MinimizeAll(This)	\
    (This)->lpVtbl -> MinimizeAll(This)

#define IShellDispatch2_UndoMinimizeALL(This)	\
    (This)->lpVtbl -> UndoMinimizeALL(This)

#define IShellDispatch2_FileRun(This)	\
    (This)->lpVtbl -> FileRun(This)

#define IShellDispatch2_CascadeWindows(This)	\
    (This)->lpVtbl -> CascadeWindows(This)

#define IShellDispatch2_TileVertically(This)	\
    (This)->lpVtbl -> TileVertically(This)

#define IShellDispatch2_TileHorizontally(This)	\
    (This)->lpVtbl -> TileHorizontally(This)

#define IShellDispatch2_ShutdownWindows(This)	\
    (This)->lpVtbl -> ShutdownWindows(This)

#define IShellDispatch2_Suspend(This)	\
    (This)->lpVtbl -> Suspend(This)

#define IShellDispatch2_EjectPC(This)	\
    (This)->lpVtbl -> EjectPC(This)

#define IShellDispatch2_SetTime(This)	\
    (This)->lpVtbl -> SetTime(This)

#define IShellDispatch2_TrayProperties(This)	\
    (This)->lpVtbl -> TrayProperties(This)

#define IShellDispatch2_Help(This)	\
    (This)->lpVtbl -> Help(This)

#define IShellDispatch2_FindFiles(This)	\
    (This)->lpVtbl -> FindFiles(This)

#define IShellDispatch2_FindComputer(This)	\
    (This)->lpVtbl -> FindComputer(This)

#define IShellDispatch2_RefreshMenu(This)	\
    (This)->lpVtbl -> RefreshMenu(This)

#define IShellDispatch2_ControlPanelItem(This,szDir)	\
    (This)->lpVtbl -> ControlPanelItem(This,szDir)


#define IShellDispatch2_IsRestricted(This,Group,Restriction,plRestrictValue)	\
    (This)->lpVtbl -> IsRestricted(This,Group,Restriction,plRestrictValue)

#define IShellDispatch2_ShellExecute(This,File,vArgs,vDir,vOperation,vShow)	\
    (This)->lpVtbl -> ShellExecute(This,File,vArgs,vDir,vOperation,vShow)

#define IShellDispatch2_FindPrinter(This,name,location,model)	\
    (This)->lpVtbl -> FindPrinter(This,name,location,model)

#define IShellDispatch2_GetSystemInformation(This,name,pv)	\
    (This)->lpVtbl -> GetSystemInformation(This,name,pv)

#define IShellDispatch2_ServiceStart(This,ServiceName,Persistent,pSuccess)	\
    (This)->lpVtbl -> ServiceStart(This,ServiceName,Persistent,pSuccess)

#define IShellDispatch2_ServiceStop(This,ServiceName,Persistent,pSuccess)	\
    (This)->lpVtbl -> ServiceStop(This,ServiceName,Persistent,pSuccess)

#define IShellDispatch2_IsServiceRunning(This,ServiceName,pRunning)	\
    (This)->lpVtbl -> IsServiceRunning(This,ServiceName,pRunning)

#define IShellDispatch2_CanStartStopService(This,ServiceName,pCanStartStop)	\
    (This)->lpVtbl -> CanStartStopService(This,ServiceName,pCanStartStop)

#define IShellDispatch2_ShowBrowserBar(This,bstrClsid,bShow,pSuccess)	\
    (This)->lpVtbl -> ShowBrowserBar(This,bstrClsid,bShow,pSuccess)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_IsRestricted_Proxy( 
    IShellDispatch2 * This,
    /* [in] */ BSTR Group,
    /* [in] */ BSTR Restriction,
    /* [retval][out] */ long *plRestrictValue);


void __RPC_STUB IShellDispatch2_IsRestricted_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_ShellExecute_Proxy( 
    IShellDispatch2 * This,
    /* [in] */ BSTR File,
    /* [optional][in] */ VARIANT vArgs,
    /* [optional][in] */ VARIANT vDir,
    /* [optional][in] */ VARIANT vOperation,
    /* [optional][in] */ VARIANT vShow);


void __RPC_STUB IShellDispatch2_ShellExecute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_FindPrinter_Proxy( 
    IShellDispatch2 * This,
    /* [optional][in] */ BSTR name,
    /* [optional][in] */ BSTR location,
    /* [optional][in] */ BSTR model);


void __RPC_STUB IShellDispatch2_FindPrinter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_GetSystemInformation_Proxy( 
    IShellDispatch2 * This,
    /* [in] */ BSTR name,
    /* [retval][out] */ VARIANT *pv);


void __RPC_STUB IShellDispatch2_GetSystemInformation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_ServiceStart_Proxy( 
    IShellDispatch2 * This,
    /* [in] */ BSTR ServiceName,
    /* [in] */ VARIANT Persistent,
    /* [retval][out] */ VARIANT *pSuccess);


void __RPC_STUB IShellDispatch2_ServiceStart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_ServiceStop_Proxy( 
    IShellDispatch2 * This,
    /* [in] */ BSTR ServiceName,
    /* [in] */ VARIANT Persistent,
    /* [retval][out] */ VARIANT *pSuccess);


void __RPC_STUB IShellDispatch2_ServiceStop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_IsServiceRunning_Proxy( 
    IShellDispatch2 * This,
    /* [in] */ BSTR ServiceName,
    /* [retval][out] */ VARIANT *pRunning);


void __RPC_STUB IShellDispatch2_IsServiceRunning_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_CanStartStopService_Proxy( 
    IShellDispatch2 * This,
    /* [in] */ BSTR ServiceName,
    /* [retval][out] */ VARIANT *pCanStartStop);


void __RPC_STUB IShellDispatch2_CanStartStopService_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch2_ShowBrowserBar_Proxy( 
    IShellDispatch2 * This,
    /* [in] */ BSTR bstrClsid,
    /* [in] */ VARIANT bShow,
    /* [retval][out] */ VARIANT *pSuccess);


void __RPC_STUB IShellDispatch2_ShowBrowserBar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellDispatch2_INTERFACE_DEFINED__ */


#ifndef __IShellDispatch3_INTERFACE_DEFINED__
#define __IShellDispatch3_INTERFACE_DEFINED__

/* interface IShellDispatch3 */
/* [object][dual][hidden][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellDispatch3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("177160ca-bb5a-411c-841d-bd38facdeaa0")
    IShellDispatch3 : public IShellDispatch2
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddToRecent( 
            /* [in] */ VARIANT varFile,
            /* [optional][in] */ BSTR bstrCategory) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellDispatch3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellDispatch3 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellDispatch3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellDispatch3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IShellDispatch3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IShellDispatch3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IShellDispatch3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IShellDispatch3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IShellDispatch3 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IShellDispatch3 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *NameSpace )( 
            IShellDispatch3 * This,
            /* [in] */ VARIANT vDir,
            /* [retval][out] */ Folder **ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *BrowseForFolder )( 
            IShellDispatch3 * This,
            /* [in] */ long Hwnd,
            /* [in] */ BSTR Title,
            /* [in] */ long Options,
            /* [optional][in] */ VARIANT RootFolder,
            /* [retval][out] */ Folder **ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Windows )( 
            IShellDispatch3 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IShellDispatch3 * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Explore )( 
            IShellDispatch3 * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MinimizeAll )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UndoMinimizeALL )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FileRun )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CascadeWindows )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TileVertically )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TileHorizontally )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShutdownWindows )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Suspend )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EjectPC )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetTime )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TrayProperties )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Help )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindFiles )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindComputer )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RefreshMenu )( 
            IShellDispatch3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ControlPanelItem )( 
            IShellDispatch3 * This,
            /* [in] */ BSTR szDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IsRestricted )( 
            IShellDispatch3 * This,
            /* [in] */ BSTR Group,
            /* [in] */ BSTR Restriction,
            /* [retval][out] */ long *plRestrictValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShellExecute )( 
            IShellDispatch3 * This,
            /* [in] */ BSTR File,
            /* [optional][in] */ VARIANT vArgs,
            /* [optional][in] */ VARIANT vDir,
            /* [optional][in] */ VARIANT vOperation,
            /* [optional][in] */ VARIANT vShow);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindPrinter )( 
            IShellDispatch3 * This,
            /* [optional][in] */ BSTR name,
            /* [optional][in] */ BSTR location,
            /* [optional][in] */ BSTR model);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetSystemInformation )( 
            IShellDispatch3 * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pv);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ServiceStart )( 
            IShellDispatch3 * This,
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ServiceStop )( 
            IShellDispatch3 * This,
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IsServiceRunning )( 
            IShellDispatch3 * This,
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT *pRunning);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CanStartStopService )( 
            IShellDispatch3 * This,
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT *pCanStartStop);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShowBrowserBar )( 
            IShellDispatch3 * This,
            /* [in] */ BSTR bstrClsid,
            /* [in] */ VARIANT bShow,
            /* [retval][out] */ VARIANT *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddToRecent )( 
            IShellDispatch3 * This,
            /* [in] */ VARIANT varFile,
            /* [optional][in] */ BSTR bstrCategory);
        
        END_INTERFACE
    } IShellDispatch3Vtbl;

    interface IShellDispatch3
    {
        CONST_VTBL struct IShellDispatch3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellDispatch3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellDispatch3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellDispatch3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellDispatch3_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellDispatch3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellDispatch3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellDispatch3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellDispatch3_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define IShellDispatch3_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define IShellDispatch3_NameSpace(This,vDir,ppsdf)	\
    (This)->lpVtbl -> NameSpace(This,vDir,ppsdf)

#define IShellDispatch3_BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)	\
    (This)->lpVtbl -> BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)

#define IShellDispatch3_Windows(This,ppid)	\
    (This)->lpVtbl -> Windows(This,ppid)

#define IShellDispatch3_Open(This,vDir)	\
    (This)->lpVtbl -> Open(This,vDir)

#define IShellDispatch3_Explore(This,vDir)	\
    (This)->lpVtbl -> Explore(This,vDir)

#define IShellDispatch3_MinimizeAll(This)	\
    (This)->lpVtbl -> MinimizeAll(This)

#define IShellDispatch3_UndoMinimizeALL(This)	\
    (This)->lpVtbl -> UndoMinimizeALL(This)

#define IShellDispatch3_FileRun(This)	\
    (This)->lpVtbl -> FileRun(This)

#define IShellDispatch3_CascadeWindows(This)	\
    (This)->lpVtbl -> CascadeWindows(This)

#define IShellDispatch3_TileVertically(This)	\
    (This)->lpVtbl -> TileVertically(This)

#define IShellDispatch3_TileHorizontally(This)	\
    (This)->lpVtbl -> TileHorizontally(This)

#define IShellDispatch3_ShutdownWindows(This)	\
    (This)->lpVtbl -> ShutdownWindows(This)

#define IShellDispatch3_Suspend(This)	\
    (This)->lpVtbl -> Suspend(This)

#define IShellDispatch3_EjectPC(This)	\
    (This)->lpVtbl -> EjectPC(This)

#define IShellDispatch3_SetTime(This)	\
    (This)->lpVtbl -> SetTime(This)

#define IShellDispatch3_TrayProperties(This)	\
    (This)->lpVtbl -> TrayProperties(This)

#define IShellDispatch3_Help(This)	\
    (This)->lpVtbl -> Help(This)

#define IShellDispatch3_FindFiles(This)	\
    (This)->lpVtbl -> FindFiles(This)

#define IShellDispatch3_FindComputer(This)	\
    (This)->lpVtbl -> FindComputer(This)

#define IShellDispatch3_RefreshMenu(This)	\
    (This)->lpVtbl -> RefreshMenu(This)

#define IShellDispatch3_ControlPanelItem(This,szDir)	\
    (This)->lpVtbl -> ControlPanelItem(This,szDir)


#define IShellDispatch3_IsRestricted(This,Group,Restriction,plRestrictValue)	\
    (This)->lpVtbl -> IsRestricted(This,Group,Restriction,plRestrictValue)

#define IShellDispatch3_ShellExecute(This,File,vArgs,vDir,vOperation,vShow)	\
    (This)->lpVtbl -> ShellExecute(This,File,vArgs,vDir,vOperation,vShow)

#define IShellDispatch3_FindPrinter(This,name,location,model)	\
    (This)->lpVtbl -> FindPrinter(This,name,location,model)

#define IShellDispatch3_GetSystemInformation(This,name,pv)	\
    (This)->lpVtbl -> GetSystemInformation(This,name,pv)

#define IShellDispatch3_ServiceStart(This,ServiceName,Persistent,pSuccess)	\
    (This)->lpVtbl -> ServiceStart(This,ServiceName,Persistent,pSuccess)

#define IShellDispatch3_ServiceStop(This,ServiceName,Persistent,pSuccess)	\
    (This)->lpVtbl -> ServiceStop(This,ServiceName,Persistent,pSuccess)

#define IShellDispatch3_IsServiceRunning(This,ServiceName,pRunning)	\
    (This)->lpVtbl -> IsServiceRunning(This,ServiceName,pRunning)

#define IShellDispatch3_CanStartStopService(This,ServiceName,pCanStartStop)	\
    (This)->lpVtbl -> CanStartStopService(This,ServiceName,pCanStartStop)

#define IShellDispatch3_ShowBrowserBar(This,bstrClsid,bShow,pSuccess)	\
    (This)->lpVtbl -> ShowBrowserBar(This,bstrClsid,bShow,pSuccess)


#define IShellDispatch3_AddToRecent(This,varFile,bstrCategory)	\
    (This)->lpVtbl -> AddToRecent(This,varFile,bstrCategory)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch3_AddToRecent_Proxy( 
    IShellDispatch3 * This,
    /* [in] */ VARIANT varFile,
    /* [optional][in] */ BSTR bstrCategory);


void __RPC_STUB IShellDispatch3_AddToRecent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellDispatch3_INTERFACE_DEFINED__ */


#ifndef __IShellDispatch4_INTERFACE_DEFINED__
#define __IShellDispatch4_INTERFACE_DEFINED__

/* interface IShellDispatch4 */
/* [object][dual][hidden][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IShellDispatch4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e0b5fe9f-af6c-4581-be24-99a86a6140f4")
    IShellDispatch4 : public IShellDispatch3
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ExecuteDefaultClient( 
            /* [in] */ BSTR bstrClient) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ToggleDesktop( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ExplorerPolicy( 
            /* [in] */ BSTR bstrPolicyName,
            /* [retval][out] */ VARIANT *pValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IShellDispatch4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IShellDispatch4 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IShellDispatch4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IShellDispatch4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IShellDispatch4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IShellDispatch4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IShellDispatch4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IShellDispatch4 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            IShellDispatch4 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IShellDispatch4 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *NameSpace )( 
            IShellDispatch4 * This,
            /* [in] */ VARIANT vDir,
            /* [retval][out] */ Folder **ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *BrowseForFolder )( 
            IShellDispatch4 * This,
            /* [in] */ long Hwnd,
            /* [in] */ BSTR Title,
            /* [in] */ long Options,
            /* [optional][in] */ VARIANT RootFolder,
            /* [retval][out] */ Folder **ppsdf);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Windows )( 
            IShellDispatch4 * This,
            /* [retval][out] */ IDispatch **ppid);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            IShellDispatch4 * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Explore )( 
            IShellDispatch4 * This,
            /* [in] */ VARIANT vDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MinimizeAll )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UndoMinimizeALL )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FileRun )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CascadeWindows )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TileVertically )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TileHorizontally )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShutdownWindows )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Suspend )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EjectPC )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetTime )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TrayProperties )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Help )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindFiles )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindComputer )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RefreshMenu )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ControlPanelItem )( 
            IShellDispatch4 * This,
            /* [in] */ BSTR szDir);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IsRestricted )( 
            IShellDispatch4 * This,
            /* [in] */ BSTR Group,
            /* [in] */ BSTR Restriction,
            /* [retval][out] */ long *plRestrictValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShellExecute )( 
            IShellDispatch4 * This,
            /* [in] */ BSTR File,
            /* [optional][in] */ VARIANT vArgs,
            /* [optional][in] */ VARIANT vDir,
            /* [optional][in] */ VARIANT vOperation,
            /* [optional][in] */ VARIANT vShow);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindPrinter )( 
            IShellDispatch4 * This,
            /* [optional][in] */ BSTR name,
            /* [optional][in] */ BSTR location,
            /* [optional][in] */ BSTR model);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetSystemInformation )( 
            IShellDispatch4 * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pv);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ServiceStart )( 
            IShellDispatch4 * This,
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ServiceStop )( 
            IShellDispatch4 * This,
            /* [in] */ BSTR ServiceName,
            /* [in] */ VARIANT Persistent,
            /* [retval][out] */ VARIANT *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IsServiceRunning )( 
            IShellDispatch4 * This,
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT *pRunning);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CanStartStopService )( 
            IShellDispatch4 * This,
            /* [in] */ BSTR ServiceName,
            /* [retval][out] */ VARIANT *pCanStartStop);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShowBrowserBar )( 
            IShellDispatch4 * This,
            /* [in] */ BSTR bstrClsid,
            /* [in] */ VARIANT bShow,
            /* [retval][out] */ VARIANT *pSuccess);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddToRecent )( 
            IShellDispatch4 * This,
            /* [in] */ VARIANT varFile,
            /* [optional][in] */ BSTR bstrCategory);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ExecuteDefaultClient )( 
            IShellDispatch4 * This,
            /* [in] */ BSTR bstrClient);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ToggleDesktop )( 
            IShellDispatch4 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ExplorerPolicy )( 
            IShellDispatch4 * This,
            /* [in] */ BSTR bstrPolicyName,
            /* [retval][out] */ VARIANT *pValue);
        
        END_INTERFACE
    } IShellDispatch4Vtbl;

    interface IShellDispatch4
    {
        CONST_VTBL struct IShellDispatch4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IShellDispatch4_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IShellDispatch4_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IShellDispatch4_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IShellDispatch4_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IShellDispatch4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IShellDispatch4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IShellDispatch4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IShellDispatch4_get_Application(This,ppid)	\
    (This)->lpVtbl -> get_Application(This,ppid)

#define IShellDispatch4_get_Parent(This,ppid)	\
    (This)->lpVtbl -> get_Parent(This,ppid)

#define IShellDispatch4_NameSpace(This,vDir,ppsdf)	\
    (This)->lpVtbl -> NameSpace(This,vDir,ppsdf)

#define IShellDispatch4_BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)	\
    (This)->lpVtbl -> BrowseForFolder(This,Hwnd,Title,Options,RootFolder,ppsdf)

#define IShellDispatch4_Windows(This,ppid)	\
    (This)->lpVtbl -> Windows(This,ppid)

#define IShellDispatch4_Open(This,vDir)	\
    (This)->lpVtbl -> Open(This,vDir)

#define IShellDispatch4_Explore(This,vDir)	\
    (This)->lpVtbl -> Explore(This,vDir)

#define IShellDispatch4_MinimizeAll(This)	\
    (This)->lpVtbl -> MinimizeAll(This)

#define IShellDispatch4_UndoMinimizeALL(This)	\
    (This)->lpVtbl -> UndoMinimizeALL(This)

#define IShellDispatch4_FileRun(This)	\
    (This)->lpVtbl -> FileRun(This)

#define IShellDispatch4_CascadeWindows(This)	\
    (This)->lpVtbl -> CascadeWindows(This)

#define IShellDispatch4_TileVertically(This)	\
    (This)->lpVtbl -> TileVertically(This)

#define IShellDispatch4_TileHorizontally(This)	\
    (This)->lpVtbl -> TileHorizontally(This)

#define IShellDispatch4_ShutdownWindows(This)	\
    (This)->lpVtbl -> ShutdownWindows(This)

#define IShellDispatch4_Suspend(This)	\
    (This)->lpVtbl -> Suspend(This)

#define IShellDispatch4_EjectPC(This)	\
    (This)->lpVtbl -> EjectPC(This)

#define IShellDispatch4_SetTime(This)	\
    (This)->lpVtbl -> SetTime(This)

#define IShellDispatch4_TrayProperties(This)	\
    (This)->lpVtbl -> TrayProperties(This)

#define IShellDispatch4_Help(This)	\
    (This)->lpVtbl -> Help(This)

#define IShellDispatch4_FindFiles(This)	\
    (This)->lpVtbl -> FindFiles(This)

#define IShellDispatch4_FindComputer(This)	\
    (This)->lpVtbl -> FindComputer(This)

#define IShellDispatch4_RefreshMenu(This)	\
    (This)->lpVtbl -> RefreshMenu(This)

#define IShellDispatch4_ControlPanelItem(This,szDir)	\
    (This)->lpVtbl -> ControlPanelItem(This,szDir)


#define IShellDispatch4_IsRestricted(This,Group,Restriction,plRestrictValue)	\
    (This)->lpVtbl -> IsRestricted(This,Group,Restriction,plRestrictValue)

#define IShellDispatch4_ShellExecute(This,File,vArgs,vDir,vOperation,vShow)	\
    (This)->lpVtbl -> ShellExecute(This,File,vArgs,vDir,vOperation,vShow)

#define IShellDispatch4_FindPrinter(This,name,location,model)	\
    (This)->lpVtbl -> FindPrinter(This,name,location,model)

#define IShellDispatch4_GetSystemInformation(This,name,pv)	\
    (This)->lpVtbl -> GetSystemInformation(This,name,pv)

#define IShellDispatch4_ServiceStart(This,ServiceName,Persistent,pSuccess)	\
    (This)->lpVtbl -> ServiceStart(This,ServiceName,Persistent,pSuccess)

#define IShellDispatch4_ServiceStop(This,ServiceName,Persistent,pSuccess)	\
    (This)->lpVtbl -> ServiceStop(This,ServiceName,Persistent,pSuccess)

#define IShellDispatch4_IsServiceRunning(This,ServiceName,pRunning)	\
    (This)->lpVtbl -> IsServiceRunning(This,ServiceName,pRunning)

#define IShellDispatch4_CanStartStopService(This,ServiceName,pCanStartStop)	\
    (This)->lpVtbl -> CanStartStopService(This,ServiceName,pCanStartStop)

#define IShellDispatch4_ShowBrowserBar(This,bstrClsid,bShow,pSuccess)	\
    (This)->lpVtbl -> ShowBrowserBar(This,bstrClsid,bShow,pSuccess)


#define IShellDispatch4_AddToRecent(This,varFile,bstrCategory)	\
    (This)->lpVtbl -> AddToRecent(This,varFile,bstrCategory)


#define IShellDispatch4_ExecuteDefaultClient(This,bstrClient)	\
    (This)->lpVtbl -> ExecuteDefaultClient(This,bstrClient)

#define IShellDispatch4_ToggleDesktop(This)	\
    (This)->lpVtbl -> ToggleDesktop(This)

#define IShellDispatch4_ExplorerPolicy(This,bstrPolicyName,pValue)	\
    (This)->lpVtbl -> ExplorerPolicy(This,bstrPolicyName,pValue)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch4_ExecuteDefaultClient_Proxy( 
    IShellDispatch4 * This,
    /* [in] */ BSTR bstrClient);


void __RPC_STUB IShellDispatch4_ExecuteDefaultClient_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch4_ToggleDesktop_Proxy( 
    IShellDispatch4 * This);


void __RPC_STUB IShellDispatch4_ToggleDesktop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring] */ HRESULT STDMETHODCALLTYPE IShellDispatch4_ExplorerPolicy_Proxy( 
    IShellDispatch4 * This,
    /* [in] */ BSTR bstrPolicyName,
    /* [retval][out] */ VARIANT *pValue);


void __RPC_STUB IShellDispatch4_ExplorerPolicy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IShellDispatch4_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_Shell;

#ifdef __cplusplus

class DECLSPEC_UUID("13709620-C279-11CE-A49E-444553540000")
Shell;
#endif

EXTERN_C const CLSID CLSID_ShellDispatchInproc;

#ifdef __cplusplus

class DECLSPEC_UUID("0A89A860-D7B1-11CE-8350-444553540000")
ShellDispatchInproc;
#endif

EXTERN_C const CLSID CLSID_WebViewFolderContents;

#ifdef __cplusplus

class DECLSPEC_UUID("1820FED0-473E-11D0-A96C-00C04FD705A2")
WebViewFolderContents;
#endif

#ifndef __DSearchCommandEvents_DISPINTERFACE_DEFINED__
#define __DSearchCommandEvents_DISPINTERFACE_DEFINED__

/* dispinterface DSearchCommandEvents */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID_DSearchCommandEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("60890160-69f0-11d1-b758-00a0c90564fe")
    DSearchCommandEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DSearchCommandEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DSearchCommandEvents * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DSearchCommandEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DSearchCommandEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DSearchCommandEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DSearchCommandEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DSearchCommandEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DSearchCommandEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DSearchCommandEventsVtbl;

    interface DSearchCommandEvents
    {
        CONST_VTBL struct DSearchCommandEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DSearchCommandEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DSearchCommandEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DSearchCommandEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DSearchCommandEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DSearchCommandEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DSearchCommandEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DSearchCommandEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DSearchCommandEvents_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_SearchCommand;

#ifdef __cplusplus

class DECLSPEC_UUID("B005E690-678D-11d1-B758-00A0C90564FE")
SearchCommand;
#endif

#ifndef __IFileSearchBand_INTERFACE_DEFINED__
#define __IFileSearchBand_INTERFACE_DEFINED__

/* interface IFileSearchBand */
/* [object][unique][hidden][dual][oleautomation][helpstring][uuid] */ 


EXTERN_C const IID IID_IFileSearchBand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2D91EEA1-9932-11d2-BE86-00A0C9A83DA1")
    IFileSearchBand : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetFocus( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetSearchParameters( 
            /* [in] */ BSTR *pbstrSearchID,
            /* [in] */ VARIANT_BOOL bNavToResults,
            /* [optional][in] */ VARIANT *pvarScope,
            /* [optional][in] */ VARIANT *pvarQueryFile) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SearchID( 
            /* [retval][out] */ BSTR *pbstrSearchID) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Scope( 
            /* [retval][out] */ VARIANT *pvarScope) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_QueryFile( 
            /* [retval][out] */ VARIANT *pvarFile) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IFileSearchBandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IFileSearchBand * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IFileSearchBand * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IFileSearchBand * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IFileSearchBand * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IFileSearchBand * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IFileSearchBand * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IFileSearchBand * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetFocus )( 
            IFileSearchBand * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetSearchParameters )( 
            IFileSearchBand * This,
            /* [in] */ BSTR *pbstrSearchID,
            /* [in] */ VARIANT_BOOL bNavToResults,
            /* [optional][in] */ VARIANT *pvarScope,
            /* [optional][in] */ VARIANT *pvarQueryFile);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SearchID )( 
            IFileSearchBand * This,
            /* [retval][out] */ BSTR *pbstrSearchID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Scope )( 
            IFileSearchBand * This,
            /* [retval][out] */ VARIANT *pvarScope);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_QueryFile )( 
            IFileSearchBand * This,
            /* [retval][out] */ VARIANT *pvarFile);
        
        END_INTERFACE
    } IFileSearchBandVtbl;

    interface IFileSearchBand
    {
        CONST_VTBL struct IFileSearchBandVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFileSearchBand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IFileSearchBand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IFileSearchBand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IFileSearchBand_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IFileSearchBand_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IFileSearchBand_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IFileSearchBand_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IFileSearchBand_SetFocus(This)	\
    (This)->lpVtbl -> SetFocus(This)

#define IFileSearchBand_SetSearchParameters(This,pbstrSearchID,bNavToResults,pvarScope,pvarQueryFile)	\
    (This)->lpVtbl -> SetSearchParameters(This,pbstrSearchID,bNavToResults,pvarScope,pvarQueryFile)

#define IFileSearchBand_get_SearchID(This,pbstrSearchID)	\
    (This)->lpVtbl -> get_SearchID(This,pbstrSearchID)

#define IFileSearchBand_get_Scope(This,pvarScope)	\
    (This)->lpVtbl -> get_Scope(This,pvarScope)

#define IFileSearchBand_get_QueryFile(This,pvarFile)	\
    (This)->lpVtbl -> get_QueryFile(This,pvarFile)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IFileSearchBand_SetFocus_Proxy( 
    IFileSearchBand * This);


void __RPC_STUB IFileSearchBand_SetFocus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IFileSearchBand_SetSearchParameters_Proxy( 
    IFileSearchBand * This,
    /* [in] */ BSTR *pbstrSearchID,
    /* [in] */ VARIANT_BOOL bNavToResults,
    /* [optional][in] */ VARIANT *pvarScope,
    /* [optional][in] */ VARIANT *pvarQueryFile);


void __RPC_STUB IFileSearchBand_SetSearchParameters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IFileSearchBand_get_SearchID_Proxy( 
    IFileSearchBand * This,
    /* [retval][out] */ BSTR *pbstrSearchID);


void __RPC_STUB IFileSearchBand_get_SearchID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IFileSearchBand_get_Scope_Proxy( 
    IFileSearchBand * This,
    /* [retval][out] */ VARIANT *pvarScope);


void __RPC_STUB IFileSearchBand_get_Scope_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE IFileSearchBand_get_QueryFile_Proxy( 
    IFileSearchBand * This,
    /* [retval][out] */ VARIANT *pvarFile);


void __RPC_STUB IFileSearchBand_get_QueryFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFileSearchBand_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_FileSearchBand;

#ifdef __cplusplus

class DECLSPEC_UUID("C4EE31F3-4768-11D2-BE5C-00A0C9A83DA1")
FileSearchBand;
#endif
#endif /* __Shell32_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_shldisp_0268 */
/* [local] */ 


//-------------------------------------------------------------------------
//
// IAutoComplete interface
//
//
// [Member functions]
//
// IAutoComplete::Init(hwndEdit, punkACL, pwszRegKeyPath, pwszQuickComplete)
//   This function initializes an AutoComplete object, telling it
//   what control to subclass, and what list of strings to process.
//
// IAutoComplete::Enable(fEnable)
//   This function enables or disables the AutoComplete functionality.
//
//-------------------------------------------------------------------------


extern RPC_IF_HANDLE __MIDL_itf_shldisp_0268_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shldisp_0268_v0_0_s_ifspec;

#ifndef __IAutoComplete_INTERFACE_DEFINED__
#define __IAutoComplete_INTERFACE_DEFINED__

/* interface IAutoComplete */
/* [unique][uuid][object][local][helpstring] */ 

typedef /* [unique] */ IAutoComplete *LPAUTOCOMPLETE;


EXTERN_C const IID IID_IAutoComplete;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00bb2762-6a77-11d0-a535-00c04fd7d062")
    IAutoComplete : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Init( 
            /* [in] */ HWND hwndEdit,
            /* [unique][in] */ IUnknown *punkACL,
            /* [unique][in] */ LPCOLESTR pwszRegKeyPath,
            /* [in] */ LPCOLESTR pwszQuickComplete) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Enable( 
            /* [in] */ BOOL fEnable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAutoCompleteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAutoComplete * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAutoComplete * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAutoComplete * This);
        
        HRESULT ( STDMETHODCALLTYPE *Init )( 
            IAutoComplete * This,
            /* [in] */ HWND hwndEdit,
            /* [unique][in] */ IUnknown *punkACL,
            /* [unique][in] */ LPCOLESTR pwszRegKeyPath,
            /* [in] */ LPCOLESTR pwszQuickComplete);
        
        HRESULT ( STDMETHODCALLTYPE *Enable )( 
            IAutoComplete * This,
            /* [in] */ BOOL fEnable);
        
        END_INTERFACE
    } IAutoCompleteVtbl;

    interface IAutoComplete
    {
        CONST_VTBL struct IAutoCompleteVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAutoComplete_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAutoComplete_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAutoComplete_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAutoComplete_Init(This,hwndEdit,punkACL,pwszRegKeyPath,pwszQuickComplete)	\
    (This)->lpVtbl -> Init(This,hwndEdit,punkACL,pwszRegKeyPath,pwszQuickComplete)

#define IAutoComplete_Enable(This,fEnable)	\
    (This)->lpVtbl -> Enable(This,fEnable)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAutoComplete_Init_Proxy( 
    IAutoComplete * This,
    /* [in] */ HWND hwndEdit,
    /* [unique][in] */ IUnknown *punkACL,
    /* [unique][in] */ LPCOLESTR pwszRegKeyPath,
    /* [in] */ LPCOLESTR pwszQuickComplete);


void __RPC_STUB IAutoComplete_Init_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAutoComplete_Enable_Proxy( 
    IAutoComplete * This,
    /* [in] */ BOOL fEnable);


void __RPC_STUB IAutoComplete_Enable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAutoComplete_INTERFACE_DEFINED__ */


#ifndef __IAutoComplete2_INTERFACE_DEFINED__
#define __IAutoComplete2_INTERFACE_DEFINED__

/* interface IAutoComplete2 */
/* [unique][uuid][object][local][helpstring] */ 

typedef /* [unique] */ IAutoComplete2 *LPAUTOCOMPLETE2;

typedef 
enum _tagAUTOCOMPLETEOPTIONS
    {	ACO_NONE	= 0,
	ACO_AUTOSUGGEST	= 0x1,
	ACO_AUTOAPPEND	= 0x2,
	ACO_SEARCH	= 0x4,
	ACO_FILTERPREFIXES	= 0x8,
	ACO_USETAB	= 0x10,
	ACO_UPDOWNKEYDROPSLIST	= 0x20,
	ACO_RTLREADING	= 0x40
    } 	AUTOCOMPLETEOPTIONS;


EXTERN_C const IID IID_IAutoComplete2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EAC04BC0-3791-11d2-BB95-0060977B464C")
    IAutoComplete2 : public IAutoComplete
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetOptions( 
            /* [in] */ DWORD dwFlag) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOptions( 
            /* [out] */ DWORD *pdwFlag) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAutoComplete2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAutoComplete2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAutoComplete2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAutoComplete2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Init )( 
            IAutoComplete2 * This,
            /* [in] */ HWND hwndEdit,
            /* [unique][in] */ IUnknown *punkACL,
            /* [unique][in] */ LPCOLESTR pwszRegKeyPath,
            /* [in] */ LPCOLESTR pwszQuickComplete);
        
        HRESULT ( STDMETHODCALLTYPE *Enable )( 
            IAutoComplete2 * This,
            /* [in] */ BOOL fEnable);
        
        HRESULT ( STDMETHODCALLTYPE *SetOptions )( 
            IAutoComplete2 * This,
            /* [in] */ DWORD dwFlag);
        
        HRESULT ( STDMETHODCALLTYPE *GetOptions )( 
            IAutoComplete2 * This,
            /* [out] */ DWORD *pdwFlag);
        
        END_INTERFACE
    } IAutoComplete2Vtbl;

    interface IAutoComplete2
    {
        CONST_VTBL struct IAutoComplete2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAutoComplete2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAutoComplete2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAutoComplete2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAutoComplete2_Init(This,hwndEdit,punkACL,pwszRegKeyPath,pwszQuickComplete)	\
    (This)->lpVtbl -> Init(This,hwndEdit,punkACL,pwszRegKeyPath,pwszQuickComplete)

#define IAutoComplete2_Enable(This,fEnable)	\
    (This)->lpVtbl -> Enable(This,fEnable)


#define IAutoComplete2_SetOptions(This,dwFlag)	\
    (This)->lpVtbl -> SetOptions(This,dwFlag)

#define IAutoComplete2_GetOptions(This,pdwFlag)	\
    (This)->lpVtbl -> GetOptions(This,pdwFlag)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAutoComplete2_SetOptions_Proxy( 
    IAutoComplete2 * This,
    /* [in] */ DWORD dwFlag);


void __RPC_STUB IAutoComplete2_SetOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAutoComplete2_GetOptions_Proxy( 
    IAutoComplete2 * This,
    /* [out] */ DWORD *pdwFlag);


void __RPC_STUB IAutoComplete2_GetOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAutoComplete2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shldisp_0270 */
/* [local] */ 

// INTERFACE: IEnumACString
//
// This interface was implemented to return autocomplete strings
// into the caller's buffer (to reduce the number of memory allocations).
// A sort index is also returned to control the order of items displayed.
// by autocomplete.  The sort index should be set to zero if unused.
//
// The NextItem method increments the current index by one (similar to Next
// when one item is requested).
//


extern RPC_IF_HANDLE __MIDL_itf_shldisp_0270_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shldisp_0270_v0_0_s_ifspec;

#ifndef __IEnumACString_INTERFACE_DEFINED__
#define __IEnumACString_INTERFACE_DEFINED__

/* interface IEnumACString */
/* [unique][uuid][object][local][helpstring] */ 

typedef /* [unique] */ IEnumACString *PENUMACSTRING;

typedef /* [unique] */ IEnumACString *LPENUMACSTRING;

typedef 
enum _tagACENUMOPTION
    {	ACEO_NONE	= 0,
	ACEO_MOSTRECENTFIRST	= 0x1,
	ACEO_FIRSTUNUSED	= 0x10000
    } 	ACENUMOPTION;


EXTERN_C const IID IID_IEnumACString;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8E74C210-CF9D-4eaf-A403-7356428F0A5A")
    IEnumACString : public IEnumString
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE NextItem( 
            /* [size_is][unique][string][out] */ LPOLESTR pszUrl,
            /* [in] */ ULONG cchMax,
            /* [out] */ ULONG *pulSortIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEnumOptions( 
            /* [in] */ DWORD dwOptions) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnumOptions( 
            /* [out] */ DWORD *pdwOptions) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumACStringVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumACString * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumACString * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumACString * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumACString * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ LPOLESTR *rgelt,
            /* [out] */ ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumACString * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumACString * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumACString * This,
            /* [out] */ IEnumString **ppenum);
        
        HRESULT ( STDMETHODCALLTYPE *NextItem )( 
            IEnumACString * This,
            /* [size_is][unique][string][out] */ LPOLESTR pszUrl,
            /* [in] */ ULONG cchMax,
            /* [out] */ ULONG *pulSortIndex);
        
        HRESULT ( STDMETHODCALLTYPE *SetEnumOptions )( 
            IEnumACString * This,
            /* [in] */ DWORD dwOptions);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnumOptions )( 
            IEnumACString * This,
            /* [out] */ DWORD *pdwOptions);
        
        END_INTERFACE
    } IEnumACStringVtbl;

    interface IEnumACString
    {
        CONST_VTBL struct IEnumACStringVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumACString_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumACString_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumACString_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumACString_Next(This,celt,rgelt,pceltFetched)	\
    (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched)

#define IEnumACString_Skip(This,celt)	\
    (This)->lpVtbl -> Skip(This,celt)

#define IEnumACString_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumACString_Clone(This,ppenum)	\
    (This)->lpVtbl -> Clone(This,ppenum)


#define IEnumACString_NextItem(This,pszUrl,cchMax,pulSortIndex)	\
    (This)->lpVtbl -> NextItem(This,pszUrl,cchMax,pulSortIndex)

#define IEnumACString_SetEnumOptions(This,dwOptions)	\
    (This)->lpVtbl -> SetEnumOptions(This,dwOptions)

#define IEnumACString_GetEnumOptions(This,pdwOptions)	\
    (This)->lpVtbl -> GetEnumOptions(This,pdwOptions)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumACString_NextItem_Proxy( 
    IEnumACString * This,
    /* [size_is][unique][string][out] */ LPOLESTR pszUrl,
    /* [in] */ ULONG cchMax,
    /* [out] */ ULONG *pulSortIndex);


void __RPC_STUB IEnumACString_NextItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumACString_SetEnumOptions_Proxy( 
    IEnumACString * This,
    /* [in] */ DWORD dwOptions);


void __RPC_STUB IEnumACString_SetEnumOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumACString_GetEnumOptions_Proxy( 
    IEnumACString * This,
    /* [out] */ DWORD *pdwOptions);


void __RPC_STUB IEnumACString_GetEnumOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumACString_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_shldisp_0271 */
/* [local] */ 

// INTERFACE: IAsyncOperation
//
// This interface was implemented to turn some previously synchronous
// interfaces into async.  The following example is for
// doing the IDataObject::Drop() operation asynchronously.
//
// Sometimes the rendering of the IDataObject data (IDataObject::GetData() or
// STGMEDIUM.pStream->Read()) can be time intensive.  The IDropTarget
// may want to do this on another thread.
//
// Implimentation Check list:
// DoDragDrop Caller:
//    If this code can support asynch operations, then it needs to
//    QueryInterface() the IDataObject for IAsyncOperation.
//    IAsyncOperation::SetAsyncMode(VARIANT_TRUE).
//    After calling DoDragDrop(), call InOperation().  If any call fails
//    or InOperation() return FALSE, use the pdwEffect returned by DoDragDrop()
//    and the operation completed synchrously.
//
// OleSetClipboard Caller:
//    If this code can support asynch operations, then it needs to
//    QueryInterface() the IDataObject for IAsyncOperation.  Then call
//    IAsyncOperation::SetAsyncMode(VARIANT_TRUE).
//    If any of that fails, the final dwEffect should be passed to the IDataObject via
//    CFSTR_PERFORMEDDROPEFFECT.
//
// IDataObect Object:
//    IAsyncOperation::GetAsyncMode() should return whatever was last passed in
//          fDoOpAsync to ::SetAsyncMode() or VARIANT_FALSE if ::SetAsyncMode()
//          was never called.
//    IAsyncOperation::SetAsyncMode() should AddRef and store paocb.
//    IAsyncOperation::StartOperation() should store the fact that this was called and
//          cause InOperation() to return VARIANT_TRUE.  pbcReserved is not used and needs
//          to be NULL.
//    IAsyncOperation::InOperation() should return VARIANT_TRUE only if ::StartOperation()
//          was called.
//    IAsyncOperation::EndOperation() needs to call paocbpaocb->EndOperation() with the same
//          parameters.  Then release paocb.
//    IDataObject::SetData(CFSTR_PERFORMEDDROPEFFECT) When this happens, call
//          EndOperation(<into VAR>S_OK, NULL, <into VAR>dwEffect) and pass the dwEffect from the hglobal.
//
// IDropTarget Object:
//    IDropTarget::Drop() If asynch operations aren't supported, nothing is required.
//          The asynch operation can only happen if GetAsyncMode() returns VARIANT_TRUE.
//          Before starting the asynch operation, StartOperation(NULL) needs to be called before
//          returning from IDropTarget::Drop().



extern RPC_IF_HANDLE __MIDL_itf_shldisp_0271_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_shldisp_0271_v0_0_s_ifspec;

#ifndef __IAsyncOperation_INTERFACE_DEFINED__
#define __IAsyncOperation_INTERFACE_DEFINED__

/* interface IAsyncOperation */
/* [object][uuid][helpstring] */ 

typedef /* [unique] */ IAsyncOperation *LPASYNCOPERATION;


EXTERN_C const IID IID_IAsyncOperation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3D8B0590-F691-11d2-8EA9-006097DF5BD4")
    IAsyncOperation : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetAsyncMode( 
            /* [in] */ BOOL fDoOpAsync) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAsyncMode( 
            /* [out] */ BOOL *pfIsOpAsync) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StartOperation( 
            /* [optional][unique][in] */ IBindCtx *pbcReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InOperation( 
            /* [out] */ BOOL *pfInAsyncOp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndOperation( 
            /* [in] */ HRESULT hResult,
            /* [unique][in] */ IBindCtx *pbcReserved,
            /* [in] */ DWORD dwEffects) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAsyncOperationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAsyncOperation * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAsyncOperation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAsyncOperation * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetAsyncMode )( 
            IAsyncOperation * This,
            /* [in] */ BOOL fDoOpAsync);
        
        HRESULT ( STDMETHODCALLTYPE *GetAsyncMode )( 
            IAsyncOperation * This,
            /* [out] */ BOOL *pfIsOpAsync);
        
        HRESULT ( STDMETHODCALLTYPE *StartOperation )( 
            IAsyncOperation * This,
            /* [optional][unique][in] */ IBindCtx *pbcReserved);
        
        HRESULT ( STDMETHODCALLTYPE *InOperation )( 
            IAsyncOperation * This,
            /* [out] */ BOOL *pfInAsyncOp);
        
        HRESULT ( STDMETHODCALLTYPE *EndOperation )( 
            IAsyncOperation * This,
            /* [in] */ HRESULT hResult,
            /* [unique][in] */ IBindCtx *pbcReserved,
            /* [in] */ DWORD dwEffects);
        
        END_INTERFACE
    } IAsyncOperationVtbl;

    interface IAsyncOperation
    {
        CONST_VTBL struct IAsyncOperationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAsyncOperation_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAsyncOperation_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAsyncOperation_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAsyncOperation_SetAsyncMode(This,fDoOpAsync)	\
    (This)->lpVtbl -> SetAsyncMode(This,fDoOpAsync)

#define IAsyncOperation_GetAsyncMode(This,pfIsOpAsync)	\
    (This)->lpVtbl -> GetAsyncMode(This,pfIsOpAsync)

#define IAsyncOperation_StartOperation(This,pbcReserved)	\
    (This)->lpVtbl -> StartOperation(This,pbcReserved)

#define IAsyncOperation_InOperation(This,pfInAsyncOp)	\
    (This)->lpVtbl -> InOperation(This,pfInAsyncOp)

#define IAsyncOperation_EndOperation(This,hResult,pbcReserved,dwEffects)	\
    (This)->lpVtbl -> EndOperation(This,hResult,pbcReserved,dwEffects)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAsyncOperation_SetAsyncMode_Proxy( 
    IAsyncOperation * This,
    /* [in] */ BOOL fDoOpAsync);


void __RPC_STUB IAsyncOperation_SetAsyncMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAsyncOperation_GetAsyncMode_Proxy( 
    IAsyncOperation * This,
    /* [out] */ BOOL *pfIsOpAsync);


void __RPC_STUB IAsyncOperation_GetAsyncMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAsyncOperation_StartOperation_Proxy( 
    IAsyncOperation * This,
    /* [optional][unique][in] */ IBindCtx *pbcReserved);


void __RPC_STUB IAsyncOperation_StartOperation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAsyncOperation_InOperation_Proxy( 
    IAsyncOperation * This,
    /* [out] */ BOOL *pfInAsyncOp);


void __RPC_STUB IAsyncOperation_InOperation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAsyncOperation_EndOperation_Proxy( 
    IAsyncOperation * This,
    /* [in] */ HRESULT hResult,
    /* [unique][in] */ IBindCtx *pbcReserved,
    /* [in] */ DWORD dwEffects);


void __RPC_STUB IAsyncOperation_EndOperation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAsyncOperation_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\smpxp.h ===
/*
 *  S M P X P . H
 *
 *  Definitions used by the Microsoft Sample Transport provider
 *  for service entry calls.
 *
 *  The following MAPI-defined properties are settable in service
 *  entry calls for the Sample Transport Provider.
 *  
 *  Copyright 1993-1999 Microsoft Corporation. All Rights Reserved.
 */

#define BASE_ID 0x6600      /* From MAPITAGS.H comments */

#define PR_SAMPLE_DISPLAY_NAME      PROP_TAG (PT_TSTRING,   (BASE_ID + 0x0001))
#define PR_SAMPLE_EMAIL_ADDR_TYPE   PROP_TAG (PT_TSTRING,   (BASE_ID + 0x0002))
#define PR_SAMPLE_EMAIL_ADDRESS     PROP_TAG (PT_TSTRING,   (BASE_ID + 0x0003))
#define PR_SAMPLE_INBOUND_DIR       PROP_TAG (PT_TSTRING,   (BASE_ID + 0x0004))
#define PR_SAMPLE_OUTBOUND_DIR      PROP_TAG (PT_TSTRING,   (BASE_ID + 0x0005))
#define PR_SAMPLE_FILENAME          PROP_TAG (PT_TSTRING,   (BASE_ID + 0x0006))
#define PR_SAMPLE_DIRECTORY         PROP_TAG (PT_TSTRING,   (BASE_ID + 0x0007))
#define PR_SAMPLE_FLAGS             PROP_TAG (PT_LONG,      (BASE_ID + 0x0008))

#define PR_SAMPLE_FLAG_PEER_TO_PEER ((ULONG) 0x00000001)
#define PR_SAMPLE_FLAG_UI_ALWAYS    ((ULONG) 0x00000002)
#define PR_SAMPLE_FLAG_LOG_EVENTS   ((ULONG) 0x00000004)
#define PR_SAMPLE_FLAG_SAVE_DATA    ((ULONG) 0x00000008)

#define PR_SAMPLE_LOGFILE           PROP_TAG (PT_TSTRING,   (BASE_ID + 0x0009))
#define PR_SAMPLE_LOGHIGHWATER      PROP_TAG (PT_LONG,      (BASE_ID + 0x000A))
#define PR_SAMPLE_LOGLOWWATER       PROP_TAG (PT_LONG,      (BASE_ID + 0x000B))

/* 
 *  The following is a description of each of the Sample Tranpsort 
 *  Provider properties:
 *
 *  PR_SAMPLE_DISPLAY_NAME
 *      Display name of user.
 *
 *  PR_SAMPLE_EMAIL_ADDR_TYPE
 *      Address type of sample transport. This will be used to construct inbound
 *      and outbound addresses where needed. It also will be used to tell the
 *      Spooler what address types we should get.
 *
 *  PR_SAMPLE_EMAIL_ADDRESS
 *      Email address. This will usually be the same as the inbound directory,
 *      although this may tend to have a more canonical form for remote access.
 *
 *  PR_SAMPLE_INBOUND_DIR
 *      Inbound directory. This is where the transport will look in order to
 *      determine whether it has received any mail.
 *
 *  PR_SAMPLE_OUTBOUND_DIR
 *      Outbound directory. The transport will store its message files here
 *      while it is in the process of sending them. The presence of a file
 *      in this directory implies that the transport still has work to do.
 *
 *  PR_SAMPLE_FILENAME
 *      Filename. This is an 8-character root for use by mail-enabled or
 *      workgroup applications to build a complete file specification (by
 *      adding an extension) for data they wish to store for this user.
 *
 *  PR_SAMPLE_DIRECTORY
 *      Directory. This is a directory in which workgroup applications may
 *      wish to store their files pertaining to this user.
 *
 *  PR_SAMPLE_FLAGS
 *      Flags. Contain various options for this transport provider.
 *      Valid values are:
 *
 *          PR_SAMPLE_FLAG_PEER_TO_PEER
 *          PR_SAMPLE_FLAG_UI_ALWAYS
 *          PR_SAMPLE_FLAG_LOG_EVENTS
 *          PR_SAMPLE_FLAG_SAVE_DATA
 *
 *  PR_SAMPLE_LOGFILE
 *      Logfile. This is where logging information will be written. If this
 *      property is not present, we will use (PR_SAMPLE_FILENAME)".LOG"
 *
 *  PR_SAMPLE_LOGHIGHWATER
 *      Logfile high water mark. This is the point at which the log writer will
 *      truncate the logfile so as not to fill up the disk.
 *
 *  PR_SAMPLE_LOGLOWWATER
 *      Logfile low water mark. This is the approximate size that the logfile
 *      writer will truncate the logfile to (modulo a line ending).
 */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\simpdata.h ===
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 5.03.0279 */
/* at Fri Apr 07 06:15:21 2000
 */
/* Compiler settings for simpdata.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32 (32b run), ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __simpdata_h__
#define __simpdata_h__

/* Forward Declarations */ 

#ifndef __OLEDBSimpleProviderListener_FWD_DEFINED__
#define __OLEDBSimpleProviderListener_FWD_DEFINED__
typedef interface OLEDBSimpleProviderListener OLEDBSimpleProviderListener;
#endif 	/* __OLEDBSimpleProviderListener_FWD_DEFINED__ */


#ifndef __OLEDBSimpleProvider_FWD_DEFINED__
#define __OLEDBSimpleProvider_FWD_DEFINED__
typedef interface OLEDBSimpleProvider OLEDBSimpleProvider;
#endif 	/* __OLEDBSimpleProvider_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"

#ifdef __cplusplus
extern "C"{
#endif 

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/* interface __MIDL_itf_simpdata_0000 */
/* [local] */ 

//=--------------------------------------------------------------------------=
// simpdata.h
//=--------------------------------------------------------------------------=
// (C) Copyright 1995-1996 Microsoft Corporation.  All Rights Reserved.
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
// PARTICULAR PURPOSE.
//=--------------------------------------------------------------------------=

#pragma comment(lib,"uuid.lib")

//--------------------------------------------------------------------------
// OLE DB Simple Provider Toolkit

#ifndef SIMPDATA_H
#define SIMPDATA_H

#ifdef _WIN64

typedef LONGLONG		DBROWCOUNT;
typedef LONGLONG		DB_LORDINAL;

#else

typedef LONG DBROWCOUNT;

typedef LONG DB_LORDINAL;

#endif	// _WIN64
#define OSP_IndexLabel      (0)
#define OSP_IndexAll        (~0)
#define OSP_IndexUnknown    (~0)



extern RPC_IF_HANDLE __MIDL_itf_simpdata_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_simpdata_0000_v0_0_s_ifspec;


#ifndef __MSDAOSP_LIBRARY_DEFINED__
#define __MSDAOSP_LIBRARY_DEFINED__

/* library MSDAOSP */
/* [version][lcid][helpstring][uuid] */ 

typedef 
enum OSPFORMAT
    {	OSPFORMAT_RAW	= 0,
	OSPFORMAT_DEFAULT	= 0,
	OSPFORMAT_FORMATTED	= 1,
	OSPFORMAT_HTML	= 2
    }	OSPFORMAT;

typedef 
enum OSPRW
    {	OSPRW_DEFAULT	= 1,
	OSPRW_READONLY	= 0,
	OSPRW_READWRITE	= 1,
	OSPRW_MIXED	= 2
    }	OSPRW;

typedef 
enum OSPFIND
    {	OSPFIND_DEFAULT	= 0,
	OSPFIND_UP	= 1,
	OSPFIND_CASESENSITIVE	= 2,
	OSPFIND_UPCASESENSITIVE	= 3
    }	OSPFIND;

typedef 
enum OSPCOMP
    {	OSPCOMP_EQ	= 1,
	OSPCOMP_DEFAULT	= 1,
	OSPCOMP_LT	= 2,
	OSPCOMP_LE	= 3,
	OSPCOMP_GE	= 4,
	OSPCOMP_GT	= 5,
	OSPCOMP_NE	= 6
    }	OSPCOMP;

typedef 
enum OSPXFER
    {	OSPXFER_COMPLETE	= 0,
	OSPXFER_ABORT	= 1,
	OSPXFER_ERROR	= 2
    }	OSPXFER;

typedef OLEDBSimpleProvider *LPOLEDBSimpleProvider;

EXTERN_C const IID LIBID_MSDAOSP;

#ifndef __OLEDBSimpleProviderListener_INTERFACE_DEFINED__
#define __OLEDBSimpleProviderListener_INTERFACE_DEFINED__

/* interface OLEDBSimpleProviderListener */
/* [version][oleautomation][unique][uuid][object] */ 


EXTERN_C const IID IID_OLEDBSimpleProviderListener;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E0E270C1-C0BE-11d0-8FE4-00A0C90A6341")
    OLEDBSimpleProviderListener : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE aboutToChangeCell( 
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DB_LORDINAL iColumn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE cellChanged( 
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DB_LORDINAL iColumn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE aboutToDeleteRows( 
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DBROWCOUNT cRows) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE deletedRows( 
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DBROWCOUNT cRows) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE aboutToInsertRows( 
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DBROWCOUNT cRows) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE insertedRows( 
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DBROWCOUNT cRows) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE rowsAvailable( 
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DBROWCOUNT cRows) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE transferComplete( 
            /* [in] */ OSPXFER xfer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct OLEDBSimpleProviderListenerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            OLEDBSimpleProviderListener __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            OLEDBSimpleProviderListener __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            OLEDBSimpleProviderListener __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *aboutToChangeCell )( 
            OLEDBSimpleProviderListener __RPC_FAR * This,
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DB_LORDINAL iColumn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *cellChanged )( 
            OLEDBSimpleProviderListener __RPC_FAR * This,
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DB_LORDINAL iColumn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *aboutToDeleteRows )( 
            OLEDBSimpleProviderListener __RPC_FAR * This,
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DBROWCOUNT cRows);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *deletedRows )( 
            OLEDBSimpleProviderListener __RPC_FAR * This,
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DBROWCOUNT cRows);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *aboutToInsertRows )( 
            OLEDBSimpleProviderListener __RPC_FAR * This,
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DBROWCOUNT cRows);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *insertedRows )( 
            OLEDBSimpleProviderListener __RPC_FAR * This,
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DBROWCOUNT cRows);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *rowsAvailable )( 
            OLEDBSimpleProviderListener __RPC_FAR * This,
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DBROWCOUNT cRows);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *transferComplete )( 
            OLEDBSimpleProviderListener __RPC_FAR * This,
            /* [in] */ OSPXFER xfer);
        
        END_INTERFACE
    } OLEDBSimpleProviderListenerVtbl;

    interface OLEDBSimpleProviderListener
    {
        CONST_VTBL struct OLEDBSimpleProviderListenerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OLEDBSimpleProviderListener_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define OLEDBSimpleProviderListener_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define OLEDBSimpleProviderListener_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define OLEDBSimpleProviderListener_aboutToChangeCell(This,iRow,iColumn)	\
    (This)->lpVtbl -> aboutToChangeCell(This,iRow,iColumn)

#define OLEDBSimpleProviderListener_cellChanged(This,iRow,iColumn)	\
    (This)->lpVtbl -> cellChanged(This,iRow,iColumn)

#define OLEDBSimpleProviderListener_aboutToDeleteRows(This,iRow,cRows)	\
    (This)->lpVtbl -> aboutToDeleteRows(This,iRow,cRows)

#define OLEDBSimpleProviderListener_deletedRows(This,iRow,cRows)	\
    (This)->lpVtbl -> deletedRows(This,iRow,cRows)

#define OLEDBSimpleProviderListener_aboutToInsertRows(This,iRow,cRows)	\
    (This)->lpVtbl -> aboutToInsertRows(This,iRow,cRows)

#define OLEDBSimpleProviderListener_insertedRows(This,iRow,cRows)	\
    (This)->lpVtbl -> insertedRows(This,iRow,cRows)

#define OLEDBSimpleProviderListener_rowsAvailable(This,iRow,cRows)	\
    (This)->lpVtbl -> rowsAvailable(This,iRow,cRows)

#define OLEDBSimpleProviderListener_transferComplete(This,xfer)	\
    (This)->lpVtbl -> transferComplete(This,xfer)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE OLEDBSimpleProviderListener_aboutToChangeCell_Proxy( 
    OLEDBSimpleProviderListener __RPC_FAR * This,
    /* [in] */ DBROWCOUNT iRow,
    /* [in] */ DB_LORDINAL iColumn);


void __RPC_STUB OLEDBSimpleProviderListener_aboutToChangeCell_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProviderListener_cellChanged_Proxy( 
    OLEDBSimpleProviderListener __RPC_FAR * This,
    /* [in] */ DBROWCOUNT iRow,
    /* [in] */ DB_LORDINAL iColumn);


void __RPC_STUB OLEDBSimpleProviderListener_cellChanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProviderListener_aboutToDeleteRows_Proxy( 
    OLEDBSimpleProviderListener __RPC_FAR * This,
    /* [in] */ DBROWCOUNT iRow,
    /* [in] */ DBROWCOUNT cRows);


void __RPC_STUB OLEDBSimpleProviderListener_aboutToDeleteRows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProviderListener_deletedRows_Proxy( 
    OLEDBSimpleProviderListener __RPC_FAR * This,
    /* [in] */ DBROWCOUNT iRow,
    /* [in] */ DBROWCOUNT cRows);


void __RPC_STUB OLEDBSimpleProviderListener_deletedRows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProviderListener_aboutToInsertRows_Proxy( 
    OLEDBSimpleProviderListener __RPC_FAR * This,
    /* [in] */ DBROWCOUNT iRow,
    /* [in] */ DBROWCOUNT cRows);


void __RPC_STUB OLEDBSimpleProviderListener_aboutToInsertRows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProviderListener_insertedRows_Proxy( 
    OLEDBSimpleProviderListener __RPC_FAR * This,
    /* [in] */ DBROWCOUNT iRow,
    /* [in] */ DBROWCOUNT cRows);


void __RPC_STUB OLEDBSimpleProviderListener_insertedRows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProviderListener_rowsAvailable_Proxy( 
    OLEDBSimpleProviderListener __RPC_FAR * This,
    /* [in] */ DBROWCOUNT iRow,
    /* [in] */ DBROWCOUNT cRows);


void __RPC_STUB OLEDBSimpleProviderListener_rowsAvailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProviderListener_transferComplete_Proxy( 
    OLEDBSimpleProviderListener __RPC_FAR * This,
    /* [in] */ OSPXFER xfer);


void __RPC_STUB OLEDBSimpleProviderListener_transferComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __OLEDBSimpleProviderListener_INTERFACE_DEFINED__ */


#ifndef __OLEDBSimpleProvider_INTERFACE_DEFINED__
#define __OLEDBSimpleProvider_INTERFACE_DEFINED__

/* interface OLEDBSimpleProvider */
/* [version][oleautomation][unique][uuid][object] */ 


EXTERN_C const IID IID_OLEDBSimpleProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E0E270C0-C0BE-11d0-8FE4-00A0C90A6341")
    OLEDBSimpleProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE getRowCount( 
            /* [retval][out] */ DBROWCOUNT __RPC_FAR *pcRows) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE getColumnCount( 
            /* [retval][out] */ DB_LORDINAL __RPC_FAR *pcColumns) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE getRWStatus( 
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DB_LORDINAL iColumn,
            /* [retval][out] */ OSPRW __RPC_FAR *prwStatus) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE getVariant( 
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DB_LORDINAL iColumn,
            /* [in] */ OSPFORMAT format,
            /* [retval][out] */ VARIANT __RPC_FAR *pVar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE setVariant( 
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DB_LORDINAL iColumn,
            /* [in] */ OSPFORMAT format,
            /* [in] */ VARIANT Var) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE getLocale( 
            /* [retval][out] */ BSTR __RPC_FAR *pbstrLocale) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE deleteRows( 
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DBROWCOUNT cRows,
            /* [retval][out] */ DBROWCOUNT __RPC_FAR *pcRowsDeleted) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE insertRows( 
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DBROWCOUNT cRows,
            /* [retval][out] */ DBROWCOUNT __RPC_FAR *pcRowsInserted) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE find( 
            /* [in] */ DBROWCOUNT iRowStart,
            /* [in] */ DB_LORDINAL iColumn,
            /* [in] */ VARIANT val,
            /* [in] */ OSPFIND findFlags,
            /* [in] */ OSPCOMP compType,
            /* [retval][out] */ DBROWCOUNT __RPC_FAR *piRowFound) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE addOLEDBSimpleProviderListener( 
            /* [in] */ OLEDBSimpleProviderListener __RPC_FAR *pospIListener) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE removeOLEDBSimpleProviderListener( 
            /* [in] */ OLEDBSimpleProviderListener __RPC_FAR *pospIListener) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE isAsync( 
            /* [retval][out] */ BOOL __RPC_FAR *pbAsynch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE getEstimatedRows( 
            /* [retval][out] */ DBROWCOUNT __RPC_FAR *piRows) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE stopTransfer( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct OLEDBSimpleProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            OLEDBSimpleProvider __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            OLEDBSimpleProvider __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            OLEDBSimpleProvider __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getRowCount )( 
            OLEDBSimpleProvider __RPC_FAR * This,
            /* [retval][out] */ DBROWCOUNT __RPC_FAR *pcRows);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getColumnCount )( 
            OLEDBSimpleProvider __RPC_FAR * This,
            /* [retval][out] */ DB_LORDINAL __RPC_FAR *pcColumns);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getRWStatus )( 
            OLEDBSimpleProvider __RPC_FAR * This,
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DB_LORDINAL iColumn,
            /* [retval][out] */ OSPRW __RPC_FAR *prwStatus);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getVariant )( 
            OLEDBSimpleProvider __RPC_FAR * This,
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DB_LORDINAL iColumn,
            /* [in] */ OSPFORMAT format,
            /* [retval][out] */ VARIANT __RPC_FAR *pVar);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *setVariant )( 
            OLEDBSimpleProvider __RPC_FAR * This,
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DB_LORDINAL iColumn,
            /* [in] */ OSPFORMAT format,
            /* [in] */ VARIANT Var);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getLocale )( 
            OLEDBSimpleProvider __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrLocale);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *deleteRows )( 
            OLEDBSimpleProvider __RPC_FAR * This,
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DBROWCOUNT cRows,
            /* [retval][out] */ DBROWCOUNT __RPC_FAR *pcRowsDeleted);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *insertRows )( 
            OLEDBSimpleProvider __RPC_FAR * This,
            /* [in] */ DBROWCOUNT iRow,
            /* [in] */ DBROWCOUNT cRows,
            /* [retval][out] */ DBROWCOUNT __RPC_FAR *pcRowsInserted);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *find )( 
            OLEDBSimpleProvider __RPC_FAR * This,
            /* [in] */ DBROWCOUNT iRowStart,
            /* [in] */ DB_LORDINAL iColumn,
            /* [in] */ VARIANT val,
            /* [in] */ OSPFIND findFlags,
            /* [in] */ OSPCOMP compType,
            /* [retval][out] */ DBROWCOUNT __RPC_FAR *piRowFound);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *addOLEDBSimpleProviderListener )( 
            OLEDBSimpleProvider __RPC_FAR * This,
            /* [in] */ OLEDBSimpleProviderListener __RPC_FAR *pospIListener);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *removeOLEDBSimpleProviderListener )( 
            OLEDBSimpleProvider __RPC_FAR * This,
            /* [in] */ OLEDBSimpleProviderListener __RPC_FAR *pospIListener);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *isAsync )( 
            OLEDBSimpleProvider __RPC_FAR * This,
            /* [retval][out] */ BOOL __RPC_FAR *pbAsynch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *getEstimatedRows )( 
            OLEDBSimpleProvider __RPC_FAR * This,
            /* [retval][out] */ DBROWCOUNT __RPC_FAR *piRows);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *stopTransfer )( 
            OLEDBSimpleProvider __RPC_FAR * This);
        
        END_INTERFACE
    } OLEDBSimpleProviderVtbl;

    interface OLEDBSimpleProvider
    {
        CONST_VTBL struct OLEDBSimpleProviderVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define OLEDBSimpleProvider_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define OLEDBSimpleProvider_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define OLEDBSimpleProvider_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define OLEDBSimpleProvider_getRowCount(This,pcRows)	\
    (This)->lpVtbl -> getRowCount(This,pcRows)

#define OLEDBSimpleProvider_getColumnCount(This,pcColumns)	\
    (This)->lpVtbl -> getColumnCount(This,pcColumns)

#define OLEDBSimpleProvider_getRWStatus(This,iRow,iColumn,prwStatus)	\
    (This)->lpVtbl -> getRWStatus(This,iRow,iColumn,prwStatus)

#define OLEDBSimpleProvider_getVariant(This,iRow,iColumn,format,pVar)	\
    (This)->lpVtbl -> getVariant(This,iRow,iColumn,format,pVar)

#define OLEDBSimpleProvider_setVariant(This,iRow,iColumn,format,Var)	\
    (This)->lpVtbl -> setVariant(This,iRow,iColumn,format,Var)

#define OLEDBSimpleProvider_getLocale(This,pbstrLocale)	\
    (This)->lpVtbl -> getLocale(This,pbstrLocale)

#define OLEDBSimpleProvider_deleteRows(This,iRow,cRows,pcRowsDeleted)	\
    (This)->lpVtbl -> deleteRows(This,iRow,cRows,pcRowsDeleted)

#define OLEDBSimpleProvider_insertRows(This,iRow,cRows,pcRowsInserted)	\
    (This)->lpVtbl -> insertRows(This,iRow,cRows,pcRowsInserted)

#define OLEDBSimpleProvider_find(This,iRowStart,iColumn,val,findFlags,compType,piRowFound)	\
    (This)->lpVtbl -> find(This,iRowStart,iColumn,val,findFlags,compType,piRowFound)

#define OLEDBSimpleProvider_addOLEDBSimpleProviderListener(This,pospIListener)	\
    (This)->lpVtbl -> addOLEDBSimpleProviderListener(This,pospIListener)

#define OLEDBSimpleProvider_removeOLEDBSimpleProviderListener(This,pospIListener)	\
    (This)->lpVtbl -> removeOLEDBSimpleProviderListener(This,pospIListener)

#define OLEDBSimpleProvider_isAsync(This,pbAsynch)	\
    (This)->lpVtbl -> isAsync(This,pbAsynch)

#define OLEDBSimpleProvider_getEstimatedRows(This,piRows)	\
    (This)->lpVtbl -> getEstimatedRows(This,piRows)

#define OLEDBSimpleProvider_stopTransfer(This)	\
    (This)->lpVtbl -> stopTransfer(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE OLEDBSimpleProvider_getRowCount_Proxy( 
    OLEDBSimpleProvider __RPC_FAR * This,
    /* [retval][out] */ DBROWCOUNT __RPC_FAR *pcRows);


void __RPC_STUB OLEDBSimpleProvider_getRowCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProvider_getColumnCount_Proxy( 
    OLEDBSimpleProvider __RPC_FAR * This,
    /* [retval][out] */ DB_LORDINAL __RPC_FAR *pcColumns);


void __RPC_STUB OLEDBSimpleProvider_getColumnCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProvider_getRWStatus_Proxy( 
    OLEDBSimpleProvider __RPC_FAR * This,
    /* [in] */ DBROWCOUNT iRow,
    /* [in] */ DB_LORDINAL iColumn,
    /* [retval][out] */ OSPRW __RPC_FAR *prwStatus);


void __RPC_STUB OLEDBSimpleProvider_getRWStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProvider_getVariant_Proxy( 
    OLEDBSimpleProvider __RPC_FAR * This,
    /* [in] */ DBROWCOUNT iRow,
    /* [in] */ DB_LORDINAL iColumn,
    /* [in] */ OSPFORMAT format,
    /* [retval][out] */ VARIANT __RPC_FAR *pVar);


void __RPC_STUB OLEDBSimpleProvider_getVariant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProvider_setVariant_Proxy( 
    OLEDBSimpleProvider __RPC_FAR * This,
    /* [in] */ DBROWCOUNT iRow,
    /* [in] */ DB_LORDINAL iColumn,
    /* [in] */ OSPFORMAT format,
    /* [in] */ VARIANT Var);


void __RPC_STUB OLEDBSimpleProvider_setVariant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProvider_getLocale_Proxy( 
    OLEDBSimpleProvider __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrLocale);


void __RPC_STUB OLEDBSimpleProvider_getLocale_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProvider_deleteRows_Proxy( 
    OLEDBSimpleProvider __RPC_FAR * This,
    /* [in] */ DBROWCOUNT iRow,
    /* [in] */ DBROWCOUNT cRows,
    /* [retval][out] */ DBROWCOUNT __RPC_FAR *pcRowsDeleted);


void __RPC_STUB OLEDBSimpleProvider_deleteRows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProvider_insertRows_Proxy( 
    OLEDBSimpleProvider __RPC_FAR * This,
    /* [in] */ DBROWCOUNT iRow,
    /* [in] */ DBROWCOUNT cRows,
    /* [retval][out] */ DBROWCOUNT __RPC_FAR *pcRowsInserted);


void __RPC_STUB OLEDBSimpleProvider_insertRows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProvider_find_Proxy( 
    OLEDBSimpleProvider __RPC_FAR * This,
    /* [in] */ DBROWCOUNT iRowStart,
    /* [in] */ DB_LORDINAL iColumn,
    /* [in] */ VARIANT val,
    /* [in] */ OSPFIND findFlags,
    /* [in] */ OSPCOMP compType,
    /* [retval][out] */ DBROWCOUNT __RPC_FAR *piRowFound);


void __RPC_STUB OLEDBSimpleProvider_find_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProvider_addOLEDBSimpleProviderListener_Proxy( 
    OLEDBSimpleProvider __RPC_FAR * This,
    /* [in] */ OLEDBSimpleProviderListener __RPC_FAR *pospIListener);


void __RPC_STUB OLEDBSimpleProvider_addOLEDBSimpleProviderListener_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProvider_removeOLEDBSimpleProviderListener_Proxy( 
    OLEDBSimpleProvider __RPC_FAR * This,
    /* [in] */ OLEDBSimpleProviderListener __RPC_FAR *pospIListener);


void __RPC_STUB OLEDBSimpleProvider_removeOLEDBSimpleProviderListener_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProvider_isAsync_Proxy( 
    OLEDBSimpleProvider __RPC_FAR * This,
    /* [retval][out] */ BOOL __RPC_FAR *pbAsynch);


void __RPC_STUB OLEDBSimpleProvider_isAsync_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProvider_getEstimatedRows_Proxy( 
    OLEDBSimpleProvider __RPC_FAR * This,
    /* [retval][out] */ DBROWCOUNT __RPC_FAR *piRows);


void __RPC_STUB OLEDBSimpleProvider_getEstimatedRows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE OLEDBSimpleProvider_stopTransfer_Proxy( 
    OLEDBSimpleProvider __RPC_FAR * This);


void __RPC_STUB OLEDBSimpleProvider_stopTransfer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __OLEDBSimpleProvider_INTERFACE_DEFINED__ */

#endif /* __MSDAOSP_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_simpdata_0107 */
/* [local] */ 

#endif


extern RPC_IF_HANDLE __MIDL_itf_simpdata_0107_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_simpdata_0107_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SmsRsGen.h ===
//////////////////////////////////////////////////////////////
// Copyright (c)1999 Microsoft Corporation, All Rights Reserved
//
// Version 1.0
//
// SMSRsGen.h - Header file for the SMS Resource Generator
//				DLL functions
//
//
//////////////////////////////////////////////////////////////

#ifndef __SMSRSGEN_H
#define __SMSRSGEN_H

#include <windows.h>

// *** 'Property Flags' ***
// Used to specify any special purposes for a property
// Note: All architectures must have at least one Property with the ADDPROP_NAME flag
//		 This property will be copied into the Name property of the SMS_R_<Architecture> instances
#define ADDPROP_GUID		0x00000002 // Defines this property as being a GUID
#define ADDPROP_GROUPING	0x00000004 // *Reserved*
#define ADDPROP_KEY			0x00000008 // Defines this property as being a Key value that must be unique
#define ADDPROP_ARRAY		0x00000010 // *Reserved*
#define ADDPROP_AGENT		0x00000020 // *Reserved*
#define ADDPROP_NAME		0x00000044 // Specifies this property as the actual 'Name' property in the resource
#define ADDPROP_NAME2		0x00000084 // Specifies this property as the actual 'Comment' property in the resource


// **********************************
// NewDDR()
//
// Clears the DDR Data and begins creating a new DDR File
//
// Parameters 
//		sArchitecture	- The Name of the Architecture to Use\Create
//		sAgentName		- The Name of the Agent that is creating the DDR (USER_DISCOVERY, etc)
//		sSiteCode		- The SiteCode for the Site that the DDR is to be delivered to
//
// **********************************
extern "C" __declspec(dllimport) HRESULT DDRNew(char *sArchitecture, char *sAgentName, char *sSiteCode);

// **********************************
// DDRAddInteger()
//
// Adds an Integer Property to the DDR
//
// Parameters
//		sName	- The Name\Title of the Property
//		lValue	- The actual numeric data assigned to the Property
//		dwFlags	- The flags for this property, (see 'Property Flags' in the header file)
//
// **********************************
extern "C" __declspec(dllimport) HRESULT DDRAddInteger(char *sName, long lValue, DWORD dwFlags);

// **********************************
// DDRAddString()
//
// Adds a String Property to the DDR
//
// Parameters
//		sName		- The Name\Title of the Property
//		sValue		- The actual string data assigned to the Property
//		nSQLWidth	- The width of the SQL Table generated (usualy 32, 64, or 256)
//		dwFlags		- The flags for this property, (see 'Property Flags' in the header file)
//
// **********************************
extern "C" __declspec(dllimport) HRESULT DDRAddString(char *sName, char *sValue, int nSQLWidth, DWORD dwFlags);

// **********************************
// DDRAddIntegerArray()
//
// Adds an Array of Integers Property to the DDR
//
// Parameters
//		sName	- The Name\Title of the Property
//		lArray	- An array numeric data to be assigned to the Property
//		lSize	- The size of the lValue array
//		dwFlags	- The flags for this property, (see 'Property Flags' in the header file)
//
// **********************************
extern "C" __declspec(dllimport) HRESULT DDRAddIntegerArray(char *sName, long lArray[], long lSize, DWORD dwFlags);

// **********************************
// AddStringArray()
//
// Adds an Array of Strings Property to the DDR
//
// Parameters
//		sName		- The Name\Title of the Property
//		sArray		- An Array of Null Terminated Strings to be assigned to the Property
//		nArraySize	- The number of strings in the string array
//		nSQLWidth	- The width of the SQL Table SMS Generates (usually 32, 64, or 256)
//		dwFlags		- The flags for this property, (see 'Property Flags' in the header file)
//
// **********************************
extern "C" __declspec(dllimport) HRESULT DDRAddStringArray(char *sName, char *sArray[], int nArraySize, int nSQLWidth, DWORD dwFlags);

// **********************************
// WriteDDR()
//
// Writes the DDR to the specified file
//
// Parameters
//		sFileName	- The Name of the DDR file to be written (ex\ 'MyArch.DDR')
//
// **********************************
extern "C" __declspec(dllimport) HRESULT DDRWrite(char *sFileName);

// **********************************
// SendDDRToSMS()
//
// Writes the DDR File to either the CAP inbox (if the machine is an SMS client),
//  or the Server's DDM Inbox (if the machine is an SMS site server).
//
// **********************************
extern "C" __declspec(dllimport) HRESULT DDRSendToSMS(void);

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SMSSecur.h ===
//+-----------------------------------------------------------------------
//
// Microsoft Windows
//
// Copyright (c) Microsoft Corporation 1991 - 1992
//
// File:        Security.h
//
// Contents:    Toplevel include file for security aware components
//
//
// History:     06 Aug 92   RichardW    Created
//              23 Sep 92   PeterWi     Add security object include files
//
//------------------------------------------------------------------------


// This file will go out and pull in all the header files that you need,
// based on defines that you issue.  The following macros are used.

// NOTE:  Update this section if you add new files:
//
// SECURITY_KERNEL      Use the kernel interface, not the usermode
// SECURITY_PACKAGE     Include defines necessary for security packages
// SECURITY_KERBEROS    Include everything needed to talk to the kerberos pkg.
// SECURITY_NTLM        Include everything to talk to ntlm package.
// SECURITY_OBJECTS     Include all Security Admin Object definitions.

//
// Each of the files included here are surrounded by guards, so you don't
// need to worry about including this file multiple times with different
// flags defined
//

#ifdef __cplusplus
extern "C"
{
#endif

#ifndef SSPI_PROXY_CLASS
#define SSPI_PROXY_CLASS    PROXY_CLASS
#endif

#include <sspi.h>

#if defined(SECURITY_WIN32) || defined(SECURITY_KERNEL)
#include <secext.h>
#endif

//
// Include the error codes:
//

#if ISSP_LEVEL == 32
#include <issperr.h>
#endif

#if ISSP_LEVEL == 16
#include <issper16.h>
#endif



// Include security package headers:

#ifdef SECURITY_PACKAGE

#include <secpkg.h>

#endif  // SECURITY_PACKAGE


#ifdef SECURITY_KERBEROS

#include <kerbcon.h>
#include <kerberos.h>

#endif

#ifdef SECURITY_NTLM

#include <ntlmsp.h>

#endif // SECURITY_NTLM


// Include security object definitions


#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SmtpGuid.h ===
//+------------------------------------------------------------
//
// Copyright (C) 1998 - 1999, Microsoft Corporation
//
// File: smtpguid.h
//
// Contents: Event related GUIDS published from SMTPSVC
//
// Instructions: Include this file to declare the various
//               GUIDS/strings as external global variables.
//               To actually define these global variables, 
//               #define SMTPINITGUID and #include <initguid.h> before this
//               header file. 
//
// History:
// Jeffrey C Stamerjohn 1998/07/14 15:22:29: Created.
//
//-------------------------------------------------------------
#ifndef __SMTPGUID_H__
#define __SMTPGUID_H__

#ifdef SMTPINITGUID
#define DECLARE_EVENTGUID_STRING( Name, Value ) \
    CONST WCHAR Name##[] = L##Value

#else //SMTPINITGUID
#define DECLARE_EVENTGUID_STRING( Name, Value ) \
    extern CONST WCHAR Name##[]

#endif //SMTPINITGUID

// SMTP SourceType GUID
// {fb65c4dc-e468-11d1-aa67-00c04fa345f6}
DECLARE_EVENTGUID_STRING( g_szGuidSmtpSourceType, "{fb65c4dc-e468-11d1-aa67-00c04fa345f6}");
DEFINE_GUID(GUID_SMTP_SOURCE_TYPE, 0xfb65c4dc, 0xe468, 0x11d1, 0xaa, 0x67, 0x0, 0xc0, 0x4f, 0xa3, 0x45, 0xf6);

/* 
** SMTP Source GUID
*/
// {1b3c0666-e470-11d1-aa67-00c04fa345f6}
DECLARE_EVENTGUID_STRING( g_szGuidSmtpSvcSource, "{1b3c0666-e470-11d1-aa67-00c04fa345f6}");
DEFINE_GUID(GUID_SMTPSVC_SOURCE, 0x1b3c0666, 0xe470, 0x11d1, 0xaa, 0x67, 0x0, 0xc0, 0x4f, 0xa3, 0x45, 0xf6);

/*
**  Protocol Events
*/
// SMTP OnInboundCommand
// {F6628C8D-0D5E-11d2-AA68-00C04FA35B82}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpOnInboundCommand, "{F6628C8D-0D5E-11d2-AA68-00C04FA35B82}");
DEFINE_GUID(CATID_SMTP_ON_INBOUND_COMMAND, 0xf6628c8d, 0xd5e, 0x11d2, 0xaa, 0x68, 0x0, 0xc0, 0x4f, 0xa3, 0x5b, 0x82);

// SMTP OnServerResponse
// {F6628C8E-0D5E-11d2-AA68-00C04FA35B82}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpOnServerResponse, "{F6628C8E-0D5E-11d2-AA68-00C04FA35B82}");
DEFINE_GUID(CATID_SMTP_ON_SERVER_RESPONSE, 0xf6628c8e, 0xd5e, 0x11d2, 0xaa, 0x68, 0x0, 0xc0, 0x4f, 0xa3, 0x5b, 0x82);

// SMTP OnSessionStart
// {F6628C8F-0D5E-11d2-AA68-00C04FA35B82}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpOnSessionStart, "{F6628C8F-0D5E-11d2-AA68-00C04FA35B82}");
DEFINE_GUID(CATID_SMTP_ON_SESSION_START, 0xf6628c8f, 0xd5e, 0x11d2, 0xaa, 0x68, 0x0, 0xc0, 0x4f, 0xa3, 0x5b, 0x82);

// SMTP OnMessageStart
// {F6628C90-0D5E-11d2-AA68-00C04FA35B82}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpOnMessageStart, "{F6628C90-0D5E-11d2-AA68-00C04FA35B82}");
DEFINE_GUID(CATID_SMTP_ON_MESSAGE_START, 0xf6628c90, 0xd5e, 0x11d2, 0xaa, 0x68, 0x0, 0xc0, 0x4f, 0xa3, 0x5b, 0x82);

// SMTP OnPerRecipient
// {F6628C91-0D5E-11d2-AA68-00C04FA35B82}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpOnPerRecipient, "{F6628C91-0D5E-11d2-AA68-00C04FA35B82}");
DEFINE_GUID(CATID_SMTP_ON_PER_RECIPIENT, 0xf6628c91, 0xd5e, 0x11d2, 0xaa, 0x68, 0x0, 0xc0, 0x4f, 0xa3, 0x5b, 0x82);

// Smtp OnBeforeData
// {F6628C92-0D5E-11d2-AA68-00C04FA35B82}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpOnBeforeData, "{F6628C92-0D5E-11d2-AA68-00C04FA35B82}");
DEFINE_GUID(CATID_SMTP_ON_BEFORE_DATA, 0xf6628c92, 0xd5e, 0x11d2, 0xaa, 0x68, 0x0, 0xc0, 0x4f, 0xa3, 0x5b, 0x82);

// SMTP OnSessionEnd
// {F6628C93-0D5E-11d2-AA68-00C04FA35B82} 
DECLARE_EVENTGUID_STRING( g_szcatidSmtpOnSessionEnd, "{F6628C93-0D5E-11d2-AA68-00C04FA35B82}");
DEFINE_GUID(CATID_SMTP_ON_SESSION_END, 0xf6628c93, 0xd5e, 0x11d2, 0xaa, 0x68, 0x0, 0xc0, 0x4f, 0xa3, 0x5b, 0x82);


/*
** Transport Events
*/

// SMTP Store Events
// {59175850-e533-11d1-aa67-00c04fa345f6}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpStoreDriver, "{59175850-e533-11d1-aa67-00c04fa345f6}");
DEFINE_GUID(CATID_SMTP_STORE_DRIVER, 0x59175850, 0xe533, 0x11d1, 0xaa, 0x67, 0x0, 0xc0, 0x4f, 0xa3, 0x45, 0xf6);

// SMTP OnTransportSubmission
// {FF3CAA23-00B9-11d2-9DFB-00C04FA322BA}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpOnTransportSubmission, "{FF3CAA23-00B9-11d2-9DFB-00C04FA322BA}");
DEFINE_GUID(CATID_SMTP_TRANSPORT_SUBMISSION, 0xff3caa23, 0xb9, 0x11d2, 0x9d, 0xfb, 0x0, 0xc0, 0x4f, 0xa3, 0x22, 0xba);


// SMTP onPrecategorize
// {A3ACFB0D-83FF-11d2-9E14-00C04FA322BA}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpOnPrecategorize, "{A3ACFB0D-83FF-11d2-9E14-00C04FA322BA}");
DEFINE_GUID(CATID_SMTP_TRANSPORT_PRECATEGORIZE, 0xa3acfb0d, 0x83ff, 0x11d2, 0x9e, 0x14, 0x0, 0xc0, 0x4f, 0xa3, 0x22, 0xba);

// SMTP Categorizer events
// {960252A3-0A3A-11d2-9E00-00C04FA322BA}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpOnCategorize, "{960252A3-0A3A-11d2-9E00-00C04FA322BA}");
DEFINE_GUID(CATID_SMTP_TRANSPORT_CATEGORIZE, 0x960252a3, 0xa3a, 0x11d2, 0x9e, 0x0, 0x0, 0xc0, 0x4f, 0xa3, 0x22, 0xba);

// SMTP onPostcategorize
// {76719654-05A6-11d2-9DFD-00C04FA322BA}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpOnPostcategorize, "{76719654-05A6-11d2-9E00-00C04FA322BA}");
DEFINE_GUID(CATID_SMTP_TRANSPORT_POSTCATEGORIZE, 
0x76719654, 0x5a6, 0x11d2, 0x9d, 0xfd, 0x0, 0xc0, 0x4f, 0xa3, 0x22, 0xba);


// SMTP OnTransportRouter
// {283430C9-1850-11d2-9E03-00C04FA322BA}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpOnTransportRouter, "{283430C9-1850-11d2-9E03-00C04FA322BA}");
DEFINE_GUID(CATID_SMTP_TRANSPORT_ROUTER, 0x283430c9, 0x1850, 0x11d2, 0x9e, 0x3, 0x0, 0xc0, 0x4f, 0xa3, 0x22, 0xba);

// SMTP MsgTrackLog
// {c6df52aa-7db0-11d2-94f4-00c04f79f1d6}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpMsgTrackLog, "{c6df52aa-7db0-11d2-94f4-00c04f79f1d6}");
DEFINE_GUID(CATID_SMTP_MSGTRACKLOG, 0xc6df52aa, 0x7db0, 0x11d2, 0x94, 0xf4, 0x0, 0xc0, 0x4f, 0x79, 0xf1, 0xd6);

// SMTP DnsResolver
// {bd0b4366-8e03-11d2-94f6-00c04f79f1d6}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpDnsResolver, "{bd0b4366-8e03-11d2-94f6-00c04f79f1d6}");
DEFINE_GUID(CATID_SMTP_DNSRESOLVERRECORDSINK, 0xbd0b4366, 0x8e03, 0x11d2, 0x94, 0xf6, 0x0, 0xc0, 0x4f, 0x79, 0xf1, 0xd6);

// SMTP MaxMsgSize
// {ebf159de-a67e-11d2-94f7-00c04f79f1d6}
DECLARE_EVENTGUID_STRING( g_szcatidSmtpMaxMsgSize, "{ebf159de-a67e-11d2-94f7-00c04f79f1d6}");
DEFINE_GUID(CATID_SMTP_MAXMSGSIZE, 0xebf159de, 0xa67e, 0x11d2, 0x94, 0xf7, 0x0, 0xc0, 0x4f, 0x79, 0xf1, 0xd6);

//
// CLSID of the CoCreateable categorizer
//
// {B23C35B7-9219-11d2-9E17-00C04FA322BA}"
DEFINE_GUID(CLSID_SmtpCat,
            0xb23c35b7, 0x9219, 0x11d2, 0x9e, 0x17, 0x0, 0xc0, 0x4f, 0xa3, 0x22, 0xba);

#define SZ_PROGID_SMTPCAT   "Smtp.Cat"


#endif //__SMTPGUID_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\snamodem.h ===
/*****************************************************************************/
/* snamodem.h - include for the SNA Modem monitor interface.                 */
/* Copyright (c) Microsoft Corporation 1995 - 1996                           */
/*****************************************************************************/


#ifdef __cplusplus
extern "C"
{
#endif


typedef struct _ModemStatus
{
  DWORD InUse;

  char LSName[12];  // Link Service Name
  char V24In;       // V.24 input flags
#define MASK_CTS 1
#define MASK_DSR 2
#define MASK_DCD 4
#define MASK_DRI 8

  char V24Out;      // V.24 output flags
#define MASK_RTS 1
#define MASK_DTR 2

  unsigned short RxFrameCount;
  unsigned short TxFrameCount;

  char Reserved[10]; // Padding / Expansion
} MODEM_STATUS;


extern void WINAPI SNAModemInitialize();
extern void WINAPI SNAModemAddLink(MODEM_STATUS**);
extern void WINAPI SNAModemDeleteLink(MODEM_STATUS*);
extern void WINAPI SNAModemTerminate();


#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\smbdata.h ===
// -smbdata.h-------------------------------------------------------------------
// Defines the configuration extension data for the Sample Mailbox Agent.
//
// Copyright 1986 - 1999 Microsoft Corporation.  All Rights Reserved.
// -----------------------------------------------------------------------------

#ifndef _SMBDATA_H_
#define _SMBDATA_H_

// Name of cfg extension data blob.
#define SMBBLOBNAME     "SMBData"
#define SMBBLOBNAMEW    L"SMBData"

// -----------------------------------------------------------------------------
// Index of properties within the extension data blob.
//
// NOTE: If you add a property, add it to the end of the array.  The SMBAdmin 
//       code is designed to handle a growing property array with ease.  If you 
//       remove one it would be easier to just make it an unused place holder.
// -----------------------------------------------------------------------------

typedef enum {          
    // PT_BOOLEAN
    IDX_PUBLIC_TOPIC_FOLDER = 0,

    // PT_LONG
    IDX_POLL_INBOX_MSEC, 
    IDX_ACL_RIGHTS,

    // PT_STRING8
    IDX_TOPIC_ROOT_FOLDER_NAME,       
    IDX_TOPIC_ROOT_FOLDER_COMMENT,       

    // Total number of properties in Extension Data Blob.
    // Keep this one at the very end of list.
    SMBDATA_PROP_COUNT
} PropIndex;

// -----------------------------------------------------------------------------

#endif // _SMBDATA_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SmsProv.h ===
//----------------------------------------------------------------------------
// Systems Management Server WBEM SDK
// 
//   This file is automatically generated by traversing all class ojects in
//   a WBEM namespace.
// 
// 
// Generation information :
// 
// Date:           03/12/1999    (MM/DD/YYYYY)  (Friday)
// Time:           09:53:37.0217 (HH:MM:SS:MMMM)
// WBEM Namespace: root\sms\site_egh
// 
// 
// Release notes: 
// 
//   This file includes useful symbols for accessing WBEM objects. All symbols  
//   are partitioned in separate namespaces.  The primary C++ namespace is      
//   SMSSDK.  Each WBEM class name then defines another partition of the C++    
//   namespace.  Then one more nested C++ namespace is created for the property.
//   For interesting enumeration's and bit-fields, a C++ enumeration is created 
//   in the form tagBitField_ClassName_PropertyName or                          
//   tagEnumeration_ClassName_PropertyName.  Finally all published value        
//   constraints are placed in the C++ enumeration.  Each constraint is prefixed
//   with BIT_ or ENUM_ for constraints that are bit-fields or enumeration's    
//   respectively.                                                              
// 
// 
// Copyright (c)1997-1999 Microsoft Corporation, All Rights Reserved
//----------------------------------------------------------------------------
// 
// Example Usage : 
// 

#if 0
    // Explicitly reference the symbol                                                 
    unsigned long ulValue = SMSSDK::SMS_Advertisement::AdvertFlags::BIT_ONSLOWNET;     
                                                                                       
    // Reference the symbol after promoting SMSSDK                                     
    {                                                                                  
        using namespace SMSSDK;                                                        
        unsigned long ulValue = SMS_Advertisement::AdvertFlags::BIT_ONSLOWNET;         
    }                                                                                  
                                                                                       
    // Reference the symbol after promoting SMSSDK::SMS_Advertisement                  
    {                                                                                  
        using namespace SMSSDK::SMS_Advertisement;                                     
        unsigned long ulValue = AdvertFlags::BIT_ONSLOWNET;                            
    }                                                                                  
                                                                                       
    // Reference after promoting SMSSDK::SMS_Advertisement::AdvertFlags                
    {                                                                                  
        using namespace SMSSDK::SMS_Advertisement::AdvertFlags;                        
        unsigned long ulValue = BIT_ONSLOWNET;                                         
    }                                                                                  
#endif



#if !defined(__SMS_SDK_NAMESPACE_ENUMS)
#define      __SMS_SDK_NAMESPACE_ENUMS
#pragma once



#if defined(_USE_AUTOSYMBOLS)

   #include<comdef.h>

   #if defined(_EXPORT_AUTO_SYMBOLS) && defined(_INIT_AUTOSYMBOLS)
       #define AUTOSYM_Export __declspec(dllexport)
   #elif defined(_EXPORT_AUTO_SYMBOLS)
       #define AUTOSYM_Export __declspec(dllimport)
   #else
       #define AUTOSYM_Export
   #endif

   #if defined(_INIT_AUTOSYMBOLS)

       #define DEFINE_CLASS(name)\
               extern AUTOSYM_Export LPCWSTR CLASS_##name = L#name

       #define DEFINE_PROP(name)\
               extern AUTOSYM_Export LPCWSTR PROP_##name = L#name

       #define DEFINE_METHOD(name)\
               extern AUTOSYM_Export LPCWSTR METHOD_##name = L#name

       #define DEFINE_PARAM(name)\
               extern AUTOSYM_Export LPCWSTR PARAM_##name = L#name

       #define DEFINE_CONTEXTVALUE(name)\
               extern AUTOSYM_Export LPCWSTR CONTEXTVALUE_##name = L#name
   #else

       #define DEFINE_CLASS(name)\
               extern AUTOSYM_Export LPCWSTR CLASS_##name

       #define DEFINE_PROP(name)\
               extern AUTOSYM_Export LPCWSTR PROP_##name

       #define DEFINE_METHOD(name)\
               extern AUTOSYM_Export LPCWSTR METHOD_##name

       #define DEFINE_PARAM(name)\
               extern AUTOSYM_Export LPCWSTR PARAM_##name

       #define DEFINE_CONTEXTVALUE(name)\
               extern AUTOSYM_Export LPCWSTR CONTEXTVALUE_##name
   #endif

#else                                                                      

   #define DEFINE_CLASS(name)
   #define DEFINE_PROP(name)
   #define DEFINE_METHOD(name)
   #define DEFINE_PARAM(name)
   #define DEFINE_CONTEXTVALUE(name)

#endif

namespace SMSSDK
{
//----------------------------------------------------------------------------
// Context Values : 
// 
// 
// 
DEFINE_CONTEXTVALUE(ContextHandle);
DEFINE_CONTEXTVALUE(LocaleID);
DEFINE_CONTEXTVALUE(SessionHandle);
DEFINE_CONTEXTVALUE(IMapSessionHandle);
DEFINE_CONTEXTVALUE(LimitToCollectionIDs);
DEFINE_CONTEXTVALUE(InstanceCount);
DEFINE_CONTEXTVALUE(MachineName);
DEFINE_CONTEXTVALUE(ApplicationName);
DEFINE_CONTEXTVALUE(QueryQualifiers);

//----------------------------------------------------------------------------
// SMS_ProviderLocation : 
// 
// 
// 
DEFINE_CLASS(SMS_ProviderLocation);
namespace SMS_ProviderLocation
{
	DEFINE_PROP(SiteCode);
	DEFINE_PROP(Machine);
	DEFINE_PROP(NamespacePath);
	DEFINE_PROP(ProviderForLocalSite);
} // namespace 

//----------------------------------------------------------------------------
// SMS_Advertisement : 
// 
// 
// 
DEFINE_CLASS(SMS_Advertisement);
namespace SMS_Advertisement
{
    DEFINE_PROP(ActionInProgress);
    
    namespace ActionInProgress
    {

        enum tagEnumeration_SMS_Advertisement_ActionInProgress
        {
            ENUM_NONE                                     = 0L,
            ENUM_UPDATE                                   = 1L,
            ENUM_ADD                                      = 2L,
            ENUM_DELETE                                   = 3L
        };
    
    } // namespace ActionInProgress


    DEFINE_PROP(AdvertFlags);
    
    namespace AdvertFlags
    {

        enum tagBitField_SMS_Advertisement_AdvertFlags
        {
            BIT_IMMEDIATE                                = 0x00000020,
            BIT_ONSYSTEMSTARTUP                          = 0x00000100,
            BIT_ONUSERLOGON                              = 0x00000200,
            BIT_ONUSERLOGOFF                             = 0x00000400,
            BIT_NO_DISPLAY                               = 0x02000000,
            BIT_ONSLOWNET                                = 0x04000000
        };
    
    } // namespace AdvertFlags


    DEFINE_PROP(AdvertisementID);
    DEFINE_PROP(AdvertisementName);
    DEFINE_PROP(AssignedSchedule);
    DEFINE_PROP(AssignedScheduleEnabled);
    DEFINE_PROP(AssignedScheduleIsGMT);
    DEFINE_PROP(CollectionID);
    DEFINE_PROP(Comment);
    DEFINE_PROP(ExpirationTime);
    DEFINE_PROP(ExpirationTimeEnabled);
    DEFINE_PROP(ExpirationTimeIsGMT);
    DEFINE_PROP(HierarchyPath);
    DEFINE_PROP(IncludeSubCollection);
    DEFINE_PROP(PackageID);
    DEFINE_PROP(PresentTime);
    DEFINE_PROP(PresentTimeEnabled);
    DEFINE_PROP(PresentTimeIsGMT);
    DEFINE_PROP(Priority);
    
    namespace Priority
    {

        enum tagEnumeration_SMS_Advertisement_Priority
        {
            ENUM_HIGH                                     = 1L,
            ENUM_NORMAL                                   = 2L,
            ENUM_LOW                                      = 3L
        };
    
    } // namespace Priority


    DEFINE_PROP(ProgramName);
    DEFINE_PROP(SourceSite);
    DEFINE_PROP(TimeFlags);
    
    namespace TimeFlags
    {

        enum tagBitField_SMS_Advertisement_TimeFlags
        {
            BIT_ENABLE_PRESENT                           = 0x00000001,
            BIT_ENABLE_EXPIRATION                        = 0x00000002,
            BIT_ENABLE_AVAILABLE                         = 0x00000004,
            BIT_ENABLE_UNAVAILABLE                       = 0x00000008,
            BIT_ENABLE_MANDATORY                         = 0x00000010,
            BIT_GMT_PRESENT                              = 0x00000100,
            BIT_GMT_EXPIRATION                           = 0x00000200,
            BIT_GMT_AVAILABLE                            = 0x00000400,
            BIT_GMT_UNAVAILABLE                          = 0x00000800,
            BIT_GMT_MANDATORY                            = 0x00001000
        };
    
    } // namespace TimeFlags



} // namespace SMS_Advertisement


//----------------------------------------------------------------------------
// SMS_AdvertisementStatusRootSummarizer : 
// 
// 
// 
DEFINE_CLASS(SMS_AdvertisementStatusRootSummarizer);
namespace SMS_AdvertisementStatusRootSummarizer
{
    DEFINE_PROP(AdvertisementID);
    DEFINE_PROP(AdvertisementName);
    DEFINE_PROP(AdvertisementsFailed);
    DEFINE_PROP(AdvertisementsReceived);
    DEFINE_PROP(CollectionID);
    DEFINE_PROP(CollectionName);
    DEFINE_PROP(DisplaySchedule);
    DEFINE_PROP(ExpirationTime);
    DEFINE_PROP(PackageID);
    DEFINE_PROP(PackageLanguage);
    DEFINE_PROP(PackageManufacturer);
    DEFINE_PROP(PackageName);
    DEFINE_PROP(PackageVersion);
    DEFINE_PROP(PresentTime);
    DEFINE_PROP(ProgramName);
    DEFINE_PROP(ProgramsFailed);
    DEFINE_PROP(ProgramsStarted);
    DEFINE_PROP(ProgramsSucceeded);
    DEFINE_PROP(SourceSite);
    DEFINE_PROP(TimeEnableFlag);

} // namespace SMS_AdvertisementStatusRootSummarizer


//----------------------------------------------------------------------------
// SMS_AdvertisementStatusSummarizer : 
// 
// 
// 
DEFINE_CLASS(SMS_AdvertisementStatusSummarizer);
namespace SMS_AdvertisementStatusSummarizer
{
    DEFINE_PROP(AdvertisementID);
    DEFINE_PROP(AdvertisementsFailed);
    DEFINE_PROP(AdvertisementsReceived);
    DEFINE_PROP(DisplaySchedule);
    DEFINE_PROP(LastUpdate);
    DEFINE_PROP(ProgramsFailed);
    DEFINE_PROP(ProgramsStarted);
    DEFINE_PROP(ProgramsSucceeded);
    DEFINE_PROP(SiteCode);

} // namespace SMS_AdvertisementStatusSummarizer


//----------------------------------------------------------------------------
// SMS_AdvertToSourceSite_a : 
// 
// 
// 
DEFINE_CLASS(SMS_AdvertToSourceSite_a);
namespace SMS_AdvertToSourceSite_a
{
    DEFINE_PROP(advertSourceSite);
    DEFINE_PROP(ownedAdvert);

} // namespace SMS_AdvertToSourceSite_a


//----------------------------------------------------------------------------
// SMS_BaseAssociation : 
// 
// 
// 
DEFINE_CLASS(SMS_BaseAssociation);
namespace SMS_BaseAssociation
{

} // namespace SMS_BaseAssociation


//----------------------------------------------------------------------------
// SMS_BaseClass : 
// 
// 
// 
DEFINE_CLASS(SMS_BaseClass);
namespace SMS_BaseClass
{

} // namespace SMS_BaseClass


//----------------------------------------------------------------------------
// SMS_Client_Reg_MultiString_List : 
// 
// 
// 
DEFINE_CLASS(SMS_Client_Reg_MultiString_List);
namespace SMS_Client_Reg_MultiString_List
{
    DEFINE_PROP(ItemType);
    DEFINE_PROP(KeyPath);
    DEFINE_PROP(ValueName);
    DEFINE_PROP(ValueStrings);

} // namespace SMS_Client_Reg_MultiString_List


//----------------------------------------------------------------------------
// SMS_Collection : 
// 
// 
// 
DEFINE_CLASS(SMS_Collection);
namespace SMS_Collection
{
    DEFINE_PROP(CollectionID);
    DEFINE_PROP(CollectionRules);
    DEFINE_PROP(Comment);
    DEFINE_PROP(CurrentStatus);
    
    namespace CurrentStatus
    {

        enum tagEnumeration_SMS_Collection_CurrentStatus
        {
            ENUM_NONE                                     = 0L,
            ENUM_READY                                    = 1L,
            ENUM_REFRESHING                               = 2L,
            ENUM_SAVING                                   = 3L,
            ENUM_EVALUATING                               = 4L,
            ENUM_AWAITING_REFRESH                         = 5L,
            ENUM_DELETING                                 = 6L,
            ENUM_APPENDING_MEMBER                         = 7L,
            ENUM_QUERYING                                 = 8L
        };
    
    } // namespace CurrentStatus


    DEFINE_PROP(LastChangeTime);
    DEFINE_PROP(LastRefreshTime);
    DEFINE_PROP(MemberClassName);
    DEFINE_PROP(Name);
    DEFINE_PROP(OwnedByThisSite);
    DEFINE_PROP(RefreshSchedule);
    DEFINE_PROP(RefreshType);
    
    namespace RefreshType
    {

        enum tagEnumeration_SMS_Collection_RefreshType
        {
            ENUM_MANUAL                                   = 1L,
            ENUM_PERIODIC                                 = 2L
        };
    
    } // namespace RefreshType


    DEFINE_PROP(ReplicateToSubSites);
    DEFINE_METHOD(AddMembershipRule);
    
    namespace AddMembershipRule
    {
        
        namespace In
        {
            DEFINE_PARAM(collectionRule);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(QueryID);
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace AddMembershipRule


    DEFINE_METHOD(DeleteMembershipRule);
    
    namespace DeleteMembershipRule
    {
        
        namespace In
        {
            DEFINE_PARAM(collectionRule);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace DeleteMembershipRule


    DEFINE_METHOD(AddMembershipRules);
    
    namespace AddMembershipRules
    {
        
        namespace In
        {
            DEFINE_PARAM(collectionRules);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(QueryIDs);
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace AddMembershipRules


    DEFINE_METHOD(DeleteMembershipRules);
    
    namespace DeleteMembershipRules
    {
        
        namespace In
        {
            DEFINE_PARAM(collectionRules);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace DeleteMembershipRules


    DEFINE_METHOD(RequestRefresh);
    
    namespace RequestRefresh
    {
        
        namespace In
        {
            DEFINE_PARAM(includesubcollections);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace RequestRefresh


    DEFINE_METHOD(DeleteAllMembers);
    
    namespace DeleteAllMembers
    {
        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace DeleteAllMembers


    DEFINE_METHOD(VerifyNoLoops);
    
    namespace VerifyNoLoops
    {
        
        namespace In
        {
            DEFINE_PARAM(parentCollection);
            DEFINE_PARAM(subCollection);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(Result);
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace VerifyNoLoops


    DEFINE_METHOD(GetNumResults);
    
    namespace GetNumResults
    {
        
        namespace In
        {
            DEFINE_PARAM(Collection);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(Result);
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace GetNumResults


    DEFINE_METHOD(GetTotalNumResults);
    
    namespace GetTotalNumResults
    {
        
        namespace In
        {
            DEFINE_PARAM(Collection);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(Result);
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace GetTotalNumResults



} // namespace SMS_Collection


//----------------------------------------------------------------------------
// SMS_CollectionMember : 
// 
// 
// 
DEFINE_CLASS(SMS_CollectionMember);
namespace SMS_CollectionMember
{
    DEFINE_PROP(Domain);
    DEFINE_PROP(IsAssigned);
    DEFINE_PROP(IsClient);
    DEFINE_PROP(IsDirect);
    DEFINE_PROP(Name);
    DEFINE_PROP(ResourceID);
    DEFINE_PROP(ResourceType);
    DEFINE_PROP(SiteCode);
    DEFINE_PROP(SMSID);

} // namespace SMS_CollectionMember


//----------------------------------------------------------------------------
// SMS_CollectionMember_a : 
// 
// 
// 
DEFINE_CLASS(SMS_CollectionMember_a);
namespace SMS_CollectionMember_a
{
    DEFINE_PROP(collection);
    DEFINE_PROP(CollectionID);
    DEFINE_PROP(Domain);
    DEFINE_PROP(IsAssigned);
    DEFINE_PROP(IsClient);
    DEFINE_PROP(IsDirect);
    DEFINE_PROP(Name);
    DEFINE_PROP(resource);
    DEFINE_PROP(ResourceID);
    DEFINE_PROP(ResourceType);
    DEFINE_PROP(SiteCode);
    DEFINE_PROP(SMSID);

} // namespace SMS_CollectionMember_a


//----------------------------------------------------------------------------
// SMS_CollectionRule : 
// 
// 
// 
DEFINE_CLASS(SMS_CollectionRule);
namespace SMS_CollectionRule
{
    DEFINE_PROP(RuleName);

} // namespace SMS_CollectionRule


//----------------------------------------------------------------------------
// SMS_CollectionRuleDirect : 
// 
// 
// 
DEFINE_CLASS(SMS_CollectionRuleDirect);
namespace SMS_CollectionRuleDirect
{
    DEFINE_PROP(ResourceClassName);
    DEFINE_PROP(ResourceID);

} // namespace SMS_CollectionRuleDirect


//----------------------------------------------------------------------------
// SMS_CollectionRuleQuery : 
// 
// 
// 
DEFINE_CLASS(SMS_CollectionRuleQuery);
namespace SMS_CollectionRuleQuery
{
    DEFINE_PROP(LimitToCollectionID);
    DEFINE_PROP(QueryExpression);
    DEFINE_PROP(QueryID);

} // namespace SMS_CollectionRuleQuery


//----------------------------------------------------------------------------
// SMS_CollectionToPkgAdvert_a : 
// 
// 
// 
DEFINE_CLASS(SMS_CollectionToPkgAdvert_a);
namespace SMS_CollectionToPkgAdvert_a
{
    DEFINE_PROP(advert);
    DEFINE_PROP(collection);

} // namespace SMS_CollectionToPkgAdvert_a


//----------------------------------------------------------------------------
// SMS_CollectToSubCollect : 
// 
// 
// 
DEFINE_CLASS(SMS_CollectToSubCollect);
namespace SMS_CollectToSubCollect
{
    DEFINE_PROP(parentCollectionID);
    DEFINE_PROP(subCollectionID);

} // namespace SMS_CollectToSubCollect


//----------------------------------------------------------------------------
// SMS_CollectToSubCollect_a : 
// 
// 
// 
DEFINE_CLASS(SMS_CollectToSubCollect_a);
namespace SMS_CollectToSubCollect_a
{
    DEFINE_PROP(parentCollection);
    DEFINE_PROP(subCollection);

} // namespace SMS_CollectToSubCollect_a


//----------------------------------------------------------------------------
// SMS_ComponentSummarizer : 
// 
// 
// 
DEFINE_CLASS(SMS_ComponentSummarizer);
namespace SMS_ComponentSummarizer
{
    DEFINE_PROP(ComponentName);
    DEFINE_PROP(Errors);
    DEFINE_PROP(Infos);
    DEFINE_PROP(LastContacted);
    DEFINE_PROP(LastStarted);
    DEFINE_PROP(MachineName);
    DEFINE_PROP(NextScheduledTime);
    DEFINE_PROP(SiteCode);
    DEFINE_PROP(State);
    
    namespace State
    {

        enum tagEnumeration_SMS_ComponentSummarizer_State
        {
            ENUM_STOPPED                                  = 0L,
            ENUM_STARTED                                  = 1L,
            ENUM_PAUSED                                   = 2L,
            ENUM_INSTALLING                               = 3L,
            ENUM_RE_INSTALLING                            = 4L,
            ENUM_DE_INSTALLING                            = 5L
        };
    
    } // namespace State


    DEFINE_PROP(Status);
    
    namespace Status
    {

        enum tagEnumeration_SMS_ComponentSummarizer_Status
        {
            ENUM_GREEN                                    = 0L,
            ENUM_YELLOW                                   = 1L,
            ENUM_RED                                      = 2L
        };
    
    } // namespace Status


    DEFINE_PROP(TallyInterval);
    DEFINE_PROP(Type);
    
    namespace Type
    {

        enum tagEnumeration_SMS_ComponentSummarizer_Type
        {
            ENUM_AUTOSTARTING                             = 0L,
            ENUM_SCHEDULED                                = 1L,
            ENUM_MANUAL                                   = 2L
        };
    
    } // namespace Type


    DEFINE_PROP(Warnings);

} // namespace SMS_ComponentSummarizer


//----------------------------------------------------------------------------
// SMS_ConfigData : 
// 
// 
// 
DEFINE_CLASS(SMS_ConfigData);
namespace SMS_ConfigData
{
    DEFINE_PROP(MaxSQLConnections);
    DEFINE_PROP(QueryInstanceBatchCount);

} // namespace SMS_ConfigData


//----------------------------------------------------------------------------
// SMS_ContextMethods : 
// 
// 
// 
DEFINE_CLASS(SMS_ContextMethods);
namespace SMS_ContextMethods
{
    DEFINE_METHOD(GetContextHandle);
    
    namespace GetContextHandle
    {
        
        namespace Out
        {
            DEFINE_PARAM(ContextHandle);
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace GetContextHandle


    DEFINE_METHOD(ClearContextHandle);
    
    namespace ClearContextHandle
    {
        
        namespace In
        {
            DEFINE_PARAM(ContextHandle);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace ClearContextHandle



} // namespace SMS_ContextMethods


//----------------------------------------------------------------------------
// SMS_DistributionPoint : 
// 
// 
// 
DEFINE_CLASS(SMS_DistributionPoint);
namespace SMS_DistributionPoint
{
    DEFINE_PROP(LastRefreshTime);
    DEFINE_PROP(PackageID);
    DEFINE_PROP(RefreshNow);
    DEFINE_PROP(ServerNALPath);
    DEFINE_PROP(SiteCode);
    DEFINE_PROP(SiteName);
    DEFINE_PROP(SourceSite);
    DEFINE_PROP(Status);
    
    namespace Status
    {

        enum tagEnumeration_SMS_DistributionPoint_Status
        {
            ENUM_NONE                                     = 0L,
            ENUM_UPDATED                                  = 1L,
            ENUM_ADDED                                    = 2L,
            ENUM_DELETED                                  = 3L
        };
    
    } // namespace Status



} // namespace SMS_DistributionPoint


//----------------------------------------------------------------------------
// SMS_DistributionPointGroup : 
// 
// 
// 
DEFINE_CLASS(SMS_DistributionPointGroup);
namespace SMS_DistributionPointGroup
{
    DEFINE_PROP(arrNALPath);
    DEFINE_PROP(sGroupName);

} // namespace SMS_DistributionPointGroup


//----------------------------------------------------------------------------
// SMS_EmbeddedProperty : 
// 
// 
// 
DEFINE_CLASS(SMS_EmbeddedProperty);
namespace SMS_EmbeddedProperty
{
    DEFINE_PROP(ItemType);
    DEFINE_PROP(PropertyName);
    DEFINE_PROP(Value);
    DEFINE_PROP(Value1);
    DEFINE_PROP(Value2);

} // namespace SMS_EmbeddedProperty


//----------------------------------------------------------------------------
// SMS_EmbeddedPropertyList : 
// 
// 
// 
DEFINE_CLASS(SMS_EmbeddedPropertyList);
namespace SMS_EmbeddedPropertyList
{
    DEFINE_PROP(ItemType);
    DEFINE_PROP(PropertyListName);
    DEFINE_PROP(Values);

} // namespace SMS_EmbeddedPropertyList


//----------------------------------------------------------------------------
// SMS_ExtendedStatus : 
// 
// 
// 
DEFINE_CLASS(SMS_ExtendedStatus);
namespace SMS_ExtendedStatus
{
    DEFINE_PROP(CauseInfo);
    DEFINE_PROP(ErrorCode);
    DEFINE_PROP(File);
    DEFINE_PROP(Line);
    DEFINE_PROP(ObjectInfo);
    DEFINE_PROP(SQLMessage);
    DEFINE_PROP(SQLSeverity);
    DEFINE_PROP(SQLStatus);

} // namespace SMS_ExtendedStatus


//----------------------------------------------------------------------------
// SMS_Group : 
// 
// 
// 
DEFINE_CLASS(SMS_Group);
namespace SMS_Group
{
    DEFINE_PROP(ResourceID);

} // namespace SMS_Group


//----------------------------------------------------------------------------
// SMS_Identification : 
// 
// 
// 
DEFINE_CLASS(SMS_Identification);
namespace SMS_Identification
{
    DEFINE_PROP(LocaleID);
    DEFINE_PROP(ServiceAccountName);
    DEFINE_PROP(SMSBuildNumber);
    DEFINE_PROP(SMSMinBuildNumber);
    DEFINE_PROP(SMSProviderServer);
    DEFINE_PROP(SMSSiteServer);
    DEFINE_PROP(SMSVersion);
    DEFINE_PROP(ThisSiteCode);
    DEFINE_PROP(ThisSiteName);
    DEFINE_METHOD(GetCurrentUser);
    
    namespace GetCurrentUser
    {
        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);
            DEFINE_PARAM(UserName);

        } // namespace Out



    } // namespace GetCurrentUser


    DEFINE_METHOD(GetProviderVersion);
    
    namespace GetProviderVersion
    {
        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);
            DEFINE_PARAM(VersionString);

        } // namespace Out



    } // namespace GetProviderVersion



} // namespace SMS_Identification


//----------------------------------------------------------------------------
// SMS_Legacy_PackageLocations : 
// 
// 
// 
DEFINE_CLASS(SMS_Legacy_PackageLocations);
namespace SMS_Legacy_PackageLocations
{
    DEFINE_PROP(ComponentName);
    DEFINE_PROP(InstanceKey);
    DEFINE_PROP(MachineID);
    DEFINE_PROP(MasterCopyFlag);
    DEFINE_PROP(ObjectKey);
    DEFINE_PROP(PackageKey);
    DEFINE_PROP(ServerName);
    DEFINE_PROP(ShareName);
    DEFINE_PROP(SiteCode);
    DEFINE_PROP(TimeKey);
    DEFINE_PROP(WkstaServerFlag);

} // namespace SMS_Legacy_PackageLocations


//----------------------------------------------------------------------------
// SMS_Legacy_Packages : 
// 
// 
// 
DEFINE_CLASS(SMS_Legacy_Packages);
namespace SMS_Legacy_Packages
{
    DEFINE_PROP(Comments);
    DEFINE_PROP(InventoryFlag);
    DEFINE_PROP(LastUpdateTime);
    DEFINE_PROP(ObjectKey);
    DEFINE_PROP(PackageKey);
    DEFINE_PROP(PackageName);
    DEFINE_PROP(PermissionFlags);
    DEFINE_PROP(ServerFlag);
    DEFINE_PROP(ServerRoot);
    DEFINE_PROP(ServerTransfer);
    DEFINE_PROP(ShareName);
    DEFINE_PROP(TotalConcurrentUses);
    DEFINE_PROP(WkstaRoot);
    DEFINE_PROP(WkstaTransfer);
    DEFINE_PROP(WorkstationFlag);

} // namespace SMS_Legacy_Packages


//----------------------------------------------------------------------------
// SMS_Legacy_ProgramGroupProgramItems : 
// 
// 
// 
DEFINE_CLASS(SMS_Legacy_ProgramGroupProgramItems);
namespace SMS_Legacy_ProgramGroupProgramItems
{
    DEFINE_PROP(ItemKey);
    DEFINE_PROP(ObjectKey);
    DEFINE_PROP(PackageKey);
    DEFINE_PROP(ProgramGroupKey);

} // namespace SMS_Legacy_ProgramGroupProgramItems


//----------------------------------------------------------------------------
// SMS_Legacy_ProgramGroups : 
// 
// 
// 
DEFINE_CLASS(SMS_Legacy_ProgramGroups);
namespace SMS_Legacy_ProgramGroups
{
    DEFINE_PROP(Comment);
    DEFINE_PROP(Name);
    DEFINE_PROP(ObjectKey);
    DEFINE_PROP(ProgramGroupKey);

} // namespace SMS_Legacy_ProgramGroups


//----------------------------------------------------------------------------
// SMS_Legacy_ProgramGroupUserGroups : 
// 
// 
// 
DEFINE_CLASS(SMS_Legacy_ProgramGroupUserGroups);
namespace SMS_Legacy_ProgramGroupUserGroups
{
    DEFINE_PROP(ObjectKey);
    DEFINE_PROP(ProgramGroupKey);
    DEFINE_PROP(UserGroupName);

} // namespace SMS_Legacy_ProgramGroupUserGroups


//----------------------------------------------------------------------------
// SMS_Legacy_ProgramItems : 
// 
// 
// 
DEFINE_CLASS(SMS_Legacy_ProgramItems);
namespace SMS_Legacy_ProgramItems
{
    DEFINE_PROP(CommandLine);
    DEFINE_PROP(ConfigScript);
    DEFINE_PROP(ConversionComment);
    DEFINE_PROP(ConversionFlags);
    DEFINE_PROP(Description);
    DEFINE_PROP(DriveLetter);
    DEFINE_PROP(DriveMethod);
    DEFINE_PROP(ExecutableFlag);
    DEFINE_PROP(Icon);
    DEFINE_PROP(IniFile);
    DEFINE_PROP(ItemKey);
    DEFINE_PROP(ObjectKey);
    DEFINE_PROP(PackageKey);
    DEFINE_PROP(Platforms);
    DEFINE_PROP(RegistryName);
    DEFINE_PROP(RunMinimized);
    DEFINE_PROP(SearchLocal);
    DEFINE_PROP(Win31);
    DEFINE_PROP(WinNT);

} // namespace SMS_Legacy_ProgramItems


//----------------------------------------------------------------------------
// SMS_LegacyClass : 
// 
// 
// 
DEFINE_CLASS(SMS_LegacyClass);
namespace SMS_LegacyClass
{

} // namespace SMS_LegacyClass


//----------------------------------------------------------------------------
// SMS_NAL_Methods : 
// 
// 
// 
DEFINE_CLASS(SMS_NAL_Methods);
namespace SMS_NAL_Methods
{
    DEFINE_METHOD(PackNALPath);
    
    namespace PackNALPath
    {
        
        namespace In
        {
            DEFINE_PARAM(DisplayQualifiers);
            DEFINE_PARAM(NALType);
            DEFINE_PARAM(NetworkConnectionQualifiers);
            DEFINE_PARAM(NetworkOSPath);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(NALPath);
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace PackNALPath


    DEFINE_METHOD(UnPackNALPath);
    
    namespace UnPackNALPath
    {
        
        namespace In
        {
            DEFINE_PARAM(NALPath);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(DisplayQualifiers);
            DEFINE_PARAM(NALType);
            DEFINE_PARAM(NetworkConnectionQualifiers);
            DEFINE_PARAM(NetworkOSPath);
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace UnPackNALPath



} // namespace SMS_NAL_Methods


//----------------------------------------------------------------------------
// SMS_ObjectToClassPermissions_a : 
// 
// 
// 
DEFINE_CLASS(SMS_ObjectToClassPermissions_a);
namespace SMS_ObjectToClassPermissions_a
{
    DEFINE_PROP(classPermissions);
    DEFINE_PROP(object);

} // namespace SMS_ObjectToClassPermissions_a


//----------------------------------------------------------------------------
// SMS_ObjectToInstancePermissions_a : 
// 
// 
// 
DEFINE_CLASS(SMS_ObjectToInstancePermissions_a);
namespace SMS_ObjectToInstancePermissions_a
{
    DEFINE_PROP(instancePermissions);
    DEFINE_PROP(object);

} // namespace SMS_ObjectToInstancePermissions_a


//----------------------------------------------------------------------------
// SMS_OS_Details : 
// 
// 
// 
DEFINE_CLASS(SMS_OS_Details);
namespace SMS_OS_Details
{
    DEFINE_PROP(MaxVersion);
    DEFINE_PROP(MinVersion);
    DEFINE_PROP(Name);
    DEFINE_PROP(Platform);

} // namespace SMS_OS_Details


//----------------------------------------------------------------------------
// SMS_Package : 
// 
// 
// 
DEFINE_CLASS(SMS_Package);
namespace SMS_Package
{
    DEFINE_PROP(ActionInProgress);
    
    namespace ActionInProgress
    {

        enum tagEnumeration_SMS_Package_ActionInProgress
        {
            ENUM_NONE                                     = 0L,
            ENUM_UPDATE                                   = 1L,
            ENUM_ADD                                      = 2L,
            ENUM_DELETE                                   = 3L
        };
    
    } // namespace ActionInProgress


    DEFINE_PROP(Description);
    DEFINE_PROP(ForcedDisconnectDelay);
    DEFINE_PROP(ForcedDisconnectEnabled);
    DEFINE_PROP(ForcedDisconnectNumRetries);
    DEFINE_PROP(Icon);
    DEFINE_PROP(IconSize);
    DEFINE_PROP(IgnoreAddressSchedule);
    DEFINE_PROP(Language);
    DEFINE_PROP(LastRefreshTime);
    DEFINE_PROP(Manufacturer);
    DEFINE_PROP(MIFFilename);
    DEFINE_PROP(MIFName);
    DEFINE_PROP(MIFPublisher);
    DEFINE_PROP(MIFVersion);
    DEFINE_PROP(Name);
    DEFINE_PROP(PackageID);
    DEFINE_PROP(PkgFlags);
    
    namespace PkgFlags
    {

        enum tagBitField_SMS_Package_PkgFlags
        {
            BIT_USE_SPECIAL_MIF                          = 0x20000000
        };
    
    } // namespace PkgFlags


    DEFINE_PROP(PkgSourceFlag);
    
    namespace PkgSourceFlag
    {

        enum tagEnumeration_SMS_Package_PkgSourceFlag
        {
            ENUM_STORAGE_NEEDS_SPECIFYING                 = 0L,
            ENUM_STORAGE_NO_SOURCE                        = 1L,
            ENUM_STORAGE_DIRECT                           = 2L,
            ENUM_STORAGE_COMPRESS                         = 3L,
            ENUM_STORAGE_LOCAL                            = 4L
        };
    
    } // namespace PkgSourceFlag


    DEFINE_PROP(PkgSourcePath);
    DEFINE_PROP(PreferredAddressType);
    DEFINE_PROP(Priority);
    
    namespace Priority
    {

        enum tagEnumeration_SMS_Package_Priority
        {
            ENUM_HIGH                                     = 1L,
            ENUM_NORMAL                                   = 2L,
            ENUM_LOW                                      = 3L
        };
    
    } // namespace Priority


    DEFINE_PROP(RefreshPkgSourceFlag);
    DEFINE_PROP(RefreshSchedule);
    DEFINE_PROP(ShareName);
    DEFINE_PROP(ShareType);
    
    namespace ShareType
    {

        enum tagEnumeration_SMS_Package_ShareType
        {
            ENUM_SHARE_COMMON                             = 1L,
            ENUM_SHARE_SPECIFIC                           = 2L
        };
    
    } // namespace ShareType


    DEFINE_PROP(SourceDate);
    DEFINE_PROP(SourceSite);
    DEFINE_PROP(SourceVersion);
    DEFINE_PROP(StoredPkgPath);
    DEFINE_PROP(StoredPkgVersion);
    DEFINE_PROP(Version);
    DEFINE_METHOD(RefreshPkgSource);
    
    namespace RefreshPkgSource
    {
        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace RefreshPkgSource



} // namespace SMS_Package


//----------------------------------------------------------------------------
// SMS_PackageAccessByUsers : 
// 
// 
// 
DEFINE_CLASS(SMS_PackageAccessByUsers);
namespace SMS_PackageAccessByUsers
{
    DEFINE_PROP(Access);
    
    namespace Access
    {

        enum tagBitField_SMS_PackageAccessByUsers_Access
        {
            BIT_READ                                     = 0x00000001,
            BIT_WRITE                                    = 0x00000002,
            BIT_EXECUTE                                  = 0x00000004,
            BIT_CREATE                                   = 0x00000008,
            BIT_DELETE                                   = 0x00000010,
            BIT_VIEW_FOLDERS                             = 0x00000020,
            BIT_VIEW_FILES                               = 0x00000040,
            BIT_CHANGE_PERMISSIONS                       = 0x00000080,
            BIT_CHANGE_ATTRIBUTES                        = 0x00000100
        };
    
    } // namespace Access


    DEFINE_PROP(PackageID);
    DEFINE_PROP(UserName);

} // namespace SMS_PackageAccessByUsers


//----------------------------------------------------------------------------
// SMS_PackageStatus : 
// 
// 
// 
DEFINE_CLASS(SMS_PackageStatus);
namespace SMS_PackageStatus
{
    DEFINE_PROP(Location);
    DEFINE_PROP(PackageID);
    DEFINE_PROP(Personality);
    
    namespace Personality
    {

        enum tagEnumeration_SMS_PackageStatus_Personality
        {
            ENUM_NONE                                     = 0L,
            ENUM_MAC                                      = 1L,
            ENUM_FPNW                                     = 2L
        };
    
    } // namespace Personality


    DEFINE_PROP(PkgServer);
    DEFINE_PROP(ShareName);
    DEFINE_PROP(SiteCode);
    DEFINE_PROP(Status);
    
    namespace Status
    {

        enum tagEnumeration_SMS_PackageStatus_Status
        {
            ENUM_NONE                                     = 0L,
            ENUM_SENT                                     = 1L,
            ENUM_RECEIVED                                 = 2L,
            ENUM_INSTALLED                                = 3L,
            ENUM_RETRY                                    = 4L,
            ENUM_FAILED                                   = 5L,
            ENUM_REMOVED                                  = 6L,
            ENUM_PENDING_REMOVE                           = 7L
        };
    
    } // namespace Status


    DEFINE_PROP(Type);
    
    namespace Type
    {

        enum tagEnumeration_SMS_PackageStatus_Type
        {
            ENUM_MASTER                                   = 1L,
            ENUM_COPY                                     = 2L
        };
    
    } // namespace Type


    DEFINE_PROP(UpdateTime);

} // namespace SMS_PackageStatus


//----------------------------------------------------------------------------
// SMS_PackageStatusDetailSummarizer : 
// 
// 
// 
DEFINE_CLASS(SMS_PackageStatusDetailSummarizer);
namespace SMS_PackageStatusDetailSummarizer
{
    DEFINE_PROP(Failed);
    DEFINE_PROP(Installed);
    DEFINE_PROP(Name);
    DEFINE_PROP(PackageID);
    DEFINE_PROP(Retrying);
    DEFINE_PROP(SiteCode);
    DEFINE_PROP(SiteName);
    DEFINE_PROP(SourceVersion);
    DEFINE_PROP(SummaryDate);
    DEFINE_PROP(Targeted);

} // namespace SMS_PackageStatusDetailSummarizer


//----------------------------------------------------------------------------
// SMS_PackageStatusDistPointsSummarizer : 
// 
// 
// 
DEFINE_CLASS(SMS_PackageStatusDistPointsSummarizer);
namespace SMS_PackageStatusDistPointsSummarizer
{
    DEFINE_PROP(LastCopied);
    DEFINE_PROP(PackageID);
    DEFINE_PROP(ServerNALPath);
    DEFINE_PROP(SiteCode);
    DEFINE_PROP(SourceNALPath);
    DEFINE_PROP(SourceVersion);
    DEFINE_PROP(State);
    
    namespace State
    {

        enum tagEnumeration_SMS_PackageStatusDistPointsSummarizer_State
        {
            ENUM_INSTALLED                                = 0L,
            ENUM_INSTALL_PENDING                          = 1L,
            ENUM_INSTALL_RETRYING                         = 2L,
            ENUM_INSTALL_FAILED                           = 3L,
            ENUM_REMOVAL_PENDING                          = 4L,
            ENUM_REMOVAL_RETRYING                         = 5L,
            ENUM_REMOVAL_FAILED                           = 6L
        };
    
    } // namespace State


    DEFINE_PROP(SummaryDate);

} // namespace SMS_PackageStatusDistPointsSummarizer


//----------------------------------------------------------------------------
// SMS_PackageStatusRootSummarizer : 
// 
// 
// 
DEFINE_CLASS(SMS_PackageStatusRootSummarizer);
namespace SMS_PackageStatusRootSummarizer
{
    DEFINE_PROP(Failed);
    DEFINE_PROP(Installed);
    DEFINE_PROP(Name);
    DEFINE_PROP(PackageID);
    DEFINE_PROP(Retrying);
    DEFINE_PROP(SourceCompressedSize);
    DEFINE_PROP(SourceDate);
    DEFINE_PROP(SourceSite);
    DEFINE_PROP(SourceSize);
    DEFINE_PROP(SourceVersion);
    DEFINE_PROP(Targeted);

} // namespace SMS_PackageStatusRootSummarizer


//----------------------------------------------------------------------------
// SMS_PackageToAdvert_a : 
// 
// 
// 
DEFINE_CLASS(SMS_PackageToAdvert_a);
namespace SMS_PackageToAdvert_a
{
    DEFINE_PROP(advert);
    DEFINE_PROP(package);

} // namespace SMS_PackageToAdvert_a


//----------------------------------------------------------------------------
// SMS_PackageToSourceSite_a : 
// 
// 
// 
DEFINE_CLASS(SMS_PackageToSourceSite_a);
namespace SMS_PackageToSourceSite_a
{
    DEFINE_PROP(ownedPackage);
    DEFINE_PROP(pkgSourcesite);

} // namespace SMS_PackageToSourceSite_a


//----------------------------------------------------------------------------
// SMS_PDF_Package : 
// 
// 
// 
DEFINE_CLASS(SMS_PDF_Package);
namespace SMS_PDF_Package
{
    DEFINE_PROP(Icon);
    DEFINE_PROP(IconSize);
    DEFINE_PROP(Language);
    DEFINE_PROP(Name);
    DEFINE_PROP(PDFFileName);
    DEFINE_PROP(PDFID);
    DEFINE_PROP(Publisher);
    DEFINE_PROP(RequiredIconNames);
    DEFINE_PROP(Status);
    
    namespace Status
    {

        enum tagEnumeration_SMS_PDF_Package_Status
        {
            ENUM_Loaded                                   = 0L,
            ENUM_RequiresIcon                             = 1L
        };
    
    } // namespace Status


    DEFINE_PROP(Version);
    DEFINE_METHOD(ProcessInBox);
    
    namespace ProcessInBox
    {
        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace ProcessInBox


    DEFINE_METHOD(LoadPDF);
    
    namespace LoadPDF
    {
        
        namespace In
        {
            DEFINE_PARAM(PDFFile);
            DEFINE_PARAM(PDFFileName);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(PDFID);
            DEFINE_PARAM(RequiredIconNames);
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace LoadPDF


    DEFINE_METHOD(LoadIconForPDF);
    
    namespace LoadIconForPDF
    {
        
        namespace In
        {
            DEFINE_PARAM(Icon);
            DEFINE_PARAM(IconFileName);
            DEFINE_PARAM(PDFID);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace LoadIconForPDF


    DEFINE_METHOD(GetPDFData);
    
    namespace GetPDFData
    {
        
        namespace In
        {
            DEFINE_PARAM(PDFID);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(PackageData);
            DEFINE_PARAM(ProgramData);
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace GetPDFData



} // namespace SMS_PDF_Package


//----------------------------------------------------------------------------
// SMS_PDF_Program : 
// 
// 
// 
DEFINE_CLASS(SMS_PDF_Program);
namespace SMS_PDF_Program
{
    DEFINE_PROP(CommandLine);
    DEFINE_PROP(Comment);
    DEFINE_PROP(DependentProgram);
    DEFINE_PROP(Description);
    DEFINE_PROP(DiskSpaceReq);
    DEFINE_PROP(DriveLetter);
    DEFINE_PROP(Duration);
    DEFINE_PROP(Icon);
    DEFINE_PROP(IconSize);
    DEFINE_PROP(PDFID);
    DEFINE_PROP(ProgramFlags);
    DEFINE_PROP(ProgramName);
    DEFINE_PROP(Publisher);
    DEFINE_PROP(Requirements);
    DEFINE_PROP(WorkingDirectory);

} // namespace SMS_PDF_Program


//----------------------------------------------------------------------------
// SMS_PDFPkgToPDFProgram_a : 
// 
// 
// 
DEFINE_CLASS(SMS_PDFPkgToPDFProgram_a);
namespace SMS_PDFPkgToPDFProgram_a
{
    DEFINE_PROP(PDF_Package);
    DEFINE_PROP(PDF_Program);

} // namespace SMS_PDFPkgToPDFProgram_a


//----------------------------------------------------------------------------
// SMS_PkgToPkgAccess_a : 
// 
// 
// 
DEFINE_CLASS(SMS_PkgToPkgAccess_a);
namespace SMS_PkgToPkgAccess_a
{
    DEFINE_PROP(package);
    DEFINE_PROP(pkgAccess);

} // namespace SMS_PkgToPkgAccess_a


//----------------------------------------------------------------------------
// SMS_PkgToPkgProgram_a : 
// 
// 
// 
DEFINE_CLASS(SMS_PkgToPkgProgram_a);
namespace SMS_PkgToPkgProgram_a
{
    DEFINE_PROP(package);
    DEFINE_PROP(pkgProgram);

} // namespace SMS_PkgToPkgProgram_a


//----------------------------------------------------------------------------
// SMS_PkgToPkgServer_a : 
// 
// 
// 
DEFINE_CLASS(SMS_PkgToPkgServer_a);
namespace SMS_PkgToPkgServer_a
{
    DEFINE_PROP(package);
    DEFINE_PROP(pkgServer);

} // namespace SMS_PkgToPkgServer_a


//----------------------------------------------------------------------------
// SMS_Program : 
// 
// 
// 
DEFINE_CLASS(SMS_Program);
namespace SMS_Program
{
    DEFINE_PROP(ActionInProgress);
    
    namespace ActionInProgress
    {

        enum tagEnumeration_SMS_Program_ActionInProgress
        {
            ENUM_NONE                                     = 0L,
            ENUM_UPDATE                                   = 1L,
            ENUM_ADD                                      = 2L,
            ENUM_DELETE                                   = 3L
        };
    
    } // namespace ActionInProgress


    DEFINE_PROP(ApplicationHierarchy);
    DEFINE_PROP(CommandLine);
    DEFINE_PROP(Comment);
    DEFINE_PROP(DependentProgram);
    DEFINE_PROP(Description);
    DEFINE_PROP(DiskSpaceReq);
    DEFINE_PROP(DriveLetter);
    DEFINE_PROP(Duration);
    DEFINE_PROP(Icon);
    DEFINE_PROP(IconSize);
    DEFINE_PROP(PackageID);
    DEFINE_PROP(ProgramFlags);
    
    namespace ProgramFlags
    {

        enum tagBitField_SMS_Program_ProgramFlags
        {
            BIT_DISABLED                                 = 0x00001000,
            BIT_UNATTENDED                               = 0x00002000,
            BIT_USERCONTEXT                              = 0x00004000,
            BIT_ADMINRIGHTS                              = 0x00008000,
            BIT_EVERYUSER                                = 0x00010000,
            BIT_NOUSERLOGGEDIN                           = 0x00020000,
            BIT_OKTOQUIT                                 = 0x00040000,
            BIT_OKTOREBOOT                               = 0x00080000,
            BIT_USEUNCPATH                               = 0x00100000,
            BIT_PERSISTCONNECTION                        = 0x00200000,
            BIT_RUNMINIMIZED                             = 0x00400000,
            BIT_RUNMAXIMIZED                             = 0x00800000,
            BIT_HIDEWINDOW                               = 0x01000000,
            BIT_OKLOGOFF                                 = 0x02000000,
            BIT_RUNACCOUNT                               = 0x04000000,
            BIT_ANY_PLATFORM                             = 0x08000000,
            BIT_STILL_RUNNING                            = 0x10000000,
            BIT_SUPPORT_UNINSTALL                        = 0x20000000
        };
    
    } // namespace ProgramFlags


    DEFINE_PROP(ProgramName);
    DEFINE_PROP(RemovalKey);
    DEFINE_PROP(Requirements);
    DEFINE_PROP(SupportedOperatingSystems);
    DEFINE_PROP(WorkingDirectory);

} // namespace SMS_Program


//----------------------------------------------------------------------------
// SMS_PropertyDisplayNode : 
// 
// 
// 
DEFINE_CLASS(SMS_PropertyDisplayNode);
namespace SMS_PropertyDisplayNode
{
    DEFINE_PROP(ClassDisplayName);
    DEFINE_PROP(ClassName);
    DEFINE_PROP(Flags);
    
    namespace Flags
    {

        enum tagBitField_SMS_PropertyDisplayNode_Flags
        {
            BIT_Static                                   = 0x00000001,
            BIT_RootNode                                 = 0x00000002,
            BIT_LeafNode                                 = 0x00000004,
            BIT_HasHistory                               = 0x00000008,
            BIT_UserDefined                              = 0x00000040
        };
    
    } // namespace Flags


    DEFINE_PROP(NodeKey);
    DEFINE_PROP(NodeName);
    DEFINE_PROP(PaneOrder);
    DEFINE_PROP(ParentNodeKey);
    DEFINE_PROP(ResourceDisplayName);
    DEFINE_PROP(ResultProperties);
    DEFINE_PROP(ResultPropertyIDName);
    DEFINE_PROP(ScopePropertyIDName);
    DEFINE_PROP(ScopePropertyNames);

} // namespace SMS_PropertyDisplayNode


//----------------------------------------------------------------------------
// SMS_Query : 
// 
// 
// 
DEFINE_CLASS(SMS_Query);
namespace SMS_Query
{
    DEFINE_PROP(Comments);
    DEFINE_PROP(Expression);
    DEFINE_PROP(LimitToCollectionID);
    DEFINE_PROP(Name);
    DEFINE_PROP(QueryID);
    DEFINE_PROP(TargetClassName);

} // namespace SMS_Query

//----------------------------------------------------------------------------
// SMS_R_IPNetwork : 
// 
// 
// 
DEFINE_CLASS(SMS_R_IPNetwork);
namespace SMS_R_IPNetwork
{
    DEFINE_PROP(AgentName);
    DEFINE_PROP(AgentSite);
    DEFINE_PROP(AgentTime);
    DEFINE_PROP(Name);
    DEFINE_PROP(ResourceType);
    DEFINE_PROP(SMSAssignedSites);
    DEFINE_PROP(SubnetAddress);
    DEFINE_PROP(SubnetMask);

} // namespace SMS_R_IPNetwork

//----------------------------------------------------------------------------
// SMS_R_System : 
// 
// 
// 
DEFINE_CLASS(SMS_R_System);
namespace SMS_R_System
{
    DEFINE_PROP(AgentName);
    DEFINE_PROP(AgentSite);
    DEFINE_PROP(AgentTime);
    DEFINE_PROP(Client);
    DEFINE_PROP(ClientVersion);
    DEFINE_PROP(IPAddresses);
    DEFINE_PROP(IPSubnets);
    DEFINE_PROP(IPXAddresses);
    DEFINE_PROP(IPXNetworkNumbers);
    DEFINE_PROP(LastLogonUserDomain);
    DEFINE_PROP(LastLogonUserName);
    DEFINE_PROP(MACAddresses);
    DEFINE_PROP(Name);
    DEFINE_PROP(NetbiosName);
    DEFINE_PROP(OperatingSystemNameandVersion);
    DEFINE_PROP(ResourceDomainORWorkgroup);
    DEFINE_PROP(ResourceNames);
    DEFINE_PROP(ResourceType);
    DEFINE_PROP(SMSAssignedSites);
    DEFINE_PROP(SMSInstalledSites);
    DEFINE_PROP(SMSUniqueIdentifier);
    DEFINE_PROP(SNMPCommunityName);
    DEFINE_PROP(SystemRoles);

} // namespace SMS_R_System


//----------------------------------------------------------------------------
// SMS_R_User : 
// 
// 
// 
DEFINE_CLASS(SMS_R_User);
namespace SMS_R_User
{
    DEFINE_PROP(AgentName);
    DEFINE_PROP(AgentSite);
    DEFINE_PROP(AgentTime);
    DEFINE_PROP(FullUserName);
    DEFINE_PROP(Name);
    DEFINE_PROP(NetworkOperatingSystem);
    DEFINE_PROP(ResourceType);
    DEFINE_PROP(SMSAssignedSites);
    DEFINE_PROP(UniqueUserName);
    DEFINE_PROP(UserName);
    DEFINE_PROP(WindowsNTDomain);

} // namespace SMS_R_User


//----------------------------------------------------------------------------
// SMS_R_UserGroup : 
// 
// 
// 
DEFINE_CLASS(SMS_R_UserGroup);
namespace SMS_R_UserGroup
{
    DEFINE_PROP(AgentName);
    DEFINE_PROP(AgentSite);
    DEFINE_PROP(AgentTime);
    DEFINE_PROP(Name);
    DEFINE_PROP(NetworkOperatingSystem);
    DEFINE_PROP(ResourceType);
    DEFINE_PROP(SMSAssignedSites);
    DEFINE_PROP(UniqueUsergroupName);
    DEFINE_PROP(UsergroupName);
    DEFINE_PROP(WindowsNTDomain);

} // namespace SMS_R_UserGroup


//----------------------------------------------------------------------------
// SMS_ResIDValueLookup : 
// 
// 
// 
DEFINE_CLASS(SMS_ResIDValueLookup);
namespace SMS_ResIDValueLookup
{
    DEFINE_PROP(IntLookupValue);
    DEFINE_PROP(LookupName);
    DEFINE_PROP(ResDLL);
    DEFINE_PROP(ResID);
    DEFINE_PROP(StringLookupValue);

} // namespace SMS_ResIDValueLookup


//----------------------------------------------------------------------------
// SMS_Resource : 
// 
// 
// 
DEFINE_CLASS(SMS_Resource);
namespace SMS_Resource
{
    DEFINE_PROP(ResourceId);

} // namespace SMS_Resource


//----------------------------------------------------------------------------
// SMS_ResourceMap : 
// 
// 
// 
DEFINE_CLASS(SMS_ResourceMap);
namespace SMS_ResourceMap
{
    DEFINE_PROP(DisplayName);
    DEFINE_PROP(ResourceClassName);
    DEFINE_PROP(ResourceType);
    DEFINE_METHOD(Refresh);
    
    namespace Refresh
    {
        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace Refresh



} // namespace SMS_ResourceMap


//----------------------------------------------------------------------------
// SMS_SCFToSCI_a : 
// 
// 
// 
DEFINE_CLASS(SMS_SCFToSCI_a);
namespace SMS_SCFToSCI_a
{
    DEFINE_PROP(SiteControlFile);
    DEFINE_PROP(SiteControlItem);

} // namespace SMS_SCFToSCI_a


//----------------------------------------------------------------------------
// SMS_SCFToSite_a : 
// 
// 
// 
DEFINE_CLASS(SMS_SCFToSite_a);
namespace SMS_SCFToSite_a
{
    DEFINE_PROP(Site);
    DEFINE_PROP(SiteControlFile);

} // namespace SMS_SCFToSite_a


//----------------------------------------------------------------------------
// SMS_ScheduleMethods : 
// 
// 
// 
DEFINE_CLASS(SMS_ScheduleMethods);
namespace SMS_ScheduleMethods
{
    DEFINE_METHOD(WriteToString);
    
    namespace WriteToString
    {
        
        namespace In
        {
            DEFINE_PARAM(TokenData);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);
            DEFINE_PARAM(StringData);

        } // namespace Out



    } // namespace WriteToString


    DEFINE_METHOD(ReadFromString);
    
    namespace ReadFromString
    {
        
        namespace In
        {
            DEFINE_PARAM(StringData);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);
            DEFINE_PARAM(TokenData);

        } // namespace Out



    } // namespace ReadFromString



} // namespace SMS_ScheduleMethods


//----------------------------------------------------------------------------
// SMS_ScheduleToken : 
// 
// 
// 
DEFINE_CLASS(SMS_ScheduleToken);
namespace SMS_ScheduleToken
{
    DEFINE_PROP(DayDuration);
    DEFINE_PROP(HourDuration);
    DEFINE_PROP(IsGMT);
    DEFINE_PROP(MinuteDuration);
    DEFINE_PROP(StartTime);

} // namespace SMS_ScheduleToken


//----------------------------------------------------------------------------
// SMS_SCI_Address : 
// 
// 
// 
DEFINE_CLASS(SMS_SCI_Address);
namespace SMS_SCI_Address
{
    DEFINE_PROP(AddressType);
    DEFINE_PROP(DesSiteCode);
    DEFINE_PROP(Order);
    DEFINE_PROP(PropLists);
    DEFINE_PROP(Props);
    DEFINE_PROP(RateLimitingSchedule);
    DEFINE_PROP(UnlimitedRateForAll);
    DEFINE_PROP(UsageSchedule);

} // namespace SMS_SCI_Address


//----------------------------------------------------------------------------
// SMS_SCI_ClientComp : 
// 
// 
// 
DEFINE_CLASS(SMS_SCI_ClientComp);
namespace SMS_SCI_ClientComp
{
    DEFINE_PROP(ClientComponentName);
    DEFINE_PROP(Flags);
    
    namespace Flags
    {

        enum tagBitField_SMS_SCI_ClientComp_Flags
        {
            BIT_ACTIVE                                   = 0x00000001
        };
    
    } // namespace Flags


    DEFINE_PROP(PropLists);
    DEFINE_PROP(Props);
    DEFINE_PROP(RegMultiStringLists);

} // namespace SMS_SCI_ClientComp


//----------------------------------------------------------------------------
// SMS_SCI_ClientConfig : 
// 
// 
// 
DEFINE_CLASS(SMS_SCI_ClientConfig);
namespace SMS_SCI_ClientConfig
{
    DEFINE_PROP(ClientConfigName);
    DEFINE_PROP(Flags);
    
    namespace Flags
    {

        enum tagEnumeration_SMS_SCI_ClientConfig_Flags
        {
            ENUM_ACTIVE                                   = 1L,
            ENUM_BASE_INSTALL                             = 2L
        };
    
    } // namespace Flags


    DEFINE_PROP(Platforms);
    DEFINE_PROP(PropLists);
    DEFINE_PROP(Props);
    DEFINE_PROP(RegMultiStringLists);

} // namespace SMS_SCI_ClientConfig


//----------------------------------------------------------------------------
// SMS_SCI_Component : 
// 
// 
// 
DEFINE_CLASS(SMS_SCI_Component);
namespace SMS_SCI_Component
{
    DEFINE_PROP(ComponentName);
    DEFINE_PROP(Flag);
    
    namespace Flag
    {

        enum tagEnumeration_SMS_SCI_Component_Flag
        {
            ENUM_ROLE_NOT_INSTALLED                       = 1L,
            ENUM_NAMED_SERVER_NOT_INSTALLED               = 2L,
            ENUM_ROLE_INSTALLED                           = 5L,
            ENUM_NAMED_SERVER_INSTALLED                   = 6L
        };
    
    } // namespace Flag


    DEFINE_PROP(Name);
    DEFINE_PROP(PropLists);
    DEFINE_PROP(Props);

} // namespace SMS_SCI_Component


//----------------------------------------------------------------------------
// SMS_SCI_Configuration : 
// 
// 
// 
DEFINE_CLASS(SMS_SCI_Configuration);
namespace SMS_SCI_Configuration
{
    DEFINE_PROP(ConfigurationName);
    DEFINE_PROP(PropLists);
    DEFINE_PROP(Props);

} // namespace SMS_SCI_Configuration


//----------------------------------------------------------------------------
// SMS_SCI_FileDefinition : 
// 
// 
// 
DEFINE_CLASS(SMS_SCI_FileDefinition);
namespace SMS_SCI_FileDefinition
{
    DEFINE_PROP(Comment);
    DEFINE_PROP(OriginatingSite);
    DEFINE_PROP(SerialNumber);
    DEFINE_PROP(TargetSite);

} // namespace SMS_SCI_FileDefinition


//----------------------------------------------------------------------------
// SMS_SCI_Property : 
// 
// 
// 
DEFINE_CLASS(SMS_SCI_Property);
namespace SMS_SCI_Property
{
    DEFINE_PROP(PropertyName);
    DEFINE_PROP(Value);
    DEFINE_PROP(Value1);
    DEFINE_PROP(Value2);

} // namespace SMS_SCI_Property


//----------------------------------------------------------------------------
// SMS_SCI_PropertyList : 
// 
// 
// 
DEFINE_CLASS(SMS_SCI_PropertyList);
namespace SMS_SCI_PropertyList
{
    DEFINE_PROP(PropertyListName);
    DEFINE_PROP(Values);

} // namespace SMS_SCI_PropertyList


//----------------------------------------------------------------------------
// SMS_SCI_SiteAssignment : 
// 
// 
// 
DEFINE_CLASS(SMS_SCI_SiteAssignment);
namespace SMS_SCI_SiteAssignment
{
    DEFINE_PROP(AssignDetails);
    DEFINE_PROP(AssignTypes);

} // namespace SMS_SCI_SiteAssignment


//----------------------------------------------------------------------------
// SMS_SCI_SiteDefinition : 
// 
// 
// 
DEFINE_CLASS(SMS_SCI_SiteDefinition);
namespace SMS_SCI_SiteDefinition
{
    DEFINE_PROP(AddressPublicKey);
    DEFINE_PROP(InstallDirectory);
    DEFINE_PROP(ParentSiteCode);
    DEFINE_PROP(PropLists);
    DEFINE_PROP(Props);
    DEFINE_PROP(ServiceAccount);
    DEFINE_PROP(ServiceAccountDomain);
    DEFINE_PROP(ServiceAccountPassword);
    DEFINE_PROP(ServiceExchangeKey);
    DEFINE_PROP(ServicePlaintextAccount);
    DEFINE_PROP(ServicePublicKey);
    DEFINE_PROP(SiteName);
    DEFINE_PROP(SiteServerDomain);
    DEFINE_PROP(SiteServerName);
    DEFINE_PROP(SiteServerPlatform);
    DEFINE_PROP(SiteType);
    
    namespace SiteType
    {

        enum tagEnumeration_SMS_SCI_SiteDefinition_SiteType
        {
            ENUM_SECONDARY                                = 1L,
            ENUM_PRIMARY                                  = 2L
        };
    
    } // namespace SiteType


    DEFINE_PROP(SQLAccount);
    DEFINE_PROP(SQLAccountPassword);
    DEFINE_PROP(SQLDatabaseName);
    DEFINE_PROP(SQLPublicKey);
    DEFINE_PROP(SQLServerName);

} // namespace SMS_SCI_SiteDefinition


//----------------------------------------------------------------------------
// SMS_SCI_SQLCmd : 
// 
// 
// 
DEFINE_CLASS(SMS_SCI_SQLCmd);
namespace SMS_SCI_SQLCmd
{
    DEFINE_PROP(BeginTime);
    DEFINE_PROP(DaysOfWeek);
    
    namespace DaysOfWeek
    {

        enum tagBitField_SMS_SCI_SQLCmd_DaysOfWeek
        {
            BIT_SUNDAY                                   = 0x00000001,
            BIT_MONDAY                                   = 0x00000002,
            BIT_TUESDAY                                  = 0x00000004,
            BIT_WEDNESDAY                                = 0x00000008,
            BIT_THURSDAY                                 = 0x00000010,
            BIT_FRIDAY                                   = 0x00000020,
            BIT_SATURDAY                                 = 0x00000040
        };
    
    } // namespace DaysOfWeek


    DEFINE_PROP(LatestBeginTime);
    DEFINE_PROP(LogFile);
    DEFINE_PROP(Name);
    DEFINE_PROP(NumRefreshDays);
    DEFINE_PROP(On);
    DEFINE_PROP(SQLCmd);

} // namespace SMS_SCI_SQLCmd


//----------------------------------------------------------------------------
// SMS_SCI_SQLTask : 
// 
// 
// 
DEFINE_CLASS(SMS_SCI_SQLTask);
namespace SMS_SCI_SQLTask
{
    DEFINE_PROP(BeginTime);
    DEFINE_PROP(DaysOfWeek);
    
    namespace DaysOfWeek
    {

        enum tagBitField_SMS_SCI_SQLTask_DaysOfWeek
        {
            BIT_SUNDAY                                   = 0x00000001,
            BIT_MONDAY                                   = 0x00000002,
            BIT_TUESDAY                                  = 0x00000004,
            BIT_WEDNESDAY                                = 0x00000008,
            BIT_THURSDAY                                 = 0x00000010,
            BIT_FRIDAY                                   = 0x00000020,
            BIT_SATURDAY                                 = 0x00000040
        };
    
    } // namespace DaysOfWeek


    DEFINE_PROP(DeleteOlderThan);
    DEFINE_PROP(DeviceName);
    DEFINE_PROP(LatestBeginTime);
    DEFINE_PROP(NumRefreshDays);
    DEFINE_PROP(On);
    DEFINE_PROP(TaskName);
    DEFINE_PROP(TaskType);
    
    namespace TaskType
    {

        enum tagEnumeration_SMS_SCI_SQLTask_TaskType
        {
            ENUM_BACKUP                                   = 1L,
            ENUM_PERIOD                                   = 2L,
            ENUM_DELETE                                   = 3L
        };
    
    } // namespace TaskType



} // namespace SMS_SCI_SQLTask


//----------------------------------------------------------------------------
// SMS_SCI_SysResUse : 
// 
// 
// 
DEFINE_CLASS(SMS_SCI_SysResUse);
namespace SMS_SCI_SysResUse
{
    DEFINE_PROP(InboxRoot);
    DEFINE_PROP(NALPath);
    DEFINE_PROP(NALType);
    DEFINE_PROP(NetworkOSPath);
    DEFINE_PROP(PropLists);
    DEFINE_PROP(Props);
    DEFINE_PROP(RoleName);

} // namespace SMS_SCI_SysResUse


//----------------------------------------------------------------------------
// SMS_SecuredObject : 
// 
// 
// 
DEFINE_CLASS(SMS_SecuredObject);
namespace SMS_SecuredObject
{
    DEFINE_PROP(AvailableClassPermissions);
    
    namespace AvailableClassPermissions
    {

        enum tagBitField_SMS_SecuredObject_AvailableClassPermissions
        {
            BIT_READ                                     = 0x00000001,
            BIT_MODIFY                                   = 0x00000002,
            BIT_DELETE                                   = 0x00000004,
            BIT_DISTRIBUTE                               = 0x00000008,
            BIT_CREATE_CHILD                             = 0x00000010,
            BIT_REMOTE_CONTROL                           = 0x00000020,
            BIT_ADVERTISE                                = 0x00000040,
            BIT_MODIFY_RESOURCE                          = 0x00000080,
            BIT_ADMINISTER                               = 0x00000100,
            BIT_DELETE_RESOURCE                          = 0x00000200,
            BIT_CREATE                                   = 0x00000400,
            BIT_VIEW_COLL_FILE                           = 0x00000800,
            BIT_READ_RESOURCE                            = 0x00001000
        };
    
    } // namespace AvailableClassPermissions


    DEFINE_PROP(AvailableInstancePermissions);
    
    namespace AvailableInstancePermissions
    {

        enum tagBitField_SMS_SecuredObject_AvailableInstancePermissions
        {
            BIT_READ                                     = 0x00000001,
            BIT_MODIFY                                   = 0x00000002,
            BIT_DELETE                                   = 0x00000004,
            BIT_DISTRIBUTE                               = 0x00000008,
            BIT_CREATE_CHILD                             = 0x00000010,
            BIT_REMOTE_CONTROL                           = 0x00000020,
            BIT_ADVERTISE                                = 0x00000040,
            BIT_MODIFY_RESOURCE                          = 0x00000080,
            BIT_ADMINISTER                               = 0x00000100,
            BIT_DELETE_RESOURCE                          = 0x00000200,
            BIT_CREATE                                   = 0x00000400,
            BIT_VIEW_COLL_FILE                           = 0x00000800,
            BIT_READ_RESOURCE                            = 0x00001000
        };
    
    } // namespace AvailableInstancePermissions


    DEFINE_PROP(DefaultClassPermissions);
    
    namespace DefaultClassPermissions
    {

        enum tagBitField_SMS_SecuredObject_DefaultClassPermissions
        {
            BIT_READ                                     = 0x00000001,
            BIT_MODIFY                                   = 0x00000002,
            BIT_DELETE                                   = 0x00000004,
            BIT_DISTRIBUTE                               = 0x00000008,
            BIT_CREATE_CHILD                             = 0x00000010,
            BIT_REMOTE_CONTROL                           = 0x00000020,
            BIT_ADVERTISE                                = 0x00000040,
            BIT_MODIFY_RESOURCE                          = 0x00000080,
            BIT_ADMINISTER                               = 0x00000100,
            BIT_DELETE_RESOURCE                          = 0x00000200,
            BIT_CREATE                                   = 0x00000400,
            BIT_VIEW_COLL_FILE                           = 0x00000800,
            BIT_READ_RESOURCE                            = 0x00001000
        };
    
    } // namespace DefaultClassPermissions


    DEFINE_PROP(DefaultInstancePermissions);
    
    namespace DefaultInstancePermissions
    {

        enum tagBitField_SMS_SecuredObject_DefaultInstancePermissions
        {
            BIT_READ                                     = 0x00000001,
            BIT_MODIFY                                   = 0x00000002,
            BIT_DELETE                                   = 0x00000004,
            BIT_DISTRIBUTE                               = 0x00000008,
            BIT_CREATE_CHILD                             = 0x00000010,
            BIT_REMOTE_CONTROL                           = 0x00000020,
            BIT_ADVERTISE                                = 0x00000040,
            BIT_MODIFY_RESOURCE                          = 0x00000080,
            BIT_ADMINISTER                               = 0x00000100,
            BIT_DELETE_RESOURCE                          = 0x00000200,
            BIT_CREATE                                   = 0x00000400,
            BIT_VIEW_COLL_FILE                           = 0x00000800,
            BIT_READ_RESOURCE                            = 0x00001000
        };
    
    } // namespace DefaultInstancePermissions


    DEFINE_PROP(ObjectKey);
    DEFINE_PROP(ObjectName);
    DEFINE_METHOD(UserHasPermissions);
    
    namespace UserHasPermissions
    {
        
        namespace In
        {
            DEFINE_PARAM(ObjectPath);
            DEFINE_PARAM(Permissions);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace UserHasPermissions


    DEFINE_METHOD(RefreshNTGroupMembership);
    
    namespace RefreshNTGroupMembership
    {
        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace RefreshNTGroupMembership


    DEFINE_METHOD(GetCollectionsWithResourcePermissions);
    
    namespace GetCollectionsWithResourcePermissions
    {
        
        namespace In
        {
            DEFINE_PARAM(Permissions);
            DEFINE_PARAM(ResourceID);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(CollectionIDs);
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace GetCollectionsWithResourcePermissions



} // namespace SMS_SecuredObject


//----------------------------------------------------------------------------
// SMS_SetupInfo : 
// 
// 
// 
DEFINE_CLASS(SMS_SetupInfo);
namespace SMS_SetupInfo
{
    DEFINE_PROP(id);
    DEFINE_PROP(String1);
    DEFINE_PROP(String2);
    DEFINE_PROP(Value1);
    DEFINE_PROP(Value2);

} // namespace SMS_SetupInfo


//----------------------------------------------------------------------------
// SMS_SII_Property : 
// 
// 
// 
DEFINE_CLASS(SMS_SII_Property);
namespace SMS_SII_Property
{
    DEFINE_PROP(PropertyName);
    DEFINE_PROP(Value);
    DEFINE_PROP(Value1);
    DEFINE_PROP(Value2);

} // namespace SMS_SII_Property


//----------------------------------------------------------------------------
// SMS_SII_PropertyList : 
// 
// 
// 
DEFINE_CLASS(SMS_SII_PropertyList);
namespace SMS_SII_PropertyList
{
    DEFINE_PROP(PropertyListName);
    DEFINE_PROP(Values);

} // namespace SMS_SII_PropertyList


//----------------------------------------------------------------------------
// SMS_SIIB_AddressType : 
// 
// 
// 
DEFINE_CLASS(SMS_SIIB_AddressType);
namespace SMS_SIIB_AddressType
{
    DEFINE_PROP(AddressType);
    DEFINE_PROP(ChmFile);
    DEFINE_PROP(DescriptionID);
    DEFINE_PROP(DispIconID);
    DEFINE_PROP(DispNameID);
    DEFINE_PROP(Flags);
    
    namespace Flags
    {

        enum tagBitField_SMS_SIIB_AddressType_Flags
        {
            BIT_ALLOW_ADD                                = 0x00000001,
            BIT_ALLOW_DELETE                             = 0x00000002,
            BIT_ALLOW_MODIFY                             = 0x00000004,
            BIT_ALLOW_SCHEDULE                           = 0x00000008,
            BIT_ALLOW_RATE_LIMITING                      = 0x00000010
        };
    
    } // namespace Flags


    DEFINE_PROP(GUID);
    DEFINE_PROP(HtmFile);
    DEFINE_PROP(ResDLL);

} // namespace SMS_SIIB_AddressType


//----------------------------------------------------------------------------
// SMS_SIIB_Component_FileList : 
// 
// 
// 
DEFINE_CLASS(SMS_SIIB_Component_FileList);
namespace SMS_SIIB_Component_FileList
{
    DEFINE_PROP(ComponentName);
    DEFINE_PROP(Flags);
    
    namespace Flags
    {

        enum tagBitField_SMS_SIIB_Component_FileList_Flags
        {
            BIT_INSTALL                                  = 0x00000001,
            BIT_LOCAL_SYSTEM_ACCOUNT                     = 0x00000002,
            BIT_LITERAL_PATH                             = 0x00000004,
            BIT_PRIMARY_SITE                             = 0x00000008,
            BIT_SECONDARY_SITE                           = 0x00000010,
            BIT_AUTO_START                               = 0x00000020,
            BIT_AS_THREAD                                = 0x00000040,
            BIT_MULTI_SITE                               = 0x00000080,
            BIT_SCHEDULED                                = 0x00000100,
            BIT_ON_SITE_SERVER                           = 0x00000200,
            BIT_ON_SQL_SERVER                            = 0x00000400,
            BIT_ON_CLIENT_ACCESS                         = 0x00000800,
            BIT_ONLY_ONE_COPY                            = 0x00001000,
            BIT_USE_NAL                                  = 0x00002000
        };
    
    } // namespace Flags


    DEFINE_PROP(PropLists);
    DEFINE_PROP(Props);

} // namespace SMS_SIIB_Component_FileList


//----------------------------------------------------------------------------
// SMS_SIIB_Configuration : 
// 
// 
// 
DEFINE_CLASS(SMS_SIIB_Configuration);
namespace SMS_SIIB_Configuration
{
    DEFINE_PROP(ChmFile);
    DEFINE_PROP(ConfigUnitName);
    DEFINE_PROP(ConfigurationName);
    DEFINE_PROP(DescriptionID);
    DEFINE_PROP(DispIconID);
    DEFINE_PROP(DispNameID);
    DEFINE_PROP(Flags);
    
    namespace Flags
    {

        enum tagBitField_SMS_SIIB_Configuration_Flags
        {
            BIT_SECONDARY                                = 0x00000001,
            BIT_PRIMARY                                  = 0x00000002
        };
    
    } // namespace Flags


    DEFINE_PROP(GUID);
    DEFINE_PROP(HtmFile);
    DEFINE_PROP(ResDLL);
    DEFINE_PROP(Type);

} // namespace SMS_SIIB_Configuration


//----------------------------------------------------------------------------
// SMS_SIIB_Generic_Configuration : 
// 
// 
// 
DEFINE_CLASS(SMS_SIIB_Generic_Configuration);
namespace SMS_SIIB_Generic_Configuration
{
    DEFINE_PROP(ConfigurationName);
    DEFINE_PROP(PropLists);
    DEFINE_PROP(Props);

} // namespace SMS_SIIB_Generic_Configuration


//----------------------------------------------------------------------------
// SMS_SIIB_NALProvider : 
// 
// 
// 
DEFINE_CLASS(SMS_SIIB_NALProvider);
namespace SMS_SIIB_NALProvider
{
    DEFINE_PROP(Flags);
    
    namespace Flags
    {

        enum tagEnumeration_SMS_SIIB_NALProvider_Flags
        {
            ENUM_SERVER                                   = 1L,
            ENUM_ADMINUI                                  = 2L,
            ENUM_CLIENT                                   = 3L
        };
    
    } // namespace Flags


    DEFINE_PROP(ProviderName);

} // namespace SMS_SIIB_NALProvider


//----------------------------------------------------------------------------
// SMS_SIIB_SenderType : 
// 
// 
// 
DEFINE_CLASS(SMS_SIIB_SenderType);
namespace SMS_SIIB_SenderType
{
    DEFINE_PROP(ChmFile);
    DEFINE_PROP(DescriptionID);
    DEFINE_PROP(DispIconID);
    DEFINE_PROP(DispNameID);
    DEFINE_PROP(Flags);
    
    namespace Flags
    {

        enum tagBitField_SMS_SIIB_SenderType_Flags
        {
            BIT_ALLOW_ADD                                = 0x00000001,
            BIT_ALLOW_DELETE                             = 0x00000002,
            BIT_ALLOW_MODIFY                             = 0x00000004
        };
    
    } // namespace Flags


    DEFINE_PROP(GUID);
    DEFINE_PROP(HtmFile);
    DEFINE_PROP(ResDLL);
    DEFINE_PROP(SenderType);

} // namespace SMS_SIIB_SenderType


//----------------------------------------------------------------------------
// SMS_SIIB_SysResRole : 
// 
// 
// 
DEFINE_CLASS(SMS_SIIB_SysResRole);
namespace SMS_SIIB_SysResRole
{
    DEFINE_PROP(ChmFile);
    DEFINE_PROP(DescriptionID);
    DEFINE_PROP(DispIconID);
    DEFINE_PROP(DispNameID);
    DEFINE_PROP(Flags);
    
    namespace Flags
    {

        enum tagBitField_SMS_SIIB_SysResRole_Flags
        {
            BIT_ASSIGNABLE                               = 0x00000001
        };
    
    } // namespace Flags


    DEFINE_PROP(GUID);
    DEFINE_PROP(HtmFile);
    DEFINE_PROP(ResDLL);
    DEFINE_PROP(RoleName);

} // namespace SMS_SIIB_SysResRole


//----------------------------------------------------------------------------
// SMS_SIIB_UINALProvider : 
// 
// 
// 
DEFINE_CLASS(SMS_SIIB_UINALProvider);
namespace SMS_SIIB_UINALProvider
{
    DEFINE_PROP(DispIconID);
    DEFINE_PROP(DispNameID);
    DEFINE_PROP(DLLName);
    DEFINE_PROP(GUID);
    DEFINE_PROP(ProviderName);
    DEFINE_PROP(ResourceInfo);

} // namespace SMS_SIIB_UINALProvider


//----------------------------------------------------------------------------
// SMS_Site : 
// 
// 
// 
DEFINE_CLASS(SMS_Site);
namespace SMS_Site
{
    DEFINE_PROP(BuildNumber);
    DEFINE_PROP(InstallDir);
    DEFINE_PROP(ReportingSiteCode);
    DEFINE_PROP(RequestedStatus);
    
    namespace RequestedStatus
    {

        enum tagEnumeration_SMS_Site_RequestedStatus
        {
            ENUM_SEC_REQUEST_CREATE                       = 1001L,
            ENUM_SEC_REQUEST_CREATE_CD                    = 1002L,
            ENUM_SEC_CREATION_STARTED                     = 1003L,
            ENUM_SEC_REQUEST_UPGRADE                      = 1004L,
            ENUM_SEC_REQUEST_UPGRADE_CD                   = 1005L,
            ENUM_SEC_UPGRADE_STARTED                      = 1006L,
            ENUM_SEC_REQUEST_DEINSTALL                    = 1007L,
            ENUM_SEC_DEINSTALL_STARTED                    = 1008L
        };
    
    } // namespace RequestedStatus


    DEFINE_PROP(ServerName);
    DEFINE_PROP(SiteCode);
    DEFINE_PROP(SiteName);
    DEFINE_PROP(Status);
    
    namespace Status
    {

        enum tagEnumeration_SMS_Site_Status
        {
            ENUM_ACTIVE                                   = 1L,
            ENUM_PENDING                                  = 2L,
            ENUM_FAILED                                   = 3L,
            ENUM_DELETED                                  = 4L,
            ENUM_UPGRADE                                  = 5L
        };
    
    } // namespace Status


    DEFINE_PROP(TimeZoneInfo);
    DEFINE_PROP(Type);
    
    namespace Type
    {

        enum tagEnumeration_SMS_Site_Type
        {
            ENUM_SECONDARY                                = 1L,
            ENUM_PRIMARY                                  = 2L
        };
    
    } // namespace Type


    DEFINE_PROP(Version);
    DEFINE_METHOD(VerifyNoLoops);
    
    namespace VerifyNoLoops
    {
        
        namespace In
        {
            DEFINE_PARAM(CentralSiteCode);
            DEFINE_PARAM(ParentSiteCode);
            DEFINE_PARAM(TargetSiteCode);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(Result);
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace VerifyNoLoops



} // namespace SMS_Site


//----------------------------------------------------------------------------
// SMS_SiteControlDaySchedule : 
// 
// 
// 
DEFINE_CLASS(SMS_SiteControlDaySchedule);
namespace SMS_SiteControlDaySchedule
{
    DEFINE_PROP(Backup);
    DEFINE_PROP(HourUsage);
    
    namespace HourUsage
    {

        enum tagEnumeration_SMS_SiteControlDaySchedule_HourUsage
        {
            ENUM_ALL_PRIORITY                             = 1L,
            ENUM_ALL_BUT_LOW                              = 2L,
            ENUM_HIGH_ONLY                                = 3L,
            ENUM_CLOSED                                   = 4L
        };
    
    } // namespace HourUsage


    DEFINE_PROP(update);

} // namespace SMS_SiteControlDaySchedule


//----------------------------------------------------------------------------
// SMS_SiteControlFile : 
// 
// 
// 
DEFINE_CLASS(SMS_SiteControlFile);
namespace SMS_SiteControlFile
{
    DEFINE_PROP(BuildNumber);
    DEFINE_PROP(FileType);
    
    namespace FileType
    {

        enum tagEnumeration_SMS_SiteControlFile_FileType
        {
            ENUM_EMPTY                                    = 0L,
            ENUM_ACTUAL                                   = 1L,
            ENUM_PROPOSED                                 = 2L,
            ENUM_TRANSACTIONS                             = 4L,
            ENUM_LOCAL_TRANSACTIONS                       = 6L,
            ENUM_1XSTYLE                                  = 7L
        };
    
    } // namespace FileType


    DEFINE_PROP(FormatVersion);
    DEFINE_PROP(SCFData);
    DEFINE_PROP(SerialNumber);
    DEFINE_PROP(SiteCode);

    DEFINE_METHOD(CommitSCF);
    
    namespace CommitSCF
    {
        
        namespace In
        {
            DEFINE_PARAM(SiteCode);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace CommitSCF


    DEFINE_METHOD(RefreshSCF);
    
    namespace RefreshSCF
    {
        
        namespace In
        {
            DEFINE_PARAM(SiteCode);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace RefreshSCF


    DEFINE_METHOD(GetCurrentVersion);
    
    namespace GetCurrentVersion
    {
        
        namespace In
        {
            DEFINE_PARAM(SiteCode);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);
            DEFINE_PARAM(SCFData);

        } // namespace Out



    } // namespace GetCurrentVersion


    DEFINE_METHOD(GetSessionHandle);
    
    namespace GetSessionHandle
    {
        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);
            DEFINE_PARAM(SessionHandle);

        } // namespace Out



    } // namespace GetSessionHandle


    DEFINE_METHOD(ReleaseSessionHandle);
    
    namespace ReleaseSessionHandle
    {
        
        namespace In
        {
            DEFINE_PARAM(SessionHandle);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace ReleaseSessionHandle



} // namespace SMS_SiteControlFile


//----------------------------------------------------------------------------
// SMS_SiteControlItem : 
// 
// 
// 
DEFINE_CLASS(SMS_SiteControlItem);
namespace SMS_SiteControlItem
{
    DEFINE_PROP(FileType);
    
    namespace FileType
    {

        enum tagEnumeration_SMS_SiteControlItem_FileType
        {
            ENUM_EMPTY                                    = 0L,
            ENUM_ACTUAL                                   = 1L,
            ENUM_PROPOSED                                 = 2L,
            ENUM_TRANSACTIONS                             = 4L,
            ENUM_LOCAL_TRANSACTIONS                       = 6L
        };
    
    } // namespace FileType


    DEFINE_PROP(ItemName);
    DEFINE_PROP(ItemType);
    DEFINE_PROP(SiteCode);

} // namespace SMS_SiteControlItem


//----------------------------------------------------------------------------
// SMS_SiteDetailSummarizer : 
// 
// 
// 
DEFINE_CLASS(SMS_SiteDetailSummarizer);
namespace SMS_SiteDetailSummarizer
{
    DEFINE_PROP(DatabaseFree);
    DEFINE_PROP(Errors);
    DEFINE_PROP(Infos);
    DEFINE_PROP(SiteCode);
    DEFINE_PROP(SiteName);
    DEFINE_PROP(Status);
    
    namespace Status
    {

        enum tagEnumeration_SMS_SiteDetailSummarizer_Status
        {
            ENUM_GREEN                                    = 0L,
            ENUM_YELLOW                                   = 1L,
            ENUM_RED                                      = 2L
        };
    
    } // namespace Status


    DEFINE_PROP(TallyInterval);
    DEFINE_PROP(TransFree);
    DEFINE_PROP(Version);
    DEFINE_PROP(Warnings);

} // namespace SMS_SiteDetailSummarizer


//----------------------------------------------------------------------------
// SMS_SiteInstallItem : 
// 
// 
// 
DEFINE_CLASS(SMS_SiteInstallItem);
namespace SMS_SiteInstallItem
{
    DEFINE_PROP(ItemName);
    DEFINE_PROP(ItemType);

} // namespace SMS_SiteInstallItem


//----------------------------------------------------------------------------
// SMS_SiteInstallItemBase : 
// 
// 
// 
DEFINE_CLASS(SMS_SiteInstallItemBase);
namespace SMS_SiteInstallItemBase
{
    DEFINE_PROP(Units);

} // namespace SMS_SiteInstallItemBase


//----------------------------------------------------------------------------
// SMS_SiteInstallMap : 
// 
// 
// 
DEFINE_CLASS(SMS_SiteInstallMap);
namespace SMS_SiteInstallMap
{
    DEFINE_PROP(BuildNumber);
    DEFINE_PROP(FileType);
    DEFINE_PROP(FormatVersion);
    DEFINE_PROP(IMapData);
    DEFINE_METHOD(Refresh);
    
    namespace Refresh
    {
        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace Refresh



} // namespace SMS_SiteInstallMap


//----------------------------------------------------------------------------
// SMS_SiteSystemSummarizer : 
// 
// 
// 
DEFINE_CLASS(SMS_SiteSystemSummarizer);
namespace SMS_SiteSystemSummarizer
{
    DEFINE_PROP(BytesFree);
    DEFINE_PROP(BytesTotal);
    DEFINE_PROP(DownSince);
    DEFINE_PROP(ObjectType);
    
    namespace ObjectType
    {

        enum tagEnumeration_SMS_SiteSystemSummarizer_ObjectType
        {
            ENUM_NALPATH                                  = 0L,
            ENUM_SQL_DB                                   = 1L,
            ENUM_SQL_LOG                                  = 2L
        };
    
    } // namespace ObjectType


    DEFINE_PROP(PercentFree);
    DEFINE_PROP(Role);
    DEFINE_PROP(SiteCode);
    DEFINE_PROP(SiteObject);
    DEFINE_PROP(SiteSystem);
    DEFINE_PROP(Status);
    
    namespace Status
    {

        enum tagEnumeration_SMS_SiteSystemSummarizer_Status
        {
            ENUM_GREEN                                    = 0L,
            ENUM_YELLOW                                   = 1L,
            ENUM_RED                                      = 2L
        };
    
    } // namespace Status



} // namespace SMS_SiteSystemSummarizer


//----------------------------------------------------------------------------
// SMS_SiteToROOTColl_a : 
// 
// 
// 
DEFINE_CLASS(SMS_SiteToROOTColl_a);
namespace SMS_SiteToROOTColl_a
{
    DEFINE_PROP(collection);
    DEFINE_PROP(site);

} // namespace SMS_SiteToROOTColl_a


//----------------------------------------------------------------------------
// SMS_SiteToSiteID_a : 
// 
// 
// 
DEFINE_CLASS(SMS_SiteToSiteID_a);
namespace SMS_SiteToSiteID_a
{
    DEFINE_PROP(site);
    DEFINE_PROP(siteIdentification);

} // namespace SMS_SiteToSiteID_a


//----------------------------------------------------------------------------
// SMS_SiteToSubSite_a : 
// 
// 
// 
DEFINE_CLASS(SMS_SiteToSubSite_a);
namespace SMS_SiteToSubSite_a
{
    DEFINE_PROP(childSite);
    DEFINE_PROP(parentSite);

} // namespace SMS_SiteToSubSite_a


//----------------------------------------------------------------------------
// SMS_SoftwareConversionRules : 
// 
// 
// 
DEFINE_CLASS(SMS_SoftwareConversionRules);
namespace SMS_SoftwareConversionRules
{
    DEFINE_PROP(ConvertType);
    DEFINE_PROP(NewName);
    DEFINE_PROP(OriginalName);
    DEFINE_PROP(RuleId);

} // namespace SMS_SoftwareConversionRules


//----------------------------------------------------------------------------
// SMS_SoftwareProductCompliance : 
// 
// 
// 
DEFINE_CLASS(SMS_SoftwareProductCompliance);
namespace SMS_SoftwareProductCompliance
{
    DEFINE_PROP(Category);
    DEFINE_PROP(Comment);
    DEFINE_PROP(FileName);
    DEFINE_PROP(FileSize);
    DEFINE_PROP(ProdCompany);
    DEFINE_PROP(ProdLang);
    DEFINE_PROP(ProdName);
    DEFINE_PROP(ProdPlatform);
    DEFINE_PROP(ProdRev);
    DEFINE_PROP(ProdVer);
    DEFINE_PROP(RecordID);
    DEFINE_PROP(ResProdLangID);
    DEFINE_PROP(ResProdName);
    DEFINE_PROP(ResProdVer);
    DEFINE_PROP(Source);
    DEFINE_PROP(Type);
    DEFINE_PROP(URL);
    DEFINE_METHOD(Import);
    
    namespace Import
    {
        
        namespace In
        {
            DEFINE_PARAM(ComplianceData);
            DEFINE_PARAM(ReportErrors);
            DEFINE_PARAM(SourceFilter);
            DEFINE_PARAM(TypeFilter);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);
            DEFINE_PARAM(TotalRecordsProcessed);

        } // namespace Out



    } // namespace Import


    DEFINE_METHOD(Export);
    
    namespace Export
    {
        
        namespace In
        {
            DEFINE_PARAM(SourceFilter);
            DEFINE_PARAM(TypeFilter);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ComplianceData);
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace Export


    DEFINE_METHOD(ProcessInBox);
    
    namespace ProcessInBox
    {
        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);
            DEFINE_PARAM(TotalRecordsProcessed);

        } // namespace Out



    } // namespace ProcessInBox


    DEFINE_METHOD(DeleteByQuery);
    
    namespace DeleteByQuery
    {
        
        namespace In
        {
            DEFINE_PARAM(WQLSelect);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace DeleteByQuery



} // namespace SMS_SoftwareProductCompliance


//----------------------------------------------------------------------------
// SMS_ST_NonRecurring : 
// 
// 
// 
DEFINE_CLASS(SMS_ST_NonRecurring);
namespace SMS_ST_NonRecurring
{

} // namespace SMS_ST_NonRecurring


//----------------------------------------------------------------------------
// SMS_ST_RecurInterval : 
// 
// 
// 
DEFINE_CLASS(SMS_ST_RecurInterval);
namespace SMS_ST_RecurInterval
{
    DEFINE_PROP(DaySpan);
    DEFINE_PROP(HourSpan);
    DEFINE_PROP(MinuteSpan);

} // namespace SMS_ST_RecurInterval


//----------------------------------------------------------------------------
// SMS_ST_RecurMonthlyByDate : 
// 
// 
// 
DEFINE_CLASS(SMS_ST_RecurMonthlyByDate);
namespace SMS_ST_RecurMonthlyByDate
{
    DEFINE_PROP(ForNumberOfMonths);
    DEFINE_PROP(MonthDay);

} // namespace SMS_ST_RecurMonthlyByDate


//----------------------------------------------------------------------------
// SMS_ST_RecurMonthlyByWeekday : 
// 
// 
// 
DEFINE_CLASS(SMS_ST_RecurMonthlyByWeekday);
namespace SMS_ST_RecurMonthlyByWeekday
{
    DEFINE_PROP(Day);
    
    namespace Day
    {

        enum tagEnumeration_SMS_ST_RecurMonthlyByWeekday_Day
        {
            ENUM_SUNDAY                                   = 1L,
            ENUM_MONDAY                                   = 2L,
            ENUM_TUESDAY                                  = 3L,
            ENUM_WEDNESDAY                                = 4L,
            ENUM_THURSDAY                                 = 5L,
            ENUM_FRIDAY                                   = 6L,
            ENUM_SATURDAY                                 = 7L
        };
    
    } // namespace Day


    DEFINE_PROP(ForNumberOfMonths);
    DEFINE_PROP(WeekOrder);
    
    namespace WeekOrder
    {

        enum tagEnumeration_SMS_ST_RecurMonthlyByWeekday_WeekOrder
        {
            ENUM_LAST                                     = 0L,
            ENUM_FIRST                                    = 1L,
            ENUM_SECOND                                   = 2L,
            ENUM_THIRD                                    = 3L,
            ENUM_FOURTH                                   = 4L
        };
    
    } // namespace WeekOrder



} // namespace SMS_ST_RecurMonthlyByWeekday


//----------------------------------------------------------------------------
// SMS_ST_RecurWeekly : 
// 
// 
// 
DEFINE_CLASS(SMS_ST_RecurWeekly);
namespace SMS_ST_RecurWeekly
{
    DEFINE_PROP(Day);
    
    namespace Day
    {

        enum tagEnumeration_SMS_ST_RecurWeekly_Day
        {
            ENUM_SUNDAY                                   = 1L,
            ENUM_MONDAY                                   = 2L,
            ENUM_TUESDAY                                  = 3L,
            ENUM_WEDNESDAY                                = 4L,
            ENUM_THURSDAY                                 = 5L,
            ENUM_FRIDAY                                   = 6L,
            ENUM_SATURDAY                                 = 7L
        };
    
    } // namespace Day


    DEFINE_PROP(ForNumberOfWeeks);

} // namespace SMS_ST_RecurWeekly


//----------------------------------------------------------------------------
// SMS_StatMsgAttributes : 
// 
// 
// 
DEFINE_CLASS(SMS_StatMsgAttributes);
namespace SMS_StatMsgAttributes
{
    DEFINE_PROP(AttributeID);
    
    namespace AttributeID
    {

        enum tagEnumeration_SMS_StatMsgAttributes_AttributeID
        {
            ENUM_PackageID                                = 400L,
            ENUM_AdvertisementID                          = 401L,
            ENUM_CollectionID                             = 402L,
            ENUM_UserName                                 = 403L,
            ENUM_DistributionPoint                        = 404L
        };
    
    } // namespace AttributeID


    DEFINE_PROP(AttributeTime);
    DEFINE_PROP(AttributeValue);
    DEFINE_PROP(RecordID);

} // namespace SMS_StatMsgAttributes


//----------------------------------------------------------------------------
// SMS_StatMsgInsStrings : 
// 
// 
// 
DEFINE_CLASS(SMS_StatMsgInsStrings);
namespace SMS_StatMsgInsStrings
{
    DEFINE_PROP(InsStrIndex);
    DEFINE_PROP(InsStrValue);
    DEFINE_PROP(RecordID);

} // namespace SMS_StatMsgInsStrings


//----------------------------------------------------------------------------
// SMS_StatMsgModuleNames : 
// 
// 
// 
DEFINE_CLASS(SMS_StatMsgModuleNames);
namespace SMS_StatMsgModuleNames
{
    DEFINE_PROP(ModuleName);
    DEFINE_PROP(MsgDLLName);

} // namespace SMS_StatMsgModuleNames


//----------------------------------------------------------------------------
// SMS_StatusMessage : 
// 
// 
// 
DEFINE_CLASS(SMS_StatusMessage);
namespace SMS_StatusMessage
{
    DEFINE_PROP(Component);
    DEFINE_PROP(MachineName);
    DEFINE_PROP(MessageID);
    DEFINE_PROP(MessageType);
    
    namespace MessageType
    {

        enum tagEnumeration_SMS_StatusMessage_MessageType
        {
            ENUM_Milestone                                = 256L,
            ENUM_Detail                                   = 512L,
            ENUM_Audit                                    = 768L,
            ENUM_NTEvent                                  = 1024L
        };
    
    } // namespace MessageType


    DEFINE_PROP(ModuleName);
    DEFINE_PROP(PerClient);
    
    namespace PerClient
    {

        enum tagEnumeration_SMS_StatusMessage_PerClient
        {
            ENUM_False                                    = 0L,
            ENUM_True                                     = 2L
        };
    
    } // namespace PerClient


    DEFINE_PROP(ProcessID);
    DEFINE_PROP(RecordID);
    DEFINE_PROP(ReportFunction);
    
    namespace ReportFunction
    {

        enum tagEnumeration_SMS_StatusMessage_ReportFunction
        {
            ENUM_Report                                   = 0L,
            ENUM_BeginTransaction                         = 16L,
            ENUM_CommitSuccessfulTransaction              = 32L,
            ENUM_CommitFailedTransaction                  = 48L,
            ENUM_RollbackTransaction                      = 64L,
            ENUM_ReportEX                                 = 80L
        };
    
    } // namespace ReportFunction


    DEFINE_PROP(Severity);
    
    namespace Severity
    {

        enum tagEnumeration_SMS_StatusMessage_Severity
        {
            ENUM_Informational                            = 0x40000000L,
            ENUM_Warning                                  = 0x80000000L,
            ENUM_Error                                    = 0xC0000000L
        };
    
    } // namespace Severity


    DEFINE_PROP(SiteCode);
    DEFINE_PROP(SuccessfulTransaction);
    
    namespace SuccessfulTransaction
    {

        enum tagEnumeration_SMS_StatusMessage_SuccessfulTransaction
        {
            ENUM_Failed                                   = 0L,
            ENUM_Successful                               = 8L
        };
    
    } // namespace SuccessfulTransaction


    DEFINE_PROP(ThreadID);
    DEFINE_PROP(Time);
    DEFINE_PROP(TopLevelSiteCode);
    DEFINE_PROP(Transaction);
    
    namespace Transaction
    {

        enum tagEnumeration_SMS_StatusMessage_Transaction
        {
            ENUM_False                                    = 0L,
            ENUM_True                                     = 4L
        };
    
    } // namespace Transaction


    DEFINE_PROP(Win32Error);
    DEFINE_METHOD(RaiseRawStatusMsg);
    
    namespace RaiseRawStatusMsg
    {
        
        namespace In
        {
            DEFINE_PARAM(AttrIDs);
            DEFINE_PARAM(AttrValues);
            DEFINE_PARAM(InsStrings);
            DEFINE_PARAM(MessageID);
            DEFINE_PARAM(MessageType);

            namespace MessageType
            {

                enum tagEnumeration_SMS_StatusMessage_MessageType
                {
                    ENUM_Milestone                                = 256L,
                    ENUM_Detail                                   = 512L,
                    ENUM_Audit                                    = 768L,
                    ENUM_NTEvent                                  = 1024L
                };

            } // namespace MessageType


            DEFINE_PARAM(ModuleName);
            DEFINE_PARAM(ProcessID);
            DEFINE_PARAM(ThreadID);
            DEFINE_PARAM(Time);
            DEFINE_PARAM(TopLevelSiteCode);
            DEFINE_PARAM(Win32Error);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace RaiseRawStatusMsg


    DEFINE_METHOD(RaiseErrorStatusMsg);
    
    namespace RaiseErrorStatusMsg
    {
        
        namespace In
        {
            DEFINE_PARAM(AttrIDs);
            DEFINE_PARAM(AttrValues);
            DEFINE_PARAM(MessageText);
            DEFINE_PARAM(MessageType);

            namespace MessageType
            {

                enum tagEnumeration_SMS_StatusMessage_MessageType
                {
                    ENUM_Milestone                                = 256L,
                    ENUM_Detail                                   = 512L,
                    ENUM_Audit                                    = 768L,
                    ENUM_NTEvent                                  = 1024L
                };

            } // namespace MessageType


            DEFINE_PARAM(ProcessID);
            DEFINE_PARAM(ThreadID);
            DEFINE_PARAM(Time);
            DEFINE_PARAM(TopLevelSiteCode);
            DEFINE_PARAM(Win32Error);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace RaiseErrorStatusMsg


    DEFINE_METHOD(RaiseWarningStatusMsg);
    
    namespace RaiseWarningStatusMsg
    {
        
        namespace In
        {
            DEFINE_PARAM(AttrIDs);
            DEFINE_PARAM(AttrValues);
            DEFINE_PARAM(MessageText);
            DEFINE_PARAM(MessageType);

            namespace MessageType
            {

                enum tagEnumeration_SMS_StatusMessage_MessageType
                {
                    ENUM_Milestone                                = 256L,
                    ENUM_Detail                                   = 512L,
                    ENUM_Audit                                    = 768L,
                    ENUM_NTEvent                                  = 1024L
                };

            } // namespace MessageType


            DEFINE_PARAM(ProcessID);
            DEFINE_PARAM(ThreadID);
            DEFINE_PARAM(Time);
            DEFINE_PARAM(TopLevelSiteCode);
            DEFINE_PARAM(Win32Error);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace RaiseWarningStatusMsg


    DEFINE_METHOD(RaiseInformationalStatusMsg);
    
    namespace RaiseInformationalStatusMsg
    {
        
        namespace In
        {
            DEFINE_PARAM(AttrIDs);
            DEFINE_PARAM(AttrValues);
            DEFINE_PARAM(MessageText);
            DEFINE_PARAM(MessageType);

            namespace MessageType
            {

                enum tagEnumeration_SMS_StatusMessage_MessageType
                {
                    ENUM_Milestone                                = 256L,
                    ENUM_Detail                                   = 512L,
                    ENUM_Audit                                    = 768L,
                    ENUM_NTEvent                                  = 1024L
                };

            } // namespace MessageType


            DEFINE_PARAM(ProcessID);
            DEFINE_PARAM(ThreadID);
            DEFINE_PARAM(Time);
            DEFINE_PARAM(TopLevelSiteCode);
            DEFINE_PARAM(Win32Error);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace RaiseInformationalStatusMsg


    DEFINE_METHOD(DeleteByID);
    
    namespace DeleteByID
    {
        
        namespace In
        {
            DEFINE_PARAM(RecordIDs);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace DeleteByID


    DEFINE_METHOD(DeleteByQuery);
    
    namespace DeleteByQuery
    {
        
        namespace In
        {
            DEFINE_PARAM(WQLSelect);

        } // namespace In


        
        namespace Out
        {
            DEFINE_PARAM(ReturnValue);

        } // namespace Out



    } // namespace DeleteByQuery



} // namespace SMS_StatusMessage


//----------------------------------------------------------------------------
// SMS_SummarizerRootStatus : 
// 
// 
// 
DEFINE_CLASS(SMS_SummarizerRootStatus);
namespace SMS_SummarizerRootStatus
{
    DEFINE_PROP(Status);
    
    namespace Status
    {

        enum tagEnumeration_SMS_SummarizerRootStatus_Status
        {
            ENUM_GREEN                                    = 0L,
            ENUM_YELLOW                                   = 1L,
            ENUM_RED                                      = 2L
        };
    
    } // namespace Status



} // namespace SMS_SummarizerRootStatus


//----------------------------------------------------------------------------
// SMS_SummarizerSiteStatus : 
// 
// 
// 
DEFINE_CLASS(SMS_SummarizerSiteStatus);
namespace SMS_SummarizerSiteStatus
{
    DEFINE_PROP(SiteCode);
    DEFINE_PROP(Status);
    
    namespace Status
    {

        enum tagEnumeration_SMS_SummarizerSiteStatus_Status
        {
            ENUM_GREEN                                    = 0L,
            ENUM_YELLOW                                   = 1L,
            ENUM_RED                                      = 2L
        };
    
    } // namespace Status



} // namespace SMS_SummarizerSiteStatus


//----------------------------------------------------------------------------
// SMS_SummarizerStatus : 
// 
// 
// 
DEFINE_CLASS(SMS_SummarizerStatus);
namespace SMS_SummarizerStatus
{
    DEFINE_PROP(GUID_ID);
    DEFINE_PROP(MessageDLL);
    DEFINE_PROP(MessageID);
    DEFINE_PROP(SiteCode);
    DEFINE_PROP(Status);
    
    namespace Status
    {

        enum tagEnumeration_SMS_SummarizerStatus_Status
        {
            ENUM_GREEN                                    = 0L,
            ENUM_YELLOW                                   = 1L,
            ENUM_RED                                      = 2L
        };
    
    } // namespace Status


    DEFINE_PROP(Updated);

} // namespace SMS_SummarizerStatus


//----------------------------------------------------------------------------
// SMS_SupportedPlatforms : 
// 
// 
// 
DEFINE_CLASS(SMS_SupportedPlatforms);
namespace SMS_SupportedPlatforms
{
    DEFINE_PROP(DisplayText);
    DEFINE_PROP(OSMaxVersion);
    DEFINE_PROP(OSMinVersion);
    DEFINE_PROP(OSName);
    DEFINE_PROP(OSPlatform);
    DEFINE_PROP(ResourceDll);
    DEFINE_PROP(StringId);

} // namespace SMS_SupportedPlatforms


//----------------------------------------------------------------------------
// SMS_SystemResourceList : 
// 
// 
// 
DEFINE_CLASS(SMS_SystemResourceList);
namespace SMS_SystemResourceList
{
    DEFINE_PROP(NALPath);
    DEFINE_PROP(ResourceType);
    DEFINE_PROP(RoleName);
    DEFINE_PROP(ServerName);
    DEFINE_PROP(SiteCode);

} // namespace SMS_SystemResourceList


//----------------------------------------------------------------------------
// SMS_UINAL_ResourceInfo : 
// 
// 
// 
DEFINE_CLASS(SMS_UINAL_ResourceInfo);
namespace SMS_UINAL_ResourceInfo
{
    DEFINE_PROP(ChmFile);
    DEFINE_PROP(ConfigUnit);
    DEFINE_PROP(DisplayNameIconID);
    DEFINE_PROP(DisplayNameResID);
    DEFINE_PROP(GUID);
    DEFINE_PROP(HtmFile);
    DEFINE_PROP(ResourceDLL);
    DEFINE_PROP(ResourceType);

} // namespace SMS_UINAL_ResourceInfo


//----------------------------------------------------------------------------
// SMS_UserClassPermissionNames : 
// 
// 
// 
DEFINE_CLASS(SMS_UserClassPermissionNames);
namespace SMS_UserClassPermissionNames
{
    DEFINE_PROP(ObjectKey);
    DEFINE_PROP(Permission);
    DEFINE_PROP(PermissionName);
    DEFINE_PROP(UserName);

} // namespace SMS_UserClassPermissionNames


//----------------------------------------------------------------------------
// SMS_UserClassPermissions : 
// 
// 
// 
DEFINE_CLASS(SMS_UserClassPermissions);
namespace SMS_UserClassPermissions
{
    DEFINE_PROP(ClassPermissions);
    
    namespace ClassPermissions
    {

        enum tagBitField_SMS_UserClassPermissions_ClassPermissions
        {
            BIT_READ                                     = 0x00000001,
            BIT_MODIFY                                   = 0x00000002,
            BIT_DELETE                                   = 0x00000004,
            BIT_DISTRIBUTE                               = 0x00000008,
            BIT_CREATE_CHILD                             = 0x00000010,
            BIT_REMOTE_CONTROL                           = 0x00000020,
            BIT_ADVERTISE                                = 0x00000040,
            BIT_MODIFY_RESOURCE                          = 0x00000080,
            BIT_ADMINISTER                               = 0x00000100,
            BIT_DELETE_RESOURCE                          = 0x00000200,
            BIT_CREATE                                   = 0x00000400,
            BIT_VIEW_COLL_FILE                           = 0x00000800,
            BIT_READ_RESOURCE                            = 0x00001000
        };
    
    } // namespace ClassPermissions


    DEFINE_PROP(ObjectKey);
    DEFINE_PROP(UserName);

} // namespace SMS_UserClassPermissions


//----------------------------------------------------------------------------
// SMS_UserInstancePermissionNames : 
// 
// 
// 
DEFINE_CLASS(SMS_UserInstancePermissionNames);
namespace SMS_UserInstancePermissionNames
{
    DEFINE_PROP(InstanceKey);
    DEFINE_PROP(ObjectKey);
    DEFINE_PROP(Permission);
    DEFINE_PROP(PermissionName);
    DEFINE_PROP(UserName);

} // namespace SMS_UserInstancePermissionNames


//----------------------------------------------------------------------------
// SMS_UserInstancePermissions : 
// 
// 
// 
DEFINE_CLASS(SMS_UserInstancePermissions);
namespace SMS_UserInstancePermissions
{
    DEFINE_PROP(InstanceKey);
    DEFINE_PROP(InstancePermissions);
    
    namespace InstancePermissions
    {

        enum tagBitField_SMS_UserInstancePermissions_InstancePermissions
        {
            BIT_READ                                     = 0x00000001,
            BIT_MODIFY                                   = 0x00000002,
            BIT_DELETE                                   = 0x00000004,
            BIT_DISTRIBUTE                               = 0x00000008,
            BIT_CREATE_CHILD                             = 0x00000010,
            BIT_REMOTE_CONTROL                           = 0x00000020,
            BIT_ADVERTISE                                = 0x00000040,
            BIT_MODIFY_RESOURCE                          = 0x00000080,
            BIT_ADMINISTER                               = 0x00000100,
            BIT_DELETE_RESOURCE                          = 0x00000200,
            BIT_CREATE                                   = 0x00000400,
            BIT_VIEW_COLL_FILE                           = 0x00000800,
            BIT_READ_RESOURCE                            = 0x00001000
        };
    
    } // namespace InstancePermissions


    DEFINE_PROP(ObjectKey);
    DEFINE_PROP(UserName);

} // namespace SMS_UserInstancePermissions


} // namespace SMSSDK


#endif //__SMS_SDK_NAMESPACE_ENUMS
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\snapmon.h ===
/*****************************************************************************/
/* snapmon.h - include for the SNA Perfmon Interface                         */
/* Copyright (c) Microsoft Corporation 1995 - 1996                           */
/*****************************************************************************/


#ifdef __cplusplus
extern "C"
{
#endif


typedef struct adaptercounter {
    ULONG          count;
    ULONG          type;
    LONG           scale;
} ADAPTERCOUNTER;

typedef struct adapterperfdata {
    ULONG          inuse;
    ULONG          ServiceNameIndex;
    ULONG          FirstCounterIndex;

    ADAPTERCOUNTER TotalBytesReceived;
    ADAPTERCOUNTER TotalBytesTransmitted;
    ADAPTERCOUNTER TotalFramesReceived;
    ADAPTERCOUNTER TotalFramesTransmitted;
    ADAPTERCOUNTER SuccessfulConnects;
    ADAPTERCOUNTER ConnectionFailures;
    ADAPTERCOUNTER TotalBytesThroughput;
    ADAPTERCOUNTER TotalFramesThroughput;
    ADAPTERCOUNTER AdapterFailures;
    ADAPTERCOUNTER reserved[11];

    ULONG          pad;
} ADAPTERPERFDATA;

extern void              WINAPI SNAInitLinkPerfmon(HANDLE *, void **);
extern ADAPTERPERFDATA * WINAPI SNAGetLinkPerfArea(HANDLE, ADAPTERPERFDATA *);
extern USHORT            WINAPI SNAGetPerfValues(int *, int *);
extern USHORT            WINAPI SNAGetPNodePerfVals(int *, int *);


#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\smsinfo.h ===
// **************************************************************************
//
//  File: SMSINFO.H
//
//  Copyright (c) 1995 - 1999 Microsoft Corp.
//
//  This is an auxiliary header file for the SMS API.
//  It contains manifests used in scalars and filters.
//
//
// **************************************************************************


#ifndef _SMSINFO_H_
#define _SMSINFO_H_


// ==========================================================================
//
//  Package folders.
//
// ==========================================================================

//
//  These defines are used in Share and Workstation permissions scalars.
//  These scalars must be a combination of any (or none) of these defines.
//
#define PACKAGE_USER_READ           0x00000001
#define PACKAGE_USER_WRITE          0x00000002
#define PACKAGE_GUEST_READ          0x00000004
#define PACKAGE_GUEST_WRITE         0x00000008


//
//  Values for scalar: 'Platforms'
//  ----------------------------------------------
// Both the Workstation Command Line folder and the Program Item folders
// have a 'Platforms' scalar. The values are identical.
//
#define PLTFRM_WIN16                0x00000001
#define PLTFRM_WIN32_X86            0x00000002
#define PLTFRM_WIN32_MIPS           0x00000004
#define PLTFRM_WIN32_ALPHA          0x00000008
#define PLTFRM_DOS5                 0x00000010
#define PLTFRM_DOS6                 0x00000020
#define PLTFRM_MACINTOSH            0x00000040
#define PLTFRM_WIN95                0x00000080
#define PLTFRM_MSDOS                PLTFRM_DOS5|PLTFRM_DOS6




// ==========================================================================
//
//  Program Item folders.
//
// ==========================================================================

//
//  Values for scalar: 'Drive mode'.
//  ----------------------------------------------
// This scalar corresponds directly to the 'Drive Mode' group of radio
// buttons in the 'Program Item Properties' dialogue (share package
// job only). One of these must be selected.
//
#define PI_DRIVEMODE_UNC                1
#define PI_DRIVEMODE_ANY_LETTER         2
#define PI_DRIVEMODE_SPECIFIC_LETTER    3



// ==========================================================================
//
//  Workstation Command Line (WCL) folders.
//
// ==========================================================================


//
//  Scalar: Flags
//  ----------------------------------------------
// This scalar covers the 'Automated Command Line' and
// 'System (Background) Task' check boxes in the Command Line
// Properties dialogue.
// Note that setting the flags to BACKGROUND_TASK also sets the
// AUTOMATED_COMMAND_LINE bit.
//
#define WCL_AUTOMATED_COMMAND_LINE  0x01
#define WCL_BACKGROUND_TASK         0x03



// ==========================================================================
//
//  Job folders.
//
//  General values that are common to all types of job folders
//  ----------------------------------------------------------
//
// ==========================================================================



// ==========================================================================
//
//      Job types as strings.
//
// ==========================================================================

#define STR_JOBTYPE_INSTALL         "Install"
#define STR_JOBTYPE_SERVER          "Server"
#define STR_JOBTYPE_RMPKG           "Remove package"
#define STR_JOBTYPE_SYSTEM          "System"
#define STR_JOBTYPE_MINIJOB         "Minijob"


// ==========================================================================
//
//      Job stati as strings.
//
// ==========================================================================

#define STR_JOB_PENDING             "Pending"
#define STR_JOB_ACTIVE              "Active"
#define STR_JOB_CANCELLED           "Cancelled"
#define STR_JOB_COMPLETE            "Complete"
#define STR_JOB_FAILED              "Failed"
#define STR_JOB_ACTIVE_FAILED       "Active failed"
#define STR_JOB_ACTIVE_UNKNOWN      "Unknown"


//
//  Values for scalar: 'Limit to sites'
//  ----------------------------------------------
// This can be either JOBTGT_SITE or JOBTGT_SITEGROUP. If either of
// these are set then the scalar 'Include subsites' can be set.
// If neither site nor sitegroup limiting is required then this scalar
// should be set to JOBTGT_NOSITELIMIT (default).
//
#define JOBTGT_NOSITELIMIT          0
#define JOBTGT_SITEGROUP            1
#define JOBTGT_SITE                 2


//
//  Values for scalar: 'Include subsites'
//  ----------------------------------------------
// This can be set to either 1 or 0. If the 'Limit to sites'
// scalar is not set then this scalar will be ignored.
//
#define JOBTGT_NOSUBSITES           0
#define JOBTGT_INCLUDESUBSITES      1


//
//  Values for scalar: 'Job status'
//  ----------------------------------------------
// This scalar corresponds to the 'Overall Status' display in
// in the 'Job Status' dialogue. It is a read-only scalar, the values
// are presented here for clarity.
//
#define JOBSTAT_PENDING             1
#define JOBSTAT_ACTIVE              2
#define JOBSTAT_CANCELLED           3
#define JOBSTAT_COMPLETE            4
#define JOBSTAT_FAILED              5
#define JOBSTAT_RETRYING            6


//
//  Values for scalar: 'Priority'
//  ----------------------------------------------
// This scalar corresponds to the 'Priority' edit control in the
// 'Job Schedule' dialogue box.
//
#define JOBPRI_HIGH                 1
#define JOBPRI_MEDIUM               2
#define JOBPRI_LOW                  3

//
//  Values for scalar: 'Repeat mode'
//  ----------------------------------------------
// This scalar corresponds to the 'Repeat' edit control in the
// 'Job Schedule' dialogue box.
//
#define JOBRPT_NEVER                1
#define JOBRPT_DAILY                2
#define JOBRPT_WEEKLY               3
#define JOBRPT_BIWEEKLY             4
#define JOBRPT_MONTHLY              5


//
//  Values for scalar: 'Cancel mode'
//  ----------------------------------------------
// This scalar has no direct equivalent in any dialogue box. It corresponds
// instead to the 'Cancel Job' menu selection in the Edit menu when the
// focus is on the Jobs window.
//
#define JOBCANCEL_DONT_CANCEL       0
#define JOBCANCEL_CANCEL            1

// ==========================================================================
//
//  Job folders: Remove package job.
//  --------------------------------
//
// ==========================================================================

//
//  Scalar: Package type
//  ----------------------------------------------
//  This scalar is either workstation, server, or both as below.
//
#define RMPKGJOB_PKGTYPE_WKSTA      0x01
#define RMPKGJOB_PKGTYPE_SERVER     0x02
#define RMPKGJOB_PKGTYPE_BOTH       (RMPKGJOB_PKGTYPE_WKSTA | RMPKGJOB_PKGTYPE_SERVER)

//
//  Scalar: Job tasks
//  ----------------------------------------------
//
#define RMPKGJOB_TASKS_RM_ALL       1
#define RMPKGJOB_TASKS_RM_SELECTED  2

//  Setting 'Job tasks' to RMPKGJOB_TASKS_RM_SELECTED means that the user
//  must set the 'Site group' scalar to a valid name.


//  Setting the 'Job target' scalar to JOBTGT_SITEGROUP means that the user
//  must provide, in the 'Site limit name' scalar, a name of a machine group.
//  The JOBTGT_INCLUDESUBSITES flag is only valid if JOBTGT_SITEGROUP has also
//  been specified.



// ==========================================================================
//
//  Job folders: Run command on workstation job.
//  --------------------------------------------
//
// ==========================================================================

//
//  Scalar: Job target
//  ----------------------------------------------
// Select from one of the following values. These correspond directly
// to the radio buttons in the 'Job Target' group in the Job Details
// dialogue for a run command on workstation job.
//
#define WKSTAJOB_TGT_QUERY          1
#define WKSTAJOB_TGT_MACHGROUP      2
#define WKSTAJOB_TGT_MACHPATH       3

//
//  Scalar: Distribute phase
//  ----------------------------------------------
// This scalar corresponds to the 'Distribute Phase' group.
// The value can be either, both, or neither of the following values,
// ie 0, 1, 2, or 3.
//
#define WKSTAJOB_DIST_EXISTING      0x01
#define WKSTAJOB_DIST_SPECIFIED     0x02

//
//  Scalar: Send phase
//  ----------------------------------------------
// These values correspond to the 'Only if not previously sent' and
// 'Even if previously sent' radio buttons in the SMS Admin for the
// send phase group for a Run Command on Workstation job.
//
#define WKSTAJOB_SEND_IF_NOT_SENT   1
#define WKSTAJOB_SEND_ALWAYS        2



// ==========================================================================
//
//  Job folders: Share package job.
//  -------------------------------
//
// ==========================================================================


//
//  Scalar: Send phase
//  ----------------------------------------------
// These values correspond to the 'Only if not previously sent' and
// 'Even if previously sent' radio buttons in the SMS Admin for the
// send phase group for a Share package job.
//
#define SHAREJOB_SEND_IF_NOT_SENT   1
#define SHAREJOB_SEND_ALWAYS        2


//
//  Scalar: Distribute phase
//  ----------------------------------------------
// This scalar corresponds to the 'Distribute Phase' group.
// The value can be either, both, or neither of the following values,
// ie 0, 1, 2, or 3.
//
#define SHAREJOB_DIST_EXISTING      0x01
#define SHAREJOB_DIST_SPECIFIED     0x02





#endif  // _SMSINFO_H_

/* EOF: smsinfo.h */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\snados.h ===
/****************************** Module Header ******************************\
*
* Module Name: SNADOS.H
*
* Description: Microsoft SNA Server MSDOS specific 3270 Emulator Interface
*              definitions.
*
* Copyright (c) 1994, Microsoft Corporation.  All rights reserved.
*
\***************************************************************************/

#ifdef __cplusplus
extern "C" {
#endif

/* Common definitions */

#define PASCAL	pascal
#define FAR		far
#define NEAR	near
#define VOID	void

#define APIENTRY far pascal
#ifndef WINAPI
#define WINAPI APIENTRY
#endif

#define CHAR	char		/* ch  */
#define SHORT	short		/* s   */
#define LONG	long		/* l   */
#define INT		int			/* i   */

typedef unsigned char UCHAR;	/* uch */
typedef unsigned short USHORT;	/* us  */
typedef unsigned long ULONG;	/* ul  */
typedef unsigned int  UINT;		/* ui  */
typedef unsigned char BYTE;		/* b   */

typedef unsigned short SHANDLE;


/* define NULL pointer value */
/* Echo the format of the ifdefs that stdio.h uses */

#if (_MSC_VER >= 600)
#define NULL	((void *)0)
#else
#if (defined(M_I86L) || defined(M_I86CM) || defined(M_I86LM) || defined(M_I86HM))
#define  NULL	 0L
#else
#define  NULL	 0
#endif
#endif

typedef SHANDLE HFILE;		/* hf */
typedef HFILE far *PHFILE;

typedef unsigned char far  *PSZ;
typedef unsigned char near *NPSZ;
typedef char far *LPSTR;

typedef unsigned char far  *PCH;
typedef unsigned char near *NPCH;

typedef int   (pascal far  *PFN)();
typedef int   (pascal near *NPFN)();
typedef PFN far *PPFN;

typedef BYTE   FAR  *PBYTE;
typedef BYTE   near *NPBYTE;

typedef CHAR   FAR *PCHAR;
typedef SHORT  FAR *PSHORT;
typedef LONG   FAR *PLONG;
typedef INT    FAR *PINT;

typedef UCHAR  FAR *PUCHAR;
typedef USHORT FAR *PUSHORT;
typedef ULONG  FAR *PULONG;
typedef UINT   FAR *PUINT;
typedef VOID   FAR *PVOID;

typedef unsigned short BOOL;	/* f   */
typedef BOOL FAR *PBOOL;

#ifndef TRUE
#define TRUE    1
#endif

#ifndef FALSE
#define FALSE   0
#endif

typedef unsigned short SEL;		/* sel */
typedef SEL FAR *PSEL;

/*** Useful Helper Macros */

/* Create untyped far pointer from selector and offset */
#define MAKEP(sel, off) 	((PVOID)MAKEULONG(off, sel))

/* Extract selector or offset from far pointer */
#define SELECTOROF(p)		(((PUSHORT)&(p))[1])
#define OFFSETOF(p)		(((PUSHORT)&(p))[0])


/* Cast any variable to an instance of the specified type. */
#define MAKETYPE(v, type)	(*((type far *)&v))

/* Calculate the byte offset of a field in a structure of type type. */
#define FIELDOFFSET(type, field)    ((SHORT)&(((type *)0)->field))

/* Combine l & h to form a 32 bit quantity. */
#define MAKEULONG(l, h) ((ULONG)(((USHORT)(l)) | ((ULONG)((USHORT)(h))) << 16))
#define MAKELONG(l, h)	((LONG)MAKEULONG(l, h))

/* Combine l & h to form a 16 bit quantity. */
#define MAKEUSHORT(l, h) (((USHORT)(l)) | ((USHORT)(h)) << 8)
#define MAKESHORT(l, h)  ((SHORT)MAKEUSHORT(l, h))

/* Extract high and low order parts of 16 and 32 bit quantity */
#define LOBYTE(w)	LOUCHAR(w)
#define HIBYTE(w)	HIUCHAR(w)
#define LOUCHAR(w)	((UCHAR)(USHORT)(w))
#define HIUCHAR(w)	((UCHAR)(((USHORT)(w) >> 8) & 0xff))
#define LOUSHORT(l)	((USHORT)(ULONG)(l))
#define HIUSHORT(l)	((USHORT)(((ULONG)(l) >> 16) & 0xffff))

#define SWAPUSHORT(x) (x=(((x<<8)&0xFF00)|((x>>8)&0x00FF)))

/*** Common DOS types */

typedef USHORT	  HMODULE;	/* hmod */
typedef HMODULE FAR *PHMODULE;

typedef USHORT	  PID;		/* pid	*/
typedef PID FAR *PPID;

typedef USHORT	  TID;		/* tid	*/
typedef TID FAR *PTID;

typedef VOID FAR *HSEM; 		/* hsem */
typedef HSEM FAR *PHSEM;

/**** DOS FMI Error codes */

#define ERROR_SEM_TIMEOUT  0xfffc /* Time out happened from the     */
                                  /* semaphore api functions.       */
#define ERROR_SEM_OWNED    0xfffd /* Semaphore is already owned     */

/**** DOS FMI Semaphore functions */

extern USHORT  APIENTRY CMDSemClear(HSEM);
extern USHORT  APIENTRY CMDSemRequest(HSEM, USHORT);
extern USHORT  APIENTRY CMDSemSet(HSEM);
extern USHORT  APIENTRY CMDSemWait(HSEM, USHORT);

/*** DOS FMI TSR functions */

extern USHORT  APIENTRY CMDGoTSR(ULONG, UCHAR FAR *, UCHAR FAR *);

extern USHORT  APIENTRY CMDStartFG(void);
extern USHORT  APIENTRY CMDStopFG(USHORT);

/*** DOS FMI Task switching functions */
extern USHORT  APIENTRY RegisterSwitchProc(ULONG);

/*** Other DOS FMI functions */
extern USHORT APIENTRY SNAGetVersion(VOID);

#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\snanls.h ===
/*****************************************************************************/
/* snanls.h                                                                  */
/*                                                                           */
/* Copyright (c) 1989 - 2000, Microsoft Corporation.  All rights reserved.   */
/*                                                                           */
/*****************************************************************************/
#ifdef __cplusplus
extern "C"
{
#endif

#if !defined __SNANLS_INC__

#define __SNANLS_INC__

/* ********************* Constants ******************** */

#define	CP_37		37		/* EBCDIC Lower English	*/

#define	CP_273		273		
#define	CP_277		277		
#define	CP_278		278	
#define	CP_280		280	
#define	CP_284		284	
#define	CP_285		285	


#define	CP_290		290		/* EBCDIC Katakana	*/

#define	CP_297		297
#define CP_423		423
#define CP_500		500
#define CP_875		875	

#define	CP_930		930		/* EBCDIC Katakana + Kanji	*/
#define	CP_931		931		/* EBCDIC Lower English + Kanji	*/
#define	CP_932		932 	/* Japanese	*/

#define	CP_933		933		/* EBCDIC Korean	*/

#define CP_935		935		/* EBCDIC Simplified Chinese */
#define CP_936		936		/* Chinese */
#define	CP_937		937		/* EBCDIC Traditional Chinese	*/

#define	CP_939		939		/* EBCDIC Extended Lower English + Kanji	*/
#define	CP_949		949		/* Korean	*/
#define	CP_950		950		/* Taiwanese	*/
#define	CP_1027	    1027	/* EBCDIC Extended Lower English	*/

#define CP_5026		5026	/* Japanese (Katakana-Kanji) */
#define CP_5035		5035	/* Japanese (Latin-Kanji) */


#define SNA_UNICODE   1  /* Result of Conversion is Unicode */
#define SNA_MULTIBYTE 2  /* Result of Conversion is MultiByte */

#define SNA_DBCS        0x0100
#define SNA_EITHER      0x0200
#define SNA_BOTH        0x0400

/* ********************* Functions ******************** */

/* ***************************************************************** */
/*		Initialization Routine : Local Machine						 */
/*			CodePage : The CodePage which we need to support         */
/*			return   : 1 if CodePage Translations are Supported      */
/*                     0 otherwise									 */
/* ***************************************************************** */

int WINAPI SnaNlsInit(UINT CodePage);

/* ***************************************************************** */
/*																	 */
/* Translation Routine												 */
/*																	 */
/*		Input														 */
/*																	 */
/*			lpSrcStr   : Input, Source String						 */
/*																	 */
/*			lpDestStr  : Output, Translated String			         */
/*							maybe NULL if out_length is 0			 */
/*																	 */
/*			inCodePage : CodePage of incoming string				 */
/*							ignored if input is in unicode			 */
/*																	 */
/*			outCodePage: CodePage of translated string.				 */
/*							ignored if output is in unicode			 */
/*																	 */
/*			in_length  : Length of input string				         */
/*							in characters if input is multibyte      */
/*							in wide chars if input is unicode        */
/*																	 */
/*          out_length : Length of output string					 */
/*							in characters if output is multibyte     */
/*							in wide chars if output is unicode       */
/*																	 */
/*			in_type    : SNA_UNICODE - Unicode Input				 */
/*						 SNA_MULTIBYTE - MultiByte Input			 */
/*																	 */
/*			out_type   : SNA_UNICODE - Unicode Output				 */
/*						 SNA_MULTIBYTE - MultiByte Output			 */
/*																	 */
/*			Options    : Multiple usage								 */
/*							Trnsdt Options							 */
/*							Default Character for Translation (NLS)  */
/*																	 */
/*		Output														 */
/*																	 */
/*			return val : 0 - Failure								 */
/*							Use GetLastError to retrieve error		 */
/*						 Else										 */
/*							Num of chars(wide) written to lpDestStr  */
/*																	 */
/*			lpDestStr  : Translated String							 */
/*																	 */
/* 			Options    : Required buffer length if call failed		 */
/*																	 */
/*			Errors	   : (Retrieved by using GetLastError)           */
/*																	 */
/*						  ERROR_NOT_SUPPORTED						 */
/*							Possible Reasons:		  				 */
/*								NLS is not available		 		 */
/*								Input & Output are not of same type	 */
/*																	 */
/*						 ERROR_BUFFER_OVERFLOW						 */
/*							Possible Reasons:						 */
/*								Output buffer is too small           */
/*																	 */
/*						 ERROR_INVALID_PARAMETER					 */
/*							Possible Reasons:						 */
/*								in_type or out_type is faulty        */
/*																	 */
/*						 ERROR_INVALID_DATA							 */
/*							Possible Reasons:						 */
/*								input data has a lead byte at end    */
/*																	 */
/*						 ERROR_OUTOFMEMORY							 */
/*							Possible Reasons:						 */
/*								malloc failed			             */
/*																	 */
/*																	 */
/* ***************************************************************** */

int WINAPI SnaNlsMapString (LPCTSTR lpSrcStr, LPTSTR lpDestStr,
					 UINT inCodePage, UINT outCodePage,
					 int in_length,   int out_length, 
					 UINT in_type, UINT out_type,  WORD * Options);

/* ***************************************************************** */
// Function for use by PrintServer
/* ***************************************************************** */

HKEY WINAPI OpenNlsRegistry(char *MachineName, HKEY hKey, LPTSTR Path);
BOOL WINAPI CloseNlsRegistry(HKEY KeyHandle);
BOOL WINAPI IsInstalledCodePage(UINT CodePage, HKEY KeyHandle);

/*****************#Defines********************/
#define CP_SIZE		80
/*********************************************/


/******************Enumerations***************/
enum	{ENUM_CP_AVAILABLE = 0x01, ENUM_CP_HOST = 0x02, ENUM_CP_EURO = 0x04,ENUM_CP_DBCS = 0x08, ENUM_CP_MBCS = 0x10, ENUM_CP_SBCS = 0x20};
enum	{ENUM_CP_EBCDIC, ENUM_CP_ANSI, ENUM_CP_ISO, ENUM_CP_OEMPC, ENUM_CP_OPEN, ENUM_CP_UCS};


/*********************************************/


/*******************Structures****************/
//This is the structure presented to the end user
struct CodePage
{
	BYTE	CodePageKey;
	DWORD	CodePageId;
	WCHAR	szFriendlyName[CP_SIZE]; 	
	short	eGroup;
	BOOL	bAvailable;
	BYTE	bccsid;	
	BOOL	bEuro;	
};

int WINAPI GetCodePages(
				 DWORD	dwEnumOption,
				 size_t count, 
				 struct CodePage *pCodePages 		
				);

BOOL WINAPI GetCodePage(int nKey, struct CodePage *pCodePage);
BOOL WINAPI GetCodePageDisplayStr(int nKey, WCHAR *szDisplaystr);
const HANDLE WINAPI FindFirstCodePage(DWORD dwEnumOption, struct CodePage *pPage);
BOOL WINAPI FindNextCodePage(const HANDLE hInfo, struct CodePage *pPage);
BOOL WINAPI FindCloseCodePage(const HANDLE hInfo);


#endif

#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\snaoledb.h ===
/*
    snaoledb.h
    Constant values for the Microsoft OLE DB Provider for AS/400 and VSAM
    Version 02.01 (DBPROP_PROVIDERVER)
    Copyright (c) 1998, Microsoft Corporation.  All rights reserved.
*/

#ifndef __SNAOLEDB_h__
#define __SNAOLEDB_h__

DEFINE_GUID(CLSID_SNAOLEDB,
0xb15ff21, 0xb29, 0x11d0, 0x8c, 0x61, 0x0, 0xc0, 0xf0, 0xb, 0xc2, 0x49);

DEFINE_GUID(CLSID_SNAOLEDB_ERROR_LOOKUP_SERVICE, 
0xb15ff24, 0xb29, 0x11d0, 0x8c, 0x61, 0x0, 0xc0, 0xf0, 0xb, 0xc2, 0x49);

DEFINE_GUID(SNAOLEDB_DBPROPSET_DBINIT, 
0xc7f24a12, 0x4a9d, 0x11d2, 0x85, 0x7, 0x0, 0x0, 0xf8, 0x7a, 0x53, 0xf8);

// Provider specific SNAOLEDB_DBPROPSET_DBINIT property IDs.
enum SNAOLEDB_DBPROPENUM
{
	DBPROP_SNAOLEDB_REMOTELU	= 0x02,         /* APPC Remote LU Alias. For SNA NETTYPE. */
	DBPROP_SNAOLEDB_LOCALLU		= 0x03,         /* APPC Local LU Alias. For SNA NETTYPE. */
	DBPROP_SNAOLEDB_APPCMODE	= 0x04,         /* APPC Mode Name. For SNA NETTYPE. */
	DBPROP_SNAOLEDB_LIBRARY		= 0x05,         /* Default Library Name */
	DBPROP_SNAOLEDB_HOSTCCSID	= 0x06,         /* Host CCSID. See SNA Server docs for supported values. */
	DBPROP_SNAOLEDB_PCCODEPAGE	= 0x07,         /* PC Code Page. See SNA Server docs for supported values. */
	DBPROP_SNAOLEDB_HCDPATH		= 0x08,         /* Path of Host Column Description file */
	DBPROP_SNAOLEDB_BINASCHAR	= 0x09,         /* Process Binary as Character */
	DBPROP_SNAOLEDB_REPAIRKEY	= 0x0a,         /* TRUE will cause the provider to repair invalid key information returned by older versions of OS/400 */
	DBPROP_SNAOLEDB_STRICTVAL	= 0x0b,         /* Reserved for future use. */
	DBPROP_SNAOLEDB_NETTYPE		= 0x0c,         /* Network Transport Library "SNA" or "TCPIP" */
	DBPROP_SNAOLEDB_NETADDRESS	= 0x0d,         /* Network Address. For TCPIP NETTYPE.  IP address or hostname */
    DBPROP_SNAOLEDB_NETPORT     = 0x0e          /* Network Port. For TCPIP NETTYPE. */
};

/* Native Error Codes: */
#define SNAOLEDB_ERROR                      -1
#define SNAOLEDB_ERROR_SEND                 -2
#define SNAOLEDB_ERROR_RECEIVE              -3
#define SNAOLEDB_INVALID_POINTER            -4
#define SNAOLEDB_INVALID_PARAM              -5
#define SNAOLEDB_INVALID_DATA               -6
#define SNAOLEDB_INVALID_CONVERSION         -7
#define SNAOLEDB_INVALID_USER               -8
#define SNAOLEDB_ERROR_WRITE                -9
#define SNAOLEDB_ERROR_READ                 -10
#define SNAOLEDB_FILE_NOT_FOUND             -11
#define SNAOLEDB_INDEX_NOT_FOUND            -12
#define SNAOLEDB_RECORD_NOT_FOUND           -13
#define SNAOLEDB_KEY_NOT_FOUND              -14
#define SNAOLEDB_INVALID_FORMAT             -15
#define SNAOLEDB_MAX_CONNECTIONS            -16
#define SNAOLEDB_NOT_CONNECTED              -17
#define SNAOLEDB_NETWORK_ERROR              -18
#define SNAOLEDB_INVALID_DATASOURCE         -19
#define SNAOLEDB_ACCESS_DENIED              -20
#define SNAOLEDB_FILE_NOT_OPENED            -21
#define SNAOLEDB_MEMORY_ALLOC               -22
#define SNAOLEDB_DATA_NOT_FOUND             -23
#define SNAOLEDB_INDEX_EXISTS               -24
#define SNAOLEDB_FUNCTION_NOT_SUPPORTED     -25
#define SNAOLEDB_NO_CACHE                   -26
#define SNAOLEDB_FILE_LENGTH                -27
#define SNAOLEDB_INVALID_CONN_ID            -28
#define SNAOLEDB_INVALID_FILE_ID            -29
#define SNAOLEDB_INVALID_FILENAME           -30
#define SNAOLEDB_LOCAL_FILE_ERROR           -31
#define SNAOLEDB_INVALID_VIEW_ID            -32
#define SNAOLEDB_INVALID_VIEW               -33
#define SNAOLEDB_DISK_FULL                  -34
#define SNAOLEDB_DEST_FILE_CHANGED          -35
#define SNAOLEDB_FTX_FAILED                 -36
#define SNAOLEDB_FTX_ABORTED_BY_HOST        -37
#define SNAOLEDB_CONNECTION_LOST            -38
#define SNAOLEDB_CONNECTION_BUSY            -39
#define SNAOLEDB_HOST_NOT_RESPONDING        -40
#define SNAOLEDB_INVALID_DATA_CONV          -41
#define SNAOLEDB_DATA_TYPE_NOT_SUPPORTED    -42
#define SNAOLEDB_TIMEOUT                    -43
#define SNAOLEDB_DDMAGENT_NOT_LOADED        -44
#define SNAOLEDB_COMPONENT_MISSING          -45
#define SNAOLEDB_DCONV_DLL_NOT_FOUND        -46
#define SNAOLEDB_INVALID_STMT_HANDLE        -47
#define SNAOLEDB_VALUE_NOT_SUPPORTED        -48
#define SNAOLEDB_SQL_ERROR                  -49


/* 
    DDM originated error codes
    The last segment of the constant identifier is the DDM Code Point name returned from the host
    Refer to IBM Publication: SC21-9526 DDM Architecture Reference
*/
#define SNAOLEDB_DDM_ERROR_START    -256
#define SNAOLEDB_DDM_ABNUOWRM    	(SNAOLEDB_DDM_ERROR_START-0)        /* -256 */
#define SNAOLEDB_DDM_ACCATHRM    	(SNAOLEDB_DDM_ERROR_START-1) 
#define SNAOLEDB_DDM_ACCINTRM    	(SNAOLEDB_DDM_ERROR_START-2) 
#define SNAOLEDB_DDM_ACCMTHRM    	(SNAOLEDB_DDM_ERROR_START-3) 
#define SNAOLEDB_DDM_ACCRDBRM    	(SNAOLEDB_DDM_ERROR_START-4) 
#define SNAOLEDB_DDM_AGNPRMRM    	(SNAOLEDB_DDM_ERROR_START-5) 
#define SNAOLEDB_DDM_BASNAMRM    	(SNAOLEDB_DDM_ERROR_START-6) 
#define SNAOLEDB_DDM_BGNBNDRM    	(SNAOLEDB_DDM_ERROR_START-7) 
#define SNAOLEDB_DDM_CHGFATRM    	(SNAOLEDB_DDM_ERROR_START-8) 
#define SNAOLEDB_DDM_CLSDMGRM    	(SNAOLEDB_DDM_ERROR_START-9) 
#define SNAOLEDB_DDM_CMBACCAM    	(SNAOLEDB_DDM_ERROR_START-10)       /* -266 */
#define SNAOLEDB_DDM_CMBKEYAM    	(SNAOLEDB_DDM_ERROR_START-11) 
#define SNAOLEDB_DDM_CMBRNBAM    	(SNAOLEDB_DDM_ERROR_START-12) 
#define SNAOLEDB_DDM_CMDATHRM    	(SNAOLEDB_DDM_ERROR_START-13) 
#define SNAOLEDB_DDM_CMDCHKRM    	(SNAOLEDB_DDM_ERROR_START-14) 
#define SNAOLEDB_DDM_CMDCMPRM    	(SNAOLEDB_DDM_ERROR_START-15) 
#define SNAOLEDB_DDM_CMDNSPRM    	(SNAOLEDB_DDM_ERROR_START-16) 
#define SNAOLEDB_DDM_CMDVLTRM    	(SNAOLEDB_DDM_ERROR_START-17) 
#define SNAOLEDB_DDM_CMMRQSRM    	(SNAOLEDB_DDM_ERROR_START-18) 
#define SNAOLEDB_DDM_CSRNSARM    	(SNAOLEDB_DDM_ERROR_START-19) 
#define SNAOLEDB_DDM_DCLCNFRM    	(SNAOLEDB_DDM_ERROR_START-20)       /* -276 */
#define SNAOLEDB_DDM_DCLNAMRM    	(SNAOLEDB_DDM_ERROR_START-21) 
#define SNAOLEDB_DDM_DCLNFNRM    	(SNAOLEDB_DDM_ERROR_START-22) 
#define SNAOLEDB_DDM_DRCATHRM    	(SNAOLEDB_DDM_ERROR_START-23) 
#define SNAOLEDB_DDM_DRCDMGRM    	(SNAOLEDB_DDM_ERROR_START-24) 
#define SNAOLEDB_DDM_DRCENTRM    	(SNAOLEDB_DDM_ERROR_START-25) 
#define SNAOLEDB_DDM_DRCFULRM    	(SNAOLEDB_DDM_ERROR_START-26) 
#define SNAOLEDB_DDM_DRCIUSRM    	(SNAOLEDB_DDM_ERROR_START-27) 
#define SNAOLEDB_DDM_DRCNAMRM    	(SNAOLEDB_DDM_ERROR_START-28) 
#define SNAOLEDB_DDM_DRCNEMRM    	(SNAOLEDB_DDM_ERROR_START-29) 
#define SNAOLEDB_DDM_DRCNFNRM    	(SNAOLEDB_DDM_ERROR_START-30)       /* -286 */
#define SNAOLEDB_DDM_DRCSNARM    	(SNAOLEDB_DDM_ERROR_START-31) 
#define SNAOLEDB_DDM_DRCSUBRM    	(SNAOLEDB_DDM_ERROR_START-32) 
#define SNAOLEDB_DDM_DRCTNARM    	(SNAOLEDB_DDM_ERROR_START-33) 
#define SNAOLEDB_DDM_DSCINVRM    	(SNAOLEDB_DDM_ERROR_START-34) 
#define SNAOLEDB_DDM_DTAMAPRM    	(SNAOLEDB_DDM_ERROR_START-35) 
#define SNAOLEDB_DDM_DTAMCHRM    	(SNAOLEDB_DDM_ERROR_START-36) 
#define SNAOLEDB_DDM_DTANFNRM    	(SNAOLEDB_DDM_ERROR_START-37) 
#define SNAOLEDB_DDM_DTARECRM    	(SNAOLEDB_DDM_ERROR_START-38) 
#define SNAOLEDB_DDM_DUPDCLRM    	(SNAOLEDB_DDM_ERROR_START-39) 
#define SNAOLEDB_DDM_DUPDRCRM    	(SNAOLEDB_DDM_ERROR_START-40)       /* -296 */
#define SNAOLEDB_DDM_DUPFILRM    	(SNAOLEDB_DDM_ERROR_START-41) 
#define SNAOLEDB_DDM_DUPKDIRM    	(SNAOLEDB_DDM_ERROR_START-42) 
#define SNAOLEDB_DDM_DUPKSIRM    	(SNAOLEDB_DDM_ERROR_START-43) 
#define SNAOLEDB_DDM_DUPQUERM    	(SNAOLEDB_DDM_ERROR_START-44) 
#define SNAOLEDB_DDM_DUPRNBRM    	(SNAOLEDB_DDM_ERROR_START-45) 
#define SNAOLEDB_DDM_ENDFILRM    	(SNAOLEDB_DDM_ERROR_START-46) 
#define SNAOLEDB_DDM_ENDQRYRM    	(SNAOLEDB_DDM_ERROR_START-47) 
#define SNAOLEDB_DDM_ENDUOWRM    	(SNAOLEDB_DDM_ERROR_START-48) 
#define SNAOLEDB_DDM_EXSCNDRM    	(SNAOLEDB_DDM_ERROR_START-49) 
#define SNAOLEDB_DDM_FILATHRM    	(SNAOLEDB_DDM_ERROR_START-50)       /* -306 */
#define SNAOLEDB_DDM_FILDMGRM    	(SNAOLEDB_DDM_ERROR_START-51) 
#define SNAOLEDB_DDM_FILFULRM    	(SNAOLEDB_DDM_ERROR_START-52) 
#define SNAOLEDB_DDM_FILIUSRM    	(SNAOLEDB_DDM_ERROR_START-53) 
#define SNAOLEDB_DDM_FILNAMRM    	(SNAOLEDB_DDM_ERROR_START-54) 
#define SNAOLEDB_DDM_FILNFNRM    	(SNAOLEDB_DDM_ERROR_START-55) 
#define SNAOLEDB_DDM_FILNOPRM    	(SNAOLEDB_DDM_ERROR_START-56) 
#define SNAOLEDB_DDM_FILOLORM    	(SNAOLEDB_DDM_ERROR_START-57) 
#define SNAOLEDB_DDM_FILSNARM    	(SNAOLEDB_DDM_ERROR_START-58) 
#define SNAOLEDB_DDM_FILTNARM    	(SNAOLEDB_DDM_ERROR_START-59) 
#define SNAOLEDB_DDM_INTATHRM    	(SNAOLEDB_DDM_ERROR_START-60)       /* -316 */
#define SNAOLEDB_DDM_INTTKNRM    	(SNAOLEDB_DDM_ERROR_START-61) 
#define SNAOLEDB_DDM_INVRQSRM    	(SNAOLEDB_DDM_ERROR_START-62) 
#define SNAOLEDB_DDM_INVUSRRM    	(SNAOLEDB_DDM_ERROR_START-63) 
#define SNAOLEDB_DDM_KEYDEFRM    	(SNAOLEDB_DDM_ERROR_START-64) 
#define SNAOLEDB_DDM_KEYLENRM    	(SNAOLEDB_DDM_ERROR_START-65) 
#define SNAOLEDB_DDM_KEYMODRM    	(SNAOLEDB_DDM_ERROR_START-66) 
#define SNAOLEDB_DDM_KEYUDIRM    	(SNAOLEDB_DDM_ERROR_START-67) 
#define SNAOLEDB_DDM_KEYUSIRM    	(SNAOLEDB_DDM_ERROR_START-68) 
#define SNAOLEDB_DDM_KEYVALRM    	(SNAOLEDB_DDM_ERROR_START-69) 
#define SNAOLEDB_DDM_LODSTRRM    	(SNAOLEDB_DDM_ERROR_START-70)       /* -326 */
#define SNAOLEDB_DDM_MGMATHRM    	(SNAOLEDB_DDM_ERROR_START-71) 
#define SNAOLEDB_DDM_MGMCLSNM    	(SNAOLEDB_DDM_ERROR_START-72) 
#define SNAOLEDB_DDM_MGMCNFRM    	(SNAOLEDB_DDM_ERROR_START-73) 
#define SNAOLEDB_DDM_MGMNFNRM    	(SNAOLEDB_DDM_ERROR_START-74) 
#define SNAOLEDB_DDM_MGRDEPRM    	(SNAOLEDB_DDM_ERROR_START-75) 
#define SNAOLEDB_DDM_MGRLVLRM    	(SNAOLEDB_DDM_ERROR_START-76) 
#define SNAOLEDB_DDM_NEWDRNRM    	(SNAOLEDB_DDM_ERROR_START-77) 
#define SNAOLEDB_DDM_NEWNAMRM    	(SNAOLEDB_DDM_ERROR_START-78) 
#define SNAOLEDB_DDM_OBJNSPRM    	(SNAOLEDB_DDM_ERROR_START-79) 
#define SNAOLEDB_DDM_OPNCNFRM    	(SNAOLEDB_DDM_ERROR_START-80)       /* -336 */
#define SNAOLEDB_DDM_OPNEXCRM    	(SNAOLEDB_DDM_ERROR_START-81) 
#define SNAOLEDB_DDM_OPNMAXRM    	(SNAOLEDB_DDM_ERROR_START-82) 
#define SNAOLEDB_DDM_OPNQFLRM    	(SNAOLEDB_DDM_ERROR_START-83) 
#define SNAOLEDB_DDM_OPNQRYRM    	(SNAOLEDB_DDM_ERROR_START-84) 
#define SNAOLEDB_DDM_PKGBNARM    	(SNAOLEDB_DDM_ERROR_START-85) 
#define SNAOLEDB_DDM_PKGBPARM    	(SNAOLEDB_DDM_ERROR_START-86) 
#define SNAOLEDB_DDM_PRCCNVRM    	(SNAOLEDB_DDM_ERROR_START-87) 
#define SNAOLEDB_DDM_PRMNSPRM    	(SNAOLEDB_DDM_ERROR_START-88) 
#define SNAOLEDB_DDM_QRYNOPRM    	(SNAOLEDB_DDM_ERROR_START-89) 
#define SNAOLEDB_DDM_QRYPOPRM    	(SNAOLEDB_DDM_ERROR_START-90)       /* -346 */
#define SNAOLEDB_DDM_QUEATHRM    	(SNAOLEDB_DDM_ERROR_START-91) 
#define SNAOLEDB_DDM_QUEDMGRM    	(SNAOLEDB_DDM_ERROR_START-92) 
#define SNAOLEDB_DDM_QUEFULRM    	(SNAOLEDB_DDM_ERROR_START-93) 
#define SNAOLEDB_DDM_QUEIUSRM    	(SNAOLEDB_DDM_ERROR_START-94) 
#define SNAOLEDB_DDM_QUELENRM    	(SNAOLEDB_DDM_ERROR_START-95) 
#define SNAOLEDB_DDM_QUENAMRM    	(SNAOLEDB_DDM_ERROR_START-96) 
#define SNAOLEDB_DDM_QUENFNRM    	(SNAOLEDB_DDM_ERROR_START-97) 
#define SNAOLEDB_DDM_QUETNARM    	(SNAOLEDB_DDM_ERROR_START-98) 
#define SNAOLEDB_DDM_QUEVANRM    	(SNAOLEDB_DDM_ERROR_START-99) 
#define SNAOLEDB_DDM_RDBACCRM    	(SNAOLEDB_DDM_ERROR_START-100)      /* -356 */
#define SNAOLEDB_DDM_RDBAFLRM    	(SNAOLEDB_DDM_ERROR_START-101) 
#define SNAOLEDB_DDM_RDBATHRM    	(SNAOLEDB_DDM_ERROR_START-102) 
#define SNAOLEDB_DDM_RDBNACRM    	(SNAOLEDB_DDM_ERROR_START-103) 
#define SNAOLEDB_DDM_RDBNFNRM    	(SNAOLEDB_DDM_ERROR_START-104) 
#define SNAOLEDB_DDM_RDBUPDRM    	(SNAOLEDB_DDM_ERROR_START-105) 
#define SNAOLEDB_DDM_RECCNTRM    	(SNAOLEDB_DDM_ERROR_START-106) 
#define SNAOLEDB_DDM_RECDMGRM    	(SNAOLEDB_DDM_ERROR_START-107) 
#define SNAOLEDB_DDM_RECINARM    	(SNAOLEDB_DDM_ERROR_START-108) 
#define SNAOLEDB_DDM_RECIUSRM    	(SNAOLEDB_DDM_ERROR_START-109) 
#define SNAOLEDB_DDM_RECLENRM    	(SNAOLEDB_DDM_ERROR_START-110)      /* -366 */
#define SNAOLEDB_DDM_RECNAVRM    	(SNAOLEDB_DDM_ERROR_START-111) 
#define SNAOLEDB_DDM_RECNBRRM    	(SNAOLEDB_DDM_ERROR_START-112) 
#define SNAOLEDB_DDM_RECNFNRM    	(SNAOLEDB_DDM_ERROR_START-113) 
#define SNAOLEDB_DDM_RSCLMTRM    	(SNAOLEDB_DDM_ERROR_START-114) 
#define SNAOLEDB_DDM_SHDEXSRM    	(SNAOLEDB_DDM_ERROR_START-115) 
#define SNAOLEDB_DDM_SQLERRRM    	(SNAOLEDB_DDM_ERROR_START-116) 
#define SNAOLEDB_DDM_STGATHRM    	(SNAOLEDB_DDM_ERROR_START-117) 
#define SNAOLEDB_DDM_STGNFNRM    	(SNAOLEDB_DDM_ERROR_START-118) 
#define SNAOLEDB_DDM_STPCMPRM    	(SNAOLEDB_DDM_ERROR_START-119) 
#define SNAOLEDB_DDM_STRDMGRM    	(SNAOLEDB_DDM_ERROR_START-120)      /* -376 */
#define SNAOLEDB_DDM_STRIUSRM    	(SNAOLEDB_DDM_ERROR_START-121) 
#define SNAOLEDB_DDM_SUBSTRRM    	(SNAOLEDB_DDM_ERROR_START-122) 
#define SNAOLEDB_DDM_SYNTAXRM    	(SNAOLEDB_DDM_ERROR_START-123) 
#define SNAOLEDB_DDM_SYSCMDRM    	(SNAOLEDB_DDM_ERROR_START-124) 
#define SNAOLEDB_DDM_TRGNSPRM    	(SNAOLEDB_DDM_ERROR_START-125) 
#define SNAOLEDB_DDM_UPDCSRRM    	(SNAOLEDB_DDM_ERROR_START-126) 
#define SNAOLEDB_DDM_UPDINTRM    	(SNAOLEDB_DDM_ERROR_START-127) 
#define SNAOLEDB_DDM_USRATTRM    	(SNAOLEDB_DDM_ERROR_START-128) 
#define SNAOLEDB_DDM_VALNSPRM    	(SNAOLEDB_DDM_ERROR_START-129) 
#define SNAOLEDB_DDM_DFTRECRM       (SNAOLEDB_DDM_ERROR_START-130)      /* -386 */
#define SNAOLEDB_DDM_STGCNFRM       (SNAOLEDB_DDM_ERROR_START-131)

/*
    SNAOLEDB Communications Error Codes.
    Refer to Microsoft SNA Server SDK Documentation: APPC Programmer's Guide.
    Some error codes are related to TCP/IP communications.
*/ 
#define SNAOLEDB_COMM_ERROR_START                   -512
#define SNAOLEDB_COMM_PARAMETER_CHECK               (SNAOLEDB_COMM_ERROR_START)         /* APPC Errors: */
#define SNAOLEDB_COMM_BAD_TP_ID                     (SNAOLEDB_COMM_ERROR_START-1)
#define SNAOLEDB_COMM_BAD_CONV_ID                   (SNAOLEDB_COMM_ERROR_START-2)
#define SNAOLEDB_COMM_BAD_LU_ALIAS                  (SNAOLEDB_COMM_ERROR_START-3)
#define SNAOLEDB_COMM_INVALID_DATA_SEGMENT          (SNAOLEDB_COMM_ERROR_START-4)
#define SNAOLEDB_COMM_BAD_CONV_TYPE                 (SNAOLEDB_COMM_ERROR_START-5)
#define SNAOLEDB_COMM_BAD_SYNC_LEVEL                (SNAOLEDB_COMM_ERROR_START-6)
#define SNAOLEDB_COMM_BAD_SECURITY                  (SNAOLEDB_COMM_ERROR_START-7)
#define SNAOLEDB_COMM_BAD_RETURN_CONTROL            (SNAOLEDB_COMM_ERROR_START-8)       /* -520 */
#define SNAOLEDB_COMM_PIP_LEN_INCORRECT             (SNAOLEDB_COMM_ERROR_START-9)
#define SNAOLEDB_COMM_NO_USE_OF_SNASVCMG            (SNAOLEDB_COMM_ERROR_START-10)
#define SNAOLEDB_COMM_UNKNOWN_PARTNER_MODE          (SNAOLEDB_COMM_ERROR_START-11)
#define SNAOLEDB_COMM_CONFIRM_ON_SYNC_LEVEL_NONE    (SNAOLEDB_COMM_ERROR_START-12)
#define SNAOLEDB_COMM_DEALLOC_BAD_TYPE              (SNAOLEDB_COMM_ERROR_START-13)
#define SNAOLEDB_COMM_DEALLOC_LOG_LL_WRONG          (SNAOLEDB_COMM_ERROR_START-14)
#define SNAOLEDB_COMM_P_TO_R_INVALID_TYPE           (SNAOLEDB_COMM_ERROR_START-15)
#define SNAOLEDB_COMM_RCV_AND_WAIT_BAD_FILL         (SNAOLEDB_COMM_ERROR_START-16)
#define SNAOLEDB_COMM_RCV_IMMD_BAD_FILL             (SNAOLEDB_COMM_ERROR_START-17)
#define SNAOLEDB_COMM_RCV_AND_POST_BAD_FILL         (SNAOLEDB_COMM_ERROR_START-18)      /* -530 */
#define SNAOLEDB_COMM_INVALID_SEMAPHORE_HANDLE      (SNAOLEDB_COMM_ERROR_START-19)
#define SNAOLEDB_COMM_BAD_RETURN_STATUS_WITH_DATA   (SNAOLEDB_COMM_ERROR_START-20)
#define SNAOLEDB_COMM_BAD_LL                        (SNAOLEDB_COMM_ERROR_START-21)
#define SNAOLEDB_COMM_SEND_DATA_INVALID_TYPE        (SNAOLEDB_COMM_ERROR_START-22)
#define SNAOLEDB_COMM_INVALID_SESSION_ID            (SNAOLEDB_COMM_ERROR_START-23)
#define SNAOLEDB_COMM_SEND_DATA_CONFIRM_SYNC_NONE   (SNAOLEDB_COMM_ERROR_START-24)
#define SNAOLEDB_COMM_BAD_PARTNER_LU_ALIAS          (SNAOLEDB_COMM_ERROR_START-25) 
#define SNAOLEDB_COMM_SEND_ERROR_LOG_LL_WRONG       (SNAOLEDB_COMM_ERROR_START-26)
#define SNAOLEDB_COMM_SEND_ERROR_BAD_TYPE           (SNAOLEDB_COMM_ERROR_START-27) 
#define SNAOLEDB_COMM_BAD_ERROR_DIRECTION           (SNAOLEDB_COMM_ERROR_START-28)      /* -540 */
#define SNAOLEDB_COMM_TOO_MANY_TPS                  (SNAOLEDB_COMM_ERROR_START-29) 
#define SNAOLEDB_COMM_BAD_TYPE                      (SNAOLEDB_COMM_ERROR_START-30) 
#define SNAOLEDB_COMM_UNDEFINED_TP_NAME             (SNAOLEDB_COMM_ERROR_START-31) 

#define SNAOLEDB_COMM_STATE_CHECK                   (SNAOLEDB_COMM_ERROR_START-32)
#define SNAOLEDB_COMM_CONFIRM_BAD_STATE             (SNAOLEDB_COMM_ERROR_START-33)
#define SNAOLEDB_COMM_CONFIRM_NOT_LL_BDY            (SNAOLEDB_COMM_ERROR_START-34)
#define SNAOLEDB_COMM_CONFIRMED_BAD_STATE           (SNAOLEDB_COMM_ERROR_START-35)
#define SNAOLEDB_COMM_DEALLOC_FLUSH_BAD_STATE       (SNAOLEDB_COMM_ERROR_START-36)
#define SNAOLEDB_COMM_DEALLOC_CONFIRM_BAD_STATE     (SNAOLEDB_COMM_ERROR_START-37)
#define SNAOLEDB_COMM_DEALLOC_NOT_LL_BDY            (SNAOLEDB_COMM_ERROR_START-38)      /* -550 */
#define SNAOLEDB_COMM_FLUSH_NOT_SEND_STATE          (SNAOLEDB_COMM_ERROR_START-39)
#define SNAOLEDB_COMM_P_TO_R_NOT_LL_BDY             (SNAOLEDB_COMM_ERROR_START-40)
#define SNAOLEDB_COMM_P_TO_R_NOT_SEND_STATE         (SNAOLEDB_COMM_ERROR_START-41)
#define SNAOLEDB_COMM_RCV_AND_WAIT_BAD_STATE        (SNAOLEDB_COMM_ERROR_START-42)
#define SNAOLEDB_COMM_RCV_AND_WAIT_NOT_LL_BDY       (SNAOLEDB_COMM_ERROR_START-43)
#define SNAOLEDB_COMM_RCV_IMMD_BAD_STATE            (SNAOLEDB_COMM_ERROR_START-44)
#define SNAOLEDB_COMM_RCV_AND_POST_BAD_STATE        (SNAOLEDB_COMM_ERROR_START-45)
#define SNAOLEDB_COMM_RCV_AND_POST_NOT_LL_BDY       (SNAOLEDB_COMM_ERROR_START-46)
#define SNAOLEDB_COMM_R_T_S_BAD_STATE               (SNAOLEDB_COMM_ERROR_START-47)
#define SNAOLEDB_COMM_SEND_DATA_NOT_SEND_STATE      (SNAOLEDB_COMM_ERROR_START-48)      /* -560 */
#define SNAOLEDB_COMM_SEND_DATA_NOT_LL_BDY          (SNAOLEDB_COMM_ERROR_START-49)
#define SNAOLEDB_COMM_ATTACH_MANAGER_INACTIVE       (SNAOLEDB_COMM_ERROR_START-50)
#define SNAOLEDB_COMM_ALLOCATE_NOT_PENDING          (SNAOLEDB_COMM_ERROR_START-51)
#define SNAOLEDB_COMM_INVALID_PROCESS               (SNAOLEDB_COMM_ERROR_START-52)

#define SNAOLEDB_COMM_ALLOCATION_ERROR              (SNAOLEDB_COMM_ERROR_START-53)
#define SNAOLEDB_COMM_ALLOCATION_FAILURE_NO_RETRY   (SNAOLEDB_COMM_ERROR_START-54)
#define SNAOLEDB_COMM_ALLOCATION_FAILURE_RETRY      (SNAOLEDB_COMM_ERROR_START-55)
#define SNAOLEDB_COMM_SECURITY_NOT_VALID            (SNAOLEDB_COMM_ERROR_START-56)
#define SNAOLEDB_COMM_TRANS_PGM_NOT_AVAIL_RETRY     (SNAOLEDB_COMM_ERROR_START-57)
#define SNAOLEDB_COMM_TRANS_PGM_NOT_AVAIL_NO_RETRY  (SNAOLEDB_COMM_ERROR_START-58)      /* -570 */
#define SNAOLEDB_COMM_TP_NAME_NOT_RECOGNIZED        (SNAOLEDB_COMM_ERROR_START-59)
#define SNAOLEDB_COMM_PIP_NOT_ALLOWED               (SNAOLEDB_COMM_ERROR_START-60)
#define SNAOLEDB_COMM_PIP_NOT_SPECIFIED_CORRECTLY   (SNAOLEDB_COMM_ERROR_START-61)
#define SNAOLEDB_COMM_CONVERSATION_TYPE_MISMATCH    (SNAOLEDB_COMM_ERROR_START-62)
#define SNAOLEDB_COMM_SYNC_LEVEL_NOT_SUPPORTED      (SNAOLEDB_COMM_ERROR_START-63)

#define SNAOLEDB_COMM_DEALLOC_ABEND                 (SNAOLEDB_COMM_ERROR_START-64)
#define SNAOLEDB_COMM_DEALLOC_ABEND_PROG            (SNAOLEDB_COMM_ERROR_START-65)
#define SNAOLEDB_COMM_DEALLOC_ABEND_SVC             (SNAOLEDB_COMM_ERROR_START-66)
#define SNAOLEDB_COMM_DEALLOC_ABEND_TIMER           (SNAOLEDB_COMM_ERROR_START-67)
#define SNAOLEDB_COMM_DEALLOC_NORMAL                (SNAOLEDB_COMM_ERROR_START-68)      /* -580 */
#define SNAOLEDB_COMM_PROG_ERROR_NO_TRUNC           (SNAOLEDB_COMM_ERROR_START-69)
#define SNAOLEDB_COMM_PROG_ERROR_TRUNC              (SNAOLEDB_COMM_ERROR_START-70)
#define SNAOLEDB_COMM_PROG_ERROR_PURGING            (SNAOLEDB_COMM_ERROR_START-71)
#define SNAOLEDB_COMM_CONV_FAILURE_RETRY            (SNAOLEDB_COMM_ERROR_START-72)
#define SNAOLEDB_COMM_CONV_FAILURE_NO_RETRY         (SNAOLEDB_COMM_ERROR_START-73)
#define SNAOLEDB_COMM_SVC_ERROR_NO_TRUNC            (SNAOLEDB_COMM_ERROR_START-74)
#define SNAOLEDB_COMM_SVC_ERROR_TRUNC               (SNAOLEDB_COMM_ERROR_START-75)
#define SNAOLEDB_COMM_SVC_ERROR_PURGING             (SNAOLEDB_COMM_ERROR_START-76)
#define SNAOLEDB_COMM_UNSUCCESSFUL                  (SNAOLEDB_COMM_ERROR_START-77)
#define SNAOLEDB_COMM_CONVERSATION_TYPE_MIXED       (SNAOLEDB_COMM_ERROR_START-78)      /* -590 */
#define SNAOLEDB_COMM_CANCELLED                     (SNAOLEDB_COMM_ERROR_START-79)
#define SNAOLEDB_COMM_SECURITY_REQ_NOT_SUPPORTED    (SNAOLEDB_COMM_ERROR_START-80)
#define SNAOLEDB_COMM_TP_BUSY                       (SNAOLEDB_COMM_ERROR_START-81)      
#define SNAOLEDB_COMM_COMM_SUBSYSTEM_ABENDED        (SNAOLEDB_COMM_ERROR_START-82)      
#define SNAOLEDB_COMM_COMM_SUBSYSTEM_NOT_LOADED     (SNAOLEDB_COMM_ERROR_START-83)      
#define SNAOLEDB_COMM_CONV_BUSY                     (SNAOLEDB_COMM_ERROR_START-84)     
#define SNAOLEDB_COMM_THREAD_BLOCKING               (SNAOLEDB_COMM_ERROR_START-85)     
#define SNAOLEDB_COMM_INVALID_VERB_SEGMENT          (SNAOLEDB_COMM_ERROR_START-86)      
#define SNAOLEDB_COMM_UNEXPECTED_DOS_ERROR          (SNAOLEDB_COMM_ERROR_START-87)      
#define SNAOLEDB_COMM_STACK_TOO_SMALL               (SNAOLEDB_COMM_ERROR_START-88)      /* -600 */
#define SNAOLEDB_COMM_INVALID_VERB                  (SNAOLEDB_COMM_ERROR_START-89)
#define SNAOLEDB_COMM_HOST_NAMERESOLV_FAILED        (SNAOLEDB_COMM_ERROR_START-90)      /* TCP/IP Errors: */
#define SNAOLEDB_COMM_HOST_CONNECT_FAILED           (SNAOLEDB_COMM_ERROR_START-91)
#define SNAOLEDB_COMM_SOCKET_ALLOC_FAILED           (SNAOLEDB_COMM_ERROR_START-92)

#endif  /* #ifndef __SNAOLEDB_h__ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\sporder.h ===
/*++

Copyright (c) 1996-1999  Microsoft Corporation

Module Name:

    sporder.h

Abstract:

    This header prototypes the 32-Bit Windows functions that are used
    to change the order or WinSock2 transport service providers and
    name space providers.

Revision History:

--*/

#ifndef __SPORDER_H__
#define __SPORDER_H__

#if _MSC_VER > 1000
#pragma once
#endif


#ifdef __cplusplus
extern "C" {
#endif

int
WSPAPI
WSCWriteProviderOrder (
    IN LPDWORD lpwdCatalogEntryId,
    IN DWORD dwNumberOfEntries
    );

typedef
int
(WSPAPI * LPWSCWRITEPROVIDERORDER)(
    IN LPDWORD lpwdCatalogEntryId,
    IN DWORD dwNumberOfEntries
    );


int
WSPAPI
WSCWriteNameSpaceOrder (
    IN LPGUID lpProviderId,
    IN DWORD dwNumberOfEntries
    );

typedef 
int
(WSPAPI * LPWSCWRITENAMESPACEORDER)(
    IN LPGUID lpProviderId,
    IN DWORD dwNumberOfEntries
    );


#ifdef __cplusplus
}
#endif

#endif      // __SPORDER_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\smsapi.h ===
// **************************************************************************
//
//  File: SMSAPI.H
//
//  Copyright (c) 199 - 1999 Microsoft Corp.
//
//  This is the header file for the SMS API.
//
//  This file contains all data definitions, manifests, return codes and
//  API declarations that constitute the API set.
//
//
// **************************************************************************



// **************************************************************************
//
//  The SMS API set provides a set of interfaces to enable querying and,
//  in some cases creation and deletion, of data from an SMS database.
//
//  SMS contains numerous objects to which an ISV needs access. These objects
//  are (not in any particular order): packages, jobs, workstation command
//  lines, program items, sites, domains, machines, machine groups.
//
//  The SMS API is built using a technology known as the objectity technique.
//  This technique expresses all objects in terms of containers, folders,
//  and scalars. All SMS objects are thus expressed in these terms.
//  The advantage of this is that we have a standard interface to all
//  objects. That is, the API does not distinguish between, say, a job and
//  a machine.
//
//  The starting point is the container. There are certain types of container
//  defined (container types below). A container is opened and then
//  populated. The act of populating a container causes it to be filled with
//  folders of defned types. A folder can contain sub-folders and scalars.
//  Scalars are akin to leaf nodes in a hierarchy graph. The contain a
//  name, type, and value.
//
//  Much of the power to the objectity technique is provided by filters.
//  These are objects which specify selection criteria. Filters are applied
//  by the user at the container level, at which point the implementation of
//  the API will assume ownership of the filter. It is guaranteed that only
//  folders matching the filters will be included in the container hierarchy.
//
//  Every folder can contain a set of scalars. Not all folders do, for
//  example a machine folder does not. In some cases a folder contains a
//  defined set of scalars, in other cases the scalar set can only be
//  determined at run time. In cases where the scalar set is predetermined
//  it will be documented in supporting documentation.
//
//  The APIs behave in a uniform manner.
//  1. They all return a status code (SMS_STATUS).
//  2. Where a value needs to be returned, it is done via a reference
//     parameter.
//
//  An API is provided to determine the API version. Any problems involving
//  the SMS API should include the information provided by this API.
//
//  The first step in using the APIs to to establish a connection to a
//  datasource. Currently the only datasource supported in SQL, but the
//  API is designed in such a way that additional datasources can be
//  added. Two APIs are provided for dealing with datasources:
//  DataSourceConnect and DataSourceDisonnect. The connect API returns a
//  connection handle, this is used in subsequent calls to open containers.
//
//  Apart from these APIs, the rest of the API set is divided into four
//  groups:
//  1. Container APIs.
//  2. Folder APIs.
//  3. Scalar APIs.
//  4. Filter APIs.
//
//  1. Container APIs.
//  These allow a container to be opened, a filter to be applied to a
//  container, a container to be populated with folders, a folder to be
//  retrieved, and the container to be closed. An API also exists to
//  return the number of folders currently contained in a container.
//
//  2. Folder APIs.
//  These allow a for retrieval of various types of information about a
//  folder (its ID or name, its type, the number of sub-folders, the number
//  of scalars). Retrieval of sub-folders within a folder in both a
//  sequential fashion and by name. Retrieval of scalars (sequential and by
//  name. And closure of the folder.
//  An API exists to allow folder creation. However, this is implementation
//  dependant. That is, most folders do not permit creation, some (eg
//  ceratin types of jobs) do.
//
//  3. Scalar APIs.
//  There is a bit of overlap between this and the previous group. Although
//  scalar retrieval is included in the Folder API group, it can also be
//  considered a scalar API.
//  An API is provided to set/update the value of a scalar. This can
//  currently only be done in a folder that is being newly created.
//
//  4. Filter APIs.
//  APIs for opening and closing a filter, and adding tokens into a filter.
//  Filters are composed of one or more tokens of the same type. Some filters
//  permit grouping of tokens within the filter (ie machine filter). This
//  allows for complex boolean expressions.
//  Tokens differ between different filters, but have a common interface.
//  Tokens are contructed via the SmsAddToken API.
//
//  5. Filter container APIs
//  Certain filters can be persistent, that is they are saved in the database
//  and can be reloaded by separate processes. These filters can be created
//  either the APIs, or via the SMS Admin.
//   These APIs enable the retrieval of these filters from the datasource
//  and the commital of new filters into the datasource.
//  Currently machine filters are the only filters capable of exhibiting
//  persistence.
//
// **************************************************************************


#ifndef _SMSAPI_H_
#define _SMSAPI_H_



// ====================================================================
//
//  Includes
//
// ====================================================================

#include <qrycodes.h>           // The query codes for Machine queries.

#include <smsinfo.h>            // Manifests related to scalar settings.

#include <objectty.h>           // Objectity engine.


#ifdef __cplusplus
extern "C" {
#endif



// ====================================================================
//
//  Datasource definition information.
//
// ====================================================================

//
// Supported datasources.
// (NOTE: only sql supported currently).
//
typedef enum { DB_SQL, DB_SQL_CONNECTED, DB_OTHER } DATASOURCE_TYPE;


//
// Prototype for a decryption function. This is the last parameter
// to the SQL_CONNECT_PARAMS structure.
// When a user calls the DataSourceConnect API he can pass in the
// user name and password in encrypted form. If the decryption function
// pointer is non-null the the API will attempt to call this function
// both for the user name and password.
// The decryption function is user-supplied, it is expected to return
// the decrypted data in the first parameter.
//

typedef void (*PDECRYPTFUNC)(char *pszBuffer, char *pszDecryptMe, char *pszKey);


//
//  The information block needed for the DataSourceConnect API.
//  1. SQL datasource.
//

typedef struct _SQL_CONNECT_PARAMS {
    DATASOURCE_TYPE ds;
    char *pszServer;                    // SQL Server name.
    char *pszUserName;                  // User name (possibly encrypted).
    char *pszPasswd;                    // Password (possibly encrypted).
    char *pszDbName;                    // Database name.
    char *pszKey;                       // Decryption key.
    PDECRYPTFUNC pFunc;                 // Pointer to a decryption function.
} SQL_CONNECT_PARAMS;


//
//  2. RESERVED DO NOT USE
//

typedef struct _SQL_CONNECT_CONNECTED_PARAMS {
    DATASOURCE_TYPE ds;
    HANDLE hDataSource;
    const char *pszAccessType;
} SQL_CONNECT_CONNECTED_PARAMS;



//
// This only has the type field. It is used for extracting the type
// in such a fashion that user code doesn't have to imply any
// particular data source. It has no use other than that.
//

typedef struct _GENERIC {
    DATASOURCE_TYPE ds;
} GENERIC;



// We can now define the DATASOURCE. It is a union of the structs above.
typedef union {
    GENERIC             type;
    SQL_CONNECT_PARAMS  sqlParams;
    SQL_CONNECT_CONNECTED_PARAMS sqlConnectedParams;
} DATASOURCE;





// ====================================================================
//
//  Return codes. See also objectty.h.
//
// ====================================================================
typedef DWORD SMS_STATUS;           // All APIs return an SMS_STATUS.

#define SMS_OK                          OTT_OK
#define SMS_MORE_DATA                   OTT_MORE_DATA
#define SMS_NO_MORE_DATA                OTT_NO_MORE_DATA
#define SMS_FOLDER_NO_UPDATE            OTT_FOLDER_NO_UPDATE

// Error codes when registering (and accessing) containers and filters
#define SMS_DUPLICATE_CONTAINER_ID      OTT_DUPLICATE_CONTAINER_ID
#define SMS_DUPLICATE_FOLDER_ID         OTT_DUPLICATE_FOLDER_ID
#define SMS_DUPLICATE_FILTER_ID         OTT_DUPLICATE_FILTER_ID

#define SMS_DUPLICATE_FILTER            OTT_DUPLICATE_FILTER

#define SMS_SCALAR_NO_UPDATE            OTT_SCALAR_NO_UPDATE
#define SMS_SCALAR_WRONG_TYPE           OTT_SCALAR_WRONG_TYPE
#define SMS_INVALID_CONTAINER_ID        OTT_INVALID_CONTAINER_ID
#define SMS_INVALID_FOLDER_ID           OTT_INVALID_FOLDER_ID
#define SMS_INVALID_FILTER_ID           OTT_INVALID_FILTER_ID

#define SMS_CONTAINER_NO_UPDATE         OTT_CONTAINER_NO_UPDATE

#define SMS_PARAMETER_ERROR             OTT_PARAMETER_ERROR
#define SMS_UNSUPPORTED                 OTT_UNSUPPORTED

// This is returned when a specific object
// (folder or scalar) is requested and not
// found. APIs returning this are GetFolderByID
// and GetScalarByName.
#define SMS_NOT_FOUND                   OTT_NOT_FOUND

#define SMS_PARENT_NOT_FOUND            OTT_PARENT_NOT_FOUND

#define SMS_CANT_DELETE                 OTT_CANT_DELETE

#define SMS_NEW_FOLDER                  OTT_NEW_FOLDER

// Error when attempting to multiply
// link a folder.
#define SMS_FOLDER_LINKED               OTT_FOLDER_LINKED

// Filter operations.
#define SMS_RANGE_ERROR                 OTT_RANGE_ERROR

// These are returned when a container
// operation is tried when it shouldn't be.
#define SMS_CONTAINER_NOT_POPULATED     OTT_CONTAINER_NOT_POPULATED
#define SMS_CONTAINER_POPULATED         OTT_CONTAINER_POPULATED


// Attempt to perform persistent operation
// on a non-persistent filter.
#define SMS_FILTER_NOT_PERSISTENT       OTT_FILTER_NOT_PERSISTENT

// Error return if the connection handle
// of a filter doesn't match that of a
// container to which the filter is being
// applied.
#define SMS_INVALID_CONNECTION_HANDLE   OTT_INVALID_CONNECTION_HANDLE
#define SMS_INVALID_FILTER_TYPE         OTT_INVALID_FILTER_TYPE

// Folder's can't be unlinked if there are multiple handles
// to the same object.
#define SMS_IN_USE_BY_OTHER             OTT_IN_USE_BY_OTHER

// User (ie non-engine) codes begin here.
#define SMS_ERROR                       (OTT_END + 1)
#define SMS_SQL_ERROR                   (OTT_END + 2)
#define SMS_INVALID_DATASOURCE          (OTT_END + 3)
#define SMS_INVALID_HANDLE              (OTT_END + 4)
#define SMS_INVALID_FOLDER_TYPE         (OTT_END + 6)

#define SMS_CONNECT_FAILED              (OTT_END + 7)
#define SMS_NO_CREATE                   (OTT_END + 8)
#define SMS_FOLDER_NOT_MODIFIED         (OTT_END + 9)
#define SMS_INCORRECT_FOLDER_TYPE       (OTT_END + 10)  // Unused.
#define SMS_INVALID_PARAMETER           (OTT_END + 11)
#define SMS_EMPTY                       (OTT_END + 12)

// Return when commiting a child folder
// and the parent folder must be committed.
#define SMS_PARENT_NEEDS_COMMIT         (OTT_END + 13)
#define SMS_PARENT_ALREADY_COMMITTED    (OTT_END+ 14)

// Used in asynchronous folder retrieval.
// Indicates that there might be more
// data but it isn't available yet.
#define SMS_NOT_READY                   (OTT_END + 15)

#define SMS_FILTER_NO_MODIFY            (OTT_END + 16)
#define SMS_FOLDER_ALREADY_DELETED      (OTT_END + 17)

// Only allow one active connection.
// This is an SMS restriction.
#define SMS_ALREADY_CONNECTED           (OTT_END + 18)

// Some failure in committing a folder
#define SMS_COMMIT_FAILED               (OTT_END + 19)


// Specific failure in linking a folder
#define SMS_DUPLICATE_FOLDER            (OTT_END + 20)


// ====================================================================
//
//  Various manifests.
//
// ====================================================================

// The location of the SMS registry root.
#define SMS_REG_ROOT "SOFTWARE\\Microsoft\\SMS\\"

// The max size of character (string) data that we return.
#define SMS_DATA_BUFF_SIZE  255


// 'SMSBUFF' and 'OBJDESCRIPTOR' used in object type enumeration APIs.
// ===================================================================

// A character buffer.
// -------------------
typedef char SMSBUFF[SMS_DATA_BUFF_SIZE+1];

// Describes an object returned from SmsEnumObjects.
// -------------------------------------------------
typedef struct _OBJDESCRIPTOR {
    DWORD objType;                  // Type of this object.
    SMSBUFF szName;                 // Object name (eg 'Personal Computer')
    SMSBUFF szFriendlyName;         // Friendly name. Only used in groups
                                    // where szName would be, eg,
                                    // 'MICROSOFT|IDENTIFICATION|1.0', the
                                    // friendly name would be 'Identification'.
    BOOL bGotFriendlyName;          // TRUE if we have a friendly name.

    DWORD dwRelopMin;               // For attributes, indicates range of
    DWORD dwRelopMax;               // relational operators that can be used
                                    // for this attribute.
    BOOL bGotRelops;                // TRUE if we have the relops fields set.

} OBJDESCRIPTOR;


// Object types.
// =============
// This is the value that is inserted by the object
// enumeration APIs into the OBJDESCRIPTOR structure.
// --------------------------------------------------
#define OT_ARCHLIST         1
#define OT_ARCH             2
#define OT_GROUP            3
#define OT_ATTRIBUTE        4

#define OT_PLATFORMS        5
#define OT_PLATFORM_PDF     6
#define OT_PLATFORM_WINST   7
#define OT_PLATFORM_NAD     8

#define OT_UNKNOWN          100




// --------------------------------------------------------------------
// Flags for Populate options.
// --------------------------------------------------------------------
#define POP_SYNC            0x00000000
#define POP_ASYNC           0x00000001
#define POP_EVENT           0x00000010
#define POP_WINDOW          0x00000020


// --------------------------------------------------------------------
// Folder types supported by smsapi (MUST NOT BEGIN AT ZERO).
// --------------------------------------------------------------------
#define F_SITE              1               // Site folder.
#define F_MACHINE           2               // Machine folder.
#define F_GROUP             3               // Subfolder of machine
#define F_DOMAIN            4               // Domain folder, subfolder
                                            // of a site.
// Jobs
#define F_SYSTEMJOB         5               // System (NAD/Site) job folder.
//#define F_MINIJOB           6               // Mini-job folder.
#define F_INSTALLJOB        7               // Job folder (wksta install).
#define F_SRVINSTALLJOB     8               // Job folder (server install).
#define F_REMPKGJOB         9               // Remove package Job folder.

#define F_PACKAGE           10              // Packages.
#define F_WCL               11              // Workstation command lines.
#define F_PROGITEM          12              // Program items.
#define F_INVENTORY         13              // Inventory rules.

#define F_MACHINEGROUP      14              // Machine group
#define F_SITEGROUP         15              // Site group folder

// --------------------------------------------------------------------
// Container types supported by smsapi (MUST NOT BEGIN AT ZERO).
// --------------------------------------------------------------------
#define C_SITE              1               // Site container.
#define C_JOB               2               // Job container.
#define C_MACHINE           3               // Machine container.
#define C_PACKAGE           4               // Package container.
#define C_MACHINEGROUP      5               // Machine group
#define C_SITEGROUP         6               // Site group


// ====================================================================
//
//      Filter information.
//
// ====================================================================


// --------------------------------------------------------------------
//  Filter types
// --------------------------------------------------------------------
#define SITE_FILTER         1
#define MACHINE_FILTER      2
#define GROUP_FILTER        3
#define JOB_FILTER          4
#define ARCHITECTURE_FILTER 5
#define PACKAGE_FILTER      6
#define ATTRIBUTE_FILTER    7
#define SITELIMIT_FILTER    8


// --------------------------------------------------------------------
// Token types.
// --------------------------------------------------------------------
#define TOKEN_USER          0x8    // 1000 bit 3 always set for user-token
#define TOKEN_OR            0x2    // 0010 bit 1 always set for AND/OR
#define TOKEN_AND           0x3    // 0011 bit 1 always set for AND/OR
#define TOKEN_OPENPAREN     0x4    // 0100 bit 2 always set for PAREN
#define TOKEN_CLOSEPAREN    0x5    // 0101 bit 2 always set for PAREN
#define TOKEN_NOTIN         0x20   //10100 bit 2 set for a PAREN plus bit 4 for an extra indicator.
#define TOKEN_OPERATOR      0x2    // Detects both AND or OR
#define TOKEN_PAREN         0x4    // Detects either open or close paren


// --------------------------------------------------------------------
// Manifests used in filter token APIs.
// --------------------------------------------------------------------
#define AT_START        OTT_AT_START    // Token will be inserted at start of
                                        // expression.
#define AT_END          OTT_AT_END      // Token will be appended to end of
                                        // expression.

//
// Flags field in SmsManipulateTokens.
//
#define TOK_GROUP           1
#define TOK_UNGROUP         2
#define TOK_DELETE          3
#define TOK_GROUP_NOT       4


/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
///////////     The APIs     ////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////


// **************************************************************************
//
//  This DLL provides a "C" interface for accessing SMS objects.
//
//===========================================================================
//
//  SmsAPIVer
//
//  This API returns a version string to identify the SMS API version.
//
//  Parameters:
//      char **ppVersion                The version string is returned
//                                      in this pointer.
//                                      The user must not free this memory,
//                                      it is a static buffer inside the API
//                                      dll.
//
//  Returns:
//      SMS_STATUS                      Always SMS_OK.
//
//===========================================================================
//
//===========================================================================
//  1.  Connection APIs.
//===========================================================================
//
//  SmsDataSourceConnect
//
//  This API connects to the datasource as specified in the DATASOURCE
//  parameter. The API returns a connection handle in the second
//  parameter.
//  This handle is passed to OpenContainer.
//
//  Parameters:
//      DATASOURCE *pd                  Pointer to DATASOURCE structure.
//                                      The user must have already set up
//                                      the appropriate parameters in this
//                                      structure. For SQL this contains
//                                      the server name, user name, password,
//                                      database, public encryption key, and
//                                      a pointer to a decryption function.
//                                      See the description above.
//      HANDLE *phConn                  Handle to a connection. This is
//                                      filled in by the API.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsDataSourceDisconnect
//
//  This API releases a datasource connection that was established by
//  DataSourceConnect.
//
//  Parameters:
//      HANDLE hConn                    Handle to the connection to be closed.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  2.  Engine APIs.
//
//  These are straight "pass-through" APIs that just call the engine APIs
//  (in objectty.dll) directly. Here for name conformance and so to ensure
//  that smsapi.dll will get loaded before the engine.
//
//===========================================================================

//
//  SmsEnumContainers
//
//  This returns an array of pointers to FOLDER_INFO structures.
//  If the pData parameter is NULL the API sets pCount to the number of
//  containers registered. Thus, a user can call this API with a NULL
//  buffer to get the count, which enables the application to allocate
//  sufficient memory. If pData is non-NULL the API will copy up to
//  pCount FOLDER_INFO pointers into the data buffer. If that number
//  is less than the number of containers the count will be set as
//  previously described.
//  The data buffer is an array of pointers to FOLDER_INFO structures.
//  These point to memory in the engine's address space, it should
//  not be deallocated or modified.
//LATER: make this pointer to const.
//
//
//  Parameters:
//      FOLDER_INFO **pData         Pointer to array of FOLDER_INFO structures.
//      DWORD *pCount               Pointer to count of containers.
//
//  Returns:
//      SMS_STATUS                  OTT_OK: success.
//                                  OTT_MORE_DATA: passed buffer not
//                                      big enough. *pCount says how
//                                      many containers registered.
//
// ====================================================================
//
//  SmsEnumFilters
//
//  This API returns a list of all filters currently registered
//  in the filter registry. This list is actually an array of
//  FILTER_INFO structs.
//
//  The memory for this array must be allocated by the caller.
//  To determine the size of the array call this API with NULL as
//  the first parameter. This will result in the number of filters
//  being returned in pCount.
//
//
//  Parameters:
//      FILTER_INFO *paFI           Pointer to an array of FILTER_INFO
//                                  structures.
//                                  The user is responsible for allocating
//                                  (and deallocating) this memory.
//      DWORD *pCount               Pointer to count of filters.
//
//  Returns:
//      SMS_STATUS                  OTT_OK: success.
//                                  OTT_MORE_DATA: passed buffer not
//                                      big enough. *pCount says how
//                                      many containers registered.
//
// ==========================================================================
//
//  SmsEnumFolders
//
//  This API returns a list of all folders currently registered
//  in the folder registry. This list is actually an array of
//  FOLDER_INFO structs.
//
//  The memory for this array must be allocated by the caller.
//  To determine the size of the array call this API with NULL as
//  the first parameter. This will result in the number of filters
//  being returned in pCount.
//
//
//  Parameters:
//      FOLDER_INFO **pData         Pointer to an array of FOLDER_INFO structures.
//      DWORD *pCount               Pointer to count of folders.
//
//  Returns:
//      SMS_STATUS                  OTT_OK: success.
//                                  OTT_MORE_DATA: passed buffer not
//                                      big enough. *pCount says how
//                                      many containers registered.
//
// ==========================================================================
//
//  SmsDescribeFolder
//
//  This API retrieves information about a container/folder and returns
//  it in the FOLDER_INFO parameter (see description of FOLDER_INFO).
//  Because containers and folders share the same id space for their
//  tags, it is necessary for the caller to specify which one they are
//  interested in.
//  Note that the Enum... APIs return a set of objects, this API returns
//  only a single one.
//
//
//
//  Parameters:
//      BASETYPE tObjectity         T_CONTAINER or T_FOLDER
//                                  (do we want a container or folder).
//      DWORD dwTag                 Container/folder type.
//      FOLDER_INFO **ppFInfo       Store the retrieved FOLDER_INFO here.
//
//  Returns:
//      SMS_STATUS                  OTT_OK: success.
//                                  OTT_INVALID_CONTAINER_ID:
//                                  OTT_INVALID_FOLDER_ID:
//                                      The container/folder cannot be
//                                      located in the registry.
//
//===========================================================================
//  3.  Container APIs.
//===========================================================================
//
//  SmsOpenContainer
//
//  Opens a container of the specified type (cType). The container is opened
//  but is currently empty. The only operations that can be performed on it
//  in this state is SetFilter, Populate, and CloseContainer.
//  It is permissible to have multiple containers of the same type opened
//  simultaneously.
//  Only when a container has been populated does it have information that
//  can resonably be examined.
//  The container type is one of the C_xxx manifests in the list above.
//
//  Parameters:
//      DWORD cType                     Type of the container to open.
//                                      This should be one of thr C_xxx
//                                      manifests above.
//      HANDLE hConnect                 Handle to a connection that has been
//                                      established via SmsDataSourceConnect.
//      HANDLE *phContainer             Handle to the container, filled in by
//                                      the API.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsSetFilter
//
//  This API submitts a filter to the container. The filter consists
//  of tokens (possibly grouped) which express conditions for folder
//  inclusion within a container.
//  Note: when applying multiple filters an implicit AND is performed between
//  filters.
//
//  Parameters:
//      HANDLE hContainer               Identifies the container.
//      HANDLE hFilter                  Handle to the filter to assign to
//                                      the container.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsPopulate
//
//  This causes the container to be populated with folders according to the
//  filters applied to the container.
//  It should be noted that not all filters that are applied to a container
//  will be activated at this stage. For instance, applying an attribute
//  filter to a site container has no effect at this stage. However, the
//  filter is held internally within the system and will be applied to the
//  appropriate folder. For an attribute filter, its activation in a site
//  container would come at the level of a child domain folder. This
//  technique is known as percolating filters.
//  Containers are the only level at which filters can be applied at the
//  API level.
//  The dwOpts parameter allows the caller to specify whether the population
//  (and the folder retrieval) should be asynchronous or synchronous.
//  Synchronous is the default. These options are described earlier (see
//  "Populate options").
//  This parameter also specifies how the event handle should be set. The
//  event handle can be set by the API whenever a folder has been retrieved,
//  when all folders have been retrieved, or it can not be used at all (the
//  default).
//
//  A third parameter is an event handle. According
//
//  Parameters:
//      HANDLE hContainer               Identifies the container.
//      DWORD dwOptions                 Synchronous/asynch, event handle usage.
//      NOTIFY *pNotify                 Contains information about asynchronous
//                                      notification. NULL if synchronous.
//                                      parameter.
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsGetNextFolder
//
//  This API retrieves the next folder in a parent container or folder.
//
//  Parameters:
//      HANDLE hParent                  Identifies the parent (container or
//                                      folder).
//      DWORD fType                     Which type of sub-folder we want to
//                                      retrieve.
//      HANDLE *phFolder                Receives a handle to the next
//                                      folder in the parent.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsCloseContainer
//
//  Closes a currently open container, and frees resources held be the
//  container.
//  It is possible to open a container's child folders and then close the
//  container. This has no adverse effects on either the folders or on any
//  filters that have been applied to the container.
//
//  Parameters:
//      HANDLE hContainer               Identifies the container.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//  4.  Folder APIs.
//===========================================================================
//
//  SmsCreateFolder
//
//  This API attempts to create a folder (initally empty) of the specified
//  type. Folder creation is done in the context of a parent (folder or
//  container). Not all containers/folder support folder creation.
//  Once created, a folder must have its scalars set by the application.
//  Failure to do so will result in the system not accepting the newly
//  created folder. See DescribeFolder for information on retrieving details
//  about a folder's scalars.
//
//  Parameters:
//      HANDLE hParent                  Identifies the parent (can be either
//                                      container or folder).
//      DWORD fType                     The type of folder to create. See
//                                      the list of folders above).
//      char *pszFolderID               A name to give the folder. Not all
//                                      creatable folders can be named by the
//                                      user. In many cases SMS itself will
//                                      assign the name.
//      HANDLE *phFolder                Receives a handle to the newly-created
//                                      folder (if successful).
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsGetFolderID
//
//  This API retrives the ID/name of the folder referenced by the folder handle.
//
//  Parameters:
//      HANDLE hFolder                  Which folder object we're talking about.
//      char *pszFolderID               Pointer to buffer to receive the
//                                      folder's ID. It is the caller's
//                                      responsibility to ensure that this
//                                      buffer is large enough. If in doubt
//                                      use of buffer of size SMS_DATA_BUFF_SIZE.
//                                      This is guaranteed to be sufficient.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsGetFolderType
//
//  This API retrieves the folder's type as both an integer value and as
//  a character string. For instance invoking this API on a domain folder
//  will result in a type string of "Domain folder" and an integer type of
//  F_DOMAIN being returned. The caller is responsible for ensuring that
//  the character buffer is of sufficient size.
//
//  Parameters:
//      HANDLE hFolder                  The folder to query.
//      DWORD *pfType                   Receive's the folder's type (integer).
//      char *pszfType                  Receives folder's type (as a string).
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsEnumFolderTypes
//
//  This API returns an array of DWORDs which indicate what folder types
//  CAN be contained within this folder. It is the caller's responsibility
//  to ensure that the DWORD array (*pfTypes) is of sufficient size.
//  Calling this API with pfTypes of NULL or with *pctFolderTypes of 0,
//  will result in the correct count being returned to the caller in
//  pctFolderTypes.
//  If the *pctFolderTypes is less than the number of folders, then up to
//  *pctFolderTypes are returned in the DWORD array, and a status of
//  SMS_MORE_DATA is returned.
//  If *pctFolderTypes is greater than the number of folders then the maximum
//  number of folder types will be stored in the array, and a value of
//  PARAMETER_ERROR returned. *pctFolderTypes will be updated to indicate
//  the number of folder types.
//
//  Note the difference between this API and GetFolderCount. This returns
//  a list of sub-folder types that can be contained in the folder,
//  GetFolderCount returns a count of how many sub-folders of a specified
//  type actually are contained in the folder.
//
//  Parameters:
//      HANDLE hFolder                  The folder to query.
//      DWORD *pfTypes                  Points to an array of DWORD.
//                                      Filled in with the types of sub-
//                                      folders that this folder can contain.
//      DWORD *pctFolderTypes           How many types of sub-folders this
//                                      folder can contain.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsGetFolderCount
//
//  This API returns (in the DWORD parameter) how many sub-folders of the
//  specified folder-type are contained in this folder.
//  Note that a DWORD of F_ANY means return the total count of sub-folders.
//
//  Parameters:
//      HANDLE hFolder                  The folder (or container) to query.
//      DWORD fType                     Which type of sub-folder we're
//                                      interested in. F_ANY means all types.
//      DWORD *pctFolders               Receives the count.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsGetFolderByID
//
//  This API the retrieves from the folder a sub-folder of the specified
//  type and with a specified ID.
//  This method of folder retrieval is non-sequential. Once a sub-folder has
//  been retrieved it can be re-retrieved. It is always legal to open a
//  folder multiple times. Doing this will create multiple instances of a
//  folder. Thus, it is possible to retrieve a folder twice, close once
//  instance, and still have an instance of the folder available.
//  Note that a folder type of F_ANY is not accepted here, it will result
//  in a return code of SMS_INVALID_FOLDER_TYPE.
//  Note that a type of F_ANY is not allowed.
//
//
//  Parameters:
//      HANDLE hFolder                  The folder to query.
//      DWORD fType                     Which type of sub-folder we want to
//                                      retrieve (see GetFolderCount).
//      char *pszFolderID               The sub-folder's ID (name).
//      HANDLE *phSubFolder             Receives a handle to the sub-folder.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsRewind
//
//  This API resets the internal counts of either a container, a folder, or
//  a filter so that contained sub-folders and/or scalars can be re-
//  enumerated.
//  Because GetNextFolder and GetNextScalar are sequential, once thay have
//  been retrieved once they cannot be re-retrieved with these APIs.
//  The Rewind API enbles the retrieval to be restarted.
//  The options parameter allows the user to specify that either the folder
//  list or the scalar list or both be rewound.
//
//
//  Parameters:
//      HANDLE hObject                  The container, folder, or filter
//                                      to be rewound.
//      DWORD  dwOptions                Rewind options:-
//                                      RW_FOLDER: rewind folder lists.
//                                      RW_SCALAR: rewind scalar lists.
//                                      RW_ALL:    both.
//
//                                      If the object is a container or
//                                      folder, a particular type of sub-
//                                      folder list may be rewound by passing
//                                      the child folder type in the
//                                      dwOptions parameter.
//
//                                      If the object is a filter container,
//                                      then a particular type of filter list
//                                      may be rewound by passing the filter
//                                      type in the dwOptions parameter.
//
//                                      If the object is a filter then only
//                                      RW_SCALAR is valid.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//

//===========================================================================
//
//  SmsCloseFolder
//
//  This API closes the specified folder.
//  Closing a folder causes sub-folders to be closed and deallocated UNLESS
//  they have already been retrieved by a GetSubFolder/GetFolderByID call
//  in which case they remain open.
//  A folder's scalars are always closed and their memory deallocated.
//
//  Parameters:
//      HANDLE hFolder                  The folder to close.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsLinkFolder
//
//  This API inserts the specified folder into the in-memory list of folders
//  and causes it to be linked to its parent (must still be open).
//  The folder is not written back to the datasource until CommitFolder is
//  called.
//
//  Parameters:
//      HANDLE hFolder                  The folder to insert.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsUnlinkFolder
//
//  This API deletes the specified folder from the in-memory list of folders.
//  All memory associated with the folder is deallocated. However, the
//  folder is not deleted from the datasource until CommitFolder is called.
//
//  Parameters:
//      HANDLE hFolder                  The folder to delete.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsCommitFolder
//
//  This API causes any changes in the specified folder to be written back to
//  the datasource.
//  This should be called after LinkFolder and UnlinkFolder in order to make
//  the changes permanent.
//  Note that a Commit following an Unlink will render the specified folder
//  unavailable to all operations (other that SmsCloseFolder).
//
//  Parameters:
//      HANDLE hFolder                  The folder to update (insert or delete).
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsDupFolder
//
//  This API causes the folder (hFolder) to be copied (into hNewFolder)
//  in the context of the specified parent (hParent - container or folder).
//
//  Parameters:
//      HANDLE hParent                  The parent folder in whose context
//                                      the new folder will be inserted.
//      HANDLE hFolder                  The folder to be duplicated
//      HANDLE *phNewFolder             The handle to the new folder
//                                      is returned here.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//  5.  Scalar APIs.
//===========================================================================
//
//  SmsGetScalarCount
//
//  This API returns the count of scalars in this folder.
//
//  Parameters:
//      HANDLE hFolder                  The folder to query.
//      DWORD *pctScalars               Receives the count of scalars.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsGetNextScalar
//
//  This API retrieves the next scalar from the folder.
//  Scalars can either be retrieved in a sequential fashion (this API)
//  or by name (GetScalarByName). The RewindFolder API enables the sequential
//  enumeration of scalars to be restarted.
//
//  Parameters:
//      HANDLE hFolder                  The folder to query.
//      SCALAR *pScalar                 Pointer to a SCALAR that has been
//                                      allocated by the caller.
//                                      See notes on SCALAR for a full
//                                      description of this structure and
//                                      its use.
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsGetScalarByName
//
//  This API retrieves the scalar specified by its name.
//
//  Parameters:
//      HANDLE hFolder                  The folder to query.
//      const char *pszName             Name of the scalar.
//      SCALAR *pScalar                 Pointer to a SCALAR that has been
//                                      allocated by the caller.
//                                      See notes on SCALAR for a full
//                                      description of this structure and
//                                      its use.
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsSetScalar
//
//  This API is used to set the value of a scalar. It is used when creating a
//  folder. In the future it will also be used to modify the value of a
//  scalar in an existing folder.
//  The set of scalars supported by a folder is always known at the time a
//  folder is opened, this is true even when a folder is being created.
//  Scalars have a name, a type, and a value. This API allows the value to
//  be set. Only values of the correct type are allowed. Attempting to set,
//  for instance, an integer value in a string scalar will result in a
//  SMS_SCALAR_WRONG_TYPE error return.
//  The API set supports the notion of access rights on folders and scalars,
//  in order for this API to succeed the caller must have the correct
//  access to both. Failure results in an error return of SMS_SCALAR_NO_UPDATE
//  or SMS_FOLDER_NO_UPDATE.
//
//  Parameters:
//      HANDLE hFolder                  The folder containing the scalar.
//      SCALAR *pScalar                 Pointer to a SCALAR that has been
//                                      allocated and filled in by the caller.
//                                      See notes on SCALAR for a full
//                                      description of this structure and
//                                      its use.
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//  6.  Filter container APIs.
//===========================================================================
//
//  SmsOpenFilterContainer
//
//  The filter container is a storage mechanism for persistent filters,
//  currently only Machine Filters (SMS Queries) fall into this category.
//
//  Calling this API causes the filter container to be automatically populated
//  with all persistent filters in the system.
//
//  Parameters:
//      HANDLE hConnection              Which connection to use.
//      HANDLE *phFContainer            Receives the handle to the opened
//                                      filter container.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or an error code.
//                                      LIST POSSIBLE ERROR CODES HERE.
//
//===========================================================================
//
//  SmsCloseFilterContainer
//
//  Closes the filter container. All filters container herein that have
//  not been explicitly opened are closed and the memory associated with
//  them is freed.
//
//  Parameters:
//      HANDLE hFContainer              The handle to the filter container.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or an error code.
//                                      LIST POSSIBLE ERROR CODES HERE.
//
//===========================================================================
//
//  SmsGetNextFilter
//
//  This returns (in *phFilter) a handle to the next sequential filter of
//  the specified type from the filter container (specified by hFContainer).
//  A filter type of F_ANY is not acceptable.
//
//  Parameters:
//      HANDLE hFContainer              Handle to the filter container.
//      DWORD frType                    Filter type.
//      HANDLE *phFilter                Handle to the filter returned here.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or an error code.
//                                      LIST POSSIBLE ERROR CODES HERE.
//
//===========================================================================
//
//  SmsGetFilterByID
//
//  The API will return (in *phFilter) a handle to the filter of the specified
//  type which has the specified ID.
//  As above, the handle to the filter container is also passed into the API.
//  A filter type of F_ANY is not acceptable.
//
//  Parameters:
//      HANDLE hFContainer              Handle to the filter container.
//      DWORD frType                    Filter type.
//      const char *pszID               ID of the filter to retrieve.
//      HANDLE *phFilter                Handle to the filter returned here.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or an error code.
//                                      LIST POSSIBLE ERROR CODES HERE.
//
//===========================================================================
//
//  SmsGetFilterID
//
//  This returns, in pszID, the ID of the filter specified by the handle.
//
//  Parameters:
//      HANDLE hFilter
//      char *pszID
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or an error code.
//                                      LIST POSSIBLE ERROR CODES HERE.
//
//===========================================================================
//
//  SmsCommitFilter
//
//  This API will attempt to make the specified filter persistent. The filter
//  must be of a type that supports persistence, and all manadatory scalars
//  for the filter must have been set.
//
//  Parameters:
//      HANDLE hFilter
//      HANDLE hFContainer
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or an error code.
//                                      LIST POSSIBLE ERROR CODES HERE.
//
//===========================================================================
//
//===========================================================================
//  7.  Filter APIs.
//===========================================================================
//
//  SmsCreateFilter
//
//  This API creates a filter of the specified type, initially empty. The
//  caller must then set tokens in this filter.
//  Filter types are listed above.
//
//  Parameters:
//      DWORD fType                     Type of filter to create.
//      HANDLE hConnection              Filters are associated with a
//                                      connection.
//      HANDLE *phFilter                Receives a handle to the filter.
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//============================================================================
//
//  SmsCloseFilter
//
//  Close the specified filter and deallocate any memory asociated with it.
//  Once a filter has been applied to a container (SetFilter), the user is
//  free to close it. The API system has made it own copy which will be freed
//  when no longer necessary.
//
//  Parameters:
//      HANDLE hFilter                  The filter to close.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//============================================================================
//
//  SmsGetFilterType
//
//  This API gets the type for a particular filter. Using this type it is
//  possible to get the filter template.
//  Parameters:
//      HANDLE hFilter                  The filter to retrieve the type for.
//      DWORD *pfilterType              The filter type is returned here.
//      char *pszTag                    The filter tag is returned here.
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsGetToken
//
//  This API retrieves a token from the specified filter or folder. The token
//  to retrieve is given by the index parameter. See also SmsGetTokenCount.
//  The TOKEN structure is detailed in the file objectty.h.
//
//  Parameters:
//      HANDLE hObject                  Handle to filter or folder.
//      INT iIndex
//      TOKEN *pTokenInfo
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsAddToken
//
//  This API allows the caller to add a token into a filter (or folder). The
//  ANDOR parameter specifies if the token is to be ANDed or ORed with the
//  preceeding token. The index specifies whereabout in the filter expression
//  the token is to be inserted. The rules are as follows:
//  1. index is AT_START (-1), the token will be inserted at the start of the
//     expression and the ANDOR operator will be postfixed.
//  2. index is AT_END (-2), the token will be appended to the end of the
//     expression, the ANDOR operator will prefix the token.
//  3. if index is anything else, if the expression is currently empty then
//     the token will be inserted at the start of the expression, and the
//     ANDOR operator is ignored. If the expression is not empty then the
//     token will be inserted at the given index and the operator prefixed.
//     The exception here is if the index is out of range, in this case the
//     token will be appended with the ANDOR being prefixed.
//     In all cases, if inserting the token would cause the resulting
//     expression to be illegal a status of SMS_RANGE_ERROR will be returned.
//
//  Parameters:
//      HANDLE hObject                  Handle to filter or folder.
//      ANDOR opAndOr
//      TOKEN *pTokenInfo
//      INT iIndex
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsGetTokenCount
//
//  This API will return (in *pctTokens) the number of tokens currently in
//  the filter or folder expression.
//
//  Parameters:
//      HANDLE hObject                  Handle to either filter or folder.
//      DWORD *pctTokens
//
//  Returns:
//      SMS_STATUS                      SMS_OK, or SMS_INVALID_HANDLE.
//
//===========================================================================
//
//  SmsManipulateTokens
//
//  This APIs allows for the manipulation of tokens within a filter or folder
//  expression in various ways, according to the flags parameter.
//  TOK_GROUP       The tokens between the specified indicies are grouped
//                  together to form a sub-expression, ie they are backeted by
//                  parentheses.
//  TOK_UNGROUP     The tokens between the specified indicies have their
//                  parenthesis removed. This undoes the action of TOK_GROUP.
//  TOK_DELETE      The tokens within the specified indecies are deleted.
//                  In this case the tokens must not form a legal sub-
//                  expression.
//  TOK_GROUP_NOT   This is applicable only to persistent filters. At the
//                  moment that means only machine filters.
//                  This flag is applied to a range of one or more tokens that
//                  form a legal sub-expression. That is, a range of tokens
//                  that can ge grouped. The action performed by this is to
//                  group these tokens and preceed them with a 'NOT IN'
//                  token. This has the effect of specifying exclusion.
//
//  The user may use the manifests AT_START and AT_END to indicate
//  the full range of tokens within the filter or folder object.
//  The iStart and iEnd may be one of the following:
//  1. AT_START (-1), the index will be at the start of the expression.
//  2. AT_END (-2), the index will be at the end of the expression.
//  3. For any other valid indexes, the tokens will be manipulated within the given indexes
//
//  Parameters:
//      HANDLE hObject                  Handle to either filter or folder.
//      DWORD dwFlags
//      INT iStart
//      INT iEnd
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsGetAllFilters
//
//  This API retrieves from the specified container a list of filter handles
//  that have been applied to that container.
//  It is important to note that once this has been called, the API
//  SmsCloseFilter must be called for each of the filters in the array.
//
//  Calling this with NULL for the array of filters will cause the *pctFilters
//  parameter to be set with the number of filters, in this case the API
//  will return a status of SMS_MORE_DATA.
//  The user should then allocate sufficient memory and call the API again.
//
//  Note that the container specified here is a normal (ie folder) container
//  and not a filter container.
//
//  Parameters:
//      HANDLE hContainer
//      HANDLE *pahFilters
//      DWORD *pctFilters
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//===========================================================================
//  8.  Object enumeration APIs.
//===========================================================================
//
//  SmsEnumObjectTypes
//
//  This API returns a list of first-class objects that are known to the
//  API.
//  These objects do not have a direct existence in the container hierarchy,
//  but play an important part in the API. The objects of major concern are
//  architectures and their descendents, but Platforms are also supported.
//
//  A first-class object is one that is known directly to the APIs and which
//  does not require any additional informaion. Thus the system knows
//  directly about architectures and platforms, while it cannot know about,
//  for instance, attributes, without first knowing about an architecture
//  and a groupclass.
//
//  The 'pObjects' parameter is an array of SMSBUFF objects. On successful
//  completion of the API this array will be filled with the names of
//  each first-class object known to the system.
//
//  On entry the 'pCtObjects' parameter tells the API the size of the
//  pObjects array. On exit it contains the actual number of objects
//  known to the system.
//  If this parameter is less than the number of objects known to the system
//  then it is still set to the total, but no information will have been
//  copied to the pObjects array, and a status of SMS_MORE_DATA will be
//  returned.
//
//  Parameters:
//      HANDLE hConnection              Handle to a connection that has been
//                                      established via SmsDataSourceConnect.
//      SMSBUFF *pObjects
//      DWORD *pCtObjects
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================
//
//  SmsEnumObjects
//
//  This object actually does the work of enumerating objects. For first-
//  class objects (see above) the 'pPredecessor' parameter is not used,
//  in this case it may be set to NULL. For non first-class objects this
//  list states the predecessor objects that must be given to the system
//  in order for it to locate the requested object.
//
//  The 'ctPredecessors' parameter tells the API the number of entries in the
//  predecessor list.
//
//  'pszObjectType' tells the API what object type the user is interested in.
//
//  'pObjects' is an array of OBJDESCRIPTORS, this array will be filled in
//  with details of the requested object type.
//
//  'pCtObjects' is a pointer to a DWORD. On entry it tells the API the number
//  of entries in 'pObjects'. On exit it is always set to then count of
//  objects of the specified type. If the entry value is less than the actual
//  number of objects then no data is copied and a status of SMS_NMO_MORE_DATA
//  is returned.
//
//  Consider an example.
//  If we want to enumerate the attributes in the 'MICROSOFT|IDENTIFICATION|1.0'
//  groupclass for 'Personal Computer' objects then we would set the parameters
//  as follows:
//      pszObjectType    = "MICROSOFT|IDENTIFICATION|1.0"
//      pPredecessors[0] = "Architectures"
//      pPredecessors[1] = "Personal Computer"
//      ctPredecessors   = 2
//      pObjects - you can declare it as 'OBJDESCRIPTOR pObjects[SOME_SIZE]'
//      *pCtObjects      = SOME_SIZE
//
//  On exit the pObjects array would have 9 entries (as currently defined,
//  this can change). The first entry would look like this:
//      pObjects[0].objType          = OT_ATTRIBUTE
//      pObjects[0].szName           = 'Name"
//      pObjects[0].szFriendlyName - unused
//      pObjects[0].bGotFriendlyName = FALSE
//      pObjects[0].dwRelopMin       = QOP_STR_EQ
//      pObjects[0].dwRelopMax       = QOP_UPCASE_NOTLIKE
//      pObjects[0].bGotRelops       = TRUE

//  Parameters:
//      HANDLE hConn
//      char *pszObjectType
//      SMSBUFF *pPredecessors
//      DWORD ctPredecessors
//      OBJDESCRIPTOR *pObjects
//      DWORD *pCtObjects
//
//  Returns:
//      SMS_STATUS                      Status. Either SMS_OK or one of the
//                                      error codes listed above.
//
//===========================================================================



// ====================================================================
//      Version number API.
// ====================================================================
__declspec (dllexport) SMS_STATUS SmsAPIVer( char **ppVersion );


// ====================================================================
//      Engine APIs.
// ====================================================================

__declspec (dllexport) SMS_STATUS SmsEnumContainers(
                FOLDER_INFO **pData,
                DWORD *pCount );

__declspec (dllexport) SMS_STATUS SmsEnumFilters(
                FILTER_INFO *paFI,
                DWORD *pCount );

__declspec (dllexport) SMS_STATUS SmsEnumFolders(
                FOLDER_INFO **pData,
                DWORD *pCount );

__declspec (dllexport) SMS_STATUS SmsDescribeFolder(
                BASETYPE tObjectity,        // T_CONTAINER or T_FOLDER.
                DWORD dwTag,                // folder type (or F_ANY)
                FOLDER_INFO **ppFInfo );    // We store the FOLDER_INFO here.


// ====================================================================
//      Connection APIs.
// ====================================================================
__declspec (dllexport) SMS_STATUS SmsDataSourceConnect(
                                DATASOURCE *pd,
                                HANDLE *phConn );

__declspec (dllexport) SMS_STATUS SmsDataSourceDisconnect(
                                HANDLE hConn );


// ====================================================================
//      Container APIS.
// ====================================================================
__declspec (dllexport) SMS_STATUS SmsOpenContainer(
                                DWORD cType,
                                HANDLE hConnection,
                                HANDLE *phContainer );

__declspec (dllexport) SMS_STATUS SmsSetFilter(
                                HANDLE hContainer,
                                HANDLE hFilter );

__declspec (dllexport) SMS_STATUS SmsPopulate(
                                HANDLE hContainer,
                                DWORD dwOptions,
                                NOTIFY *pNotify );

__declspec (dllexport) SMS_STATUS SmsGetNextFolder(
                                HANDLE hParent,
                                DWORD fType,
                                HANDLE *phFolder );

__declspec (dllexport) SMS_STATUS SmsCloseContainer(
                                HANDLE hContainer );

// ====================================================================
//  Folder (collection) APIs.
//  A collection contains other things, that is it can have embedded
//  collections and it can also have properties (scalars).
// ====================================================================

__declspec (dllexport) SMS_STATUS SmsCreateFolder(
                                HANDLE hParent,
                                DWORD fType,
                                const char *pszFolderID,
                                HANDLE *phFolder );

__declspec (dllexport) SMS_STATUS SmsGetFolderID(
                                HANDLE hFolder,
                                char *pszFolderID );

__declspec (dllexport) SMS_STATUS SmsGetFolderType(
                                HANDLE hFolder,
                                DWORD *pfType,
                                char *pszfType );

__declspec (dllexport) SMS_STATUS SmsEnumFolderTypes(
                                HANDLE hFolder,
                                DWORD *pfTypes,
                                DWORD *pctFolderTypes );

__declspec (dllexport) SMS_STATUS SmsGetFolderCount(
                                HANDLE hFolder,
                                DWORD fType,
                                DWORD *pctFolders );

__declspec (dllexport) SMS_STATUS SmsGetFolderByID(
                                HANDLE hFolder,
                                DWORD fType,
                                char *pszFolderID,
                                HANDLE *phSubFolder );

__declspec (dllexport) SMS_STATUS SmsRewind(
                                HANDLE hObject,
                                DWORD dwOptions );

__declspec (dllexport) SMS_STATUS SmsCloseFolder(
                                HANDLE hFolder );

__declspec (dllexport) SMS_STATUS SmsLinkFolder(
                                HANDLE hFolder );

__declspec (dllexport) SMS_STATUS SmsUnlinkFolder(
                                HANDLE hFolder );

__declspec (dllexport) SMS_STATUS SmsCommitFolder(
                                HANDLE hFolder );

__declspec (dllexport) SMS_STATUS SmsDupFolder(
                                HANDLE hParent,
                                HANDLE hFolder,
                                HANDLE *phNewFolder );

// ====================================================================
//  Scalar APIs.
// ====================================================================

__declspec (dllexport) SMS_STATUS SmsGetScalarCount(
                                HANDLE hFolder,
                                DWORD *pctScalars );

__declspec (dllexport) SMS_STATUS SmsGetNextScalar(
                                HANDLE hFolder,
                                SCALAR *pScalarStruct );

__declspec (dllexport) SMS_STATUS SmsGetScalarByName(
                                HANDLE hFolder,
                                const char *pszName,
                                SCALAR *pScalarStruct );

__declspec (dllexport) SMS_STATUS SmsSetScalar(
                                HANDLE hFolder,
                                SCALAR *pScalarStruct );



// ====================================================================
//
//  FilterContainer APIs
//
// ====================================================================

__declspec (dllexport) SMS_STATUS SmsOpenFilterContainer(
                                HANDLE hConnection,
                                HANDLE *phFContainer );

__declspec (dllexport) SMS_STATUS SmsCloseFilterContainer(
                                HANDLE hFContainer );

__declspec (dllexport) SMS_STATUS SmsGetNextFilter(
                                HANDLE hFContainer,
                                DWORD frType,
                                HANDLE *phFilter );

__declspec (dllexport) SMS_STATUS SmsGetFilterByID(
                                HANDLE hFContainer,
                                DWORD frType,
                                const char *pszID,
                                HANDLE *phFilter );

__declspec (dllexport) SMS_STATUS SmsGetFilterID(
                                HANDLE hFilter,
                                char *pszID );

__declspec (dllexport) SMS_STATUS SmsCommitFilter(
                                HANDLE hFilter,
                                HANDLE hFContainer );



// ====================================================================
//
//  Filter APIs
//
// ====================================================================

__declspec (dllexport) SMS_STATUS SmsCreateFilter(
                                DWORD frType,
                                HANDLE hConnection,
                                HANDLE *phFilter );

__declspec (dllexport) SMS_STATUS SmsCloseFilter(
                                HANDLE hFilter );

__declspec (dllexport) SMS_STATUS SmsGetFilterType(
                                HANDLE hFilter,
                                DWORD *pfilterType,
                                char *pszTag );

__declspec (dllexport) SMS_STATUS SmsGetToken(
                                HANDLE hObject,
                                INT iIndex,
                                TOKEN *pTokenInfo);

__declspec (dllexport) SMS_STATUS SmsAddToken(
                                HANDLE hObject,
                                ANDOR opAndOr,
                                TOKEN *pTokenInfo,
                                INT iIndex );

__declspec (dllexport) SMS_STATUS SmsGetTokenCount(
                                HANDLE hObject,
                                DWORD *pctTokens );

__declspec (dllexport) SMS_STATUS SmsManipulateTokens(
                                HANDLE hObject,
                                DWORD dwFlags,
                                INT iStart,
                                INT iEnd );

__declspec (dllexport) SMS_STATUS SmsGetAllFilters(
                                HANDLE hContainer,
                                HANDLE *pahFilters,
                                DWORD *pctFilters );


__declspec (dllexport) SMS_STATUS SmsEnumObjectTypes(
                                HANDLE hConnection,
                                SMSBUFF *pObjects,
                                DWORD *pCtObjects );

__declspec (dllexport) SMS_STATUS SmsEnumObjects(
                                HANDLE hConn,
                                char *pszObjectType,
                                SMSBUFF *pPredecessors,
                                DWORD ctPredecessors,
                                OBJDESCRIPTOR *pObjects,
                                DWORD *pCtObjects );


#ifdef __cplusplus
}
#endif

#endif  // _SMSAPI_H_

/* EOF: smsapi.h */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SqlCa.h ===
/***********************************************************************\
			    FILE SQLCA.H

	IMPORTANT
	=========
 This file is automatically included by sqlprep.exe.
 Do not include it manually.

		Copyright (c) Microsoft Corporation 1990 - 1999
\***********************************************************************/


#ifndef _SQLPREP_
#pragma message( "Do not include sqlca.h manually. It will be included by sqlprep.exe. ")
#endif	// _SQLPREP_

#ifndef SQLCA_H

#define SQLCA_H


#ifdef WIN32
	#define ESQLAPI __stdcall
	#define far
#else
	#define ESQLAPI far pascal
#endif

#define SQLERRMC_SIZ    70
#define BETTER_ERRMC    999
#define EYECATCH_LEN    8

// SQL Communication Area - SQLCA

typedef struct tag_sqlca {
	unsigned char	sqlcaid[EYECATCH_LEN];	// Eyecatcher = 'SQLCA   '
	long		    sqlcabc;		        // SQLCA size in bytes = 136
	long		    sqlcode;		        // SQL return code
	short		    sqlerrml;		        // Length for SQLERRMC
	unsigned char	sqlerrmc[SQLERRMC_SIZ];	// Error message tokens
	unsigned char	sqlerrp[8];		        // Diagnostic information
	long		    sqlerrd[6];		        // Diagnostic information
	unsigned char	sqlwarn[8];		        // Warning flags
	unsigned char	sqlext[3];		        // Reserved
	unsigned char   sqlstate[5];            // SQLSTATE
//	unsigned char	sqlext[8];		        // Reserved
} SQLCA, *PSQLCA, far *LPSQLCA;

//#define SQLCODE sqlca->sqlcode
extern long SQLCODE;

#define SQLWARN0 sqlca->sqlwarn[0]
#define SQLWARN1 sqlca->sqlwarn[1]
#define SQLWARN2 sqlca->sqlwarn[2]
#define SQLWARN3 sqlca->sqlwarn[3]
#define SQLWARN4 sqlca->sqlwarn[4]
#define SQLWARN5 sqlca->sqlwarn[5]
#define SQLWARN6 sqlca->sqlwarn[6]
#define SQLWARN7 sqlca->sqlwarn[7]

#define SQLERRD1 sqlca->sqlerrd[0]
#define SQLERRD2 sqlca->sqlerrd[1]
#define SQLERRD3 sqlca->sqlerrd[2]
#define SQLERRD4 sqlca->sqlerrd[3]

#define SQLERRMC sqlca->sqlerrmc
#define SQLERRML sqlca->sqlerrml


#endif	// SQLCA_H

/* EOF: sqlca.h */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\Smx.h ===
/**********************************************************************/
/**                       Microsoft Windows NT                       **/
/**          Copyright(c) Microsoft Corporation 1992 - 1999          **/
/**********************************************************************/

/*
    smx.h
    This file contains the common messages, manifests, types, and
    structures used by Server Manager Extensions.

    NOTE:  You must include windows.h and lmcons.h *before* this file.
*/



#ifndef _SMX_H_
#define _SMX_H_



//
//  This is the maximum length allowed for an extension menu item.
//

#define MENU_TEXT_LEN                   50



//
//  This is the current version number of the extension interface.
//

#define SME_VERSION                     0



//
//  These are the messages sent from the extension to the
//  Server Manager application.
//
//      SM_GETSELCOUNT
//
//              Purpose - Retrieves the number of selected items in
//                        the specified listbox.
//
//              wParam  - Listbox index.  This 0-based index specifies
//                        the listbox to query.  For the Server Manager,
//                        this must always be zero.
//
//              lParam  - Points to an SMS_GETSELCOUNT structure.
//
//              Returns - TRUE  if successful, FALSE if unsuccessful.
//
//
//      SM_GETSERVERSEL[A]
//
//              Purpose - Retrieves a particular selection.
//
//              wParam  - Selection index.  This 0-based index specifies
//                        the selected item to query.  This is useful
//                        for muliple-select listboxes.  Since the Server
//                        manager uses a single-select listbox, this
//                        value must always be zero.
//
//              lParam  - Points to an SMS_GETSERVERSEL[AW] structure.
//
//              Returns - TRUE  if successful, FALSE if unsuccessful.
//
//      SM_GETCURFOCUS[AW]
//
//              Purpose - Retrieves the current application focus.
//
//              wParam  - Must be zero.
//
//              lParam  - Points to a SMS_GETCURFOCUS structure.
//
//              Returns - TRUE if successful, FALSE if unsuccessful.
//
//
//      SM_GETOPTIONS
//
//              Purpose - Retrieves the current option settings
//
//              wParam  - Must be zero.
//
//              lParam  - Points to a SMS_GETOPTIONS structure.
//
//              Returns - TRUE if successful, FALSE if unsuccessful.
//

#define SM_GETSELCOUNT                  (WM_USER + 1000)
#define SM_GETSERVERSELA                (WM_USER + 1001)
#define SM_GETSERVERSELW                (WM_USER + 1002)
#define SM_GETCURFOCUSA                 (WM_USER + 1003)
#define SM_GETCURFOCUSW                 (WM_USER + 1004)
#define SM_GETOPTIONS                   (WM_USER + 1005)

#ifdef UNICODE
#define SM_GETSERVERSEL                 SM_GETSERVERSELW
#define SM_GETCURFOCUS                  SM_GETCURFOCUSW
#else   // !UNICODE
#define SM_GETSERVERSEL                 SM_GETSERVERSELA
#define SM_GETCURFOCUS                  SM_GETCURFOCUSA
#endif  // UNICODE



//
//  These structures are used when the extension is
//  communicating with the application.
//


//
//  The SMS_LOADMENU[AW] structure is passed to the extension's
//  SMELoadMenu[AW] entrypoint when the extension is loaded.
//
//      dwVersion       - On entry to SMELoadMenu[AW], this will
//                        contain the maximum extension version
//                        supported by the Server Manager.  If the
//                        extension supports a lower version, it
//                        should set this field appropriately before
//                        returning.  The Server Manager will use
//                        the returned value to determine the
//                        capabilities of the extension.
//
//      szMenuName      - The name of the menu item that is to appear
//                        in the app's main menu.  This value will also
//                        appear in the "Help On Extensions" submene and
//                        the "View" menu.
//
//      hMenu           - A valid HMENU for the popup-menu to be inserted
//                        into the app's main menu.  Ownership of this
//                        handle transfers to the Server Manager.  The
//                        extension should *not* destroy this handle.
//
//      szHelpFileName  - The name of the help file associated with this
//                        extension.  This file will be used for the
//                        "Help On Extensions" menu.  This will also be
//                        used when the user presses [F1] while the
//                        extension's menu is dropped.
//
//      dwServerType    - A bitmask containing the appropriate server type
//                        bit associated with the extension.  It is
//                        assumed that each extension will be associated
//                        with a unique server type.  For example,
//                        SV_TYPE_WFW represents Windows for Workgroups
//                        servers.
//
//      dwMenuDelta     - The Server Manager will apply this delta
//                        to each menu ID present in hMenu.  This is
//                        to prevent conflicts with other extension's
//                        menu IDs.
//

typedef struct _SMS_LOADMENUA
{
    DWORD       dwVersion;
    CHAR        szMenuName[MENU_TEXT_LEN + 1];
    HMENU       hMenu;
    CHAR        szHelpFileName[MAX_PATH];
    DWORD       dwServerType;
    DWORD       dwMenuDelta;

} SMS_LOADMENUA, * PSMS_LOADMENUA;

typedef struct _SMS_LOADMENUW
{
    DWORD       dwVersion;
    WCHAR       szMenuName[MENU_TEXT_LEN + 1];
    HMENU       hMenu;
    WCHAR       szHelpFileName[MAX_PATH];
    DWORD       dwServerType;
    DWORD       dwMenuDelta;

} SMS_LOADMENUW, * PSMS_LOADMENUW;

#ifdef UNICODE
#define SMS_LOADMENU                    SMS_LOADMENUW
#define PSMS_LOADMENU                   PSMS_LOADMENUW
#else   // !UNICODE
#define SMS_LOADMENU                    SMS_LOADMENUA
#define PSMS_LOADMENU                   PSMS_LOADMENUA
#endif  // UNICODE


//
//  The SMS_GETSERVERSEL[AW] structure is filled in by the
//  Server Manager when it handles SM_GETSERVERSEL[AW] messages.
//  This is used to return the current selection to the extension.
//
//      szServerName    - Will receive the UNC name of the selected
//                        server.
//
//      dwServerType    - Will receive the server type mask associated
//                        with the server.  This field may be 0 if
//                        the type is unknown.
//

typedef struct _SMS_GETSERVERSELA
{
    CHAR        szServerName[MAX_PATH];
    DWORD       dwServerType;

} SMS_GETSERVERSELA, * PSMS_GETSERVERSELA;

typedef struct _SMS_GETSERVERSELW
{
    WCHAR       szServerName[MAX_PATH];
    DWORD       dwServerType;

} SMS_GETSERVERSELW, * PSMS_GETSERVERSELW;

#ifdef UNICODE
#define SMS_GETSERVERSEL                SMS_GETSERVERSELW
#define PSMS_GETSERVERSEL               PSMS_GETSERVERSELW
#else   // !UNICODE
#define SMS_GETSERVERSEL                SMS_GETSERVERSELA
#define PSMS_GETSERVERSEL               PSMS_GETSERVERSELA
#endif  // UNICODE


//
//  The SMS_GETSELCOUNT structure is filled in by the Server Manager
//  when it handles the SM_GETSELCOUNT message.  This is used to
//  return the number of selected items to the extension.  In the
//  current implementation, this will be either 0 (empty listbox)
//  or 1 (single selection).
//
//      dwItems         - The number of selected items in the listbox.
//

typedef struct _SMS_GETSELCOUNT
{
    DWORD       dwItems;
} SMS_GETSELCOUNT, * PSMS_GETSELCOUNT;


//
//  The SMS_GETCURFOCUS[AW] structure is filled in by the Server Manager
//  when it handles the SM_GETCURFOCUS message.  This is used to
//  return the current focus of the User Manager application.
//
//      szFocus         - The domain name or server name of the current
//                        focus.  Server names can be distinguished
//                        by the leading backslashes, or by dwFocusType.
//
//      dwFocusType     - This is the type of focus, either
//                        SM_FOCUS_TYPE_NT_DOMAIN
//                        SM_FOCUS_TYPE_LM_DOMAIN
//                        SM_FOCUS_TYPE_UNKNOWN_DOMAIN
//                        SM_FOCUS_TYPE_NT_SERVER
//                        SM_FOCUS_TYPE_LM_SERVER
//                        SM_FOCUS_TYPE_WFW_SERVER
//                        SM_FOCUS_TYPE_UNKNOWN_SERVER
//

#define SM_FOCUS_TYPE_NT_DOMAIN         1
#define SM_FOCUS_TYPE_LM_DOMAIN         2
#define SM_FOCUS_TYPE_UNKNOWN_DOMAIN    3
#define SM_FOCUS_TYPE_NT_SERVER         4
#define SM_FOCUS_TYPE_LM_SERVER         5
#define SM_FOCUS_TYPE_WFW_SERVER        6
#define SM_FOCUS_TYPE_UNKNOWN_SERVER    7

typedef struct _SMS_GETCURFOCUSA
{
    CHAR        szFocus[MAX_PATH];
    DWORD       dwFocusType;

} SMS_GETCURFOCUSA, * PSMS_GETCURFOCUSA;

typedef struct _SMS_GETCURFOCUSW
{
    WCHAR       szFocus[MAX_PATH];
    DWORD       dwFocusType;

} SMS_GETCURFOCUSW, * PSMS_GETCURFOCUSW;

#ifdef UNICODE
#define SMS_GETCURFOCUS             SMS_GETCURFOCUSW
#define PSMS_GETCURFOCUS            PSMS_GETCURFOCUSW
#else   // UNICODE
#define SMS_GETCURFOCUS             SMS_GETCURFOCUSA
#define PSMS_GETCURFOCUS            PSMS_GETCURFOCUSA
#endif  // UNICODE


//
//  The SMS_GETOPTIONS structure is filled in by the Server Manager
//  when it handles the SM_GETOPTIONS message.  This is used to
//  return the current option settings of the Server Manager
//  application.
//
//      fSaveSettingsOnExit     - Should Server Manager settings be saved
//                                on exit?
//
//      fConfirmation           - Should permanent and/or dangerous
//                                actions be confirmed?  In the current
//                                Server Manager implementation, this
//                                will always be TRUE.
//

typedef struct _SMS_GETOPTIONS
{
    BOOL        fSaveSettingsOnExit;
    BOOL        fConfirmation;

} SMS_GETOPTIONS, * PSMS_GETOPTIONS;


//
//  The SMS_VALIDATE[AW] structure is passed between the Server Manager
//  application and the extension to validate a particular "alien"
//  (non-LANMan) server.
//
//      pszServer       - The (UNC) name of the server to validate.  This
//                        is filled in by the Server Manager.
//
//      pszType         - The type string to display in the Server Manager's
//                        main window.  This is filled in by the extension.
//
//      pszComment      - The comment to display in the Server Manager's
//                        main window.  This is filled in by the extension.
//

typedef struct _SMS_VALIDATEA
{
    const CHAR * pszServer;
    CHAR       * pszType;
    CHAR       * pszComment;

} SMS_VALIDATEA, * PSMS_VALIDATEA;

typedef struct _SMS_VALIDATEW
{
    const WCHAR * pszServer;
    WCHAR       * pszType;
    WCHAR       * pszComment;

} SMS_VALIDATEW, * PSMS_VALIDATEW;

#ifdef UNICODE
#define SMS_VALIDATE                SMS_VALIDATEW
#define PSMS_VALIDATE               PSMS_VALIDATEW
#else   // UNICODE
#define SMS_VALIDATE                SMS_VALIDATEA
#define PSMS_VALIDATE               PSMS_VALIDATEA
#endif  // UNICODE



//
//  These are the names of the extension entrypoints.
//

#define SZ_SME_UNLOADMENU               "SMEUnloadMenu"
#define SZ_SME_INITIALIZEMENU           "SMEInitializeMenu"
#define SZ_SME_REFRESH                  "SMERefresh"
#define SZ_SME_MENUACTION               "SMEMenuAction"

#define SZ_SME_LOADMENUW                "SMELoadMenuW"
#define SZ_SME_GETEXTENDEDERRORSTRINGW  "SMEGetExtendedErrorStringW"
#define SZ_SME_VALIDATEW                "SMEValidateW"

#define SZ_SME_LOADMENUA                "SMELoadMenuA"
#define SZ_SME_GETEXTENDEDERRORSTRINGA  "SMEGetExtendedErrorStringA"
#define SZ_SME_VALIDATEA                "SMEValidateA"

#ifdef UNICODE
#define SZ_SME_LOADMENU                 SZ_SME_LOADMENUW
#define SZ_SME_GETEXTENDEDERRORSTRING   SZ_SME_GETEXTENDEDERRORSTRINGW
#define SZ_SME_VALIDATE                 SZ_SME_VALIDATEW
#else   // !UNICODE
#define SZ_SME_LOADMENU                 SZ_SME_LOADMENUA
#define SZ_SME_GETEXTENDEDERRORSTRING   SZ_SME_GETEXTENDEDERRORSTRINGA
#define SZ_SME_VALIDATE                 SZ_SME_VALIDATEA
#endif  // UNICODE



//
//  Typedefs for the extension entrypoints.
//

typedef DWORD (PASCAL * PSMX_LOADMENU)( HWND          hWnd,
                                        PSMS_LOADMENU psmsload );

typedef LPTSTR (PASCAL * PSMX_GETEXTENDEDERRORSTRING)( VOID );

typedef VOID (PASCAL * PSMX_UNLOADMENU)( VOID );

typedef VOID (PASCAL * PSMX_INITIALIZEMENU)( VOID );

typedef VOID (PASCAL * PSMX_REFRESH)( HWND hwndParent );

typedef VOID (PASCAL * PSMX_MENUACTION)( HWND hwndParent, DWORD dwEventId );

typedef BOOL (PASCAL * PSMX_VALIDATE)( PSMS_VALIDATE psmsvalidate );



//
//  Prototypes for the extension entrypoints.
//

DWORD PASCAL SMELoadMenuA( HWND           hWnd,
                           PSMS_LOADMENUA psmsload );

DWORD PASCAL SMELoadMenuW( HWND           hWnd,
                           PSMS_LOADMENUW psmsload );

LPSTR  PASCAL SMEGetExtendedErrorStringA( VOID );

LPWSTR PASCAL SMEGetExtendedErrorStringW( VOID );

VOID PASCAL SMEUnloadMenu( VOID );

VOID PASCAL SMEInitializeMenu( VOID );

VOID PASCAL SMERefresh( HWND hwndParent );

VOID PASCAL SMEMenuAction( HWND hwndParent, DWORD dwEventId );

BOOL PASCAL SMEValidateA( PSMS_VALIDATEA psmsValidate );

BOOL PASCAL SMEValidateW( PSMS_VALIDATEW psmsValidate );



#endif  // _SMX_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\sna_dlc.h ===
/* sna_dlc.h */
/*
 * (C) Copyright Data Connection Limited 1989-1992.
 * (C) Copyright Microsoft Corporation 1991.
 * All Rights Reserved.
 */

#ifndef SNA_DLCH_INCLUDED
#define SNA_DLCH_INCLUDED

#ifdef __cplusplus
extern "C" {
#endif

/*****************************************************************************/
/* Type definitions for message fields                                       */
/*****************************************************************************/
typedef signed long   LONGINT;
typedef signed short  INTEGER;
typedef signed char   SENUMERATED;
typedef signed short  LENUMERATED;
typedef unsigned char SUBRNG0;
typedef signed char   SUBRNG1;
typedef signed short  SUBRNG2;
typedef signed char   SET1;
typedef signed short  SET2;
typedef signed long   SET;
typedef SET2          THFORMAT;
#define VOID          void

/*****************************************************************************/
/* Element offset and length definitions                                     */
/*****************************************************************************/

#define SBCBELT1 1
#define SBCBELT3 13
#define SNANBEDA 268     /* LENGTH OF BUFFER ELEMENT */

/*****************************************************************************/
/* POINTERS TO STRUCTURES IN SBTBUFPT                                        */
/*****************************************************************************/
#ifdef WIN32_SUPPORT
#define PTRBFELT struct bufelt *
#define PTRBFHDR struct bufhdr *
#else
#define PTRBFELT struct bufelt far *
#define PTRBFHDR struct bufhdr far *
#endif

/*****************************************************************************/
/* SIZE OF BUFFER HEADER:                                                    */
/*   - 10 BYTES FOR FIXED PART                                               */
/*   - 16 BYTES FOR VARIANT PART                                             */
/*   - 2  BYTES FOR MATTERHORN EXTRA                                         */
/*****************************************************************************/
#define SVBUFSIZ 26


/*****************************************************************************/
/* OPEN MESSAGE TYPE DECLARATIONS                                            */
/*****************************************************************************/

     typedef struct tpophdr{                          /* OPEN MESSAGE HEADER */
                      CHAR     openqual;
#define REQU     1
#define RSPOK    2
#define RSPERR   3
#define CONFOK   4
#define CONFERR  5
                      CHAR     opentype;
#define LINK     16
#define STAT     17
                      CHAR     appltype;
                      CHAR     opluno;              /* INTERFACE USER NUMBER */
                      INTEGER  opresid;             /* INTERFACE USER ID     */
                      union {
                        struct {INTEGER  B03;
                                INTEGER  B04;
                                CHAR     B05;
                                CHAR     B06;}B02;
                        struct {INTEGER  B08;
                                INTEGER  B09;}B07;
                    }B01;}
#define icreditr B01.B02.B03           /* Initial Credit for Receive       */
#define icredits B01.B02.B04           /* Initial Credit for Send          */
#define opninfo1 B01.B02.B05           /* Negotiable BIND indicator (FMI)  */
#define opnpad1  B01.B02.B06           /* Open (SSCP) Force type           */
#define operr1   B01.B07.B08
#define ERINIFAIL    0x0001            /* Hardware initialisation failed   */
#define ERLKNOTOPEN  0x0003            /* Link not open                    */
#define ERSTATOPEN   0x0005            /* Station already open             */
#define ERNOCB       0x0006            /* Station control blocks depleted  */
#define ERINVINDX    0x0007            /* Invalid link index               */
#define ERMAXSTAT    0x0008            /* No more stations/link allowed    */
#define ERINVXID     0x0008            /* Invalid XID length               */
#define ERDIFADDR    0x0009            /* Address different from RQ-OP-STN */
#define ERLINKOPN    0x0009            /* Link already open                */
#define ERBADADDR    0x000A            /* Invalid DLC address              */
#define ERLCCERR     0x000A            /* LCC error; fatal hardware failure*/
#define ERBADINDX    0x000B            /* Invalid link index               */
#define ERBADOPN     0x000C            /* Open(LINK) has insufficient data */
#define ERCONNTO     0x000D            /* Link connection timeout          */
#define ERNORES      0x000E            /* No resources free                */
#define EROPNPND     0x0011            /* Close(LINK) arrived, Open pending*/
#define ERDUPREQ     0x0012            /* Duplicate request                */
#define ERNOINC      0x0A11            /* Can't accept incoming call       */
#define operr2   B01.B07.B09
                    TPOPHDR;


#define SNA          0
#define APPL         1
#define AMOD         2
#define DLC          3


/*****************************************************************************/
/* CLOSE MESSAGE TYPE DECLARATIONS                                           */
/*****************************************************************************/
     typedef struct tpclhdr{                         /* CLOSE MESSAGE HEADER */
                      CHAR     closqual;    /* Close message qualifier       */
                      CHAR     clstype;     /* Close message connection type */
                      CHAR     clsctl;      /* For Close(PLU) only           */
#define CLNORMAL 1
#define CLBIND   2
#define CLCFAERR 3
#define CLPUINAC 4
#define CLLUINAC 5
#define CLLNKERR 6
#define CLBFSHRT 7
#define CLRCVCHK 8
#define CLSLUTRM 9
                      CHAR     clspad1;
                      INTEGER  clspad2;
                      INTEGER  clserr1;
                      INTEGER  clserr2;
                    }TPCLHDR;



/*****************************************************************************/
/* DLC MESSAGE TYPE DECLARATIONS                                             */
/*****************************************************************************/



     typedef struct tpddhdr{                      /* DLC DATA MESSAGE HEADER */
                     INTEGER  ddpad1;   /* Pad                              */
                     INTEGER  ddpad2;   /* Pad                              */
                     INTEGER  ddpad3;   /* Pad                              */
                     THFORMAT ddth01;   /* TH Flags                         */
                     CHAR     dddaf;    /* DAF in the TH                    */
                     CHAR     ddoaf;    /* OAF in the TH                    */
                     INTEGER  ddseqno;  /* Sequence Number in the TH        */
                   }TPDDHDR;


     typedef struct tpdshdr{                      /* DLC DATA MESSAGE HEADER */
                     CHAR     dstype;    /* DLC-Status type                  */
#define SENDXID  0x1a
#define RESOURCE 0x04
#define OUTAGE   0x18
#define STNCTCTD 0x17
#define RQOPNSTN 0x16
                     CHAR     dsqual;    /* Status Qualifier                 */
                     /*BOOLEAN*/union {
                       /*TRUE*/struct {CHAR     B0N;
                                    CHAR     B0O;
                                    INTEGER  B0P;
                                    INTEGER  B0Q;
                                    CHAR     B0R;}B0M;
                       /*FALSE*/struct {INTEGER  B0T;}B0S;
                   }B0L;}
#define dsuptype B0L.B0M.B0N             /* Status Qualifier                 */
#define dsmdset  B0L.B0M.B0N             /* RECFMS Counter Type              */
#define dsupcntr B0L.B0M.B0O             /* Req-Opn-Station Set-Mode flag    */
#define dspad    B0L.B0M.B0P             /* RECFMS Counter Value             */
#define dserror  B0L.B0M.B0Q             /* Pad                              */
#define dsoutsq  B0L.B0M.B0R             /* Internal value for Counter       */
#define dlccred  B0L.B0S.B0T             /* Outage Sub-qualifier             */
                   TPDSHDR;              /* DLC-Status Credit Increment      */




/*****************************************************************************/
/* SNAP-LINK HMOD MESSAGE TYPE DECLARATIONS                                  */
/*****************************************************************************/

     typedef struct tpdlhdr{                         /* HMOD  MESSAGE HEADER */
                      CHAR     dlcnr;    /* N(R) Value                       */
                      CHAR     dlcns;    /* N(S) Value                       */
                      INTEGER  dlclkidx; /* Link Index                       */
                      CHAR     dlcerst1; /* Error Status 1                   */
                      CHAR     dlcerst2; /* Error Status 2                   */
                    }TPDLHDR;


/*****************************************************************************/
/* MAIN DEFINITION OF MESSAGE HEADER                                         */
/*****************************************************************************/
     typedef struct bufhdr{
                     PTRBFHDR nxtqptr;
                     PTRBFELT hdreptr;
                     CHAR     numelts;
                     CHAR     msgtype;
#define OPENMSG  1
#define CLOSEMSG 2
#define DLCSTAT  17
#define DLCDATA  16
                     CHAR     srcl;
                     CHAR     srcp;
#define SLPROD   22
                     INTEGER  srci;
                     CHAR     destl;
                     CHAR     destp;
                     INTEGER  desti;
                     union {
                       struct {TPOPHDR  B1C;}B1B;
                       struct {TPCLHDR  B1E;}B1D;
                       struct {TPDDHDR  B1G;}B1F;
                       struct {TPDSHDR  B1I;}B1H;
                       struct {TPDLHDR  B1K;}B1J;
                     }B0Y;}
#define ophdr    B0Y.B1B.B1C
#define clhdr    B0Y.B1D.B1E
#define ddhdr    B0Y.B1F.B1G
#define dshdr    B0Y.B1H.B1I
#define dlhdr    B0Y.B1J.B1K
                     BUFHDR;


/*****************************************************************************/
/* MAIN DEFINITION OF MESSAGE ELEMENT                                        */
/*****************************************************************************/

/**STRUCT+********************************************************************/
/* Structure: BUFELT                                                         */
/*                                                                           */
/* Description: Main definition of SNAPS Buffer Element                      */
/*****************************************************************************/
     typedef struct bufelt{
                     PTRBFELT elteptr;   /* Pointer to next element in buffer*/
                     INTEGER  startd;    /* Offset (from 1) of start of data */
                     INTEGER  endd;      /* Offset (from 1) of last data byte*/
                     CHAR     trpad;
                     CHAR     dataru[268]; /* The data bytes themselves      */
                     } BUFELT;
/**STRUCT-********************************************************************/

/*****************************************************************************/
/* IF Win32 environment THEN                                                 */
/*   IF intel format THEN                                                    */
/*     define flipping macros                                                */
/*     define anti-flipping macros to NOP                                    */
/*****************************************************************************/
#ifdef WIN32
#ifndef NON_INTEL_BYTE_ORDER
#define PFLIPI(X) (unsigned short)_rotl(((unsigned short)(X))*(unsigned long)0x00010001,8)
#define PFLIPL(X) MAKEULONG(PFLIPI(HIUSHORT(X)),PFLIPI(LOUSHORT(X)))
#define PANTIFLIPI(X) (X)

/*****************************************************************************/
/* ELSE (non-intel)                                                          */
/*   set flipping to nop for now                                             */
/*   set anti-flipping on                                                    */
/*****************************************************************************/
#else
#define PFLIPI(X)  (X)
#define PFLIPL(X)  (X)
#define PANTIFLIPI(X) (unsigned short)_rotl((unsigned short)(X),8)
#endif

/*****************************************************************************/
/* ELSE (not Win32, must be Intel environment)                               */
/*   define flipping macros                                                  */
/*****************************************************************************/
#else
#define PFLIPI(X) (unsigned short)_rotl((unsigned short)(X),8)
#define PFLIPL(X) MAKEULONG(PFLIPI(HIUSHORT(X)),PFLIPI(LOUSHORT(X)))
#define PANTIFLIPI(X) (X)
#endif

/*****************************************************************************/
/* Buffer pool access routines                                               */
/*****************************************************************************/

#ifdef WIN32_SUPPORT


  #ifdef OLD_IHV_PROTOS
    extern PTRBFHDR WINAPI     sepdbubl (USHORT);
    extern VOID     WINAPI     sepdburl (PTRBFHDR);
    extern VOID     WINAPI     sbpibegt (PTRBFELT *);
    extern VOID     WINAPI     sbpiberl (PTRBFELT *);
  #else
    extern PTRBFHDR WINAPI     SNAGetBuffer     (USHORT);
    extern VOID     WINAPI     SNAReleaseBuffer (PTRBFHDR);
    extern VOID     WINAPI     SNAGetElement    (PTRBFELT *);
    extern VOID     WINAPI     SNAReleaseElement(PTRBFELT *);
  #endif

#else
  extern PTRBFHDR far  sepdbubl (USHORT);
  extern VOID     far  sepdburl (PTRBFHDR);
  extern VOID     far  sbpibegt (PTRBFELT far *);
  extern VOID     far  sbpiberl (PTRBFELT far *);
#endif

#ifdef WIN32_SUPPORT
extern CHAR        WINAPI  snpugetc(PTRBFELT, INTEGER);
extern VOID        WINAPI  snpuputc(PTRBFELT, INTEGER, CHAR);
extern INTEGER     WINAPI  snpugeti(PTRBFELT, INTEGER);
extern VOID        WINAPI  snpuputi(PTRBFELT, INTEGER, INTEGER);
extern VOID        WINAPI  snpugetl(PTRBFELT, INTEGER, LONGINT *);
extern VOID        WINAPI  snpuputl(PTRBFELT, INTEGER, LONGINT);
#else
extern CHAR     far  snpugetc(PTRBFELT, INTEGER);
extern VOID     far  snpuputc(PTRBFELT, INTEGER, CHAR);
extern INTEGER  far  snpugeti(PTRBFELT, INTEGER);
extern VOID     far  snpuputi(PTRBFELT, INTEGER, INTEGER);
extern VOID     far  snpugetl(PTRBFELT, INTEGER, LONGINT FAR *);
extern VOID     far  snpuputl(PTRBFELT, INTEGER, LONGINT);
#endif


/*****************************************************************************/
/* Include the remainder of SNA Services definitions                         */
/*****************************************************************************/
#include <sna_cnst.h>

#ifdef __cplusplus
}
#endif

#endif
/* End of file cs_dlc.h */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\snmp.h ===
/*++

Copyright (C) 1992-1999 Microsoft Corporation

Module Name:

    snmp.h

Abstract:

    Definitions for SNMP development.

--*/

#ifndef _INC_SNMP
#define _INC_SNMP

#if _MSC_VER > 1000
#pragma once
#endif

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// Additional Header Files                                                   //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#include <windows.h>

#ifdef __cplusplus
extern "C" {
#endif

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMP Type Definitions                                                     //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#include <pshpack4.h>

typedef struct {
    BYTE * stream;
    UINT   length;
    BOOL   dynamic;
} AsnOctetString;

typedef struct {
    UINT   idLength;
    UINT * ids;
} AsnObjectIdentifier;

typedef LONG                    AsnInteger32;
typedef ULONG                   AsnUnsigned32;
typedef ULARGE_INTEGER          AsnCounter64;
typedef AsnUnsigned32           AsnCounter32;
typedef AsnUnsigned32           AsnGauge32;
typedef AsnUnsigned32           AsnTimeticks;
typedef AsnOctetString          AsnBits;
typedef AsnOctetString          AsnSequence;
typedef AsnOctetString          AsnImplicitSequence;
typedef AsnOctetString          AsnIPAddress;
typedef AsnOctetString          AsnNetworkAddress;
typedef AsnOctetString          AsnDisplayString;
typedef AsnOctetString          AsnOpaque;

typedef struct {
    BYTE asnType;
    union {
        AsnInteger32            number;     // ASN_INTEGER
                                            // ASN_INTEGER32
        AsnUnsigned32           unsigned32; // ASN_UNSIGNED32
        AsnCounter64            counter64;  // ASN_COUNTER64
        AsnOctetString          string;     // ASN_OCTETSTRING
        AsnBits                 bits;       // ASN_BITS
        AsnObjectIdentifier     object;     // ASN_OBJECTIDENTIFIER
        AsnSequence             sequence;   // ASN_SEQUENCE
        AsnIPAddress            address;    // ASN_IPADDRESS
        AsnCounter32            counter;    // ASN_COUNTER32
        AsnGauge32              gauge;      // ASN_GAUGE32
        AsnTimeticks            ticks;      // ASN_TIMETICKS
        AsnOpaque               arbitrary;  // ASN_OPAQUE
    } asnValue;
} AsnAny;

typedef AsnObjectIdentifier     AsnObjectName;
typedef AsnAny                  AsnObjectSyntax;

typedef struct {
    AsnObjectName    name;
    AsnObjectSyntax  value;
} SnmpVarBind;

typedef struct {
    SnmpVarBind * list;
    UINT          len;
} SnmpVarBindList;

#include <poppack.h>

#ifndef _INC_WINSNMP

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// ASN/BER Base Types                                                        //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define ASN_UNIVERSAL                   0x00
#define ASN_APPLICATION                 0x40
#define ASN_CONTEXT                     0x80
#define ASN_PRIVATE                     0xC0

#define ASN_PRIMITIVE                   0x00
#define ASN_CONSTRUCTOR                 0x20

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// PDU Type Values                                                           //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define SNMP_PDU_GET                (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x0)
#define SNMP_PDU_GETNEXT            (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x1)
#define SNMP_PDU_RESPONSE           (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x2)
#define SNMP_PDU_SET                (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x3)
#define SNMP_PDU_V1TRAP             (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x4)
#define SNMP_PDU_GETBULK            (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x5)
#define SNMP_PDU_INFORM             (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x6)
#define SNMP_PDU_TRAP               (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x7)

#endif // _INC_WINSNMP

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMP Simple Syntax Values                                                 //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define ASN_INTEGER                 (ASN_UNIVERSAL | ASN_PRIMITIVE | 0x02)
#define ASN_BITS                    (ASN_UNIVERSAL | ASN_PRIMITIVE | 0x03)
#define ASN_OCTETSTRING             (ASN_UNIVERSAL | ASN_PRIMITIVE | 0x04)
#define ASN_NULL                    (ASN_UNIVERSAL | ASN_PRIMITIVE | 0x05)
#define ASN_OBJECTIDENTIFIER        (ASN_UNIVERSAL | ASN_PRIMITIVE | 0x06)
#define ASN_INTEGER32               ASN_INTEGER

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMP Constructor Syntax Values                                            //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define ASN_SEQUENCE                (ASN_UNIVERSAL | ASN_CONSTRUCTOR | 0x10)
#define ASN_SEQUENCEOF              ASN_SEQUENCE

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMP Application Syntax Values                                            //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define ASN_IPADDRESS               (ASN_APPLICATION | ASN_PRIMITIVE | 0x00)
#define ASN_COUNTER32               (ASN_APPLICATION | ASN_PRIMITIVE | 0x01)
#define ASN_GAUGE32                 (ASN_APPLICATION | ASN_PRIMITIVE | 0x02)
#define ASN_TIMETICKS               (ASN_APPLICATION | ASN_PRIMITIVE | 0x03)
#define ASN_OPAQUE                  (ASN_APPLICATION | ASN_PRIMITIVE | 0x04)
#define ASN_COUNTER64               (ASN_APPLICATION | ASN_PRIMITIVE | 0x06)
#define ASN_UNSIGNED32              (ASN_APPLICATION | ASN_PRIMITIVE | 0x07)

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMP Exception Conditions                                                 //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define SNMP_EXCEPTION_NOSUCHOBJECT     (ASN_CONTEXT | ASN_PRIMITIVE | 0x00)
#define SNMP_EXCEPTION_NOSUCHINSTANCE   (ASN_CONTEXT | ASN_PRIMITIVE | 0x01)
#define SNMP_EXCEPTION_ENDOFMIBVIEW     (ASN_CONTEXT | ASN_PRIMITIVE | 0x02)

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMP Request Types (used in SnmpExtensionQueryEx)                         //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define SNMP_EXTENSION_GET          SNMP_PDU_GET
#define SNMP_EXTENSION_GET_NEXT     SNMP_PDU_GETNEXT
#define SNMP_EXTENSION_GET_BULK     SNMP_PDU_GETBULK
#define SNMP_EXTENSION_SET_TEST     (ASN_PRIVATE | ASN_CONSTRUCTOR | 0x0)
#define SNMP_EXTENSION_SET_COMMIT   SNMP_PDU_SET
#define SNMP_EXTENSION_SET_UNDO     (ASN_PRIVATE | ASN_CONSTRUCTOR | 0x1)
#define SNMP_EXTENSION_SET_CLEANUP  (ASN_PRIVATE | ASN_CONSTRUCTOR | 0x2)

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMP Error Codes                                                          //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define SNMP_ERRORSTATUS_NOERROR                0
#define SNMP_ERRORSTATUS_TOOBIG                 1
#define SNMP_ERRORSTATUS_NOSUCHNAME             2
#define SNMP_ERRORSTATUS_BADVALUE               3
#define SNMP_ERRORSTATUS_READONLY               4
#define SNMP_ERRORSTATUS_GENERR                 5
#define SNMP_ERRORSTATUS_NOACCESS               6
#define SNMP_ERRORSTATUS_WRONGTYPE              7
#define SNMP_ERRORSTATUS_WRONGLENGTH            8
#define SNMP_ERRORSTATUS_WRONGENCODING          9
#define SNMP_ERRORSTATUS_WRONGVALUE             10
#define SNMP_ERRORSTATUS_NOCREATION             11
#define SNMP_ERRORSTATUS_INCONSISTENTVALUE      12
#define SNMP_ERRORSTATUS_RESOURCEUNAVAILABLE    13
#define SNMP_ERRORSTATUS_COMMITFAILED           14
#define SNMP_ERRORSTATUS_UNDOFAILED             15
#define SNMP_ERRORSTATUS_AUTHORIZATIONERROR     16
#define SNMP_ERRORSTATUS_NOTWRITABLE            17
#define SNMP_ERRORSTATUS_INCONSISTENTNAME       18

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMPv1 Trap Types                                                         //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define SNMP_GENERICTRAP_COLDSTART              0
#define SNMP_GENERICTRAP_WARMSTART              1
#define SNMP_GENERICTRAP_LINKDOWN               2
#define SNMP_GENERICTRAP_LINKUP                 3
#define SNMP_GENERICTRAP_AUTHFAILURE            4
#define SNMP_GENERICTRAP_EGPNEIGHLOSS           5
#define SNMP_GENERICTRAP_ENTERSPECIFIC          6

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMP Access Types                                                         //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define SNMP_ACCESS_NONE                        0
#define SNMP_ACCESS_NOTIFY                      1
#define SNMP_ACCESS_READ_ONLY                   2
#define SNMP_ACCESS_READ_WRITE                  3
#define SNMP_ACCESS_READ_CREATE                 4

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMP API Return Code Definitions                                          //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define SNMPAPI                                 INT
#define SNMP_FUNC_TYPE                          WINAPI

#define SNMPAPI_NOERROR                         TRUE
#define SNMPAPI_ERROR                           FALSE

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMP Extension API Prototypes                                             //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

BOOL
SNMP_FUNC_TYPE
SnmpExtensionInit(
    DWORD                 dwUptimeReference,
    HANDLE *              phSubagentTrapEvent,
    AsnObjectIdentifier * pFirstSupportedRegion
    );

BOOL
SNMP_FUNC_TYPE
SnmpExtensionInitEx(
    AsnObjectIdentifier * pNextSupportedRegion
    );

BOOL
SNMP_FUNC_TYPE
SnmpExtensionMonitor(
    LPVOID            pAgentMgmtData
    );

BOOL
SNMP_FUNC_TYPE
SnmpExtensionQuery(
    BYTE              bPduType,
    SnmpVarBindList * pVarBindList,
    AsnInteger32 *    pErrorStatus,
    AsnInteger32 *    pErrorIndex
    );

BOOL
SNMP_FUNC_TYPE
SnmpExtensionQueryEx(
    UINT              nRequestType,
    UINT              nTransactionId,
    SnmpVarBindList * pVarBindList,
    AsnOctetString *  pContextInfo,
    AsnInteger32 *    pErrorStatus,
    AsnInteger32 *    pErrorIndex
    );

BOOL
SNMP_FUNC_TYPE
SnmpExtensionTrap(
    AsnObjectIdentifier * pEnterpriseOid,
    AsnInteger32 *        pGenericTrapId,
    AsnInteger32 *        pSpecificTrapId,
    AsnTimeticks *        pTimeStamp,
    SnmpVarBindList *     pVarBindList
    );

VOID
SNMP_FUNC_TYPE
SnmpExtensionClose(
    );

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMP Extension API Type Definitions                                       //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

typedef BOOL (SNMP_FUNC_TYPE * PFNSNMPEXTENSIONINIT)(
    DWORD                 dwUpTimeReference,
    HANDLE *              phSubagentTrapEvent,
    AsnObjectIdentifier * pFirstSupportedRegion
    );

typedef BOOL (SNMP_FUNC_TYPE * PFNSNMPEXTENSIONINITEX)(
    AsnObjectIdentifier * pNextSupportedRegion
    );

typedef BOOL (SNMP_FUNC_TYPE * PFNSNMPEXTENSIONMONITOR)(
    LPVOID            pAgentMgmtData
    );

typedef BOOL (SNMP_FUNC_TYPE * PFNSNMPEXTENSIONQUERY)(
    BYTE              bPduType,
    SnmpVarBindList * pVarBindList,
    AsnInteger32 *    pErrorStatus,
    AsnInteger32 *    pErrorIndex
    );

typedef BOOL (SNMP_FUNC_TYPE * PFNSNMPEXTENSIONQUERYEX)(
    UINT              nRequestType,
    UINT              nTransactionId,
    SnmpVarBindList * pVarBindList,
    AsnOctetString *  pContextInfo,
    AsnInteger32 *    pErrorStatus,
    AsnInteger32 *    pErrorIndex
    );

typedef BOOL (SNMP_FUNC_TYPE * PFNSNMPEXTENSIONTRAP)(
    AsnObjectIdentifier * pEnterpriseOid,
    AsnInteger32 *        pGenericTrapId,
    AsnInteger32 *        pSpecificTrapId,
    AsnTimeticks *        pTimeStamp,
    SnmpVarBindList *     pVarBindList
    );

typedef VOID (SNMP_FUNC_TYPE * PFNSNMPEXTENSIONCLOSE)(
    );

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMP API Prototypes                                                       //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

SNMPAPI
SNMP_FUNC_TYPE
SnmpUtilOidCpy(
    AsnObjectIdentifier * pOidDst,
    AsnObjectIdentifier * pOidSrc
    );

SNMPAPI
SNMP_FUNC_TYPE
SnmpUtilOidAppend(
    AsnObjectIdentifier * pOidDst,
    AsnObjectIdentifier * pOidSrc
    );

SNMPAPI
SNMP_FUNC_TYPE
SnmpUtilOidNCmp(
    AsnObjectIdentifier * pOid1,
    AsnObjectIdentifier * pOid2,
    UINT                  nSubIds
    );

SNMPAPI
SNMP_FUNC_TYPE
SnmpUtilOidCmp(
    AsnObjectIdentifier * pOid1,
    AsnObjectIdentifier * pOid2
    );

VOID
SNMP_FUNC_TYPE
SnmpUtilOidFree(
    AsnObjectIdentifier * pOid
    );

SNMPAPI
SNMP_FUNC_TYPE
SnmpUtilOctetsCmp(
    AsnOctetString * pOctets1,
    AsnOctetString * pOctets2
    );

SNMPAPI
SNMP_FUNC_TYPE
SnmpUtilOctetsNCmp(
    AsnOctetString * pOctets1,
    AsnOctetString * pOctets2,
    UINT             nChars
    );

SNMPAPI
SNMP_FUNC_TYPE
SnmpUtilOctetsCpy(
    AsnOctetString * pOctetsDst,
    AsnOctetString * pOctetsSrc
    );

VOID
SNMP_FUNC_TYPE
SnmpUtilOctetsFree(
    AsnOctetString * pOctets
    );

SNMPAPI
SNMP_FUNC_TYPE
SnmpUtilAsnAnyCpy(
    AsnAny * pAnyDst,
    AsnAny * pAnySrc
    );

VOID
SNMP_FUNC_TYPE
SnmpUtilAsnAnyFree(
    AsnAny * pAny
    );

SNMPAPI
SNMP_FUNC_TYPE
SnmpUtilVarBindCpy(
    SnmpVarBind * pVbDst,
    SnmpVarBind * pVbSrc
    );

VOID
SNMP_FUNC_TYPE
SnmpUtilVarBindFree(
    SnmpVarBind * pVb
    );

SNMPAPI
SNMP_FUNC_TYPE
SnmpUtilVarBindListCpy(
    SnmpVarBindList * pVblDst,
    SnmpVarBindList * pVblSrc
    );

VOID
SNMP_FUNC_TYPE
SnmpUtilVarBindListFree(
    SnmpVarBindList * pVbl
    );

VOID
SNMP_FUNC_TYPE
SnmpUtilMemFree(
    LPVOID pMem
    );

LPVOID
SNMP_FUNC_TYPE
SnmpUtilMemAlloc(
    UINT nBytes
    );

LPVOID
SNMP_FUNC_TYPE
SnmpUtilMemReAlloc(
    LPVOID pMem,
    UINT   nBytes
    );

LPSTR
SNMP_FUNC_TYPE
SnmpUtilOidToA(
    IN AsnObjectIdentifier *Oid
    );

LPSTR
SNMP_FUNC_TYPE
SnmpUtilIdsToA(
    IN UINT *Ids,
    IN UINT IdLength
    );

VOID
SNMP_FUNC_TYPE
SnmpUtilPrintOid(
    IN AsnObjectIdentifier *Oid
    );

VOID
SNMP_FUNC_TYPE
SnmpUtilPrintAsnAny(
    AsnAny * pAny
    );

DWORD
SNMP_FUNC_TYPE
SnmpSvcGetUptime(
    );

VOID
SNMP_FUNC_TYPE
SnmpSvcSetLogLevel(
    INT nLogLevel
    );

VOID
SNMP_FUNC_TYPE
SnmpSvcSetLogType(
    INT nLogType
    );

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMP Debugging Definitions                                                //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define SNMP_LOG_SILENT                 0x0
#define SNMP_LOG_FATAL                  0x1
#define SNMP_LOG_ERROR                  0x2
#define SNMP_LOG_WARNING                0x3
#define SNMP_LOG_TRACE                  0x4
#define SNMP_LOG_VERBOSE                0x5

#define SNMP_OUTPUT_TO_CONSOLE          0x1
#define SNMP_OUTPUT_TO_LOGFILE          0x2
#define SNMP_OUTPUT_TO_EVENTLOG         0x4  // no longer supported
#define SNMP_OUTPUT_TO_DEBUGGER         0x8

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// SNMP Debugging Prototypes                                                 //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

VOID
SNMP_FUNC_TYPE
SnmpUtilDbgPrint(
    IN INT nLogLevel,   // see log levels above...
    IN LPSTR szFormat,
    IN ...
    );

#if DBG
#define SNMPDBG(_x_)                    SnmpUtilDbgPrint _x_
#else
#define SNMPDBG(_x_)
#endif

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// Miscellaneous definitions                                                 //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define DEFINE_SIZEOF(Array)        (sizeof(Array)/sizeof((Array)[0]))
#define DEFINE_OID(SubIdArray)      {DEFINE_SIZEOF(SubIdArray),(SubIdArray)}
#define DEFINE_NULLOID()            {0,NULL}
#define DEFINE_NULLOCTETS()         {NULL,0,FALSE}

#define DEFAULT_SNMP_PORT_UDP       161
#define DEFAULT_SNMP_PORT_IPX       36879
#define DEFAULT_SNMPTRAP_PORT_UDP   162
#define DEFAULT_SNMPTRAP_PORT_IPX   36880

#define SNMP_MAX_OID_LEN            128

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// API Error Code Definitions                                                //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define SNMP_MEM_ALLOC_ERROR            1
#define SNMP_BERAPI_INVALID_LENGTH      10
#define SNMP_BERAPI_INVALID_TAG         11
#define SNMP_BERAPI_OVERFLOW            12
#define SNMP_BERAPI_SHORT_BUFFER        13
#define SNMP_BERAPI_INVALID_OBJELEM     14
#define SNMP_PDUAPI_UNRECOGNIZED_PDU    20
#define SNMP_PDUAPI_INVALID_ES          21
#define SNMP_PDUAPI_INVALID_GT          22
#define SNMP_AUTHAPI_INVALID_VERSION    30
#define SNMP_AUTHAPI_INVALID_MSG_TYPE   31
#define SNMP_AUTHAPI_TRIV_AUTH_FAILED   32

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// Support for old definitions (support disabled via SNMPSTRICT)             //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#ifndef SNMPSTRICT

#define SNMP_oidcpy                     SnmpUtilOidCpy
#define SNMP_oidappend                  SnmpUtilOidAppend
#define SNMP_oidncmp                    SnmpUtilOidNCmp
#define SNMP_oidcmp                     SnmpUtilOidCmp
#define SNMP_oidfree                    SnmpUtilOidFree

#define SNMP_CopyVarBindList            SnmpUtilVarBindListCpy
#define SNMP_FreeVarBindList            SnmpUtilVarBindListFree
#define SNMP_CopyVarBind                SnmpUtilVarBindCpy
#define SNMP_FreeVarBind                SnmpUtilVarBindFree

#define SNMP_printany                   SnmpUtilPrintAsnAny

#define SNMP_free                       SnmpUtilMemFree
#define SNMP_malloc                     SnmpUtilMemAlloc
#define SNMP_realloc                    SnmpUtilMemReAlloc

#define SNMP_DBG_free                   SnmpUtilMemFree
#define SNMP_DBG_malloc                 SnmpUtilMemAlloc
#define SNMP_DBG_realloc                SnmpUtilMemReAlloc

#define ASN_RFC1155_IPADDRESS           ASN_IPADDRESS
#define ASN_RFC1155_COUNTER             ASN_COUNTER32
#define ASN_RFC1155_GAUGE               ASN_GAUGE32
#define ASN_RFC1155_TIMETICKS           ASN_TIMETICKS
#define ASN_RFC1155_OPAQUE              ASN_OPAQUE
#define ASN_RFC1213_DISPSTRING          ASN_OCTETSTRING

#define ASN_RFC1157_GETREQUEST          SNMP_PDU_GET
#define ASN_RFC1157_GETNEXTREQUEST      SNMP_PDU_GETNEXT
#define ASN_RFC1157_GETRESPONSE         SNMP_PDU_RESPONSE
#define ASN_RFC1157_SETREQUEST          SNMP_PDU_SET
#define ASN_RFC1157_TRAP                SNMP_PDU_V1TRAP

#define ASN_CONTEXTSPECIFIC             ASN_CONTEXT
#define ASN_PRIMATIVE                   ASN_PRIMITIVE

#define RFC1157VarBindList              SnmpVarBindList
#define RFC1157VarBind                  SnmpVarBind
#define AsnInteger                      AsnInteger32
#define AsnCounter                      AsnCounter32
#define AsnGauge                        AsnGauge32

#endif // SNMPSTRICT

#ifdef __cplusplus
}
#endif

#endif // _INC_SNMP
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SoftPub.h ===
//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//
//  Copyright (C) Microsoft Corporation, 1996 - 1999
//
//  File:       softpub.h
//
//  Contents:   Microsoft Internet Security Authenticode Policy Provider
//
//--------------------------------------------------------------------------

#ifndef SOFTPUB_H
#define SOFTPUB_H

#include <wintrust.h>

#ifdef __cplusplus
extern "C"
{
#endif

#include <pshpack8.h>

//////////////////////////////////////////////////////////////////////////////
//
// Softpub Policy Provider defines
//----------------------------------------------------------------------------
//  The following are definitions of the Microsoft Authenticode Policy Provider
//  (WINTRUST.DLL's Policy Provider)
//

#define SP_POLICY_PROVIDER_DLL_NAME         L"WINTRUST.DLL"

//////////////////////////////////////////////////////////////////////////////
//
// WINTRUST_ACTION_GENERIC_VERIFY_V2 Guid  (Authenticode)
//----------------------------------------------------------------------------
//  Assigned to the pgActionID parameter of WinVerifyTrust to verify the
//  authenticity of a file/object using the Microsoft Authenticode
//  Policy Provider,
//
//          {00AAC56B-CD44-11d0-8CC2-00C04FC295EE}
//
#define WINTRUST_ACTION_GENERIC_VERIFY_V2                       \
            { 0xaac56b,                                         \
              0xcd44,                                           \
              0x11d0,                                           \
              { 0x8c, 0xc2, 0x0, 0xc0, 0x4f, 0xc2, 0x95, 0xee } \
            }

#define SP_INIT_FUNCTION                    L"SoftpubInitialize"
#define SP_OBJTRUST_FUNCTION                L"SoftpubLoadMessage"
#define SP_SIGTRUST_FUNCTION                L"SoftpubLoadSignature"
#define SP_CHKCERT_FUNCTION                 L"SoftpubCheckCert"
#define SP_FINALPOLICY_FUNCTION             L"SoftpubAuthenticode"
#define SP_CLEANUPPOLICY_FUNCTION           L"SoftpubCleanup"

//////////////////////////////////////////////////////////////////////////////
//
// WINTRUST_ACTION_TRUSTPROVIDER_TEST (Authenticode TEST)
//----------------------------------------------------------------------------
//  Assigned to the pgActionID parameter of WinVerifyTrust to dump
//  the CRYPT_PROVIDER_DATA structure to a file after calling the
//  Authenticode Policy Provider.
//
//          {573E31F8-DDBA-11d0-8CCB-00C04FC295EE}
//
#define WINTRUST_ACTION_TRUSTPROVIDER_TEST                      \
            { 0x573e31f8,                                       \
              0xddba,                                           \
              0x11d0,                                           \
              { 0x8c, 0xcb, 0x0, 0xc0, 0x4f, 0xc2, 0x95, 0xee } \
            }

#define SP_TESTDUMPPOLICY_FUNCTION_TEST     L"SoftpubDumpStructure"


//////////////////////////////////////////////////////////////////////////////
//
// WINTRUST_ACTION_GENERIC_CERT_VERIFY
//----------------------------------------------------------------------------
//  Assigned to the pgActionID parameter of WinVerifyTrust to verify
//  a certificate chain only.  This is only valid when passing in a
//  certificate context in the WinVerifyTrust input structures.
//
//          {189A3842-3041-11d1-85E1-00C04FC295EE}
//
#define WINTRUST_ACTION_GENERIC_CERT_VERIFY                     \
            { 0x189a3842,                                       \
              0x3041,                                           \
              0x11d1,                                           \
              { 0x85, 0xe1, 0x0, 0xc0, 0x4f, 0xc2, 0x95, 0xee } \
            }

#define SP_GENERIC_CERT_INIT_FUNCTION       L"SoftpubDefCertInit"


//////////////////////////////////////////////////////////////////////////////
//
// WINTRUST_ACTION_GENERIC_CHAIN_VERIFY
//----------------------------------------------------------------------------
//  Assigned to the pgActionID parameter of WinVerifyTrust to verify
//  certificate chains created from any object type: file, cert, signer, ...
//  A callback is provided to implement the final chain policy using
//  the chain context for each signer and counter signer.
//
//          {fc451c16-ac75-11d1-b4b8-00c04fb66ea0}
//
#define WINTRUST_ACTION_GENERIC_CHAIN_VERIFY                    \
            { 0xfc451c16,                                       \
              0xac75,                                           \
              0x11d1,                                           \
              { 0xb4, 0xb8, 0x00, 0xc0, 0x4f, 0xb6, 0x6e, 0xa0 }\
            }
#define GENERIC_CHAIN_FINALPOLICY_FUNCTION      L"GenericChainFinalProv"
#define GENERIC_CHAIN_CERTTRUST_FUNCTION        L"GenericChainCertificateTrust"


typedef struct _WTD_GENERIC_CHAIN_POLICY_SIGNER_INFO
    WTD_GENERIC_CHAIN_POLICY_SIGNER_INFO,
        *PWTD_GENERIC_CHAIN_POLICY_SIGNER_INFO;

struct _WTD_GENERIC_CHAIN_POLICY_SIGNER_INFO {
    union {
        DWORD                                   cbStruct;
        DWORD                                   cbSize;
    };
    PCCERT_CHAIN_CONTEXT                    pChainContext;

    // SGNR_TYPE_TIMESTAMP defined in wintrust.h
    DWORD                                   dwSignerType;
    PCMSG_SIGNER_INFO                       pMsgSignerInfo;
    DWORD                                   dwError;

    DWORD                                   cCounterSigner;
    PWTD_GENERIC_CHAIN_POLICY_SIGNER_INFO   *rgpCounterSigner;
};

typedef HRESULT (WINAPI *PFN_WTD_GENERIC_CHAIN_POLICY_CALLBACK)(
    IN PCRYPT_PROVIDER_DATA pProvData,
    IN DWORD dwStepError,
    IN DWORD dwRegPolicySettings,
    IN DWORD cSigner,
    IN PWTD_GENERIC_CHAIN_POLICY_SIGNER_INFO *rgpSigner,
    IN void *pvPolicyArg
    );

// The fields in the following data structure are passed to
// CertGetCertificateChain().
typedef struct _WTD_GENERIC_CHAIN_POLICY_CREATE_INFO {
    union {
        DWORD                                   cbStruct;
        DWORD                                   cbSize;
    };

    HCERTCHAINENGINE                        hChainEngine;
    PCERT_CHAIN_PARA                        pChainPara;
    DWORD                                   dwFlags;
    void                                    *pvReserved;
} WTD_GENERIC_CHAIN_POLICY_CREATE_INFO, *PWTD_GENERIC_CHAIN_POLICY_CREATE_INFO;

typedef struct _WTD_GENERIC_CHAIN_POLICY_DATA {
    union {
        DWORD                                   cbStruct;
        DWORD                                   cbSize;
    };

    PWTD_GENERIC_CHAIN_POLICY_CREATE_INFO   pSignerChainInfo;
    PWTD_GENERIC_CHAIN_POLICY_CREATE_INFO   pCounterSignerChainInfo;
    PFN_WTD_GENERIC_CHAIN_POLICY_CALLBACK   pfnPolicyCallback;
    void                                    *pvPolicyArg;
} WTD_GENERIC_CHAIN_POLICY_DATA, *PWTD_GENERIC_CHAIN_POLICY_DATA;


//////////////////////////////////////////////////////////////////////////////
//
// HTTPSPROV_ACTION Guid  (Authenticode add-on)
//----------------------------------------------------------------------------
//  Assigned to the pgActionID parameter of WinVerifyTrust to verify the
//  SSL/PCT connections through IE.
//
//          {573E31F8-AABA-11d0-8CCB-00C04FC295EE}
//
#define HTTPSPROV_ACTION                                        \
            { 0x573e31f8,                                       \
              0xaaba,                                           \
              0x11d0,                                           \
              { 0x8c, 0xcb, 0x0, 0xc0, 0x4f, 0xc2, 0x95, 0xee } \
            }

#define HTTPS_FINALPOLICY_FUNCTION          L"HTTPSFinalProv"
#define HTTPS_CHKCERT_FUNCTION              L"HTTPSCheckCertProv"
#define HTTPS_CERTTRUST_FUNCTION            L"HTTPSCertificateTrust"





//////////////////////////////////////////////////////////////////////////////
//
// OFFICESIGN_ACTION_VERIFY Guid  (Authenticode add-on)
//----------------------------------------------------------------------------
//  Assigned to the pgActionID parameter of WinVerifyTrust to verify the
//  authenticity of a Structured Storage file using the Microsoft Office
//  Authenticode add-on Policy Provider,
//
//          {5555C2CD-17FB-11d1-85C4-00C04FC295EE}
//
#define     OFFICESIGN_ACTION_VERIFY                                    \
                { 0x5555c2cd,                                           \
                  0x17fb,                                               \
                  0x11d1,                                               \
                  { 0x85, 0xc4, 0x0, 0xc0, 0x4f, 0xc2, 0x95, 0xee }     \
                }

#define     OFFICE_POLICY_PROVIDER_DLL_NAME             SP_POLICY_PROVIDER_DLL_NAME
#define     OFFICE_INITPROV_FUNCTION                    L"OfficeInitializePolicy"
#define     OFFICE_CLEANUPPOLICY_FUNCTION               L"OfficeCleanupPolicy"


//////////////////////////////////////////////////////////////////////////////
//
// DRIVER_ACTION_VERIFY Guid  (Authenticode add-on)
//----------------------------------------------------------------------------
//  Assigned to the pgActionID parameter of WinVerifyTrust to verify the
//  authenticity of a WHQL signed driver.  This is an Authenticode add-on
//  Policy Provider,
//
//          {F750E6C3-38EE-11d1-85E5-00C04FC295EE}
//
#define     DRIVER_ACTION_VERIFY                                        \
                { 0xf750e6c3,                                           \
                  0x38ee,                                               \
                  0x11d1,                                               \
                  { 0x85, 0xe5, 0x0, 0xc0, 0x4f, 0xc2, 0x95, 0xee }     \
                }

#define     DRIVER_INITPROV_FUNCTION                    L"DriverInitializePolicy"
#define     DRIVER_FINALPOLPROV_FUNCTION                L"DriverFinalPolicy"
#define     DRIVER_CLEANUPPOLICY_FUNCTION               L"DriverCleanupPolicy"

typedef struct DRIVER_VER_MAJORMINOR_
{
    DWORD           dwMajor;
    DWORD           dwMinor;
    
} DRIVER_VER_MAJORMINOR;

typedef struct DRIVER_VER_INFO_
{
    DWORD                               cbStruct;               // IN - set to sizeof(DRIVER_VER_INFO)

    ULONG_PTR                           dwReserved1;            // IN - set to NULL
    ULONG_PTR                           dwReserved2;            // IN - set to NULL

    DWORD                               dwPlatform;             // IN - OPTIONAL: platform to use
    DWORD                               dwVersion;              // IN - OPTIONAL: major version to use (NOT USED!!!)

    WCHAR                               wszVersion[MAX_PATH];   // OUT: version string from catalog file
    WCHAR                               wszSignedBy[MAX_PATH];  // OUT: signer display name from certificate
    PCCERT_CONTEXT                      pcSignerCertContext;    // OUT: client MUST free this!!!

    DRIVER_VER_MAJORMINOR               sOSVersionLow;          // IN - OPTIONAL: lowest compatible version
    DRIVER_VER_MAJORMINOR               sOSVersionHigh;         // IN - OPTIONAL: highest compatible version

    DWORD                               dwBuildNumberLow;       // IN - OPTIONAL: added to sOSVersionLow as 
                                                                //      third node for finer version granularity
    DWORD                               dwBuildNumberHigh;      // IN - OPTIONAL: added to sOSVersionHigh as 
                                                                //      third node for finer version granularity

    //
    // NOTES:
    // 1. dwPlatform _must_ be set to a non-zero value in order for proper version checking to be done.
    // 2. dwVersion is no longer used, sOSVersionLow and sOsVersionhigh have taken its place
    // 3. If dwBuildNumberLow and dwBuildNumberHigh are 0, they are unused.  Otherwise, they are considered 
    //    to be extensions of sOSVersionLow and sOSVersionHigh respectively.  Make special note of this when
    //    reading note 4.
    // 4. If you are validating against a single OS version, then set both sOSVersionLow and sOSVersion high,
    //    to the version you are validating against.  If sOSVersionLow and sOSVersionHigh are different, then
    //    the validation is done for the whole version range, from sOSVersionLow to sOSVersionHigh.
    //

} DRIVER_VER_INFO, *PDRIVER_VER_INFO;

#include <poppack.h>


#ifdef __cplusplus
}
#endif

#endif // SOFTPUB_H
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\sql.h ===
//-----------------------------------------------------------------------------
// File:			sql.h
//
// Copyright:		Copyright (c) 1990-1999 Microsoft Corporation
//
// Contents: 		This is the the main include for ODBC Core functions.
//
// Comments: 		preconditions: #include "windows.h"
//
//-----------------------------------------------------------------------------

#ifndef __SQL
#define __SQL

/*
* ODBCVER  ODBC version number (0x0351).   To exclude
*          definitions introduced in version 3.5 (or above)
*          #define ODBCVER 0x0300 before #including <sql.h>
*/
#ifndef ODBCVER
#define ODBCVER 0x0351
#endif

#ifndef __SQLTYPES
#include "sqltypes.h"
#endif

#ifdef __cplusplus
extern "C" { 			/* Assume C declarations for C++   */
#endif  /* __cplusplus */

/* special length/indicator values */
#define SQL_NULL_DATA             (-1)
#define SQL_DATA_AT_EXEC          (-2)


/* return values from functions */
#define SQL_SUCCESS                0
#define SQL_SUCCESS_WITH_INFO      1
#if (ODBCVER >= 0x0300)
#define SQL_NO_DATA              100
#endif
#define SQL_ERROR                 (-1)
#define SQL_INVALID_HANDLE        (-2)

#define SQL_STILL_EXECUTING        2
#define SQL_NEED_DATA             99

/* test for SQL_SUCCESS or SQL_SUCCESS_WITH_INFO */
#define SQL_SUCCEEDED(rc) (((rc)&(~1))==0)

/* flags for null-terminated string */
#define SQL_NTS                   (-3)
#define SQL_NTSL                  (-3L)

/* maximum message length */
#define SQL_MAX_MESSAGE_LENGTH   512

/* date/time length constants */
#if (ODBCVER >= 0x0300)
#define SQL_DATE_LEN           10
#define SQL_TIME_LEN            8  /* add P+1 if precision is nonzero */
#define SQL_TIMESTAMP_LEN      19  /* add P+1 if precision is nonzero */
#endif

/* handle type identifiers */
#if (ODBCVER >= 0x0300)
#define SQL_HANDLE_ENV             1
#define SQL_HANDLE_DBC             2
#define SQL_HANDLE_STMT            3
#define SQL_HANDLE_DESC            4
#endif

/* environment attribute */
#if (ODBCVER >= 0x0300)
#define SQL_ATTR_OUTPUT_NTS    10001
#endif

/* connection attributes */
#if (ODBCVER >= 0x0300)
#define SQL_ATTR_AUTO_IPD      10001
#define SQL_ATTR_METADATA_ID   10014
#endif  /* ODBCVER >= 0x0300 */

/* statement attributes */
#if (ODBCVER >= 0x0300)
#define SQL_ATTR_APP_ROW_DESC       10010
#define SQL_ATTR_APP_PARAM_DESC     10011
#define SQL_ATTR_IMP_ROW_DESC       10012
#define SQL_ATTR_IMP_PARAM_DESC     10013
#define SQL_ATTR_CURSOR_SCROLLABLE  (-1)
#define SQL_ATTR_CURSOR_SENSITIVITY (-2)
#endif

/* SQL_ATTR_CURSOR_SCROLLABLE values */
#if (ODBCVER >= 0x0300)
#define SQL_NONSCROLLABLE			0
#define SQL_SCROLLABLE				1
#endif  /* ODBCVER >= 0x0300 */

/* identifiers of fields in the SQL descriptor */
#if (ODBCVER >= 0x0300)
#define SQL_DESC_COUNT                  1001
#define SQL_DESC_TYPE                   1002
#define SQL_DESC_LENGTH                 1003
#define SQL_DESC_OCTET_LENGTH_PTR       1004
#define SQL_DESC_PRECISION              1005
#define SQL_DESC_SCALE                  1006
#define SQL_DESC_DATETIME_INTERVAL_CODE 1007
#define SQL_DESC_NULLABLE               1008
#define SQL_DESC_INDICATOR_PTR          1009
#define SQL_DESC_DATA_PTR               1010
#define SQL_DESC_NAME                   1011
#define SQL_DESC_UNNAMED                1012
#define SQL_DESC_OCTET_LENGTH           1013
#define SQL_DESC_ALLOC_TYPE             1099
#endif

/* identifiers of fields in the diagnostics area */
#if (ODBCVER >= 0x0300)
#define SQL_DIAG_RETURNCODE        1
#define SQL_DIAG_NUMBER            2
#define SQL_DIAG_ROW_COUNT         3
#define SQL_DIAG_SQLSTATE          4
#define SQL_DIAG_NATIVE            5
#define SQL_DIAG_MESSAGE_TEXT      6
#define SQL_DIAG_DYNAMIC_FUNCTION  7
#define SQL_DIAG_CLASS_ORIGIN      8
#define SQL_DIAG_SUBCLASS_ORIGIN   9
#define SQL_DIAG_CONNECTION_NAME  10
#define SQL_DIAG_SERVER_NAME      11
#define SQL_DIAG_DYNAMIC_FUNCTION_CODE 12
#endif

/* dynamic function codes */
#if (ODBCVER >= 0x0300)
#define SQL_DIAG_ALTER_DOMAIN			3
#define SQL_DIAG_ALTER_TABLE            4
#define SQL_DIAG_CALL					7
#define SQL_DIAG_CREATE_ASSERTION		6
#define SQL_DIAG_CREATE_CHARACTER_SET	8
#define SQL_DIAG_CREATE_COLLATION		10
#define SQL_DIAG_CREATE_DOMAIN			23
#define SQL_DIAG_CREATE_INDEX          (-1)
#define SQL_DIAG_CREATE_SCHEMA			64
#define SQL_DIAG_CREATE_TABLE          77
#define SQL_DIAG_CREATE_TRANSLATION		79
#define SQL_DIAG_CREATE_VIEW           84
#define SQL_DIAG_DELETE_WHERE          19
#define	SQL_DIAG_DROP_ASSERTION			24
#define	SQL_DIAG_DROP_CHARACTER_SET		25
#define	SQL_DIAG_DROP_COLLATION			26
#define	SQL_DIAG_DROP_DOMAIN			27
#define SQL_DIAG_DROP_INDEX            (-2)
#define SQL_DIAG_DROP_SCHEMA			31
#define SQL_DIAG_DROP_TABLE            32
#define SQL_DIAG_DROP_TRANSLATION      33
#define SQL_DIAG_DROP_VIEW             36
#define SQL_DIAG_DYNAMIC_DELETE_CURSOR 38
#define SQL_DIAG_DYNAMIC_UPDATE_CURSOR 81
#define SQL_DIAG_GRANT                 48
#define SQL_DIAG_INSERT                50
#define SQL_DIAG_REVOKE                59
#define SQL_DIAG_SELECT_CURSOR         85
#define SQL_DIAG_UNKNOWN_STATEMENT      0
#define SQL_DIAG_UPDATE_WHERE          82
#endif  /* ODBCVER >= 0x0300 */

/* SQL data type codes */
#define	SQL_UNKNOWN_TYPE	0
#define SQL_CHAR            1
#define SQL_NUMERIC         2
#define SQL_DECIMAL         3
#define SQL_INTEGER         4
#define SQL_SMALLINT        5
#define SQL_FLOAT           6
#define SQL_REAL            7
#define SQL_DOUBLE          8
#if (ODBCVER >= 0x0300)
#define SQL_DATETIME        9
#endif
#define SQL_VARCHAR        12

/* One-parameter shortcuts for date/time data types */
#if (ODBCVER >= 0x0300)
#define SQL_TYPE_DATE      91
#define SQL_TYPE_TIME      92
#define SQL_TYPE_TIMESTAMP 93
#endif

/* Statement attribute values for cursor sensitivity */
#if (ODBCVER >= 0x0300)
#define SQL_UNSPECIFIED     0
#define SQL_INSENSITIVE     1
#define SQL_SENSITIVE       2
#endif

/* GetTypeInfo() request for all data types */
#define SQL_ALL_TYPES       0

/* Default conversion code for SQLBindCol(), SQLBindParam() and SQLGetData() */
#if (ODBCVER >= 0x0300)
#define SQL_DEFAULT        99
#endif

/* SQLSQLLEN GetData() code indicating that the application row descriptor
 * specifies the data type
 */
#if (ODBCVER >= 0x0300)
#define SQL_ARD_TYPE      (-99)
#endif

/* SQL date/time type subcodes */
#if (ODBCVER >= 0x0300)
#define SQL_CODE_DATE       1
#define SQL_CODE_TIME       2
#define SQL_CODE_TIMESTAMP  3
#endif

/* CLI option values */
#if (ODBCVER >= 0x0300)
#define SQL_FALSE           0
#define SQL_TRUE            1
#endif

/* values of NULLABLE field in descriptor */
#define SQL_NO_NULLS        0
#define SQL_NULLABLE        1

/* Value returned by SQLGetTypeInfo() to denote that it is
 * not known whether or not a data type supports null values.
 */
#define SQL_NULLABLE_UNKNOWN  2

/* Values returned by SQLGetTypeInfo() to show WHERE clause
 * supported
 */
#if (ODBCVER >= 0x0300)
#define SQL_PRED_NONE     0
#define SQL_PRED_CHAR     1
#define SQL_PRED_BASIC    2
#endif

/* values of UNNAMED field in descriptor */
#if (ODBCVER >= 0x0300)
#define SQL_NAMED           0
#define SQL_UNNAMED         1
#endif

/* values of ALLOC_TYPE field in descriptor */
#if (ODBCVER >= 0x0300)
#define SQL_DESC_ALLOC_AUTO 1
#define SQL_DESC_ALLOC_USER 2
#endif

/* FreeStmt() options */
#define SQL_CLOSE           0
#define SQL_DROP            1
#define SQL_UNBIND          2
#define SQL_RESET_PARAMS    3

/* Codes used for FetchOrientation in SQLFetchScroll(), 
   and in SQLDataSources() 
*/
#define SQL_FETCH_NEXT      1
#define SQL_FETCH_FIRST     2

/* Other codes used for FetchOrientation in SQLFetchScroll() */
#define SQL_FETCH_LAST      3
#define SQL_FETCH_PRIOR     4
#define SQL_FETCH_ABSOLUTE  5
#define SQL_FETCH_RELATIVE  6

/* SQLEndTran() options */
#define SQL_COMMIT          0
#define SQL_ROLLBACK        1

/* null handles returned by SQLAllocHandle() */
#define SQL_NULL_HENV       0
#define SQL_NULL_HDBC       0
#define SQL_NULL_HSTMT      0
#if (ODBCVER >= 0x0300)
#define SQL_NULL_HDESC      0
#endif

/* null handle used in place of parent handle when allocating HENV */
#if (ODBCVER >= 0x0300)
#define SQL_NULL_HANDLE     0L
#endif

/* Values that may appear in the result set of SQLSpecialColumns() */
#define SQL_SCOPE_CURROW    0
#define SQL_SCOPE_TRANSACTION 1
#define SQL_SCOPE_SESSION   2

#define SQL_PC_UNKNOWN      0
#if (ODBCVER >= 0x0300)
#define SQL_PC_NON_PSEUDO   1
#endif
#define SQL_PC_PSEUDO       2

/* Reserved value for the IdentifierType argument of SQLSpecialColumns() */
#if (ODBCVER >= 0x0300)
#define SQL_ROW_IDENTIFIER  1
#endif

/* Reserved values for UNIQUE argument of SQLStatistics() */
#define SQL_INDEX_UNIQUE    0
#define SQL_INDEX_ALL       1

/* Values that may appear in the result set of SQLStatistics() */
#define SQL_INDEX_CLUSTERED 1
#define SQL_INDEX_HASHED    2
#define SQL_INDEX_OTHER     3

/* SQLGetFunctions() values to identify ODBC APIs */
#define SQL_API_SQLALLOCCONNECT         1
#define SQL_API_SQLALLOCENV             2
#if (ODBCVER >= 0x0300)
#define SQL_API_SQLALLOCHANDLE       1001
#endif
#define SQL_API_SQLALLOCSTMT            3
#define SQL_API_SQLBINDCOL              4
#if (ODBCVER >= 0x0300)
#define SQL_API_SQLBINDPARAM         1002
#endif
#define SQL_API_SQLCANCEL               5
#if (ODBCVER >= 0x0300)
#define SQL_API_SQLCLOSECURSOR       1003
#define SQL_API_SQLCOLATTRIBUTE         6
#endif
#define SQL_API_SQLCOLUMNS             40
#define SQL_API_SQLCONNECT              7
#if (ODBCVER >= 0x0300)
#define SQL_API_SQLCOPYDESC          1004
#endif
#define SQL_API_SQLDATASOURCES         57
#define SQL_API_SQLDESCRIBECOL          8
#define SQL_API_SQLDISCONNECT           9
#if (ODBCVER >= 0x0300)
#define SQL_API_SQLENDTRAN           1005
#endif
#define SQL_API_SQLERROR               10
#define SQL_API_SQLEXECDIRECT          11
#define SQL_API_SQLEXECUTE             12
#define SQL_API_SQLFETCH               13
#if (ODBCVER >= 0x0300)
#define SQL_API_SQLFETCHSCROLL       1021
#endif
#define SQL_API_SQLFREECONNECT         14
#define SQL_API_SQLFREEENV             15
#if (ODBCVER >= 0x0300)
#define SQL_API_SQLFREEHANDLE        1006
#endif
#define SQL_API_SQLFREESTMT            16
#if (ODBCVER >= 0x0300)
#define SQL_API_SQLGETCONNECTATTR    1007
#endif
#define SQL_API_SQLGETCONNECTOPTION    42
#define SQL_API_SQLGETCURSORNAME       17
#define SQL_API_SQLGETDATA             43
#if (ODBCVER >= 0x0300)
#define SQL_API_SQLGETDESCFIELD      1008
#define SQL_API_SQLGETDESCREC        1009
#define SQL_API_SQLGETDIAGFIELD      1010
#define SQL_API_SQLGETDIAGREC        1011
#define SQL_API_SQLGETENVATTR        1012
#endif
#define SQL_API_SQLGETFUNCTIONS        44
#define SQL_API_SQLGETINFO             45
#if (ODBCVER >= 0x0300)
#define SQL_API_SQLGETSTMTATTR       1014
#endif
#define SQL_API_SQLGETSTMTOPTION       46
#define SQL_API_SQLGETTYPEINFO         47
#define SQL_API_SQLNUMRESULTCOLS       18
#define SQL_API_SQLPARAMDATA           48
#define SQL_API_SQLPREPARE             19
#define SQL_API_SQLPUTDATA             49
#define SQL_API_SQLROWCOUNT            20
#if (ODBCVER >= 0x0300)
#define SQL_API_SQLSETCONNECTATTR    1016
#endif
#define SQL_API_SQLSETCONNECTOPTION    50
#define SQL_API_SQLSETCURSORNAME       21
#if (ODBCVER >= 0x0300)
#define SQL_API_SQLSETDESCFIELD      1017
#define SQL_API_SQLSETDESCREC        1018
#define SQL_API_SQLSETENVATTR        1019
#endif
#define SQL_API_SQLSETPARAM            22
#if (ODBCVER >= 0x0300)
#define SQL_API_SQLSETSTMTATTR       1020
#endif
#define SQL_API_SQLSETSTMTOPTION       51
#define SQL_API_SQLSPECIALCOLUMNS      52
#define SQL_API_SQLSTATISTICS          53
#define SQL_API_SQLTABLES              54
#define SQL_API_SQLTRANSACT            23

/* Information requested by SQLGetInfo() */
#if (ODBCVER >= 0x0300)
#define SQL_MAX_DRIVER_CONNECTIONS           0
#define SQL_MAXIMUM_DRIVER_CONNECTIONS		SQL_MAX_DRIVER_CONNECTIONS
#define SQL_MAX_CONCURRENT_ACTIVITIES        1
#define SQL_MAXIMUM_CONCURRENT_ACTIVITIES	SQL_MAX_CONCURRENT_ACTIVITIES
#endif
#define SQL_DATA_SOURCE_NAME                 2
#define SQL_FETCH_DIRECTION                  8
#define SQL_SERVER_NAME                     13
#define SQL_SEARCH_PATTERN_ESCAPE           14
#define SQL_DBMS_NAME                       17
#define SQL_DBMS_VER                        18
#define SQL_ACCESSIBLE_TABLES               19
#define SQL_ACCESSIBLE_PROCEDURES        	20
#define SQL_CURSOR_COMMIT_BEHAVIOR          23
#define SQL_DATA_SOURCE_READ_ONLY           25
#define SQL_DEFAULT_TXN_ISOLATION           26
#define SQL_IDENTIFIER_CASE                 28
#define SQL_IDENTIFIER_QUOTE_CHAR           29
#define SQL_MAX_COLUMN_NAME_LEN             30
#define SQL_MAXIMUM_COLUMN_NAME_LENGTH		SQL_MAX_COLUMN_NAME_LEN
#define SQL_MAX_CURSOR_NAME_LEN             31
#define SQL_MAXIMUM_CURSOR_NAME_LENGTH		SQL_MAX_CURSOR_NAME_LEN
#define SQL_MAX_SCHEMA_NAME_LEN             32
#define SQL_MAXIMUM_SCHEMA_NAME_LENGTH		SQL_MAX_SCHEMA_NAME_LEN
#define SQL_MAX_CATALOG_NAME_LEN            34
#define SQL_MAXIMUM_CATALOG_NAME_LENGTH		SQL_MAX_CATALOG_NAME_LEN
#define SQL_MAX_TABLE_NAME_LEN              35
#define SQL_SCROLL_CONCURRENCY              43
#define SQL_TXN_CAPABLE                     46
#define SQL_TRANSACTION_CAPABLE				SQL_TXN_CAPABLE
#define SQL_USER_NAME                       47
#define SQL_TXN_ISOLATION_OPTION            72
#define SQL_TRANSACTION_ISOLATION_OPTION	SQL_TXN_ISOLATION_OPTION
#define SQL_INTEGRITY                       73
#define SQL_GETDATA_EXTENSIONS              81
#define SQL_NULL_COLLATION                  85
#define SQL_ALTER_TABLE                     86
#define SQL_ORDER_BY_COLUMNS_IN_SELECT      90
#define SQL_SPECIAL_CHARACTERS              94
#define SQL_MAX_COLUMNS_IN_GROUP_BY         97
#define SQL_MAXIMUM_COLUMNS_IN_GROUP_BY		SQL_MAX_COLUMNS_IN_GROUP_BY
#define SQL_MAX_COLUMNS_IN_INDEX            98
#define SQL_MAXIMUM_COLUMNS_IN_INDEX		SQL_MAX_COLUMNS_IN_INDEX
#define SQL_MAX_COLUMNS_IN_ORDER_BY         99
#define SQL_MAXIMUM_COLUMNS_IN_ORDER_BY		SQL_MAX_COLUMNS_IN_ORDER_BY
#define SQL_MAX_COLUMNS_IN_SELECT          100
#define SQL_MAXIMUM_COLUMNS_IN_SELECT	   SQL_MAX_COLUMNS_IN_SELECT
#define SQL_MAX_COLUMNS_IN_TABLE           101
#define SQL_MAX_INDEX_SIZE                 102
#define SQL_MAXIMUM_INDEX_SIZE			   SQL_MAX_INDEX_SIZE
#define SQL_MAX_ROW_SIZE                   104
#define SQL_MAXIMUM_ROW_SIZE			   SQL_MAX_ROW_SIZE
#define SQL_MAX_STATEMENT_LEN              105
#define SQL_MAXIMUM_STATEMENT_LENGTH	   SQL_MAX_STATEMENT_LEN
#define SQL_MAX_TABLES_IN_SELECT           106
#define SQL_MAXIMUM_TABLES_IN_SELECT	   SQL_MAX_TABLES_IN_SELECT
#define SQL_MAX_USER_NAME_LEN              107
#define SQL_MAXIMUM_USER_NAME_LENGTH	   SQL_MAX_USER_NAME_LEN
#if (ODBCVER >= 0x0300)
#define SQL_OJ_CAPABILITIES                115
#define SQL_OUTER_JOIN_CAPABILITIES		   SQL_OJ_CAPABILITIES
#endif /* ODBCVER >= 0x0300 */

#if (ODBCVER >= 0x0300)
#define SQL_XOPEN_CLI_YEAR               10000
#define SQL_CURSOR_SENSITIVITY           10001
#define SQL_DESCRIBE_PARAMETER           10002
#define SQL_CATALOG_NAME                 10003
#define SQL_COLLATION_SEQ                10004
#define SQL_MAX_IDENTIFIER_LEN           10005
#define SQL_MAXIMUM_IDENTIFIER_LENGTH	 SQL_MAX_IDENTIFIER_LEN
#endif /* ODBCVER >= 0x0300 */

/* SQL_ALTER_TABLE bitmasks */
#if (ODBCVER >= 0x0200)
#define SQL_AT_ADD_COLUMN                   	0x00000001L
#define SQL_AT_DROP_COLUMN                  	0x00000002L
#endif /* ODBCVER >= 0x0200 */

#if (ODBCVER >= 0x0300)
#define SQL_AT_ADD_CONSTRAINT               	0x00000008L

/* The following bitmasks are ODBC extensions and defined in sqlext.h
*#define	SQL_AT_COLUMN_SINGLE					0x00000020L	
*#define	SQL_AT_ADD_COLUMN_DEFAULT				0x00000040L
*#define	SQL_AT_ADD_COLUMN_COLLATION				0x00000080L
*#define	SQL_AT_SET_COLUMN_DEFAULT				0x00000100L
*#define	SQL_AT_DROP_COLUMN_DEFAULT				0x00000200L
*#define	SQL_AT_DROP_COLUMN_CASCADE				0x00000400L
*#define	SQL_AT_DROP_COLUMN_RESTRICT				0x00000800L
*#define SQL_AT_ADD_TABLE_CONSTRAINT				0x00001000L		
*#define SQL_AT_DROP_TABLE_CONSTRAINT_CASCADE		0x00002000L		
*#define SQL_AT_DROP_TABLE_CONSTRAINT_RESTRICT		0x00004000L		
*#define SQL_AT_CONSTRAINT_NAME_DEFINITION			0x00008000L
*#define SQL_AT_CONSTRAINT_INITIALLY_DEFERRED		0x00010000L
*#define SQL_AT_CONSTRAINT_INITIALLY_IMMEDIATE		0x00020000L
*#define SQL_AT_CONSTRAINT_DEFERRABLE				0x00040000L
*#define SQL_AT_CONSTRAINT_NON_DEFERRABLE			0x00080000L
*/
#endif  /* ODBCVER >= 0x0300 */


/* SQL_ASYNC_MODE values */
#if (ODBCVER >= 0x0300)
#define SQL_AM_NONE                         0
#define SQL_AM_CONNECTION                   1
#define SQL_AM_STATEMENT                    2
#endif

/* SQL_CURSOR_COMMIT_BEHAVIOR values */
#define SQL_CB_DELETE                       0
#define SQL_CB_CLOSE                        1
#define SQL_CB_PRESERVE                     2

/* SQL_FETCH_DIRECTION bitmasks */
#define SQL_FD_FETCH_NEXT                   0x00000001L
#define SQL_FD_FETCH_FIRST                  0x00000002L
#define SQL_FD_FETCH_LAST                   0x00000004L
#define SQL_FD_FETCH_PRIOR                  0x00000008L
#define SQL_FD_FETCH_ABSOLUTE               0x00000010L
#define SQL_FD_FETCH_RELATIVE               0x00000020L

/* SQL_GETDATA_EXTENSIONS bitmasks */
#define SQL_GD_ANY_COLUMN                   0x00000001L
#define SQL_GD_ANY_ORDER                    0x00000002L

/* SQL_IDENTIFIER_CASE values */
#define SQL_IC_UPPER                        1
#define SQL_IC_LOWER                        2
#define SQL_IC_SENSITIVE                    3
#define SQL_IC_MIXED                        4

/* SQL_OJ_CAPABILITIES bitmasks */
/* NB: this means 'outer join', not what  you may be thinking */


#if (ODBCVER >= 0x0201)
#define SQL_OJ_LEFT                         0x00000001L
#define SQL_OJ_RIGHT                        0x00000002L
#define SQL_OJ_FULL                         0x00000004L
#define SQL_OJ_NESTED                       0x00000008L
#define SQL_OJ_NOT_ORDERED                  0x00000010L
#define SQL_OJ_INNER                        0x00000020L
#define SQL_OJ_ALL_COMPARISON_OPS           0x00000040L
#endif

/* SQL_SCROLL_CONCURRENCY bitmasks */
#define SQL_SCCO_READ_ONLY                  0x00000001L
#define SQL_SCCO_LOCK                       0x00000002L
#define SQL_SCCO_OPT_ROWVER                 0x00000004L
#define SQL_SCCO_OPT_VALUES                 0x00000008L

/* SQL_TXN_CAPABLE values */
#define SQL_TC_NONE                         0
#define SQL_TC_DML                          1
#define SQL_TC_ALL                          2
#define SQL_TC_DDL_COMMIT                   3
#define SQL_TC_DDL_IGNORE                   4

/* SQL_TXN_ISOLATION_OPTION bitmasks */
#define SQL_TXN_READ_UNCOMMITTED            0x00000001L
#define SQL_TRANSACTION_READ_UNCOMMITTED	SQL_TXN_READ_UNCOMMITTED
#define SQL_TXN_READ_COMMITTED              0x00000002L
#define SQL_TRANSACTION_READ_COMMITTED		SQL_TXN_READ_COMMITTED
#define SQL_TXN_REPEATABLE_READ             0x00000004L
#define SQL_TRANSACTION_REPEATABLE_READ		SQL_TXN_REPEATABLE_READ
#define SQL_TXN_SERIALIZABLE                0x00000008L
#define SQL_TRANSACTION_SERIALIZABLE		SQL_TXN_SERIALIZABLE

/* SQL_NULL_COLLATION values */
#define SQL_NC_HIGH                         0
#define SQL_NC_LOW                          1

#ifndef RC_INVOKED

SQLRETURN  SQL_API SQLAllocConnect(SQLHENV EnvironmentHandle,
           SQLHDBC *ConnectionHandle);

SQLRETURN  SQL_API SQLAllocEnv(SQLHENV *EnvironmentHandle);

#if (ODBCVER >= 0x0300)
SQLRETURN  SQL_API SQLAllocHandle(SQLSMALLINT HandleType,
           SQLHANDLE InputHandle, SQLHANDLE *OutputHandle);
#endif

SQLRETURN  SQL_API SQLAllocStmt(SQLHDBC ConnectionHandle,
           SQLHSTMT *StatementHandle);

SQLRETURN  SQL_API SQLBindCol(SQLHSTMT StatementHandle, 
		   SQLUSMALLINT ColumnNumber, SQLSMALLINT TargetType, 
		   SQLPOINTER TargetValue, SQLLEN BufferLength, 
	   	   SQLLEN *StrLen_or_Ind);

#if (ODBCVER >= 0x0300)
SQLRETURN  SQL_API SQLBindParam(SQLHSTMT StatementHandle,
           SQLUSMALLINT ParameterNumber, SQLSMALLINT ValueType,
           SQLSMALLINT ParameterType, SQLULEN LengthPrecision,
           SQLSMALLINT ParameterScale, SQLPOINTER ParameterValue,
           SQLLEN *StrLen_or_Ind);
#endif

SQLRETURN  SQL_API SQLCancel(SQLHSTMT StatementHandle);

#if (ODBCVER >= 0x0300)
SQLRETURN  SQL_API SQLCloseCursor(SQLHSTMT StatementHandle);

SQLRETURN  SQL_API SQLColAttribute (SQLHSTMT StatementHandle,
           SQLUSMALLINT ColumnNumber, SQLUSMALLINT FieldIdentifier,
           SQLPOINTER CharacterAttribute, SQLSMALLINT BufferLength,
           SQLSMALLINT *StringLength, SQLPOINTER NumericAttribute);
#endif


SQLRETURN  SQL_API SQLColumns(SQLHSTMT StatementHandle,
           SQLCHAR *CatalogName, SQLSMALLINT NameLength1,
           SQLCHAR *SchemaName, SQLSMALLINT NameLength2,
           SQLCHAR *TableName, SQLSMALLINT NameLength3,
           SQLCHAR *ColumnName, SQLSMALLINT NameLength4);


SQLRETURN  SQL_API SQLConnect(SQLHDBC ConnectionHandle,
           SQLCHAR *ServerName, SQLSMALLINT NameLength1,
           SQLCHAR *UserName, SQLSMALLINT NameLength2,
           SQLCHAR *Authentication, SQLSMALLINT NameLength3);

#if (ODBCVER >= 0x0300)
SQLRETURN  SQL_API SQLCopyDesc(SQLHDESC SourceDescHandle,
           SQLHDESC TargetDescHandle);
#endif

SQLRETURN  SQL_API SQLDataSources(SQLHENV EnvironmentHandle,
           SQLUSMALLINT Direction, SQLCHAR *ServerName,
           SQLSMALLINT BufferLength1, SQLSMALLINT *NameLength1,
           SQLCHAR *Description, SQLSMALLINT BufferLength2,
           SQLSMALLINT *NameLength2);

SQLRETURN  SQL_API SQLDescribeCol(SQLHSTMT StatementHandle,
           SQLUSMALLINT ColumnNumber, SQLCHAR *ColumnName,
           SQLSMALLINT BufferLength, SQLSMALLINT *NameLength,
           SQLSMALLINT *DataType, SQLULEN *ColumnSize,
           SQLSMALLINT *DecimalDigits, SQLSMALLINT *Nullable);

SQLRETURN  SQL_API SQLDisconnect(SQLHDBC ConnectionHandle);

#if (ODBCVER >= 0x0300)
SQLRETURN  SQL_API SQLEndTran(SQLSMALLINT HandleType, SQLHANDLE Handle,
           SQLSMALLINT CompletionType);
#endif

SQLRETURN  SQL_API SQLError(SQLHENV EnvironmentHandle,
           SQLHDBC ConnectionHandle, SQLHSTMT StatementHandle,
           SQLCHAR *Sqlstate, SQLINTEGER *NativeError,
           SQLCHAR *MessageText, SQLSMALLINT BufferLength,
           SQLSMALLINT *TextLength);

SQLRETURN  SQL_API SQLExecDirect(SQLHSTMT StatementHandle,
           SQLCHAR *StatementText, SQLINTEGER TextLength);

SQLRETURN  SQL_API SQLExecute(SQLHSTMT StatementHandle);

SQLRETURN  SQL_API SQLFetch(SQLHSTMT StatementHandle);

#if (ODBCVER >= 0x0300)
SQLRETURN  SQL_API SQLFetchScroll(SQLHSTMT StatementHandle,
           SQLSMALLINT FetchOrientation, SQLROWOFFSET FetchOffset);
#endif

SQLRETURN  SQL_API SQLFreeConnect(SQLHDBC ConnectionHandle);

SQLRETURN  SQL_API SQLFreeEnv(SQLHENV EnvironmentHandle);

#if (ODBCVER >= 0x0300)
SQLRETURN  SQL_API SQLFreeHandle(SQLSMALLINT HandleType, SQLHANDLE Handle);
#endif

SQLRETURN  SQL_API SQLFreeStmt(SQLHSTMT StatementHandle,
           SQLUSMALLINT Option);

#if (ODBCVER >= 0x0300)
SQLRETURN  SQL_API SQLGetConnectAttr(SQLHDBC ConnectionHandle,
           SQLINTEGER Attribute, SQLPOINTER Value,
           SQLINTEGER BufferLength, SQLINTEGER *StringLength);
#endif

SQLRETURN  SQL_API SQLGetConnectOption(SQLHDBC ConnectionHandle,
           SQLUSMALLINT Option, SQLPOINTER Value);

SQLRETURN  SQL_API SQLGetCursorName(SQLHSTMT StatementHandle,
           SQLCHAR *CursorName, SQLSMALLINT BufferLength,
           SQLSMALLINT *NameLength);

SQLRETURN  SQL_API SQLGetData(SQLHSTMT StatementHandle,
           SQLUSMALLINT ColumnNumber, SQLSMALLINT TargetType,
           SQLPOINTER TargetValue, SQLLEN BufferLength,
           SQLLEN *StrLen_or_Ind);

#if (ODBCVER >= 0x0300)
SQLRETURN  SQL_API SQLGetDescField(SQLHDESC DescriptorHandle,
           SQLSMALLINT RecNumber, SQLSMALLINT FieldIdentifier,
           SQLPOINTER Value, SQLINTEGER BufferLength,
           SQLINTEGER *StringLength);

SQLRETURN  SQL_API SQLGetDescRec(SQLHDESC DescriptorHandle,
           SQLSMALLINT RecNumber, SQLCHAR *Name,
           SQLSMALLINT BufferLength, SQLSMALLINT *StringLength,
           SQLSMALLINT *Type, SQLSMALLINT *SubType, 
           SQLLEN     *Length, SQLSMALLINT *Precision, 
           SQLSMALLINT *Scale, SQLSMALLINT *Nullable);

SQLRETURN  SQL_API SQLGetDiagField(SQLSMALLINT HandleType, SQLHANDLE Handle,
           SQLSMALLINT RecNumber, SQLSMALLINT DiagIdentifier,
           SQLPOINTER DiagInfo, SQLSMALLINT BufferLength,
           SQLSMALLINT *StringLength);

SQLRETURN  SQL_API SQLGetDiagRec(SQLSMALLINT HandleType, SQLHANDLE Handle,
           SQLSMALLINT RecNumber, SQLCHAR *Sqlstate,
           SQLINTEGER *NativeError, SQLCHAR *MessageText,
           SQLSMALLINT BufferLength, SQLSMALLINT *TextLength);

SQLRETURN  SQL_API SQLGetEnvAttr(SQLHENV EnvironmentHandle,
           SQLINTEGER Attribute, SQLPOINTER Value,
           SQLINTEGER BufferLength, SQLINTEGER *StringLength);
#endif  /* ODBCVER >= 0x0300 */

SQLRETURN  SQL_API SQLGetFunctions(SQLHDBC ConnectionHandle,
           SQLUSMALLINT FunctionId, SQLUSMALLINT *Supported);

SQLRETURN  SQL_API SQLGetInfo(SQLHDBC ConnectionHandle,
           SQLUSMALLINT InfoType, SQLPOINTER InfoValue,
           SQLSMALLINT BufferLength, SQLSMALLINT *StringLength);

#if (ODBCVER >= 0x0300)
SQLRETURN  SQL_API SQLGetStmtAttr(SQLHSTMT StatementHandle,
           SQLINTEGER Attribute, SQLPOINTER Value,
           SQLINTEGER BufferLength, SQLINTEGER *StringLength);
#endif  /* ODBCVER >= 0x0300 */

SQLRETURN  SQL_API SQLGetStmtOption(SQLHSTMT StatementHandle,
           SQLUSMALLINT Option, SQLPOINTER Value);

SQLRETURN  SQL_API SQLGetTypeInfo(SQLHSTMT StatementHandle,
           SQLSMALLINT DataType);

SQLRETURN  SQL_API SQLNumResultCols(SQLHSTMT StatementHandle,
           SQLSMALLINT *ColumnCount);

SQLRETURN  SQL_API SQLParamData(SQLHSTMT StatementHandle,
           SQLPOINTER *Value);

SQLRETURN  SQL_API SQLPrepare(SQLHSTMT StatementHandle,
           SQLCHAR *StatementText, SQLINTEGER TextLength);

SQLRETURN  SQL_API SQLPutData(SQLHSTMT StatementHandle,
           SQLPOINTER Data, SQLLEN StrLen_or_Ind);

SQLRETURN  SQL_API SQLRowCount(SQLHSTMT StatementHandle, 
	   SQLLEN* RowCount);

#if (ODBCVER >= 0x0300)
SQLRETURN  SQL_API SQLSetConnectAttr(SQLHDBC ConnectionHandle,
           SQLINTEGER Attribute, SQLPOINTER Value,
           SQLINTEGER StringLength);
#endif /* ODBCVER >= 0x0300 */

SQLRETURN  SQL_API SQLSetConnectOption(SQLHDBC ConnectionHandle,
           SQLUSMALLINT Option, SQLULEN Value);

SQLRETURN  SQL_API SQLSetCursorName(SQLHSTMT StatementHandle,
           SQLCHAR *CursorName, SQLSMALLINT NameLength);

#if (ODBCVER >= 0x0300)
SQLRETURN  SQL_API SQLSetDescField(SQLHDESC DescriptorHandle,
           SQLSMALLINT RecNumber, SQLSMALLINT FieldIdentifier,
           SQLPOINTER Value, SQLINTEGER BufferLength);

SQLRETURN  SQL_API SQLSetDescRec(SQLHDESC DescriptorHandle,
           SQLSMALLINT RecNumber, SQLSMALLINT Type,
           SQLSMALLINT SubType, SQLLEN Length,
           SQLSMALLINT Precision, SQLSMALLINT Scale,
           SQLPOINTER Data, SQLLEN *StringLength,
           SQLLEN *Indicator);

SQLRETURN  SQL_API SQLSetEnvAttr(SQLHENV EnvironmentHandle,
           SQLINTEGER Attribute, SQLPOINTER Value,
           SQLINTEGER StringLength);
#endif /* ODBCVER >= 0x0300 */

SQLRETURN  SQL_API SQLSetParam(SQLHSTMT StatementHandle,
           SQLUSMALLINT ParameterNumber, SQLSMALLINT ValueType,
           SQLSMALLINT ParameterType, SQLULEN LengthPrecision,
           SQLSMALLINT ParameterScale, SQLPOINTER ParameterValue,
           SQLLEN *StrLen_or_Ind);

#if (ODBCVER >= 0x0300)
SQLRETURN  SQL_API SQLSetStmtAttr(SQLHSTMT StatementHandle,
           SQLINTEGER Attribute, SQLPOINTER Value,
           SQLINTEGER StringLength);
#endif

SQLRETURN  SQL_API SQLSetStmtOption(SQLHSTMT StatementHandle,
           SQLUSMALLINT Option, SQLROWCOUNT Value);

SQLRETURN  SQL_API SQLSpecialColumns(SQLHSTMT StatementHandle,
           SQLUSMALLINT IdentifierType, SQLCHAR *CatalogName,
           SQLSMALLINT NameLength1, SQLCHAR *SchemaName,
           SQLSMALLINT NameLength2, SQLCHAR *TableName,
           SQLSMALLINT NameLength3, SQLUSMALLINT Scope,
           SQLUSMALLINT Nullable);

SQLRETURN  SQL_API SQLStatistics(SQLHSTMT StatementHandle,
           SQLCHAR *CatalogName, SQLSMALLINT NameLength1,
           SQLCHAR *SchemaName, SQLSMALLINT NameLength2,
           SQLCHAR *TableName, SQLSMALLINT NameLength3,
           SQLUSMALLINT Unique, SQLUSMALLINT Reserved);

SQLRETURN  SQL_API SQLTables(SQLHSTMT StatementHandle,
           SQLCHAR *CatalogName, SQLSMALLINT NameLength1,
           SQLCHAR *SchemaName, SQLSMALLINT NameLength2,
           SQLCHAR *TableName, SQLSMALLINT NameLength3,
           SQLCHAR *TableType, SQLSMALLINT NameLength4);

SQLRETURN  SQL_API SQLTransact(SQLHENV EnvironmentHandle,
           SQLHDBC ConnectionHandle, SQLUSMALLINT CompletionType);

#endif  /* RC_INVOKED */

#ifdef __cplusplus
}                                    /* End of extern "C" { */
#endif  /* __cplusplus */
#endif	/* #ifndef __SQL */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\sna_cnst.h ===
/*****************************************************************************/
/* sna_cnst.h   - General Constants                                          */
/*                                                                           */
/* Copyright Data Connection Ltd. 1989 - 2000                                */
/* Copyright (c) 1989 - 2000 Microsoft Corporation. All rights reserved.     */
/*****************************************************************************/

/*****************************************************************************/
/* Constants for use by IHV's via sna_dlc.h or by internal builds via        */
/* direct #include                                                           */
/*****************************************************************************/

#ifndef SNA_CNSTH_INCLUDED
#define SNA_CNSTH_INCLUDED

#ifdef __cplusplus
extern "C" {
#endif

/*****************************************************************************/
/* Routine to get value of a configuration parameter                         */
/*****************************************************************************/
#ifdef WIN32_SUPPORT
  USHORT WINAPI SNAGetPerfValues(int * pPerfObject, int * pFirstCounter);
  USHORT WINAPI SNAGetPNodePerfVals(int * pPerfObject, int * pFirstCounter);
  #ifdef OLD_IHV_PROTOS
    USHORT WINAPI sepdgetcf(UCHAR *, VOID *, ULONG, UCHAR, ULONG *);
  #else
    USHORT WINAPI SNAGetConfigValue(UCHAR *, VOID *, ULONG, UCHAR, ULONG *);
  #endif

#else
  USHORT far sepdgetcf(UCHAR far *, VOID far *, ULONG, UCHAR, ULONG far *);
#endif

#define TYPELONG '\000'
#define TYPESTRING '\001'

#define ERBADCFG  1
#define ERNOTFND  2
#define ERTOOLONG 3
#define ERBADTYPE 4

/*****************************************************************************/
/* Structure of version information block                                    */
/*****************************************************************************/

struct cs_info {
  unsigned short    length;            /* length of this struct (bytes)      */
                                       /* (supplied parameter)               */
  unsigned char     major_ver;         /* CS major ver CS1.1->1, CS2.0->2    */
  unsigned char     minor_ver;         /* CS minor ver CS1.1->10 (dec)       */
  unsigned char     config_share[80];  /* name of share point of current     */
                                       /* config file = default location for */
                                       /* style file \\box\share\ (null      */
                                       /* terminated)                        */
  unsigned short    nos;               /* NOS that the LAN is running        */
#define Workstation 0
#define LANMan      1      /* Also LAN Server, unless we can differentiate   */
#define NetWare     2
} CS_INFO;

/*****************************************************************************/
/* Routine to get version information                                        */
/*****************************************************************************/
#ifdef WIN32_SUPPORT

  #ifdef OLD_IHV_PROTOS
    USHORT WINAPI sepdgetinfo(struct cs_info * );
  #else
    USHORT WINAPI SNAGetSystemInfo(struct cs_info * );
  #endif

#else
  USHORT far sepdgetinfo(struct cs_info far * );
#endif

/*****************************************************************************/
/* Routine to return the name of the SNALink                                 */
/*****************************************************************************/
#ifdef WIN32_SUPPORT

  #ifdef OLD_IHV_PROTOS
    VOID WINAPI sepdlknm(UCHAR *);
  #else
    VOID WINAPI SNAGetLinkName(UCHAR *);
  #endif

#else
  VOID far sepdlknm(UCHAR far *);
#endif

/*****************************************************************************/
/* Routine to send a message to the local node                               */
/*****************************************************************************/
#ifdef WIN32_SUPPORT

  #ifdef OLD_IHV_PROTOS
    extern VOID WINAPI sbpgsend(PTRBFHDR *);
  #else
    extern VOID WINAPI SNASendMessage(PTRBFHDR *);
  #endif

#else
  extern VOID     far  sbpgsend(PTRBFHDR *);
#endif

/*****************************************************************************/
/* Routine to send an NMVT Alert to NetView                                  */
/*****************************************************************************/
#ifdef WIN32_SUPPORT

  #ifdef OLD_IHV_PROTOS
    extern VOID WINAPI sbpgnmvt(PTRBFHDR, INTEGER);
  #else
    extern VOID WINAPI SNASendAlert(PTRBFHDR, INTEGER);
  #endif

#else
  extern VOID     far  sbpgnmvt(PTRBFHDR, INTEGER);
#endif

/*****************************************************************************/
/* Function prototypes for routines which must be supplied by IHV DLL        */
/*****************************************************************************/
#ifdef WIN32_SUPPORT

  #ifdef OLD_IHV_PROTOS
    VOID WINAPI slpginit(HANDLE);
    VOID WINAPI slpgdisp(PTRBFHDR, INTEGER, INTEGER);
    VOID WINAPI slpwrkmg();
  #else
    VOID WINAPI SNALinkInitialize(HANDLE);
    VOID WINAPI SNALinkDispatchProc(PTRBFHDR, INTEGER, INTEGER);
    VOID WINAPI SNALinkWorkProc();
  #endif

#else
  VOID     far  slpginit(HSEM);
  VOID     far  slpgdisp(PTRBFHDR, INTEGER, INTEGER);
  VOID     far  slpwrkmg();
#endif

/*****************************************************************************/
/* Constants used by slpgdisp                                                */
/*****************************************************************************/
#define SBTICK 253
#define SBLOST 254

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SqlDa.h ===
/**************************************************************************

   Module Name	  = SQLDA.H

   SQLDA External Include File

   Copyright = nnnnnnnn (C) Copyright IBM Corp. 1987
	       Licensed Material - Program Property of IBM
	       Refer to Copyright Instructions Form Number G120-3083

   Function = Include File defining SQLDA

		IMPORTANT
		=========
 This file is automatically included by sqlprep.exe.
 Do not include it manually.

**************************************************************************/

#ifndef _SQLPREP_
#pragma message( "Do not include sqlda.h manually. It will be included by sqlprep.exe. ")
#endif	// _SQLPREP_


/* SQL Descriptor Area - Variable descriptor */

#ifndef   SQLDASIZE

/* SQL Descriptor Area - SQLDA */
struct sqlda {
	
    unsigned char   sqldaid[8];	        // Eye catcher = 'SQLDA   ' 
	long            sqldabc;			// SQLDA size in bytes = 16+44*SQLN 
	short           sqln;			    // Number of SQLVAR elements
	short           sqld;			    // # of used SQLVAR elements
	struct          sqlvar 
    {
		short       sqltype;			// Variable data type
		short       sqllen;			    // Variable data length
		unsigned char far *sqldata;	    // Pointer to variable data value
		short       far *sqlind;		// Pointer to Null indicator
		struct      sqlname             // Variable Name
        {
			short   length;		        // Name length [1..30]
			unsigned char data[30];	    // Variable or Column name
		}sqlname;

	} sqlvar[1];
};

/* macro for allocating SQLDA */

#define   SQLDASIZE(n) (sizeof(struct sqlda) + (n-1)*sizeof(struct sqlvar))

#endif	// SQLDASIZE

/* EOF: sqlda.h */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SqlDistx.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 3.01.75 */
/* at Fri Nov 13 02:36:38 1998
 */
/* Compiler settings for r:\SPHINX\SQLREPL\SQLDISTX\sqldistx.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: none
*/
//@@MIDL_FILE_HEADING(  )
#include "rpc.h"
#include "rpcndr.h"
#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __sqldistx_h__
#define __sqldistx_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __ISQLDistribution_FWD_DEFINED__
#define __ISQLDistribution_FWD_DEFINED__
typedef interface ISQLDistribution ISQLDistribution;
#endif 	/* __ISQLDistribution_FWD_DEFINED__ */


#ifndef ___SQLDistributionEvents_FWD_DEFINED__
#define ___SQLDistributionEvents_FWD_DEFINED__
typedef interface _SQLDistributionEvents _SQLDistributionEvents;
#endif 	/* ___SQLDistributionEvents_FWD_DEFINED__ */


#ifndef __SQLDistribution_FWD_DEFINED__
#define __SQLDistribution_FWD_DEFINED__

#ifdef __cplusplus
typedef class SQLDistribution SQLDistribution;
#else
typedef struct SQLDistribution SQLDistribution;
#endif /* __cplusplus */

#endif 	/* __SQLDistribution_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "replerrx.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/****************************************
 * Generated header for interface: __MIDL_itf_sqldistx_0000
 * at Fri Nov 13 02:36:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [local] */ 


#ifndef COMMON_REPL_ENUMS_DEFINED
#define COMMON_REPL_ENUMS_DEFINED
typedef 
enum SECURITY_TYPE
    {	DB_AUTHENTICATION	= 0,
	NT_AUTHENTICATION	= 1
    }	REPL_SECURITY_TYPE;

typedef 
enum DATASOURCE_TYPE
    {	SQL_SERVER	= 0,
	ODBC_DSN	= 1,
	JET4_DATABASE	= 2,
	OLEDB_DATASOURCE	= 3
    }	REPL_DATASOURCE_TYPE;

typedef 
enum SUBSCRIPTION_TYPE
    {	PUSH	= 0,
	PULL	= 1,
	ANONYMOUS	= 2
    }	REPL_SUBSCRIPTION_TYPE;

typedef 
enum NETWORK_TYPE
    {	DEFAULT_NETWORK	= 0,
	TCPIP_SOCKETS	= 1,
	MULTI_PROTOCOL	= 2
    }	REPL_NETWORK_TYPE;

typedef 
enum DBADDOPTION
    {	EXISTING_DATABASE	= 0,
	CREATE_DATABASE	= 1,
	ATTACH_DATABASE	= 2
    }	REPL_DBADDOPTION;

typedef 
enum DBDROPOPTION
    {	LEAVE_DATABASE	= 0,
	DROP_DATABASE	= 1
    }	REPL_DBDROPOPTION;

typedef 
enum SUBSCRIPTION_HOST
    {	NONE	= 0,
	SYNC_MANAGER	= 1
    }	REPL_SUBSCRIPTION_HOST;

typedef 
enum STATUS_RETURN_CODE
    {	SUCCESS	= 0,
	CANCEL	= 1
    }	REPL_STATUS_RETURN_CODE;

#define S_REPLX_CANCELLED	MAKE_SCODE(SEVERITY_SUCCESS,FACILITY_ITF,0x0101)
#endif // COMMON_REPL_ENUMS_DEFINED


extern RPC_IF_HANDLE __MIDL_itf_sqldistx_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_sqldistx_0000_v0_0_s_ifspec;

#ifndef __ISQLDistribution_INTERFACE_DEFINED__
#define __ISQLDistribution_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: ISQLDistribution
 * at Fri Nov 13 02:36:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_ISQLDistribution;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("9BD37E1C-BB55-11D0-94E7-00C04FC2DB9C")
    ISQLDistribution : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Distributor( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Distributor( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DistributorLogin( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DistributorLogin( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DistributorPassword( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DistributorPassword( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DistributorSecurityMode( 
            /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DistributorSecurityMode( 
            /* [in] */ REPL_SECURITY_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LoginTimeout( 
            /* [retval][out] */ short __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_LoginTimeout( 
            /* [in] */ short newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_MaxDeliveredTransactions( 
            /* [retval][out] */ long __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_MaxDeliveredTransactions( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Publication( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Publication( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Publisher( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Publisher( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PublisherDatabase( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PublisherDatabase( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PublisherLogin( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PublisherLogin( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PublisherPassword( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PublisherPassword( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PublisherSecurityMode( 
            /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PublisherSecurityMode( 
            /* [in] */ REPL_SECURITY_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_QueryTimeout( 
            /* [retval][out] */ short __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_QueryTimeout( 
            /* [in] */ short newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Subscriber( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Subscriber( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberDatabase( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriberDatabase( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberDatabasePath( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriberDatabasePath( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberLogin( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriberLogin( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberPassword( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriberPassword( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberSecurityMode( 
            /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriberSecurityMode( 
            /* [in] */ REPL_SECURITY_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberDatasourceType( 
            /* [retval][out] */ REPL_DATASOURCE_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriberDatasourceType( 
            /* [in] */ REPL_DATASOURCE_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriptionType( 
            /* [retval][out] */ REPL_SUBSCRIPTION_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriptionType( 
            /* [in] */ REPL_SUBSCRIPTION_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UndeliveredCommands( 
            /* [retval][out] */ long __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UndeliveredTransactions( 
            /* [retval][out] */ long __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DistributorAddress( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DistributorAddress( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DistributorNetwork( 
            /* [retval][out] */ REPL_NETWORK_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DistributorNetwork( 
            /* [in] */ REPL_NETWORK_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PublisherAddress( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PublisherAddress( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PublisherNetwork( 
            /* [retval][out] */ REPL_NETWORK_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PublisherNetwork( 
            /* [in] */ REPL_NETWORK_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FTPAddress( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FTPAddress( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FTPLogin( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FTPLogin( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FTPPassword( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FTPPassword( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FTPPort( 
            /* [retval][out] */ long __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FTPPort( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Initialize( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddSubscription( 
            /* [in] */ REPL_DBADDOPTION DBAddOption,
            /* [in] */ REPL_SUBSCRIPTION_HOST SubscriptionHost) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DropSubscription( 
            /* [in] */ REPL_DBDROPOPTION DBDropOption) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Run( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Terminate( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ReinitializeSubscription( void) = 0;
        
        virtual /* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE put_DistributorEncryptedPassword( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE put_PublisherEncryptedPassword( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriberEncryptedPassword( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProfileName( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProfileName( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ErrorRecords( 
            /* [retval][out] */ ISQLReplErrors __RPC_FAR *__RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriptionName( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriptionName( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE put_HostType( 
            /* [in] */ REPL_SUBSCRIPTION_HOST newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISQLDistributionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ISQLDistribution __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ISQLDistribution __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            ISQLDistribution __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Distributor )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Distributor )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DistributorLogin )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DistributorLogin )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DistributorPassword )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DistributorPassword )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DistributorSecurityMode )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DistributorSecurityMode )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ REPL_SECURITY_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LoginTimeout )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_LoginTimeout )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ short newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_MaxDeliveredTransactions )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_MaxDeliveredTransactions )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Publication )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Publication )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Publisher )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Publisher )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PublisherDatabase )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PublisherDatabase )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PublisherLogin )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PublisherLogin )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PublisherPassword )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PublisherPassword )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PublisherSecurityMode )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PublisherSecurityMode )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ REPL_SECURITY_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_QueryTimeout )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_QueryTimeout )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ short newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Subscriber )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Subscriber )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriberDatabase )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriberDatabase )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriberDatabasePath )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriberDatabasePath )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriberLogin )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriberLogin )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriberPassword )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriberPassword )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriberSecurityMode )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriberSecurityMode )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ REPL_SECURITY_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriberDatasourceType )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ REPL_DATASOURCE_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriberDatasourceType )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ REPL_DATASOURCE_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriptionType )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ REPL_SUBSCRIPTION_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriptionType )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ REPL_SUBSCRIPTION_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_UndeliveredCommands )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_UndeliveredTransactions )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DistributorAddress )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DistributorAddress )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DistributorNetwork )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ REPL_NETWORK_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DistributorNetwork )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ REPL_NETWORK_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PublisherAddress )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PublisherAddress )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PublisherNetwork )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ REPL_NETWORK_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PublisherNetwork )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ REPL_NETWORK_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FTPAddress )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FTPAddress )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FTPLogin )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FTPLogin )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FTPPassword )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FTPPassword )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FTPPort )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FTPPort )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            ISQLDistribution __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddSubscription )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ REPL_DBADDOPTION DBAddOption,
            /* [in] */ REPL_SUBSCRIPTION_HOST SubscriptionHost);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DropSubscription )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ REPL_DBDROPOPTION DBDropOption);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Run )( 
            ISQLDistribution __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Terminate )( 
            ISQLDistribution __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReinitializeSubscription )( 
            ISQLDistribution __RPC_FAR * This);
        
        /* [helpstring][restricted][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DistributorEncryptedPassword )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][restricted][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PublisherEncryptedPassword )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][restricted][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriberEncryptedPassword )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ProfileName )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ProfileName )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ErrorRecords )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ ISQLReplErrors __RPC_FAR *__RPC_FAR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriptionName )( 
            ISQLDistribution __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriptionName )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][restricted][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HostType )( 
            ISQLDistribution __RPC_FAR * This,
            /* [in] */ REPL_SUBSCRIPTION_HOST newVal);
        
        END_INTERFACE
    } ISQLDistributionVtbl;

    interface ISQLDistribution
    {
        CONST_VTBL struct ISQLDistributionVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISQLDistribution_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ISQLDistribution_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ISQLDistribution_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ISQLDistribution_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define ISQLDistribution_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define ISQLDistribution_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define ISQLDistribution_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define ISQLDistribution_get_Distributor(This,pVal)	\
    (This)->lpVtbl -> get_Distributor(This,pVal)

#define ISQLDistribution_put_Distributor(This,newVal)	\
    (This)->lpVtbl -> put_Distributor(This,newVal)

#define ISQLDistribution_get_DistributorLogin(This,pVal)	\
    (This)->lpVtbl -> get_DistributorLogin(This,pVal)

#define ISQLDistribution_put_DistributorLogin(This,newVal)	\
    (This)->lpVtbl -> put_DistributorLogin(This,newVal)

#define ISQLDistribution_get_DistributorPassword(This,pVal)	\
    (This)->lpVtbl -> get_DistributorPassword(This,pVal)

#define ISQLDistribution_put_DistributorPassword(This,newVal)	\
    (This)->lpVtbl -> put_DistributorPassword(This,newVal)

#define ISQLDistribution_get_DistributorSecurityMode(This,pVal)	\
    (This)->lpVtbl -> get_DistributorSecurityMode(This,pVal)

#define ISQLDistribution_put_DistributorSecurityMode(This,newVal)	\
    (This)->lpVtbl -> put_DistributorSecurityMode(This,newVal)

#define ISQLDistribution_get_LoginTimeout(This,pVal)	\
    (This)->lpVtbl -> get_LoginTimeout(This,pVal)

#define ISQLDistribution_put_LoginTimeout(This,newVal)	\
    (This)->lpVtbl -> put_LoginTimeout(This,newVal)

#define ISQLDistribution_get_MaxDeliveredTransactions(This,pVal)	\
    (This)->lpVtbl -> get_MaxDeliveredTransactions(This,pVal)

#define ISQLDistribution_put_MaxDeliveredTransactions(This,newVal)	\
    (This)->lpVtbl -> put_MaxDeliveredTransactions(This,newVal)

#define ISQLDistribution_get_Publication(This,pVal)	\
    (This)->lpVtbl -> get_Publication(This,pVal)

#define ISQLDistribution_put_Publication(This,newVal)	\
    (This)->lpVtbl -> put_Publication(This,newVal)

#define ISQLDistribution_get_Publisher(This,pVal)	\
    (This)->lpVtbl -> get_Publisher(This,pVal)

#define ISQLDistribution_put_Publisher(This,newVal)	\
    (This)->lpVtbl -> put_Publisher(This,newVal)

#define ISQLDistribution_get_PublisherDatabase(This,pVal)	\
    (This)->lpVtbl -> get_PublisherDatabase(This,pVal)

#define ISQLDistribution_put_PublisherDatabase(This,newVal)	\
    (This)->lpVtbl -> put_PublisherDatabase(This,newVal)

#define ISQLDistribution_get_PublisherLogin(This,pVal)	\
    (This)->lpVtbl -> get_PublisherLogin(This,pVal)

#define ISQLDistribution_put_PublisherLogin(This,newVal)	\
    (This)->lpVtbl -> put_PublisherLogin(This,newVal)

#define ISQLDistribution_get_PublisherPassword(This,pVal)	\
    (This)->lpVtbl -> get_PublisherPassword(This,pVal)

#define ISQLDistribution_put_PublisherPassword(This,newVal)	\
    (This)->lpVtbl -> put_PublisherPassword(This,newVal)

#define ISQLDistribution_get_PublisherSecurityMode(This,pVal)	\
    (This)->lpVtbl -> get_PublisherSecurityMode(This,pVal)

#define ISQLDistribution_put_PublisherSecurityMode(This,newVal)	\
    (This)->lpVtbl -> put_PublisherSecurityMode(This,newVal)

#define ISQLDistribution_get_QueryTimeout(This,pVal)	\
    (This)->lpVtbl -> get_QueryTimeout(This,pVal)

#define ISQLDistribution_put_QueryTimeout(This,newVal)	\
    (This)->lpVtbl -> put_QueryTimeout(This,newVal)

#define ISQLDistribution_get_Subscriber(This,pVal)	\
    (This)->lpVtbl -> get_Subscriber(This,pVal)

#define ISQLDistribution_put_Subscriber(This,newVal)	\
    (This)->lpVtbl -> put_Subscriber(This,newVal)

#define ISQLDistribution_get_SubscriberDatabase(This,pVal)	\
    (This)->lpVtbl -> get_SubscriberDatabase(This,pVal)

#define ISQLDistribution_put_SubscriberDatabase(This,newVal)	\
    (This)->lpVtbl -> put_SubscriberDatabase(This,newVal)

#define ISQLDistribution_get_SubscriberDatabasePath(This,pVal)	\
    (This)->lpVtbl -> get_SubscriberDatabasePath(This,pVal)

#define ISQLDistribution_put_SubscriberDatabasePath(This,newVal)	\
    (This)->lpVtbl -> put_SubscriberDatabasePath(This,newVal)

#define ISQLDistribution_get_SubscriberLogin(This,pVal)	\
    (This)->lpVtbl -> get_SubscriberLogin(This,pVal)

#define ISQLDistribution_put_SubscriberLogin(This,newVal)	\
    (This)->lpVtbl -> put_SubscriberLogin(This,newVal)

#define ISQLDistribution_get_SubscriberPassword(This,pVal)	\
    (This)->lpVtbl -> get_SubscriberPassword(This,pVal)

#define ISQLDistribution_put_SubscriberPassword(This,newVal)	\
    (This)->lpVtbl -> put_SubscriberPassword(This,newVal)

#define ISQLDistribution_get_SubscriberSecurityMode(This,pVal)	\
    (This)->lpVtbl -> get_SubscriberSecurityMode(This,pVal)

#define ISQLDistribution_put_SubscriberSecurityMode(This,newVal)	\
    (This)->lpVtbl -> put_SubscriberSecurityMode(This,newVal)

#define ISQLDistribution_get_SubscriberDatasourceType(This,pVal)	\
    (This)->lpVtbl -> get_SubscriberDatasourceType(This,pVal)

#define ISQLDistribution_put_SubscriberDatasourceType(This,newVal)	\
    (This)->lpVtbl -> put_SubscriberDatasourceType(This,newVal)

#define ISQLDistribution_get_SubscriptionType(This,pVal)	\
    (This)->lpVtbl -> get_SubscriptionType(This,pVal)

#define ISQLDistribution_put_SubscriptionType(This,newVal)	\
    (This)->lpVtbl -> put_SubscriptionType(This,newVal)

#define ISQLDistribution_get_UndeliveredCommands(This,pVal)	\
    (This)->lpVtbl -> get_UndeliveredCommands(This,pVal)

#define ISQLDistribution_get_UndeliveredTransactions(This,pVal)	\
    (This)->lpVtbl -> get_UndeliveredTransactions(This,pVal)

#define ISQLDistribution_get_DistributorAddress(This,pVal)	\
    (This)->lpVtbl -> get_DistributorAddress(This,pVal)

#define ISQLDistribution_put_DistributorAddress(This,newVal)	\
    (This)->lpVtbl -> put_DistributorAddress(This,newVal)

#define ISQLDistribution_get_DistributorNetwork(This,pVal)	\
    (This)->lpVtbl -> get_DistributorNetwork(This,pVal)

#define ISQLDistribution_put_DistributorNetwork(This,newVal)	\
    (This)->lpVtbl -> put_DistributorNetwork(This,newVal)

#define ISQLDistribution_get_PublisherAddress(This,pVal)	\
    (This)->lpVtbl -> get_PublisherAddress(This,pVal)

#define ISQLDistribution_put_PublisherAddress(This,newVal)	\
    (This)->lpVtbl -> put_PublisherAddress(This,newVal)

#define ISQLDistribution_get_PublisherNetwork(This,pVal)	\
    (This)->lpVtbl -> get_PublisherNetwork(This,pVal)

#define ISQLDistribution_put_PublisherNetwork(This,newVal)	\
    (This)->lpVtbl -> put_PublisherNetwork(This,newVal)

#define ISQLDistribution_get_FTPAddress(This,pVal)	\
    (This)->lpVtbl -> get_FTPAddress(This,pVal)

#define ISQLDistribution_put_FTPAddress(This,newVal)	\
    (This)->lpVtbl -> put_FTPAddress(This,newVal)

#define ISQLDistribution_get_FTPLogin(This,pVal)	\
    (This)->lpVtbl -> get_FTPLogin(This,pVal)

#define ISQLDistribution_put_FTPLogin(This,newVal)	\
    (This)->lpVtbl -> put_FTPLogin(This,newVal)

#define ISQLDistribution_get_FTPPassword(This,pVal)	\
    (This)->lpVtbl -> get_FTPPassword(This,pVal)

#define ISQLDistribution_put_FTPPassword(This,newVal)	\
    (This)->lpVtbl -> put_FTPPassword(This,newVal)

#define ISQLDistribution_get_FTPPort(This,pVal)	\
    (This)->lpVtbl -> get_FTPPort(This,pVal)

#define ISQLDistribution_put_FTPPort(This,newVal)	\
    (This)->lpVtbl -> put_FTPPort(This,newVal)

#define ISQLDistribution_Initialize(This)	\
    (This)->lpVtbl -> Initialize(This)

#define ISQLDistribution_AddSubscription(This,DBAddOption,SubscriptionHost)	\
    (This)->lpVtbl -> AddSubscription(This,DBAddOption,SubscriptionHost)

#define ISQLDistribution_DropSubscription(This,DBDropOption)	\
    (This)->lpVtbl -> DropSubscription(This,DBDropOption)

#define ISQLDistribution_Run(This)	\
    (This)->lpVtbl -> Run(This)

#define ISQLDistribution_Terminate(This)	\
    (This)->lpVtbl -> Terminate(This)

#define ISQLDistribution_ReinitializeSubscription(This)	\
    (This)->lpVtbl -> ReinitializeSubscription(This)

#define ISQLDistribution_put_DistributorEncryptedPassword(This,newVal)	\
    (This)->lpVtbl -> put_DistributorEncryptedPassword(This,newVal)

#define ISQLDistribution_put_PublisherEncryptedPassword(This,newVal)	\
    (This)->lpVtbl -> put_PublisherEncryptedPassword(This,newVal)

#define ISQLDistribution_put_SubscriberEncryptedPassword(This,newVal)	\
    (This)->lpVtbl -> put_SubscriberEncryptedPassword(This,newVal)

#define ISQLDistribution_get_ProfileName(This,pVal)	\
    (This)->lpVtbl -> get_ProfileName(This,pVal)

#define ISQLDistribution_put_ProfileName(This,newVal)	\
    (This)->lpVtbl -> put_ProfileName(This,newVal)

#define ISQLDistribution_get_ErrorRecords(This,pVal)	\
    (This)->lpVtbl -> get_ErrorRecords(This,pVal)

#define ISQLDistribution_get_SubscriptionName(This,pVal)	\
    (This)->lpVtbl -> get_SubscriptionName(This,pVal)

#define ISQLDistribution_put_SubscriptionName(This,newVal)	\
    (This)->lpVtbl -> put_SubscriptionName(This,newVal)

#define ISQLDistribution_put_HostType(This,newVal)	\
    (This)->lpVtbl -> put_HostType(This,newVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_Distributor_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_Distributor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_Distributor_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_Distributor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_DistributorLogin_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_DistributorLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_DistributorLogin_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_DistributorLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_DistributorPassword_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_DistributorPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_DistributorPassword_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_DistributorPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_DistributorSecurityMode_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_DistributorSecurityMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_DistributorSecurityMode_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ REPL_SECURITY_TYPE newVal);


void __RPC_STUB ISQLDistribution_put_DistributorSecurityMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_LoginTimeout_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_LoginTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_LoginTimeout_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ short newVal);


void __RPC_STUB ISQLDistribution_put_LoginTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_MaxDeliveredTransactions_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_MaxDeliveredTransactions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_MaxDeliveredTransactions_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ long newVal);


void __RPC_STUB ISQLDistribution_put_MaxDeliveredTransactions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_Publication_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_Publication_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_Publication_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_Publication_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_Publisher_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_Publisher_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_Publisher_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_Publisher_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_PublisherDatabase_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_PublisherDatabase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_PublisherDatabase_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_PublisherDatabase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_PublisherLogin_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_PublisherLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_PublisherLogin_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_PublisherLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_PublisherPassword_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_PublisherPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_PublisherPassword_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_PublisherPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_PublisherSecurityMode_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_PublisherSecurityMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_PublisherSecurityMode_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ REPL_SECURITY_TYPE newVal);


void __RPC_STUB ISQLDistribution_put_PublisherSecurityMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_QueryTimeout_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_QueryTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_QueryTimeout_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ short newVal);


void __RPC_STUB ISQLDistribution_put_QueryTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_Subscriber_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_Subscriber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_Subscriber_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_Subscriber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_SubscriberDatabase_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_SubscriberDatabase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_SubscriberDatabase_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_SubscriberDatabase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_SubscriberDatabasePath_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_SubscriberDatabasePath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_SubscriberDatabasePath_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_SubscriberDatabasePath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_SubscriberLogin_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_SubscriberLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_SubscriberLogin_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_SubscriberLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_SubscriberPassword_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_SubscriberPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_SubscriberPassword_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_SubscriberPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_SubscriberSecurityMode_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_SubscriberSecurityMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_SubscriberSecurityMode_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ REPL_SECURITY_TYPE newVal);


void __RPC_STUB ISQLDistribution_put_SubscriberSecurityMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_SubscriberDatasourceType_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ REPL_DATASOURCE_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_SubscriberDatasourceType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_SubscriberDatasourceType_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ REPL_DATASOURCE_TYPE newVal);


void __RPC_STUB ISQLDistribution_put_SubscriberDatasourceType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_SubscriptionType_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ REPL_SUBSCRIPTION_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_SubscriptionType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_SubscriptionType_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ REPL_SUBSCRIPTION_TYPE newVal);


void __RPC_STUB ISQLDistribution_put_SubscriptionType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_UndeliveredCommands_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_UndeliveredCommands_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_UndeliveredTransactions_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_UndeliveredTransactions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_DistributorAddress_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_DistributorAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_DistributorAddress_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_DistributorAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_DistributorNetwork_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ REPL_NETWORK_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_DistributorNetwork_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_DistributorNetwork_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ REPL_NETWORK_TYPE newVal);


void __RPC_STUB ISQLDistribution_put_DistributorNetwork_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_PublisherAddress_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_PublisherAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_PublisherAddress_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_PublisherAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_PublisherNetwork_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ REPL_NETWORK_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_PublisherNetwork_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_PublisherNetwork_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ REPL_NETWORK_TYPE newVal);


void __RPC_STUB ISQLDistribution_put_PublisherNetwork_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_FTPAddress_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_FTPAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_FTPAddress_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_FTPAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_FTPLogin_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_FTPLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_FTPLogin_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_FTPLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_FTPPassword_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_FTPPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_FTPPassword_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_FTPPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_FTPPort_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_FTPPort_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_FTPPort_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ long newVal);


void __RPC_STUB ISQLDistribution_put_FTPPort_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_Initialize_Proxy( 
    ISQLDistribution __RPC_FAR * This);


void __RPC_STUB ISQLDistribution_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_AddSubscription_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ REPL_DBADDOPTION DBAddOption,
    /* [in] */ REPL_SUBSCRIPTION_HOST SubscriptionHost);


void __RPC_STUB ISQLDistribution_AddSubscription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_DropSubscription_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ REPL_DBDROPOPTION DBDropOption);


void __RPC_STUB ISQLDistribution_DropSubscription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_Run_Proxy( 
    ISQLDistribution __RPC_FAR * This);


void __RPC_STUB ISQLDistribution_Run_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_Terminate_Proxy( 
    ISQLDistribution __RPC_FAR * This);


void __RPC_STUB ISQLDistribution_Terminate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_ReinitializeSubscription_Proxy( 
    ISQLDistribution __RPC_FAR * This);


void __RPC_STUB ISQLDistribution_ReinitializeSubscription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_DistributorEncryptedPassword_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_DistributorEncryptedPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_PublisherEncryptedPassword_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_PublisherEncryptedPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_SubscriberEncryptedPassword_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_SubscriberEncryptedPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_ProfileName_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_ProfileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_ProfileName_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_ProfileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_ErrorRecords_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ ISQLReplErrors __RPC_FAR *__RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_ErrorRecords_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_get_SubscriptionName_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLDistribution_get_SubscriptionName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_SubscriptionName_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLDistribution_put_SubscriptionName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLDistribution_put_HostType_Proxy( 
    ISQLDistribution __RPC_FAR * This,
    /* [in] */ REPL_SUBSCRIPTION_HOST newVal);


void __RPC_STUB ISQLDistribution_put_HostType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISQLDistribution_INTERFACE_DEFINED__ */



#ifndef __SQLDISTXLib_LIBRARY_DEFINED__
#define __SQLDISTXLib_LIBRARY_DEFINED__

/****************************************
 * Generated header for library: SQLDISTXLib
 * at Fri Nov 13 02:36:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [helpstring][version][uuid] */ 



EXTERN_C const IID LIBID_SQLDISTXLib;

#ifndef ___SQLDistributionEvents_DISPINTERFACE_DEFINED__
#define ___SQLDistributionEvents_DISPINTERFACE_DEFINED__

/****************************************
 * Generated header for dispinterface: _SQLDistributionEvents
 * at Fri Nov 13 02:36:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [helpstring][uuid] */ 



EXTERN_C const IID DIID__SQLDistributionEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    interface DECLSPEC_UUID("05E219F6-BB55-11D0-94E7-00C04FC2DB9C")
    _SQLDistributionEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _SQLDistributionEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            _SQLDistributionEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            _SQLDistributionEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            _SQLDistributionEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            _SQLDistributionEvents __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            _SQLDistributionEvents __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            _SQLDistributionEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            _SQLDistributionEvents __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } _SQLDistributionEventsVtbl;

    interface _SQLDistributionEvents
    {
        CONST_VTBL struct _SQLDistributionEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SQLDistributionEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define _SQLDistributionEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define _SQLDistributionEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define _SQLDistributionEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define _SQLDistributionEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define _SQLDistributionEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define _SQLDistributionEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___SQLDistributionEvents_DISPINTERFACE_DEFINED__ */


#ifdef __cplusplus
EXTERN_C const CLSID CLSID_SQLDistribution;

class DECLSPEC_UUID("05E219F5-BB55-11D0-94E7-00C04FC2DB9C")
SQLDistribution;
#endif
#endif /* __SQLDISTXLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\sqldb.h ===
#ifndef _INC_SQLDB
#define _INC_SQLDB

#ifdef __cplusplus
	extern "C" {
#endif

/*****************************************************************************
*                                                                            *
*       SQLDB.H - DB-Library header file for the Microsoft SQL Server.       *
*                                                                            *
*     Copyright (c) 1989 - 1999 by Microsoft Corp.  All rights reserved.     *
*                                                                            *
*****************************************************************************/

// Macros for setting the PLOGINREC
#define DBSETLHOST(a,b)    dbsetlname   ((a), (b), DBSETHOST)
#define DBSETLUSER(a,b)    dbsetlname   ((a), (b), DBSETUSER)
#define DBSETLPWD(a,b)     dbsetlname   ((a), (b), DBSETPWD)
#define DBSETLAPP(a,b)     dbsetlname   ((a), (b), DBSETAPP)
#define BCP_SETL(a,b)      bcp_setl     ((a), (b))
#define DBSETLNATLANG(a,b) dbsetlname   ((a), (b), DBSETLANG)
#define DBSETLPACKET(a,b)  dbsetlpacket ((a), (b))
#define DBSETLSECURE(a)    dbsetlname   ((a), 0,   DBSETSECURE)
#define DBSETLVERSION(a,b) dbsetlname   ((a), 0,  (b))
#define DBSETLTIME(a,b)		dbsetlname    ((a), (LPCSTR)(ULONG)(b), DBSETLOGINTIME)
#define DBSETLFALLBACK(a,b) dbsetlname   ((a), (b),   DBSETFALLBACK)

/*****************************************************************************
* Windows 3.x and Non-Windows 3.x differences.                               *
*****************************************************************************/

#ifdef DBMSWIN

extern void SQLAPI dbwinexit(void);

void SQLAPI dblocklib (void);
void SQLAPI dbunlocklib (void);

#define DBLOCKLIB()   dblocklib()
#define DBUNLOCKLIB() dbunlocklib()

#define DBERRHANDLE_PROC FARPROC
#define DBMSGHANDLE_PROC FARPROC

extern DBERRHANDLE_PROC dberrhandle (DBERRHANDLE_PROC);
extern DBMSGHANDLE_PROC dbmsghandle (DBMSGHANDLE_PROC);

#else

#define dbwinexit()

#define DBLOCKLIB()
#define DBUNLOCKLIB()

typedef INT (SQLAPI *DBERRHANDLE_PROC)(PDBPROCESS, INT, INT, INT, LPCSTR, LPCSTR);
typedef INT (SQLAPI *DBMSGHANDLE_PROC)(PDBPROCESS, DBINT, INT, INT, LPCSTR, LPCSTR, LPCSTR, DBUSMALLINT);

extern DBERRHANDLE_PROC SQLAPI dberrhandle(DBERRHANDLE_PROC);
extern DBMSGHANDLE_PROC SQLAPI dbmsghandle(DBMSGHANDLE_PROC);

extern DBERRHANDLE_PROC SQLAPI dbprocerrhandle(PDBHANDLE, DBERRHANDLE_PROC);
extern DBMSGHANDLE_PROC SQLAPI dbprocmsghandle(PDBHANDLE, DBMSGHANDLE_PROC);


#endif


/*****************************************************************************
* Function Prototypes                                                        *
*****************************************************************************/

// Functions macros
#define DBCMDROW(a)      dbcmdrow(a)
#define DBCOUNT(a)       dbcount (a)
#define DBCURCMD(a)      dbcurcmd(a)
#define DBCURROW(a)      dbcurrow(a)
#define DBDEAD(a)        dbdead(a)
#define DBFIRSTROW(a)    dbfirstrow(a)
#define DBGETTIME()      dbgettime()
#define DBISAVAIL(a)     dbisavail(a)
#define DBLASTROW(a)     dblastrow(a)
#define DBMORECMDS(a)    dbmorecmds(a)
#define DBNUMORDERS(a)   dbnumorders(a)
#define dbrbuf(a)        ((DBINT)dbdataready(a))
#define DBRBUF(a)        ((DBINT)dbdataready(a))
#define DBROWS(a)        dbrows (a)
#define DBROWTYPE(a)     dbrowtype (a)

// Two-phase commit functions
extern RETCODE      SQLAPI abort_xact (PDBPROCESS, DBINT);
extern void         SQLAPI build_xact_string (LPCSTR, LPCSTR, DBINT, LPSTR);
extern void         SQLAPI close_commit (PDBPROCESS);
extern RETCODE      SQLAPI commit_xact (PDBPROCESS, DBINT);
extern PDBPROCESS   SQLAPI open_commit (PLOGINREC, LPCSTR);
extern RETCODE      SQLAPI remove_xact (PDBPROCESS, DBINT, INT);
extern RETCODE      SQLAPI scan_xact (PDBPROCESS, DBINT);
extern DBINT        SQLAPI start_xact (PDBPROCESS, LPCSTR, LPCSTR, INT);
extern INT          SQLAPI stat_xact (PDBPROCESS, DBINT);

// BCP functions
extern DBINT        SQLAPI bcp_batch (PDBPROCESS);
extern RETCODE      SQLAPI bcp_bind (PDBPROCESS, LPCBYTE, INT, DBINT, LPCBYTE, INT, INT, INT);
extern RETCODE      SQLAPI bcp_colfmt (PDBPROCESS, INT, BYTE, INT, DBINT, LPCBYTE, INT, INT);
extern RETCODE      SQLAPI bcp_collen (PDBPROCESS, DBINT, INT);
extern RETCODE      SQLAPI bcp_colptr (PDBPROCESS, LPCBYTE, INT);
extern RETCODE      SQLAPI bcp_columns (PDBPROCESS, INT);
extern RETCODE      SQLAPI bcp_control (PDBPROCESS, INT, DBINT);
extern DBINT        SQLAPI bcp_done (PDBPROCESS);
extern RETCODE      SQLAPI bcp_exec (PDBPROCESS, LPDBINT);
extern RETCODE      SQLAPI bcp_init (PDBPROCESS, LPCSTR, LPCSTR, LPCSTR, INT);
extern RETCODE      SQLAPI bcp_moretext (PDBPROCESS, DBINT, LPCBYTE);
extern RETCODE      SQLAPI bcp_readfmt (PDBPROCESS, LPCSTR);
extern RETCODE      SQLAPI bcp_sendrow (PDBPROCESS);
extern RETCODE      SQLAPI bcp_setl (PLOGINREC, BOOL);
extern RETCODE      SQLAPI bcp_writefmt (PDBPROCESS, LPCSTR);

// Standard DB-Library functions
extern LPCBYTE      SQLAPI dbadata (PDBPROCESS, INT, INT);
extern DBINT        SQLAPI dbadlen (PDBPROCESS, INT, INT);
extern RETCODE      SQLAPI dbaltbind (PDBPROCESS, INT, INT, INT, DBINT, LPCBYTE);
extern INT          SQLAPI dbaltcolid (PDBPROCESS, INT, INT);
extern DBINT        SQLAPI dbaltlen (PDBPROCESS, INT, INT);
extern INT          SQLAPI dbaltop (PDBPROCESS, INT, INT);
extern INT          SQLAPI dbalttype (PDBPROCESS, INT, INT);
extern DBINT        SQLAPI dbaltutype (PDBPROCESS, INT, INT);
extern RETCODE      SQLAPI dbanullbind (PDBPROCESS, INT, INT, LPCDBINT);
extern RETCODE      SQLAPI dbbind (PDBPROCESS, INT, INT, DBINT, LPBYTE);
extern LPCBYTE      SQLAPI dbbylist (PDBPROCESS, INT, LPINT);
extern RETCODE      SQLAPI dbcancel (PDBPROCESS);
extern RETCODE      SQLAPI dbcanquery (PDBPROCESS);
extern LPCSTR       SQLAPI dbchange (PDBPROCESS);
extern RETCODE      SQLAPI dbclose (PDBPROCESS);
extern void         SQLAPI dbclrbuf (PDBPROCESS, DBINT);
extern RETCODE      SQLAPI dbclropt (PDBPROCESS, INT, LPCSTR);
extern RETCODE      SQLAPI dbcmd (PDBPROCESS, LPCSTR);
extern RETCODE      SQLAPI dbcmdrow (PDBPROCESS);
extern BOOL         SQLAPI dbcolbrowse (PDBPROCESS, INT);
extern RETCODE      SQLAPI dbcolinfo (PDBHANDLE, INT, INT, INT, LPDBCOL);
extern DBINT        SQLAPI dbcollen (PDBPROCESS, INT);
extern LPCSTR       SQLAPI dbcolname (PDBPROCESS, INT);
extern LPCSTR       SQLAPI dbcolsource (PDBPROCESS, INT);
extern INT          SQLAPI dbcoltype (PDBPROCESS, INT);
extern DBINT        SQLAPI dbcolutype (PDBPROCESS, INT);
extern INT          SQLAPI dbconvert (PDBPROCESS, INT, LPCBYTE, DBINT, INT, LPBYTE, DBINT);
extern DBINT        SQLAPI dbcount (PDBPROCESS);
extern INT          SQLAPI dbcurcmd (PDBPROCESS);
extern DBINT        SQLAPI dbcurrow (PDBPROCESS);
extern RETCODE      SQLAPI dbcursor (PDBCURSOR, INT, INT, LPCSTR, LPCSTR);
extern RETCODE      SQLAPI dbcursorbind (PDBCURSOR, INT, INT, DBINT, LPDBINT, LPBYTE);
extern RETCODE      SQLAPI dbcursorclose (PDBHANDLE);
extern RETCODE      SQLAPI dbcursorcolinfo (PDBCURSOR, INT, LPSTR, LPINT, LPDBINT, LPINT);
extern RETCODE      SQLAPI dbcursorfetch (PDBCURSOR,  INT, INT);
extern RETCODE      SQLAPI dbcursorfetchex (PDBCURSOR, INT, DBINT, DBINT, DBINT);
extern RETCODE      SQLAPI dbcursorinfo (PDBCURSOR, LPINT, LPDBINT);
extern RETCODE      SQLAPI dbcursorinfoex (PDBCURSOR, LPDBCURSORINFO);
extern PDBCURSOR    SQLAPI dbcursoropen (PDBPROCESS, LPCSTR, INT, INT,UINT, LPDBINT);
extern LPCBYTE      SQLAPI dbdata (PDBPROCESS, INT);
extern BOOL         SQLAPI dbdataready (PDBPROCESS);
extern RETCODE      SQLAPI dbdatecrack (PDBPROCESS, LPDBDATEREC, LPCDBDATETIME);
extern DBINT        SQLAPI dbdatlen (PDBPROCESS, INT);
extern BOOL         SQLAPI dbdead (PDBPROCESS);
extern void         SQLAPI dbexit (void);
extern RETCODE 	    SQLAPI dbenlisttrans(PDBPROCESS, LPVOID);
extern RETCODE	    SQLAPI dbenlistxatrans(PDBPROCESS, BOOL);
extern RETCODE	    SQLAPI dbfcmd (PDBPROCESS, LPCSTR, ...);
extern DBINT        SQLAPI dbfirstrow (PDBPROCESS);
extern void         SQLAPI dbfreebuf (PDBPROCESS);
extern void         SQLAPI dbfreelogin (PLOGINREC);
extern void         SQLAPI dbfreequal (LPCSTR);
extern LPSTR        SQLAPI dbgetchar (PDBPROCESS, INT);
extern SHORT        SQLAPI dbgetmaxprocs (void);
extern INT          SQLAPI dbgetoff (PDBPROCESS, DBUSMALLINT, INT);
extern UINT         SQLAPI dbgetpacket (PDBPROCESS);
extern STATUS       SQLAPI dbgetrow (PDBPROCESS, DBINT);
extern INT          SQLAPI dbgettime (void);
extern LPVOID       SQLAPI dbgetuserdata (PDBPROCESS);
extern BOOL         SQLAPI dbhasretstat (PDBPROCESS);
extern LPCSTR       SQLAPI dbinit (void);
extern BOOL         SQLAPI dbisavail (PDBPROCESS);
extern BOOL         SQLAPI dbiscount (PDBPROCESS);
extern BOOL         SQLAPI dbisopt (PDBPROCESS, INT, LPCSTR);
extern DBINT        SQLAPI dblastrow (PDBPROCESS);
extern PLOGINREC    SQLAPI dblogin (void);
extern RETCODE      SQLAPI dbmorecmds (PDBPROCESS);
extern RETCODE      SQLAPI dbmoretext (PDBPROCESS, DBINT, LPCBYTE);
extern LPCSTR       SQLAPI dbname (PDBPROCESS);
extern STATUS       SQLAPI dbnextrow (PDBPROCESS);
extern RETCODE      SQLAPI dbnullbind (PDBPROCESS, INT, LPCDBINT);
extern INT          SQLAPI dbnumalts (PDBPROCESS, INT);
extern INT          SQLAPI dbnumcols (PDBPROCESS);
extern INT          SQLAPI dbnumcompute (PDBPROCESS);
extern INT          SQLAPI dbnumorders (PDBPROCESS);
extern INT          SQLAPI dbnumrets (PDBPROCESS);
extern PDBPROCESS   SQLAPI dbopen (PLOGINREC, LPCSTR);
extern INT          SQLAPI dbordercol (PDBPROCESS, INT);
extern RETCODE      SQLAPI dbprocinfo (PDBPROCESS, LPDBPROCINFO);
extern void         SQLAPI dbprhead (PDBPROCESS);
extern RETCODE      SQLAPI dbprrow (PDBPROCESS);
extern LPCSTR       SQLAPI dbprtype (INT);
extern LPCSTR       SQLAPI dbqual (PDBPROCESS, INT, LPCSTR);
extern DBINT        SQLAPI dbreadpage (PDBPROCESS, LPCSTR, DBINT, DBINT, LPBYTE);
extern DBINT        SQLAPI dbreadtext (PDBPROCESS, LPVOID, DBINT);
extern RETCODE      SQLAPI dbresults (PDBPROCESS);
extern LPCBYTE      SQLAPI dbretdata (PDBPROCESS, INT);
extern DBINT        SQLAPI dbretlen (PDBPROCESS, INT);
extern LPCSTR       SQLAPI dbretname (PDBPROCESS, INT);
extern DBINT        SQLAPI dbretstatus (PDBPROCESS);
extern INT          SQLAPI dbrettype (PDBPROCESS, INT);
extern RETCODE      SQLAPI dbrows (PDBPROCESS);
extern STATUS       SQLAPI dbrowtype (PDBPROCESS);
extern RETCODE      SQLAPI dbrpcinit (PDBPROCESS, LPCSTR, DBSMALLINT);
extern RETCODE      SQLAPI dbrpcparam (PDBPROCESS, LPCSTR, BYTE, INT, DBINT, DBINT, LPCBYTE);
extern RETCODE      SQLAPI dbrpcsend (PDBPROCESS);
extern RETCODE      SQLAPI dbrpcexec (PDBPROCESS);
extern void         SQLAPI dbrpwclr (PLOGINREC);
extern RETCODE      SQLAPI dbrpwset (PLOGINREC, LPCSTR, LPCSTR, INT);
extern INT          SQLAPI dbserverenum (USHORT, LPSTR, USHORT, LPUSHORT);
extern void         SQLAPI dbsetavail (PDBPROCESS);
extern RETCODE      SQLAPI dbsetmaxprocs (SHORT);
extern RETCODE      SQLAPI dbsetlname (PLOGINREC, LPCSTR, INT);
extern RETCODE      SQLAPI dbsetlogintime (INT);
extern RETCODE      SQLAPI dbsetlpacket (PLOGINREC, USHORT);
extern RETCODE      SQLAPI dbsetnull (PDBPROCESS, INT, INT, LPCBYTE);
extern RETCODE      SQLAPI dbsetopt (PDBPROCESS, INT, LPCSTR);
extern RETCODE      SQLAPI dbsettime (INT);
extern void         SQLAPI dbsetuserdata (PDBPROCESS, LPVOID);
extern RETCODE      SQLAPI dbsqlexec (PDBPROCESS);
extern RETCODE      SQLAPI dbsqlok (PDBPROCESS);
extern RETCODE      SQLAPI dbsqlsend (PDBPROCESS);
extern RETCODE      SQLAPI dbstrcpy (PDBPROCESS, INT, INT, LPSTR);
extern INT          SQLAPI dbstrlen (PDBPROCESS);
extern BOOL         SQLAPI dbtabbrowse (PDBPROCESS, INT);
extern INT          SQLAPI dbtabcount (PDBPROCESS);
extern LPCSTR       SQLAPI dbtabname (PDBPROCESS, INT);
extern LPCSTR       SQLAPI dbtabsource (PDBPROCESS, INT, LPINT);
extern INT          SQLAPI dbtsnewlen (PDBPROCESS);
extern LPCDBBINARY  SQLAPI dbtsnewval (PDBPROCESS);
extern RETCODE      SQLAPI dbtsput (PDBPROCESS, LPCDBBINARY, INT, INT, LPCSTR);
extern LPCDBBINARY  SQLAPI dbtxptr (PDBPROCESS, INT);
extern LPCDBBINARY  SQLAPI dbtxtimestamp (PDBPROCESS, INT);
extern LPCDBBINARY  SQLAPI dbtxtsnewval (PDBPROCESS);
extern RETCODE      SQLAPI dbtxtsput (PDBPROCESS, LPCDBBINARY, INT);
extern RETCODE      SQLAPI dbuse (PDBPROCESS, LPCSTR);
extern BOOL         SQLAPI dbvarylen (PDBPROCESS, INT);
extern BOOL         SQLAPI dbwillconvert (INT, INT);
extern RETCODE      SQLAPI dbwritepage (PDBPROCESS, LPCSTR, DBINT, DBINT, DBINT, LPBYTE);
extern RETCODE      SQLAPI dbwritetext (PDBPROCESS, LPCSTR, LPCDBBINARY, DBTINYINT, LPCDBBINARY, BOOL, DBINT, LPCBYTE);
extern RETCODE      SQLAPI dbupdatetext(PDBPROCESS, LPCSTR, LPCDBBINARY, LPCDBBINARY, INT, DBINT, DBINT, LPCSTR, DBINT, LPCDBBINARY);

#ifdef __cplusplus
}
#endif

#endif // _INC_SQLDB
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SqlDmo.h ===
/////////////////////////////////////////////////////////////////////////////////////////
// Header file for SQLDMO C/C++ Client Component Object interfaces.
// Copyright 1994-1999 Microsoft Corporation.
/////////////////////////////////////////////////////////////////////////////////////////


#ifndef _SQLDMO_H_
#define _SQLDMO_H_

// SQLDMO versions supported for this header file.
#define SQLDMOVERSION_700		0x07000000

// Current version of SQLDMO for this header file (matches sp_MSSQLDMO_version).
#define SQLDMOVERSION_CURRENT	SQLDMOVERSION_700

/////////////////////////////////////////////////////////////////////////////////////////
// Constant enumerations.
/////////////////////////////////////////////////////////////////////////////////////////
#ifndef _SQLDMO_CONSTANTS_
#define _SQLDMO_CONSTANTS_

#ifdef _SQLDMO_ODL_		// Generate helpids if in ODL file.
#define SQLDMO_HELPID(id) [helpcontext(H_##id)]
#else
#define SQLDMO_HELPID(id)
#endif


typedef SQLDMO_HELPID(SQLDMO_OBJECT_TYPE) enum {
	SQLDMOObj_Unknown = 16384,		// Make it the only bit set
	SQLDMOObj_Application = 0,

	// Database objects, value is power(2, sysobjects.sysstat & 0x0f), plus UDDTs in 0.
	// These values can be bitmasked together for object listings.
	SQLDMOObj_UserDefinedDatatype =           0x00000001,    // 1
	SQLDMOObj_SystemTable =                   0x00000002,    // 2
	SQLDMOObj_View =                          0x00000004,    // 4
	SQLDMOObj_UserTable =                     0x00000008,    // 8
	SQLDMOObj_StoredProcedure =               0x00000010,    // 16
	SQLDMOObj_Default =                       0x00000040,    // 64
	SQLDMOObj_Rule =                          0x00000080,    // 128
	SQLDMOObj_Trigger =                       0x00000100,    // 256
	SQLDMOObj_AllDatabaseUserObjects =        0x000001fd,    // All but system tables
	SQLDMOObj_AllDatabaseObjects =            0x000001ff,    // All including system tables




        // Other Database objects (not in sysobjects)
        SQLDMOObj_SystemDatatype =                0x00001000,
        SQLDMOObj_User =                          0x00002000,
        SQLDMOObj_Group =                         0x00003000,
        SQLDMOObj_Index =                         0x00004000,
        SQLDMOObj_Key =                           0x00005000,
        SQLDMOObj_Column =                        0x00006000,
        SQLDMOObj_DBObject =                      0x00007000,
        SQLDMOObj_DBOption =                      0x00008000,
        SQLDMOObj_ProcedureParameter =            0x00009000,
        SQLDMOObj_Permission =                    0x0000A000,
        SQLDMOObj_IntegratedSecurity =            0x0000B000,
        SQLDMOObj_Check =                         0x0000C000,
        SQLDMOObj_DRIDefault =                    0x0000D000,

        // Objects not in databases.
        SQLDMOObj_SQLServer =                     0x00020000,
        SQLDMOObj_Database =                      0x00021000,
        SQLDMOObj_BackupDevice =                  0x00022000,
        SQLDMOObj_Login =                         0x00023000,
        SQLDMOObj_Language =                      0x00024000,
        SQLDMOObj_RemoteServer =                  0x00025000,
        SQLDMOObj_RemoteLogin =                   0x00026000,
        SQLDMOObj_Configuration =                 0x00027000,
        SQLDMOObj_ConfigValue =                   0x00028000,
        SQLDMOObj_QueryResults =                  0x00029000,
        SQLDMOObj_TransactionLog =                0x0002A000,
        SQLDMOObj_Registry =                      0x0002B000,
        SQLDMOObj_Transfer =                      0x0002C000,
        SQLDMOObj_Backup =                        0x0002D000,
        SQLDMOObj_AutoProperty =                  0x0002E000,
        SQLDMOObj_ServerGroup =                   0x0002F000,
        SQLDMOObj_RegisteredServer =              0x00031000,
        SQLDMOObj_BulkCopy =                      0x00032000,
        SQLDMOObj_FileGroup =                     0x00033000,
        SQLDMOObj_DBFile =                        0x00034000,
        SQLDMOObj_LogFile =                       0x00035000,
        SQLDMOObj_ServerRole =                    0x00036000,
        SQLDMOObj_DatabaseRole =                  0x00037000,
        SQLDMOObj_Restore =                       0x00038000,
        SQLDMOObj_LinkedServer =                  0x00039000,
        SQLDMOObj_LinkedServerLogin =             0x00040000,
        SQLDMOObj_FullTextCatalog =               0x00041000,
        SQLDMOObj_FullTextService =               0x00042000,








   // Replication Objects
	SQLDMOObj_TransPublication =      		0x00101000,
	SQLDMOObj_TransArticle =          		0x00102000,
	SQLDMOObj_TransSubscription =     		0x00103000,
	SQLDMOObj_TransPullSubscription =		0x00104000,
	SQLDMOObj_MergePublication =         	0x00105000,
	SQLDMOObj_MergeArticle = 				0x00106000,
	SQLDMOObj_MergeSubscription =        	0x00107000,
	SQLDMOObj_MergePullSubscription =		0x00108000,
	SQLDMOObj_Replication =                 0x00109000,
	SQLDMOObj_Publisher =                   0x0010A000,
	SQLDMOObj_Subscriber =                  0x0010B000,
	SQLDMOObj_Distributor =                 0x0010C000,
	SQLDMOObj_ReplicationSecurity =         0x0010D000,
	SQLDMOObj_DistributionPublisher =       0x0010E000,
	SQLDMOObj_RegisteredSubscriber =        0x0010F000,
	SQLDMOObj_ReplicationDatabase =         0x00110000,
	SQLDMOObj_DistributionDatabase =        0x00111000,
	SQLDMOObj_ReplicationTable =            0x00112000,
	SQLDMOObj_ReplicationStoredProcedure =  0x00113000,
	SQLDMOObj_DistributionPublication =     0x00114000,
	SQLDMOObj_DistributionArticle =         0x00115000,
	SQLDMOObj_DistributionSubscription =    0x00116000,
	SQLDMOObj_MergeSubsetFilter = 			0x00117000,












   // SQL JobServer Objects
        SQLDMOObj_AlertSystem =                   0x00201000,
        SQLDMOObj_JobServer =                     0x00202000,
        SQLDMOObj_Alert =                         0x00203000,
        SQLDMOObj_Operator =                      0x00204000,
        SQLDMOObj_Job =                           0x00205000,
        SQLDMOObj_JobStep =                       0x00206000,
        SQLDMOObj_TargetServer =                  0x00207000,
        SQLDMOObj_TargetServerGroup =             0x00208000,
        SQLDMOObj_Category =                      0x00209000,
        SQLDMOObj_Schedule =                      0x00210000,
        SQLDMOObj_JobFilter =                     0x00211000,
        SQLDMOObj_JobHistoryFilter =              0x00212000,
        SQLDMOObj_JobSchedule =                   0x00213000,








   SQLDMOObj_Last =                          0x10000000     // End of enumeration.

} SQLDMO_OBJECT_TYPE;



typedef SQLDMO_HELPID(SQLDMO_KEY_TYPE) enum {
        SQLDMOKey_Unknown = 0,
        SQLDMOKey_Primary = 1,
        SQLDMOKey_Unique = 2,
        SQLDMOKey_Foreign = 3
} SQLDMO_KEY_TYPE;

typedef SQLDMO_HELPID(SQLDMO_DEVICE_TYPE) enum {
        SQLDMODevice_Unknown = 100,
        SQLDMODevice_DiskDump = 2,
        SQLDMODevice_FloppyADump = 3,
        SQLDMODevice_FloppyBDump = 4,
        SQLDMODevice_TapeDump = 5,
        SQLDMODevice_PipeDump = 6,
        SQLDMODevice_CDROM = 7
} SQLDMO_DEVICE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_PRIVILEGE_TYPE) enum {
        SQLDMOPriv_Unknown = 0,

        // Privilege values, different from sysprotects as we need to bitmask.
        // Object privileges.
        SQLDMOPriv_Select = 1,
        SQLDMOPriv_Insert = 2,
        SQLDMOPriv_Update = 4,
        SQLDMOPriv_Delete = 8,
        SQLDMOPriv_Execute = 16,
        SQLDMOPriv_References = 32,
        SQLDMOPriv_AllObjectPrivs = 63,

        // Database (statement) privileges.
        SQLDMOPriv_CreateTable = 128,
        SQLDMOPriv_CreateDatabase = 256,
        SQLDMOPriv_CreateView = 512,
        SQLDMOPriv_CreateProcedure = 1024,
        SQLDMOPriv_DumpDatabase = 2048,
        SQLDMOPriv_CreateDefault = 4096,
        SQLDMOPriv_DumpTransaction = 8192,
        SQLDMOPriv_CreateRule = 16384,
        SQLDMOPriv_DumpTable = 32768,
        SQLDMOPriv_AllDatabasePrivs = 65408
} SQLDMO_PRIVILEGE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_PROCEDURE_TYPE) enum {
        SQLDMOProc_Unknown = 0,
        SQLDMOProc_Standard = 1,
        SQLDMOProc_Extended = 2,
        SQLDMOProc_Macro = 3,
        SQLDMOProc_ReplicationFilter = 4
} SQLDMO_PROCEDURE_TYPE;

// Trigger types may be OR'd together.
typedef SQLDMO_HELPID(SQLDMO_TRIGGER_TYPE) enum {
        SQLDMOTrig_Unknown = 0,
        SQLDMOTrig_Insert = 1,
        SQLDMOTrig_Update = 2,
        SQLDMOTrig_Delete = 4,
        SQLDMOTrig_All = 7
} SQLDMO_TRIGGER_TYPE;

typedef SQLDMO_HELPID(SQLDMO_INDEX_TYPE) enum {                                                 // SQLDMO Internal:  sync with ntinc\index.h
        // Index type values as in sysindexes.status.
        SQLDMOIndex_Default = 0x0000,
        SQLDMOIndex_IgnoreDupKey = 0x0001,
        SQLDMOIndex_Unique = 0x0002,
//        SQLDMOIndex_IgnoreDupRow = 0x0004,      // obsolete in 7.0
        SQLDMOIndex_Clustered = 0x0010,
//        SQLDMOIndex_AllowDupRow = 0x0040,       // obsolete in 7.0
        SQLDMOIndex_PadIndex = 0x0100,          // new for 7.0, fillfactor applies to index nodes also
        SQLDMOIndex_SortedData = 0x0200,
        SQLDMOIndex_SortedDataReorg = 0x2000,   // 6.0-only; sorted-data with reorganization
        SQLDMOIndex_DropExist = 0x8000,         // new for 7.0, Drop the existing index
//        SQLDMOIndex_Valid = 0xA357,             // Any of foregoing (writable) types
        SQLDMOIndex_Valid = 0xA313,             // Any of foregoing (writable) types
        SQLDMOIndex_Hypothetical = 0x0020,      // new for 7.0, statistics only index, we get this for both 'CREATE STATISTICS' and 'CREATE INDEX...WITH STATISTICS_ONLY'
        SQLDMOIndex_DRIPrimaryKey = 0x0800,     // 6.0-only, readonly; DRI-generated types
        SQLDMOIndex_DRIUniqueKey = 0x1000,
        SQLDMOIndex_DRIIndex = 0x1800,          // Index implements DRI (DRIPrimaryKey | DRIUniqueKey)
        SQLDMOIndex_NoRecompute = 0x01000000,   // new for 7.0
} SQLDMO_INDEX_TYPE;

typedef SQLDMO_HELPID(SQLDMO_QUERY_DATATYPE) enum {
   // Indexed as per ..\common\inc\sql.hpp and sql.h sqlext.h datatype constants.
        SQLDMO_DTypeUnknown     = 0,
        SQLDMO_DTypeChar        = 1,                         // SQL_CHAR
        SQLDMO_DTypeText        = -1,                        // SQL_LONGVARCHAR
        SQLDMO_DTypeVarchar     = 12,                        // SQL_VARCHAR
        SQLDMO_DTypeVarBinary   = -3,                        // SQL_VARBINARY
        SQLDMO_DTypeBinary      = -2,                        // SQL_BINARY
        SQLDMO_DTypeImage       = -4,                        // SQL_LONGVARBINARY
        SQLDMO_DTypeFloat4      = 7,                         // SQL_REAL
        SQLDMO_DTypeFloat8      = 8,                         // SQL_DOUBLE
        SQLDMO_DTypeInt1        = -6,                        // SQL_TINYINT
        SQLDMO_DTypeInt2        = 5,                         // SQL_SMALLINT
        SQLDMO_DTypeInt4        = 4,                         // SQL_INTEGER
        SQLDMO_DTypeMoney4      = 3,                         // SQL_DECIMAL
        SQLDMO_DTypeMoney       = 3,                         // SQL_DECIMAL
        SQLDMO_DTypeDateTime    = -2,                        // SQL_BINARY
        SQLDMO_DTypeDateTime4   = 93,                        // SQL_TYPE_TIMESTAMP
        SQLDMO_DTypeBit         = -7,                        // SQL_BIT
        SQLDMO_DTypeUChar       = -8,                        // SQL_WCHAR
        SQLDMO_DTypeUVarchar    = -9,                        // SQL_WVARCHAR
        SQLDMO_DTypeGUID        = -11,                       // SQL_GUID
        SQLDMO_DTypeNText       = -10,                       // SQL_WLONGVARCHAR
} SQLDMO_QUERY_DATATYPE;

typedef SQLDMO_HELPID(SQLDMO_AUDIT_TYPE) enum {
        SQLDMOAudit_None = 0,
        SQLDMOAudit_Success = 1,
        SQLDMOAudit_Failure = 2,
        SQLDMOAudit_All = 3
} SQLDMO_AUDIT_TYPE;

typedef SQLDMO_HELPID(SQLDMO_SECURITY_TYPE) enum {
        SQLDMOSecurity_Min = 0,
        SQLDMOSecurity_Normal = 0,
        SQLDMOSecurity_Integrated = 1,
        SQLDMOSecurity_Mixed = 2,
        SQLDMOSecurity_Max = 2
} SQLDMO_SECURITY_TYPE;

typedef SQLDMO_HELPID(SQLDMO_MEDIA_TYPE) enum {
        SQLDMOMedia_Floppy = 1,
        SQLDMOMedia_FixedDisk = 2,
        SQLDMOMedia_Tape = 4,
        SQLDMOMedia_CDROM = 8,
        SQLDMOMedia_All = 15
} SQLDMO_MEDIA_TYPE;

typedef SQLDMO_HELPID(SQLDMO_PERFMON_TYPE) enum {
        SQLDMOPerfmon_None = 1000,                                      // No perfmon integration
        SQLDMOPerfmon_MinSet = 0,
        SQLDMOPerfmon_Continuous = 0,
        SQLDMOPerfmon_OnDemand = 1,
        SQLDMOPerfmon_MaxSet = 1
} SQLDMO_PERFMON_TYPE;

typedef SQLDMO_HELPID(SQLDMO_DBSTATUS_TYPE) enum {
        SQLDMODBStat_Normal = 0x0000,
        SQLDMODBStat_Loading = 0x0020,              // isinload
        SQLDMODBStat_Recovering = 0x00c0,           // 0x40 | 0x080, isinrecovery, isnotrecovered
        SQLDMODBStat_Suspect = 0x0100,              // issuspect, isshutdown (IsSuspect for recovery failure, IsShutdown for missing files)
        SQLDMODBStat_Offline = 0x0200,              // isoffline, isdetached
        SQLDMODBStat_Inaccessible = 0x03e0,         // Loading | Recovering | Suspect | Offline
        SQLDMODBStat_EmergencyMode = 0x8000,        // isemergencymode
        SQLDMODBStat_Standby = 0x0400,              // online as readonly, with restore log allowed
        SQLDMODBStat_All = 0x87e0
} SQLDMO_DBSTATUS_TYPE;

typedef SQLDMO_HELPID(SQLDMO_COPYDATA_TYPE) enum {
        SQLDMOCopyData_False = 0,
        SQLDMOCopyData_Replace = 1,
        SQLDMOCopyData_Append = 2
} SQLDMO_COPYDATA_TYPE;

typedef SQLDMO_HELPID(SQLDMO_DATAFILE_TYPE) enum {
        // Bulk-copy datafile options (Table/View.Export and Table.Import).  These are mutually exclusive.
        SQLDMODataFile_CommaDelimitedChar =             0x00000001,     // ColumnDelimiter == Comma, RowDelimiter == <CRLF>
        SQLDMODataFile_Default =                                        0x00000001,     // Default == csv
        SQLDMODataFile_TabDelimitedChar =                       0x00000002,     // ColumnDelimiter == <TAB>, RowDelimiter == <CRLF>
        SQLDMODataFile_SpecialDelimitedChar =           0x00000003,     // Set BulkCopy.ColumnDelimiter and .RowDelimiter
        SQLDMODataFile_NativeFormat =                           0x00000004,     // Use native datatype formats
        SQLDMODataFile_UseFormatFile =                          0x00000005,     // Use an existing format file.
} SQLDMO_DATAFILE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_STATUSINFO_TYPE) enum {
        SQLDMOStatInfo_Unknown = 0,                                     // Initialization value, not valid as a parameter
        SQLDMOStatInfo_DatabaseStatus = 0x0001,         // Database.Status
        SQLDMOStatInfo_DatabaseSpace = 0x0002,          // Database.SpaceAvailable
        SQLDMOStatInfo_AutoVerifyConnection = 0x0004,   // Server.VerifyConnection done automatically.
        SQLDMOStatInfo_All = 0x0007                                     // All the foregoing
} SQLDMO_STATUSINFO_TYPE;

typedef SQLDMO_HELPID(SQLDMO_SCRIPT_TYPE) enum {
        // What's included in the Script method output.
        SQLDMOScript_Default 				= 0x0004, 	// Object creation only
        SQLDMOScript_Drops 					= 0x0001, 	// Include object drops
        SQLDMOScript_ObjectPermissions 		= 0x0002, 	// Include object permissions
        SQLDMOScript_PrimaryObject 			= 0x0004, 	// Include object creation
        SQLDMOScript_ClusteredIndexes 		= 0x0008,   // Include clustered index creation (table only)
        SQLDMOScript_Triggers 				= 0x0010,   // Include trigger creation (table only)
        SQLDMOScript_DatabasePermissions	= 0x0020,   // Database (statement) permissions
        SQLDMOScript_Permissions 			= 0x0022,   // Both database and object permissions (for scripting users).
        SQLDMOScript_ToFileOnly 			= 0x0040,   // If not set, a string is returned (if file nonnull, both are done)
        SQLDMOScript_Bindings 				= 0x0080,   // Include rule/default bindings (table only)
        SQLDMOScript_AppendToFile 			= 0x0100,   // Append to output file if it already exists.
        SQLDMOScript_NoDRI 					= 0x0200,   // Do not include DRI (intended for use if targeting pre-6.0 server with scripts)
        SQLDMOScript_UDDTsToBaseType 		= 0x0400,   // Convert UserDefinedDatatypes to base type when creating columns (table only)
		// 0x0800 available.
        SQLDMOScript_IncludeIfNotExists 	= 0x1000,   // Include "if not exists" on object creation.
        SQLDMOScript_NonClusteredIndexes	= 0x2000,   // Include nonclustered index creation (table only)
        SQLDMOScript_Indexes 				= 0x12008,  // Include all index creation (table only)
        SQLDMOScript_Aliases 				= 0x4000,   // For users, script aliases
        SQLDMOScript_NoCommandTerm 			= 0x8000,   // Do not append "GO" to commands.
        SQLDMOScript_DRIIndexes 			= 0x10000,  // Script DRI-generated indexes as indexes if NoDRI is specified.
        SQLDMOScript_IncludeHeaders 		= 0x20000,  // Include descriptive header in individual object script output.
        SQLDMOScript_OwnerQualify 			= 0x40000,  // Owner-qualify DROP statements (and CREATE where possible).
        SQLDMOScript_TimestampToBinary 		= 0x80000,  // Convert timestamp columns to binary(8) (for replication, etc.).
        SQLDMOScript_SortedData 			= 0x100000, // If the index or constraint was clustered, append sorted_data
        SQLDMOScript_SortedDataReorg 		= 0x200000, // Same as SQLDMOScript_SortedData, but Reorg is used to preserve fillfactor.
        SQLDMOScript_TransferDefault 		= 0x670ff,  // The default script type for Transfer. This is combination of following flags:
                                                        // SQLDMOScript_PrimaryObject | SQLDMOScript_Bindings | SQLDMOScript_ClusteredIndexes | SQLDMOScript_NonClusteredIndexes |
                                                        // SQLDMOScript_Triggers| SQLDMOScript_ToFileOnly|SQLDMOScript_Permissions| SQLDMOScript_IncludeHeaders|
                                                        // SQLDMOScript_Aliases|SQLDMOScript_IncludeIfNotExists|SQLDMOScript_OwnerQualify|SQLDMOScript_Drops
        // DRI-restrictive flags.  These may be combined with PrimaryObject as desired.
        // These are to be used to include or exclude specific DRI components, such
        // as for multi-pass scripting.
        SQLDMOScript_DRI_NonClustered 		= 0x00400000,
        SQLDMOScript_DRI_Clustered 			= 0x00800000,
        SQLDMOScript_DRI_Checks				= 0x01000000,
        SQLDMOScript_DRI_Defaults 			= 0x02000000,
        SQLDMOScript_DRI_UniqueKeys 		= 0x04000000,
        SQLDMOScript_DRI_ForeignKeys		= 0x08000000,
        SQLDMOScript_DRI_PrimaryKey 		= 0x10000000,
        SQLDMOScript_DRI_AllKeys 			= 0x1c000000, 	// Bitmask of all key types (PK, FK, Unique).
        SQLDMOScript_DRI_AllConstraints 	= 0x1f000000,   // Bitmask of all constraint types (PK, FK, Unique, Check, Default).
        SQLDMOScript_DRI_All 				= 0x1fc00000,   // All the foregoing (specifying this and not PrimaryObject gets just DRI output).
        SQLDMOScript_DRIWithNoCheck 		= 0x20000000,   // Script DRI with nocheck (not included in _DRI_All).
        SQLDMOScript_NoIdentity 			= 0x40000000,   // Script with no IDENTITY attribute (e.g. for Replication).

        SQLDMOScript_UseQuotedIdentifiers = 0x80000000,   // Scripts with quoted identifiers. Also will cause Transfer to SET QUOTED_IDENTIFIER ON on the destination.
                                                          // !!! This is a backward compatible flag, when scripting from post 6.5 server, this flag would be igored.
                                                          // !!! When scripting out from 7.0: StoreProcedure, View and Trigger carry their own QI and AnsiNulls setting
                                                          //     (based on the setting when the original object was created), and this flag does not affect them anymore.
                                                          //     At the end of these object scripting, they set QI to the setting according to this flag,
                                                          //     and AnsiNulls to ON (ODBC default).
} SQLDMO_SCRIPT_TYPE;

typedef SQLDMO_HELPID(SQLDMO_SCRIPT2_TYPE) enum {
        // Optional Script parameter.
        SQLDMOScript2_Default          = 0x0000,   // Default
	     SQLDMOScript2_AnsiPadding      = 0x0001,   // Explicitly SET ANSI PADDING on or off before the create table
        SQLDMOScript2_AnsiFile         = 0x0002,   // Generate ANSI output file
        SQLDMOScript2_UnicodeFile      = 0x0004,   // Generate UNICODE output file
        SQLDMOScript2_NonStop          = 0x0008,   // When error during script file generation, log error and continue.
                                                   // This is a special case for Convert(scptxfr70.exe), not a general purpose flag
                                                   // If client uses this flag to generate output files, they are running on their own risk
                                                   // This flag affects script out (and only the part used by Convert), it does not affect transfer in.
        SQLDMOScript2_NoFG             = 0x0010,   // Do not generate 'ON <filegroup>'. For Replication
        SQLDMOScript2_MarkTriggers     = 0x0020,   // Mark system triggers. For Replication single table script only.
        SQLDMOScript2_OnlyUserTriggers = 0x0040,   // Only script user triggers. For Replication single table script only.
        SQLDMOScript2_EncryptPWD       = 0x0080,   // Script encrypted password for logins
        SQLDMOScript2_SeparateXPs      = 0x0100,   // Script XP to a separate file (Convert)
        SQLDMOScript2_NoWhatIfIndexes  = 0x0200,   // Do not script What-If indexes (default: script out)
        // Following are SQLAgent related scripting flags
        SQLDMOScript2_AgentNotify      = 0x0400,   // Script Notification for SQLAgent alert object
        SQLDMOScript2_AgentAlertJob    = 0x0800,   // Include Job in Alert scripting
        // Monarch full-text flag
        SQLDMOScript2_FullTextIndex    = 0x80000,   // Include full-text index scripting (table only)
        SQLDMOScript2_LoginSID         = 0x100000,  // Include the SID for standard SQLServer logins
        SQLDMOScript2_FullTextCat      = 0x200000,  // Include full-text catelog scripting
} SQLDMO_SCRIPT2_TYPE;

typedef SQLDMO_HELPID(SQLDMO_XFRSCRIPTMODE_TYPE) enum {
        // How many files the XFR Script is to written to.
        SQLDMOXfrFile_Default             = 0x0001,          // Default to summary files
        SQLDMOXfrFile_SummaryFiles        = 0x0001,          // One files per class of objects transferred/dropped
        SQLDMOXfrFile_SingleFile          = 0x0002,          // All scripts go to same file
        SQLDMOXfrFile_SingleFilePerObject = 0x0004,          // One file per object
        SQLDMOXfrFile_SingleSummaryFile   = 0x0008,          // One file with summary file format
} SQLDMO_XFRSCRIPTMODE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_DEPENDENCY_TYPE) enum {
        SQLDMODep_Parents = 0,                                          // Default:  return all parents of input object
        SQLDMODep_FullHierarchy = 0x10000,                      // Return full hierarchy; multiple rows of object and parents/children
        SQLDMODep_OrderDescending = 0x20000,            // Order return in descending order
        SQLDMODep_Children = 0x40000,                           // Return children of input object
        SQLDMODep_ReturnInputObject = 0x80000,          // Include input object in the return set
        SQLDMODep_FirstLevelOnly = 0x100000,            // Return only immediate parents/children
        SQLDMODep_DRIOnly = 0x200000,                           // Return DRI dependencies only.
        SQLDMODep_Valid = 0x3f0000                                      // All valid options.
} SQLDMO_DEPENDENCY_TYPE;

typedef SQLDMO_HELPID(SQLDMO_OBJSORT_TYPE) enum {
        SQLDMOObjSort_Name = 0,
        SQLDMOObjSort_Type = 1,
        SQLDMOObjSort_Owner = 2,
        SQLDMOObjSort_Date = 3
} SQLDMO_OBJSORT_TYPE;

typedef SQLDMO_HELPID(SQLDMO_SVCSTATUS_TYPE) enum {
        SQLDMOSvc_Unknown = 0,
        SQLDMOSvc_Running = 1,
        SQLDMOSvc_Paused = 2,
        SQLDMOSvc_Stopped = 3,
        SQLDMOSvc_Starting = 4,
        SQLDMOSvc_Stopping = 5,
        SQLDMOSvc_Continuing = 6,
        SQLDMOSvc_Pausing = 7
} SQLDMO_SVCSTATUS_TYPE;

typedef SQLDMO_HELPID(SQLDMO_SRVOPTION_TYPE) enum {
        SQLDMOSrvOpt_Unknown             = 0x0000,
        SQLDMOSrvOpt_RPC                 = 0x0001,  // For both remote and linked server, through sp_serveroption
        SQLDMOSrvOpt_Publisher           = 0x0002,
        SQLDMOSrvOpt_Subscriber          = 0x0004,
        SQLDMOSrvOpt_Distributor         = 0x0008,
        SQLDMOSrvOpt_DistPublisher       = 0x0010,    // Separate from Publisher and Distributor; dpub bit set
//        SQLDMOSrvOpt_ODBCDatasource = 0x0020,   // Server is an ODBC datasource
//        SQLDMOSrvOpt_Valid = 0x0021,            // Only valid to set the RPC and ODBCDataSource options
        // Following are new linked server options
        SQLDMOSrvOpt_RPC_out             = 0x0040,  // Through sp_serveroption
        SQLDMOSrvOpt_DataAccess          = 0x0080,  // Through sp_serveroption
        SQLDMOSrvOpt_CollationCompatible = 0x0100,  // Through sp_serveroption
        SQLDMOSrvOpt_NonTransacted       = 0x0200,  // Through registry
        SQLDMOSrvOpt_InProcess           = 0x0400,  // Through registry
        SQLDMOSrvOpt_IndexAsAccessPath   = 0x0800,  // Through registry
        SQLDMOSrvOpt_LevelZeroOnly       = 0x1000,  // Through registry
        SQLDMOSrvOpt_NestedQueries       = 0x2000,  // Through registry
        SQLDMOSrvOpt_DynamicParameters   = 0x4000,  // Through registry
} SQLDMO_SRVOPTION_TYPE;

typedef SQLDMO_HELPID(SQLDMO_TABLEATT_TYPE) enum {
        // Values from sysobjects.category.
        SQLDMOTabAtt_Identity =         0x0001,         // Table has an identity column
        SQLDMOTabAtt_SystemObject =     0x0002,         // Table is a Microsoft system-required object
        SQLDMOTabAtt_ForeignKey =       0x0004,         // Table has a foreign key
        SQLDMOTabAtt_Referenced =       0x0008,         // Table is referenced by another table's foreign key
        SQLDMOTabAtt_Published =        0x0020,         // Table is published
        SQLDMOTabAtt_Replicated =       0x0040,         // Table has an active subscriber
        SQLDMOTabAtt_Check =            0x0080,         // Table has a check constraint
        SQLDMOTabAtt_Replica =          0x0100,         // Table is actively subscribed to a publisher
        SQLDMOTabAtt_PrimaryKey =       0x0200,         // Table has a primary key
        SQLDMOTabAtt_Unique =           0x0400,         // Table has a unique constraint
        SQLDMOTabAtt_Default =          0x0800,         // Table has a DRI default
        SQLDMOTabAtt_ReplCheck =        0x1000,         // Table has a check constraint that excludes replication
        SQLDMOTabAtt_HasConstraint =0x1c84              // Table has at least one DRI constraint
} SQLDMO_TABLEATT_TYPE;

typedef SQLDMO_HELPID(SQLDMO_INTSECLOGIN_TYPE) enum {
        SQLDMOIntSecLogin_Unknown = 0,
        SQLDMOIntSecLogin_Min = 1,
        SQLDMOIntSecLogin_Admin = 1,
        SQLDMOIntSecLogin_User = 2,
        SQLDMOIntSecLogin_Replication = 3,
        SQLDMOIntSecLogin_Max = 3
} SQLDMO_INTSECLOGIN_TYPE;

typedef SQLDMO_HELPID(SQLDMO_VERIFYCONN_TYPE) enum {
        SQLDMOConn_LastState = 0x0001,                  // State of conn at end of last operation.
        SQLDMOConn_CurrentState = 0x0002,               // Actual current state (checks pipe, etc.)
        SQLDMOConn_ReconnectIfDead = 0x0006,    // Reconnect if we've been disconnected (0x0004 | CurrentState)..
        SQLDMOConn_Valid = 0x0007                               // All valid conn operations.
} SQLDMO_VERIFYCONN_TYPE;

typedef SQLDMO_HELPID(SQLDMO_EXEC_TYPE) enum {
        // For ExecuteImmediate, tells how to handle multi-batch commands.
        SQLDMOExec_Default = 0x0000,                    // None of the following
        SQLDMOExec_NoCommandTerm = 0x0001,              // No command-terminator parsing (i.e. don't check for "GO"; exec as single batch)
        SQLDMOExec_ContinueOnError = 0x0002,    // Continue batch on all but broken-connection errors.
        SQLDMOExec_NoExec = 0x0004,                             // SET NOEXEC ON/OFF
        SQLDMOExec_ParseOnly = 0x0008,                   // SET PARSEONLY ON/OFF
        SQLDMOExec_QI_ON = 0x0010               // SET QI ON before execution, special work around for Quoted Identifier, set QI OFF before return
} SQLDMO_EXEC_TYPE;

typedef SQLDMO_HELPID(SQLDMO_CONFIGVALUE_TYPE) enum {
        SQLDMOConfig_RecoveryInterval = 101,
        SQLDMOConfig_AllowUpdates = 102,
        SQLDMOConfig_UserConnections = 103,
        SQLDMOConfig_Locks = 106,
        SQLDMOConfig_OpenObjects = 107,
        SQLDMOConfig_FillFactor = 109,
        SQLDMOConfig_NestedTriggers = 115,
        SQLDMOConfig_RemoteAccess = 117,
        SQLDMOConfig_DefaultLanguage = 124,
        SQLDMOConfig_LanguageInCache = 125,
        SQLDMOConfig_MaxAsyncIO = 502,
        SQLDMOConfig_MaxWorkerThreads = 503,
        SQLDMOConfig_NetworkPacketSize = 505,
        SQLDMOConfig_ShowAdvancedOption = 518,
        SQLDMOConfig_RemoteProcTrans = 542,
        SQLDMOConfig_RemoteConnTimeout = 543,
        SQLDMOConfig_TimeSlice = 1110,
        SQLDMOConfig_DefaultSortorderId = 1123,
        SQLDMOConfig_SpinCounter = 1514,
        SQLDMOConfig_PriorityBoost = 1517,
        SQLDMOConfig_RemoteLoginTimeout = 1519,
        SQLDMOConfig_RemoteQueryTimeout = 1520,
        SQLDMOConfig_CursorThreshold = 1531,
        SQLDMOConfig_SetWorkingSetSize = 1532,
        SQLDMOConfig_ResourceTimeout = 1533,
        SQLDMOConfig_UserOptions = 1534,
        SQLDMOConfig_ProcessorAffinityMask = 1535,
        SQLDMOConfig_MaxTextReplSize = 1536,
        // New for 7.0
        SQLDMOConfig_UnicodeLocalID = 1124,
        SQLDMOConfig_UnicodeComparisonStyle = 1125,
        SQLDMOConfig_LanguageNeutral = 1126,
        SQLDMOConfig_TwoDigitYearCutoff = 1127,
        SQLDMOConfig_IndexCreateMem = 1505,
        SQLDMOConfig_MediaRetention = 1537,
        SQLDMOConfig_CostThresholdForParallelism = 1538,
        SQLDMOConfig_MaxDegreeOfParallelism = 1539,
        SQLDMOConfig_MimMemoryPerQuery = 1540,
        SQLDMOConfig_QueryWait = 1541,
        SQLDMOConfig_VLMSize = 1542,
        SQLDMOConfig_MinMemory = 1543,
        SQLDMOConfig_MaxMemory = 1544,
        SQLDMOConfig_QueryMaxTime = 1545,
        SQLDMOConfig_LightweightPooling = 1546,

/** obsolete in 7.0
        SQLDMOConfig_Memory = 104,
        SQLDMOConfig_OpenDatabases = 105,
        SQLDMOConfig_ProcedureCache = 108,
        SQLDMOConfig_DatabaseSize = 111,
        SQLDMOConfig_MediaRetention = 112,
        SQLDMOConfig_RecoveryFlags = 113,
        SQLDMOConfig_TempdbInRamMB = 501,
        SQLDMOConfig_RAWorkerThreads = 508,
        SQLDMOConfig_BackupThreads = 540,
        SQLDMOConfig_BackupBufferSize = 541,
        SQLDMOConfig_RemoteSites = 1119,
        SQLDMOConfig_RASlotsPerThread = 1509,
        SQLDMOConfig_RAPrefetches = 1510,
        SQLDMOConfig_RADelay = 1511,
        SQLDMOConfig_RACacheMissLimit = 1512,
        SQLDMOConfig_RACacheHitLimit = 1513,
        SQLDMOConfig_LogwriteSleepMS = 1530,
        SQLDMOConfig_SortPages = 1505,
**/
} SQLDMO_CONFIGVALUE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_SRVUSERPROFILE_TYPE) enum {
        // Output from Server.GetUserProfile
        SQLDMOSrvUserProf_None = 0x0000,
        SQLDMOSrvUserProf_SaLogin = 0x0001,                                             // User is System Administrator
        SQLDMOSrvUserProf_CreateDatabase = 0x0002,                              // User has privilege to do this
        SQLDMOSrvUserProf_CreateXP = 0x0004,                                    // User can create Extended Stored Procedures

        SQLDMOSrvUserProf_AllProfileBits = 0x0007                               // All server profile bits
} SQLDMO_SRVUSERPROFILE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_DBUSERPROFILE_TYPE) enum {
        // Output from Database.GetUserProfile
        SQLDMODbUserProf_None = 0x0000,
        SQLDMODbUserProf_DboLogin = 0x0001,                                             // User is Database Owner
        SQLDMODbUserProf_CreateTable = 0x0002,                                  // User has these privileges
        SQLDMODbUserProf_CreateView = 0x0004,
        SQLDMODbUserProf_CreateProcedure = 0x0008,
        SQLDMODbUserProf_DumpDatabase = 0x0010,
        SQLDMODbUserProf_CreateDefault = 0x0020,
        SQLDMODbUserProf_DumpTransaction = 0x0040,
        SQLDMODbUserProf_CreateRule = 0x0080,
        SQLDMODbUserProf_DumpTable = 0x0100,

        SQLDMODbUserProf_AllProfileBits = 0x01ff,                               // All DB-valid profile bits

        SQLDMODbUserProf_InvalidLogin = 0x40000000,                             // Current login not a valid user in this database.
        SQLDMODbUserProf_InaccessibleDb = 0x80000000,                   // Database Loading | Recovering | Suspect | Offline
        SQLDMODbUserProf_DbNotAvailable = 0xc0000000                    // All Database-not-accessible bits.
} SQLDMO_DBUSERPROFILE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_OS_TYPE) enum {
        SQLDMO_WIN95 = 1,
        SQLDMO_WINNT = 2
} SQLDMO_OS_TYPE;

typedef SQLDMO_HELPID(SQLDMO_PACKAGE_TYPE) enum {
        SQLDMO_Unknown    = 0,
        SQLDMO_OFFICE     = 1,
        SQLDMO_STANDARD   = 2,
        SQLDMO_ENTERPRISE = 3,
        SQLDMO_MSDE       = 4
} SQLDMO_PACKAGE_TYPE;

// Constant values.
typedef SQLDMO_HELPID(SQLDMO_CONSTANTS_TYPE) enum {
        SQLDMO_NOENDDATE =                              99991231,       // For task dates/times
        SQLDMO_NOENDTIME =                              235959,         // For task dates/times
        SQLDMO_USEEXISTINGFILLFACTOR =  0                       // For Table.RebuildIndexes
} SQLDMO_CONSTANTS_TYPE;

typedef SQLDMO_HELPID(SQLDMO_LOGIN_TYPE) enum {
        SQLDMOLogin_NTUser   = 0,
        SQLDMOLogin_NTGroup  = 1,
        SQLDMOLogin_Standard = 2,
} SQLDMO_LOGIN_TYPE;

typedef SQLDMO_HELPID(SQLDMO_ROLE_TYPE) enum {
        SQLDMORole_Server    = 0x0001,
        SQLDMORole_Database  = 0x0002,
        SQLDMORole_All       = 0x0003,
} SQLDMO_ROLE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_GRANTED_TYPE) enum {
        SQLDMOGranted_GrantGrant   = 204,
        SQLDMOGranted_Grant        = 205,
        SQLDMOGranted_Deny         = 206,
} SQLDMO_GRANTED_TYPE;

typedef SQLDMO_HELPID(SQLDMO_BACKUP_LOG_TYPE) enum {
        SQLDMOBackup_Log_Truncate        = 0,       // Default, truncate the log up to the beginning of the active portion of the log.
        SQLDMOBackup_Log_NoTruncate      = 1,       // Back up the log without truncating it.
        SQLDMOBackup_Log_NoLog           = 2,       // Removes the inactive part of the log without making a backup copy of it and truncates the log
        SQLDMOBackup_Log_TruncateOnly    = 3,       // Truncates the log without making a backup copy if it
        SQLDMOBackup_Log_NoOption        = 4,       // Generate "BACKUP LOG database_name", no optional parameter would be specified
} SQLDMO_BACKUP_LOG_TYPE;

typedef SQLDMO_HELPID(SQLDMO_BACKUP_TYPE) enum {
        SQLDMOBackup_Database      = 0,              // Default
        SQLDMOBackup_Differential  = 1,
        SQLDMOBackup_Files         = 2,
        SQLDMOBackup_Log           = 3,
} SQLDMO_BACKUP_TYPE;

typedef SQLDMO_HELPID(SQLDMO_RESTORE_TYPE) enum {
        SQLDMORestore_Database     = 0,              // Default
        SQLDMORestore_Files        = 1,
        SQLDMORestore_Log          = 2,
} SQLDMO_RESTORE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_DBUSERROLE_TYPE) enum {
        SQLDMORole_db_None              = 0x0000,         // Default
        // Server Role
        SQLDMORole_dbcreator            = 0x0001,
        SQLDMORole_diskadmin            = 0x0002,
        SQLDMORole_processadmin         = 0x0004,
        SQLDMORole_securityadmin        = 0x0008,
        SQLDMORole_serveradmin          = 0x0010,
        SQLDMORole_setupadmin           = 0x0020,
        SQLDMORole_sysadmin             = 0x0040,
        // Database Role
        SQLDMORole_db_accessadmin       = 0x0080,
        SQLDMORole_db_datareader        = 0x0100,
        SQLDMORole_db_ddladmin          = 0x0200,
        SQLDMORole_db_denydatareader    = 0x0400,
        SQLDMORole_db_denydatawriter    = 0x0800,
        SQLDMORole_db_backupoperator    = 0x1000,
        SQLDMORole_db_owner             = 0x2000,
        SQLDMORole_db_securityadmin     = 0x4000,
        SQLDMORole_db_datawriter        = 0x8000,

        SQLDMORole_Unknown              = 0xffffffff,         // Unknown
} SQLDMO_DBUSERROLE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_GROWTH_TYPE) enum {
        SQLDMOGrowth_MB       = 0,      // Default for database file
        SQLDMOGrowth_Percent  = 1,      // Default for log file
        SQLDMOGrowth_Invalid  = 99,     // Invalid type, internal use
} SQLDMO_GROWTH_TYPE;

typedef SQLDMO_HELPID(SQLDMO_STAT_SCAN_TYPE) enum {
        SQLDMOStatistic_Sample         = 0,  // Defualt
        SQLDMOStatistic_Percent        = 1,
        SQLDMOStatistic_Rows           = 2,
        SQLDMOStatistic_FullScan       = 3,
} SQLDMO_STAT_SCAN_TYPE;

typedef SQLDMO_HELPID(SQLDMO_STAT_AFFECT_TYPE) enum {
        SQLDMOStatistic_AffectIndex    = 0,    // Default
        SQLDMOStatistic_AffectColumn   = 1,
        SQLDMOStatistic_AffectAll      = 2,
} SQLDMO_STAT_AFFECT_TYPE;

typedef SQLDMO_HELPID(SQLDMO_FULLTEXTSTATUS_TYPE) enum {
        SQLDMOFullText_Idle            = 0,
        SQLDMOFullText_CrawlinProgress = 1,
        SQLDMOFullText_Paused          = 2,
        SQLDMOFullText_Throttled       = 3,
        SQLDMOFullText_Recovering      = 4,
        SQLDMOFullText_Shutdown        = 5,
        SQLDMOFullText_Incremental     = 6,
        SQLDMOFullText_UpdatingIndex   = 7,
} SQLDMO_FULLTEXTSTATUS_TYPE;

typedef SQLDMO_HELPID(SQLDMO_FULLTEXT_START_TYPE) enum {
        SQLDMOFullText_Full            = 0,
        SQLDMOFullText_Inc             = 1,
} SQLDMO_FULLTEXT_START_TYPE;

typedef SQLDMO_HELPID(SQLDMO_LINKEDTABLE_TYPE) enum {
        SQLDMOLinkedTable_Default          = 0,
        SQLDMOLinkedTable_Alias            = 1,
        SQLDMOLinkedTable_GlobalTemporary  = 2,
        SQLDMOLinkedTable_LocalTemporary   = 3,
        SQLDMOLinkedTable_SystemTable      = 4,
        SQLDMOLinkedTable_Table            = 5,
        SQLDMOLinkedTable_View             = 6,
} SQLDMO_LINKEDTABLE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_SQL_VER) enum {
        SQLDMOSQLVer_Unknown          = 0x0000,
        SQLDMOSQLVer_Pre_60           = 0x0001,
        SQLDMOSQLVer_60               = 0x0002,
        SQLDMOSQLVer_65               = 0x0004,
        SQLDMOSQLVer_70               = 0x0008,
} SQLDMO_SQL_VER;

typedef SQLDMO_HELPID(SQLDMO_DBCC_REPAIR_TYPE) enum {
        SQLDMORepair_None           = 0,
        SQLDMORepair_Fast           = 1,
        SQLDMORepair_Rebuild        = 2,
        SQLDMORepair_Allow_DataLoss = 3,
} SQLDMO_DBCC_REPAIR_TYPE;

typedef SQLDMO_HELPID(SQLDMO_BCP_CODEPAGE_TYPE) enum {
        SQLDMOBCP_RAW           = -1,        // Use server code page
        SQLDMOBCP_ACP           = 0,         // MS Windows code page of the client
        SQLDMOBCP_OEM           = 1,         // default, use OEM code page of the client
        SQLDMOBCP_User          = 2,         // Caller provide code page
} SQLDMO_BCP_CODEPAGE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_SERVERBCP_DATAFILE_TYPE) enum {
        // Available datafile type for server side BCP.
        SQLDMOBCPDataFile_Char =        0x00000001,     // Using character character data type
        SQLDMOBCPDataFile_Default =     0x00000001,     // Default == using character data type
        SQLDMOBCPDataFile_Native =      0x00000002,     // Using native data type
        SQLDMOBCPDataFile_WideChar =    0x00000004,     // Using unicode data type
        SQLDMOBCPDataFile_WideNative =  0x00000008,     // Same as native, except char, varchar, and text are saved as unicode
} SQLDMO_SERVERBCP_DATAFILE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_COMP_LEVEL_TYPE) enum {
        // Available compatibility level.
        SQLDMOCompLevel_Unknown =  0,      // No idea what level
        SQLDMOCompLevel_60      =  60,
        SQLDMOCompLevel_65      =  65,
        SQLDMOCompLevel_70      =  70,     // Default
} SQLDMO_COMP_LEVEL_TYPE;

typedef SQLDMO_HELPID(SQLDMO_SHRINK_TYPE) enum {
        SQLDMOShrink_Default        = 0,       // Default, reallocate data in pages and the files are truncated.
        SQLDMOShrink_NoTruncate     = 1,       // Data in pages is reallocated and the files are not truncated.
        SQLDMOShrink_TruncateOnly   = 2,       // Data in pages is not reallocated.  Files are truncated for any usused space free at the end of any file.
        SQLDMOShrink_EmptyFile      = 3,       // DBFile and LogFile only.  Migrate all data from the specified file to other files in the same filegroup.
} SQLDMO_SHRINK_TYPE;

typedef SQLDMO_HELPID(SQLDMO_NTACCESS_TYPE) enum {
        SQLDMONTAccess_Unknown    = 0,     // This NT login is getting permission via a group.  Permission unknown
        SQLDMONTAccess_Grant      = 1,     // This NT login has grant permission
        SQLDMONTAccess_Deny       = 2,     // This NT login has deny permission
        SQLDMONTAccess_NonNTLogin = 99,    // Not a NT login
} SQLDMO_NTACCESS_TYPE;







typedef SQLDMO_HELPID(SQLDMO_SUBSCRIBER_TYPE) enum {
	SQLDMOSubInfo_SQLServer =		0x00000000,	// Current version of MS SQLServer.
	SQLDMOSubInfo_ODBCDatasource =	0x00000001,	// ODBC Datasource
	SQLDMOSubInfo_JetDatabase =		0x00000002,	// JET_DATABASE
	SQLDMOSubInfo_OLEDBDatasource =	0x00000003	// OLEDB Datasource
} SQLDMO_SUBSCRIBER_TYPE;

typedef SQLDMO_HELPID(SQLDMO_INITIALSYNC_TYPE) enum {
	SQLDMOInitSync_Unknown = 10,     // Pick your favourite invalid number
	SQLDMOInitSync_Min = 0,
	SQLDMOInitSync_Default = 0,
	SQLDMOInitSync_BCPNative = 0,
	SQLDMOInitSync_BCPChar = 1,
	SQLDMOInitSync_Max = 1
} SQLDMO_INITIALSYNC_TYPE;

typedef SQLDMO_HELPID(SQLDMO_REPFREQ_TYPE) enum {
	SQLDMORepFreq_Unknown = 1000,		// Tinyint out-of-range
	SQLDMORepFreq_Min = 0,
	SQLDMORepFreq_Continuous = 0,
	SQLDMORepFreq_Snapshot = 1,
	SQLDMORepFreq_Max = 1
} SQLDMO_REPFREQ_TYPE;

typedef SQLDMO_HELPID(SQLDMO_PUBLICATION_TYPE) enum {
	SQLDMOPublication_Unknown 		= 1000,		// Tinyint out-of-range
	SQLDMOPublication_Min 			= 0,
	SQLDMOPublication_Transactional = 0,
	SQLDMOPublication_Snapshot 		= 1,
	SQLDMOPublication_Merge 		= 2,
	SQLDMOPublication_Max 			= 1
} SQLDMO_PUBLICATION_TYPE;

typedef SQLDMO_HELPID(SQLDMO_ARTICLE_TYPE) enum {
	SQLDMORep_Min 						= 0,
	SQLDMORep_LogBased 					= 0x0001,	// Base for all LogBased replication types.
	SQLDMORep_ManualFilterProc 			= 0x0002,	// Bit for manually created (not auto-generated) filter proc
	SQLDMORep_LogBasedManualFilterProc 	= 0x0003,	// Log based, with manually created sync view.
	SQLDMORep_ManualSyncView 			= 0x0004,	// Bit for manually created (not auto-generated) filter proc.
	SQLDMORep_LogBasedManualSyncView 	= 0x0005,	// Log based, with manually created filter proc.
	SQLDMORep_LogBasedVerticalPartition	= 0x0006,	// Log based, with vertical partition.
	SQLDMORep_LogBasedManualBoth 		= 0x0007,	// Log based, with manually created sync view and filter proc.
    SQLDMORep_ProcExecution             = 0x0008,   // stored proc execution
    SQLDMORep_SerializableProcExecution = 0x0018,  	// stored proc exec, must be within serializable xact
	SQLDMORep_TableBased 				= 0x000a,	// Table based article.
	SQLDMORep_Max 						= 0x0018
} SQLDMO_ARTICLE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_SUBSYNC_TYPE) enum {
	SQLDMOSubSync_Unknown = 1000,		// Tinyint out-of-range
	SQLDMOSubSync_Manual 	= 0,		// not used in 7.0, for upgrade, this will translate to SQLDMOSubSync_Auto
	SQLDMOSubSync_Min 		= 1,
	SQLDMOSubSync_Auto 		= 1,
	SQLDMOSubSync_Default 	= 1,		// Auto is default.
	SQLDMOSubSync_None 		= 2,
	SQLDMOSubSync_Max 		= 2
} SQLDMO_SUBSYNC_TYPE;

typedef SQLDMO_HELPID(SQLDMO_PREARTICLE_TYPE) enum {
	// Article pre-creation methods on destination table.
	SQLDMOPreArt_Min = 0,
	SQLDMOPreArt_None = 0,				// Do nothing
	SQLDMOPreArt_DropTable = 1,			// Drop and re-create table
	SQLDMOPreArt_DeleteRows = 2,		// Delete rows (logged)
	SQLDMOPreArt_TruncateTable = 3,		// Truncate table (nonlogged)
	SQLDMOPreArt_Max = 3
} SQLDMO_PREARTICLE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_ARTSTATUS_TYPE) enum {
	SQLDMOArtStat_Min 		= 0,
	SQLDMOArtStat_Inactive 	= 0,
	SQLDMOArtStat_Unsynced 	= 1,
	SQLDMOArtStat_Active 	= 2,
	SQLDMOArtStat_Conflicts = 3,
	SQLDMOArtStat_Errors 	= 4,
	SQLDMOArtStat_Max 		= 4
} SQLDMO_ARTSTATUS_TYPE;

typedef SQLDMO_HELPID(SQLDMO_SUBSTATUS_TYPE) enum {
	SQLDMOSubStat_Unknown = 1000,		// Tinyint out-of-range
	SQLDMOSubStat_Default = 1000,		// Use default
	SQLDMOSubStat_Min = 0,
	SQLDMOSubStat_Inactive = 0,
	SQLDMOSubStat_Unsynced = 1,
	SQLDMOSubStat_Active = 2,
	SQLDMOSubStat_Max = 2
} SQLDMO_SUBSTATUS_TYPE;

typedef SQLDMO_HELPID(SQLDMO_PUBSTATUS_TYPE) enum {
	SQLDMOPubStat_Unknown = 1000,		// Tinyint out-of-range
	SQLDMOPubStat_Default = 1000,		// Use default
	SQLDMOPubStat_Min = 0,
	SQLDMOPubStat_Inactive = 0,
	SQLDMOPubStat_Active = 1,
	SQLDMOPubStat_Max = 1
} SQLDMO_PUBSTATUS_TYPE;

typedef SQLDMO_HELPID(SQLDMO_REPLICATION_TYPE) enum {
	SQLDMORepType_Unknown 			= 0x100, 	// Tinyint out-of-range
	SQLDMORepType_Transactional 	= 0x0001, 	// Trans replication
	SQLDMORepType_Merge 			= 0x0002, 	// Merge replication
	SQLDMORepType_TransactionalMerge= 0x0003, 	// Both forms of replication
	SQLDMORepType_Default 			= 0x0001
} SQLDMO_REPLICATION_TYPE;

typedef SQLDMO_HELPID(SQLDMO_RESOLVECONFLICT_TYPE) enum {
	SQLDMOResolveConflict_Unknown = 0x100, 		// Tinyint out-of-range
	SQLDMOResolveConflict_Resubmit = 0x0001, 	// Resubmit conflict table row
	SQLDMOResolveConflict_Discard = 0x0002, 	// Discard conflict table row
	SQLDMOResolveConflict_Default = 0x0001
} SQLDMO_RESOLVECONFLICT_TYPE;

typedef SQLDMO_HELPID(SQLDMO_TRANSUBSCRIBER_TYPE) enum {
	SQLDMOTranSubscriber_Unknown 		= 0x100,	// Tinyint out-of-range
	SQLDMOTranSubscriber_Min 			= 0,
	SQLDMOTranSubscriber_ReadOnly 		= 0, 		// Trans readonly subscriber (default)
	SQLDMOTranSubscriber_Synchronous	= 1,		// Trans synchronous subscriber
	SQLDMOTranSubscriber_Default 		= 0,
	SQLDMOTranSubscriber_Max 			= 1
} SQLDMO_TRANSUBSCRIBER_TYPE;

typedef SQLDMO_HELPID(SQLDMO_MERGESUBSCRIBER_TYPE) enum {
	SQLDMOMergeSubscriber_Unknown 		= 0x100,	// Tinyint out-of-range
	SQLDMOMergeSubscriber_Min 			= 1,
	SQLDMOMergeSubscriber_Global 		= 1,		// Global Merge subscriber
	SQLDMOMergeSubscriber_Local 		= 2, 		// Local Merge subscriber (default)
	SQLDMOMergeSubscriber_Anonymous 	= 3,		// Anonymous Merge subscriber
	SQLDMOMergeSubscriber_Republishing 	= 4,		// Republishing Merge subscriber
	SQLDMOMergeSubscriber_Default 		= 2,
	SQLDMOMergeSubscriber_Max 			= 4
} SQLDMO_MERGESUBSCRIBER_TYPE;

typedef SQLDMO_HELPID(SQLDMO_REPSCRIPT_TYPE) enum {
	SQLDMORepScript_Default 			= 0x00000100,	// Default script options
	SQLDMORepScript_NoSubscription		= 0x00000080,	// Script publication's creation without subscription
	SQLDMORepScript_InstallDistributor 	= 0x00000100,	// Script install of distributor
	SQLDMORepScript_UninstallDistributor= 0x00000200,	// Script uninstall of distributor
	SQLDMORepScript_InstallPublisher 	= 0x00000400,	// Script install of publisher
	SQLDMORepScript_UninstallPublisher  = 0x00000800,	// Script uninstall of publisher
	SQLDMORepScript_ToFileOnly 			= 0x00001000,	// If not set, a string is returned (if file nonnull, both are done)
	SQLDMORepScript_AppendToFile 		= 0x00002000,	// Append to output file if it already exists.
	SQLDMORepScript_Creation			= 0x00004000,	// Script the object's creation
	SQLDMORepScript_Deletion			= 0x00008000,	// Script the object's deletion
	SQLDMORepScript_PublicationCreation	= 0x00010000,	// Script the object's creation
	SQLDMORepScript_PublicationDeletion	= 0x00020000,	// Script the object's deletion
	SQLDMORepScript_SubscriptionCreation= 0x00040000,	// Script the object's creation
	SQLDMORepScript_SubscriptionDeletion= 0x00080000,	// Script the object's deletion
	SQLDMORepScript_InstallReplication 	= 0x00100000,	// Script install of replication
	SQLDMORepScript_UninstallReplication= 0x00200000,	// Script uninstall of replication
	/* Output control options */
    SQLDMORepScript_AnsiFile 		    = 0x01000000, 	// Generate ANSI output file
    SQLDMORepScript_UnicodeFile 		= 0x02000000, 	// Generate UNICODE output file
	SQLDMORepScript_EnableReplicationDB	= 0x04000000,	// Script enabling of replication database
	SQLDMORepScript_DisableReplicationDB= 0x08000000,	// Script disabling of replication database
	SQLDMORepScript_NoCommandTerm		= 0x10000000	// Do not add command terminator 
} SQLDMO_REPSCRIPT_TYPE;

typedef SQLDMO_HELPID(SQLDMO_CREATIONSCRIPT_TYPE) enum {
	SQLDMOCreationScript_DisableScripting 	= 0x00000000,	// Disable the scripting of the object
    SQLDMOCreationScript_PrimaryObject 		= 0x00000001,   // Include object creation
    SQLDMOCreationScript_CustomProcs		= 0x00000002,   // Generates custom stored procedures for the article if defined, trans only
	SQLDMOCreationScript_ClusteredIndexes 	= 0x00000010,	// Include clustered index creation (table only)
	SQLDMOCreationScript_UDDTsToBaseTypes	= 0x00000020,	// Convert UserDefinedDatatypes to base type when creating columns (table only)
	SQLDMOCreationScript_NonClusteredIndexes = 0x00000040,	// Include nonclustered index creation (table only)
	SQLDMOCreationScript_DRI_PrimaryKey 	= 0x00000080 	// Include DRI on Primary keys
} SQLDMO_CREATIONSCRIPT_TYPE;

typedef SQLDMO_HELPID(SQLDMO_COMMANDOPTION_TYPE) enum {
    SQLDMOCommandOption_IncludeInsertColumnNames	= 0x00000008,   // Include column names in destination-table INSERT statements
    SQLDMOCommandOption_BinaryParameters			= 0x00000010	// Send the stored procedure parameters in binary format.
} SQLDMO_COMMANDOPTION_TYPE;

typedef SQLDMO_HELPID(SQLDMO_SUBSCRIPTION_TYPE) enum {
	SQLDMOSubscription_Unknown = 0x100,		// Tinyint out-of-range
	SQLDMOSubscription_Min = 0,
	SQLDMOSubscription_Push = 0x0000, 		// Push subscription
	SQLDMOSubscription_Pull = 0x0001,		// Pull subscription
	SQLDMOSubscription_Anonymous = 0x0002,	// Anonymous subscription
	SQLDMOSubscription_All = 0x0003, 		// All subscriptions
	SQLDMOSubscription_Default = 0x0000,
	SQLDMOSubscription_Max = 2
} SQLDMO_SUBSCRIPTION_TYPE;

typedef SQLDMO_HELPID(SQLDMO_PUBATTRIB_TYPE) enum {
	SQLDMOPubAttrib_Unknown 		= 0x100,	// Tinyint out-of-range
	SQLDMOPubAttrib_Min 			= 0,
	SQLDMOPubAttrib_AllowPush 		= 0x0001, 	// Allow Push
	SQLDMOPubAttrib_AllowPull 		= 0x0002,	// Allow Pull
	SQLDMOPubAttrib_AllowAnonymous 	= 0x0004,	// Anonymous PubAttrib
	SQLDMOPubAttrib_InternetEnabled = 0x0008,	// Internet enabled
	SQLDMOPubAttrib_ImmediateSync 	= 0x0010,	// Immediate Sync
	SQLDMOPubAttrib_IndependentAgent= 0x0020,	// Independent agent
	SQLDMOPubAttrib_Default 		= 0x0001,
	SQLDMOPubAttrib_Valid 			= 0x003f
} SQLDMO_PUBATTRIB_TYPE;

typedef SQLDMO_HELPID(SQLDMO_TASKSTATUS_TYPE) enum {
    SQLDMOTask_Pending 		= 0,
    SQLDMOTask_Starting 	= 1,
    SQLDMOTask_Succeeded 	= 2,
    SQLDMOTask_Running 		= 3,
    SQLDMOTask_Idle 		= 4,
    SQLDMOTask_Retry 		= 5,
    SQLDMOTask_Failed 		= 6
} SQLDMO_TASKSTATUS_TYPE;

typedef SQLDMO_HELPID(SQLDMO_SESSION_TYPE) enum {
	SQLDMOSession_Unknown 	= 0x100, 	// Tinyint out-of-range
	SQLDMOSession_All		= 0x0001,	
	SQLDMOSession_Errors	= 0x0002	
} SQLDMO_SESSION_TYPE;


typedef SQLDMO_HELPID(SQLDMO_REPLAGENT_TYPE) enum {
	SQLDMOReplAgent_Default			= 0, 	
	SQLDMOReplAgent_Publishers		= -1, 	
	SQLDMOReplAgent_All				= 0, 	
	SQLDMOReplAgent_Snapshot		= 1, 	
	SQLDMOReplAgent_LogReader		= 2, 	
	SQLDMOReplAgent_Distribution	= 3, 	
	SQLDMOReplAgent_Merge			= 4, 	
	SQLDMOReplAgent_Miscellaneous	= 5 	
} SQLDMO_REPLAGENT_TYPE;

typedef SQLDMO_HELPID(SQLDMO_REPLSECURITY_TYPE) enum {
    SQLDMOReplSecurity_Min = 0,
    SQLDMOReplSecurity_Normal = 0,
    SQLDMOReplSecurity_Integrated = 1,
    SQLDMOReplSecurity_PredefinedServer = 2,
    SQLDMOReplSecurity_Max = 2
} SQLDMO_REPLSECURITY_TYPE;

// Constant values.
typedef SQLDMO_HELPID(SQLDMO_REPLCONSTANTS_TYPE) enum {
		SQLDMO_DEFAULTRETENTION = 60    // Default retention period
} SQLDMO_REPLCONSTANTS_TYPE;











// May be bitmasked.
typedef SQLDMO_HELPID(SQLDMO_COMPLETION_TYPE) enum {
        SQLDMOComp_Unknown = 0x1000,            // Only bit set
        SQLDMOComp_None = 0x0000,
        SQLDMOComp_Success = 0x0001,
        SQLDMOComp_Failure = 0x0002,
        SQLDMOComp_Always = 0x0003,
        SQLDMOComp_All = 0x0006
} SQLDMO_COMPLETION_TYPE;

typedef SQLDMO_HELPID(SQLDMO_JOBOUTCOME_TYPE) enum {
        SQLDMOJobOutcome_Failed = 0x0,
        SQLDMOJobOutcome_Succeeded = 0x1,
        // NOTE: 0x2 is deliberately ommitted
        SQLDMOJobOutcome_Cancelled = 0x3,
        SQLDMOJobOutcome_InProgress = 0x4,
        SQLDMOJobOutcome_Unknown = 0x5
} SQLDMO_JOBOUTCOME_TYPE;

typedef SQLDMO_HELPID(SQLDMO_EVENT_TYPE) enum {
        SQLDMOEvent_Unknown = 0x0000,
        SQLDMOEvent_Info = 0x0001,
        SQLDMOEvent_Warning = 0x0002,
        SQLDMOEvent_Error = 0x0004,
        SQLDMOEvent_AuditSuccess = 0x0008,
        SQLDMOEvent_AuditFailure = 0x0010,
        SQLDMOEvent_All = 0x001f
} SQLDMO_EVENT_TYPE;

typedef SQLDMO_HELPID(SQLDMO_FREQUENCY_TYPE) enum {                    // SQLDMO Internal:  sync with qsched.h
        SQLDMOFreq_Unknown = 0x0000,
        SQLDMOFreq_OneTime = 0x0001,
//        SQLDMOFreq_OnDemand = 0x0002,                 // Obsolete in 7.0
        SQLDMOFreq_Daily = 0x0004,
        SQLDMOFreq_Weekly = 0x0008,
        SQLDMOFreq_Monthly = 0x0010,
        SQLDMOFreq_MonthlyRelative = 0x0020,
        SQLDMOFreq_Autostart = 0x0040,
        SQLDMOFreq_OnIdle = 0x0080,
        SQLDMOFreq_Valid = 0x00ff                       // All valid frequency types
} SQLDMO_FREQUENCY_TYPE;

typedef SQLDMO_HELPID(SQLDMO_FREQSUB_TYPE) enum {                      // SQLDMO Internal:  sync with qsched.h
        SQLDMOFreqSub_Unknown = 0x0000,
        SQLDMOFreqSub_Once = 0x0001,
        SQLDMOFreqSub_Minute = 0x0004,
        SQLDMOFreqSub_Hour = 0x0008,
        SQLDMOFreqSub_Valid = 0x000d                    // All valid frequency subtypes
} SQLDMO_FREQSUB_TYPE;

typedef SQLDMO_HELPID(SQLDMO_FREQRELATIVE_TYPE) enum {                 // SQLDMO Internal:  sync with qsched.h
        SQLDMOFreqRel_Unknown = 0x0000,
        SQLDMOFreqRel_First = 0x0001,
        SQLDMOFreqRel_Second = 0x0002,
        SQLDMOFreqRel_Third = 0x0004,
        SQLDMOFreqRel_Fourth = 0x0008,
        SQLDMOFreqRel_Last = 0x0010,
        SQLDMOFreqRel_Valid = 0x001f                    // All valid Relative frequencies.
} SQLDMO_FREQRELATIVE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_WEEKDAY_TYPE) enum {                      // SQLDMO Internal:  sync with qsched.h
        // Specify for SQLDMOFreq_Weekly; bitmask
        SQLDMOWeek_Unknown = 0x0000,
        SQLDMOWeek_Sunday = 0x0001,
        SQLDMOWeek_Monday = 0x0002,
        SQLDMOWeek_Tuesday = 0x0004,
        SQLDMOWeek_Wednesday = 0x0008,
        SQLDMOWeek_Thursday = 0x0010,
        SQLDMOWeek_Friday = 0x0020,
        SQLDMOWeek_Saturday = 0x0040,
        SQLDMOWeek_WeekDays = 0x003e,                  // Monday - Friday
        SQLDMOWeek_WeekEnds = 0x0041,                  // Saturday - Sunday
        SQLDMOWeek_EveryDay = 0x007f
} SQLDMO_WEEKDAY_TYPE;

typedef SQLDMO_HELPID(SQLDMO_MONTHDAY_TYPE) enum {                     // SQLDMO Internal:  sync with qsched.h
        // Specify for SQLDMOFreq_MonthlyRelative; single-value.
        // This is the relative interval SQLDMO_FREQRELATIVE_TYPE;
        // e.g., on the xth Monday of the month.
        SQLDMOMonth_Unknown = 0,
        SQLDMOMonth_MinValid = 1,
        SQLDMOMonth_Sunday = 1,
        SQLDMOMonth_Monday = 2,
        SQLDMOMonth_Tuesday = 3,
        SQLDMOMonth_Wednesday = 4,
        SQLDMOMonth_Thursday = 5,
        SQLDMOMonth_Friday = 6,
        SQLDMOMonth_Saturday = 7,
        SQLDMOMonth_Day = 8,                          // xth day
        SQLDMOMonth_WeekDay = 9,                      // xth weekday
        SQLDMOMonth_WeekEndDay = 10,                  // xth weekendday
        SQLDMOMonth_MaxValid = 10
} SQLDMO_MONTHDAY_TYPE;

typedef SQLDMO_HELPID(SQLDMO_RUNPRIORITY_TYPE) enum {
        // These must match the NT ThreadPriority values.
        SQLDMORunPri_Unknown = 100,                   // Invalid ThreadPriority
        SQLDMORunPri_Min = 1,
        SQLDMORunPri_Idle = -15,
        SQLDMORunPri_Lowest = -2,
        SQLDMORunPri_BelowNormal = -1,
        SQLDMORunPri_Normal = 0,
        SQLDMORunPri_AboveNormal = 1,
        SQLDMORunPri_Highest = 2,
        SQLDMORunPri_TimeCritical = 15,
} SQLDMO_RUNPRIORITY_TYPE;

typedef SQLDMO_HELPID(SQLDMO_NOTIFY_TYPE) enum {
        SQLDMONotify_None    = 0x0000,
        SQLDMONotify_Email   = 0x0001,
        SQLDMONotify_Pager   = 0x0002,
        SQLDMONotify_NetSend = 0x0004,
        SQLDMONotify_All     = 0x0007
} SQLDMO_NOTIFY_TYPE;

typedef SQLDMO_HELPID(SQLDMO_ENUMNOTIFY_TYPE) enum {
        SQLDMOEnumNotify_Min = 1,
        SQLDMOEnumNotify_All = 1,                     // All operators/alerts
        SQLDMOEnumNotify_Actual = 2,                  // Only operators/alerts receiving notifications for this alert/operator
        SQLDMOEnumNotify_Target = 3,                  // Specifically named target alert/operator(s)
        SQLDMOEnumNotify_Max = 3
} SQLDMO_ENUMNOTIFY_TYPE;

typedef SQLDMO_HELPID(SQLDMO_JOBEXECUTION_STATUS) enum {
        SQLDMOJobExecution_Unknown                = 0,
        SQLDMOJobExecution_Executing              = 1,
        SQLDMOJobExecution_WaitingForWorkerThread = 2,
        SQLDMOJobExecution_BetweenRetries         = 3,
        SQLDMOJobExecution_Idle                   = 4,
        SQLDMOJobExecution_Suspended              = 5,
        SQLDMOJobExecution_WaitingForStepToFinish = 6,
        SQLDMOJobExecution_PerformingCompletionActions = 7
} SQLDMO_JOBEXECUTION_STATUS;

typedef SQLDMO_HELPID(SQLDMO_FIND_OPERAND) enum {
        SQLDMOFindOperand_Unknown                 = 0,
        SQLDMOFindOperand_EqualTo                 = 1,
        SQLDMOFindOperand_GreaterThan             = 2,
        SQLDMOFindOperand_LessThan                = 3,
} SQLDMO_FIND_OPERAND;

typedef SQLDMO_HELPID(SQLDMO_JOBSTEPACTION_TYPE) enum {
        SQLDMOJobStepAction_Unknown               = 0,
        SQLDMOJobStepAction_QuitWithSuccess       = 1,
        SQLDMOJobStepAction_QuitWithFailure       = 2,
        SQLDMOJobStepAction_GotoNextStep          = 3,
        SQLDMOJobStepAction_GotoStep              = 4
} SQLDMO_JOBSTEPACTION_TYPE;

typedef SQLDMO_HELPID(SQLDMO_CATEGORYTYPE_TYPE) enum {
        SQLDMOCategoryType_Unknown               = 0,
        SQLDMOCategoryType_LocalJob              = 1,
        SQLDMOCategoryType_MultiServerJob        = 2,
        SQLDMOCategoryType_None                  = 3
} SQLDMO_CATEGORYTYPE_TYPE;

typedef SQLDMO_HELPID(SQLDMO_TARGETSERVERSTATUS_TYPE) enum {
        SQLDMOTargetServerStatus_Unknown           = 0x00,
        SQLDMOTargetServerStatus_Normal            = 0x01,
        SQLDMOTargetServerStatus_SuspectedOffline  = 0x02,
        SQLDMOTargetServerStatus_Blocked           = 0x04,
} SQLDMO_TARGETSERVERSTATUS_TYPE;

typedef SQLDMO_HELPID(SQLDMO_JOB_TYPE) enum {
        SQLDMOJob_Unknown               = 0,
        SQLDMOJob_Local                 = 1,
        SQLDMOJob_MultiServer           = 2
} SQLDMO_JOB_TYPE;

typedef SQLDMO_HELPID(SQLDMO_JOBSERVER_TYPE) enum {
        SQLDMOJobServer_StandAlone = 1,
		  SQLDMOJobServer_TSX        = 2,
		  SQLDMOJobServer_MSX        = 3,
		  SQLDMOJobServer_Unknown    = 0
} SQLDMO_JOBSERVER_TYPE;

typedef SQLDMO_HELPID(SQLDMO_ALERT_TYPE) enum {
        SQLDMOAlert_SQLServerEvent                 = 0x1,
		  SQLDMOAlert_SQLServerPerformanceCondition  = 0x2,
		  SQLDMOAlert_NonSQLServerEvent              = 0x3
} SQLDMO_ALERT_TYPE;








// SQLDMO Error enumeration.

typedef SQLDMO_HELPID(SQLDMO_ERROR_TYPE) enum {
        // Error values.  (MS-Internal:  See usa.rc for the string representation of these (OSQL_S_*)).
        // DBLib uses 10000 (0x2710) to 10200 (0x27D8).
        SQLDMO_E_DBLIBFIRSTERROR = 0x2710,
        SQLDMO_E_DBLIBLASTERROR = 0x27D8,

        // SQL Server itself sends errors back which may be up to 20000 (0x4E20).
        // SQLDMO-detected errors are in the range SQLDMO_E_FIRSTERROR to SQLDMO_E_LASTERROR.
        // Each SQLDMO_ECAT (Error CATegory) summarizes its specific errorcodes.
        SQLDMO_E_FIRSTERROR = 0x5000,

// All error categories masked off by this.
SQLDMO_ECAT_MASK = 0x5F00,

// Errors indicating an operation that is valid but not in the given context.
SQLDMO_ECAT_INVALIDCONTEXT = 0x5000,
        SQLDMO_E_ALREADYCONN = 0x5000,
        SQLDMO_E_ALREADYCOLL = 0x5001,
        SQLDMO_E_NOTCONN = 0x5002,
        SQLDMO_E_CANTDROPSERVER = 0x5003,
        SQLDMO_E_NOCOMPLEXALTER = 0x5004,
        SQLDMO_E_PROPNEEDSCREATE = 0x5005,
        SQLDMO_E_COLTYPEFIXED = 0x5006,
        SQLDMO_E_COLTYPENONNULL = 0x5007,
        SQLDMO_E_CANTCHANGEUDDT = 0x5008,
        SQLDMO_E_BASETYPEFIXED = 0x5009,
        SQLDMO_E_BASETYPENONNULL = 0x500A,
        SQLDMO_E_ENUMORDINAL = 0x500B,
        SQLDMO_E_CANTRENAMEUSER = 0x500C,
        SQLDMO_E_CANTRENAMEGROUP = 0x500D,
        SQLDMO_E_CANTRENAMELOGIN = 0x500E,
        SQLDMO_E_CANTRENAMEDEVICE = 0x500F,
        SQLDMO_E_NOTDUMPPROP = 0x5010,
        SQLDMO_E_NOSERVERASSOC = 0x5011,
        SQLDMO_E_NOTCOLLTYPE = 0x5012,
        SQLDMO_E_CANTMODIFYDRIINDEX = 0x5013,
        SQLDMO_E_CANTCHANGEPROCTYPE = 0x5014,
        SQLDMO_E_CANTMODIFYINDEX = 0x5015,
        SQLDMO_E_INVALIDPRIVOBJ = 0x5016,
        SQLDMO_E_CANTCHANGETRIGTYPE = 0x5017,
        SQLDMO_E_NOVIEWCOLALTER = 0x5018,
        SQLDMO_E_CANTRENAMELANGUAGE = 0x5019,
        SQLDMO_E_CANTRENAMERSERVER = 0x501A,
        SQLDMO_E_CANTRENAMERLOGIN = 0x501B,
        SQLDMO_E_MUSTBEDBDEV = 0x501C,
        SQLDMO_E_NOINACTIVEMIRROR = 0x501D,
        SQLDMO_E_NOACTIVEMIRROR = 0x501E,
        SQLDMO_E_NOMIRROR = 0x501F,
        SQLDMO_E_SERVERDISCONNECTED = 0x5020,
        SQLDMO_E_CANTRENAMESERVER = 0x5021,
        SQLDMO_E_CANTMODIFYTEXT = 0x5022,
        SQLDMO_E_CANTMODIFYSYSTABLE = 0x5023,
        SQLDMO_E_LOGINALREADYALIASED = 0x5024,
        SQLDMO_E_LOGINALREADYUSER = 0x5025,
        SQLDMO_E_CACHENORESULTS = 0x5026,
        SQLDMO_E_ALREADYCREATED = 0x5027,
        SQLDMO_E_NOTDISCONN = 0x5028,
        SQLDMO_E_CANTMODIFYARTTABLE = 0x5029,
        SQLDMO_E_PROPERTYCANNOTBEMODIFIED = 0x502A,
        SQLDMO_E_BASETYPENOTNUMERIC = 0x502B,
        SQLDMO_E_TOFILEBUTNOFILENAME = 0x502C,
        SQLDMO_E_CANTMODIFYKEY = 0x502E,
        SQLDMO_E_LISTCANTREFRESH = 0x502F,
        SQLDMO_E_NOCOLTABLE = 0x5030,
        SQLDMO_E_MUSTBEINALTER = 0x5031,
        SQLDMO_E_CANTUNDEDICATELOGDEVICE = 0x5032,
        SQLDMO_E_CANTRENAMESERVERGROUP = 0x5033,
        SQLDMO_E_CANTRENAMEREGISTEREDSERVER = 0x5034,
        SQLDMO_E_INDEXREBUILDKEYTYPE = 0x5035,
        SQLDMO_E_REBUILDINDEXOPTIONS = 0x5036,
        SQLDMO_E_IMPERSONATEXPONLY = 0x5037,
        SQLDMO_E_CANTRENAMEPUBLICATION = 0x5038,
        SQLDMO_E_CANTMODIFYSPARTTYPE = 0x5039,
		SQLDMO_E_INVALIDDISTDB = 0x503a,
        SQLDMO_E_CANTMODIFYTABLE = 0x503B,
        SQLDMO_E_CANTDROPFILEGROUP = 0x503C,
        SQLDMO_E_DEFAULTFILEGROUP = 0x503D,
        SQLDMO_E_NOTDEFAULTFILEGROUP = 0x503E,
        SQLDMO_E_CANTRESETLOGINTYPE = 0x503F,
        SQLDMO_E_CANTRESETPASSWORD = 0x5040,
        SQLDMO_E_PRESQL70          = 0x5041,
        SQLDMO_E_PROPBEFORECREATE  = 0x5042,
        SQLDMO_E_CANTRENAMEROLE = 0x5043,
        SQLDMO_E_CANTDROPFIXEDROLE = 0x5044,
        SQLDMO_E_CANTADDTOAPPROLE = 0x5045,
        SQLDMO_E_CANTGETROLE = 0x5046,
        SQLDMO_E_USERDBROLE = 0x5047,
        SQLDMO_E_FIXEDDBROLE = 0x5048,
        SQLDMO_E_CANTMODIFYFILTER = 0x5049,
        SQLDMO_E_INVALIDACTION = 0x504a,
        SQLDMO_E_DBOPTION = 0x504b,
        SQLDMO_E_USEALTER = 0x504c,
        SQLDMO_E_CREATEDBPERM = 0x504d,
        SQLDMO_E_CANTCHECKFK = 0x504e,
        SQLDMO_E_NOTINMB = 0x504f,
        SQLDMO_E_CANTRENAMELSERVER = 0x5050,
        SQLDMO_E_CANTRENAMELLOGIN = 0x5051,
        SQLDMO_E_CANTRENAMEFULLTEXT = 0x5052,
        SQLDMO_E_NOFULLTEXT = 0x5053,
        SQLDMO_E_ACTIVATEFULLTEXT = 0x5054,
        SQLDMO_E_NOTFULLTEXTENABLED = 0x5055,
        SQLDMO_E_CANTDROPLOGFILE = 0x5056,
        SQLDMO_E_CANTDROPLSLOGIN = 0x5057,
        SQLDMO_E_SCRIPTPWD = 0x5058,
        SQLDMO_E_DISTRIBUTORNOTINSTALLED = 0x5059,
        SQLDMO_E_CANTRENAMESTAT = 0x505a,
        SQLDMO_E_CANTDROPAUTOINDEX = 0x505b,
        SQLDMO_E_FROMGUEST = 0x505c,
        SQLDMO_E_INVALIDPROPDISTNOTLOCAL = 0x5060,


// Errors indicating that the OLE object is not (or is no longer) valid in SQLDMO.
SQLDMO_ECAT_INVALIDOBJECT = 0x5100,
        SQLDMO_E_OBJECTDROPPED = 0x5100,
        SQLDMO_E_NOTSQLDMOOBJECT = 0x5101,
        SQLDMO_E_OBJECTDETACHED = 0x5102,
        SQLDMO_E_SERVERCLOSED = 0x5103,

// Errors indicating that an attempt was made to create an object (usually to add an object
// to a collection) but that its definition (property settings) were incomplete or inconsistent.
SQLDMO_ECAT_INVALIDOBJECTDEFINITION = 0x5200,
        SQLDMO_E_NOCOLUMNSADDED = 0x5200,
        SQLDMO_E_COLUMNINCOMPLETE = 0x5201,
        SQLDMO_E_TABLEINCOMPLETE = 0x5202,
        SQLDMO_E_UDDTINCOMPLETE = 0x5203,
        SQLDMO_E_RULEINCOMPLETE = 0x5204,
        SQLDMO_E_DEFAULTINCOMPLETE = 0x5205,
        SQLDMO_E_VIEWINCOMPLETE = 0x5206,
        SQLDMO_E_USERINCOMPLETE = 0x5207,
        SQLDMO_E_GROUPINCOMPLETE = 0x5208,
        SQLDMO_E_PROCINCOMPLETE = 0x5209,
        SQLDMO_E_USERALREADYEXISTS = 0x520A,
        SQLDMO_E_GROUPALREADYEXISTS = 0x520B,
        SQLDMO_E_COLUMNALREADYEXISTS = 0x520C,
        SQLDMO_E_OBJECTALREADYEXISTS = 0x520D,
        SQLDMO_E_INDEXALREADYEXISTS = 0x520E,
        SQLDMO_E_DBALREADYEXISTS = 0x520F,
        SQLDMO_E_LOGINALREADYEXISTS = 0x5210,
        SQLDMO_E_DEVICEALREADYEXISTS = 0x5211,
        SQLDMO_E_SKIPONLYTAPE = 0x5212,
        SQLDMO_E_DEVICEINCOMPLETE = 0x5213,
        SQLDMO_E_PROCALREADYEXISTS = 0x5214,
        SQLDMO_E_UDDTALREADYEXISTS = 0x5215,
        SQLDMO_E_TABLEALREADYEXISTS = 0x5216,
        SQLDMO_E_RULEALREADYEXISTS = 0x5217,
        SQLDMO_E_DEFAULTALREADYEXISTS = 0x5218,
        SQLDMO_E_VIEWALREADYEXISTS = 0x5219,
        SQLDMO_E_INDEXINCOMPLETE = 0x521A,
        SQLDMO_E_TRIGINCOMPLETE = 0x521B,
        SQLDMO_E_TRIGALREADYEXISTS = 0x521C,
        SQLDMO_E_LANGUAGEINCOMPLETE = 0x521D,
        SQLDMO_E_LANGUAGEALREADYEXISTS = 0x521E,
        SQLDMO_E_LOGININCOMPLETE = 0x521F,
        SQLDMO_E_RSERVERINCOMPLETE = 0x5220,
        SQLDMO_E_RSERVERALREADYEXISTS = 0x5221,
        SQLDMO_E_NULLRLOGINALREADYEXISTS = 0x5222,
        SQLDMO_E_RLOGINALREADYEXISTS = 0x5223,
        SQLDMO_E_REMOTENEEDSLOCAL = 0x5224,
        SQLDMO_E_BACKUPNEEDSDEVICE = 0x5225,
        SQLDMO_E_NEEDMANUALFILTERNAME = 0x5226,
        SQLDMO_E_TASKINCOMPLETE = 0x5227,
        SQLDMO_E_ARTINCOMPLETE = 0x5228,
        SQLDMO_E_PUBINCOMPLETE = 0x5229,
        SQLDMO_E_SUBINCOMPLETE = 0x522A,
        SQLDMO_E_ALERTINCOMPLETE = 0x522B,
        SQLDMO_E_OPERATORINCOMPLETE = 0x522C,
        SQLDMO_E_NAMEMUSTMATCH = 0x522D,
        SQLDMO_E_TRIGREQTABLENAME = 0x522E,
        SQLDMO_E_MUSTBESYNCTASK = 0x522F,
        SQLDMO_E_NOEVENTCOMPLETION = 0x5230,
        SQLDMO_E_FKEYINCOMPLETE = 0x5231,
        SQLDMO_E_KEYINCOMPLETE = 0x5232,
        SQLDMO_E_KEYALREADYEXISTS = 0x5233,
        SQLDMO_E_CHECKINCOMPLETE = 0x5234,
        SQLDMO_E_DRIDEFAULTINCOMPLETE = 0x5235,
        SQLDMO_E_CHECKALREADYEXISTS = 0x5236,
        SQLDMO_E_ONLYONEPRIMARYKEY = 0x5237,
        SQLDMO_E_NEEDMANUALVIEWNAME = 0x5238,
        SQLDMO_E_SERVERGROUPINCOMPLETE = 0x5239,
        SQLDMO_E_REGISTEREDSERVERINCOMPLETE = 0x523A,
        SQLDMO_E_SERVERGROUPALREADYEXISTS = 0x523B,
        SQLDMO_E_REGISTEREDSERVERALREADYEXISTS = 0x523C,
        SQLDMO_E_NEEDLOADTABLENAME = 0x523D,
        SQLDMO_E_DISTDBALREADYEXISTS = 0x523E,
        SQLDMO_E_DISTPUBALREADYEXISTS = 0x523F,
        SQLDMO_E_JOBSTEPINCOMPLETE = 0x5240,
        SQLDMO_E_TARGETSERVERINCOMPLETE = 0x5241,
        SQLDMO_E_TARGETSERVERGROUPINCOMPLETE = 0x5242,
        SQLDMO_E_JOBINCOMPLETE = 0x5243,
        SQLDMO_E_MUSTBESYNCJOB = 0x5244,
        SQLDMO_E_JOBCATEGORYINCOMPLETE = 0x5245,
        SQLDMO_E_REGPUBINCOMPLETE = 0x5246,
        SQLDMO_E_REGSUBINCOMPLETE = 0x5247,
        SQLDMO_E_DISTPUBINCOMPLETE = 0x5248,
        SQLDMO_E_DISTDBINCOMPLETE = 0x5249,
        SQLDMO_E_FILEGROUPINCOMPLETE = 0x524A,
        SQLDMO_E_DBFILEINCOMPLETE = 0x524B,
        SQLDMO_E_LOGFILEINCOMPLETE = 0x524C,
        SQLDMO_E_FILEGROUPALREADYEXISTS = 0x524D,
        SQLDMO_E_DATABASEINCOMPLETE = 0x5250,
        SQLDMO_E_DATABASEROLEALREADYEXISTS = 0x5251,
        SQLDMO_E_DATABASEROLEINCOMPLETE = 0x5252,
        SQLDMO_E_SERVERROLEINCOMPLETE = 0x5253,
        SQLDMO_E_DSNINFOINCOMPLETE = 0x5254,
        SQLDMO_E_FILTERINCOMPLETE = 0x5255,
        SQLDMO_E_OWNERMUSTMATCH = 0x5256,
        SQLDMO_E_BACKUPNEEDSFILE = 0x5257,
        SQLDMO_E_BACKUPNEEDSMEDIA = 0x5258,
        SQLDMO_E_COLUMNCOMPUTEDINCOMPLETE = 0x5259,
        SQLDMO_E_REMAPFILEINCOMPLETE = 0x525A,
        SQLDMO_E_SMALLMAXSIZE = 0x525B,
        SQLDMO_E_FILEALREADYEXISTS = 0x525C,
        SQLDMO_E_BADFILEGROUPNAME = 0x525D,
        SQLDMO_E_LINKEDSERVERINCOMPLETE = 0x525E,
        SQLDMO_E_LINKEDPROVIDERINCOMPLETE = 0x525F,
        SQLDMO_E_FULLTEXTINCOMPLETE = 0x5260,
        SQLDMO_E_CATALOGALREADYEXISTS = 0x5261,
        SQLDMO_E_CATALOGINCOMPLETE = 0x5262,
        SQLDMO_E_BACKUPINIT = 0x5263,
        SQLDMO_E_LINKEDSERVERLOGININCOMPLETE = 0x5264,
        SQLDMO_E_NOSERVERBCP6 = 0x5265,
        SQLDMO_E_JOBSTEPNAMEINCOMPLETE = 0x5266,

// Errors indicating an invalid parameter passed to a method or property, or other unexpected condition.
SQLDMO_ECAT_INVALIDPARAMETER = 0x5300,
        SQLDMO_E_BADCOLLEN = 0x5300,
        SQLDMO_E_INVALIDPERFMONSET = 0x5301,
        SQLDMO_E_BADDEVICETYPE = 0x5302,
        SQLDMO_E_SIZEGREATERTHAN0 = 0x5303,
        SQLDMO_E_RESULTSETOUTOFRANGE = 0x5304,
        SQLDMO_E_OUTPUTPARAMREQUIRED = 0x5305,
        SQLDMO_E_PROPTEXTNONNULL = 0x5306,
        SQLDMO_E_BADPROCTYPE = 0x5307,
        SQLDMO_E_BADFILLFACTOR = 0x5308,
        SQLDMO_E_INVALIDINDEXTYPE = 0x5309,
        SQLDMO_E_INVALIDPRIVTYPE = 0x530A,
        SQLDMO_E_BADTRIGTYPE = 0x530B,
        SQLDMO_E_INVALIDDAYOFWEEK = 0x530C,
        SQLDMO_E_INVALIDMONTH = 0x530D,
        SQLDMO_E_BADDAYCOUNT = 0x530E,
        SQLDMO_E_BADMONTHCOUNT = 0x530F,
        SQLDMO_E_BADCONFIGVALUE = 0x5310,
        SQLDMO_E_INVALIDPARAMINDEX = 0x5311,
        SQLDMO_E_INVALIDPARAMRANGE = 0x5312,
        SQLDMO_E_INVALIDDBOBJTYPE = 0x5313,
        SQLDMO_E_ROWCOLOUTOFRANGE = 0x5314,
        SQLDMO_E_NONUNIQUENAME = 0x5315,
        SQLDMO_E_NOTIMESTAMPUDDT = 0x5316,
        SQLDMO_E_INVALIDNAME = 0x5317,
        SQLDMO_E_INVALIDCOMPLETION = 0x5318,
        SQLDMO_E_NAMETOOLONG = 0x5319,
        SQLDMO_E_INVALIDFREQTYPE = 0x531A,
        SQLDMO_E_INVALIDFREQSUBDAY = 0x531B,
        SQLDMO_E_INVALIDFREQRELINTERVAL = 0x531C,
        SQLDMO_E_BADWEEKLYINTERVAL = 0x531D,
        SQLDMO_E_BADMONTHLYINTERVAL = 0x531E,
        SQLDMO_E_BADMONTHLYRELINTERVAL = 0x531F,
        SQLDMO_E_INVALIDSRVOPTION = 0x5320,
        SQLDMO_E_INVALIDRUNPRIORITY = 0x5321,
        SQLDMO_E_DBNAMEREQUIRED = 0x5322,
        SQLDMO_E_PUBNAMEREQUIRED = 0x5323,
        SQLDMO_E_PROPINDEXOUTOFRANGE = 0x5324,
        SQLDMO_E_INVALIDNOTIFYTYPE = 0x5325,
        SQLDMO_E_INVALIDENUMNOTIFYTYPE = 0x5326,
        SQLDMO_E_INVALIDWEEKDAY = 0x5327,
        SQLDMO_E_INVALIDOBJECTTYPE = 0x5328,
        SQLDMO_E_OBJECTREQUIRED = 0x5329,
        SQLDMO_E_INVALIDEVENTTYPE = 0x532A,
        SQLDMO_E_INVALIDCOMPLETIONTYPE = 0x532B,
        SQLDMO_E_INVALIDKEYTYPE = 0x532C,
        SQLDMO_E_TABLEMUSTBECREATED = 0x532D,
        SQLDMO_E_INVALIDPREARTICLE = 0x532E,
        SQLDMO_E_INVALIDSECURITYMODE = 0x532F,
        SQLDMO_E_INVALIDPREC = 0x5330,
        SQLDMO_E_INVALIDDEPENDENCYTYPE = 0x5331,
        SQLDMO_E_INVALIDVERIFYCONNTYPE = 0x5332,
        SQLDMO_E_INVALIDSTATUSINFOTYPE = 0x5333,
        SQLDMO_E_INVALIDFORWARDINGSEVERITY = 0x5334,
        SQLDMO_E_INVALIDFORWARDINGSERVER = 0x5335,
        SQLDMO_E_INVALIDRESTARTINTERVAL = 0x5336,
        SQLDMO_E_INVALIDHISTORYROWSMAX = 0x5337,
        SQLDMO_E_NAMETOOSHORT = 0x5338,
        SQLDMO_E_UNEXPECTED = 0x5339,
        SQLDMO_E_INVALIDHISTORYROWSPERTASKMAX = 0x533A,
        SQLDMO_E_INVALIDOBJSORTTYPE = 0x533B,
        SQLDMO_E_INVALIDEXECTYPE = 0x533C,
        SQLDMO_E_INVALIDSUBSETFILTER = 0x533D,
        SQLDMO_E_INCOMPATIBLEPROPS = 0x533E,    //Some of the bcp object properties are incompatible.
        SQLDMO_E_FILEPATHREQUIRED = 0x533F,             //User should specify path for script file
        SQLDMO_E_INVALIDPROPALTER = 0x5340,             //The given property cannot be altered outside Alter block
        SQLDMO_E_INVALIDALTERDISTINSTALLED = 0x5341,//The given property must not be altered
        SQLDMO_E_SERVERNAMEREQUIRED = 0x5342,   //The server name must be provided
        SQLDMO_E_DISTSERVERNAMEREQUIRED = 0x5343,//The distribution server name must be provided
        SQLDMO_E_WORKINGDIRREQUIRED = 0x5344,   //The distribution server name must be provided
        SQLDMO_E_DISTDBREQUIRED = 0x5345,               //Atleast one distributor database must be provided
        SQLDMO_E_INVALIDHISTORYROWSPERJOBMAX = 0x5348,
        SQLDMO_E_INVALIDPUBATTRIB = 0x5349,
        SQLDMO_E_INVALIDREPLICATIONTYPE = 0x534A,
        SQLDMO_E_INVALIDSCHEMAOPTION = 0x534B,
		  SQLDMO_E_INVALIDFORREMDISTRIBUTOR = 0x534C,
        SQLDMO_E_INVALIDARTICLETYPE = 0x534D,
        SQLDMO_E_SIZEGREATERTHANNEG = 0x534E,
        SQLDMO_E_INVALIDLOGINTYPE = 0x534F,
        SQLDMO_E_CANTMODIFYAFTERCREATE = 0x5350,
        SQLDMO_E_INVALIDDSN = 0x5351,
        SQLDMO_E_INVALIDNAME70 = 0x5352,
        SQLDMO_E_MUSTEVEN = 0x5353,
        SQLDMO_E_MISSINGALTER = 0x5354,
        SQLDMO_E_NOTGUID = 0x5355,
        SQLDMO_E_DESTSERVERREQUIRED = 0x5356,   //The dest server name must be provided for transfer
        SQLDMO_E_CANTSHRINK = 0x5357,
        SQLDMO_E_CANTDEFAULTOFF = 0x5358,
        SQLDMO_E_INVALIDNTNAME = 0x5359,        // Name contain illegal character for NT file name
        SQLDMO_E_INVALIDOUTCOMETYPE = 0x535A,
        SQLDMO_E_NEEDSCOLUMNNAME = 0x535B,
        SQLDMO_E_INVALIDHYPOINDEXTYPE = 0x535C,
        SQLDMO_E_INVALIDPING = 0x535D,

// Errors indicating that either the connected SQL Server is an invalid version,
// or the client platform is invalid, or a combination of those; or that the
// server has not been set up properly for SQLDMO (the required stored procedures
// are not installed)..
SQLDMO_ECAT_INVALIDPLATFORM = 0x5400,
        SQLDMO_E_BACKUPSQL60ONLY = 0x5400,
        SQLDMO_E_MSSQLONLY = 0x5401,
        SQLDMO_E_WIN95REQUIRESCONN = 0x5402,
        SQLDMO_E_NOTONWIN95 = 0x5403,
        SQLDMO_E_SQL60ONLY = 0x5404,
        SQLDMO_E_REPLSQL60ONLY = 0x5405,
        SQLDMO_E_STARTUPPROCSQL60ONLY = 0x5406,
        SQLDMO_E_NEEDSQLDMOPROCS = 0x5407,
        SQLDMO_E_ALTERSQL60ONLY = 0x5408,
        SQLDMO_E_SORTEDDATAREORGSQL60ONLY = 0x5409,
        SQLDMO_E_MSSQLNTONLY = 0x540A,
        SQLDMO_E_WIN95REQUIRESSQL60 = 0x540B,
        SQLDMO_E_BACKUPSQL65ONLY = 0x540C,
        SQLDMO_E_SQL65ONLY = 0x540D,
        SQLDMO_E_ALERTSQL65ONLY = 0x540E,
        SQLDMO_E_REMOTESQL65ONLY = 0x540F,
        SQLDMO_E_PIPEDEVSQL60ONLY = 0x5410,
        SQLDMO_E_FKEYSQL65ONLY = 0x5411,
        SQLDMO_E_XPIMPERSONATESQL65ONLY = 0x5412,
        SQLDMO_E_SQL70ONLY = 0x5413,
        SQLDMO_E_FKEYSQL70ONLY = 0x5414,
        SQLDMO_E_BACKUPSQL70ONLY = 0x5415,
        SQLDMO_E_NEEDSQLDMOUPGRADE = 0x5416,
        SQLDMO_E_NEEDSERVERBUILDUPGRADE = 0x5417,


// Errors indicating that the named object was not found in the collection, or
// that the ordinal passed as a collection index was out of range.
SQLDMO_ECAT_ITEMNOTFOUND = 0x5500,
        SQLDMO_E_RULENOTFOUND = 0x5500,
        SQLDMO_E_DEFAULTNOTFOUND = 0x5501,
        SQLDMO_E_TYPENOTFOUND = 0x5502,
        SQLDMO_E_LOGINNOTFOUND = 0x5503,
        SQLDMO_E_GROUPNOTFOUND = 0x5504,
        SQLDMO_E_LANGNOTFOUND = 0x5505,
        SQLDMO_E_DBNOTFOUND = 0x5506,
        SQLDMO_E_DEVICENOTFOUND = 0x5507,
        SQLDMO_E_COLUMNNOTFOUND = 0x5508,
        SQLDMO_E_ORDOUTOFRANGE = 0x5509,
        SQLDMO_E_NAMENOTFOUND = 0x550A,
        SQLDMO_E_USERNOTFOUND = 0x550B,
        SQLDMO_E_NAMENOTINCACHE = 0x550C,
        SQLDMO_E_PROPNAMENOTFOUND = 0x550D,
        SQLDMO_E_IDNOTFOUND = 0x550E,
        SQLDMO_E_DATABASEROLENOTFOUND = 0x550F,
        SQLDMO_E_NAMENOTFOUNDQI = 0x5510,

// Errors indicating that the current login does not have sufficient privilege
// to perform the requested operation.
SQLDMO_ECAT_UNPRIVILEGEDLOGIN = 0x5600,
        SQLDMO_E_MUSTBESAORDBO = 0x5600,
        SQLDMO_E_MUSTBESAORLOGIN = 0x5601,
        SQLDMO_E_MUSTBESA = 0x5602,
        SQLDMO_E_MUSTBESAORORSECORLOGIN = 0x5603,
        SQLDMO_E_MUSTBESAORSEC = 0x5604,
        SQLDMO_E_MUSTBESAORDBC = 0x5605,
        SQLDMO_E_MUSTBESAORSRV = 0x5606,
        SQLDMO_E_MUSTBESAORPRC = 0x5607,

// Errors indicating a query execution error or an inaccessible database.
SQLDMO_ECAT_EXECUTION = 0x5700,
        SQLDMO_E_SYSPROCERROR = 0x5700,
        SQLDMO_E_CACHEEXECERROR = 0x5701,
        SQLDMO_E_INACCESSIBLEDB = 0x5702,
        SQLDMO_E_BATCHCOMPLETEWITHERRORS = 0x5703,
        SQLDMO_E_BCPCOLFMTFAILED = 0x5704,              //dblib bcp_colfmt failed.
        SQLDMO_E_SUSPENDINDEX = 0x5705,                 //Error trying to suspend indexing
        SQLDMO_E_RESUMEINDEX = 0x5706,                  //Error trying to resume suspended indexing
        SQLDMO_E_BCPEXECFAILED  = 0x5707,               //dblib bcp_exec function failed
        SQLDMO_E_BCPINITFAILED = 0x5708,                //dblib bcp_init function failed
        SQLDMO_E_BCPCONTROLFAILED = 0x5709,             //dblib bcp_control function failed
        SQLDMO_E_USERABORTED = 0x570A,                  //User aborted transfer
        SQLDMO_E_QIERROR = 0x570B,                      // Failed to set QI
        SQLDMO_E_REGIONALERROR = 0x570C,                // Failed to set regional setting
        SQLDMO_E_SINGLEUSERDB = 0x570D,                 // DB in single user mode, and someone is in there

// Errors indicating the connection to SQL Server cannot be restored.  SQLDMO will
// automatically reconnect (as determined by the SQLServer.AutoReconnect property)
// but the network may be down or the server not started.
SQLDMO_ECAT_CONNECTION = 0x5800,
        SQLDMO_E_CANTRECONNDEADCONN = 0x5800,

// Errors indicating insufficient resources either locally or on the server.
SQLDMO_ECAT_RESOURCE = 0x5900,
        SQLDMO_E_OUTOFMEMORY = 0x5900,
        SQLDMO_E_NOMOREDEVNOS = 0x5901,
        SQLDMO_E_SERVERLOCKTIMEDOUT = 0x5902,
        SQLDMO_E_APPLOCKTIMEDOUT = 0x5903,

        SQLDMO_E_LASTERROR = 0x5AFF
} SQLDMO_ERROR_TYPE;

// SQLDMO_ERROR #defines.  These are categories, not severities; there is no
// mathematical relationship between groupings.
#ifndef _SQLDMO_ODL_            // Not done in .ODL file.

// Switch on SQLDMO_ECAT to determine the category of a returned error code.
// Use long cast as lint can complain about an enum-vs.-int.
#define SQLDMO_ECAT(scode) (scode & (long)SQLDMO_ECAT_MASK)

#endif



#endif	// _SQLDMO_CONSTANTS_

/////////////////////////////////////////////////////////////////////////////////////////
// Interface definitions.
/////////////////////////////////////////////////////////////////////////////////////////
#ifndef _SQLDMO_ODL_		// Skip if in .odl file.

// Optional parameter definitions.  For C explicit values will have to be specified,
// as indicated within the CPPDEFAULT() expansion.
//
// SQLDMO Parameter sequencing is as follows ("optional" in accordance with C++ usage):
// 	Nonoptional parameters
//		Nonoptional Return value if any
//		Optional additional parameters
//		Optional return value, if any
//
#ifdef __cplusplus
#define CPPDEFAULT(DefaultParamValue)	DefaultParamValue
#else
#define CPPDEFAULT(DefaultParamValue)  // DefaultParamValue  //jms
#endif

// Windows.h should define these...
typedef BOOL *LPBOOL;
typedef float *LPFLOAT;
typedef double *LPDOUBLE;

///////////////////////////////////////////////////////////////////////////////////////
// Forward declarations and typedefs, allowing for UNICODE clients.
///////////////////////////////////////////////////////////////////////////////////////
#undef SQLDMO_LPCSTR
#undef SQLDMO_BSTR
#undef SQLDMO_LPBSTR
#undef SQLDMOFreeString

// Carry over the Ansi definition of BSTR.
typedef CHAR __RPC_FAR * BSTRA;
typedef BSTRA __RPC_FAR *LPBSTRA;

#define SQLDMO_UNICODE

#define SQLDMO_LPCSTR   LPCOLESTR
// #define SQLDMO_LPCSTR   LPCWSTR
#define SQLDMO_BSTR     BSTR
#define SQLDMO_LPBSTR   LPBSTR
#define SQLDMOFreeString(bstr) SysFreeString(bstr)

#ifdef __cplusplus
#define TYPEDEFINTERFACE typedef
#else
#define TYPEDEFINTERFACE typedef interface
#endif

// Forward declarations.  Base classes...
#undef LPSQLDMOSTDOBJECT
#undef ISQLDMOStdObject
#undef IID_ISQLDMOStdObject
interface IWSQLDMOStdObject;			TYPEDEFINTERFACE IWSQLDMOStdObject *				LPWSQLDMOSTDOBJECT;
#define LPSQLDMOSTDOBJECT LPWSQLDMOSTDOBJECT
#define ISQLDMOStdObject IWSQLDMOStdObject
#define IID_ISQLDMOStdObject IID_IWSQLDMOStdObject

#undef LPSQLDMOSTDCOLLECTION
#undef ISQLDMOStdCollection
#undef IID_ISQLDMOStdCollection
TYPEDEFINTERFACE IWSQLDMOStdObject * LPWSQLDMOSTDCOLLECTION;	// Auto-documenting for collection management
#define LPSQLDMOSTDCOLLECTION LPWSQLDMOSTDCOLLECTION
#define ISQLDMOStdCollection IWSQLDMOStdCollection
#define IID_ISQLDMOStdCollection IID_IWSQLDMOStdCollection

// ... and derived classes.




#undef LPSQLDMOAPPLICATION
#undef ISQLDMOApplication
#undef IID_ISQLDMOApplication
interface IWSQLDMOApplication;          TYPEDEFINTERFACE IWSQLDMOApplication *                  LPWSQLDMOAPPLICATION;
#define LPSQLDMOAPPLICATION LPWSQLDMOAPPLICATION
#define ISQLDMOApplication IWSQLDMOApplication
#define IID_ISQLDMOApplication IID_IWSQLDMOApplication

#undef LPSQLDMOSERVERS
#undef ISQLDMOServers
#undef IID_ISQLDMOServers
interface IWSQLDMOServers;                      TYPEDEFINTERFACE IWSQLDMOServers *                              LPWSQLDMOSERVERS;
#define LPSQLDMOSERVERS LPWSQLDMOSERVERS
#define ISQLDMOServers IWSQLDMOServers
#define IID_ISQLDMOServers IID_IWSQLDMOServers

#undef LPSQLDMOSERVER
#undef ISQLDMOServer
#undef IID_ISQLDMOServer
interface IWSQLDMOServer;                       TYPEDEFINTERFACE IWSQLDMOServer *                                       LPWSQLDMOSERVER;
#define LPSQLDMOSERVER LPWSQLDMOSERVER
#define ISQLDMOServer IWSQLDMOServer
#define IID_ISQLDMOServer IID_IWSQLDMOServer

#undef LPSQLDMODATABASES
#undef ISQLDMODatabases
#undef IID_ISQLDMODatabases
interface IWSQLDMODatabases;                    TYPEDEFINTERFACE IWSQLDMODatabases *                            LPWSQLDMODATABASES;
#define LPSQLDMODATABASES LPWSQLDMODATABASES
#define ISQLDMODatabases IWSQLDMODatabases
#define IID_ISQLDMODatabases IID_IWSQLDMODatabases

#undef LPSQLDMODATABASE
#undef ISQLDMODatabase
#undef IID_ISQLDMODatabase
interface IWSQLDMODatabase;                     TYPEDEFINTERFACE IWSQLDMODatabase *                             LPWSQLDMODATABASE;
#define LPSQLDMODATABASE LPWSQLDMODATABASE
#define ISQLDMODatabase IWSQLDMODatabase
#define IID_ISQLDMODatabase IID_IWSQLDMODatabase

#undef LPSQLDMOBACKUPDEVICES
#undef ISQLDMOBackupDevices
#undef IID_ISQLDMOBackupDevices
interface IWSQLDMOBackupDevices;                TYPEDEFINTERFACE IWSQLDMOBackupDevices *                   LPWSQLDMOBACKUPDEVICES;
#define LPSQLDMOBACKUPDEVICES LPWSQLDMOBACKUPDEVICES
#define ISQLDMOBackupDevices IWSQLDMOBackupDevices
#define IID_ISQLDMOBackupDevices IID_IWSQLDMOBackupDevices

#undef LPSQLDMOBACKUPDEVICE
#undef ISQLDMOBackupDevice
#undef IID_ISQLDMOBackupDevice
interface IWSQLDMOBackupDevice;                 TYPEDEFINTERFACE IWSQLDMOBackupDevice *                    LPWSQLDMOBACKUPDEVICE;
#define LPSQLDMOBACKUPDEVICE LPWSQLDMOBACKUPDEVICE
#define ISQLDMOBackupDevice IWSQLDMOBackupDevice
#define IID_ISQLDMOBackupDevice IID_IWSQLDMOBackupDevice

/** Need to take out when BillPos is ready **/
#undef LPSQLDMODEVICES
#undef ISQLDMODevices
#undef IID_ISQLDMODevices
#define LPSQLDMODEVICES LPWSQLDMOBACKUPDEVICES
#define ISQLDMODevices IWSQLDMOBackupDevices
#define IID_ISQLDMODevices IID_IWSQLDMOBackupDevices

#undef LPSQLDMODEVICE
#undef ISQLDMODevice
#undef IID_ISQLDMODevice
#define LPSQLDMODEVICE LPWSQLDMOBACKUPDEVICE
#define ISQLDMODevice IWSQLDMOBackupDevice
#define IID_ISQLDMODevice IID_IWSQLDMOBackupDevice
/**/

#undef LPSQLDMOLOGINS
#undef ISQLDMOLogins
#undef IID_ISQLDMOLogins
interface IWSQLDMOLogins;                       TYPEDEFINTERFACE IWSQLDMOLogins *                                       LPWSQLDMOLOGINS;
#define LPSQLDMOLOGINS LPWSQLDMOLOGINS
#define ISQLDMOLogins IWSQLDMOLogins
#define IID_ISQLDMOLogins IID_IWSQLDMOLogins

#undef LPSQLDMOLOGIN
#undef ISQLDMOLogin
#undef IID_ISQLDMOLogin
interface IWSQLDMOLogin;                                TYPEDEFINTERFACE IWSQLDMOLogin *                                        LPWSQLDMOLOGIN;
#define LPSQLDMOLOGIN LPWSQLDMOLOGIN
#define ISQLDMOLogin IWSQLDMOLogin
#define IID_ISQLDMOLogin IID_IWSQLDMOLogin

#undef LPSQLDMOLANGUAGES
#undef ISQLDMOLanguages
#undef IID_ISQLDMOLanguages
interface IWSQLDMOLanguages;                    TYPEDEFINTERFACE IWSQLDMOLanguages *                            LPWSQLDMOLANGUAGES;
#define LPSQLDMOLANGUAGES LPWSQLDMOLANGUAGES
#define ISQLDMOLanguages IWSQLDMOLanguages
#define IID_ISQLDMOLanguages IID_IWSQLDMOLanguages

#undef LPSQLDMOLANGUAGE
#undef ISQLDMOLanguage
#undef IID_ISQLDMOLanguage
interface IWSQLDMOLanguage;                     TYPEDEFINTERFACE IWSQLDMOLanguage *                             LPWSQLDMOLANGUAGE;
#define LPSQLDMOLANGUAGE LPWSQLDMOLANGUAGE
#define ISQLDMOLanguage IWSQLDMOLanguage
#define IID_ISQLDMOLanguage IID_IWSQLDMOLanguage

#undef LPSQLDMOREMOTESERVERS
#undef ISQLDMORemoteServers
#undef IID_ISQLDMORemoteServers
interface IWSQLDMORemoteServers;                TYPEDEFINTERFACE IWSQLDMORemoteServers *                        LPWSQLDMOREMOTESERVERS;
#define LPSQLDMOREMOTESERVERS LPWSQLDMOREMOTESERVERS
#define ISQLDMORemoteServers IWSQLDMORemoteServers
#define IID_ISQLDMORemoteServers IID_IWSQLDMORemoteServers

#undef LPSQLDMOREMOTESERVER
#undef ISQLDMORemoteServer
#undef IID_ISQLDMORemoteServer
interface IWSQLDMORemoteServer;         TYPEDEFINTERFACE IWSQLDMORemoteServer *                 LPWSQLDMOREMOTESERVER;
#define LPSQLDMOREMOTESERVER LPWSQLDMOREMOTESERVER
#define ISQLDMORemoteServer IWSQLDMORemoteServer
#define IID_ISQLDMORemoteServer IID_IWSQLDMORemoteServer

#undef LPSQLDMOTABLES
#undef ISQLDMOTables
#undef IID_ISQLDMOTables
interface IWSQLDMOTables;                       TYPEDEFINTERFACE IWSQLDMOTables *                                       LPWSQLDMOTABLES;
#define LPSQLDMOTABLES LPWSQLDMOTABLES
#define ISQLDMOTables IWSQLDMOTables
#define IID_ISQLDMOTables IID_IWSQLDMOTables

#undef LPSQLDMOTABLE
#undef ISQLDMOTable
#undef IID_ISQLDMOTable
interface IWSQLDMOTable;                                TYPEDEFINTERFACE IWSQLDMOTable *                                        LPWSQLDMOTABLE;
#define LPSQLDMOTABLE LPWSQLDMOTABLE
#define ISQLDMOTable IWSQLDMOTable
#define IID_ISQLDMOTable IID_IWSQLDMOTable

#undef LPSQLDMOCOLUMNS
#undef ISQLDMOColumns
#undef IID_ISQLDMOColumns
interface IWSQLDMOColumns;                      TYPEDEFINTERFACE IWSQLDMOColumns *                              LPWSQLDMOCOLUMNS;
#define LPSQLDMOCOLUMNS LPWSQLDMOCOLUMNS
#define ISQLDMOColumns IWSQLDMOColumns
#define IID_ISQLDMOColumns IID_IWSQLDMOColumns

#undef LPSQLDMOCOLUMN
#undef ISQLDMOColumn
#undef IID_ISQLDMOColumn
interface IWSQLDMOColumn;                       TYPEDEFINTERFACE IWSQLDMOColumn *                                       LPWSQLDMOCOLUMN;
#define LPSQLDMOCOLUMN LPWSQLDMOCOLUMN
#define ISQLDMOColumn IWSQLDMOColumn
#define IID_ISQLDMOColumn IID_IWSQLDMOColumn

#undef LPSQLDMORULES
#undef ISQLDMORules
#undef IID_ISQLDMORules
interface IWSQLDMORules;                                TYPEDEFINTERFACE IWSQLDMORules *                                        LPWSQLDMORULES;
#define LPSQLDMORULES LPWSQLDMORULES
#define ISQLDMORules IWSQLDMORules
#define IID_ISQLDMORules IID_IWSQLDMORules

#undef LPSQLDMORULE
#undef ISQLDMORule
#undef IID_ISQLDMORule
interface IWSQLDMORule;                         TYPEDEFINTERFACE IWSQLDMORule *                                 LPWSQLDMORULE;
#define LPSQLDMORULE LPWSQLDMORULE
#define ISQLDMORule IWSQLDMORule
#define IID_ISQLDMORule IID_IWSQLDMORule

#undef LPSQLDMODEFAULTS
#undef ISQLDMODefaults
#undef IID_ISQLDMODefaults
interface IWSQLDMODefaults;                     TYPEDEFINTERFACE IWSQLDMODefaults *                             LPWSQLDMODEFAULTS;
#define LPSQLDMODEFAULTS LPWSQLDMODEFAULTS
#define ISQLDMODefaults IWSQLDMODefaults
#define IID_ISQLDMODefaults IID_IWSQLDMODefaults

#undef LPSQLDMODEFAULT
#undef ISQLDMODefault
#undef IID_ISQLDMODefault
interface IWSQLDMODefault;                      TYPEDEFINTERFACE IWSQLDMODefault *                              LPWSQLDMODEFAULT;
#define LPSQLDMODEFAULT LPWSQLDMODEFAULT
#define ISQLDMODefault IWSQLDMODefault
#define IID_ISQLDMODefault IID_IWSQLDMODefault

#undef LPSQLDMOUSERDEFINEDDATATYPES
#undef ISQLDMOUserDefinedDatatypes
#undef IID_ISQLDMOUserDefinedDatatypes
interface IWSQLDMOUserDefinedDatatypes; TYPEDEFINTERFACE IWSQLDMOUserDefinedDatatypes * LPWSQLDMOUSERDEFINEDDATATYPES;
#define LPSQLDMOUSERDEFINEDDATATYPES LPWSQLDMOUSERDEFINEDDATATYPES
#define ISQLDMOUserDefinedDatatypes IWSQLDMOUserDefinedDatatypes
#define IID_ISQLDMOUserDefinedDatatypes IID_IWSQLDMOUserDefinedDatatypes

#undef LPSQLDMOUSERDEFINEDDATATYPE
#undef ISQLDMOUserDefinedDatatype
#undef IID_ISQLDMOUserDefinedDatatype
interface IWSQLDMOUserDefinedDatatype;  TYPEDEFINTERFACE IWSQLDMOUserDefinedDatatype *  LPWSQLDMOUSERDEFINEDDATATYPE;
#define LPSQLDMOUSERDEFINEDDATATYPE LPWSQLDMOUSERDEFINEDDATATYPE
#define ISQLDMOUserDefinedDatatype IWSQLDMOUserDefinedDatatype
#define IID_ISQLDMOUserDefinedDatatype IID_IWSQLDMOUserDefinedDatatype

#undef LPSQLDMOSYSTEMDATATYPES
#undef ISQLDMOSystemDatatypes
#undef IID_ISQLDMOSystemDatatypes
interface IWSQLDMOSystemDatatypes;      TYPEDEFINTERFACE IWSQLDMOSystemDatatypes *              LPWSQLDMOSYSTEMDATATYPES;
#define LPSQLDMOSYSTEMDATATYPES LPWSQLDMOSYSTEMDATATYPES
#define ISQLDMOSystemDatatypes IWSQLDMOSystemDatatypes
#define IID_ISQLDMOSystemDatatypes IID_IWSQLDMOSystemDatatypes

#undef LPSQLDMOSYSTEMDATATYPE
#undef ISQLDMOSystemDatatype
#undef IID_ISQLDMOSystemDatatype
interface IWSQLDMOSystemDatatype;       TYPEDEFINTERFACE IWSQLDMOSystemDatatype *                       LPWSQLDMOSYSTEMDATATYPE;
#define LPSQLDMOSYSTEMDATATYPE LPWSQLDMOSYSTEMDATATYPE
#define ISQLDMOSystemDatatype IWSQLDMOSystemDatatype
#define IID_ISQLDMOSystemDatatype IID_IWSQLDMOSystemDatatype

#undef LPSQLDMOVIEWS
#undef ISQLDMOViews
#undef IID_ISQLDMOViews
interface IWSQLDMOViews;                                TYPEDEFINTERFACE IWSQLDMOViews *                                        LPWSQLDMOVIEWS;
#define LPSQLDMOVIEWS LPWSQLDMOVIEWS
#define ISQLDMOViews IWSQLDMOViews
#define IID_ISQLDMOViews IID_IWSQLDMOViews

#undef LPSQLDMOVIEW
#undef ISQLDMOView
#undef IID_ISQLDMOView
interface IWSQLDMOView;                         TYPEDEFINTERFACE IWSQLDMOView *                                 LPWSQLDMOVIEW;
#define LPSQLDMOVIEW LPWSQLDMOVIEW
#define ISQLDMOView IWSQLDMOView
#define IID_ISQLDMOView IID_IWSQLDMOView

#undef LPSQLDMOSTOREDPROCEDURES
#undef ISQLDMOStoredProcedures
#undef IID_ISQLDMOStoredProcedures
interface IWSQLDMOStoredProcedures;     TYPEDEFINTERFACE IWSQLDMOStoredProcedures *             LPWSQLDMOSTOREDPROCEDURES;
#define LPSQLDMOSTOREDPROCEDURES LPWSQLDMOSTOREDPROCEDURES
#define ISQLDMOStoredProcedures IWSQLDMOStoredProcedures
#define IID_ISQLDMOStoredProcedures IID_IWSQLDMOStoredProcedures

#undef LPSQLDMOSTOREDPROCEDURE
#undef ISQLDMOStoredProcedure
#undef IID_ISQLDMOStoredProcedure
interface IWSQLDMOStoredProcedure;      TYPEDEFINTERFACE IWSQLDMOStoredProcedure *              LPWSQLDMOSTOREDPROCEDURE;
#define LPSQLDMOSTOREDPROCEDURE LPWSQLDMOSTOREDPROCEDURE
#define ISQLDMOStoredProcedure IWSQLDMOStoredProcedure
#define IID_ISQLDMOStoredProcedure IID_IWSQLDMOStoredProcedure

#undef LPSQLDMOTRIGGERS
#undef ISQLDMOTriggers
#undef IID_ISQLDMOTriggers
interface IWSQLDMOTriggers;                     TYPEDEFINTERFACE IWSQLDMOTriggers *                             LPWSQLDMOTRIGGERS;
#define LPSQLDMOTRIGGERS LPWSQLDMOTRIGGERS
#define ISQLDMOTriggers IWSQLDMOTriggers
#define IID_ISQLDMOTriggers IID_IWSQLDMOTriggers

#undef LPSQLDMOTRIGGER
#undef ISQLDMOTrigger
#undef IID_ISQLDMOTrigger
interface IWSQLDMOTrigger;                      TYPEDEFINTERFACE IWSQLDMOTrigger *                              LPWSQLDMOTRIGGER;
#define LPSQLDMOTRIGGER LPWSQLDMOTRIGGER
#define ISQLDMOTrigger IWSQLDMOTrigger
#define IID_ISQLDMOTrigger IID_IWSQLDMOTrigger

#undef LPSQLDMOUSERS
#undef ISQLDMOUsers
#undef IID_ISQLDMOUsers
interface IWSQLDMOUsers;                                TYPEDEFINTERFACE IWSQLDMOUsers *                                        LPWSQLDMOUSERS;
#define LPSQLDMOUSERS LPWSQLDMOUSERS
#define ISQLDMOUsers IWSQLDMOUsers
#define IID_ISQLDMOUsers IID_IWSQLDMOUsers

#undef LPSQLDMOUSER
#undef ISQLDMOUser
#undef IID_ISQLDMOUser
interface IWSQLDMOUser;                         TYPEDEFINTERFACE IWSQLDMOUser *                                 LPWSQLDMOUSER;
#define LPSQLDMOUSER LPWSQLDMOUSER
#define ISQLDMOUser IWSQLDMOUser
#define IID_ISQLDMOUser IID_IWSQLDMOUser

#undef LPSQLDMOGROUPS
#undef ISQLDMOGroups
#undef IID_ISQLDMOGroups
interface IWSQLDMOGroups;                       TYPEDEFINTERFACE IWSQLDMOGroups *                                       LPWSQLDMOGROUPS;
#define LPSQLDMOGROUPS LPWSQLDMOGROUPS
#define ISQLDMOGroups IWSQLDMOGroups
#define IID_ISQLDMOGroups IID_IWSQLDMOGroups

#undef LPSQLDMOGROUP
#undef ISQLDMOGroup
#undef IID_ISQLDMOGroup
interface IWSQLDMOGroup;                                TYPEDEFINTERFACE IWSQLDMOGroup *                                        LPWSQLDMOGROUP;
#define LPSQLDMOGROUP LPWSQLDMOGROUP
#define ISQLDMOGroup IWSQLDMOGroup
#define IID_ISQLDMOGroup IID_IWSQLDMOGroup

#undef LPSQLDMOINDEXES
#undef ISQLDMOIndexes
#undef IID_ISQLDMOIndexes
interface IWSQLDMOIndexes;                      TYPEDEFINTERFACE IWSQLDMOIndexes *                              LPWSQLDMOINDEXES;
#define LPSQLDMOINDEXES LPWSQLDMOINDEXES
#define ISQLDMOIndexes IWSQLDMOIndexes
#define IID_ISQLDMOIndexes IID_IWSQLDMOIndexes

#undef LPSQLDMOINDEX
#undef ISQLDMOIndex
#undef IID_ISQLDMOIndex
interface IWSQLDMOIndex;                                TYPEDEFINTERFACE IWSQLDMOIndex *                                        LPWSQLDMOINDEX;
#define LPSQLDMOINDEX LPWSQLDMOINDEX
#define ISQLDMOIndex IWSQLDMOIndex
#define IID_ISQLDMOIndex IID_IWSQLDMOIndex

#undef LPSQLDMOTRIGGERS
#undef ISQLDMOTriggers
#undef IID_ISQLDMOTriggers
interface IWSQLDMOTriggers;                     TYPEDEFINTERFACE IWSQLDMOTriggers *                             LPWSQLDMOTRIGGERS;
#define LPSQLDMOTRIGGERS LPWSQLDMOTRIGGERS
#define ISQLDMOTriggers IWSQLDMOTriggers
#define IID_ISQLDMOTriggers IID_IWSQLDMOTriggers

#undef LPSQLDMOTRIGGER
#undef ISQLDMOTrigger
#undef IID_ISQLDMOTrigger
interface IWSQLDMOTrigger;                      TYPEDEFINTERFACE IWSQLDMOTrigger *                              LPWSQLDMOTRIGGER;
#define LPSQLDMOTRIGGER LPWSQLDMOTRIGGER
#define ISQLDMOTrigger IWSQLDMOTrigger
#define IID_ISQLDMOTrigger IID_IWSQLDMOTrigger

#undef LPSQLDMOREMOTELOGINS
#undef ISQLDMORemoteLogins
#undef IID_ISQLDMORemoteLogins
interface IWSQLDMORemoteLogins;         TYPEDEFINTERFACE IWSQLDMORemoteLogins *                 LPWSQLDMOREMOTELOGINS;
#define LPSQLDMOREMOTELOGINS LPWSQLDMOREMOTELOGINS
#define ISQLDMORemoteLogins IWSQLDMORemoteLogins
#define IID_ISQLDMORemoteLogins IID_IWSQLDMORemoteLogins

#undef LPSQLDMOREMOTELOGIN
#undef ISQLDMORemoteLogin
#undef IID_ISQLDMORemoteLogin
interface IWSQLDMORemoteLogin;          TYPEDEFINTERFACE IWSQLDMORemoteLogin *                  LPWSQLDMOREMOTELOGIN;
#define LPSQLDMOREMOTELOGIN LPWSQLDMOREMOTELOGIN
#define ISQLDMORemoteLogin IWSQLDMORemoteLogin
#define IID_ISQLDMORemoteLogin IID_IWSQLDMORemoteLogin

#undef LPSQLDMODBOBJECTS
#undef ISQLDMODBObjects
#undef IID_ISQLDMODBObjects
interface IWSQLDMODBObjects;                    TYPEDEFINTERFACE IWSQLDMODBObjects *                            LPWSQLDMODBOBJECTS;
#define LPSQLDMODBOBJECTS LPWSQLDMODBOBJECTS
#define ISQLDMODBObjects IWSQLDMODBObjects
#define IID_ISQLDMODBObjects IID_IWSQLDMODBObjects

#undef LPSQLDMODBOBJECT
#undef ISQLDMODBObject
#undef IID_ISQLDMODBObject
interface IWSQLDMODBObject;                     TYPEDEFINTERFACE IWSQLDMODBObject *                             LPWSQLDMODBOBJECT;
#define LPSQLDMODBOBJECT LPWSQLDMODBOBJECT
#define ISQLDMODBObject IWSQLDMODBObject
#define IID_ISQLDMODBObject IID_IWSQLDMODBObject

#undef LPSQLDMODBOPTION
#undef ISQLDMODBOption
#undef IID_ISQLDMODBOption
interface IWSQLDMODBOption;                     TYPEDEFINTERFACE IWSQLDMODBOption *                             LPWSQLDMODBOPTION;
#define LPSQLDMODBOPTION LPWSQLDMODBOPTION
#define ISQLDMODBOption IWSQLDMODBOption
#define IID_ISQLDMODBOption IID_IWSQLDMODBOption

#undef LPSQLDMOCONFIGURATION
#undef ISQLDMOConfiguration
#undef IID_ISQLDMOConfiguration
interface IWSQLDMOConfiguration;                TYPEDEFINTERFACE IWSQLDMOConfiguration *                        LPWSQLDMOCONFIGURATION;
#define LPSQLDMOCONFIGURATION LPWSQLDMOCONFIGURATION
#define ISQLDMOConfiguration IWSQLDMOConfiguration
#define IID_ISQLDMOConfiguration IID_IWSQLDMOConfiguration

#undef LPSQLDMOCONFIGVALUES
#undef ISQLDMOConfigValues
#undef IID_ISQLDMOConfigValues
interface IWSQLDMOConfigValues;         TYPEDEFINTERFACE IWSQLDMOConfigValues *                         LPWSQLDMOCONFIGVALUES;
#define LPSQLDMOCONFIGVALUES LPWSQLDMOCONFIGVALUES
#define ISQLDMOConfigValues IWSQLDMOConfigValues
#define IID_ISQLDMOConfigValues IID_IWSQLDMOConfigValues

#undef LPSQLDMOCONFIGVALUE
#undef ISQLDMOConfigValue
#undef IID_ISQLDMOConfigValue
interface IWSQLDMOConfigValue;          TYPEDEFINTERFACE IWSQLDMOConfigValue *                          LPWSQLDMOCONFIGVALUE;
#define LPSQLDMOCONFIGVALUE LPWSQLDMOCONFIGVALUE
#define ISQLDMOConfigValue IWSQLDMOConfigValue
#define IID_ISQLDMOConfigValue IID_IWSQLDMOConfigValue

#undef LPSQLDMOQUERYRESULTS
#undef ISQLDMOQueryResults
#undef IID_ISQLDMOQueryResults
interface IWSQLDMOQueryResults;         TYPEDEFINTERFACE IWSQLDMOQueryResults *                 LPWSQLDMOQUERYRESULTS;
#define LPSQLDMOQUERYRESULTS LPWSQLDMOQUERYRESULTS
#define ISQLDMOQueryResults IWSQLDMOQueryResults
#define IID_ISQLDMOQueryResults IID_IWSQLDMOQueryResults

#undef LPSQLDMOTRANSACTIONLOG
#undef ISQLDMOTransactionLog
#undef IID_ISQLDMOTransactionLog
interface IWSQLDMOTransactionLog;       TYPEDEFINTERFACE IWSQLDMOTransactionLog *                       LPWSQLDMOTRANSACTIONLOG;
#define LPSQLDMOTRANSACTIONLOG LPWSQLDMOTRANSACTIONLOG
#define ISQLDMOTransactionLog IWSQLDMOTransactionLog
#define IID_ISQLDMOTransactionLog IID_IWSQLDMOTransactionLog

#undef LPSQLDMOREGISTRY
#undef ISQLDMORegistry
#undef IID_ISQLDMORegistry
interface IWSQLDMORegistry;                     TYPEDEFINTERFACE IWSQLDMORegistry *                             LPWSQLDMOREGISTRY;
#define LPSQLDMOREGISTRY LPWSQLDMOREGISTRY
#define ISQLDMORegistry IWSQLDMORegistry
#define IID_ISQLDMORegistry IID_IWSQLDMORegistry

#undef LPSQLDMOBACKUP
#undef ISQLDMOBackup
#undef IID_ISQLDMOBackup
interface IWSQLDMOBackup;                       TYPEDEFINTERFACE IWSQLDMOBackup *                                       LPWSQLDMOBACKUP;
#define LPSQLDMOBACKUP LPWSQLDMOBACKUP
#define ISQLDMOBackup IWSQLDMOBackup
#define IID_ISQLDMOBackup IID_IWSQLDMOBackup

#undef LPSQLDMOBULKCOPY
#undef ISQLDMOBulkCopy
#undef IID_ISQLDMOBulkCopy
interface IWSQLDMOBulkCopy;                     TYPEDEFINTERFACE IWSQLDMOBulkCopy *                                     LPWSQLDMOBULKCOPY;
#define LPSQLDMOBULKCOPY LPWSQLDMOBULKCOPY
#define ISQLDMOBulkCopy IWSQLDMOBulkCopy
#define IID_ISQLDMOBulkCopy IID_IWSQLDMOBulkCopy

#undef LPSQLDMOOBJECTLIST
#undef ISQLDMOObjectList
#undef IID_ISQLDMOObjectList
interface IWSQLDMOObjectList;           TYPEDEFINTERFACE IWSQLDMOObjectList *                           LPWSQLDMOOBJECTLIST;
#define LPSQLDMOOBJECTLIST LPWSQLDMOOBJECTLIST
#define ISQLDMOObjectList IWSQLDMOObjectList
#define IID_ISQLDMOObjectList IID_IWSQLDMOObjectList

#undef LPSQLDMONAMES
#undef ISQLDMONames
#undef IID_ISQLDMONames
interface IWSQLDMONames;                TYPEDEFINTERFACE IWSQLDMONames *                                LPWSQLDMONAMES;
#define LPSQLDMONAMES LPWSQLDMONAMES
#define ISQLDMONames IWSQLDMONames
#define IID_ISQLDMONames IID_IWSQLDMONames

#undef LPSQLDMONAMELIST
#undef ISQLDMONameList
#undef IID_ISQLDMONameList
interface IWSQLDMONameList;             TYPEDEFINTERFACE IWSQLDMONameList *                             LPWSQLDMONAMELIST;
#define LPSQLDMONAMELIST LPWSQLDMONAMELIST
#define ISQLDMONameList IWSQLDMONameList
#define IID_ISQLDMONameList IID_IWSQLDMONameList

#undef LPSQLDMOPERMISSION
#undef ISQLDMOPermission
#undef IID_ISQLDMOPermission
interface IWSQLDMOPermission;           TYPEDEFINTERFACE IWSQLDMOPermission *                           LPWSQLDMOPERMISSION;
#define LPSQLDMOPERMISSION LPWSQLDMOPERMISSION
#define ISQLDMOPermission IWSQLDMOPermission
#define IID_ISQLDMOPermission IID_IWSQLDMOPermission

#undef LPSQLDMOINTEGRATEDSECURITY
#undef ISQLDMOIntegratedSecurity
#undef IID_ISQLDMOIntegratedSecurity
interface IWSQLDMOIntegratedSecurity;   TYPEDEFINTERFACE IWSQLDMOIntegratedSecurity *   LPWSQLDMOINTEGRATEDSECURITY;
#define LPSQLDMOINTEGRATEDSECURITY LPWSQLDMOINTEGRATEDSECURITY
#define ISQLDMOIntegratedSecurity IWSQLDMOIntegratedSecurity
#define IID_ISQLDMOIntegratedSecurity IID_IWSQLDMOIntegratedSecurity

#undef LPSQLDMOKEYS
#undef ISQLDMOKeys
#undef IID_ISQLDMOKeys
interface IWSQLDMOKeys;                 TYPEDEFINTERFACE IWSQLDMOKeys *                                 LPWSQLDMOKEYS;
#define LPSQLDMOKEYS LPWSQLDMOKEYS
#define ISQLDMOKeys IWSQLDMOKeys
#define IID_ISQLDMOKeys IID_IWSQLDMOKeys

#undef LPSQLDMOKEY
#undef ISQLDMOKey
#undef IID_ISQLDMOKey
interface IWSQLDMOKey;                          TYPEDEFINTERFACE IWSQLDMOKey *                                  LPWSQLDMOKEY;
#define LPSQLDMOKEY LPWSQLDMOKEY
#define ISQLDMOKey IWSQLDMOKey
#define IID_ISQLDMOKey IID_IWSQLDMOKey

#undef LPSQLDMOCHECKS
#undef ISQLDMOChecks
#undef IID_ISQLDMOChecks
interface IWSQLDMOChecks;                       TYPEDEFINTERFACE IWSQLDMOChecks *                                       LPWSQLDMOCHECKS;
#define LPSQLDMOCHECKS LPWSQLDMOCHECKS
#define ISQLDMOChecks IWSQLDMOChecks
#define IID_ISQLDMOChecks IID_IWSQLDMOChecks

#undef LPSQLDMOCHECK
#undef ISQLDMOCheck
#undef IID_ISQLDMOCheck
interface IWSQLDMOCheck;                                TYPEDEFINTERFACE IWSQLDMOCheck *                                        LPWSQLDMOCHECK;
#define LPSQLDMOCHECK LPWSQLDMOCHECK
#define ISQLDMOCheck IWSQLDMOCheck
#define IID_ISQLDMOCheck IID_IWSQLDMOCheck

#undef LPSQLDMODRIDEFAULT
#undef ISQLDMODRIDefault
#undef IID_ISQLDMODRIDefault
interface IWSQLDMODRIDefault;                           TYPEDEFINTERFACE IWSQLDMODRIDefault *                                   LPWSQLDMODRIDEFAULT;
#define LPSQLDMODRIDEFAULT LPWSQLDMODRIDEFAULT
#define ISQLDMODRIDefault IWSQLDMODRIDefault
#define IID_ISQLDMODRIDefault IID_IWSQLDMODRIDefault

#undef LPSQLDMOSERVERGROUPS
#undef ISQLDMOServerGroups
#undef IID_ISQLDMOServerGroups
interface IWSQLDMOServerGroups;                 TYPEDEFINTERFACE IWSQLDMOServerGroups *                                 LPWSQLDMOSERVERGROUPS;
#define LPSQLDMOSERVERGROUPS LPWSQLDMOSERVERGROUPS
#define ISQLDMOServerGroups IWSQLDMOServerGroups
#define IID_ISQLDMOServerGroups IID_IWSQLDMOServerGroups

#undef LPSQLDMOSERVERGROUP
#undef ISQLDMOServerGroup
#undef IID_ISQLDMOServerGroup
interface IWSQLDMOServerGroup;                          TYPEDEFINTERFACE IWSQLDMOServerGroup *                                  LPWSQLDMOSERVERGROUP;
#define LPSQLDMOSERVERGROUP LPWSQLDMOSERVERGROUP
#define ISQLDMOServerGroup IWSQLDMOServerGroup
#define IID_ISQLDMOServerGroup IID_IWSQLDMOServerGroup

#undef LPSQLDMOREGISTEREDSERVERS
#undef ISQLDMORegisteredServers
#undef IID_ISQLDMORegisteredServers
interface IWSQLDMORegisteredServers;                    TYPEDEFINTERFACE IWSQLDMORegisteredServers *                                    LPWSQLDMOREGISTEREDSERVERS;
#define LPSQLDMOREGISTEREDSERVERS LPWSQLDMOREGISTEREDSERVERS
#define ISQLDMORegisteredServers IWSQLDMORegisteredServers
#define IID_ISQLDMORegisteredServers IID_IWSQLDMORegisteredServers

#undef LPSQLDMOREGISTEREDSERVER
#undef ISQLDMORegisteredServer
#undef IID_ISQLDMORegisteredServer
interface IWSQLDMORegisteredServer;                             TYPEDEFINTERFACE IWSQLDMORegisteredServer *                                     LPWSQLDMOREGISTEREDSERVER;
#define LPSQLDMOREGISTEREDSERVER LPWSQLDMOREGISTEREDSERVER
#define ISQLDMORegisteredServer IWSQLDMORegisteredServer
#define IID_ISQLDMORegisteredServer IID_IWSQLDMORegisteredServer

#undef LPSQLDMOTRANSFER
#undef ISQLDMOTransfer
#undef IID_ISQLDMOTransfer
interface IWSQLDMOTransfer;                                             TYPEDEFINTERFACE IWSQLDMOTransfer *                             LPWSQLDMOTRANSFER;
#define LPSQLDMOTRANSFER LPWSQLDMOTRANSFER
#define ISQLDMOTransfer IWSQLDMOTransfer
#define IID_ISQLDMOTransfer IID_IWSQLDMOTransfer

// 7.0 new objects
#undef LPSQLDMOFILEGROUPS
#undef ISQLDMOFileGroups
#undef IID_ISQLDMOFileGroups
interface IWSQLDMOFileGroups;                    TYPEDEFINTERFACE IWSQLDMOFileGroups *                                    LPWSQLDMOFILEGROUPS;
#define LPSQLDMOFILEGROUPS LPWSQLDMOFILEGROUPS
#define ISQLDMOFileGroups IWSQLDMOFileGroups
#define IID_ISQLDMOFileGroups IID_IWSQLDMOFileGroups

#undef LPSQLDMOFILEGROUP
#undef ISQLDMOFileGroup
#undef IID_ISQLDMOFileGroup
interface IWSQLDMOFileGroup;                             TYPEDEFINTERFACE IWSQLDMOFileGroup *                                     LPWSQLDMOFILEGROUP;
#define LPSQLDMOFILEGROUP LPWSQLDMOFILEGROUP
#define ISQLDMOFileGroup IWSQLDMOFileGroup
#define IID_ISQLDMOFileGroup IID_IWSQLDMOFileGroup

#undef LPSQLDMODBFILES
#undef ISQLDMODBFiles
#undef IID_ISQLDMODBFiles
interface IWSQLDMODBFiles;                    TYPEDEFINTERFACE IWSQLDMODBFiles *                                    LPWSQLDMODBFILES;
#define LPSQLDMODBFILES LPWSQLDMODBFILES
#define ISQLDMODBFiles IWSQLDMODBFiles
#define IID_ISQLDMODBFiles IID_IWSQLDMODBFiles

#undef LPSQLDMODBFILE
#undef ISQLDMODBFile
#undef IID_ISQLDMODBFile
interface IWSQLDMODBFile;                             TYPEDEFINTERFACE IWSQLDMODBFile *                                     LPWSQLDMODBFILE;
#define LPSQLDMODBFILE LPWSQLDMODBFILE
#define ISQLDMODBFile IWSQLDMODBFile
#define IID_ISQLDMODBFile IID_IWSQLDMODBFile

#undef LPSQLDMOLOGFILES
#undef ISQLDMOLogFiles
#undef IID_ISQLDMOLogFiles
interface IWSQLDMOLogFiles;                    TYPEDEFINTERFACE IWSQLDMOLogFiles *                                    LPWSQLDMOLOGFILES;
#define LPSQLDMOLOGFILES LPWSQLDMOLOGFILES
#define ISQLDMOLogFiles IWSQLDMOLogFiles
#define IID_ISQLDMOLogFiles IID_IWSQLDMOLogFiles

#undef LPSQLDMOLOGFILE
#undef ISQLDMOLogFile
#undef IID_ISQLDMOLogFile
interface IWSQLDMOLogFile;                             TYPEDEFINTERFACE IWSQLDMOLogFile *                                     LPWSQLDMOLOGFILE;
#define LPSQLDMOLOGFILE LPWSQLDMOLOGFILE
#define ISQLDMOLogFile IWSQLDMOLogFile
#define IID_ISQLDMOLogFile IID_IWSQLDMOLogFile

#undef LPSQLDMOSERVERROLES
#undef ISQLDMOServerRoles
#undef IID_ISQLDMOServerRoles
interface IWSQLDMOServerRoles;                    TYPEDEFINTERFACE IWSQLDMOServerRoles *                                    LPWSQLDMOSERVERROLES;
#define LPSQLDMOSERVERROLES LPWSQLDMOSERVERROLES
#define ISQLDMOServerRoles IWSQLDMOServerRoles
#define IID_ISQLDMOServerRoles IID_IWSQLDMOServerRoles

#undef LPSQLDMOSERVERROLE
#undef ISQLDMOServerRole
#undef IID_ISQLDMOServerRole
interface IWSQLDMOServerRole;                             TYPEDEFINTERFACE IWSQLDMOServerRole *                                     LPWSQLDMOSERVERROLE;
#define LPSQLDMOSERVERROLE LPWSQLDMOSERVERROLE
#define ISQLDMOServerRole IWSQLDMOServerRole
#define IID_ISQLDMOServerRole IID_IWSQLDMOServerRole

#undef LPSQLDMODATABASEROLES
#undef ISQLDMODatabaseRoles
#undef IID_ISQLDMODatabaseRoles
interface IWSQLDMODatabaseRoles;                    TYPEDEFINTERFACE IWSQLDMODatabaseRoles *                                    LPWSQLDMODATABASEROLES;
#define LPSQLDMODATABASEROLES LPWSQLDMODATABASEROLES
#define ISQLDMODatabaseRoles IWSQLDMODatabaseRoles
#define IID_ISQLDMODatabaseRoles IID_IWSQLDMODatabaseRoles

#undef LPSQLDMODATABASEROLE
#undef ISQLDMODatabaseRole
#undef IID_ISQLDMODatabaseRole
interface IWSQLDMODatabaseRole;                             TYPEDEFINTERFACE IWSQLDMODatabaseRole *                                     LPWSQLDMODATABASEROLE;
#define LPSQLDMODATABASEROLE LPWSQLDMODATABASEROLE
#define ISQLDMODatabaseRole IWSQLDMODatabaseRole
#define IID_ISQLDMODatabaseRole IID_IWSQLDMODatabaseRole

#undef LPSQLDMORESTORE
#undef ISQLDMORestore
#undef IID_ISQLDMORestore
interface IWSQLDMORestore;                       TYPEDEFINTERFACE IWSQLDMORestore *                                       LPWSQLDMORESTORE;
#define LPSQLDMORESTORE LPWSQLDMORESTORE
#define ISQLDMORestore IWSQLDMORestore
#define IID_ISQLDMORestore IID_IWSQLDMORestore

#undef LPSQLDMOLINKEDSERVERS
#undef ISQLDMOLinkedServers
#undef IID_ISQLDMOLinkedServers
interface IWSQLDMOLinkedServers;                TYPEDEFINTERFACE IWSQLDMOLinkedServers *                        LPWSQLDMOLINKEDSERVERS;
#define LPSQLDMOLINKEDSERVERS LPWSQLDMOLINKEDSERVERS
#define ISQLDMOLinkedServers IWSQLDMOLinkedServers
#define IID_ISQLDMOLinkedServers IID_IWSQLDMOLinkedServers

#undef LPSQLDMOLINKEDSERVER
#undef ISQLDMOLinkedServer
#undef IID_ISQLDMOLinkedServer
interface IWSQLDMOLinkedServer;         TYPEDEFINTERFACE IWSQLDMOLinkedServer *                 LPWSQLDMOLINKEDSERVER;
#define LPSQLDMOLINKEDSERVER LPWSQLDMOLINKEDSERVER
#define ISQLDMOLinkedServer IWSQLDMOLinkedServer
#define IID_ISQLDMOLinkedServer IID_IWSQLDMOLinkedServer

#undef LPSQLDMOLINKEDSERVERLOGINS
#undef ISQLDMOLinkedServerLogins
#undef IID_ISQLDMOLinkedServerLogins
interface IWSQLDMOLinkedServerLogins;                TYPEDEFINTERFACE IWSQLDMOLinkedServerLogins *                        LPWSQLDMOLINKEDSERVERLOGINS;
#define LPSQLDMOLINKEDSERVERLOGINS LPWSQLDMOLINKEDSERVERLOGINS
#define ISQLDMOLinkedServerLogins IWSQLDMOLinkedServerLogins
#define IID_ISQLDMOLinkedServerLogins IID_IWSQLDMOLinkedServerLogins

#undef LPSQLDMOLINKEDSERVERLOGIN
#undef ISQLDMOLinkedServerLOGIN
#undef IID_ISQLDMOLinkedServerLogin
interface IWSQLDMOLinkedServerLogin;         TYPEDEFINTERFACE IWSQLDMOLinkedServerLogin *                 LPWSQLDMOLINKEDSERVERLOGIN;
#define LPSQLDMOLINKEDSERVERLOGIN LPWSQLDMOLINKEDSERVERLOGIN
#define ISQLDMOLinkedServerLogin IWSQLDMOLinkedServerLogin
#define IID_ISQLDMOLinkedServerLogin IID_IWSQLDMOLinkedServerLogin

#undef LPSQLDMOFULLTEXTCATALOGS
#undef ISQLDMOFullTextCatalogs
#undef IID_ISQLDMOFullTextCatalogs
interface IWSQLDMOFullTextCatalogs;                    TYPEDEFINTERFACE IWSQLDMOFullTextCatalogs *           LPWSQLDMOFULLTEXTCATALOGS;
#define LPSQLDMOFULLTEXTCATALOGS LPWSQLDMOFULLTEXTCATALOGS
#define ISQLDMOFullTextCatalogs IWSQLDMOFullTextCatalogs
#define IID_ISQLDMOFullTextCatalogs IID_IWSQLDMOFullTextCatalogs

#undef LPSQLDMOFULLTEXTCATALOG
#undef ISQLDMOFullTextCatalog
#undef IID_ISQLDMOFullTextCatalog
interface IWSQLDMOFullTextCatalog;                     TYPEDEFINTERFACE IWSQLDMOFullTextCatalog *             LPWSQLDMOFULLTEXTCATALOG;
#define LPSQLDMOFULLTEXTCATALOG LPWSQLDMOFULLTEXTCATALOG
#define ISQLDMOFullTextCatalog IWSQLDMOFullTextCatalog
#define IID_ISQLDMOFullTextCatalog IID_IWSQLDMOFullTextCatalog

#undef LPSQLDMOFULLTEXTSERVICE
#undef ISQLDMOFullTextService
#undef IID_ISQLDMOFullTextService
interface IWSQLDMOFullTextService;                     TYPEDEFINTERFACE IWSQLDMOFullTextService *             LPWSQLDMOFULLTEXTSERVICE;
#define LPSQLDMOFULLTEXTSERVICE LPWSQLDMOFULLTEXTSERVICE
#define ISQLDMOFullTextService IWSQLDMOFullTextService
#define IID_ISQLDMOFullTextService IID_IWSQLDMOFullTextService


////////////////////////////////////////////////////////////////////////////////////////
// Event Sink Interfaces
////////////////////////////////////////////////////////////////////////////////////////
#undef LPSQLDMOTRANSFERSINK
#undef ISQLDMOTransferSink
#undef IID_ISQLDMOTransferSink
interface IWSQLDMOTransferSink;                                         TYPEDEFINTERFACE IWSQLDMOTransferSink *                         LPWSQLDMOTRANSFERSINK;
#define LPSQLDMOTRANSFERSINK LPWSQLDMOTRANSFERSINK
#define ISQLDMOTransferSink IWSQLDMOTransferSink
#define IID_ISQLDMOTransferSink IID_IWSQLDMOTransferSink

#undef LPSQLDMOSERVERSINK
#undef ISQLDMOServerSink
#undef IID_ISQLDMOServerSink
interface IWSQLDMOServerSink;                                           TYPEDEFINTERFACE IWSQLDMOServerSink *                           LPWSQLDMOSERVERSINK;
#define LPSQLDMOSERVERSINK LPWSQLDMOSERVERSINK
#define ISQLDMOServerSink IWSQLDMOServerSink
#define IID_ISQLDMOServerSink IID_IWSQLDMOServerSink

#undef LPSQLDMOBACKUPSINK
#undef ISQLDMOBackupSink
#undef IID_ISQLDMOBackupSink
interface IWSQLDMOBackupSink;                                           TYPEDEFINTERFACE IWSQLDMOBackupSink *                           LPWSQLDMOBACKUPSINK;
#define LPSQLDMOBACKUPSINK LPWSQLDMOBACKUPSINK
#define ISQLDMOBackupSink IWSQLDMOBackupSink
#define IID_ISQLDMOBackupSink IID_IWSQLDMOBackupSink

#undef LPSQLDMOBULKCOPYSINK
#undef ISQLDMOBulkCopySink
#undef IID_ISQLDMOBulkCopySink
interface IWSQLDMOBulkCopySink;                                         TYPEDEFINTERFACE IWSQLDMOBulkCopySink *                         LPWSQLDMOBULKCOPYSINK;
#define LPSQLDMOBULKCOPYSINK LPWSQLDMOBULKCOPYSINK
#define ISQLDMOBulkCopySink IWSQLDMOBulkCopySink
#define IID_ISQLDMOBulkCopySink IID_IWSQLDMOBulkCopySink

// 7.0 new sink objects
#undef LPSQLDMORESTORESINK
#undef ISQLDMORestoreSink
#undef IID_ISQLDMORestoreSink
interface IWSQLDMORestoreSink;                                           TYPEDEFINTERFACE IWSQLDMORestoreSink *                           LPWSQLDMORESTORESINK;
#define LPSQLDMORESTORESINK LPWSQLDMORESTORESINK
#define ISQLDMORestoreSink IWSQLDMORestoreSink
#define IID_ISQLDMORestoreSink IID_IWSQLDMORestoreSink

// Auto-documenting names for these... They return an LPSQLDMOOBJECTLIST
// of the specified <objecttype>LIST objects.. e.g. LPSQLDMOCOLUMNLIST
// returns a list of LPSQLDMOCOLUMN objects.
#undef LPSQLDMODBOBJECTLIST
#define LPSQLDMODBOBJECTLIST LPSQLDMOOBJECTLIST
#define LPWSQLDMODBOBJECTLIST LPWSQLDMOOBJECTLIST
#define LPASQLDMODBOBJECTLIST LPASQLDMOOBJECTLIST
#undef LPSQLDMOPERMISSIONLIST
#define LPSQLDMOPERMISSIONLIST LPSQLDMOOBJECTLIST
#define LPWSQLDMOPERMISSIONLIST LPWSQLDMOOBJECTLIST
#define LPASQLDMOPERMISSIONLIST LPASQLDMOOBJECTLIST
#undef LPSQLDMOCONFIGVALUELIST
#define LPSQLDMOCONFIGVALUELIST LPSQLDMOOBJECTLIST
#define LPWSQLDMOCONFIGVALUELIST LPWSQLDMOOBJECTLIST
#define LPASQLDMOCONFIGVALUELIST LPASQLDMOOBJECTLIST
#undef LPSQLDMOBACKUPDEVICELIST
#define LPSQLDMOBACKUPDEVICELIST LPSQLDMOOBJECTLIST
#define LPWSQLDMOBACKUPDEVICELIST LPWSQLDMOOBJECTLIST
#define LPASQLDMOBACKUPDEVICELIST LPASQLDMOOBJECTLIST
#undef LPSQLDMOCOLUMNLIST
#define LPSQLDMOCOLUMNLIST LPSQLDMOOBJECTLIST
#define LPWSQLDMOCOLUMNLIST LPWSQLDMOOBJECTLIST
#define LPASQLDMOCOLUMNLIST LPASQLDMOOBJECTLIST
#undef LPSQLDMOUSERDEFINEDDATATYPELIST
#define LPSQLDMOUSERDEFINEDDATATYPELIST LPSQLDMOOBJECTLIST
#define LPWSQLDMOUSERDEFINEDDATATYPELIST LPWSQLDMOOBJECTLIST
#define LPASQLDMOUSERDEFINEDDATATYPELIST LPASQLDMOOBJECTLIST
#undef LPSQLDMOSTOREDPROCEDURELIST
#define LPSQLDMOSTOREDPROCEDURELIST LPSQLDMOOBJECTLIST
#define LPWSQLDMOSTOREDPROCEDURELIST LPWSQLDMOOBJECTLIST
#define LPASQLDMOSTOREDPROCEDURELIST LPASQLDMOOBJECTLIST
#undef LPSQLDMOLOGINLIST
#define LPSQLDMOLOGINLIST LPSQLDMOOBJECTLIST
#define LPWSQLDMOLOGINLIST LPWSQLDMOOBJECTLIST
#define LPASQLDMOLOGINLIST LPASQLDMOOBJECTLIST
#undef LPSQLDMOUSERLIST
#define LPSQLDMOUSERLIST LPSQLDMOOBJECTLIST
#define LPWSQLDMOUSERLIST LPWSQLDMOOBJECTLIST
#define LPASQLDMOUSERLIST LPASQLDMOOBJECTLIST
#undef LPSQLDMODATABASELIST
#define LPSQLDMODATABASELIST LPSQLDMOOBJECTLIST
#define LPWSQLDMODATABASELIST LPWSQLDMOOBJECTLIST
#define LPASQLDMODATABASELIST LPASQLDMOOBJECTLIST
#undef LPSQLDMOKEYLIST
#define LPSQLDMOKEYLIST LPSQLDMOOBJECTLIST
#define LPWSQLDMOKEYLIST LPWSQLDMOOBJECTLIST
#define LPASQLDMOKEYLIST LPASQLDMOOBJECTLIST






#undef LPSQLDMOTRANSPUBLICATIONS
#undef ISQLDMOTransPublications
#undef IID_ISQLDMOTransPublications
interface IWSQLDMOTransPublications;			TYPEDEFINTERFACE IWSQLDMOTransPublications *					LPWSQLDMOTRANSPUBLICATIONS;
#define LPSQLDMOTRANSPUBLICATIONS LPWSQLDMOTRANSPUBLICATIONS
#define ISQLDMOTransPublications IWSQLDMOTransPublications
#define IID_ISQLDMOTransPublications IID_IWSQLDMOTransPublications

#undef LPSQLDMOTRANSPUBLICATION
#undef ISQLDMOTransPublication
#undef IID_ISQLDMOTransPublication
interface IWSQLDMOTransPublication;				TYPEDEFINTERFACE IWSQLDMOTransPublication *					LPWSQLDMOTRANSPUBLICATION;
#define LPSQLDMOTRANSPUBLICATION LPWSQLDMOTRANSPUBLICATION
#define ISQLDMOTransPublication IWSQLDMOTransPublication
#define IID_ISQLDMOTransPublication IID_IWSQLDMOTransPublication

#undef LPSQLDMOTRANSARTICLES
#undef ISQLDMOTransArticles
#undef IID_ISQLDMOTransArticles
interface IWSQLDMOTransArticles;			TYPEDEFINTERFACE IWSQLDMOTransArticles *					LPWSQLDMOTRANSARTICLES;
#define LPSQLDMOTRANSARTICLES LPWSQLDMOTRANSARTICLES
#define ISQLDMOTransArticles IWSQLDMOTransArticles
#define IID_ISQLDMOTransArticles IID_IWSQLDMOTransArticles

#undef LPSQLDMOTRANSARTICLE
#undef ISQLDMOTransArticle
#undef IID_ISQLDMOTransArticle
interface IWSQLDMOTransArticle;				TYPEDEFINTERFACE IWSQLDMOTransArticle *					LPWSQLDMOTRANSARTICLE;
#define LPSQLDMOTRANSARTICLE LPWSQLDMOTRANSARTICLE
#define ISQLDMOTransArticle IWSQLDMOTransArticle
#define IID_ISQLDMOTransArticle IID_IWSQLDMOTransArticle

#undef LPSQLDMOTRANSSUBSCRIPTIONS
#undef ISQLDMOTransSubscriptions
#undef IID_ISQLDMOTransSubscriptions
interface IWSQLDMOTransSubscriptions;			TYPEDEFINTERFACE IWSQLDMOTransSubscriptions *					LPWSQLDMOTRANSSUBSCRIPTIONS;
#define LPSQLDMOTRANSSUBSCRIPTIONS LPWSQLDMOTRANSSUBSCRIPTIONS
#define ISQLDMOTransSubscriptions IWSQLDMOTransSubscriptions
#define IID_ISQLDMOTransSubscriptions IID_IWSQLDMOTransSubscriptions

#undef LPSQLDMOTRANSSUBSCRIPTION
#undef ISQLDMOTransSubscription
#undef IID_ISQLDMOTransSubscription
interface IWSQLDMOTransSubscription;				TYPEDEFINTERFACE IWSQLDMOTransSubscription *					LPWSQLDMOTRANSSUBSCRIPTION;
#define LPSQLDMOTRANSSUBSCRIPTION LPWSQLDMOTRANSSUBSCRIPTION
#define ISQLDMOTransSubscription IWSQLDMOTransSubscription
#define IID_ISQLDMOTransSubscription IID_IWSQLDMOTransSubscription

#undef LPSQLDMOTRANSPULLSUBSCRIPTIONS
#undef ISQLDMOTransPullSubscriptions
#undef IID_ISQLDMOTransPullSubscriptions
interface IWSQLDMOTransPullSubscriptions;			TYPEDEFINTERFACE IWSQLDMOTransPullSubscriptions *					LPWSQLDMOTRANSPULLSUBSCRIPTIONS;
#define LPSQLDMOTRANSPULLSUBSCRIPTIONS LPWSQLDMOTRANSPULLSUBSCRIPTIONS
#define ISQLDMOTransPullSubscriptions IWSQLDMOTransPullSubscriptions
#define IID_ISQLDMOTransPullSubscriptions IID_IWSQLDMOTransPullSubscriptions

#undef LPSQLDMOTRANSPULLSUBSCRIPTION
#undef ISQLDMOTransPullSubscription
#undef IID_ISQLDMOTransPullSubscription
interface IWSQLDMOTransPullSubscription;				TYPEDEFINTERFACE IWSQLDMOTransPullSubscription *					LPWSQLDMOTRANSPULLSUBSCRIPTION;
#define LPSQLDMOTRANSPULLSUBSCRIPTION LPWSQLDMOTRANSPULLSUBSCRIPTION
#define ISQLDMOTransPullSubscription IWSQLDMOTransPullSubscription
#define IID_ISQLDMOTransPullSubscription IID_IWSQLDMOTransPullSubscription

#undef LPSQLDMOMERGEPUBLICATIONS
#undef ISQLDMOMergePublications
#undef IID_ISQLDMOMergePublications
interface IWSQLDMOMergePublications;			TYPEDEFINTERFACE IWSQLDMOMergePublications *					LPWSQLDMOMERGEPUBLICATIONS;
#define LPSQLDMOMERGEPUBLICATIONS LPWSQLDMOMERGEPUBLICATIONS
#define ISQLDMOMergePublications IWSQLDMOMergePublications
#define IID_ISQLDMOMergePublications IID_IWSQLDMOMergePublications

#undef LPSQLDMOMERGEPUBLICATION
#undef ISQLDMOMergePublication
#undef IID_ISQLDMOMergePublication
interface IWSQLDMOMergePublication;				TYPEDEFINTERFACE IWSQLDMOMergePublication *					LPWSQLDMOMERGEPUBLICATION;
#define LPSQLDMOMERGEPUBLICATION LPWSQLDMOMERGEPUBLICATION
#define ISQLDMOMergePublication IWSQLDMOMergePublication
#define IID_ISQLDMOMergePublication IID_IWSQLDMOMergePublication

#undef LPSQLDMOMERGEARTICLES
#undef ISQLDMOMergeArticles
#undef IID_ISQLDMOMergeArticles
interface IWSQLDMOMergeArticles;			TYPEDEFINTERFACE IWSQLDMOMergeArticles *					LPWSQLDMOMERGEARTICLES;
#define LPSQLDMOMERGEARTICLES LPWSQLDMOMERGEARTICLES
#define ISQLDMOMergeArticles IWSQLDMOMergeArticles
#define IID_ISQLDMOMergeArticles IID_IWSQLDMOMergeArticles

#undef LPSQLDMOMERGEARTICLE
#undef ISQLDMOMergeArticle
#undef IID_ISQLDMOMergeArticle
interface IWSQLDMOMergeArticle;				TYPEDEFINTERFACE IWSQLDMOMergeArticle *					LPWSQLDMOMERGEARTICLE;
#define LPSQLDMOMERGEARTICLE LPWSQLDMOMERGEARTICLE
#define ISQLDMOMergeArticle IWSQLDMOMergeArticle
#define IID_ISQLDMOMergeArticle IID_IWSQLDMOMergeArticle

#undef LPSQLDMOMERGESUBSCRIPTIONS
#undef ISQLDMOMergeSubscriptions
#undef IID_ISQLDMOMergeSubscriptions
interface IWSQLDMOMergeSubscriptions;			TYPEDEFINTERFACE IWSQLDMOMergeSubscriptions *					LPWSQLDMOMERGESUBSCRIPTIONS;
#define LPSQLDMOMERGESUBSCRIPTIONS LPWSQLDMOMERGESUBSCRIPTIONS
#define ISQLDMOMergeSubscriptions IWSQLDMOMergeSubscriptions
#define IID_ISQLDMOMergeSubscriptions IID_IWSQLDMOMergeSubscriptions

#undef LPSQLDMOMERGESUBSCRIPTION
#undef ISQLDMOMergeSubscription
#undef IID_ISQLDMOMergeSubscription
interface IWSQLDMOMergeSubscription;				TYPEDEFINTERFACE IWSQLDMOMergeSubscription *					LPWSQLDMOMERGESUBSCRIPTION;
#define LPSQLDMOMERGESUBSCRIPTION LPWSQLDMOMERGESUBSCRIPTION
#define ISQLDMOMergeSubscription IWSQLDMOMergeSubscription
#define IID_ISQLDMOMergeSubscription IID_IWSQLDMOMergeSubscription

#undef LPSQLDMOMERGEPULLSUBSCRIPTIONS
#undef ISQLDMOMergePullSubscriptions
#undef IID_ISQLDMOMergePullSubscriptions
interface IWSQLDMOMergePullSubscriptions;			TYPEDEFINTERFACE IWSQLDMOMergePullSubscriptions *					LPWSQLDMOMERGEPULLSUBSCRIPTIONS;
#define LPSQLDMOMERGEPULLSUBSCRIPTIONS LPWSQLDMOMERGEPULLSUBSCRIPTIONS
#define ISQLDMOMergePullSubscriptions IWSQLDMOMergePullSubscriptions
#define IID_ISQLDMOMergePullSubscriptions IID_IWSQLDMOMergePullSubscriptions

#undef LPSQLDMOMERGEPULLSUBSCRIPTION
#undef ISQLDMOMergePullSubscription
#undef IID_ISQLDMOMergePullSubscription
interface IWSQLDMOMergePullSubscription;				TYPEDEFINTERFACE IWSQLDMOMergePullSubscription *					LPWSQLDMOMERGEPULLSUBSCRIPTION;
#define LPSQLDMOMERGEPULLSUBSCRIPTION LPWSQLDMOMERGEPULLSUBSCRIPTION
#define ISQLDMOMergePullSubscription IWSQLDMOMergePullSubscription
#define IID_ISQLDMOMergePullSubscription IID_IWSQLDMOMergePullSubscription

#undef LPSQLDMOMERGESUBSETFILTERS
#undef ISQLDMOMergeSubsetFilters
#undef IID_ISQLDMOMergeSubsetFilters
interface IWSQLDMOMergeSubsetFilters;			TYPEDEFINTERFACE IWSQLDMOMergeSubsetFilters *					LPWSQLDMOMERGESUBSETFILTERS;
#define LPSQLDMOMERGESUBSETFILTERS LPWSQLDMOMERGESUBSETFILTERS
#define ISQLDMOMergeSubsetFilters IWSQLDMOMergeSubsetFilters
#define IID_ISQLDMOMergeSubsetFilters IID_IWSQLDMOMergeSubsetFilters

#undef LPSQLDMOMERGESUBSETFILTER
#undef ISQLDMOMergeSubsetFilter
#undef IID_ISQLDMOMergeSubsetFilter
interface IWSQLDMOMergeSubsetFilter;				TYPEDEFINTERFACE IWSQLDMOMergeSubsetFilter *					LPWSQLDMOMERGESUBSETFILTER;
#define LPSQLDMOMERGESUBSETFILTER LPWSQLDMOMERGESUBSETFILTER
#define ISQLDMOMergeSubsetFilter IWSQLDMOMergeSubsetFilter
#define IID_ISQLDMOMergeSubsetFilter IID_IWSQLDMOMergeSubsetFilter

#undef LPSQLDMOREPLICATION
#undef ISQLDMOReplication
#undef IID_ISQLDMOReplication
interface IWSQLDMOReplication;				TYPEDEFINTERFACE IWSQLDMOReplication *					LPWSQLDMOREPLICATION;
#define LPSQLDMOREPLICATION LPWSQLDMOREPLICATION
#define ISQLDMOReplication IWSQLDMOReplication
#define IID_ISQLDMOReplication IID_IWSQLDMOReplication

#undef LPSQLDMOPUBLISHER
#undef ISQLDMOPublisher
#undef IID_ISQLDMOPublisher
interface IWSQLDMOPublisher;				TYPEDEFINTERFACE IWSQLDMOPublisher *					LPWSQLDMOPUBLISHER;
#define LPSQLDMOPUBLISHER LPWSQLDMOPUBLISHER
#define ISQLDMOPublisher IWSQLDMOPublisher
#define IID_ISQLDMOPublisher IID_IWSQLDMOPublisher

#undef LPSQLDMOSUBSCRIBER
#undef ISQLDMOSubscriber
#undef IID_ISQLDMOSubscriber
interface IWSQLDMOSubscriber;				TYPEDEFINTERFACE IWSQLDMOSubscriber *					LPWSQLDMOSUBSCRIBER;
#define LPSQLDMOSUBSCRIBER LPWSQLDMOSUBSCRIBER
#define ISQLDMOSubscriber IWSQLDMOSubscriber
#define IID_ISQLDMOSubscriber IID_IWSQLDMOSubscriber

#undef LPSQLDMODISTRIBUTOR
#undef ISQLDMODistributor
#undef IID_ISQLDMODistributor
interface IWSQLDMODistributor;				TYPEDEFINTERFACE IWSQLDMODistributor *					LPWSQLDMODISTRIBUTOR;
#define LPSQLDMODISTRIBUTOR LPWSQLDMODISTRIBUTOR
#define ISQLDMODistributor IWSQLDMODistributor
#define IID_ISQLDMODistributor IID_IWSQLDMODistributor

#undef LPSQLDMOREPLICATIONSECURITY
#undef ISQLDMOReplicationSecurity
#undef IID_ISQLDMOReplicationSecurity
interface IWSQLDMOReplicationSecurity;				TYPEDEFINTERFACE IWSQLDMOReplicationSecurity *					LPWSQLDMOREPLICATIONSECURITY;
#define LPSQLDMOREPLICATIONSECURITY LPWSQLDMOREPLICATIONSECURITY
#define ISQLDMOReplicationSecurity IWSQLDMOReplicationSecurity
#define IID_ISQLDMOReplicationSecurity IID_IWSQLDMOReplicationSecurity

#undef LPSQLDMOREGISTEREDSUBSCRIBER
#undef ISQLDMORegisteredSubscriber
#undef IID_ISQLDMORegisteredSubscriber
interface IWSQLDMORegisteredSubscriber;				TYPEDEFINTERFACE IWSQLDMORegisteredSubscriber *					LPWSQLDMOREGISTEREDSUBSCRIBER;
#define LPSQLDMOREGISTEREDSUBSCRIBER LPWSQLDMOREGISTEREDSUBSCRIBER
#define ISQLDMORegisteredSubscriber IWSQLDMORegisteredSubscriber
#define IID_ISQLDMORegisteredSubscriber IID_IWSQLDMORegisteredSubscriber

#undef LPSQLDMOREGISTEREDSUBSCRIBERS
#undef ISQLDMORegisteredSubscribers
#undef IID_ISQLDMORegisteredSubscribers
interface IWSQLDMORegisteredSubscribers;				TYPEDEFINTERFACE IWSQLDMORegisteredSubscribers *					LPWSQLDMOREGISTEREDSUBSCRIBERS;
#define LPSQLDMOREGISTEREDSUBSCRIBERS LPWSQLDMOREGISTEREDSUBSCRIBERS
#define ISQLDMORegisteredSubscribers IWSQLDMORegisteredSubscribers
#define IID_ISQLDMORegisteredSubscribers IID_IWSQLDMORegisteredSubscribers

#undef LPSQLDMOREPLICATIONDATABASE
#undef ISQLDMOReplicationDatabase
#undef IID_ISQLDMOReplicationDatabase
interface IWSQLDMOReplicationDatabase;			TYPEDEFINTERFACE IWSQLDMOReplicationDatabase *				LPWSQLDMOREPLICATIONDATABASE;
#define LPSQLDMOREPLICATIONDATABASE LPWSQLDMOREPLICATIONDATABASE
#define ISQLDMOReplicationDatabase IWSQLDMOReplicationDatabase
#define IID_ISQLDMOReplicationDatabase IID_IWSQLDMOReplicationDatabase

#undef LPSQLDMOREPLICATIONDATABASES
#undef ISQLDMOReplicationDatabases
#undef IID_ISQLDMOReplicationDatabases
interface IWSQLDMOReplicationDatabases;			TYPEDEFINTERFACE IWSQLDMOReplicationDatabases *				LPWSQLDMOREPLICATIONDATABASES;
#define LPSQLDMOREPLICATIONDATABASES LPWSQLDMOREPLICATIONDATABASES
#define ISQLDMOReplicationDatabases IWSQLDMOReplicationDatabases
#define IID_ISQLDMOReplicationDatabases IID_IWSQLDMOReplicationDatabases

#undef LPSQLDMODISTRIBUTIONPUBLISHER
#undef ISQLDMODistributionPublisher
#undef IID_ISQLDMODistributionPublisher
interface IWSQLDMODistributionPublisher;				TYPEDEFINTERFACE IWSQLDMODistributionPublisher *					LPWSQLDMODISTRIBUTIONPUBLISHER;
#define LPSQLDMODISTRIBUTIONPUBLISHER LPWSQLDMODISTRIBUTIONPUBLISHER
#define ISQLDMODistributionPublisher IWSQLDMODistributionPublisher
#define IID_ISQLDMODistributionPublisher IID_IWSQLDMODistributionPublisher

#undef LPSQLDMODISTRIBUTIONPUBLISHERS
#undef ISQLDMODistributionPublishers
#undef IID_ISQLDMODistributionPublishers
interface IWSQLDMODistributionPublishers;				TYPEDEFINTERFACE IWSQLDMODistributionPublishers *					LPWSQLDMODISTRIBUTIONPUBLISHERS;
#define LPSQLDMODISTRIBUTIONPUBLISHERS LPWSQLDMODISTRIBUTIONPUBLISHERS
#define ISQLDMODistributionPublishers IWSQLDMODistributionPublishers
#define IID_ISQLDMODistributionPublishers IID_IWSQLDMODistributionPublishers

#undef LPSQLDMODISTRIBUTIONDATABASE
#undef ISQLDMODistributionDatabase
#undef IID_ISQLDMODistributionDatabase
interface IWSQLDMODistributionDatabase;				TYPEDEFINTERFACE IWSQLDMODistributionDatabase *					LPWSQLDMODISTRIBUTIONDATABASE;
#define LPSQLDMODISTRIBUTIONDATABASE LPWSQLDMODISTRIBUTIONDATABASE
#define ISQLDMODistributionDatabase IWSQLDMODistributionDatabase
#define IID_ISQLDMODistributionDatabase IID_IWSQLDMODistributionDatabase

#undef LPSQLDMODISTRIBUTIONDATABASES
#undef ISQLDMODistributionDatabases
#undef IID_ISQLDMODistributionDatabases
interface IWSQLDMODistributionDatabases;				TYPEDEFINTERFACE IWSQLDMODistributionDatabases *					LPWSQLDMODISTRIBUTIONDATABASES;
#define LPSQLDMODISTRIBUTIONDATABASES LPWSQLDMODISTRIBUTIONDATABASES
#define ISQLDMODistributionDatabases IWSQLDMODistributionDatabases
#define IID_ISQLDMODistributionDatabases IID_IWSQLDMODistributionDatabases


#undef LPSQLDMOREPLICATIONTABLE
#undef ISQLDMOReplicationTable
#undef IID_ISQLDMOReplicationTable
interface IWSQLDMOReplicationTable;			TYPEDEFINTERFACE IWSQLDMOReplicationTable *				LPWSQLDMOREPLICATIONTABLE;
#define LPSQLDMOREPLICATIONTABLE LPWSQLDMOREPLICATIONTABLE
#define ISQLDMOReplicationTable IWSQLDMOReplicationTable
#define IID_ISQLDMOReplicationTable IID_IWSQLDMOReplicationTable

#undef LPSQLDMOREPLICATIONTABLES
#undef ISQLDMOReplicationTables
#undef IID_ISQLDMOReplicationTables
interface IWSQLDMOReplicationTables;			TYPEDEFINTERFACE IWSQLDMOReplicationTables *				LPWSQLDMOREPLICATIONTABLES;
#define LPSQLDMOREPLICATIONTABLES LPWSQLDMOREPLICATIONTABLES
#define ISQLDMOReplicationTables IWSQLDMOReplicationTables
#define IID_ISQLDMOReplicationTables IID_IWSQLDMOReplicationTables

#undef LPSQLDMOREPLICATIONSTOREDPROCEDURE
#undef ISQLDMOReplicationStoredProcedure
#undef IID_ISQLDMOReplicationStoredProcedure
interface IWSQLDMOReplicationStoredProcedure;			TYPEDEFINTERFACE IWSQLDMOReplicationStoredProcedure *				LPWSQLDMOREPLICATIONSTOREDPROCEDURE;
#define LPSQLDMOREPLICATIONSTOREDPROCEDURE LPWSQLDMOREPLICATIONSTOREDPROCEDURE
#define ISQLDMOReplicationStoredProcedure IWSQLDMOReplicationStoredProcedure
#define IID_ISQLDMOReplicationStoredProcedure IID_IWSQLDMOReplicationStoredProcedure

#undef LPSQLDMOREPLICATIONSTOREDPROCEDURES
#undef ISQLDMOReplicationStoredProcedures
#undef IID_ISQLDMOReplicationStoredProcedures
interface IWSQLDMOReplicationStoredProcedures;			TYPEDEFINTERFACE IWSQLDMOReplicationStoredProcedures *				LPWSQLDMOREPLICATIONSTOREDPROCEDURES;
#define LPSQLDMOREPLICATIONSTOREDPROCEDURES LPWSQLDMOREPLICATIONSTOREDPROCEDURES
#define ISQLDMOReplicationStoredProcedures IWSQLDMOReplicationStoredProcedures
#define IID_ISQLDMOReplicationStoredProcedures IID_IWSQLDMOReplicationStoredProcedures

#undef LPSQLDMODISTRIBUTIONPUBLICATIONS
#undef ISQLDMODistributionPublications
#undef IID_ISQLDMODistributionPublications
interface IWSQLDMODistributionPublications;			TYPEDEFINTERFACE IWSQLDMODistributionPublications *					LPWSQLDMODISTRIBUTIONPUBLICATIONS;
#define LPSQLDMODISTRIBUTIONPUBLICATIONS LPWSQLDMODISTRIBUTIONPUBLICATIONS
#define ISQLDMODistributionPublications IWSQLDMODistributionPublications
#define IID_ISQLDMODistributionPublications IID_IWSQLDMODistributionPublications

#undef LPSQLDMODISTRIBUTIONPUBLICATION
#undef ISQLDMODistributionPublication
#undef IID_ISQLDMODistributionPublication
interface IWSQLDMODistributionPublication;				TYPEDEFINTERFACE IWSQLDMODistributionPublication *					LPWSQLDMODISTRIBUTIONPUBLICATION;
#define LPSQLDMODISTRIBUTIONPUBLICATION LPWSQLDMODISTRIBUTIONPUBLICATION
#define ISQLDMODistributionPublication IWSQLDMODistributionPublication
#define IID_ISQLDMODistributionPublication IID_IWSQLDMODistributionPublication

#undef LPSQLDMODISTRIBUTIONARTICLES
#undef ISQLDMODistributionArticles
#undef IID_ISQLDMODistributionArticles
interface IWSQLDMODistributionArticles;			TYPEDEFINTERFACE IWSQLDMODistributionArticles *					LPWSQLDMODISTRIBUTIONARTICLES;
#define LPSQLDMODISTRIBUTIONARTICLES LPWSQLDMODISTRIBUTIONARTICLES
#define ISQLDMODistributionArticles IWSQLDMODistributionArticles
#define IID_ISQLDMODistributionArticles IID_IWSQLDMODistributionArticles

#undef LPSQLDMODISTRIBUTIONARTICLE
#undef ISQLDMODistributionArticle
#undef IID_ISQLDMODistributionArticle
interface IWSQLDMODistributionArticle;				TYPEDEFINTERFACE IWSQLDMODistributionArticle *					LPWSQLDMODISTRIBUTIONARTICLE;
#define LPSQLDMODISTRIBUTIONARTICLE LPWSQLDMODISTRIBUTIONARTICLE
#define ISQLDMODistributionArticle IWSQLDMODistributionArticle
#define IID_ISQLDMODistributionArticle IID_IWSQLDMODistributionArticle

#undef LPSQLDMODISTRIBUTIONSUBSCRIPTIONS
#undef ISQLDMODistributionSubscriptions
#undef IID_ISQLDMODistributionSubscriptions
interface IWSQLDMODistributionSubscriptions;			TYPEDEFINTERFACE IWSQLDMODistributionSubscriptions *					LPWSQLDMODISTRIBUTIONSUBSCRIPTIONS;
#define LPSQLDMODISTRIBUTIONSUBSCRIPTIONS LPWSQLDMODISTRIBUTIONSUBSCRIPTIONS
#define ISQLDMODistributionSubscriptions IWSQLDMODistributionSubscriptions
#define IID_ISQLDMODistributionSubscriptions IID_IWSQLDMODistributionSubscriptions

#undef LPSQLDMODISTRIBUTIONSUBSCRIPTION
#undef ISQLDMODistributionSubscription
#undef IID_ISQLDMODistributionSubscription
interface IWSQLDMODistributionSubscription;				TYPEDEFINTERFACE IWSQLDMODistributionSubscription *					LPWSQLDMODISTRIBUTIONSUBSCRIPTION;
#define LPSQLDMODISTRIBUTIONSUBSCRIPTION LPWSQLDMODISTRIBUTIONSUBSCRIPTION
#define ISQLDMODistributionSubscription IWSQLDMODistributionSubscription
#define IID_ISQLDMODistributionSubscription IID_IWSQLDMODistributionSubscription

////////////////////////////////////////////////////////////////////////////////////////
// Event Sink Interfaces
////////////////////////////////////////////////////////////////////////////////////////
#undef LPSQLDMOREPLICATIONSINK
#undef ISQLDMOReplicationSink
#undef IID_ISQLDMOReplicationSink
interface IWSQLDMOReplicationSink;                                         TYPEDEFINTERFACE IWSQLDMOReplicationSink *                         LPWSQLDMOREPLICATIONSINK;
#define LPSQLDMOREPLICATIONSINK LPWSQLDMOREPLICATIONSINK
#define ISQLDMOReplicationSink IWSQLDMOReplicationSink
#define IID_ISQLDMOReplicationSink IID_IWSQLDMOReplicationSink











#undef LPSQLDMOALERTS
#undef ISQLDMOAlerts
#undef IID_ISQLDMOAlerts
interface IWSQLDMOAlerts;                   TYPEDEFINTERFACE IWSQLDMOAlerts *             LPWSQLDMOALERTS;
#define LPSQLDMOALERTS    LPWSQLDMOALERTS
#define ISQLDMOAlerts     IWSQLDMOAlerts
#define IID_ISQLDMOAlerts IID_IWSQLDMOAlerts

#undef LPSQLDMOALERT
#undef ISQLDMOAlert
#undef IID_ISQLDMOAlert
interface IWSQLDMOAlert;                    TYPEDEFINTERFACE IWSQLDMOAlert *              LPWSQLDMOALERT;
#define LPSQLDMOALERT    LPWSQLDMOALERT
#define ISQLDMOAlert     IWSQLDMOAlert
#define IID_ISQLDMOAlert IID_IWSQLDMOAlert

#undef LPSQLDMOOPERATORS
#undef ISQLDMOOperators
#undef IID_ISQLDMOOperators
interface IWSQLDMOOperators;                TYPEDEFINTERFACE IWSQLDMOOperators *          LPWSQLDMOOPERATORS;
#define LPSQLDMOOPERATORS    LPWSQLDMOOPERATORS
#define ISQLDMOOperators     IWSQLDMOOperators
#define IID_ISQLDMOOperators IID_IWSQLDMOOperators

#undef LPSQLDMOOPERATOR
#undef ISQLDMOOperator
#undef IID_ISQLDMOOperator
interface IWSQLDMOOperator;                 TYPEDEFINTERFACE IWSQLDMOOperator *           LPWSQLDMOOPERATOR;
#define LPSQLDMOOPERATOR    LPWSQLDMOOPERATOR
#define ISQLDMOOperator     IWSQLDMOOperator
#define IID_ISQLDMOOperator IID_IWSQLDMOOperator

#undef LPSQLDMOJOBHISTORYFILTER
#undef ISQLDMOJobHistoryFilter
#undef IID_ISQLDMOJobHistoryFilter
interface IWSQLDMOJobHistoryFilter;         TYPEDEFINTERFACE IWSQLDMOJobHistoryFilter *   LPWSQLDMOJOBHISTORYFILTER;
#define LPSQLDMOJOBHISTORYFILTER    LPWSQLDMOJOBHISTORYFILTER
#define ISQLDMOJobHistoryFilter     IWSQLDMOJobHistoryFilter
#define IID_ISQLDMOJobHistoryFilter IID_IWSQLDMOJobHistoryFilter

#undef LPSQLDMOJOBSERVER
#undef ISQLDMOJobServer
#undef IID_ISQLDMOJobServer
interface IWSQLDMOJobServer;                TYPEDEFINTERFACE IWSQLDMOJobServer *          LPWSQLDMOJOBSERVER;
#define LPSQLDMOJOBSERVER    LPWSQLDMOJOBSERVER
#define ISQLDMOJobServer     IWSQLDMOJobServer
#define IID_ISQLDMOJobServer IID_IWSQLDMOJobServer

#undef LPSQLDMOALERTSYSTEM
#undef ISQLDMOAlertSystem
#undef IID_ISQLDMOAlertSystem
interface IWSQLDMOAlertSystem;              TYPEDEFINTERFACE IWSQLDMOAlertSystem *        LPWSQLDMOALERTSYSTEM;
#define LPSQLDMOALERTSYSTEM    LPWSQLDMOALERTSYSTEM
#define ISQLDMOAlertSystem     IWSQLDMOAlertSystem
#define IID_ISQLDMOAlertSystem IID_IWSQLDMOAlertSystem

#undef LPSQLDMOJOBS
#undef ISQLDMOJobs
#undef IID_ISQLDMOJobs
interface IWSQLDMOJobs;                     TYPEDEFINTERFACE IWSQLDMOJobs *               LPWSQLDMOJOBS;
#define LPSQLDMOJOBS    LPWSQLDMOJOBS
#define ISQLDMOJobs     IWSQLDMOJobs
#define IID_ISQLDMOJobs IID_IWSQLDMOJobs

#undef LPSQLDMOJOB
#undef ISQLDMOJob
#undef IID_ISQLDMOJob
interface IWSQLDMOJob;                      TYPEDEFINTERFACE IWSQLDMOJob *                LPWSQLDMOJOB;
#define LPSQLDMOJOB    LPWSQLDMOJOB
#define ISQLDMOJob     IWSQLDMOJob
#define IID_ISQLDMOJob IID_IWSQLDMOJob

#undef LPSQLDMOJOBSTEPS
#undef ISQLDMOJobSteps
#undef IID_ISQLDMOJobSteps
interface IWSQLDMOJobSteps;                 TYPEDEFINTERFACE IWSQLDMOJobSteps *           LPWSQLDMOJOBSTEPS;
#define LPSQLDMOJOBSTEPS    LPWSQLDMOJOBSTEPS
#define ISQLDMOJobSteps     IWSQLDMOJobSteps
#define IID_ISQLDMOJobSteps IID_IWSQLDMOJobSteps

#undef LPSQLDMOJOBSTEP
#undef ISQLDMOJobStep
#undef IID_ISQLDMOJobStep
interface IWSQLDMOJobStep;                  TYPEDEFINTERFACE IWSQLDMOJobStep *            LPWSQLDMOJOBSTEP;
#define LPSQLDMOJOBSTEP    LPWSQLDMOJOBSTEP
#define ISQLDMOJobStep     IWSQLDMOJobStep
#define IID_ISQLDMOJobStep IID_IWSQLDMOJobStep

#undef LPSQLDMOTARGETSERVERS
#undef ISQLDMOTargetServers
#undef IID_ISQLDMOTargetServers
interface IWSQLDMOTargetServers;            TYPEDEFINTERFACE IWSQLDMOTargetServers *      LPWSQLDMOTARGETSERVERS;
#define LPSQLDMOTARGETSERVERS    LPWSQLDMOTARGETSERVERS
#define ISQLDMOTargetServers     IWSQLDMOTargetServers
#define IID_ISQLDMOTargetServers IID_IWSQLDMOTargetServers

#undef LPSQLDMOTARGETSERVER
#undef ISQLDMOTargetServer
#undef IID_ISQLDMOTargetServer
interface IWSQLDMOTargetServer;             TYPEDEFINTERFACE IWSQLDMOTargetServer *       LPWSQLDMOTARGETSERVER;
#define LPSQLDMOTARGETSERVER    LPWSQLDMOTARGETSERVER
#define ISQLDMOTargetServer     IWSQLDMOTargetServer
#define IID_ISQLDMOTargetServer IID_IWSQLDMOTargetServer

#undef LPSQLDMOTARGETSERVERGROUPS
#undef ISQLDMOTargetServerGroups
#undef IID_ISQLDMOTargetServerGroups
interface IWSQLDMOTargetServerGroups;       TYPEDEFINTERFACE IWSQLDMOTargetServerGroups * LPWSQLDMOTARGETSERVERGROUPS;
#define LPSQLDMOTARGETSERVERGROUPS    LPWSQLDMOTARGETSERVERGROUPS
#define ISQLDMOTargetServerGroups     IWSQLDMOTargetServerGroups
#define IID_ISQLDMOTargetServerGroups IID_IWSQLDMOTargetServerGroups

#undef LPSQLDMOTARGETSERVERGROUP
#undef ISQLDMOTargetServerGroup
#undef IID_ISQLDMOTargetServerGroup
interface IWSQLDMOTargetServerGroup;        TYPEDEFINTERFACE IWSQLDMOTargetServerGroup *  LPWSQLDMOTARGETSERVERGROUP;
#define LPSQLDMOTARGETSERVERGROUP    LPWSQLDMOTARGETSERVERGROUP
#define ISQLDMOTargetServerGroup     IWSQLDMOTargetServerGroup
#define IID_ISQLDMOTargetServerGroup IID_IWSQLDMOTargetServerGroup

#undef LPSQLDMOJOBCATEGORIES
#undef ISQLDMOJobCategories
#undef IID_ISQLDMOJobCategories
interface IWSQLDMOJobCategories;            TYPEDEFINTERFACE IWSQLDMOJobCategories *      LPWSQLDMOJOBCATEGORIES;
#define LPSQLDMOJOBCATEGORIES    LPWSQLDMOJOBCATEGORIES
#define ISQLDMOJobCategories     IWSQLDMOJobCategories
#define IID_ISQLDMOJobCategories IID_IWSQLDMOJobCategories

#undef LPSQLDMOALERTCATEGORIES
#undef ISQLDMOAlertCategories
#undef IID_ISQLDMOAlertCategories
interface IWSQLDMOAlertCategories;            TYPEDEFINTERFACE IWSQLDMOAlertCategories *      LPWSQLDMOALERTCATEGORIES;
#define LPSQLDMOALERTCATEGORIES    LPWSQLDMOALERTCATEGORIES
#define ISQLDMOAlertCategories     IWSQLDMOAlertCategories
#define IID_ISQLDMOAlertCategories IID_IWSQLDMOAlertCategories

#undef LPSQLDMOOPERATORCATEGORIES
#undef ISQLDMOOperatorCategories
#undef IID_ISQLDMOOperatorCategories
interface IWSQLDMOOperatorCategories;            TYPEDEFINTERFACE IWSQLDMOOperatorCategories *      LPWSQLDMOOPERATORCATEGORIES;
#define LPSQLDMOOPERATORCATEGORIES    LPWSQLDMOOPERATORCATEGORIES
#define ISQLDMOOperatorCategories     IWSQLDMOOperatorCategories
#define IID_ISQLDMOOperatorCategories IID_IWSQLDMOOperatorCategories

#undef LPSQLDMOCATEGORY
#undef ISQLDMOCategory
#undef IID_ISQLDMOCategory
interface IWSQLDMOCategory;              TYPEDEFINTERFACE IWSQLDMOCategory *        LPWSQLDMOCATEGORY;
#define LPSQLDMOCATEGORY    LPWSQLDMOCATEGORY
#define ISQLDMOCategory     IWSQLDMOCategory
#define IID_ISQLDMOCategory IID_IWSQLDMOCategory

#undef LPSQLDMOSCHEDULE
#undef ISQLDMOSchedule
#undef IID_ISQLDMOSchedule
interface IWSQLDMOSchedule;                 TYPEDEFINTERFACE IWSQLDMOSchedule *           LPWSQLDMOSCHEDULE;
#define LPSQLDMOSCHEDULE    LPWSQLDMOSCHEDULE
#define ISQLDMOSchedule     IWSQLDMOSchedule
#define IID_ISQLDMOSchedule IID_IWSQLDMOSchedule

#undef LPSQLDMOJOBFILTER
#undef ISQLDMOJobFilter
#undef IID_ISQLDMOJobFilter
interface IWSQLDMOJobFilter;                TYPEDEFINTERFACE IWSQLDMOJobFilter *          LPWSQLDMOJOBFILTER;
#define LPSQLDMOJOBFILTER    LPWSQLDMOJOBFILTER
#define ISQLDMOJobFilter     IWSQLDMOJobFilter
#define IID_ISQLDMOJobFilter IID_IWSQLDMOJobFilter

#undef LPSQLDMOJOBSCHEDULES
#undef ISQLDMOJobSchedules
#undef IID_ISQLDMOJobSchedules
interface IWSQLDMOJobSchedules;             TYPEDEFINTERFACE IWSQLDMOJobSchedules *       LPWSQLDMOJOBSCHEDULES;
#define LPSQLDMOJOBSCHEDULES    LPWSQLDMOJOBSCHEDULES
#define ISQLDMOJobSchedules     IWSQLDMOJobSchedules
#define IID_ISQLDMOJobSchedules IID_IWSQLDMOJobSchedules

#undef LPSQLDMOJOBSCHEDULE
#undef ISQLDMOJobSchedule
#undef IID_ISQLDMOJobSchedule
interface IWSQLDMOJobSchedule;              TYPEDEFINTERFACE IWSQLDMOJobSchedule *        LPWSQLDMOJOBSCHEDULE;
#define LPSQLDMOJOBSCHEDULE    LPWSQLDMOJOBSCHEDULE
#define ISQLDMOJobSchedule     IWSQLDMOJobSchedule
#define IID_ISQLDMOJobSchedule IID_IWSQLDMOJobSchedule

// Auto-documenting names for these... They return an LPSQLDMOOBJECTLIST
// of the specified <objecttype>LIST objects.. e.g. LPSQLDMOCOLUMNLIST
// returns a list of LPSQLDMOCOLUMN objects.

#define SQLDMOCategory_UseDefault    TEXT("[DEFAULT]")
#define SQLDMOTargetServer_Local     TEXT("(local)")
#define SQLDMOAlert_NoJob            TEXT("00000000000000000000000000000000")





////////////////////////////
// Interface definitions.
////////////////////////////

// This is the base class for all SQLDMO objects.  It is never instantiated by itself.
// The members must be copied into all derived classes so that C clients can reference
// them, since the DECLARE_INTERFACE_ macro doesn't provide inheritance in C.  The
// undef/def of INTERFACE is likewise required for C programmers.
#undef INTERFACE
#define INTERFACE ISQLDMOStdObject
DECLARE_INTERFACE_(INTERFACE, IUnknown)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;
};

#ifdef __cplusplus
#ifndef CTEMPOLEREF_DEFINED
#define CTEMPOLEREF_DEFINED
// This is a utility class that takes an IUnknown-derived pointer as input and automatically
// Release()s it in dtor.  Use this as a stack variable which will hold objects and
// Release() them when they go out of scope; useful if multiple exit points.
template < class OLEPTR> class CTempOLERef {
	OLEPTR m_oleptr;

	// Private copy operators -- we don't want these used due to refcounting issues.
	// Since they can't therefore be called, no need to assign a body.
	CTempOLERef(const CTempOLERef<OLEPTR>& Src);
	OLEPTR  operator = (const CTempOLERef<OLEPTR>& Src);

public:
	CTempOLERef() {m_oleptr = NULL;}
	CTempOLERef(OLEPTR pIn) {m_oleptr = pIn;}
	~CTempOLERef() {if (m_oleptr) m_oleptr->Release();}
	OLEPTR p() {return m_oleptr;}				// Alternative to casting (better for cut 'n paste).

	operator OLEPTR () {return m_oleptr;}		// Return the input pointer on a cast
	operator LPUNKNOWN () {return m_oleptr;}
	operator void *() {return (void *)m_oleptr;}
	operator BOOL () {return m_oleptr ? TRUE : FALSE;}
	OLEPTR  operator = (OLEPTR pIn) {if (m_oleptr) m_oleptr->Release(); return m_oleptr = pIn;}
	OLEPTR * operator & () {return &m_oleptr;}	// Overload address-of operator
	BOOL operator ! () {return m_oleptr ? FALSE : TRUE;}
	OLEPTR operator -> () {return m_oleptr;}	// Pass operator-> thru to m_oleptr; allows tempxxxRef->xxxSpecificMember();

	// Apps should not Release() this object directly as it is intended to do so as it goes out of scope,
	// hence as a safety feature to avoid double-Release() clear the pointer if it's called directly.
	void Release() {if (m_oleptr) m_oleptr->Release(); m_oleptr = NULL;}
};

// Similar to above, for use with SQLDMO_BSTR's
class CTempBSTR {
	SQLDMO_BSTR m_bstr;

	// Private copy operators -- we don't want these used due to refcounting issues.
	// Since they can't therefore be called, no need to assign a body.
	CTempBSTR(const CTempBSTR& Src);
	SQLDMO_BSTR  operator = (const CTempBSTR& Src);

public:
	CTempBSTR() {m_bstr = NULL;}
	CTempBSTR(SQLDMO_BSTR bstrIn) {m_bstr = bstrIn;}
	~CTempBSTR() {Free();}
	void Free() {if (m_bstr) {SQLDMOFreeString(m_bstr); m_bstr = NULL;}}
	SQLDMO_BSTR b() {return m_bstr;}

	operator SQLDMO_LPCSTR () {return (SQLDMO_LPCSTR)m_bstr;}
	operator void *() {return (void *)m_bstr;}
	SQLDMO_BSTR operator = (SQLDMO_BSTR bstrIn) {Free(); return m_bstr = bstrIn;}
	SQLDMO_BSTR * operator & () {return &m_bstr;}		// Overload address-of operator
	BOOL operator ! () {return m_bstr ? FALSE : TRUE;}
};

#endif  // CTEMPOLEREF_DEFINED
#endif	// __cplusplus





////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

// Generic enumerator object.
#undef INTERFACE
#define INTERFACE ISQLDMOObjectList
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties.  The object returned must be
    //*** cast to the appropriate object type; the type to cast to is indicated
    //*** by the LPSQLDMO<objecttype>LIST typedef of the returned list object.
    //*** e.g. LPSQLDMOCOLUMNLIST returns a list of objects which cast to LPSQLDMOCOLUMN.
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOSTDOBJECT *ppObject) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOSTDOBJECT *ppObject) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;
        STDMETHOD(Refresh)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

// Names collection object (LPSQLDMONAMES).
#undef INTERFACE
#define INTERFACE ISQLDMONames
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, SQLDMO_LPBSTR pRetVal) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS) PURE;
        STDMETHOD(InsertByOrd)(THIS_ SQLDMO_LPCSTR szName, long lOrdinal) PURE;
        STDMETHOD(InsertByName)(THIS_ SQLDMO_LPCSTR szName, SQLDMO_LPCSTR szBeforeName) PURE;
        STDMETHOD(ReplaceByOrd)(THIS_ SQLDMO_LPCSTR szName, long lOrdinal) PURE;
        STDMETHOD(ReplaceByName)(THIS_ SQLDMO_LPCSTR szName, SQLDMO_LPCSTR szReplaceName) PURE;
        STDMETHOD(FindName)(THIS_ SQLDMO_LPCSTR szName, LPLONG pRetVal) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

// Names enumerator object (LPSQLDMONAMELIST).
#undef INTERFACE
#define INTERFACE ISQLDMONameList
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, SQLDMO_LPBSTR pRetVal) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Refresh)(THIS) PURE;
        STDMETHOD(FindName)(THIS_ SQLDMO_LPCSTR szName, LPLONG pRetVal) PURE;

};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOApplication
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(GetFullName)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(GetODBCVersionString)(THIS_ SQLDMO_LPBSTR pbstrVersion) PURE;
    STDMETHOD(GetVersionMajor)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetVersionMinor)(THIS_ LPLONG pRetVal) PURE;

        // Collection properties
    STDMETHOD(GetSQLServers)(THIS_ LPSQLDMOSERVERS *pServers) PURE;
    STDMETHOD(GetSQLServerByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOSERVER *ppSQLServer) PURE;
    STDMETHOD(GetSQLServerByOrd)(THIS_ long lOrdinal, LPSQLDMOSERVER *ppSQLServer) PURE;
    STDMETHOD(RemoveSQLServerByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveSQLServerByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddSQLServer)(THIS_ LPSQLDMOSERVER pSQLServer) PURE;
    STDMETHOD(GetSQLServerCount)(THIS_ LPLONG plCount) PURE;

        //*** methods
    STDMETHOD(Quit)(THIS) PURE;

   // Post-6.0 additions.
    STDMETHOD(GetGroupRegistrationServer)(THIS_ SQLDMO_LPBSTR pbstrVersion) PURE;
    STDMETHOD(SetGroupRegistrationServer)(THIS_ SQLDMO_LPCSTR pbstrVersion) PURE;
    STDMETHOD(GetGroupRegistrationVersion)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetUseCurrentUserServerGroups)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetUseCurrentUserServerGroups)(THIS_ BOOL pRetVal) PURE;
    STDMETHOD(GetVersionBuild)(THIS_ LPLONG pRetVal) PURE;

    STDMETHOD(GetServerGroups)(THIS_ LPSQLDMOSERVERGROUPS *ppServerGroups) PURE;
    STDMETHOD(GetServerGroupByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOSERVERGROUP *ppServerGroup) PURE;
    STDMETHOD(GetServerGroupByOrd)(THIS_ long lOrdinal, LPSQLDMOSERVERGROUP *ppServerGroup) PURE;
    STDMETHOD(RemoveServerGroupByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveServerGroupByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddServerGroup)(THIS_ LPSQLDMOSERVERGROUP pServerGroup) PURE;
    STDMETHOD(GetServerGroupCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(ListAvailableSQLServers)(THIS_ LPSQLDMONAMELIST *ppServerNames) PURE;

        // Post-6.5
    STDMETHOD(GetBlockingTimeout)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetBlockingTimeout)(THIS_ long NewValue) PURE;

};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOServers
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOSERVER *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOSERVER *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOSERVER *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOServer
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetApplicationName)(THIS_ SQLDMO_LPBSTR pbstrAppName) PURE;
    STDMETHOD(SetApplicationName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetConnectionID)(THIS_ LPLONG plConnectionID) PURE;
    STDMETHOD(GetHostName)(THIS_ SQLDMO_LPBSTR pbstrHostName) PURE;
    STDMETHOD(SetHostName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetLanguage)(THIS_ SQLDMO_LPBSTR pbstrLanguage) PURE;
    STDMETHOD(SetLanguage)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetLogin)(THIS_ SQLDMO_LPBSTR pbstrLogin) PURE;
    STDMETHOD(SetLogin)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetNextDeviceNumber)(THIS_ LPLONG plNextDeviceNumber) PURE;
    STDMETHOD(GetQueryTimeout)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetQueryTimeout)(THIS_ long NewValue) PURE;
    STDMETHOD(GetLoginTimeout)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetLoginTimeout)(THIS_ long NewValue) PURE;
    STDMETHOD(GetLoginSecure)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetLoginSecure)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetNetPacketSize)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetNetPacketSize)(THIS_ long NewValue) PURE;
    STDMETHOD(GetPassword)(THIS_ SQLDMO_LPBSTR pbstrPassword) PURE;
    STDMETHOD(SetPassword)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetProcessID)(THIS_ LPLONG plProcessID) PURE;
    STDMETHOD(GetStatus)(THIS_ SQLDMO_SVCSTATUS_TYPE *pStatus) PURE;
    STDMETHOD(GetUserProfile)(THIS_ SQLDMO_SRVUSERPROFILE_TYPE *pProfileBits) PURE;
    STDMETHOD(GetMaxNumericPrecision)(THIS_ LPLONG pMaxPrec) PURE;
    STDMETHOD(GetTrueLogin)(THIS_ SQLDMO_LPBSTR pbstrTrueLogin) PURE;
    STDMETHOD(GetTrueName)(THIS_ SQLDMO_LPBSTR pbstrTrueName) PURE;
    STDMETHOD(GetVersionString)(THIS_ SQLDMO_LPBSTR pbstrVersion) PURE;
    STDMETHOD(GetVersionMajor)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetVersionMinor)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetCommandTerminator)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(SetCommandTerminator)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetProcessInputBuffer)(THIS_ long lProcessID, SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetProcessOutputBuffer)(THIS_ long lProcessID, SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetAutoReConnect)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAutoReConnect)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetStatusInfoRefetchInterval)(THIS_ SQLDMO_STATUSINFO_TYPE StatusInfoType, LPLONG pRefetchSeconds) PURE;
    STDMETHOD(SetStatusInfoRefetchInterval)(THIS_ SQLDMO_STATUSINFO_TYPE StatusInfoType, long RefetchSeconds) PURE;
    STDMETHOD(GetSaLogin)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetAnsiNulls)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAnsiNulls)(THIS_ BOOL NewValue) PURE;

        //*** Object properties
    STDMETHOD(GetConfiguration)(THIS_ LPSQLDMOCONFIGURATION *ppConfig) PURE;
    STDMETHOD(GetIntegratedSecurity)(THIS_ LPSQLDMOINTEGRATEDSECURITY *ppIntSec) PURE;
    STDMETHOD(GetRegistry)(THIS_ LPSQLDMOREGISTRY *ppRegistry) PURE;
    STDMETHOD(GetJobServer)(THIS_ LPSQLDMOJOBSERVER *ppJobServer) PURE;

        //*** collection properties
    STDMETHOD(GetDatabases)(THIS_ LPSQLDMODATABASES *ppDatabases) PURE;
    STDMETHOD(GetDatabaseByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODATABASE *ppDatabase, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetDatabaseByOrd)(THIS_ long lOrdinal, LPSQLDMODATABASE *ppDatabase) PURE;
    STDMETHOD(RemoveDatabaseByName)(THIS_ SQLDMO_LPCSTR szName, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(RemoveDatabaseByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddDatabase)(THIS_ LPSQLDMODATABASE pDatabase) PURE;
    STDMETHOD(GetDatabaseCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetBackupDevices)(THIS_ LPSQLDMOBACKUPDEVICES *ppBackupDevices) PURE;
    STDMETHOD(GetBackupDeviceByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOBACKUPDEVICE *ppBackupDevice) PURE;
    STDMETHOD(GetBackupDeviceByOrd)(THIS_ long lOrdinal, LPSQLDMOBACKUPDEVICE *ppBackupDevice) PURE;
    STDMETHOD(RemoveBackupDeviceByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveBackupDeviceByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddBackupDevice)(THIS_ LPSQLDMOBACKUPDEVICE pBackupDevice) PURE;
    STDMETHOD(GetBackupDeviceCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetLogins)(THIS_ LPSQLDMOLOGINS *ppLogins) PURE;
    STDMETHOD(GetLoginByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOLOGIN *ppLogin) PURE;
    STDMETHOD(GetLoginByOrd)(THIS_ long lOrdinal, LPSQLDMOLOGIN *ppLogin) PURE;
    STDMETHOD(RemoveLoginByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveLoginByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddLogin)(THIS_ LPSQLDMOLOGIN pLogin) PURE;
    STDMETHOD(GetLoginCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetLanguages)(THIS_ LPSQLDMOLANGUAGES *ppLanguages) PURE;
    STDMETHOD(GetLanguageByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOLANGUAGE *ppLanguage) PURE;
    STDMETHOD(GetLanguageByOrd)(THIS_ long lOrdinal, LPSQLDMOLANGUAGE *ppLanguage) PURE;
    STDMETHOD(GetLanguageCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetRemoteServers)(THIS_ LPSQLDMOREMOTESERVERS *ppRemoteServers) PURE;
    STDMETHOD(GetRemoteServerByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREMOTESERVER *ppRemoteServer) PURE;
    STDMETHOD(GetRemoteServerByOrd)(THIS_ long lOrdinal, LPSQLDMOREMOTESERVER *ppRemoteServer) PURE;
    STDMETHOD(RemoveRemoteServerByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveRemoteServerByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddRemoteServer)(THIS_ LPSQLDMOREMOTESERVER pRemoteServer) PURE;
    STDMETHOD(GetRemoteServerCount)(THIS_ LPLONG plCount) PURE;

        //*** methods
    STDMETHOD(Connect)(THIS_ SQLDMO_LPCSTR szServerName CPPDEFAULT(= NULL), SQLDMO_LPCSTR szLogin CPPDEFAULT(= NULL), SQLDMO_LPCSTR szPassword CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(DisConnect)(THIS) PURE;
    STDMETHOD(ReConnect)(THIS) PURE;
    STDMETHOD(KillProcess)(THIS_ long lProcessID) PURE;
    STDMETHOD(ExecuteImmediate)(THIS_ SQLDMO_LPCSTR Command, SQLDMO_EXEC_TYPE ExecType CPPDEFAULT(= SQLDMOExec_Default), long lLength CPPDEFAULT(= 0)) PURE;
    STDMETHOD(ExecuteWithResults)(THIS_ SQLDMO_LPCSTR Command, LPSQLDMOQUERYRESULTS *ppResults, long lLength CPPDEFAULT(= 0)) PURE;
    STDMETHOD(UnloadODSDLL)(THIS_ SQLDMO_LPCSTR DLLName) PURE;
    STDMETHOD(KillDatabase)(THIS_ SQLDMO_LPCSTR DatabaseName) PURE;
    STDMETHOD(ReadErrorLog)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, long lLogNumber CPPDEFAULT(= 0)) PURE;
    STDMETHOD(EnumErrorLogs)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumProcesses)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPCSTR szWho CPPDEFAULT(= NULL), long lWho CPPDEFAULT(= -1)) PURE;
    STDMETHOD(EnumLocks)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, long lWho CPPDEFAULT(= -1)) PURE;
    STDMETHOD(ReadBackupHeader)(THIS_ LPSQLDMORESTORE LoadSpec, LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumAvailableMedia)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_MEDIA_TYPE MediaType CPPDEFAULT(= SQLDMOMedia_All)) PURE;
    STDMETHOD(EnumDirectories)(THIS_ SQLDMO_LPCSTR PathName, LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumServerAttributes)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumVersionInfo)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPCSTR szPrefixes CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(BeginTransaction)(THIS_ SQLDMO_LPCSTR szTransactionName CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(CommitTransaction)(THIS_ SQLDMO_LPCSTR TransactionName CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(SaveTransaction)(THIS_ SQLDMO_LPCSTR SavepointName) PURE;
    STDMETHOD(RollbackTransaction)(THIS_ SQLDMO_LPCSTR TransactionOrSavepointName CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(CommandShellImmediate)(THIS_ SQLDMO_LPCSTR Command) PURE;
    STDMETHOD(CommandShellWithResults)(THIS_ SQLDMO_LPCSTR Command, LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(Pause)(THIS) PURE;
    STDMETHOD(Continue)(THIS) PURE;
    STDMETHOD(Shutdown)(THIS_ BOOL Wait CPPDEFAULT(= TRUE)) PURE;
    STDMETHOD(Start)(THIS_ BOOL fConnect, SQLDMO_LPCSTR Server CPPDEFAULT(= NULL), SQLDMO_LPCSTR Login CPPDEFAULT(= NULL), SQLDMO_LPCSTR Password CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(VerifyConnection)(THIS_ LPBOOL pRetVal, SQLDMO_VERIFYCONN_TYPE VerifyType CPPDEFAULT(= SQLDMOConn_ReconnectIfDead)) PURE;
    STDMETHOD(IsOS)(THIS_ SQLDMO_OS_TYPE lType, LPBOOL pRetVal) PURE;
    STDMETHOD(AddStartParameter)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

        // List methods
    STDMETHOD(ListStartupProcedures)(THIS_ LPSQLDMOSTOREDPROCEDURELIST * ppList) PURE;

        // Post-6.0 additions
    STDMETHOD(ExecuteWithResultsAndMessages)(THIS_ SQLDMO_LPCSTR Command, LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPBSTR ppszMessages CPPDEFAULT(= 0), long lLength CPPDEFAULT(= 0)) PURE;
    STDMETHOD(GetNetName)(THIS_ SQLDMO_LPBSTR pbstrNetName) PURE;
    STDMETHOD(EnumLoginMappings)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;

    // Post-6.5 additions to object properties
    STDMETHOD(GetReplication)(THIS_ LPSQLDMOREPLICATION *ppReplication) PURE;
    STDMETHOD(GetEnableBcp)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetEnableBcp)(THIS_ BOOL NewValue) PURE;

    STDMETHOD(GetBlockingTimeout)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetBlockingTimeout)(THIS_ long NewValue) PURE;

    // 7.0 collection properties
    STDMETHOD(GetServerRoles)(THIS_ LPSQLDMOSERVERROLES *ppServerRoles) PURE;
    STDMETHOD(GetServerRoleByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOSERVERROLE *ppServerRole) PURE;
    STDMETHOD(GetServerRoleByOrd)(THIS_ long lOrdinal, LPSQLDMOSERVERROLE *ppServerRole) PURE;
    STDMETHOD(GetServerRoleCount)(THIS_ LPLONG plCount) PURE;
    STDMETHOD(EnumNTDomainGroups)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPCSTR Domain CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(EnumAccountInfo)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPCSTR Account CPPDEFAULT(= NULL), BOOL ListAll CPPDEFAULT(= FALSE)) PURE;
    STDMETHOD(ListMembers)(THIS_ SQLDMO_ROLE_TYPE Type, LPSQLDMONAMELIST *ppResults) PURE;
    STDMETHOD(IsLogin)(THIS_ SQLDMO_LPCSTR LoginName, LPBOOL pRetVal) PURE;
    STDMETHOD(Abort)(THIS) PURE;
    STDMETHOD(GetIsdbcreator)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIsdiskadmin)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIsprocessadmin)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIssecurityadmin)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIsserveradmin)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIssetupadmin)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIssysadmin)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(DetachDB)(THIS_ SQLDMO_LPCSTR DBName, SQLDMO_LPBSTR pResult, BOOL bCheck CPPDEFAULT(= TRUE)) PURE;
    STDMETHOD(AttachDB)(THIS_ SQLDMO_LPCSTR DBName, SQLDMO_LPCSTR DataFiles, SQLDMO_LPBSTR pResult) PURE;
//    STDMETHOD(RemapFile)(THIS_ SQLDMO_LPCSTR DBName, SQLDMO_LPCSTR LogicalName, SQLDMO_LPCSTR NewPhysicalPath, SQLDMO_LPBSTR pResult) PURE;
//    STDMETHOD(ClearMap)(THIS_ SQLDMO_LPBSTR pResult) PURE;
    STDMETHOD(GetQuotedIdentifier)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetQuotedIdentifier)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetLinkedServers)(THIS_ LPSQLDMOLINKEDSERVERS *ppLinkedServers) PURE;
    STDMETHOD(GetLinkedServerByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOLINKEDSERVER *ppLinkedServer) PURE;
    STDMETHOD(GetLinkedServerByOrd)(THIS_ long lOrdinal, LPSQLDMOLINKEDSERVER *ppLinkedServer) PURE;
    STDMETHOD(RemoveLinkedServerByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveLinkedServerByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddLinkedServer)(THIS_ LPSQLDMOLINKEDSERVER pLinkedServer) PURE;
    STDMETHOD(GetLinkedServerCount)(THIS_ LPLONG plCount) PURE;
    STDMETHOD(SetCodePageOverride)(THIS_ long NewValue) PURE;
    STDMETHOD(GetFullTextService)(THIS_ LPSQLDMOFULLTEXTSERVICE *ppFullTextService) PURE;
    STDMETHOD(GetODBCPrefix)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetODBCPrefix)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(Stop)(THIS) PURE;
    STDMETHOD(PingSQLServerVersion)(THIS_ SQLDMO_SQL_VER *pRetVal, SQLDMO_LPCSTR szServerName CPPDEFAULT(= NULL), SQLDMO_LPCSTR szLogin CPPDEFAULT(= NULL), SQLDMO_LPCSTR szPassword CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(IsPackage)(THIS_ SQLDMO_PACKAGE_TYPE *pRetVal) PURE;
    STDMETHOD(GetRegionalSetting)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetRegionalSetting)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCodePage)(THIS_ LPLONG plCount) PURE;
    STDMETHOD(AttachDBWithSingleFile)(THIS_ SQLDMO_LPCSTR DBName, SQLDMO_LPCSTR DataFile, SQLDMO_LPBSTR pResult) PURE;
    STDMETHOD(IsNTGroupMember)(THIS_ SQLDMO_LPCSTR NTGroup, SQLDMO_LPCSTR NTUser, LPBOOL pRetVal) PURE;
    STDMETHOD(GetServerTime)(THIS_ SQLDMO_LPBSTR pbstrServerTime) PURE;
    STDMETHOD(GetTranslateChar)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetTranslateChar)(THIS_ BOOL NewValue) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOServerSink
DECLARE_INTERFACE_(INTERFACE, IUnknown)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** Sink properties and methods.
    STDMETHOD(QueryTimeout)(THIS_ SQLDMO_LPCSTR Message, LPBOOL Continue) PURE;
    STDMETHOD(ServerMessage)(THIS_ long Severity, long MessageNumber, long MessageState, SQLDMO_LPCSTR Message) PURE;
    STDMETHOD(ConnectionBroken)(THIS_ SQLDMO_LPCSTR Message, LPBOOL Retry) PURE;
    STDMETHOD(RemoteLoginFailed)(THIS_ long Severity, long MessageNumber, long MessageState, SQLDMO_LPCSTR Message) PURE;
        STDMETHOD(CommandSent)(THIS_ SQLDMO_LPCSTR szSQL) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMORegistry
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetAutostartMail)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAutostartMail)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetAutostartServer)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAutostartServer)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCaseSensitive)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetCharacterSet)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetErrorLogPath)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetErrorLogPath)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetMailAccountName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetMailAccountName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetMailPassword)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetMailPassword)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetMasterDBPath)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetMasterDBPath)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetNTEventLogging)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetNumberOfProcessors)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetPerfMonMode)(THIS_ SQLDMO_PERFMON_TYPE *pRetVal) PURE;
    STDMETHOD(SetPerfMonMode)(THIS_ SQLDMO_PERFMON_TYPE NewValue) PURE;
    STDMETHOD(GetPhysicalMemory)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetAutostartLicensing)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAutostartLicensing)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetRegisteredOrganization)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetRegisteredOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetSortOrder)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetSQLRootPath)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSQLRootPath)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSQLDataRoot)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSQLDataRoot)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetTapeLoadWaitTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetTapeLoadWaitTime)(THIS_ long NewValue) PURE;
    STDMETHOD(GetReplicationInstalled)(THIS_ LPBOOL pRetVal) PURE;

    // 7.0
    STDMETHOD(GetAutostartDTC)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAutostartDTC)(THIS_ BOOL NewValue) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMODatabases
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMODATABASE *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODATABASE *ppObj, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMODATABASE *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMODATABASE Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMODatabase
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetOwner)(THIS_ SQLDMO_LPCSTR NewValue, BOOL bTransferAliases CPPDEFAULT(= FALSE), BOOL bOverrideIfAlreadyUser CPPDEFAULT(= FALSE)) PURE;
    STDMETHOD(GetVersion)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetCreateDate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetUserName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetUserName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSize)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetSpaceAvailable)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetSystemObject)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetUserProfile)(THIS_ SQLDMO_DBUSERPROFILE_TYPE *pProfileBits) PURE;
    STDMETHOD(GetDataSpaceUsage)(THIS_ LPFLOAT pRetVal) PURE;
    STDMETHOD(GetStatus)(THIS_ SQLDMO_DBSTATUS_TYPE *pRetVal) PURE;
    STDMETHOD(GetIndexSpaceUsage)(THIS_ LPFLOAT pRetVal) PURE;
    STDMETHOD(GetSpaceAvailableInMB)(THIS_ LPFLOAT pRetVal) PURE;
    STDMETHOD(GetCreateForAttach)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetCreateForAttach)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetDboLogin)(THIS_ LPBOOL pRetVal) PURE;

        //*** Object Properties
    STDMETHOD(GetDBOption)(THIS_ LPSQLDMODBOPTION *ppDBOption) PURE;
    STDMETHOD(GetTransactionLog)(THIS_ LPSQLDMOTRANSACTIONLOG * ppTransactionLog) PURE;

        //*** Collection properties
    STDMETHOD(GetTables)(THIS_ LPSQLDMOTABLES * ppTables) PURE;
    STDMETHOD(GetTableByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTABLE *ppTable, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetTableByOrd)(THIS_ long lOrdinal, LPSQLDMOTABLE *ppTable) PURE;
    STDMETHOD(RemoveTableByName)(THIS_ SQLDMO_LPCSTR szName, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(RemoveTableByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddTable)(THIS_ LPSQLDMOTABLE pTable) PURE;
    STDMETHOD(GetTableCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetViews)(THIS_ LPSQLDMOVIEWS * ppViews) PURE;
    STDMETHOD(GetViewByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOVIEW *ppView, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetViewByOrd)(THIS_ long lOrdinal, LPSQLDMOVIEW *ppView) PURE;
    STDMETHOD(RemoveViewByName)(THIS_ SQLDMO_LPCSTR szName, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(RemoveViewByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddView)(THIS_ LPSQLDMOVIEW pView) PURE;
    STDMETHOD(GetViewCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetStoredProcedures)(THIS_ LPSQLDMOSTOREDPROCEDURES * ppProcs) PURE;
    STDMETHOD(GetStoredProcedureByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOSTOREDPROCEDURE *ppProc, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetStoredProcedureByOrd)(THIS_ long lOrdinal, LPSQLDMOSTOREDPROCEDURE *ppProc) PURE;
    STDMETHOD(RemoveStoredProcedureByName)(THIS_ SQLDMO_LPCSTR szName, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(RemoveStoredProcedureByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddStoredProcedure)(THIS_ LPSQLDMOSTOREDPROCEDURE pProc) PURE;
    STDMETHOD(GetStoredProcedureCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetDefaults)(THIS_ LPSQLDMODEFAULTS * ppDefaults) PURE;
    STDMETHOD(GetDefaultByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODEFAULT *ppDefault, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetDefaultByOrd)(THIS_ long lOrdinal, LPSQLDMODEFAULT *ppDefault) PURE;
    STDMETHOD(RemoveDefaultByName)(THIS_ SQLDMO_LPCSTR szName, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(RemoveDefaultByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddDefault)(THIS_ LPSQLDMODEFAULT pDefault) PURE;
    STDMETHOD(GetDefaultCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetRules)(THIS_ LPSQLDMORULES * ppRules) PURE;
    STDMETHOD(GetRuleByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMORULE *ppRule, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetRuleByOrd)(THIS_ long lOrdinal, LPSQLDMORULE *ppRule) PURE;
    STDMETHOD(RemoveRuleByName)(THIS_ SQLDMO_LPCSTR szName, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(RemoveRuleByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddRule)(THIS_ LPSQLDMORULE pRule) PURE;
    STDMETHOD(GetRuleCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetUserDefinedDatatypes)(THIS_ LPSQLDMOUSERDEFINEDDATATYPES * ppUDDTs) PURE;
    STDMETHOD(GetUserDefinedDatatypeByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOUSERDEFINEDDATATYPE *ppUDDT, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetUserDefinedDatatypeByOrd)(THIS_ long lOrdinal, LPSQLDMOUSERDEFINEDDATATYPE *ppUDDT) PURE;
    STDMETHOD(RemoveUserDefinedDatatypeByName)(THIS_ SQLDMO_LPCSTR szName, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(RemoveUserDefinedDatatypeByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddUserDefinedDatatype)(THIS_ LPSQLDMOUSERDEFINEDDATATYPE pUDDT) PURE;
    STDMETHOD(GetUserDefinedDatatypeCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetUsers)(THIS_ LPSQLDMOUSERS * ppUsers) PURE;
    STDMETHOD(GetUserByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOUSER *ppUser) PURE;
    STDMETHOD(GetUserByOrd)(THIS_ long lOrdinal, LPSQLDMOUSER *ppUser) PURE;
    STDMETHOD(RemoveUserByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveUserByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddUser)(THIS_ LPSQLDMOUSER pUser) PURE;
    STDMETHOD(GetUserCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetGroups)(THIS_ LPSQLDMOGROUPS * ppGroups) PURE;
    STDMETHOD(GetGroupByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOGROUP *ppGroup) PURE;
    STDMETHOD(GetGroupByOrd)(THIS_ long lOrdinal, LPSQLDMOGROUP *ppGroup) PURE;
    STDMETHOD(RemoveGroupByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveGroupByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddGroup)(THIS_ LPSQLDMOGROUP pGroup) PURE;
    STDMETHOD(GetGroupCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetSystemDatatypes)(THIS_ LPSQLDMOSYSTEMDATATYPES * ppSDTs) PURE;
    STDMETHOD(GetSystemDatatypeByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOSYSTEMDATATYPE *ppSDT) PURE;
    STDMETHOD(GetSystemDatatypeByOrd)(THIS_ long lOrdinal, LPSQLDMOSYSTEMDATATYPE *ppSDT) PURE;
    STDMETHOD(GetSystemDatatypeCount)(THIS_ LPLONG plCount) PURE;

        //*** Methods
    STDMETHOD(Grant)(THIS_ SQLDMO_PRIVILEGE_TYPE iPrivileges, SQLDMO_LPCSTR GranteeNames) PURE;
    STDMETHOD(Revoke)(THIS_ SQLDMO_PRIVILEGE_TYPE iPrivileges, SQLDMO_LPCSTR RevokeeNames) PURE;
    STDMETHOD(ExecuteImmediate)(THIS_ SQLDMO_LPCSTR Command, SQLDMO_EXEC_TYPE ExecType CPPDEFAULT(= SQLDMOExec_Default), long lLength CPPDEFAULT(= 0)) PURE;
    STDMETHOD(ExecuteWithResults)(THIS_ SQLDMO_LPCSTR Command, LPSQLDMOQUERYRESULTS *ppResults, long lLength CPPDEFAULT(= 0)) PURE;
    STDMETHOD(Checkpoint)(THIS) PURE;
    STDMETHOD(CheckTables)(THIS_ SQLDMO_LPBSTR pResult, SQLDMO_DBCC_REPAIR_TYPE lType CPPDEFAULT(= SQLDMORepair_None)) PURE;
    STDMETHOD(CheckAllocations)(THIS_ SQLDMO_LPBSTR pResult, SQLDMO_DBCC_REPAIR_TYPE lType CPPDEFAULT(= SQLDMORepair_None)) PURE;
    STDMETHOD(CheckCatalog)(THIS_ SQLDMO_LPBSTR pResult) PURE;
    STDMETHOD(GetMemoryUsage)(THIS_ SQLDMO_LPBSTR pResult) PURE;
    STDMETHOD(EnumLocks)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, long lWho CPPDEFAULT(= -1)) PURE;
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(GetObjectByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODBOBJECT *ppDBObject, SQLDMO_OBJECT_TYPE lType CPPDEFAULT(= SQLDMOObj_AllDatabaseObjects), SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetDatatypeByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOSTDOBJECT *ppDBObject) PURE;
    STDMETHOD(EnumCandidateKeys)(THIS_ LPSQLDMOQUERYRESULTS * ppResults) PURE;
    STDMETHOD(IsValidKeyDatatype)(THIS_ SQLDMO_LPCSTR szKeyColType, LPBOOL pRetVal, SQLDMO_LPCSTR szReferencingColType CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(RecalcSpaceUsage)(THIS) PURE;
    STDMETHOD(EnumDependencies)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_DEPENDENCY_TYPE DependencyType CPPDEFAULT(= SQLDMODep_Parents)) PURE;

        //*** List methods
    STDMETHOD(ListObjectPermissions)(THIS_ LPSQLDMOPERMISSIONLIST * ppList, SQLDMO_PRIVILEGE_TYPE lPrivilegeTypes CPPDEFAULT(= SQLDMOPriv_AllObjectPrivs)) PURE;
    STDMETHOD(ListDatabasePermissions)(THIS_ LPSQLDMOPERMISSIONLIST * ppList, SQLDMO_PRIVILEGE_TYPE lPrivilegeTypes CPPDEFAULT(= SQLDMOPriv_AllDatabasePrivs)) PURE;
    STDMETHOD(ListObjects)(THIS_ LPSQLDMODBOBJECTLIST * ppList, SQLDMO_OBJECT_TYPE lObjectTypes CPPDEFAULT(= SQLDMOObj_AllDatabaseObjects), SQLDMO_OBJSORT_TYPE SortBy CPPDEFAULT(= SQLDMOObjSort_Name)) PURE;

        // Post-6.0 additions
    STDMETHOD(Transfer)(THIS_ LPSQLDMOTRANSFER TransferSpec) PURE;
    STDMETHOD(ScriptTransfer)(THIS_ LPSQLDMOTRANSFER TransferSpec, SQLDMO_XFRSCRIPTMODE_TYPE ScriptFileMode CPPDEFAULT(= SQLDMOXfrFile_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
        STDMETHOD(CheckIdentityValues)(THIS) PURE;
    STDMETHOD(ExecuteWithResultsAndMessages)(THIS_ SQLDMO_LPCSTR Command, LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPBSTR ppszMessages CPPDEFAULT(= 0), long lLength CPPDEFAULT(= 0)) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
    STDMETHOD(CheckTablesDataOnly)(THIS_ SQLDMO_LPBSTR pResult) PURE;
    STDMETHOD(CheckAllocationsDataOnly)(THIS_ SQLDMO_LPBSTR pResult) PURE;
        STDMETHOD(UpdateIndexStatistics)(THIS) PURE;
    STDMETHOD(EnumLoginMappings)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;

    // 7.0
    STDMETHOD(GetPrimaryFilePath)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetFileGroups)(THIS_ LPSQLDMOFILEGROUPS * ppFileGroups) PURE;
    STDMETHOD(GetFileGroupByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOFILEGROUP *ppFileGroup) PURE;
    STDMETHOD(GetFileGroupByOrd)(THIS_ long lOrdinal, LPSQLDMOFILEGROUP *ppFileGroup) PURE;
    STDMETHOD(RemoveFileGroupByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveFileGroupByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddFileGroup)(THIS_ LPSQLDMOFILEGROUP pFileGroup) PURE;
    STDMETHOD(GetFileGroupCount)(THIS_ LPLONG plCount) PURE;
    STDMETHOD(GetDatabaseRoles)(THIS_ LPSQLDMODATABASEROLES * ppDatabaseRoles) PURE;
    STDMETHOD(GetDatabaseRoleByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODATABASEROLE *ppDatabaseRole) PURE;
    STDMETHOD(GetDatabaseRoleByOrd)(THIS_ long lOrdinal, LPSQLDMODATABASEROLE *ppDatabaseRole) PURE;
    STDMETHOD(RemoveDatabaseRoleByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveDatabaseRoleByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddDatabaseRole)(THIS_ LPSQLDMODATABASEROLE pDatabaseRole) PURE;
    STDMETHOD(GetDatabaseRoleCount)(THIS_ LPLONG plCount) PURE;
    STDMETHOD(GetPermissions)(THIS_ SQLDMO_PRIVILEGE_TYPE *Permissions) PURE;
    STDMETHOD(EnumFiles)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumFileGroups)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumUsers)(THIS_ LPSQLDMOQUERYRESULTS * ppResults, LPCOLESTR UserName CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(EnumNTGroups)(THIS_ LPSQLDMOQUERYRESULTS * ppResults, LPCOLESTR GroupName CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(Deny)(THIS_ SQLDMO_PRIVILEGE_TYPE iPrivileges, SQLDMO_LPCSTR DenyeeNames) PURE;
    STDMETHOD(IsUser)(THIS_ SQLDMO_LPCSTR UserName, LPBOOL pRetVal) PURE;
    STDMETHOD(GetIsdb_accessadmin)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIsdb_datareader)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIsdb_ddladmin)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIsdb_denydatareader)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIsdb_denydatawriter)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIsdb_backupoperator)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIsdb_owner)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIsdb_securityadmin)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIsdb_datawriter)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GenerateSQL)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(Shrink)(THIS_ long lFreeSpaceInPercent, SQLDMO_SHRINK_TYPE Truncate) PURE;
    // Following CheckTextAllocsXXXX are for backward compatible
    STDMETHOD(CheckTextAllocsFast)(THIS_ SQLDMO_LPBSTR pResult) PURE;
    STDMETHOD(CheckTextAllocsFull)(THIS_ SQLDMO_LPBSTR pResult) PURE;
    STDMETHOD(EnumMatchingSPs)(THIS_ LPCOLESTR Text, LPSQLDMOQUERYRESULTS * ppResults, BOOL IncSys CPPDEFAULT (= FALSE)) PURE;
    STDMETHOD(EnableFullTextCatalogs)(THIS) PURE;
    STDMETHOD(RemoveFullTextCatalogs)(THIS) PURE;
    STDMETHOD(FullTextIndexScript)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetIsFullTextEnabled)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetFullTextCatalogs)(THIS_ LPSQLDMOFULLTEXTCATALOGS * ppFullTextCatalogs) PURE;
    STDMETHOD(GetFullTextCatalogByName)(THIS_ LPCOLESTR szName, LPSQLDMOFULLTEXTCATALOG *ppFullTextCatalog) PURE;
    STDMETHOD(GetFullTextCatalogByOrd)(THIS_ long lOrdinal, LPSQLDMOFULLTEXTCATALOG *ppFullTextCatalog) PURE;
    STDMETHOD(RemoveFullTextCatalogByName)(THIS_ LPCOLESTR szName) PURE;
    STDMETHOD(RemoveFullTextCatalogByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddFullTextCatalog)(THIS_ LPSQLDMOFULLTEXTCATALOG pFullTextCatalog) PURE;
    STDMETHOD(GetFullTextCatalogCount)(THIS_ LPLONG plCount) PURE;
    STDMETHOD(DisableFullTextCatalogs)(THIS) PURE;
    STDMETHOD(GetCompatibilityLevel)(THIS_ SQLDMO_COMP_LEVEL_TYPE * pRetVal) PURE;
    STDMETHOD(SetCompatibilityLevel)(THIS_ SQLDMO_COMP_LEVEL_TYPE NewValue) PURE;
    STDMETHOD(GetUseServerName)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(SetUseServerName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOBackupDevices
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOBACKUPDEVICE *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOBACKUPDEVICE *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOBACKUPDEVICE Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOBackupDevice
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPhysicalLocation)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPhysicalLocation)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetType)(THIS_ SQLDMO_DEVICE_TYPE *pRetVal) PURE;
    STDMETHOD(SetType)(THIS_ SQLDMO_DEVICE_TYPE NewValue) PURE;
    STDMETHOD(GetStatus)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetDeviceNumber)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetSkipTapeLabel)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetSkipTapeLabel)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetSystemObject)(THIS_ LPBOOL pRetVal) PURE;

        //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(ReadBackupHeader)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;

        // Post-6.0 Additions
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPCSTR NewPhysicalLocation CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;

    // 7.0
    STDMETHOD(ReadMediaHeader)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOLogins
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOLOGIN *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOLOGIN *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOLOGIN Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOLogin
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
//    STDMETHOD(GetID)(THIS_ LPLONG plID) PURE;
    STDMETHOD(GetSystemObject)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetLanguage)(THIS_ SQLDMO_LPBSTR pbstrLanguage) PURE;
    STDMETHOD(SetLanguage)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDatabase)(THIS_ SQLDMO_LPBSTR pbstrDatabase) PURE;
    STDMETHOD(SetDatabase)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

   //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
    STDMETHOD(SetPassword)(THIS_ SQLDMO_LPCSTR OldValue, SQLDMO_LPCSTR NewValue) PURE;

        // Post-6.0 additions
    STDMETHOD(EnumDatabaseMappings)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;

    // 7.0
    STDMETHOD(GetType)(THIS_ SQLDMO_LOGIN_TYPE *pRetVal) PURE;
    STDMETHOD(SetType)(THIS_ SQLDMO_LOGIN_TYPE NewValue) PURE;
    STDMETHOD(GetDenyNTLogin)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetDenyNTLogin)(THIS_ BOOL NewVal) PURE;
    STDMETHOD(ListMembers)(THIS_ LPSQLDMONAMELIST *ppList) PURE;
    STDMETHOD(IsMember)(THIS_ SQLDMO_LPCSTR ServerRole, LPBOOL pRetVal) PURE;
    STDMETHOD(GetUserName)(THIS_ SQLDMO_LPCSTR DatabaseName, SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetAliasName)(THIS_ SQLDMO_LPCSTR DatabaseName, SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetLanguageAlias)(THIS_ SQLDMO_LPBSTR pbstrLanguageAlias) PURE;
    STDMETHOD(GetNTLoginAccessType)(THIS_ SQLDMO_NTACCESS_TYPE *pRetVal) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOLanguages
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOLANGUAGE *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOLANGUAGE *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOLANGUAGE *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOLanguage
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG plID) PURE;
    STDMETHOD(GetUpgrade)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetAlias)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetAlias)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetMonths)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetShortMonths)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetDays)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetLangDateFormat)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetFirstDayOfWeek)(THIS_ LPINT pRetVal) PURE;
    STDMETHOD(GetMonth)(THIS_ int iMonth, SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetShortMonth)(THIS_ int iMonth, SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetDay)(THIS_ int iDay, SQLDMO_LPBSTR pRetVal) PURE;

   //*** methods
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOConfiguration
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetShowAdvancedOptions)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetShowAdvancedOptions)(THIS_ BOOL NewValue) PURE;

        //*** collection properties
    STDMETHOD(GetConfigValues)(THIS_ LPSQLDMOCONFIGVALUES * ppRemoteLogins) PURE;
    STDMETHOD(GetConfigValueByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOCONFIGVALUE *ppRemoteLogin) PURE;
    STDMETHOD(GetConfigValueByOrd)(THIS_ long lOrdinal, LPSQLDMOCONFIGVALUE *ppRemoteLogin) PURE;
    STDMETHOD(GetConfigValueCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetParameters)(THIS_ LPSQLDMONAMES *ppParameters) PURE;

        //*** methods
    STDMETHOD(ReconfigureCurrentValues)(THIS) PURE;
    STDMETHOD(ReconfigureWithOverride)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOConfigValues
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOCONFIGVALUE *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOCONFIGVALUE *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOCONFIGVALUE *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOConfigValue
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetMinimumValue)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetMaximumValue)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetDynamicReconfigure)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetCurrentValue)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetCurrentValue)(THIS_ long NewValue) PURE;
    STDMETHOD(GetRunningValue)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetDescription)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetID)(THIS_ SQLDMO_CONFIGVALUE_TYPE *pRetVal) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOIntegratedSecurity
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetMapUnderscore)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetMapUnderscore)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetMapDollarSign)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetMapDollarSign)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetMapPoundSign)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetMapPoundSign)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

    STDMETHOD(GetSecurityMode)(THIS_ SQLDMO_SECURITY_TYPE * pRetVal) PURE;
    STDMETHOD(SetSecurityMode)(THIS_ SQLDMO_SECURITY_TYPE NewValue) PURE;
    STDMETHOD(GetDefaultLogin)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDefaultLogin)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDefaultDomain)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDefaultDomain)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetAuditLevel)(THIS_ SQLDMO_AUDIT_TYPE * pRetVal) PURE;
    STDMETHOD(SetAuditLevel)(THIS_ SQLDMO_AUDIT_TYPE NewValue) PURE;
    STDMETHOD(GetSetHostName)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetSetHostName)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetImpersonateClient)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetImpersonateClient)(THIS_ BOOL NewValue) PURE;

   //*** methods
    STDMETHOD(Refresh)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOTables
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOTABLE *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTABLE *ppObj, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOTABLE *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOTABLE Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOTable
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG plID) PURE;
    STDMETHOD(GetOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetCreateDate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetSystemObject)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetRows)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetDataSpaceUsed)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetIndexSpaceUsed)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetAttributes)(THIS_ SQLDMO_TABLEATT_TYPE *pRetVal) PURE;
    STDMETHOD(GetPrimaryKey)(THIS_ LPSQLDMOKEY *ppPrimaryKey) PURE;
    STDMETHOD(GetClusteredIndex)(THIS_ LPSQLDMOINDEX *ppPrimaryKey) PURE;

        // Collection properties
    STDMETHOD(GetColumns)(THIS_ LPSQLDMOCOLUMNS *ppColumns) PURE;
    STDMETHOD(GetColumnByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOCOLUMN *ppColumn) PURE;
    STDMETHOD(GetColumnByOrd)(THIS_ long lOrdinal, LPSQLDMOCOLUMN *ppColumn) PURE;
    STDMETHOD(RemoveColumnByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveColumnByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddColumn)(THIS_ LPSQLDMOCOLUMN pColumn) PURE;
    STDMETHOD(GetColumnCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetKeys)(THIS_ LPSQLDMOKEYS *ppKeys) PURE;
    STDMETHOD(GetKeyByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOKEY *ppKey) PURE;
    STDMETHOD(GetKeyByOrd)(THIS_ long lOrdinal, LPSQLDMOKEY *ppKey) PURE;
    STDMETHOD(RemoveKeyByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveKeyByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddKey)(THIS_ LPSQLDMOKEY pKey) PURE;
    STDMETHOD(GetKeyCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetChecks)(THIS_ LPSQLDMOCHECKS *ppChecks) PURE;
    STDMETHOD(GetCheckByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOCHECK *ppCheck) PURE;
    STDMETHOD(GetCheckByOrd)(THIS_ long lOrdinal, LPSQLDMOCHECK *ppCheck) PURE;
    STDMETHOD(RemoveCheckByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveCheckByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddCheck)(THIS_ LPSQLDMOCHECK pCheck) PURE;
    STDMETHOD(GetCheckCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetIndexes)(THIS_ LPSQLDMOINDEXES *ppIndexes) PURE;
    STDMETHOD(GetIndexByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOINDEX *ppIndex) PURE;
    STDMETHOD(GetIndexByOrd)(THIS_ long lOrdinal, LPSQLDMOINDEX *ppIndex) PURE;
    STDMETHOD(RemoveIndexByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveIndexByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddIndex)(THIS_ LPSQLDMOINDEX pIndex) PURE;
    STDMETHOD(GetIndexCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetTriggers)(THIS_ LPSQLDMOTRIGGERS *ppTriggers) PURE;
    STDMETHOD(GetTriggerByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTRIGGER *ppTrigger, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetTriggerByOrd)(THIS_ long lOrdinal, LPSQLDMOTRIGGER *ppTrigger) PURE;
    STDMETHOD(RemoveTriggerByName)(THIS_ SQLDMO_LPCSTR szName, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(RemoveTriggerByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddTrigger)(THIS_ LPSQLDMOTRIGGER pTrigger) PURE;
    STDMETHOD(GetTriggerCount)(THIS_ LPLONG plCount) PURE;

        //*** methods
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(DoAlterWithNoCheck)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Grant)(THIS_ SQLDMO_PRIVILEGE_TYPE iPrivileges, SQLDMO_LPCSTR GranteeNames, SQLDMO_LPCSTR ColumnNames CPPDEFAULT(= NULL), BOOL GrantGrant CPPDEFAULT(=FALSE), SQLDMO_LPCSTR AsRole CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(Revoke)(THIS_ SQLDMO_PRIVILEGE_TYPE iPrivileges, SQLDMO_LPCSTR RevokeeNames, SQLDMO_LPCSTR ColumnNames CPPDEFAULT(= NULL), BOOL GrantGrant CPPDEFAULT(=FALSE), BOOL RevokeGrantOption CPPDEFAULT(=FALSE), SQLDMO_LPCSTR AsRole CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(CheckTable)(THIS_ SQLDMO_LPBSTR pResult) PURE;
    STDMETHOD(TruncateData)(THIS) PURE;
    STDMETHOD(UpdateStatistics)(THIS) PURE;
    STDMETHOD(ReCompileReferences)(THIS) PURE;
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPCSTR NewName CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
    STDMETHOD(EnumReferencedKeys)(THIS_ LPSQLDMOQUERYRESULTS * ppResults, SQLDMO_LPCSTR ReferencedTableName CPPDEFAULT(= NULL), BOOL IncludeAllCandidates CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(EnumReferencedTables)(THIS_ LPSQLDMOQUERYRESULTS * ppResults, BOOL IncludeAllCandidates CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(EnumReferencingKeys)(THIS_ LPSQLDMOQUERYRESULTS * ppResults, SQLDMO_LPCSTR ReferencingTableName CPPDEFAULT(= NULL), BOOL IncludeAllCandidates CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(EnumReferencingTables)(THIS_ LPSQLDMOQUERYRESULTS * ppResults, BOOL IncludeAllCandidates CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(InsertColumn)(THIS_ LPSQLDMOCOLUMN pNewColumn, SQLDMO_LPCSTR BeforeColumnName) PURE;
    STDMETHOD(RecalcSpaceUsage)(THIS) PURE;
    STDMETHOD(EnumDependencies)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_DEPENDENCY_TYPE DependencyType CPPDEFAULT(= SQLDMODep_Parents)) PURE;
    STDMETHOD(EnumLastStatisticsUpdates)(THIS_ LPSQLDMOQUERYRESULTS * ppResults, SQLDMO_LPCSTR IndexName CPPDEFAULT(= NULL)) PURE;

        // List methods
    STDMETHOD(ListPermissions)(THIS_ LPSQLDMOPERMISSIONLIST * ppList, SQLDMO_PRIVILEGE_TYPE lPrivilegeTypes CPPDEFAULT(= SQLDMOPriv_AllObjectPrivs)) PURE;
    STDMETHOD(ListUserPermissions)(THIS_ SQLDMO_LPCSTR UserName, LPSQLDMOPERMISSIONLIST * ppList) PURE;

        // Post-6.0 additions.
    STDMETHOD(CheckIdentityValue)(THIS) PURE;
    STDMETHOD(RebuildIndexes)(THIS_ SQLDMO_INDEX_TYPE SortedDataType CPPDEFAULT(= SQLDMOIndex_Default), long lFillFactor CPPDEFAULT(= SQLDMO_USEEXISTINGFILLFACTOR)) PURE;
    STDMETHOD(ImportData)(THIS_ LPSQLDMOBULKCOPY Bcp, LPLONG plRowsImported CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(ExportData)(THIS_ LPSQLDMOBULKCOPY Bcp, LPLONG plRowsExported CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(CheckTableDataOnly)(THIS_ SQLDMO_LPBSTR pResult) PURE;
    STDMETHOD(InAlter)(THIS_ LPBOOL pRetVal) PURE;

    // 7.0
    STDMETHOD(GetFileGroup)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(SetFileGroup)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetTextFileGroup)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(SetTextFileGroup)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(Deny)(THIS_ SQLDMO_PRIVILEGE_TYPE iPrivileges, SQLDMO_LPCSTR DenyeeNames, SQLDMO_LPCSTR ColumnNames CPPDEFAULT(= NULL), BOOL GrantGrant CPPDEFAULT(=FALSE)) PURE;
    STDMETHOD(SetOwner)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GenerateSQL)(THIS_ LPSQLDMODATABASE pDB, SQLDMO_LPBSTR pRetVal) PURE;
    // Following CheckTextAllocsXXXX are for backward compatible
    STDMETHOD(CheckTextAllocsFast)(THIS_ SQLDMO_LPBSTR pResult) PURE;
    STDMETHOD(CheckTextAllocsFull)(THIS_ SQLDMO_LPBSTR pResult) PURE;
    STDMETHOD(UpdateStatisticsWith)(THIS_ SQLDMO_STAT_AFFECT_TYPE AffectType, SQLDMO_STAT_SCAN_TYPE ScanType, long ScanNumber CPPDEFAULT(=0), BOOL ReCompute CPPDEFAULT(=TRUE)) PURE;
    STDMETHOD(GetFullTextIndex)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetFullTextIndex)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetUniqueIndexForFullText)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(SetUniqueIndexForFullText)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetFullTextCatalogName)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(SetFullTextCatalogName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetFullTextIndexActive)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetFullTextIndexActive)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetFullTextKeyColumn)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(ListAvailableUniqueIndexesForFullText)(THIS_ LPSQLDMONAMELIST *ppUniqueIndexNames) PURE;
    STDMETHOD(FullTextIndexScript)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetHasClusteredIndex)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetHasIndex)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetFakeSystemTable)(THIS_ LPBOOL pRetVal) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOViews
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOVIEW *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOVIEW *ppObj, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOVIEW *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOVIEW Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOView
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG plID) PURE;
    STDMETHOD(GetOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetCreateDate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetText)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetText)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSystemObject)(THIS_ LPBOOL pRetVal) PURE;

        //*** methods
    STDMETHOD(Grant)(THIS_ SQLDMO_PRIVILEGE_TYPE iPrivileges, SQLDMO_LPCSTR GranteeNames, SQLDMO_LPCSTR ColumnNames CPPDEFAULT(= NULL), BOOL GrantGrant CPPDEFAULT(=FALSE), SQLDMO_LPCSTR AsRole CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(Revoke)(THIS_ SQLDMO_PRIVILEGE_TYPE iPrivileges, SQLDMO_LPCSTR RevokeeNames, SQLDMO_LPCSTR ColumnNames CPPDEFAULT(= NULL), BOOL GrantGrant CPPDEFAULT(=FALSE), BOOL RevokeGrantOption CPPDEFAULT(=FALSE), SQLDMO_LPCSTR AsRole CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
    STDMETHOD(EnumDependencies)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_DEPENDENCY_TYPE DependencyType CPPDEFAULT(= SQLDMODep_Parents)) PURE;

    // List methods
    STDMETHOD(ListPermissions)(THIS_ LPSQLDMOPERMISSIONLIST * ppList, SQLDMO_PRIVILEGE_TYPE lPrivilegeTypes CPPDEFAULT(= SQLDMOPriv_AllObjectPrivs)) PURE;
    STDMETHOD(ListUserPermissions)(THIS_ SQLDMO_LPCSTR UserName, LPSQLDMOPERMISSIONLIST * ppList) PURE;
    STDMETHOD(ListColumns)(THIS_ LPSQLDMOCOLUMNLIST * ppList) PURE;

        // Post-6.0 additions.
    STDMETHOD(ExportData)(THIS_ LPSQLDMOBULKCOPY Bcp, LPLONG plRowsExported CPPDEFAULT(= NULL)) PURE;

    // 7.0
    STDMETHOD(Deny)(THIS_ SQLDMO_PRIVILEGE_TYPE iPrivileges, SQLDMO_LPCSTR DenyeeNames, SQLDMO_LPCSTR ColumnNames CPPDEFAULT(= NULL), BOOL GrantGrant CPPDEFAULT(=FALSE)) PURE;
    STDMETHOD(SetOwner)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(Alter)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetQuotedIdentifierStatus)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetAnsiNullsStatus)(THIS_ LPBOOL pRetVal) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMORules
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMORULE *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMORULE *ppObj, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMORULE *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMORULE Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMORule
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetCreateDate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetText)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetText)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

        //*** methods
    STDMETHOD(BindToColumn)(THIS_ SQLDMO_LPCSTR TableName, SQLDMO_LPCSTR ColumnName) PURE;
    STDMETHOD(BindToDatatype)(THIS_ SQLDMO_LPCSTR DatatypeName, BOOL bFutureOnly CPPDEFAULT(= FALSE)) PURE;
    STDMETHOD(UnbindFromColumn)(THIS_ SQLDMO_LPCSTR TableName, SQLDMO_LPCSTR ColumnName) PURE;
    STDMETHOD(UnbindFromDatatype)(THIS_ SQLDMO_LPCSTR DatatypeName, BOOL bFutureOnly CPPDEFAULT(= FALSE)) PURE;
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;

        // List methods
    STDMETHOD(ListBoundColumns)(THIS_ LPSQLDMOCOLUMNLIST * ppList) PURE;
    STDMETHOD(ListBoundDatatypes)(THIS_ LPSQLDMOUSERDEFINEDDATATYPELIST * ppList) PURE;

    // 7.0
    STDMETHOD(SetOwner)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMODefaults
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMODEFAULT *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODEFAULT *ppObj, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMODEFAULT *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMODEFAULT Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMODefault
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetCreateDate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetText)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetText)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

        //*** methods
    STDMETHOD(BindToColumn)(THIS_ SQLDMO_LPCSTR TableName, SQLDMO_LPCSTR ColumnName) PURE;
    STDMETHOD(BindToDatatype)(THIS_ SQLDMO_LPCSTR DatatypeName, BOOL bFutureOnly CPPDEFAULT(= FALSE)) PURE;
    STDMETHOD(UnbindFromColumn)(THIS_ SQLDMO_LPCSTR TableName, SQLDMO_LPCSTR ColumnName) PURE;
    STDMETHOD(UnbindFromDatatype)(THIS_ SQLDMO_LPCSTR DatatypeName, BOOL bFutureOnly CPPDEFAULT(= FALSE)) PURE;
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;

        // List methods
    STDMETHOD(ListBoundColumns)(THIS_ LPSQLDMOCOLUMNLIST * ppList) PURE;
    STDMETHOD(ListBoundDatatypes)(THIS_ LPSQLDMOUSERDEFINEDDATATYPELIST * ppList) PURE;

    // 7.0
    STDMETHOD(SetOwner)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOColumns
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOCOLUMN *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOCOLUMN *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOCOLUMN *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOCOLUMN Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOColumn
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDatatype)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDatatype)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPhysicalDatatype)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetLength)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetLength)(THIS_ long NewValue) PURE;
    STDMETHOD(GetDefault)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDefault)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetRule)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetRule)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetAllowNulls)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAllowNulls)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetIdentity)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetIdentity)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetNumericPrecision)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetNumericPrecision)(THIS_ long NewValue) PURE;
    STDMETHOD(GetNumericScale)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetNumericScale)(THIS_ long NewValue) PURE;
    STDMETHOD(GetIdentitySeed)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetIdentitySeed)(THIS_ long NewValue) PURE;
    STDMETHOD(GetIdentityIncrement)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetIdentityIncrement)(THIS_ long NewValue) PURE;
    STDMETHOD(GetDRIDefault)(THIS_ LPSQLDMODRIDEFAULT *ppDRIDefault) PURE;
    STDMETHOD(GetInPrimaryKey)(THIS_ LPBOOL pRetVal) PURE;

   //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(ListKeys)(THIS_ LPSQLDMOKEYLIST * ppList) PURE;

    // 7.0
    STDMETHOD(GetIsRowGuidCol)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetIsRowGuidCol)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetIsComputed)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetIsComputed)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetComputedText)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetComputedText)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetNotForRepl)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetNotForRepl)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(UpdateStatisticsWith)(THIS_ SQLDMO_STAT_SCAN_TYPE ScanType, long ScanNumber CPPDEFAULT(=0), BOOL ReCompute CPPDEFAULT(=TRUE)) PURE;
    STDMETHOD(GetFullTextIndex)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetFullTextIndex)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetAnsiPaddingStatus)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetDefaultOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetRuleOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(BindDefault)(THIS_ SQLDMO_LPCSTR DefaultOwner, SQLDMO_LPCSTR DefaultName, BOOL Bind) PURE;
    STDMETHOD(BindRule)(THIS_ SQLDMO_LPCSTR RuleOwner, SQLDMO_LPCSTR RuleName, BOOL Bind) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOIndexes
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOINDEX *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOINDEX *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOINDEX *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOINDEX Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOIndex
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetType)(THIS_ SQLDMO_INDEX_TYPE *pRetVal) PURE;
    STDMETHOD(SetType)(THIS_ SQLDMO_INDEX_TYPE NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetFillFactor)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetFillFactor)(THIS_ long lNewValue) PURE;
    STDMETHOD(GetSpaceUsed)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetIndexedColumns)(THIS_ SQLDMO_LPCSTR ColumnNames) PURE;

    //*** methods
    STDMETHOD(UpdateStatistics)(THIS) PURE;
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
    STDMETHOD(Rebuild)(THIS) PURE;
    STDMETHOD(RecalcSpaceUsage)(THIS) PURE;
    STDMETHOD(EnumStatistics)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(GenerateCreationSQL)(THIS_ LPSQLDMOTABLE TargetTable, SQLDMO_LPBSTR pSQLStatement) PURE;

        // List methods
    STDMETHOD(ListIndexedColumns)(THIS_ LPSQLDMOCOLUMNLIST * ppList) PURE;

        // Post-6.0 additions.
    STDMETHOD(CheckIndex)(THIS_ SQLDMO_LPBSTR pResult) PURE;

    // 7.0
    STDMETHOD(GetFileGroup)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(SetFileGroup)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GenerateSQL)(THIS_ LPSQLDMOTABLE pTable, SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(UpdateStatisticsWith)(THIS_ SQLDMO_STAT_SCAN_TYPE ScanType, long ScanNumber CPPDEFAULT(=0), BOOL ReCompute CPPDEFAULT(=TRUE)) PURE;
    STDMETHOD(GetIsFullTextKey)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetNoRecompute)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetNoRecompute)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetStatisticsIndex)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetStatisticsIndex)(THIS_ BOOL NewValue) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOKeys
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOKEY *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOKEY *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOKEY Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOKey
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetType)(THIS_ SQLDMO_KEY_TYPE *pRetVal) PURE;
    STDMETHOD(SetType)(THIS_ SQLDMO_KEY_TYPE NewValue) PURE;
    STDMETHOD(GetClustered)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetClustered)(THIS_ BOOL bNewValue) PURE;
    STDMETHOD(GetFillFactor)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetFillFactor)(THIS_ long lNewValue) PURE;
    STDMETHOD(GetReferencedTable)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetReferencedTable)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetReferencedKey)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;

        //*** Collection properties
    STDMETHOD(GetKeyColumns)(THIS_ LPSQLDMONAMES *ppColumnNames) PURE;
    STDMETHOD(GetReferencedColumns)(THIS_ LPSQLDMONAMES *ppColumnNames) PURE;

    //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;

        // Post-6.0 additions.
    STDMETHOD(RebuildIndex)(THIS) PURE;
    STDMETHOD(GetExcludeReplication)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetExcludeReplication)(THIS_ BOOL NewValue) PURE;

    // 7.0
    STDMETHOD(GetFileGroup)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(SetFileGroup)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetChecked)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetChecked)(THIS_ BOOL NewValue) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOStoredProcedures
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOSTOREDPROCEDURE *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOSTOREDPROCEDURE *ppObj, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOSTOREDPROCEDURE *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOSTOREDPROCEDURE Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOStoredProcedure
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetCreateDate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetText)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetText)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetType)(THIS_ SQLDMO_PROCEDURE_TYPE *pRetVal) PURE;
    STDMETHOD(SetType)(THIS_ SQLDMO_PROCEDURE_TYPE NewValue) PURE;
    STDMETHOD(GetStartup)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetStartup)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetSystemObject)(THIS_ LPBOOL pRetVal) PURE;

        //*** methods
    STDMETHOD(Grant)(THIS_ SQLDMO_PRIVILEGE_TYPE iPrivileges, SQLDMO_LPCSTR GranteeNames, BOOL GrantGrant CPPDEFAULT(=FALSE), SQLDMO_LPCSTR AsRole CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(Revoke)(THIS_ SQLDMO_PRIVILEGE_TYPE iPrivileges, SQLDMO_LPCSTR RevokeeNames, BOOL GrantGrant CPPDEFAULT(=FALSE), BOOL RevokeGrantOption CPPDEFAULT(=FALSE), SQLDMO_LPCSTR AsRole CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(EnumParameters)(THIS_ LPSQLDMOQUERYRESULTS * ppResults) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
    STDMETHOD(EnumDependencies)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_DEPENDENCY_TYPE DependencyType CPPDEFAULT(= SQLDMODep_Parents)) PURE;

        // List methods
    STDMETHOD(ListPermissions)(THIS_ LPSQLDMOPERMISSIONLIST * ppList, SQLDMO_PRIVILEGE_TYPE lPrivilegeTypes CPPDEFAULT(= SQLDMOPriv_Execute)) PURE;
    STDMETHOD(ListUserPermissions)(THIS_ SQLDMO_LPCSTR UserName, LPSQLDMOPERMISSIONLIST * ppList) PURE;

    // 7.0
    STDMETHOD(Deny)(THIS_ SQLDMO_PRIVILEGE_TYPE iPrivileges, SQLDMO_LPCSTR DenyeeNames, BOOL GrantGrant CPPDEFAULT(=FALSE)) PURE;
    STDMETHOD(SetOwner)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(Alter)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetQuotedIdentifierStatus)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetAnsiNullsStatus)(THIS_ LPBOOL pRetVal) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOUserDefinedDatatypes
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOUSERDEFINEDDATATYPE *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOUSERDEFINEDDATATYPE *ppObj, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOUSERDEFINEDDATATYPE *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOUSERDEFINEDDATATYPE Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOUserDefinedDatatype
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetAllowNulls)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAllowNulls)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetBaseType)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetBaseType)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetLength)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetLength)(THIS_ long NewValue) PURE;
    STDMETHOD(GetDefault)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDefault)(THIS_ SQLDMO_LPCSTR NewValue, BOOL bFutureOnly CPPDEFAULT(= FALSE)) PURE;
    STDMETHOD(GetRule)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetRule)(THIS_ SQLDMO_LPCSTR NewValue, BOOL bFutureOnly CPPDEFAULT(= FALSE)) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetNumericPrecision)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetNumericPrecision)(THIS_ long NewValue) PURE;
    STDMETHOD(GetNumericScale)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetNumericScale)(THIS_ long NewValue) PURE;
    STDMETHOD(GetAllowIdentity)(THIS_ LPBOOL pRetVal) PURE;

        //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;

        // List methods
    STDMETHOD(ListBoundColumns)(THIS_ LPSQLDMOCOLUMNLIST * ppList) PURE;

    // 7.0
    STDMETHOD(GetIsVariableLength)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GenerateSQL)(THIS_ LPSQLDMODATABASE pDB, SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetMaxSize)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetDefaultOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetRuleOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(BindDefault)(THIS_ SQLDMO_LPCSTR DefaultOwner, SQLDMO_LPCSTR DefaultName, BOOL Bind, BOOL bFutureOnly CPPDEFAULT(= FALSE)) PURE;
    STDMETHOD(BindRule)(THIS_ SQLDMO_LPCSTR RuleOwner, SQLDMO_LPCSTR RuleName, BOOL Bind, BOOL bFutureOnly CPPDEFAULT(= FALSE)) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOUsers
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOUSER *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOUSER *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOUSER *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOUSER Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOUser
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetLogin)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetLogin)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetGroup)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetGroup)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetSystemObject)(THIS_ LPBOOL pRetVal) PURE;

        //*** methods
    STDMETHOD(AddAlias)(THIS_ SQLDMO_LPCSTR LoginNames) PURE;
    STDMETHOD(RemoveAlias)(THIS_ SQLDMO_LPCSTR LoginNames) PURE;
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;

        // List methods
    STDMETHOD(ListAliases)(THIS_ LPSQLDMOLOGINLIST * ppList) PURE;
    STDMETHOD(ListOwnedObjects)(THIS_ LPSQLDMODBOBJECTLIST * ppList, SQLDMO_OBJECT_TYPE lObjectTypes CPPDEFAULT(= SQLDMOObj_AllDatabaseObjects), SQLDMO_OBJSORT_TYPE SortBy CPPDEFAULT(= SQLDMOObjSort_Name)) PURE;
    STDMETHOD(ListDatabasePermissions)(THIS_ LPSQLDMOPERMISSIONLIST * ppList, SQLDMO_PRIVILEGE_TYPE lPrivilegeTypes CPPDEFAULT(= SQLDMOPriv_AllDatabasePrivs)) PURE;
    STDMETHOD(ListObjectPermissions)(THIS_ LPSQLDMOPERMISSIONLIST * ppList, SQLDMO_PRIVILEGE_TYPE lPrivilegeTypes CPPDEFAULT(= SQLDMOPriv_AllObjectPrivs)) PURE;

    // 7.0
    STDMETHOD(ListMembers)(THIS_ LPSQLDMONAMELIST *ppList) PURE;
    STDMETHOD(GetRole)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetRole)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(IsMember)(THIS_ SQLDMO_LPCSTR DatabaseRole, LPBOOL pRetVal) PURE;
    STDMETHOD(GetHasDBAccess)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GrantNTUserDBAccess)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOGroups
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOGROUP *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOGROUP *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOGROUP *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOGROUP Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOGroup
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetSystemObject)(THIS_ LPBOOL pRetVal) PURE;

        //*** methods
    STDMETHOD(Remove)(THIS) PURE;

        // List methods
    STDMETHOD(ListUsers)(THIS_ LPSQLDMOUSERLIST * ppList) PURE;
    STDMETHOD(ListDatabasePermissions)(THIS_ LPSQLDMOPERMISSIONLIST * ppList, SQLDMO_PRIVILEGE_TYPE lPrivilegeTypes CPPDEFAULT(= SQLDMOPriv_AllDatabasePrivs)) PURE;
    STDMETHOD(ListObjectPermissions)(THIS_ LPSQLDMOPERMISSIONLIST * ppList, SQLDMO_PRIVILEGE_TYPE lPrivilegeTypes CPPDEFAULT(= SQLDMOPriv_AllObjectPrivs)) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOTriggers
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOTRIGGER *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTRIGGER *ppObj, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOTRIGGER *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOTRIGGER Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOTrigger
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetCreateDate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetText)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetText)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetType)(THIS_ SQLDMO_TRIGGER_TYPE *pRetVal) PURE;
    STDMETHOD(GetSystemObject)(THIS_ LPBOOL pRetVal) PURE;

        //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
    STDMETHOD(EnumDependencies)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_DEPENDENCY_TYPE DependencyType CPPDEFAULT(= SQLDMODep_Parents)) PURE;

    // 7.0
    STDMETHOD(SetOwner)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(Alter)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetEnabled)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetEnabled)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetQuotedIdentifierStatus)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetAnsiNullsStatus)(THIS_ LPBOOL pRetVal) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMORemoteServers
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOREMOTESERVER *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREMOTESERVER *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOREMOTESERVER *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOREMOTESERVER Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMORemoteServer
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetNetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetNetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetOptions)(THIS_ SQLDMO_SRVOPTION_TYPE *pRetVal) PURE;
    STDMETHOD(GetTopologyX)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetTopologyY)(THIS_ LPLONG pRetVal) PURE;

       //*** collection properties
    STDMETHOD(GetRemoteLogins)(THIS_ LPSQLDMOREMOTELOGINS * ppRemoteLogins) PURE;
    STDMETHOD(GetRemoteLoginByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREMOTELOGIN *ppRemoteLogin) PURE;
    STDMETHOD(GetRemoteLoginByOrd)(THIS_ long lOrdinal, LPSQLDMOREMOTELOGIN *ppRemoteLogin) PURE;
    STDMETHOD(RemoveRemoteLoginByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveRemoteLoginByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddRemoteLogin)(THIS_ LPSQLDMOREMOTELOGIN pRemoteLogin) PURE;
    STDMETHOD(GetRemoteLoginCount)(THIS_ LPLONG plCount) PURE;

        //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(ExecuteImmediate)(THIS_ SQLDMO_LPCSTR Command, long lLength CPPDEFAULT(= 0)) PURE;
    STDMETHOD(ExecuteWithResults)(THIS_ SQLDMO_LPCSTR Command, LPSQLDMOQUERYRESULTS *ppResults, long lLength CPPDEFAULT(= 0)) PURE;
    STDMETHOD(SetOptions)(THIS_ SQLDMO_SRVOPTION_TYPE Options, BOOL NewValue) PURE;
//    STDMETHOD(EnumTasks)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPCSTR TaskName CPPDEFAULT(= NULL), long TaskID CPPDEFAULT(= 0)) PURE;
    STDMETHOD(SetTopologyXY)(THIS_ long X, long Y) PURE;

        // Post-6.0 additions
    STDMETHOD(ExecuteWithResultsAndMessages)(THIS_ SQLDMO_LPCSTR Command, LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPBSTR ppszMessages CPPDEFAULT(= 0), long lLength CPPDEFAULT(= 0)) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMORemoteLogins
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOREMOTELOGIN *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREMOTELOGIN *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOREMOTELOGIN Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMORemoteLogin
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetLocalName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetLocalName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetRemoteName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetRemoteName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetTrusted)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetTrusted)(THIS_ BOOL NewValue) PURE;

        //*** methods
    STDMETHOD(Remove)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOSystemDatatypes
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOSYSTEMDATATYPE *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOSYSTEMDATATYPE *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOSystemDatatype
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetMaximumLength)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetAllowNulls)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetIsNumeric)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetAllowIdentity)(THIS_ LPBOOL pRetVal) PURE;

    // 7.0
    STDMETHOD(GetIsVariableLength)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetAllowLength)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetMaximumChar)(THIS_ LPLONG pRetVal) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOChecks
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOCHECK *ppObj) PURE;
        STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOCHECK *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
        STDMETHOD(Add)(THIS_ LPSQLDMOCHECK Object) PURE;
        STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
        STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
        STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOCheck
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetText)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetText)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetExcludeReplication)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetExcludeReplication)(THIS_ BOOL NewValue) PURE;

        //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;

    // 7.0
    STDMETHOD(GetChecked)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetChecked)(THIS_ BOOL NewValue) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOServerGroups
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
        STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOSERVERGROUP *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOSERVERGROUP *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOSERVERGROUP Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOServerGroup
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

        //*** Collection Properties
    STDMETHOD(GetRegisteredServers)(THIS_ LPSQLDMOREGISTEREDSERVERS *ppRegisteredServers) PURE;
    STDMETHOD(GetRegisteredServerByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREGISTEREDSERVER *ppRegisteredServer) PURE;
    STDMETHOD(GetRegisteredServerByOrd)(THIS_ long lOrdinal, LPSQLDMOREGISTEREDSERVER *ppRegisteredServer) PURE;
    STDMETHOD(RemoveRegisteredServerByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveRegisteredServerByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddRegisteredServer)(THIS_ LPSQLDMOREGISTEREDSERVER pRegisteredServer) PURE;
    STDMETHOD(GetRegisteredServerCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetServerGroups)(THIS_ LPSQLDMOSERVERGROUPS *ppServerGroups) PURE;
    STDMETHOD(GetServerGroupByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOSERVERGROUP *ppServerGroup) PURE;
    STDMETHOD(GetServerGroupByOrd)(THIS_ long lOrdinal, LPSQLDMOSERVERGROUP *ppServerGroup) PURE;
    STDMETHOD(RemoveServerGroupByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveServerGroupByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddServerGroup)(THIS_ LPSQLDMOSERVERGROUP pServerGroup) PURE;
    STDMETHOD(GetServerGroupCount)(THIS_ LPLONG plCount) PURE;

        //*** methods
    STDMETHOD(Remove)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMORegisteredServers
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOREGISTEREDSERVER *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREGISTEREDSERVER *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

//*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOREGISTEREDSERVER Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMORegisteredServer
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetLogin)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetLogin)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPassword)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPassword)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetUseTrustedConnection)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetUseTrustedConnection)(THIS_ LONG NewValue) PURE;
    STDMETHOD(GetVersionMajor)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetVersionMinor)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetSaLogin)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetPersistFlags)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetPersistFlags)(THIS_ LONG NewValue) PURE;

        //*** methods
    STDMETHOD(Remove)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOQueryResults
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetResultSets)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetCurrentResultSet)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetCurrentResultSet)(THIS_ long NewValue) PURE;
    STDMETHOD(GetRows)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetColumns)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetColumnName)(THIS_ long lColumn, SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetColumnType)(THIS_ long lColumn, SQLDMO_QUERY_DATATYPE *pRetVal) PURE;
    STDMETHOD(GetColumnMaxLength)(THIS_ long lColumn, LPLONG pRetVal) PURE;

        //*** methods
    STDMETHOD(GetColumnLong)(THIS_ long lRow, long lColumn, LPLONG pRetVal) PURE;
    STDMETHOD(GetColumnBool)(THIS_ long lRow, long lColumn, LPBOOL pRetVal) PURE;
    STDMETHOD(GetColumnFloat)(THIS_ long lRow, long lColumn, LPFLOAT pRetVal) PURE;
    STDMETHOD(GetColumnDouble)(THIS_ long lRow, long lColumn, LPDOUBLE pRetVal) PURE;
    STDMETHOD(GetColumnString)(THIS_ long lRow, long lColumn, SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetRangeString)(THIS_ SQLDMO_LPBSTR pRetVal, long Top CPPDEFAULT(= 0), long Left CPPDEFAULT(= 0),
                                                                long Bottom CPPDEFAULT(= -1), long Right CPPDEFAULT(= -1),
                                                                SQLDMO_LPCSTR RowDelim CPPDEFAULT(= NULL), SQLDMO_LPCSTR ColDelim CPPDEFAULT(= NULL),
                                                                SQLDMO_LPCSTR ColWidths CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(Refresh)(THIS) PURE;

        // Post-6.0 additions
    STDMETHOD(GetColumnDate)(THIS_ long lRow, long lColumn, LPSYSTEMTIME pSystemTime) PURE;
    STDMETHOD(GetColumnBinary)(THIS_ long lRow, long lColumn, LPVOID *pvData) PURE;

    // 7.0
    STDMETHOD(GetColumnBinaryLength)(THIS_ long lRow, long lColumn, LPLONG pRetLen) PURE;
    STDMETHOD(GetColumnGUID)(THIS_ long lRow, long lColumn, LPVOID *pvData) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOTransactionLog
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetCreateDate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetLastBackup)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetSize)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetSpaceAvailable)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetSpaceAvailableInMB)(THIS_ LPFLOAT pRetVal) PURE;
    STDMETHOD(GetSpaceAllocatedOnFiles)(THIS_ SQLDMO_LPCSTR DatabaseName, LPLONG pRetVal) PURE;

        //*** methods
    STDMETHOD(Truncate)(THIS) PURE;

    // 7.0
    //*** Collection properties
    STDMETHOD(GetLogFiles)(THIS_ LPSQLDMOLOGFILES * ppLogFiles) PURE;
    STDMETHOD(GetLogFileByOrd)(THIS_ long lOrdinal, LPSQLDMOLOGFILE *ppLogFile) PURE;
    STDMETHOD(AddLogFile)(THIS_ LPSQLDMOLOGFILE pLogFile) PURE;
    STDMETHOD(GetLogFileCount)(THIS_ LPLONG plCount) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOPermission
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetPrivilegeTypeName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetPrivilegeType)(THIS_ SQLDMO_PRIVILEGE_TYPE *pRetVal) PURE;
    STDMETHOD(GetObjectName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetObjectOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetObjectTypeName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetObjectType)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetObjectID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetGrantee)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetGranted)(THIS_ LPBOOL pRetVal) PURE;

        //*** methods
        // List methods
    STDMETHOD(ListPrivilegeColumns)(THIS_ LPSQLDMOCOLUMNLIST * ppList) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMODBOption
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetSelectIntoBulkCopy)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetSelectIntoBulkCopy)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetDBOUseOnly)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetDBOUseOnly)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetReadOnly)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetReadOnly)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetSingleUser)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetSingleUser)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetTruncateLogOnCheckpoint)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetTruncateLogOnCheckpoint)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetColumnsNullByDefault)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetColumnsNullByDefault)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetOffline)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetOffline)(THIS_ BOOL NewValue) PURE;

        //*** methods
    STDMETHOD(Refresh)(THIS) PURE;

    // 7.0
    STDMETHOD(GetRecursiveTriggers)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetRecursiveTriggers)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetAutoShrink)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAutoShrink)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCompareNull)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetCompareNull)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetContactNull)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetContactNull)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCursorCloseOnCommit)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetCursorCloseOnCommit)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetDefaultCursor)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetDefaultCursor)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetQuoteDelimiter)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetQuoteDelimiter)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetAssignmentDiag)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAssignmentDiag)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetTornPageDetection)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetTornPageDetection)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetAutoClose)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAutoClose)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetAutoCreateStat)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAutoCreateStat)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetAutoUpdateStat)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAutoUpdateStat)(THIS_ BOOL NewValue) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMODBObject
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetTypeName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetType)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetCreateDate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetSystemObject)(THIS_ LPBOOL pRetVal) PURE;

    //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
    STDMETHOD(EnumDependencies)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_DEPENDENCY_TYPE DependencyType CPPDEFAULT(= SQLDMODep_Parents)) PURE;

        // List methods
    STDMETHOD(ListPermissions)(THIS_ LPSQLDMOPERMISSIONLIST * ppList, SQLDMO_PRIVILEGE_TYPE lPrivilegeTypes CPPDEFAULT(= SQLDMOPriv_AllObjectPrivs)) PURE;
    STDMETHOD(ListUserPermissions)(THIS_ SQLDMO_LPCSTR UserName, LPSQLDMOPERMISSIONLIST * ppList) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMODRIDefault
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetText)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetText)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

        //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOTransfer
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetDestServer)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDestServer)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDestLogin)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDestLogin)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDestPassword)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDestPassword)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDestDatabase)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDestDatabase)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDestUseTrustedConnection)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetDestUseTrustedConnection)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCopyData)(THIS_ SQLDMO_COPYDATA_TYPE *pRetVal) PURE;
    STDMETHOD(SetCopyData)(THIS_ SQLDMO_COPYDATA_TYPE NewValue) PURE;
    STDMETHOD(GetCopySchema)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetCopySchema)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCopyAllObjects)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetCopyAllObjects)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCopyAllTables)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetCopyAllTables)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCopyAllViews)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetCopyAllViews)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCopyAllStoredProcedures)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetCopyAllStoredProcedures)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCopyAllUserDefinedDatatypes)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetCopyAllUserDefinedDatatypes)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCopyAllRules)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetCopyAllRules)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCopyAllDefaults)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetCopyAllDefaults)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCopyAllTriggers)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetCopyAllTriggers)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetIncludeDependencies)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetIncludeDependencies)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetIncludeUsers)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetIncludeUsers)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetIncludeGroups)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetIncludeGroups)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetIncludeLogins)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetIncludeLogins)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetDropDestObjectsFirst)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetDropDestObjectsFirst)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetScriptType)(THIS_ SQLDMO_SCRIPT_TYPE * pRetVal) PURE;
    STDMETHOD(SetScriptType)(THIS_ SQLDMO_SCRIPT_TYPE NewValue) PURE;

    //*** methods
    STDMETHOD(AddObjectByName)(THIS_ SQLDMO_LPCSTR ObjectName, SQLDMO_OBJECT_TYPE ObjectType, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(AddObject)(THIS_ LPSQLDMODBOBJECT DBObject) PURE;
    STDMETHOD(ListObjectNames)(THIS_ SQLDMO_OBJECT_TYPE ObjectType, LPSQLDMONAMELIST * ppList) PURE;
    STDMETHOD(Abort)(THIS) PURE;

    // 7.0
    STDMETHOD(GetScript2Type)(THIS_ SQLDMO_SCRIPT2_TYPE * pRetVal) PURE;
    STDMETHOD(SetScript2Type)(THIS_ SQLDMO_SCRIPT2_TYPE NewValue) PURE;
    STDMETHOD(RetrieveErrors)(THIS_ SQLDMO_LPBSTR pbstrMsg) PURE;
    STDMETHOD(RetrieveWriteFileErrors)(THIS_ SQLDMO_LPBSTR pbstrMsg) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOTransferSink
DECLARE_INTERFACE_(INTERFACE, IUnknown)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** Sink properties and methods.
    STDMETHOD(StatusMessage)(THIS_ SQLDMO_LPCSTR szMessage) PURE;
    STDMETHOD(PercentCompleteAtStep)(THIS_ SQLDMO_LPCSTR szMessage, long Percent) PURE;
    STDMETHOD(ScriptTransferPercentComplete)(THIS_ SQLDMO_LPCSTR szMessage, long Percent) PURE;
    STDMETHOD(TransferPercentComplete)(THIS_ SQLDMO_LPCSTR szMessage, long Percent) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOBackup
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetPercentCompleteNotification)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetPercentCompleteNotification)(THIS_ long NewValue) PURE;
    STDMETHOD(GetSkipTapeHeader)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetSkipTapeHeader)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetUnloadTapeAfter)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetUnloadTapeAfter)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetDatabase)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDatabase)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetFiles)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetFiles)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDatabaseFileGroups)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDatabaseFileGroups)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDatabaseFiles)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDatabaseFiles)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetAction)(THIS_ SQLDMO_BACKUP_TYPE * pRetVal) PURE;
    STDMETHOD(SetAction)(THIS_ SQLDMO_BACKUP_TYPE NewValue) PURE;
    STDMETHOD(GetBackupSetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetBackupSetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetBackupSetDescription)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetBackupSetDescription)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetRestart)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetRestart)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetTruncateLog)(THIS_ SQLDMO_BACKUP_LOG_TYPE * pRetVal) PURE;
    STDMETHOD(SetTruncateLog)(THIS_ SQLDMO_BACKUP_LOG_TYPE NewValue) PURE;
    STDMETHOD(GetBlockSize)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetBlockSize)(THIS_ long NewValue) PURE;
    STDMETHOD(GetFormatMedia)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetFormatMedia)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetMediaName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetMediaName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetMediaDescription)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetMediaDescription)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDevices)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDevices)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetTapes)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetTapes)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPipes)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPipes)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetExpirationDate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetExpirationDate)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetInitialize)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetInitialize)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetRetainDays)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetRetainDays)(THIS_ long NewValue) PURE;

        // methods
    STDMETHOD(Abort)(THIS) PURE;
    STDMETHOD(SQLBackup)(THIS_ LPSQLDMOSERVER ServerObject) PURE;
    STDMETHOD(GenerateSQL)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOBackupSink
DECLARE_INTERFACE_(INTERFACE, IUnknown)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** Sink properties and methods.
    STDMETHOD(PercentComplete)(THIS_ SQLDMO_LPCSTR Message, long Percent) PURE;
    STDMETHOD(NextMedia)(THIS_ SQLDMO_LPCSTR Message) PURE;
    STDMETHOD(Complete)(THIS_ SQLDMO_LPCSTR Message) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOBulkCopy
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetDataFilePath)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDataFilePath)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetFormatFilePath)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetFormatFilePath)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetErrorFilePath)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetErrorFilePath)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetLogFilePath)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetLogFilePath)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetColumnDelimiter)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetColumnDelimiter)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetRowDelimiter)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetRowDelimiter)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDataFileType)(THIS_ SQLDMO_DATAFILE_TYPE FAR* pRetVal) PURE;
    STDMETHOD(SetDataFileType)(THIS_ SQLDMO_DATAFILE_TYPE NewValue) PURE;
    STDMETHOD(GetFirstRow)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetFirstRow)(THIS_ long NewValue) PURE;
    STDMETHOD(GetLastRow)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetLastRow)(THIS_ long NewValue) PURE;
    STDMETHOD(GetMaximumErrorsBeforeAbort)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetMaximumErrorsBeforeAbort)(THIS_ long NewValue) PURE;
    STDMETHOD(GetIncludeIdentityValues)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetIncludeIdentityValues)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetImportRowsPerBatch)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetImportRowsPerBatch)(THIS_ long NewValue) PURE;
    STDMETHOD(GetUseBulkCopyOption)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetUseBulkCopyOption)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetSuspendIndexing)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetSuspendIndexing)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetTruncateLog)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetTruncateLog)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetUseExistingConnection)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetUseExistingConnection)(THIS_ BOOL NewValue) PURE;

    // 7.0
    STDMETHOD(GetUse6xCompatible)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetUse6xCompatible)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCodePage)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetCodePage)(THIS_ SQLDMO_BCP_CODEPAGE_TYPE NewValue, long UserCodePage CPPDEFAULT(= SQLDMOBCP_OEM)) PURE;
    STDMETHOD(GetUseServerSideBCP)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetUseServerSideBCP)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetServerBCPDataFileType)(THIS_ SQLDMO_SERVERBCP_DATAFILE_TYPE FAR* pRetVal) PURE;
    STDMETHOD(SetServerBCPDataFileType)(THIS_ SQLDMO_SERVERBCP_DATAFILE_TYPE NewValue) PURE;
    STDMETHOD(GetServerBCPKeepIdentity)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetServerBCPKeepIdentity)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetServerBCPKeepNulls)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetServerBCPKeepNulls)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetExportWideChar)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetExportWideChar)(THIS_ BOOL NewValue) PURE;

        // Methods
    STDMETHOD(Abort)(THIS) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOBulkCopySink
DECLARE_INTERFACE_(INTERFACE, IUnknown)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** Sink properties and methods.
    STDMETHOD(RowsCopied)(THIS_ SQLDMO_LPCSTR Message, long Rows) PURE;
    STDMETHOD(BatchImported)(THIS_ SQLDMO_LPCSTR Message) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

// 7.0 new objects

#undef INTERFACE
#define INTERFACE ISQLDMOFileGroups
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOFILEGROUP *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOFILEGROUP *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOFILEGROUP *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

//*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOFILEGROUP Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOFileGroup
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSize)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetReadOnly)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetReadOnly)(THIS_ BOOL pRetVal) PURE;
    STDMETHOD(GetDefault)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetDefault)(THIS_ BOOL pRetVal) PURE;

        // Collection properties
    STDMETHOD(GetDBFiles)(THIS_ LPSQLDMODBFILES *ppDBFiles) PURE;
    STDMETHOD(GetDBFileByOrd)(THIS_ long lOrdinal, LPSQLDMODBFILE *ppDBFile) PURE;
    STDMETHOD(RemoveDBFileByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddDBFile)(THIS_ LPSQLDMODBFILE pDBFile) PURE;
    STDMETHOD(GetDBFileCount)(THIS_ LPLONG plCount) PURE;

        //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(EnumObjects)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumFiles)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(CheckFilegroup)(THIS_ SQLDMO_LPBSTR pResult) PURE;
    STDMETHOD(CheckFilegroupDataOnly)(THIS_ SQLDMO_LPBSTR pResult) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMODBFiles
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMODBFILE *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMODBFILE *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

//*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMODBFILE Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMODBFile
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPhysicalName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPhysicalName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPrimaryFile)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetPrimaryFile)(THIS_ BOOL pRetVal) PURE;
    STDMETHOD(GetFileGrowth)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetFileGrowth)(THIS_ long NewValue) PURE;
    STDMETHOD(GetMaximumSize)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetMaximumSize)(THIS_ long NewValue) PURE;
    STDMETHOD(GetSpaceAvailableInMB)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetSize)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetSize)(THIS_ long NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetFileGrowthType)(THIS_ SQLDMO_GROWTH_TYPE * pRetVal) PURE;
    STDMETHOD(SetFileGrowthType)(THIS_ SQLDMO_GROWTH_TYPE NewValue) PURE;
    STDMETHOD(GetFileGrowthInKB)(THIS_ LPFLOAT pRetVal) PURE;
    STDMETHOD(GetSizeInKB)(THIS_ LPFLOAT pRetVal) PURE;

        //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Shrink)(THIS_ long lNewSizeInMB, SQLDMO_SHRINK_TYPE Truncate) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOLogFiles
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOLOGFILE *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOLOGFILE *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

//*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOLOGFILE Object) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOLogFile
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPhysicalName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPhysicalName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSize)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetSize)(THIS_ long NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetFileGrowth)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetFileGrowth)(THIS_ long NewValue) PURE;
    STDMETHOD(GetFileGrowthType)(THIS_ SQLDMO_GROWTH_TYPE * pRetVal) PURE;
    STDMETHOD(SetFileGrowthType)(THIS_ SQLDMO_GROWTH_TYPE NewValue) PURE;
    STDMETHOD(GetFileGrowthInKB)(THIS_ LPFLOAT pRetVal) PURE;
    STDMETHOD(GetMaximumSize)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetMaximumSize)(THIS_ long NewValue) PURE;
    STDMETHOD(GetSizeInKB)(THIS_ LPFLOAT pRetVal) PURE;

        //*** methods
    STDMETHOD(Shrink)(THIS_ long lNewSizeInMB, SQLDMO_SHRINK_TYPE Truncate) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOServerRoles
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOSERVERROLE *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOSERVERROLE *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

//*** SQLDMO standard collection methods
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOServerRole
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetFullName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetDescription)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;

        //*** methods
    STDMETHOD(EnumServerRolePermission)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumServerRoleMember)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(AddMember)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(DropMember)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMODatabaseRoles
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMODATABASEROLE *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODATABASEROLE *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

//*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMODATABASEROLE Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMODatabaseRole
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPassword)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPassword)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetAppRole)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAppRole)(THIS_ BOOL NewValue) PURE;

        //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(EnumDatabaseRoleMember)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(AddMember)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(DropMember)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
    STDMETHOD(EnumFixedDatabaseRolePermission)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(IsFixedRole)(THIS_ LPBOOL pRetVal) PURE;

    // List methods
    STDMETHOD(ListDatabasePermissions)(THIS_ LPSQLDMOPERMISSIONLIST * ppList, SQLDMO_PRIVILEGE_TYPE lPrivilegeTypes CPPDEFAULT(= SQLDMOPriv_AllDatabasePrivs)) PURE;
    STDMETHOD(ListObjectPermissions)(THIS_ LPSQLDMOPERMISSIONLIST * ppList, SQLDMO_PRIVILEGE_TYPE lPrivilegeTypes CPPDEFAULT(= SQLDMOPriv_AllObjectPrivs)) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMORestore
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

        //*** properties
    STDMETHOD(GetPercentCompleteNotification)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetPercentCompleteNotification)(THIS_ long NewValue) PURE;
    STDMETHOD(GetUnloadTapeAfter)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetUnloadTapeAfter)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetDatabase)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDatabase)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDevices)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDevices)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetFiles)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetFiles)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetTapes)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetTapes)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPipes)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPipes)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDatabaseFileGroups)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDatabaseFileGroups)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDatabaseFiles)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDatabaseFiles)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetAction)(THIS_ SQLDMO_RESTORE_TYPE * pRetVal) PURE;
    STDMETHOD(SetAction)(THIS_ SQLDMO_RESTORE_TYPE NewValue) PURE;
    STDMETHOD(GetBackupSetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetBackupSetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetRelocateFiles)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetRelocateFiles)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetReplaceDatabase)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetReplaceDatabase)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetLastRestore)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetLastRestore)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetRestart)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetRestart)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetMediaName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetMediaName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetLoadHistory)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetLoadHistory)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetFileNumber)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetFileNumber)(THIS_ long NewValue) PURE;
    STDMETHOD(GetToPointInTime)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetToPointInTime)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetStandbyFiles)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetStandbyFiles)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

    // Methods
    STDMETHOD(Abort)(THIS) PURE;
    STDMETHOD(SQLRestore)(THIS_ LPSQLDMOSERVER ServerObject) PURE;
    STDMETHOD(SQLVerify)(THIS_ LPSQLDMOSERVER ServerObject) PURE;
    STDMETHOD(GenerateSQL)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(ReadBackupHeader)(THIS_ LPSQLDMOSERVER ServerObject, LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(ReadFileList)(THIS_ LPSQLDMOSERVER ServerObject, LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(ReadMediaHeader)(THIS_ LPSQLDMOSERVER ServerObject, LPSQLDMOQUERYRESULTS *ppResults) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMORestoreSink
DECLARE_INTERFACE_(INTERFACE, IUnknown)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** Sink properties and methods.
    STDMETHOD(PercentComplete)(THIS_ SQLDMO_LPCSTR Message, long Percent) PURE;
    STDMETHOD(NextMedia)(THIS_ SQLDMO_LPCSTR Message) PURE;
    STDMETHOD(Complete)(THIS_ SQLDMO_LPCSTR Message) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOLinkedServers
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOLINKEDSERVER *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOLINKEDSERVER *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOLINKEDSERVER Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOLinkedServer
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetProductName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetProductName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetProviderName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetProviderName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDataSource)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDataSource)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetLocation)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetLocation)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetProviderString)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetProviderString)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetOptions)(THIS_ SQLDMO_SRVOPTION_TYPE *pRetVal) PURE;

    //*** collection properties
    STDMETHOD(GetLinkedServerLogins)(THIS_ LPSQLDMOLINKEDSERVERLOGINS * ppLinkedServerLogins) PURE;
    STDMETHOD(GetLinkedServerLoginByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOLINKEDSERVERLOGIN *ppLinkedServerLogin) PURE;
    STDMETHOD(GetLinkedServerLoginByOrd)(THIS_ long lOrdinal, LPSQLDMOLINKEDSERVERLOGIN *ppLinkedServerLogin) PURE;
    STDMETHOD(RemoveLinkedServerLoginByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveLinkedServerLoginByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddLinkedServerLogin)(THIS_ LPSQLDMOLINKEDSERVERLOGIN pLinkedServerLogin) PURE;
    STDMETHOD(GetLinkedServerLoginCount)(THIS_ LPLONG plCount) PURE;

    //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(ExecuteImmediate)(THIS_ SQLDMO_LPCSTR Command, long lLength CPPDEFAULT(= 0)) PURE;
    STDMETHOD(ExecuteWithResults)(THIS_ SQLDMO_LPCSTR Command, LPSQLDMOQUERYRESULTS *ppResults, long lLength CPPDEFAULT(= 0)) PURE;
    STDMETHOD(ExecuteWithResultsAndMessages)(THIS_ SQLDMO_LPCSTR Command, LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPBSTR ppszMessages CPPDEFAULT(= 0), long lLength CPPDEFAULT(= 0)) PURE;
    STDMETHOD(SetOptions)(THIS_ SQLDMO_SRVOPTION_TYPE Options, BOOL NewValue) PURE;

    STDMETHOD(GetCatalog)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetCatalog)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

    STDMETHOD(EnumTables)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPCSTR TableName CPPDEFAULT(= NULL), SQLDMO_LPCSTR SchemaName CPPDEFAULT(= NULL), SQLDMO_LPCSTR CatalogName CPPDEFAULT(= NULL), SQLDMO_LINKEDTABLE_TYPE TableType CPPDEFAULT(= SQLDMOLinkedTable_Default)) PURE;
    STDMETHOD(EnumColumns)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPCSTR TableName CPPDEFAULT(= NULL), SQLDMO_LPCSTR SchemaName CPPDEFAULT(= NULL), SQLDMO_LPCSTR CatalogName CPPDEFAULT(= NULL), SQLDMO_LPCSTR ColumnName CPPDEFAULT(= NULL)) PURE;

    STDMETHOD(GetDropLogins)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetDropLogins)(THIS_ BOOL NewValue) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOLinkedServerLogins
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOLINKEDSERVERLOGIN *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOLINKEDSERVERLOGIN *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOLINKEDSERVERLOGIN Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOLinkedServerLogin
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetLocalLogin)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetLocalLogin)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetRemoteUser)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetRemoteUser)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(SetRemotePassword)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetImpersonate)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetImpersonate)(THIS_ BOOL NewValue) PURE;

    //*** methods
    STDMETHOD(Remove)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOFullTextCatalogs
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOFULLTEXTCATALOG *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOFULLTEXTCATALOG *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOFULLTEXTCATALOG Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOFullTextCatalog
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetRootPath)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetRootPath)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetItemCount)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetPopulateStatus)(THIS_ SQLDMO_FULLTEXTSTATUS_TYPE *pRetVal) PURE;
    STDMETHOD(GetFullTextIndexSize)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetUniqueKeyCount)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetPopulateCompletionDate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetErrorLogSize)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetHasFullTextIndexedTables)(THIS_ LPBOOL pRetVal) PURE;

    //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Start)(THIS_ SQLDMO_FULLTEXT_START_TYPE StartType) PURE;
    STDMETHOD(Stop)(THIS) PURE;
    STDMETHOD(GenerateSQL)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
    STDMETHOD(Rebuild)(THIS) PURE;

    STDMETHOD(GetFullTextCatalogID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetPopulateCompletionAge)(THIS_ LPLONG pRetVal) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOFullTextService
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetStatus)(THIS_ SQLDMO_SVCSTATUS_TYPE *pRetVal) PURE;
    STDMETHOD(GetDefaultPath)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetResourceUsage)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetResourceUsage)(THIS_ long NewValue) PURE;
    STDMETHOD(GetConnectTimeout)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetConnectTimeout)(THIS_ long NewValue) PURE;
    STDMETHOD(GetIsFullTextInstalled)(THIS_ LPBOOL pRetVal) PURE;

    //*** methods
    STDMETHOD(Start)(THIS) PURE;
    STDMETHOD(Stop)(THIS) PURE;
    STDMETHOD(CleanUp)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////







////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOTransPublications
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOTRANSPUBLICATION *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTRANSPUBLICATION *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOTRANSPUBLICATION *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMOTRANSPUBLICATION Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;

	//*** Collection specific methods
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOTransPublication
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetDescription)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDescription)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetEnabled)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetEnabled)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetRetentionPeriod)(THIS_ LPDWORD pRetVal) PURE;
    STDMETHOD(SetRetentionPeriod)(THIS_ DWORD NewValue) PURE;
    STDMETHOD(GetSnapshotMethod)(THIS_ SQLDMO_INITIALSYNC_TYPE *pRetVal) PURE;
    STDMETHOD(SetSnapshotMethod)(THIS_ SQLDMO_INITIALSYNC_TYPE NewValue) PURE;
    STDMETHOD(GetSnapshotAvailable)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetSnapshotAvailable)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetSnapshotSchedule)(THIS_ LPSQLDMOSCHEDULE *ppSchedule) PURE;
    STDMETHOD(GetSnapshotJobID)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetPublicationAttributes)(THIS_ SQLDMO_PUBATTRIB_TYPE *pRetVal) PURE;
    STDMETHOD(SetPublicationAttributes)(THIS_ SQLDMO_PUBATTRIB_TYPE NewValue) PURE;
    STDMETHOD(GetHasSubscription)(THIS_ LPBOOL pRetVal) PURE;

    STDMETHOD(GetAllowSynchronousTransactions)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAllowSynchronousTransactions)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetAutogenerateSyncProcedures)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAutogenerateSyncProcedures)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetReplicationFrequency)(THIS_ SQLDMO_REPFREQ_TYPE *pRetVal) PURE;
    STDMETHOD(SetReplicationFrequency)(THIS_ SQLDMO_REPFREQ_TYPE NewValue) PURE;

	//*** Collection properties
    STDMETHOD(GetTransArticles)(THIS_ LPSQLDMOTRANSARTICLES * ppArticles) PURE;
    STDMETHOD(GetTransArticleByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTRANSARTICLE *ppArticle) PURE;
    STDMETHOD(GetTransArticleByOrd)(THIS_ long lOrdinal, LPSQLDMOTRANSARTICLE *ppArticle) PURE;
    STDMETHOD(RemoveTransArticleByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveTransArticleByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddTransArticle)(THIS_ LPSQLDMOTRANSARTICLE pArticle) PURE;
    STDMETHOD(GetTransArticleCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetTransSubscriptions)(THIS_ LPSQLDMOTRANSSUBSCRIPTIONS * ppSubscriptions) PURE;
    STDMETHOD(GetTransSubscriptionByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTRANSSUBSCRIPTION *ppSubscription) PURE;
    STDMETHOD(GetTransSubscriptionByOrd)(THIS_ long lOrdinal, LPSQLDMOTRANSSUBSCRIPTION *ppSubscription) PURE;
    STDMETHOD(RemoveTransSubscriptionByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveTransSubscriptionByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddTransSubscription)(THIS_ LPSQLDMOTRANSSUBSCRIPTION pSubscription) PURE;
    STDMETHOD(GetTransSubscriptionCount)(THIS_ LPLONG plCount) PURE;

	//*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(ActivateSubscriptions)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(EnumSubscriptions)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
	STDMETHOD(RefreshChildren)(THIS) PURE;
    STDMETHOD(ReInitializeAllSubscriptions)(THIS) PURE;
    STDMETHOD(EnumPublicationAccesses)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, BOOL bReturnGranted CPPDEFAULT(= TRUE)) PURE;
    STDMETHOD(GrantPublicationAccess)(THIS_ SQLDMO_LPCSTR szLoginName) PURE;
    STDMETHOD(RevokePublicationAccess)(THIS_ SQLDMO_LPCSTR szLoginName) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOTransArticles
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOTRANSARTICLE *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTRANSARTICLE *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOTRANSARTICLE *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMOTRANSARTICLE Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOTransArticle
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetSourceObjectOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSourceObjectOwner)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSourceObjectName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSourceObjectName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDescription)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDescription)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetReplicateAllColumns)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetSnapshotObjectOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSnapshotObjectOwner)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSnapshotObjectName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSnapshotObjectName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetArticleType)(THIS_ SQLDMO_ARTICLE_TYPE *pRetVal) PURE;
    STDMETHOD(SetArticleType)(THIS_ SQLDMO_ARTICLE_TYPE NewValue) PURE;
    STDMETHOD(GetInsertCommand)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetInsertCommand)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetUpdateCommand)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetUpdateCommand)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDeleteCommand)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDeleteCommand)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetReplicationFilterProcOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetReplicationFilterProcOwner)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetReplicationFilterProcName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetReplicationFilterProcName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetCreationScriptPath)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetCreationScriptPath)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDestinationOwnerName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDestinationOwnerName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDestinationObjectName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDestinationObjectName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPreCreationMethod)(THIS_ SQLDMO_PREARTICLE_TYPE *pRetVal) PURE;
    STDMETHOD(SetPreCreationMethod)(THIS_ SQLDMO_PREARTICLE_TYPE NewValue) PURE;
    STDMETHOD(GetFilterClause)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetFilterClause)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetCreationScriptOptions)(THIS_ SQLDMO_CREATIONSCRIPT_TYPE FAR * pRetVal) PURE;
    STDMETHOD(SetCreationScriptOptions)(THIS_ SQLDMO_CREATIONSCRIPT_TYPE NewValue) PURE;
    STDMETHOD(GetCommandOptions)(THIS_ SQLDMO_COMMANDOPTION_TYPE FAR * pRetVal) PURE;
    STDMETHOD(SetCommandOptions)(THIS_ SQLDMO_COMMANDOPTION_TYPE NewValue) PURE;

	//*** Collection Properties
    STDMETHOD(GetTransSubscriptions)(THIS_ LPSQLDMOTRANSSUBSCRIPTIONS * ppSubscriptions) PURE;
    STDMETHOD(GetTransSubscriptionByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTRANSSUBSCRIPTION *ppSubscription) PURE;
    STDMETHOD(GetTransSubscriptionByOrd)(THIS_ long lOrdinal, LPSQLDMOTRANSSUBSCRIPTION *ppSubscription) PURE;
    STDMETHOD(RemoveTransSubscriptionByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveTransSubscriptionByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddTransSubscription)(THIS_ LPSQLDMOTRANSSUBSCRIPTION pSubscription) PURE;
    STDMETHOD(GetTransSubscriptionCount)(THIS_ LPLONG plCount) PURE;

	//*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(ListReplicatedColumns)(THIS_ LPSQLDMOCOLUMNLIST *ppList) PURE;
    STDMETHOD(AddReplicatedColumns)(THIS_ SQLDMO_LPCSTR Columns) PURE;
    STDMETHOD(RemoveReplicatedColumns)(THIS_ SQLDMO_LPCSTR Columns) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(ScriptDestinationObject)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;

};

#undef INTERFACE
#define INTERFACE ISQLDMOTransSubscriptions
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOTRANSSUBSCRIPTION *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTRANSSUBSCRIPTION *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMOTRANSSUBSCRIPTION Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;

	//*** Collection specific methods
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOTransSubscription
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetSubscriber)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSubscriber)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSubscriptionDB)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSubscriptionDB)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSyncType)(THIS_ SQLDMO_SUBSYNC_TYPE *pRetVal) PURE;
    STDMETHOD(SetSyncType)(THIS_ SQLDMO_SUBSYNC_TYPE NewValue) PURE;
    STDMETHOD(GetStatus)(THIS_ SQLDMO_SUBSTATUS_TYPE *pRetVal) PURE;
    STDMETHOD(SetStatus)(THIS_ SQLDMO_SUBSTATUS_TYPE NewValue) PURE;
    STDMETHOD(GetFullSubscription)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetDistributionSchedule)(THIS_ LPSQLDMOSCHEDULE *ppDistributionSchedule) PURE;
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetSubscriptionType)(THIS_ SQLDMO_SUBSCRIPTION_TYPE *pRetVal) PURE;
    STDMETHOD(GetSubscriberType)(THIS_ SQLDMO_TRANSUBSCRIBER_TYPE *pRetVal) PURE;
    STDMETHOD(SetSubscriberType)(THIS_ SQLDMO_TRANSUBSCRIBER_TYPE NewValue) PURE;
    STDMETHOD(GetDistributionJobID)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetEnabledForSyncMgr)(THIS_ BOOL NewValue) PURE;

	//*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;

    STDMETHOD(ReInitialize)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOTransPullSubscriptions
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOTRANSPULLSUBSCRIPTION *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTRANSPULLSUBSCRIPTION *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMOTRANSPULLSUBSCRIPTION Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;

	//*** Collection specific methods
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOTransPullSubscription
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetPublisher)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPublisher)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPublicationDB)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPublicationDB)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPublication)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPublication)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDescription)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDescription)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSubscriptionType)(THIS_ SQLDMO_SUBSCRIPTION_TYPE *pRetVal) PURE;
    STDMETHOD(SetSubscriptionType)(THIS_ SQLDMO_SUBSCRIPTION_TYPE NewValue) PURE;
    STDMETHOD(GetSubscriberType)(THIS_ SQLDMO_TRANSUBSCRIBER_TYPE *pRetVal) PURE;
    STDMETHOD(SetSubscriberType)(THIS_ SQLDMO_TRANSUBSCRIBER_TYPE NewValue) PURE;
    STDMETHOD(GetDistributor)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDistributor)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPublisherSecurity)(THIS_ LPSQLDMOREPLICATIONSECURITY *ppPublisherSecurity) PURE;
    STDMETHOD(GetDistributorSecurity)(THIS_ LPSQLDMOREPLICATIONSECURITY *ppDistributorSecurity) PURE;
    STDMETHOD(SetSubscriberSecurityMode)(THIS_ SQLDMO_SECURITY_TYPE NewValue) PURE;
    STDMETHOD(SetSubscriberLogin)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(SetSubscriberPassword)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetEnabledForSyncMgr)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetEnabledForSyncMgr)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetFTPAddress)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetFTPAddress)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetFTPPort)(THIS_ LPDWORD pRetVal) PURE;
    STDMETHOD(SetFTPPort)(THIS_ DWORD NewValue) PURE;
    STDMETHOD(GetFTPLogin)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetFTPLogin)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(SetFTPPassword)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

    STDMETHOD(GetDistributionSchedule)(THIS_ LPSQLDMOSCHEDULE *ppDistributionSchedule) PURE;
    STDMETHOD(GetDistributionJobID)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetLastDistributionDate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetPublicationAttributes)(THIS_ SQLDMO_PUBATTRIB_TYPE *pRetVal) PURE;
    STDMETHOD(SetPublicationAttributes)(THIS_ SQLDMO_PUBATTRIB_TYPE NewValue) PURE;

	//*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(EnumJobInfo)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(ReInitialize)(THIS) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOMergePublications
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOMERGEPUBLICATION *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOMERGEPUBLICATION *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOMERGEPUBLICATION *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMOMERGEPUBLICATION Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;

    //*** Collection specific methods
	STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOMergePublication
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetID)(THIS_ long FAR* pRetVal) PURE;
    STDMETHOD(GetDescription)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDescription)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetEnabled)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetEnabled)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetRetentionPeriod)(THIS_ LPDWORD pRetVal) PURE;
    STDMETHOD(SetRetentionPeriod)(THIS_ DWORD NewValue) PURE;
    STDMETHOD(GetSnapshotMethod)(THIS_ SQLDMO_INITIALSYNC_TYPE *pRetVal) PURE;
    STDMETHOD(SetSnapshotMethod)(THIS_ SQLDMO_INITIALSYNC_TYPE NewValue) PURE;
    STDMETHOD(GetSnapshotAvailable)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetSnapshotAvailable)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetSnapshotSchedule)(THIS_ LPSQLDMOSCHEDULE *ppSchedule) PURE;
    STDMETHOD(GetSnapshotJobID)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetPublicationAttributes)(THIS_ SQLDMO_PUBATTRIB_TYPE *pRetVal) PURE;
    STDMETHOD(SetPublicationAttributes)(THIS_ SQLDMO_PUBATTRIB_TYPE NewValue) PURE;
    STDMETHOD(GetHasSubscription)(THIS_ LPBOOL pRetVal) PURE;

    STDMETHOD(GetCentralizedConflicts)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetCentralizedConflicts)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetPriority)(THIS_ float *pRetVal) PURE;
    STDMETHOD(GetDynamicFilters)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetDynamicFilters)(THIS_ BOOL NewValue) PURE;

	//*** Collection properties
    STDMETHOD(GetMergeArticles)(THIS_ LPSQLDMOMERGEARTICLES * ppMergeArticles) PURE;
    STDMETHOD(GetMergeArticleByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOMERGEARTICLE *ppMergeArticle) PURE;
    STDMETHOD(GetMergeArticleByOrd)(THIS_ long lOrdinal, LPSQLDMOMERGEARTICLE *ppMergeArticle) PURE;
    STDMETHOD(RemoveMergeArticleByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveMergeArticleByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddMergeArticle)(THIS_ LPSQLDMOMERGEARTICLE pMergeArticle) PURE;
    STDMETHOD(GetMergeArticleCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetMergeSubscriptions)(THIS_ LPSQLDMOMERGESUBSCRIPTIONS * ppMergeSubscriptions) PURE;
    STDMETHOD(GetMergeSubscriptionByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOMERGESUBSCRIPTION *ppMergeSubscription) PURE;
    STDMETHOD(GetMergeSubscriptionByOrd)(THIS_ long lOrdinal, LPSQLDMOMERGESUBSCRIPTION *ppMergeSubscription) PURE;
    STDMETHOD(RemoveMergeSubscriptionByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveMergeSubscriptionByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddMergeSubscription)(THIS_ LPSQLDMOMERGESUBSCRIPTION pMergeSubscription) PURE;
    STDMETHOD(GetMergeSubscriptionCount)(THIS_ LPLONG plCount) PURE;


	//*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(EnumSubscriptions)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
	STDMETHOD(RefreshChildren)(THIS) PURE;
    STDMETHOD(EnumPublicationReferences)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(ReInitializeAllSubscriptions)(THIS) PURE;
    STDMETHOD(EnumPublicationAccesses)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, BOOL bReturnGranted CPPDEFAULT(= TRUE)) PURE;
    STDMETHOD(GrantPublicationAccess)(THIS_ SQLDMO_LPCSTR szLoginName) PURE;
    STDMETHOD(RevokePublicationAccess)(THIS_ SQLDMO_LPCSTR szLoginName) PURE;
    STDMETHOD(GenerateFilters)(THIS) PURE;
    STDMETHOD(EnumGeneratedSubsetFilters)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPCSTR szArticle, SQLDMO_LPCSTR szSubsetFilterClause) PURE;
    STDMETHOD(EnumAllSubsetFilters)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOMergeArticles
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOMERGEARTICLE *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOMERGEARTICLE *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOMERGEARTICLE *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMOMERGEARTICLE Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOMergeArticle
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetSourceObjectOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSourceObjectOwner)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSourceObjectName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSourceObjectName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetStatus)(THIS_ SQLDMO_ARTSTATUS_TYPE *pRetVal) PURE;
    STDMETHOD(SetStatus)(THIS_ SQLDMO_ARTSTATUS_TYPE NewValue) PURE;
    STDMETHOD(GetDescription)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDescription)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetConflictTable)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetArticleResolver)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetArticleResolver)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSubsetFilterClause)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSubsetFilterClause)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPreCreationMethod)(THIS_ SQLDMO_PREARTICLE_TYPE FAR* pRetVal) PURE;
    STDMETHOD(SetPreCreationMethod)(THIS_ SQLDMO_PREARTICLE_TYPE NewValue) PURE;
    STDMETHOD(GetCreationScriptOptions)(THIS_ SQLDMO_CREATIONSCRIPT_TYPE FAR * pRetVal) PURE;
    STDMETHOD(SetCreationScriptOptions)(THIS_ SQLDMO_CREATIONSCRIPT_TYPE NewValue) PURE;
    STDMETHOD(GetArticleType)(THIS_ SQLDMO_ARTICLE_TYPE *pRetVal) PURE;
    STDMETHOD(SetArticleType)(THIS_ SQLDMO_ARTICLE_TYPE NewValue) PURE;
    STDMETHOD(GetColumnTracking)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetColumnTracking)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCreationScriptPath)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetCreationScriptPath)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSnapshotObjectOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetSnapshotObjectName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetResolverInfo)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetResolverInfo)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

	//*** Collection Properties
    STDMETHOD(GetMergeSubsetFilters)(THIS_ LPSQLDMOMERGESUBSETFILTERS * ppMergeSubsetFilters) PURE;
    STDMETHOD(GetMergeSubsetFilterByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOMERGESUBSETFILTER *ppMergeSubsetFilter) PURE;
    STDMETHOD(GetMergeSubsetFilterByOrd)(THIS_ long lOrdinal, LPSQLDMOMERGESUBSETFILTER *ppMergeSubsetFilter) PURE;
    STDMETHOD(RemoveMergeSubsetFilterByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveMergeSubsetFilterByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddMergeSubsetFilter)(THIS_ LPSQLDMOMERGESUBSETFILTER pMergeSubsetFilter) PURE;
    STDMETHOD(GetMergeSubsetFilterCount)(THIS_ LPLONG plCount) PURE;

	//*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(ScriptDestinationObject)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
    
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOMergeSubscriptions
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOMERGESUBSCRIPTION *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOMERGESUBSCRIPTION *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMOMERGESUBSCRIPTION Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;

	//*** Collection specific methods
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOMergeSubscription
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetSubscriber)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSubscriber)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSubscriptionDB)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSubscriptionDB)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetStatus)(THIS_ SQLDMO_SUBSTATUS_TYPE *pRetVal) PURE;
    STDMETHOD(SetStatus)(THIS_ SQLDMO_SUBSTATUS_TYPE NewValue) PURE;
    STDMETHOD(GetSubscriberType)(THIS_ SQLDMO_MERGESUBSCRIBER_TYPE *pRetVal) PURE;
    STDMETHOD(SetSubscriberType)(THIS_ SQLDMO_MERGESUBSCRIBER_TYPE NewValue) PURE;
    STDMETHOD(GetPriority)(THIS_ float *pRetVal) PURE;
    STDMETHOD(SetPriority)(THIS_ float NewValue) PURE;
    STDMETHOD(GetMergeSchedule)(THIS_ LPSQLDMOSCHEDULE *ppSchedule) PURE;
    STDMETHOD(GetSyncType)(THIS_ SQLDMO_SUBSYNC_TYPE *pRetVal) PURE;
    STDMETHOD(SetSyncType)(THIS_ SQLDMO_SUBSYNC_TYPE NewValue) PURE;
    STDMETHOD(GetSubscriptionType)(THIS_ SQLDMO_SUBSCRIPTION_TYPE *pRetVal) PURE;
    STDMETHOD(GetMergeJobID)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetDescription)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDescription)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(SetEnabledForSyncMgr)(THIS_ BOOL NewValue) PURE;

	//*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;

    STDMETHOD(ReInitialize)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOMergePullSubscriptions
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOMERGEPULLSUBSCRIPTION *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOMERGEPULLSUBSCRIPTION *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMOMERGEPULLSUBSCRIPTION Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;

	//*** Collection specific methods
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOMergePullSubscription
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetPublisher)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPublisher)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPublicationDB)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPublicationDB)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPublication)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPublication)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDescription)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDescription)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSubscriptionType)(THIS_ SQLDMO_SUBSCRIPTION_TYPE *pRetVal) PURE;
    STDMETHOD(SetSubscriptionType)(THIS_ SQLDMO_SUBSCRIPTION_TYPE NewValue) PURE;
    STDMETHOD(GetSubscriberType)(THIS_ SQLDMO_MERGESUBSCRIBER_TYPE *pRetVal) PURE;
    STDMETHOD(SetSubscriberType)(THIS_ SQLDMO_MERGESUBSCRIBER_TYPE NewValue) PURE;
    STDMETHOD(GetDistributor)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDistributor)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPublisherSecurity)(THIS_ LPSQLDMOREPLICATIONSECURITY *ppPublisherSecurity) PURE;
    STDMETHOD(GetDistributorSecurity)(THIS_ LPSQLDMOREPLICATIONSECURITY *ppDistributorSecurity) PURE;
    STDMETHOD(SetSubscriberSecurityMode)(THIS_ SQLDMO_SECURITY_TYPE NewValue) PURE;
    STDMETHOD(SetSubscriberLogin)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(SetSubscriberPassword)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetEnabledForSyncMgr)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetEnabledForSyncMgr)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetFTPAddress)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetFTPAddress)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetFTPPort)(THIS_ LPDWORD pRetVal) PURE;
    STDMETHOD(SetFTPPort)(THIS_ DWORD NewValue) PURE;
    STDMETHOD(GetFTPLogin)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetFTPLogin)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(SetFTPPassword)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

    STDMETHOD(GetMergeSchedule)(THIS_ LPSQLDMOSCHEDULE *ppMergeSchedule) PURE;
    STDMETHOD(GetMergeJobID)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetSyncType)(THIS_ SQLDMO_SUBSYNC_TYPE *pRetVal) PURE;
    STDMETHOD(SetSyncType)(THIS_ SQLDMO_SUBSYNC_TYPE NewValue) PURE;
    STDMETHOD(GetPriority)(THIS_ float *pRetVal) PURE;
    STDMETHOD(SetPriority)(THIS_ float NewValue) PURE;

	//*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(EnumJobInfo)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(ReInitialize)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOMergeSubsetFilters
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOMERGESUBSETFILTER *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOMERGESUBSETFILTER *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOMERGESUBSETFILTER *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMOMERGESUBSETFILTER Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;

};

#undef INTERFACE
#define INTERFACE ISQLDMOMergeSubsetFilter
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetJoinArticleName)(THIS_ LPBSTR pRetVal) PURE;
    STDMETHOD(SetJoinArticleName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetJoinFilterClause)(THIS_ LPBSTR pRetVal) PURE;
    STDMETHOD(SetJoinFilterClause)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetJoinUniqueKey)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetJoinUniqueKey)(THIS_ BOOL NewValue) PURE;

	//*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
};


////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMODistributionPublishers
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMODISTRIBUTIONPUBLISHER *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODISTRIBUTIONPUBLISHER *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMODISTRIBUTIONPUBLISHER Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;

	//*** Collection specific methods
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMODistributionPublisher
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDistributionDatabase)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDistributionDatabase)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPublisherSecurity)(THIS_ LPSQLDMOREPLICATIONSECURITY *ppPublisherSecurity) PURE;
    STDMETHOD(GetEnabled)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetDistributionWorkingDirectory)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDistributionWorkingDirectory)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetTrustedDistributorConnection)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetTrustedDistributorConnection)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetThirdParty)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetThirdParty)(THIS_ BOOL NewValue) PURE;

	//*** collection properties
    STDMETHOD(GetDistributionPublications)(THIS_ LPSQLDMODISTRIBUTIONPUBLICATIONS * ppDistributionPublications) PURE;
    STDMETHOD(GetDistributionPublicationByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODISTRIBUTIONPUBLICATION *ppDistributionPublication, SQLDMO_LPCSTR szPubDB CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetDistributionPublicationByOrd)(THIS_ long lOrdinal, LPSQLDMODISTRIBUTIONPUBLICATION *ppDistributionPublication) PURE;
    STDMETHOD(RemoveDistributionPublicationByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveDistributionPublicationByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddDistributionPublication)(THIS_ LPSQLDMODISTRIBUTIONPUBLICATION pDistributionPublication) PURE;
    STDMETHOD(GetDistributionPublicationCount)(THIS_ LPLONG plCount) PURE;

	//*** Collection properties
    STDMETHOD(GetRegisteredSubscribers)(THIS_ LPSQLDMOREGISTEREDSUBSCRIBERS * ppRegisteredSubscribers) PURE;
    STDMETHOD(GetRegisteredSubscriberByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREGISTEREDSUBSCRIBER *ppRegisteredSubscriber) PURE;
    STDMETHOD(GetRegisteredSubscriberByOrd)(THIS_ long lOrdinal, LPSQLDMOREGISTEREDSUBSCRIBER *ppRegisteredSubscriber) PURE;
    STDMETHOD(RemoveRegisteredSubscriberByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveRegisteredSubscriberByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddRegisteredSubscriber)(THIS_ LPSQLDMOREGISTEREDSUBSCRIBER pRegisteredSubscriber) PURE;
    STDMETHOD(GetRegisteredSubscriberCount)(THIS_ LPLONG plCount) PURE;

    //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;

	/* Monitoring methods */
    STDMETHOD(EnumSnapshotAgentSessions)(THIS_ SQLDMO_LPCSTR AgentName, SQLDMO_SESSION_TYPE SessionType,  long SessionDuration, LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumLogReaderAgentSessions)(THIS_ SQLDMO_LPCSTR AgentName, SQLDMO_SESSION_TYPE SessionType,  long SessionDuration, LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumDistributionAgentSessions)(THIS_ SQLDMO_LPCSTR AgentName, SQLDMO_SESSION_TYPE SessionType,  long SessionDuration, LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumMergeAgentSessions)(THIS_ SQLDMO_LPCSTR AgentName, SQLDMO_SESSION_TYPE SessionType,  long SessionDuration, LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumSnapshotAgentSessionDetails)(THIS_ SQLDMO_LPCSTR AgentName, SQLDMO_LPCSTR SessionID, LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumLogReaderAgentSessionDetails)(THIS_ SQLDMO_LPCSTR AgentName, SQLDMO_LPCSTR SessionID,  LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumDistributionAgentSessionDetails)(THIS_ SQLDMO_LPCSTR AgentName,  SQLDMO_LPCSTR SessionID, LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumMergeAgentSessionDetails)(THIS_ SQLDMO_LPCSTR AgentName,  SQLDMO_LPCSTR SessionID, LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumAgentErrorRecords)(THIS_ LONG ErrorID, LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(GetAgentsStatus)(THIS_ SQLDMO_TASKSTATUS_TYPE *pRetVal, SQLDMO_LPBSTR pRetValTimeStamp CPPDEFAULT(= NULL)) PURE;    
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMORegisteredSubscribers
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOREGISTEREDSUBSCRIBER *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREGISTEREDSUBSCRIBER *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMOREGISTEREDSUBSCRIBER Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;

	//*** Collection specific methods
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMORegisteredSubscriber
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetType)(THIS_ SQLDMO_SUBSCRIBER_TYPE *pRetVal) PURE;
    STDMETHOD(SetType)(THIS_ SQLDMO_SUBSCRIBER_TYPE NewValue) PURE;
    STDMETHOD(GetDescription)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDescription)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetReplicationSecurity)(THIS_ LPSQLDMOREPLICATIONSECURITY *ppReplicationSecurity) PURE;
    STDMETHOD(GetDefaultDistributionSchedule)(THIS_ LPSQLDMOSCHEDULE *ppDistributionSchedule) PURE;
    STDMETHOD(GetDefaultMergeSchedule)(THIS_ LPSQLDMOSCHEDULE *ppMergeSchedule) PURE;

	//*** methods
    STDMETHOD(Remove)(THIS) PURE;
	STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;

};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOReplicationDatabases
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOREPLICATIONDATABASE *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREPLICATIONDATABASE *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOREPLICATIONDATABASE *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods 
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;

	//*** Collection specific methods
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOReplicationDatabase
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(GetEnableTransPublishing)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetEnableTransPublishing)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetEnableMergePublishing)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetEnableMergePublishing)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetDBOwner)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetAllowMergePublication)(THIS_ LPBOOL pRetVal) PURE;

	//*** Collection properties
    STDMETHOD(GetReplicationTables)(THIS_ LPSQLDMOREPLICATIONTABLES * ppReplicationTables) PURE;
    STDMETHOD(GetReplicationTableByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREPLICATIONTABLE *ppReplicationTable, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetReplicationTableByOrd)(THIS_ long lOrdinal, LPSQLDMOREPLICATIONTABLE *ppReplicationTable) PURE;
    STDMETHOD(GetReplicationTableCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetReplicationStoredProcedures)(THIS_ LPSQLDMOREPLICATIONSTOREDPROCEDURES * ppReplicationStoredProcedures) PURE;
    STDMETHOD(GetReplicationStoredProcedureByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREPLICATIONSTOREDPROCEDURE *ppReplicationStoredProcedure, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(GetReplicationStoredProcedureByOrd)(THIS_ long lOrdinal, LPSQLDMOREPLICATIONSTOREDPROCEDURE *ppReplicationStoredProcedure) PURE;
    STDMETHOD(GetReplicationStoredProcedureCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetTransPublications)(THIS_ LPSQLDMOTRANSPUBLICATIONS * ppTransPublications) PURE;
    STDMETHOD(GetTransPublicationByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTRANSPUBLICATION *ppTransPublication) PURE;
    STDMETHOD(GetTransPublicationByOrd)(THIS_ long lOrdinal, LPSQLDMOTRANSPUBLICATION *ppTransPublication) PURE;
    STDMETHOD(RemoveTransPublicationByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveTransPublicationByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddTransPublication)(THIS_ LPSQLDMOTRANSPUBLICATION pTransPublication) PURE;
    STDMETHOD(GetTransPublicationCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetMergePublications)(THIS_ LPSQLDMOMERGEPUBLICATIONS * ppMergePublications) PURE;
    STDMETHOD(GetMergePublicationByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOMERGEPUBLICATION *ppMergePublication) PURE;
    STDMETHOD(GetMergePublicationByOrd)(THIS_ long lOrdinal, LPSQLDMOMERGEPUBLICATION *ppMergePublication) PURE;
    STDMETHOD(RemoveMergePublicationByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveMergePublicationByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddMergePublication)(THIS_ LPSQLDMOMERGEPUBLICATION pMergePublication) PURE;
    STDMETHOD(GetMergePublicationCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetTransPullSubscriptions)(THIS_ LPSQLDMOTRANSPULLSUBSCRIPTIONS * ppTransPullSubscriptions) PURE;
    STDMETHOD(GetTransPullSubscriptionByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTRANSPULLSUBSCRIPTION *ppTransPullSubscription) PURE;
    STDMETHOD(GetTransPullSubscriptionByOrd)(THIS_ long lOrdinal, LPSQLDMOTRANSPULLSUBSCRIPTION *ppTransPullSubscription) PURE;
    STDMETHOD(RemoveTransPullSubscriptionByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveTransPullSubscriptionByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddTransPullSubscription)(THIS_ LPSQLDMOTRANSPULLSUBSCRIPTION pTransPullSubscription) PURE;
    STDMETHOD(GetTransPullSubscriptionCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetMergePullSubscriptions)(THIS_ LPSQLDMOMERGEPULLSUBSCRIPTIONS * ppMergePullSubscriptions) PURE;
    STDMETHOD(GetMergePullSubscriptionByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOMERGEPULLSUBSCRIPTION *ppMergePullSubscription) PURE;
    STDMETHOD(GetMergePullSubscriptionByOrd)(THIS_ long lOrdinal, LPSQLDMOMERGEPULLSUBSCRIPTION *ppMergePullSubscription) PURE;
    STDMETHOD(RemoveMergePullSubscriptionByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveMergePullSubscriptionByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddMergePullSubscription)(THIS_ LPSQLDMOMERGEPULLSUBSCRIPTION pMergePullSubscription) PURE;
    STDMETHOD(GetMergePullSubscriptionCount)(THIS_ LPLONG plCount) PURE;

	//*** Methods

	//*** Used to setup the publisher side handshake for PULL subscriptions
	STDMETHOD(EnableTransSubscription)(SQLDMO_LPCSTR Subscriber, SQLDMO_LPCSTR SubscriptionDatabase,
		SQLDMO_LPCSTR Publication, SQLDMO_SUBSCRIPTION_TYPE SubscriptionType CPPDEFAULT(= SQLDMOSubscription_Pull), 
		SQLDMO_SUBSYNC_TYPE SyncType CPPDEFAULT(= SQLDMOSubSync_Auto), 
		SQLDMO_TRANSUBSCRIBER_TYPE SubscriberType CPPDEFAULT(= SQLDMOTranSubscriber_ReadOnly)) PURE;
	STDMETHOD(DisableTransSubscription)(SQLDMO_LPCSTR Subscriber, SQLDMO_LPCSTR SubscriptionDatabase, SQLDMO_LPCSTR Publication) PURE;
	STDMETHOD(EnableMergeSubscription)(SQLDMO_LPCSTR Subscriber, SQLDMO_LPCSTR SubscriptionDatabase,
		SQLDMO_LPCSTR Publication, SQLDMO_SUBSCRIPTION_TYPE SubscriptionType CPPDEFAULT(= SQLDMOSubscription_Pull), 
		SQLDMO_SUBSYNC_TYPE SyncType CPPDEFAULT(= SQLDMOSubSync_Auto), 
		SQLDMO_MERGESUBSCRIBER_TYPE SubscriberType CPPDEFAULT(= SQLDMOMergeSubscriber_Local), 
		float SubscriptionPriority CPPDEFAULT(= 0.0)) PURE;
	STDMETHOD(DisableMergeSubscription)(SQLDMO_LPCSTR Subscriber, SQLDMO_LPCSTR SubscriptionDatabase, SQLDMO_LPCSTR Publication) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
	STDMETHOD(RefreshChildren)(THIS) PURE;
	STDMETHOD(EnumConflictTables)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPCSTR Publication CPPDEFAULT(= NULL)) PURE;
	STDMETHOD(EnumInitialAccesses)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMODistributionDatabases
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMODISTRIBUTIONDATABASE *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODISTRIBUTIONDATABASE *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMODISTRIBUTIONDATABASE Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;

	//*** Collection specific methods
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMODistributionDatabase
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetMinDistributionRetention)(THIS_ LPDWORD pRetVal) PURE;
    STDMETHOD(SetMinDistributionRetention)(THIS_ DWORD NewValue) PURE;
    STDMETHOD(GetMaxDistributionRetention)(THIS_ LPDWORD pRetVal) PURE;
    STDMETHOD(SetMaxDistributionRetention)(THIS_ DWORD NewValue) PURE;
    STDMETHOD(GetHistoryRetention)(THIS_ LPDWORD pRetVal) PURE;
    STDMETHOD(SetHistoryRetention)(THIS_ DWORD NewValue) PURE;
    STDMETHOD(GetHistoryCleanupTaskName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetDistributionCleanupTaskName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetAgentsStatus)(THIS_ SQLDMO_TASKSTATUS_TYPE *pRetVal) PURE;
    STDMETHOD(GetDataFolder)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDataFolder)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDataFile)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDataFile)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDataFileSize)(THIS_ LPDWORD pRetVal) PURE;
    STDMETHOD(SetDataFileSize)(THIS_ DWORD NewValue) PURE;
    STDMETHOD(GetLogFolder)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetLogFolder)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetLogFile)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetLogFile)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetLogFileSize)(THIS_ LPDWORD pRetVal) PURE;
    STDMETHOD(SetLogFileSize)(THIS_ DWORD NewValue) PURE;
    STDMETHOD(SetSecurityMode)(THIS_ SQLDMO_SECURITY_TYPE NewValue) PURE;
    STDMETHOD(SetStandardLogin)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(SetStandardPassword)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

	//*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOReplication
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetPublisher)(THIS_ LPSQLDMOPUBLISHER *pPublisher) PURE;
    STDMETHOD(GetSubscriber)(THIS_ LPSQLDMOSUBSCRIBER *pSubscriber) PURE;
    STDMETHOD(GetDistributor)(THIS_ LPSQLDMODISTRIBUTOR *pDistributor) PURE;

	//*** Collection properties
    STDMETHOD(GetReplicationDatabases)(THIS_ LPSQLDMOREPLICATIONDATABASES * ppReplicationDatabases) PURE;
    STDMETHOD(GetReplicationDatabaseByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREPLICATIONDATABASE *ppReplicationDatabase) PURE;
    STDMETHOD(GetReplicationDatabaseByOrd)(THIS_ long lOrdinal, LPSQLDMOREPLICATIONDATABASE *ppReplicationDatabase) PURE;
    STDMETHOD(GetReplicationDatabaseCount)(THIS_ LPLONG plCount) PURE;

   	//*** methods
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
	STDMETHOD(EnumDataSourceNames)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(Uninstall)(THIS_ BOOL bIgnoreDistributor CPPDEFAULT(= FALSE)) PURE;
	STDMETHOD(EnumCustomResolvers)(THIS_ SQLDMO_LPCSTR Distributor, LPSQLDMOQUERYRESULTS *ppResults) PURE;
	STDMETHOD(ValidateDataSource)(THIS_ SQLDMO_LPCSTR DataSourceName, SQLDMO_LPCSTR Login, SQLDMO_LPCSTR Password, SQLDMO_SUBSCRIBER_TYPE SubscriberType CPPDEFAULT(= SQLDMOSubInfo_ODBCDatasource)) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOPublisher
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** Collection properties
    STDMETHOD(GetRegisteredSubscribers)(THIS_ LPSQLDMOREGISTEREDSUBSCRIBERS * ppRegisteredSubscribers) PURE;
    STDMETHOD(GetRegisteredSubscriberByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREGISTEREDSUBSCRIBER *ppRegisteredSubscriber) PURE;
    STDMETHOD(GetRegisteredSubscriberByOrd)(THIS_ long lOrdinal, LPSQLDMOREGISTEREDSUBSCRIBER *ppRegisteredSubscriber) PURE;
    STDMETHOD(RemoveRegisteredSubscriberByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveRegisteredSubscriberByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddRegisteredSubscriber)(THIS_ LPSQLDMOREGISTEREDSUBSCRIBER pRegisteredSubscriber) PURE;
    STDMETHOD(GetRegisteredSubscriberCount)(THIS_ LPLONG plCount) PURE;

   	//*** methods
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(Uninstall)(THIS) PURE;
    STDMETHOD(EnumPublications)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_REPLICATION_TYPE ReplicationType CPPDEFAULT(= SQLDMORepType_TransactionalMerge), SQLDMO_LPCSTR DatabaseName CPPDEFAULT(= NULL), SQLDMO_LPCSTR AgentLogin CPPDEFAULT(= NULL), BOOL bSecurityCheck CPPDEFAULT(= FALSE)) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOSubscriber
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** methods
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMODistributor
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
	STDMETHOD(GetDistributorInstalled)(THIS_ LPBOOL pbDistributorInstalled) PURE;
	STDMETHOD(GetDistributorAvailable)(THIS_ LPBOOL pbDistributorAvailable) PURE;
	STDMETHOD(GetDistributorLocal)(THIS_ LPBOOL pbDistributorLocal) PURE;
    STDMETHOD(GetDistributionServer)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDistributionServer)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDistributionDatabase)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetAgentCheckupInterval)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetAgentCheckupInterval)(THIS_ long lVal) PURE;
	STDMETHOD(GetIsDistributionPublisher)(THIS_ LPBOOL pIsDistributionPublisher) PURE;
	STDMETHOD(GetHasRemoteDistributionPublisher)(THIS_ LPBOOL pHasRemoteDistributionPublisher) PURE;

	//*** Collection properties
    STDMETHOD(GetDistributionPublishers)(THIS_ LPSQLDMODISTRIBUTIONPUBLISHERS * ppDistributionPublishers) PURE;
    STDMETHOD(GetDistributionPublisherByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODISTRIBUTIONPUBLISHER *ppDistributionPublisher) PURE;
    STDMETHOD(GetDistributionPublisherByOrd)(THIS_ long lOrdinal, LPSQLDMODISTRIBUTIONPUBLISHER *ppDistributionPublisher) PURE;
    STDMETHOD(RemoveDistributionPublisherByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveDistributionPublisherByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddDistributionPublisher)(THIS_ LPSQLDMODISTRIBUTIONPUBLISHER pDistributionPublisher) PURE;
    STDMETHOD(GetDistributionPublisherCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetDistributionDatabases)(THIS_ LPSQLDMODISTRIBUTIONDATABASES * ppDistributionDatabases) PURE;
    STDMETHOD(GetDistributionDatabaseByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODISTRIBUTIONDATABASE *ppDistributionDatabase) PURE;
    STDMETHOD(GetDistributionDatabaseByOrd)(THIS_ long lOrdinal, LPSQLDMODISTRIBUTIONDATABASE *ppDistributionDatabase) PURE;
    STDMETHOD(RemoveDistributionDatabaseByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveDistributionDatabaseByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddDistributionDatabase)(THIS_ LPSQLDMODISTRIBUTIONDATABASE pDistributionDatabase) PURE;
    STDMETHOD(GetDistributionDatabaseCount)(THIS_ LPLONG plCount) PURE;

   	//*** methods
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(Install)(THIS) PURE;
    STDMETHOD(Uninstall)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_REPSCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMORepScript_InstallDistributor), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL)) PURE;

    STDMETHOD(EnumSnapshotAgentViews)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumLogReaderAgentViews)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumDistributionAgentViews)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumMergeAgentViews)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumMiscellaneousAgentViews)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(CreateAgentProfile)(THIS_ SQLDMO_LPCSTR szName, SQLDMO_LPCSTR szDescription, SQLDMO_REPLAGENT_TYPE AgentType, long *plProfileID) PURE;
    STDMETHOD(DeleteAgentProfile)(THIS_ long lProfileID) PURE;
    STDMETHOD(ChangeAgentProfile)(THIS_ long lProfileID, SQLDMO_LPCSTR szDescription) PURE;
    STDMETHOD(EnumAgentProfiles)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_REPLAGENT_TYPE AgentType CPPDEFAULT(= SQLDMOReplAgent_All)) PURE;
    STDMETHOD(ChangeAgentParameter)(THIS_ long lProfileID, SQLDMO_LPCSTR szParameterName, SQLDMO_LPCSTR szParameterValue) PURE;
    STDMETHOD(EnumAgentParameters)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, long lProfileID) PURE;
    STDMETHOD(UpdateAgentProfile)(THIS_ SQLDMO_LPCSTR DistributionDBName, SQLDMO_REPLAGENT_TYPE AgentType, long lAgentID, long lProfileID) PURE;
    STDMETHOD(UpdateDefaultAgentProfile)(THIS_ long lProfileID) PURE;
    STDMETHOD(GetAgentsStatus)(THIS_ SQLDMO_REPLAGENT_TYPE AgentType, SQLDMO_TASKSTATUS_TYPE *pRetValStatus, SQLDMO_LPBSTR pRetValTimeStamp CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(CleanUpDistributionPublisherByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(SetUpDistributorPassword)(THIS_ SQLDMO_LPCSTR pszPassword) PURE;
    STDMETHOD(EnumThirdPartyPublications)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, LPCTSTR DistributionDBName CPPDEFAULT(= NULL)) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOReplicationSecurity
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    STDMETHOD(GetSecurityMode)(THIS_ SQLDMO_REPLSECURITY_TYPE *pRetVal) PURE;
    STDMETHOD(SetSecurityMode)(THIS_ SQLDMO_REPLSECURITY_TYPE NewValue) PURE;
    STDMETHOD(GetStandardLogin)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetStandardLogin)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetStandardPassword)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetStandardPassword)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOReplicationTables
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOREPLICATIONTABLE *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREPLICATIONTABLE *ppObj, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE

#define INTERFACE ISQLDMOReplicationTable
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(GetOwner)(THIS_ SQLDMO_LPBSTR pbstrOwner) PURE;
    STDMETHOD(GetHasPrimaryKey)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetHasGuidColumn)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetHasTimeStampColumn)(THIS_ LPBOOL pRetVal) PURE;

	//*** Collection properties
    STDMETHOD(GetColumns)(THIS_ LPSQLDMOCOLUMNS * ppColumns) PURE;
    STDMETHOD(GetColumnByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOCOLUMN *ppColumn) PURE;
    STDMETHOD(GetColumnByOrd)(THIS_ long lOrdinal, LPSQLDMOCOLUMN *ppColumn) PURE;
    STDMETHOD(GetColumnCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(EnumPublicationArticles)(THIS_ LPSQLDMOQUERYRESULTS *ppResults CPPDEFAULT(= NULL)) PURE;

};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOReplicationStoredProcedures
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOREPLICATIONSTOREDPROCEDURE *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOREPLICATIONSTOREDPROCEDURE *ppObj, SQLDMO_LPCSTR szOwner CPPDEFAULT(= NULL)) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE

#define INTERFACE ISQLDMOReplicationStoredProcedure
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pbstrName) PURE;
    STDMETHOD(GetSystemObject)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetOwner)(THIS_ SQLDMO_LPBSTR pbstrOwner) PURE;

   	STDMETHOD(EnumPublicationArticles)(THIS_ LPSQLDMOQUERYRESULTS *ppResults CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(EnumDependencies)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_DEPENDENCY_TYPE DependencyType CPPDEFAULT(= SQLDMODep_Parents)) PURE;

};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE

#define INTERFACE ISQLDMODistributionPublications
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMODISTRIBUTIONPUBLICATION *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODISTRIBUTIONPUBLICATION *ppObj, SQLDMO_LPCSTR szPubDB CPPDEFAULT(= NULL)) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMODISTRIBUTIONPUBLICATION Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE

#define INTERFACE ISQLDMODistributionPublication
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** Object properties
    STDMETHOD(GetName)(THIS_ LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetPublicationDB)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPublicationDB)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPublicationType)(THIS_ SQLDMO_PUBLICATION_TYPE FAR* pRetVal) PURE;
    STDMETHOD(SetPublicationType)(THIS_ SQLDMO_PUBLICATION_TYPE NewValue) PURE;
    STDMETHOD(GetPublicationAttributes)(THIS_ SQLDMO_PUBATTRIB_TYPE *pRetVal) PURE;
    STDMETHOD(SetPublicationAttributes)(THIS_ SQLDMO_PUBATTRIB_TYPE NewValue) PURE;
    STDMETHOD(GetSnapshotAgent)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSnapshotAgent)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetLogReaderAgent)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetLogReaderAgent)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDescription)(THIS_ LPBSTR pRetVal) PURE;
    STDMETHOD(SetDescription)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetVendorName)(THIS_ LPBSTR pRetVal) PURE;
    STDMETHOD(SetVendorName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

	//*** Collection properties
    STDMETHOD(GetDistributionArticles)(THIS_ LPSQLDMODISTRIBUTIONARTICLES * ppDistributionArticles) PURE;
    STDMETHOD(GetDistributionArticleByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODISTRIBUTIONARTICLE *ppDistributionArticle) PURE;
    STDMETHOD(GetDistributionArticleByOrd)(THIS_ long lOrdinal, LPSQLDMODISTRIBUTIONARTICLE *ppDistributionArticle) PURE;
    STDMETHOD(RemoveDistributionArticleByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveDistributionArticleByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddDistributionArticle)(THIS_ LPSQLDMODISTRIBUTIONARTICLE pDistributionArticle) PURE;
    STDMETHOD(GetDistributionArticleCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetDistributionSubscriptions)(THIS_ LPSQLDMODISTRIBUTIONSUBSCRIPTIONS * ppDistributionSubscriptions) PURE;
    STDMETHOD(GetDistributionSubscriptionByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODISTRIBUTIONSUBSCRIPTION *ppDistributionSubscription) PURE;
    STDMETHOD(GetDistributionSubscriptionByOrd)(THIS_ long lOrdinal, LPSQLDMODISTRIBUTIONSUBSCRIPTION *ppDistributionSubscription) PURE;
    STDMETHOD(RemoveDistributionSubscriptionByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveDistributionSubscriptionByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddDistributionSubscription)(THIS_ LPSQLDMODISTRIBUTIONSUBSCRIPTION pDistributionSubscription) PURE;
    STDMETHOD(GetDistributionSubscriptionCount)(THIS_ LPLONG plCount) PURE;

	//*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(EnumSubscriptionViews)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumSnapshotAgentView)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(EnumLogReaderAgentView)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(GetAgentsStatus)(THIS_ SQLDMO_TASKSTATUS_TYPE FAR* pRetValStatus, SQLDMO_LPBSTR pRetValTimeStamp CPPDEFAULT(= NULL)) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMODistributionArticles
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMODISTRIBUTIONARTICLE *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODISTRIBUTIONARTICLE *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMODISTRIBUTIONARTICLE *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMODISTRIBUTIONARTICLE Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMODistributionArticle
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetSourceObjectOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSourceObjectOwner)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSourceObjectName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSourceObjectName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDescription)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDescription)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

	//*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;

};

#undef INTERFACE
#define INTERFACE ISQLDMODistributionSubscriptions
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMODISTRIBUTIONSUBSCRIPTION *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMODISTRIBUTIONSUBSCRIPTION *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
	STDMETHOD(Add)(THIS_ LPSQLDMODISTRIBUTIONSUBSCRIPTION Object) PURE;
	STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
	STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
	STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;

};

#undef INTERFACE
#define INTERFACE ISQLDMODistributionSubscription
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

	//*** properties
    STDMETHOD(GetName)(THIS_ LPBSTR pRetVal) PURE;
    STDMETHOD(GetSubscriber)(THIS_ LPBSTR pRetVal) PURE;
    STDMETHOD(SetSubscriber)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetSubscriptionDB)(THIS_ LPBSTR pRetVal) PURE;
    STDMETHOD(SetSubscriptionDB)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetStatus)(THIS_ SQLDMO_SUBSTATUS_TYPE FAR* pRetVal) PURE;
    STDMETHOD(SetStatus)(THIS_ SQLDMO_SUBSTATUS_TYPE NewValue) PURE;
    STDMETHOD(GetSyncType)(THIS_ SQLDMO_SUBSYNC_TYPE FAR* pRetVal) PURE;
    STDMETHOD(SetSyncType)(THIS_ SQLDMO_SUBSYNC_TYPE NewValue) PURE;
    STDMETHOD(GetSubscriptionType)(THIS_ SQLDMO_SUBSCRIPTION_TYPE *pRetVal) PURE;
    STDMETHOD(SetSubscriptionType)(THIS_ SQLDMO_SUBSCRIPTION_TYPE NewValue) PURE;
    STDMETHOD(GetDistributionSchedule)(THIS_ LPSQLDMOSCHEDULE *ppDistributionSchedule) PURE;
    STDMETHOD(GetDistributionAgent)(THIS_ LPBSTR pRetVal) PURE;

	//*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
};


#undef INTERFACE
#define INTERFACE ISQLDMOReplicationSink
DECLARE_INTERFACE_(INTERFACE, IUnknown)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** Sink properties and methods.
    STDMETHOD(StatusMessage)(THIS_ SQLDMO_LPCSTR szMessage) PURE;
    STDMETHOD(PercentComplete)(THIS_ SQLDMO_LPCSTR szMessage, long Percent) PURE;
};












////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOJobServer
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetStatus)(THIS_ SQLDMO_SVCSTATUS_TYPE *pRetVal) PURE;
    STDMETHOD(GetAutoStart)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetAutoStart)(THIS_ BOOL NewValue) PURE;
//    STDMETHOD(GetSQLServerRestart)(THIS_ LPBOOL pRetVal) PURE;
//    STDMETHOD(SetSQLServerRestart)(THIS_ BOOL NewValue) PURE;
//    STDMETHOD(GetSQLServerRestartInterval)(THIS_ LPLONG pRetVal) PURE;
//    STDMETHOD(SetSQLServerRestartInterval)(THIS_ long NewValue) PURE;
//    STDMETHOD(GetJobHistoryMaxRows)(THIS_ LPLONG pRetVal) PURE;
//    STDMETHOD(SetJobHistoryMaxRows)(THIS_ long NewValue) PURE;
    STDMETHOD(GetAlertSystem)(THIS_ LPSQLDMOALERTSYSTEM * ppAlertSystem) PURE;
    STDMETHOD(GetJobFilter)(THIS_ LPSQLDMOJOBFILTER * ppJobFilter) PURE;
    STDMETHOD(GetJobHistoryFilter)(THIS_ LPSQLDMOJOBHISTORYFILTER * ppJobHistoryFilter) PURE;
    STDMETHOD(GetMSXServerName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetType)(THIS_ SQLDMO_JOBSERVER_TYPE * pRetVal) PURE;
    STDMETHOD(GetStartupAccount)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;

    //*** Collection properties
    STDMETHOD(GetAlerts)(THIS_ LPSQLDMOALERTS *ppAlerts) PURE;
    STDMETHOD(GetAlertByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOALERT *ppAlert) PURE;
    STDMETHOD(GetAlertByOrd)(THIS_ long lOrdinal, LPSQLDMOALERT *ppAlert) PURE;
    STDMETHOD(RemoveAlertByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveAlertByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddAlert)(THIS_ LPSQLDMOALERT pAlert) PURE;
    STDMETHOD(GetAlertCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetOperators)(THIS_ LPSQLDMOOPERATORS *ppOperators) PURE;
    STDMETHOD(GetOperatorByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOOPERATOR *ppOperator) PURE;
    STDMETHOD(GetOperatorByOrd)(THIS_ long lOrdinal, LPSQLDMOOPERATOR *ppOperator) PURE;
    STDMETHOD(RemoveOperatorByName)(THIS_ SQLDMO_LPCSTR szName, SQLDMO_LPCSTR szReassignName CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(RemoveOperatorByOrd)(THIS_ long lOrdinal, SQLDMO_LPCSTR szReassignName CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(AddOperator)(THIS_ LPSQLDMOOPERATOR pOperator) PURE;
    STDMETHOD(GetOperatorCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetJobs)(THIS_ LPSQLDMOJOBS * ppJobs) PURE;
    STDMETHOD(GetJobByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOJOB *ppJob) PURE;
    STDMETHOD(GetJobByOrd)(THIS_ long lOrdinal, LPSQLDMOJOB *ppJob) PURE;
    STDMETHOD(RemoveJobByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveJobByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddJob)(THIS_ LPSQLDMOJOB pJob) PURE;
    STDMETHOD(GetJobCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetTargetServers)(THIS_ LPSQLDMOTARGETSERVERS * ppTargetServers) PURE;
    STDMETHOD(GetTargetServerByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTARGETSERVER *ppTargetServer) PURE;
    STDMETHOD(GetTargetServerByOrd)(THIS_ long lOrdinal, LPSQLDMOTARGETSERVER *ppTargetServer) PURE;
    STDMETHOD(RemoveTargetServerByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveTargetServerByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddTargetServer)(THIS_ LPSQLDMOTARGETSERVER pTargetServer) PURE;
    STDMETHOD(GetTargetServerCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetTargetServerGroups)(THIS_ LPSQLDMOTARGETSERVERGROUPS * ppTargetServerGroups) PURE;
    STDMETHOD(GetTargetServerGroupByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTARGETSERVERGROUP *ppTargetServerGroup) PURE;
    STDMETHOD(GetTargetServerGroupByOrd)(THIS_ long lOrdinal, LPSQLDMOTARGETSERVERGROUP *ppTargetServerGroup) PURE;
    STDMETHOD(RemoveTargetServerGroupByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveTargetServerGroupByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddTargetServerGroup)(THIS_ LPSQLDMOTARGETSERVERGROUP pTargetServerGroup) PURE;
    STDMETHOD(GetTargetServerGroupCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetJobCategories)(THIS_ LPSQLDMOJOBCATEGORIES * ppJobCategories) PURE;
    STDMETHOD(GetJobCategoryByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOCATEGORY *ppCategory) PURE;
    STDMETHOD(GetJobCategoryByOrd)(THIS_ long lOrdinal, LPSQLDMOCATEGORY *ppCategory) PURE;
    STDMETHOD(RemoveJobCategoryByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveJobCategoryByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddJobCategory)(THIS_ LPSQLDMOCATEGORY pCategory) PURE;
    STDMETHOD(GetJobCategoryCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetAlertCategories)(THIS_ LPSQLDMOALERTCATEGORIES * ppAlertCategories) PURE;
    STDMETHOD(GetAlertCategoryByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOCATEGORY *ppCategory) PURE;
    STDMETHOD(GetAlertCategoryByOrd)(THIS_ long lOrdinal, LPSQLDMOCATEGORY *ppCategory) PURE;
    STDMETHOD(RemoveAlertCategoryByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveAlertCategoryByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddAlertCategory)(THIS_ LPSQLDMOCATEGORY pCategory) PURE;
    STDMETHOD(GetAlertCategoryCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetOperatorCategories)(THIS_ LPSQLDMOOPERATORCATEGORIES * ppOperatorCategories) PURE;
    STDMETHOD(GetOperatorCategoryByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOCATEGORY *ppCategory) PURE;
    STDMETHOD(GetOperatorCategoryByOrd)(THIS_ long lOrdinal, LPSQLDMOCATEGORY *ppCategory) PURE;
    STDMETHOD(RemoveOperatorCategoryByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveOperatorCategoryByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddOperatorCategory)(THIS_ LPSQLDMOCATEGORY pCategory) PURE;
    STDMETHOD(GetOperatorCategoryCount)(THIS_ LPLONG plCount) PURE;

    //*** methods
    STDMETHOD(Stop)(THIS) PURE;
    STDMETHOD(Start)(THIS) PURE;
    STDMETHOD(EnumSubSystems)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
    STDMETHOD(ReAssignJobsByLogin)(THIS_ SQLDMO_LPCSTR szOldLogin, SQLDMO_LPCSTR szNewLogin) PURE;
    STDMETHOD(RemoveJobsByLogin)(THIS_ SQLDMO_LPCSTR szLogin) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(EnumJobHistory)(THIS_ LPSQLDMOQUERYRESULTS *ppResults, LPSQLDMOJOBHISTORYFILTER pFilter CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(PurgeJobHistory)(THIS_ LPSQLDMOJOBHISTORYFILTER pFilter CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(EnumJobs)(THIS_ LPSQLDMOQUERYRESULTS *ppRetVal, LPSQLDMOJOBFILTER pJobFilter CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(RemoveJobsByServer)(THIS_ SQLDMO_LPCSTR szServer) PURE;
    STDMETHOD(MSXEnlist)(THIS_ SQLDMO_LPCSTR szServer, SQLDMO_LPCSTR szLocation) PURE;
    STDMETHOD(MSXDefect)(THIS) PURE;
    STDMETHOD(RemoveJobByID)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(StartMonitor)(THIS_ SQLDMO_LPCSTR szNetSendAddress, long lRestartAttempts) PURE;
    STDMETHOD(StopMonitor)(THIS) PURE;
    STDMETHOD(GetJobByID)(THIS_ SQLDMO_LPCSTR NewValue, LPSQLDMOJOB *ppJob, BOOL bFlag CPPDEFAULT(= FALSE)) PURE;

    // Post-6.0 additions
//    STDMETHOD(GetJobHistoryMaxRowsPerJob)(THIS_ LPLONG pRetVal) PURE;
//    STDMETHOD(SetJobHistoryMaxRowsPerJob)(THIS_ long NewValue) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOAlerts
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

        //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOALERT *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOALERT *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOALERT *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOALERT Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
    // 7.0
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOAlert
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetEventSource)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetEventCategoryID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetEventID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetMessageID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetMessageID)(THIS_ long NewValue) PURE;
    STDMETHOD(GetSeverity)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetSeverity)(THIS_ long NewValue) PURE;
    STDMETHOD(GetEnabled)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetEnabled)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetDelayBetweenResponses)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetDelayBetweenResponses)(THIS_ long NewValue) PURE;
    STDMETHOD(GetLastOccurrenceDate)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetLastOccurrenceDate)(THIS_ long NewValue) PURE;
    STDMETHOD(GetLastOccurrenceTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetLastOccurrenceTime)(THIS_ long NewValue) PURE;
    STDMETHOD(GetLastResponseDate)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetLastResponseDate)(THIS_ long NewValue) PURE;
    STDMETHOD(GetLastResponseTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetLastResponseTime)(THIS_ long NewValue) PURE;
    STDMETHOD(GetNotificationMessage)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetNotificationMessage)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetIncludeEventDescription)(THIS_ SQLDMO_NOTIFY_TYPE *pRetVal) PURE;
    STDMETHOD(SetIncludeEventDescription)(THIS_ SQLDMO_NOTIFY_TYPE NewValue) PURE;
    STDMETHOD(GetDatabaseName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDatabaseName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetEventDescriptionKeyword)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetEventDescriptionKeyword)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetOccurrenceCount)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetCountResetDate)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetCountResetTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetJobName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetHasNotification)(THIS_ LPLONG pRetVal) PURE;

    //*** methods
    STDMETHOD(AddNotification)(THIS_ SQLDMO_LPCSTR OperatorName, SQLDMO_NOTIFY_TYPE NotifyMethod) PURE;
    STDMETHOD(UpdateNotification)(THIS_ SQLDMO_LPCSTR OperatorName, SQLDMO_NOTIFY_TYPE NotifyMethod) PURE;
    STDMETHOD(RemoveNotification)(THIS_ SQLDMO_LPCSTR OperatorName) PURE;
    STDMETHOD(EnumNotifications)(THIS_ SQLDMO_NOTIFY_TYPE NotifyMethod, SQLDMO_ENUMNOTIFY_TYPE EnumNotifyType, LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPCSTR OperatorName CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Refresh)(THIS) PURE;

    // Post-6.0 additions.
    STDMETHOD(GetRaiseSNMPTrap)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetRaiseSNMPTrap)(THIS_ BOOL NewValue) PURE;

    // 7.0
    STDMETHOD(GetPerformanceCondition)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPerformanceCondition)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetJobID)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetJobID)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetCategory)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetCategory)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetType)(THIS_ SQLDMO_ALERT_TYPE *pRetVal) PURE;
    STDMETHOD(ResetOccurrenceCount)(THIS) PURE;
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOOperators
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOOPERATOR *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOOPERATOR *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOOPERATOR *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOOPERATOR Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal, SQLDMO_LPCSTR NewName CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName, SQLDMO_LPCSTR NewName CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
    // 7.0
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOOperator
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetEnabled)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetEnabled)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetEmailAddress)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetEmailAddress)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetLastEmailDate)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetLastEmailTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetPagerAddress)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPagerAddress)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetLastPageDate)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetLastPageTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetWeekdayPagerStartTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetWeekdayPagerStartTime)(THIS_ long NewValue) PURE;
    STDMETHOD(GetWeekdayPagerEndTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetWeekdayPagerEndTime)(THIS_ long NewValue) PURE;
    STDMETHOD(GetSaturdayPagerStartTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetSaturdayPagerStartTime)(THIS_ long NewValue) PURE;
    STDMETHOD(GetSaturdayPagerEndTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetSaturdayPagerEndTime)(THIS_ long NewValue) PURE;
    STDMETHOD(GetSundayPagerStartTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetSundayPagerStartTime)(THIS_ long NewValue) PURE;
    STDMETHOD(GetSundayPagerEndTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetSundayPagerEndTime)(THIS_ long NewValue) PURE;
    STDMETHOD(GetPagerDays)(THIS_ SQLDMO_WEEKDAY_TYPE *pRetVal) PURE;
    STDMETHOD(SetPagerDays)(THIS_ SQLDMO_WEEKDAY_TYPE NewValue) PURE;
    STDMETHOD(GetCategory)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetCategory)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetNetSendAddress)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetNetSendAddress)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetLastNetSendDate)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetLastNetSendTime)(THIS_ LPLONG pRetVal) PURE;

    //*** methods
    STDMETHOD(AddNotification)(THIS_ SQLDMO_LPCSTR AlertName, SQLDMO_NOTIFY_TYPE NotifyMethod) PURE;
    STDMETHOD(UpdateNotification)(THIS_ SQLDMO_LPCSTR AlertName, SQLDMO_NOTIFY_TYPE NotifyMethod) PURE;
    STDMETHOD(RemoveNotification)(THIS_ SQLDMO_LPCSTR AlertName) PURE;
    STDMETHOD(EnumNotifications)(THIS_ SQLDMO_NOTIFY_TYPE NotifyMethod, SQLDMO_ENUMNOTIFY_TYPE EnumNotifyType, LPSQLDMOQUERYRESULTS *ppResults, SQLDMO_LPCSTR AlertName CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(Remove)(THIS_ SQLDMO_LPCSTR NewName CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    // 7.0
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
    STDMETHOD(EnumJobNotifications)(THIS_ LPSQLDMOQUERYRESULTS *ppResults) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOAlertSystem
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetFailSafeOperator)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetFailSafeOperator)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetNotificationMethod)(THIS_ SQLDMO_NOTIFY_TYPE *pRetVal) PURE;
    STDMETHOD(SetNotificationMethod)(THIS_ SQLDMO_NOTIFY_TYPE NewValue) PURE;
    STDMETHOD(GetForwardingServer)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetForwardingServer)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetForwardingSeverity)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetForwardingSeverity)(THIS_ long NewValue) PURE;
    STDMETHOD(GetPagerToTemplate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPagerToTemplate)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPagerCCTemplate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPagerCCTemplate)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPagerSubjectTemplate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetPagerSubjectTemplate)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetPagerSendSubjectOnly)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetPagerSendSubjectOnly)(THIS_ BOOL NewValue) PURE;

    // 7.0
    STDMETHOD(GetForwardAlways)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetForwardAlways)(THIS_ BOOL NewValue) PURE;

    //*** methods
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOJobHistoryFilter
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetJobName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetJobName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetStartRunDate)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetStartRunDate)(THIS_ long NewValue) PURE;
    STDMETHOD(GetStartRunTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetStartRunTime)(THIS_ long NewValue) PURE;
    STDMETHOD(GetOutcomeTypes)(THIS_ SQLDMO_JOBOUTCOME_TYPE *pRetVal) PURE;
    STDMETHOD(SetOutcomeTypes)(THIS_ SQLDMO_JOBOUTCOME_TYPE NewValue) PURE;
    STDMETHOD(GetSQLMessageID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetSQLMessageID)(THIS_ long NewValue) PURE;
    STDMETHOD(GetSQLSeverity)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetSQLSeverity)(THIS_ long NewValue) PURE;
    STDMETHOD(GetMinimumRunDuration)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetMinimumRunDuration)(THIS_ long NewValue) PURE;
    STDMETHOD(GetMinimumRetries)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetMinimumRetries)(THIS_ long NewValue) PURE;
    STDMETHOD(GetOldestFirst)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetOldestFirst)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetEndRunDate)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetEndRunDate)(THIS_ long NewValue) PURE;
    STDMETHOD(GetEndRunTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetEndRunTime)(THIS_ long NewValue) PURE;
    STDMETHOD(GetJobID)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetJobID)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOJobs
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOJOB *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOJOB *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOJOB Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
    // 7.0
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
	 // Collection method
};

#undef INTERFACE
#define INTERFACE ISQLDMOJob
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetEnabled)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetEnabled)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetJobID)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetOriginatingServer)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetStartStepID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetStartStepID)(THIS_ LONG NewVal) PURE;
    STDMETHOD(GetDescription)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDescription)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetCategory)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetCategory)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetOwner)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetEventlogLevel)(THIS_ SQLDMO_COMPLETION_TYPE *pRetVal) PURE;
    STDMETHOD(SetEventlogLevel)(THIS_ SQLDMO_COMPLETION_TYPE NewVal) PURE;
    STDMETHOD(GetEmailLevel)(THIS_ SQLDMO_COMPLETION_TYPE *pRetVal) PURE;
    STDMETHOD(SetEmailLevel)(THIS_ SQLDMO_COMPLETION_TYPE NewVal) PURE;
    STDMETHOD(GetOperatorToEmail)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetOperatorToEmail)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetDateCreated)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetDateLastModified)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetLastRunDate)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetLastRunTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetLastRunOutcome)(THIS_ SQLDMO_JOBOUTCOME_TYPE *pRetVal) PURE;
    STDMETHOD(GetCurrentRunStatus)(THIS_ SQLDMO_JOBEXECUTION_STATUS *pRetVal) PURE;
    STDMETHOD(GetCurrentRunStep)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetNetSendLevel)(THIS_ SQLDMO_COMPLETION_TYPE *pRetVal) PURE;
    STDMETHOD(SetNetSendLevel)(THIS_ SQLDMO_COMPLETION_TYPE NewVal) PURE;
    STDMETHOD(GetDeleteLevel)(THIS_ SQLDMO_COMPLETION_TYPE *pRetVal) PURE;
    STDMETHOD(SetDeleteLevel)(THIS_ SQLDMO_COMPLETION_TYPE NewVal) PURE;
    STDMETHOD(GetHasStep)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetHasServer)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetType)(THIS_ SQLDMO_JOB_TYPE *pRetVal) PURE;
    STDMETHOD(GetHasSchedule)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(GetVersionNumber)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetNextRunDate)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetNextRunTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetCurrentRunRetryAttempt)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetNextRunScheduleID)(THIS_ LPLONG pRetVal) PURE;

    //*** Collection properties
    STDMETHOD(GetJobSteps)(THIS_ LPSQLDMOJOBSTEPS *ppJobSteps) PURE;
    STDMETHOD(GetJobStepByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOJOBSTEP *ppJobStep) PURE;
    STDMETHOD(GetJobStepByOrd)(THIS_ long lOrdinal, LPSQLDMOJOBSTEP *ppJobStep) PURE;
    STDMETHOD(RemoveJobStepByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveJobStepByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddJobStep)(THIS_ LPSQLDMOJOBSTEP pJobStep) PURE;
    STDMETHOD(GetJobStepCount)(THIS_ LPLONG plCount) PURE;

    STDMETHOD(GetJobSchedules)(THIS_ LPSQLDMOJOBSCHEDULES *ppJobSchedules) PURE;
    STDMETHOD(GetJobScheduleByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOJOBSCHEDULE *ppJobSchedule) PURE;
    STDMETHOD(GetJobScheduleByOrd)(THIS_ long lOrdinal, LPSQLDMOJOBSCHEDULE *ppJobSchedule) PURE;
    STDMETHOD(RemoveJobScheduleByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(RemoveJobScheduleByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(AddJobSchedule)(THIS_ LPSQLDMOJOBSCHEDULE pJobSchedule) PURE;
    STDMETHOD(GetJobScheduleCount)(THIS_ LPLONG plCount) PURE;

    //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(ApplyToTargetServer)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(RemoveFromTargetServer)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(EnumTargetServers)(THIS_ LPSQLDMOQUERYRESULTS *ppRetVal) PURE;
    STDMETHOD(ApplyToTargetServerGroup)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(EnumHistory)(THIS_ LPSQLDMOQUERYRESULTS *ppRetVal, LPSQLDMOJOBHISTORYFILTER pJobHistoryFilter CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(PurgeHistory)(THIS) PURE;
    STDMETHOD(Invoke)(THIS) PURE;
    STDMETHOD(AddStepToJob)(THIS_ LPSQLDMOJOBSTEP pJobStep) PURE;
    STDMETHOD(RemoveFromTargetServerGroup)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(RemoveAllJobSteps)(THIS) PURE;
    STDMETHOD(Start)(THIS_ SQLDMO_LPCSTR NewVal CPPDEFAULT(= NULL)) PURE;
    STDMETHOD(Stop)(THIS) PURE;
    STDMETHOD(RemoveAllJobSchedules)(THIS) PURE;

    // 7.0 After Beta 1
    STDMETHOD(GetPageLevel)(THIS_ SQLDMO_COMPLETION_TYPE *pRetVal) PURE;
    STDMETHOD(SetPageLevel)(THIS_ SQLDMO_COMPLETION_TYPE NewVal) PURE;
    STDMETHOD(GetOperatorToNetSend)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetOperatorToNetSend)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetOperatorToPage)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetOperatorToPage)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(EnumAlerts)(THIS_ LPSQLDMOQUERYRESULTS *ppRetVal) PURE;
    // 7.0 after Beta 3
    STDMETHOD(Script)(THIS_ SQLDMO_SCRIPT_TYPE ScriptType CPPDEFAULT(= SQLDMOScript_Default), SQLDMO_LPCSTR ScriptFilePath CPPDEFAULT(= NULL), SQLDMO_LPBSTR ScriptText CPPDEFAULT(= NULL), SQLDMO_SCRIPT2_TYPE Script2Type CPPDEFAULT(= SQLDMOScript2_Default)) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOJobSteps
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOJOBSTEP *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOJOBSTEP *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOJOBSTEP *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOJOBSTEP Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOJobStep
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetStepID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetStepID)(THIS_ LONG lNewVal) PURE;
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetSubSystem)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetSubSystem)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetCommand)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetCommand)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetFlags)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetFlags)(THIS_ LONG lNewVal) PURE;
    STDMETHOD(GetAdditionalParameters)(THIS_ SQLDMO_LPBSTR RetVal) PURE;
    STDMETHOD(SetAdditionalParameters)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetCmdExecSuccessCode)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetCmdExecSuccessCode)(THIS_ LONG lNewVal) PURE;
    STDMETHOD(GetOnSuccessAction)(THIS_ SQLDMO_JOBSTEPACTION_TYPE *pRetVal) PURE;
    STDMETHOD(SetOnSuccessAction)(THIS_ SQLDMO_JOBSTEPACTION_TYPE NewValue) PURE;
    STDMETHOD(GetOnSuccessStep)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetOnSuccessStep)(THIS_ LONG lNewVal) PURE;
    STDMETHOD(GetOnFailAction)(THIS_ SQLDMO_JOBSTEPACTION_TYPE *pRetVal) PURE;
    STDMETHOD(SetOnFailAction)(THIS_ SQLDMO_JOBSTEPACTION_TYPE NewValue) PURE;
    STDMETHOD(GetOnFailStep)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetOnFailStep)(THIS_ LONG lNewVal) PURE;
    STDMETHOD(GetServer)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetServer)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetDatabaseName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDatabaseName)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetDatabaseUserName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDatabaseUserName)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetRetryAttempts)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetRetryAttempts)(THIS_ LONG lNewVal) PURE;
    STDMETHOD(GetRetryInterval)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetRetryInterval)(THIS_ LONG lNewVal) PURE;
    STDMETHOD(GetOSRunPriority)(THIS_ SQLDMO_RUNPRIORITY_TYPE *pRetVal) PURE;
    STDMETHOD(SetOSRunPriority)(THIS_ SQLDMO_RUNPRIORITY_TYPE NewValue) PURE;
    STDMETHOD(GetLastRunOutcome)(THIS_ SQLDMO_JOBOUTCOME_TYPE *pRetVal) PURE;
    STDMETHOD(GetLastRunDuration)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetLastRunRetries)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetLastRunDate)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetLastRunTime)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetOutputFileName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetOutputFileName)(THIS_ SQLDMO_LPCSTR NewVal) PURE;

    //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOTargetServers
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOTARGETSERVER *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTARGETSERVER *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOTARGETSERVER *ppObj) PURE;
        STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOTargetServer
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetServerID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetServerName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetEnlistDate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetLastPollDate)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetStatus)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetLocation)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetLocation)(THIS_ SQLDMO_LPCSTR NewVal) PURE;
    STDMETHOD(GetTimeZoneAdjustment)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetPendingInstructions)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetLocalTime)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetPollingInterval)(THIS_ LPLONG pRetVal) PURE;

    //*** methods
    STDMETHOD(Refresh)(THIS) PURE;
};


////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOTargetServerGroups
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOTARGETSERVERGROUP *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOTARGETSERVERGROUP *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOTARGETSERVERGROUP *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOTARGETSERVERGROUP Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOTargetServerGroup
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetGroupID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

    //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(AddMemberServer)(THIS_ SQLDMO_LPCSTR Value) PURE;
    STDMETHOD(RemoveMemberServer)(THIS_ SQLDMO_LPCSTR Value) PURE;

    //*** List methods
    STDMETHOD(ListMemberServers)(THIS_ LPSQLDMONAMELIST * ppList) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOJobCategories
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOCATEGORY *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOCATEGORY *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOCATEGORY *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOCATEGORY Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
	 // Collection method
};

#undef INTERFACE
#define INTERFACE ISQLDMOAlertCategories
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOCATEGORY *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOCATEGORY *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOCATEGORY *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOCATEGORY Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOOperatorCategories
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOCATEGORY *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOCATEGORY *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOCATEGORY *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOCATEGORY Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOCategory
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetID)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(GetType)(THIS_ SQLDMO_CATEGORYTYPE_TYPE FAR* pRetVal) PURE;
    STDMETHOD(SetType)(THIS_ SQLDMO_CATEGORYTYPE_TYPE NewValue) PURE;
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;

    //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOJobSchedules
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLDMO standard enumeration properties
    STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLDMOJOBSCHEDULE *ppObj) PURE;
    STDMETHOD(GetItemByName)(THIS_ SQLDMO_LPCSTR szName, LPSQLDMOJOBSCHEDULE *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLDMOJOBSCHEDULE *ppObj) PURE;
    STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;

    //*** SQLDMO standard collection methods
    STDMETHOD(Add)(THIS_ LPSQLDMOJOBSCHEDULE Object) PURE;
    STDMETHOD(RemoveByOrd)(THIS_ long lOrdinal) PURE;
    STDMETHOD(RemoveByName)(THIS_ SQLDMO_LPCSTR szName) PURE;
    STDMETHOD(Refresh)(THIS_ BOOL bReleaseMemberObjects CPPDEFAULT(= FALSE)) PURE;
};

#undef INTERFACE
#define INTERFACE ISQLDMOJobSchedule
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetName)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetName)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetEnabled)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetEnabled)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetSchedule)(THIS_ LPSQLDMOSCHEDULE * ppSchedule) PURE;
    STDMETHOD(GetDateCreated)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(GetScheduleID)(THIS_ LPLONG pRetVal) PURE;

    //*** methods
    STDMETHOD(Remove)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
    STDMETHOD(Refresh)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOSchedule
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetFrequencyType)(THIS_ SQLDMO_FREQUENCY_TYPE *pRetVal) PURE;
    STDMETHOD(SetFrequencyType)(THIS_ SQLDMO_FREQUENCY_TYPE NewValue) PURE;
    STDMETHOD(GetFrequencyInterval)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetFrequencyInterval)(THIS_ long NewValue) PURE;
    STDMETHOD(GetFrequencySubDay)(THIS_ SQLDMO_FREQSUB_TYPE *pRetVal) PURE;
    STDMETHOD(SetFrequencySubDay)(THIS_ SQLDMO_FREQSUB_TYPE NewValue) PURE;
    STDMETHOD(GetFrequencySubDayInterval)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetFrequencySubDayInterval)(THIS_ long NewValue) PURE;
    STDMETHOD(GetFrequencyRelativeInterval)(THIS_ SQLDMO_FREQRELATIVE_TYPE *pRetVal) PURE;
    STDMETHOD(SetFrequencyRelativeInterval)(THIS_ SQLDMO_FREQRELATIVE_TYPE NewValue) PURE;
    STDMETHOD(GetFrequencyRecurrenceFactor)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetFrequencyRecurrenceFactor)(THIS_ long NewValue) PURE;
    STDMETHOD(GetActiveStartDate)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetActiveStartDate)(THIS_ long NewValue) PURE;
    STDMETHOD(GetActiveEndDate)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetActiveEndDate)(THIS_ long NewValue) PURE;
    STDMETHOD(GetActiveStartTimeOfDay)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetActiveStartTimeOfDay)(THIS_ long NewValue) PURE;
    STDMETHOD(GetActiveEndTimeOfDay)(THIS_ LPLONG pRetVal) PURE;
    STDMETHOD(SetActiveEndTimeOfDay)(THIS_ long NewValue) PURE;

    //*** methods
    STDMETHOD(Refresh)(THIS) PURE;
    STDMETHOD(BeginAlter)(THIS) PURE;
    STDMETHOD(DoAlter)(THIS) PURE;
    STDMETHOD(CancelAlter)(THIS) PURE;
};

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#undef INTERFACE
#define INTERFACE ISQLDMOJobFilter
DECLARE_INTERFACE_(INTERFACE, ISQLDMOStdObject)
{
    //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

    //*** SQLDMO standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLDMOAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLDMOSTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLDMO_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** properties
    STDMETHOD(GetCurrentExecutionStatus)(THIS_ SQLDMO_JOBEXECUTION_STATUS *pRetVal) PURE;
    STDMETHOD(SetCurrentExecutionStatus)(THIS_ SQLDMO_JOBEXECUTION_STATUS NewValue) PURE;
    STDMETHOD(GetEnabled)(THIS_ LPBOOL pRetVal) PURE;
    STDMETHOD(SetEnabled)(THIS_ BOOL NewValue) PURE;
    STDMETHOD(GetCategory)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetCategory)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetOwner)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetOwner)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetStepSubsystem)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetStepSubsystem)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDateJobCreated)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDateJobCreated)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDateJobLastModified)(THIS_ SQLDMO_LPBSTR pRetVal) PURE;
    STDMETHOD(SetDateJobLastModified)(THIS_ SQLDMO_LPCSTR NewValue) PURE;
    STDMETHOD(GetDateFindOperand)(THIS_ SQLDMO_FIND_OPERAND *pRetVal) PURE;
    STDMETHOD(SetDateFindOperand)(THIS_ SQLDMO_FIND_OPERAND NewValue) PURE;
    STDMETHOD(GetType)(THIS_ SQLDMO_JOB_TYPE *pRetVal) PURE;
    STDMETHOD(SetType)(THIS_ SQLDMO_JOB_TYPE NewValue) PURE;

    //*** methods
};





/////////////////////////////////////////////////////////////////////////////
//		SQLDMO Connection Point Sink Interfaces
/////////////////////////////////////////////////////////////////////////////

#ifdef _SQLDMO_INTERNAL_
#endif

#endif	// !_SQLDMO_ODL_
#endif	// _SQLDMO_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SqlDmoID.h ===
#ifndef SQLDMOID_H_
#define SQLDMOID_H_
/////////////////////////////////////////////////////////////////////////////////////////
// Header file for SQLDMO Component Object GUIDs.
// Copyright 1994-1999 Microsoft Corporation.
/////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////
// Define the SQL-DMO GUIDGEN templates.
/////////////////////////////////////////////////////////////////////////////////
#ifdef _SQLDMO_ODL_
#define SubDefine #define
#define DEFINE_SQLDMOGUID(name, lval) \
      SubDefine name lval##-E260-11cf-AE68-00AA004A34D5
#else
#define DEFINE_SQLDMOGUID(name, lval) \
      DEFINE_GUID(name, 0x##lval, 0xe260, 0x11cf, 0xae, 0x68, 0x0, 0xaa, 0x0, 0x4a, 0x34, 0xd5);
#endif


/////////////////////////////////////////////////////////////////////////////////
// Objects have the following GUID assignments:
// CoClass, if any
// Collection Ansi, Uni, OleAut interface IID (if any)
// Singleton Ansi, Uni, OleAut interface IID (or IIDs if multi-interface coclass)
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Naming prefix convention:
// LIBID* - Library ID
// CLSID* - CoClass
// IID_IA* - C++ Ansi interfaces
// IID_IW* - C++ Unicode interfaces
// IID_IV* - OleAut (VB/VBA) dual Interfaces
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
//	SQLDMO Library UUID
/////////////////////////////////////////////////////////////////////////////////
DEFINE_SQLDMOGUID(LIBID_SQLDMOLibrary, 10010001)

/////////////////////////////////////////////////////////////////////////////////
//	SQLDMO backward compatible UUID
/////////////////////////////////////////////////////////////////////////////////
DEFINE_SQLDMOGUID(IID_SQLDMOObsoleteConnect, 1001000B)

/////////////////////////////////////////////////////////////////////////////////
// Internal base interfaces.
/////////////////////////////////////////////////////////////////////////////////
DEFINE_SQLDMOGUID(IID_ISQLDMOAnsiUniInternal, 10010002)
DEFINE_SQLDMOGUID(IID_ISQLDMOPrivate, 10010003)
DEFINE_SQLDMOGUID(IID_ISQLDMOInternal, 1001004)

// DEFINE_SQLDMOGUID(IID_IASQLDMOStdObject, 10010005)
DEFINE_SQLDMOGUID(IID_IWSQLDMOStdObject, 10010006)
DEFINE_SQLDMOGUID(IID_IVSQLDMOStdObject, 10010007)

// DEFINE_SQLDMOGUID(IID_IASQLDMOStdCollection, 10010008)
DEFINE_SQLDMOGUID(IID_IWSQLDMOStdCollection, 10010009)
DEFINE_SQLDMOGUID(IID_IVSQLDMOStdCollection, 1001000A)

/////////////////////////////////////////////////////////////////////////////////
//	SQLDMO internal pConn UUID
/////////////////////////////////////////////////////////////////////////////////
DEFINE_SQLDMOGUID(IID_SQLDMOInternalConn, 1001000C)


/////////////////////////////////////////////////////////////////////////////////
// Automation generic-property interfaces
/////////////////////////////////////////////////////////////////////////////////
DEFINE_SQLDMOGUID(IID_IVSQLDMOProperties, 10020001)
DEFINE_SQLDMOGUID(IID_IVSQLDMOProperty, 10020002)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOApplication, 10020100)

// No collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOApplication, 10020105)
DEFINE_SQLDMOGUID(IID_IVSQLDMOApplication, 10020106)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOServer, 10020200)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOServers, 10020202)
DEFINE_SQLDMOGUID(IID_IVSQLDMOServers, 10020203)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOServer, 10020205)
DEFINE_SQLDMOGUID(IID_IVSQLDMOServer, 10020206)

// Interface (event sink)
DEFINE_SQLDMOGUID(IID_IWSQLDMOServerSink, 10020208)
DEFINE_SQLDMOGUID(IID_IVSQLDMOServerSink, 10020209)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMODatabase, 10020300)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMODatabases, 10020302)
DEFINE_SQLDMOGUID(IID_IVSQLDMODatabases, 10020303)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMODatabase, 10020305)
DEFINE_SQLDMOGUID(IID_IVSQLDMODatabase, 10020306)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOTable, 10020400)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOTables, 10020402)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTables, 10020403)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOTable, 10020405)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTable, 10020406)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOColumn, 10020500)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOColumns, 10020502)
DEFINE_SQLDMOGUID(IID_IVSQLDMOColumns, 10020503)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOColumn, 10020505)
DEFINE_SQLDMOGUID(IID_IVSQLDMOColumn, 10020506)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOView, 10020700)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOViews, 10020702)
DEFINE_SQLDMOGUID(IID_IVSQLDMOViews, 10020703)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOView, 10020705)
DEFINE_SQLDMOGUID(IID_IVSQLDMOView, 10020706)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOUserDefinedDatatype, 10020800)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOUserDefinedDatatypes, 10020802)
DEFINE_SQLDMOGUID(IID_IVSQLDMOUserDefinedDatatypes, 10020803)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOUserDefinedDatatype, 10020805)
DEFINE_SQLDMOGUID(IID_IVSQLDMOUserDefinedDatatype, 10020806)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMODefault, 10020900)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMODefaults, 10020902)
DEFINE_SQLDMOGUID(IID_IVSQLDMODefaults, 10020903)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMODefault, 10020905)
DEFINE_SQLDMOGUID(IID_IVSQLDMODefault, 10020906)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMORule, 10020a00)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMORules, 10020a02)
DEFINE_SQLDMOGUID(IID_IVSQLDMORules, 10020a03)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMORule, 10020a05)
DEFINE_SQLDMOGUID(IID_IVSQLDMORule, 10020a06)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOUser, 10020b00)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOUsers, 10020b02)
DEFINE_SQLDMOGUID(IID_IVSQLDMOUsers, 10020b03)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOUser, 10020b05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOUser, 10020b06)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOGroup, 10020c00)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOGroups, 10020c02)
DEFINE_SQLDMOGUID(IID_IVSQLDMOGroups, 10020c03)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOGroup, 10020c05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOGroup, 10020c06)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOStoredProcedure, 10020d00)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOStoredProcedures, 10020d02)
DEFINE_SQLDMOGUID(IID_IVSQLDMOStoredProcedures, 10020d03)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOStoredProcedure, 10020d05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOStoredProcedure, 10020d06)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOIndex, 10020e00)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOIndexes, 10020e02)
DEFINE_SQLDMOGUID(IID_IVSQLDMOIndexes, 10020e03)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOIndex, 10020e05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOIndex, 10020e06)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOKey, 10020f00)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOKeys, 10020f02)
DEFINE_SQLDMOGUID(IID_IVSQLDMOKeys, 10020f03)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOKey, 10020f05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOKey, 10020f06)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOTrigger, 10021000)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOTriggers, 10021002)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTriggers, 10021003)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOTrigger, 10021005)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTrigger, 10021006)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOBackupDevice, 10021100)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOBackupDevices, 10021102)
DEFINE_SQLDMOGUID(IID_IVSQLDMOBackupDevices, 10021103)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOBackupDevice, 10021105)
DEFINE_SQLDMOGUID(IID_IVSQLDMOBackupDevice, 10021106)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOLogin, 10021300)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOLogins, 10021302)
DEFINE_SQLDMOGUID(IID_IVSQLDMOLogins, 10021303)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOLogin, 10021305)
DEFINE_SQLDMOGUID(IID_IVSQLDMOLogin, 10021306)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOLanguage, 10021400)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOLanguages, 10021402)
DEFINE_SQLDMOGUID(IID_IVSQLDMOLanguages, 10021403)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOLanguage, 10021405)
DEFINE_SQLDMOGUID(IID_IVSQLDMOLanguage, 10021406)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMORemoteServer, 10021500)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMORemoteServers, 10021502)
DEFINE_SQLDMOGUID(IID_IVSQLDMORemoteServers, 10021503)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMORemoteServer, 10021505)
DEFINE_SQLDMOGUID(IID_IVSQLDMORemoteServer, 10021506)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMORemoteLogin, 10021600)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMORemoteLogins, 10021602)
DEFINE_SQLDMOGUID(IID_IVSQLDMORemoteLogins, 10021603)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMORemoteLogin, 10021605)
DEFINE_SQLDMOGUID(IID_IVSQLDMORemoteLogin, 10021606)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOCheck, 10021700)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOChecks, 10021702)
DEFINE_SQLDMOGUID(IID_IVSQLDMOChecks, 10021703)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOCheck, 10021705)
DEFINE_SQLDMOGUID(IID_IVSQLDMOCheck, 10021706)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOServerGroup, 10021800)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOServerGroups, 10021802)
DEFINE_SQLDMOGUID(IID_IVSQLDMOServerGroups, 10021803)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOServerGroup, 10021805)
DEFINE_SQLDMOGUID(IID_IVSQLDMOServerGroup, 10021806)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMORegisteredServer, 10021900)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMORegisteredServers, 10021902)
DEFINE_SQLDMOGUID(IID_IVSQLDMORegisteredServers, 10021903)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMORegisteredServer, 10021905)
DEFINE_SQLDMOGUID(IID_IVSQLDMORegisteredServer, 10021906)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// NO CLSID (persistent collection, predefined objects)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOSystemDatatypes, 10021a02)
DEFINE_SQLDMOGUID(IID_IVSQLDMOSystemDatatypes, 10021a03)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOSystemDatatype, 10021a05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOSystemDatatype, 10021a06)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// NO CLSID (persistent collection, predefined objects)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOConfigValues, 10021b02)
DEFINE_SQLDMOGUID(IID_IVSQLDMOConfigValues, 10021b03)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOConfigValue, 10021b05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOConfigValue, 10021b06)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOBulkCopy, 10021c00)

// NO Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOBulkCopy, 10021c05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOBulkCopy, 10021c06)

// Interface (event sink)
DEFINE_SQLDMOGUID(IID_IWSQLDMOBulkCopySink, 10021c08)
DEFINE_SQLDMOGUID(IID_IVSQLDMOBulkCopySink, 10021c09)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMONames, 10021d02)
DEFINE_SQLDMOGUID(IID_IVSQLDMONames, 10021d03)

// No interface (returns strings)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOTransfer, 10021e00)

// No Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOTransfer, 10021e05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTransfer, 10021e06)

// Interface (event sink)
DEFINE_SQLDMOGUID(IID_IWSQLDMOTransferSink, 10021e08)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTransferSink, 10021e09)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOBackup, 10021f00)

// No Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOBackup, 10021f05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOBackup, 10021f06)

// Interface (event sink)
DEFINE_SQLDMOGUID(IID_IWSQLDMOBackupSink, 10021f08)
DEFINE_SQLDMOGUID(IID_IVSQLDMOBackupSink, 10021f09)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMODBObject, 10022105)
DEFINE_SQLDMOGUID(IID_IVSQLDMODBObject, 10022106)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMODBOption, 10022205)
DEFINE_SQLDMOGUID(IID_IVSQLDMODBOption, 10022206)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOConfiguration, 10022305)
DEFINE_SQLDMOGUID(IID_IVSQLDMOConfiguration, 10022306)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMONameList, 10022405)
DEFINE_SQLDMOGUID(IID_IVSQLDMONameList, 10022406)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOQueryResults, 10022505)
DEFINE_SQLDMOGUID(IID_IVSQLDMOQueryResults, 10022506)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOTransactionLog, 10022605)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTransactionLog, 10022606)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMORegistry, 10022705)
DEFINE_SQLDMOGUID(IID_IVSQLDMORegistry, 10022706)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOObjectList, 10022805)
DEFINE_SQLDMOGUID(IID_IVSQLDMOObjectList, 10022806)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOPermission, 10022905)
DEFINE_SQLDMOGUID(IID_IVSQLDMOPermission, 10022906)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOIntegratedSecurity, 10022a05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOIntegratedSecurity, 10022a06)
/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMODRIDefault, 10022b05)
DEFINE_SQLDMOGUID(IID_IVSQLDMODRIDefault, 10022b06)


/////////////////////////////////////////////////////////////////////////////////
// 7.0 new objects
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOFileGroup, 10022c00)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOFileGroups, 10022c02)
DEFINE_SQLDMOGUID(IID_IVSQLDMOFileGroups, 10022c03)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOFileGroup, 10022c05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOFileGroup, 10022c06)


/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMODBFile, 10022d00)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMODBFiles, 10022d02)
DEFINE_SQLDMOGUID(IID_IVSQLDMODBFiles, 10022d03)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMODBFile, 10022d05)
DEFINE_SQLDMOGUID(IID_IVSQLDMODBFile, 10022d06)


/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOLogFile, 10022e00)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOLogFiles, 10022e02)
DEFINE_SQLDMOGUID(IID_IVSQLDMOLogFiles, 10022e03)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOLogFile, 10022e05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOLogFile, 10022e06)


/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOServerRole, 10022f00)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOServerRoles, 10022f02)
DEFINE_SQLDMOGUID(IID_IVSQLDMOServerRoles, 10022f03)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOServerRole, 10022f05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOServerRole, 10022f06)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMODatabaseRole, 10023100)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMODatabaseRoles, 10023102)
DEFINE_SQLDMOGUID(IID_IVSQLDMODatabaseRoles, 10023103)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMODatabaseRole, 10023105)
DEFINE_SQLDMOGUID(IID_IVSQLDMODatabaseRole, 10023106)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMORestore, 10023200)

// No Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMORestore, 10023202)
DEFINE_SQLDMOGUID(IID_IVSQLDMORestore, 10023203)

// Interface (event sink)
DEFINE_SQLDMOGUID(IID_IWSQLDMORestoreSink, 10023205)
DEFINE_SQLDMOGUID(IID_IVSQLDMORestoreSink, 10023206)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOLinkedServer, 10023300)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOLinkedServers, 10023302)
DEFINE_SQLDMOGUID(IID_IVSQLDMOLinkedServers, 10023303)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOLinkedServer, 10023305)
DEFINE_SQLDMOGUID(IID_IVSQLDMOLinkedServer, 10023306)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOLinkedServerLogin, 10023400)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOLinkedServerLogins, 10023402)
DEFINE_SQLDMOGUID(IID_IVSQLDMOLinkedServerLogins, 10023403)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOLinkedServerLogin, 10023405)
DEFINE_SQLDMOGUID(IID_IVSQLDMOLinkedServerLogin, 10023406)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOFullTextCatalog, 10023500)

// Collection
DEFINE_SQLDMOGUID(IID_IWSQLDMOFullTextCatalogs, 10023502)
DEFINE_SQLDMOGUID(IID_IVSQLDMOFullTextCatalogs, 10023503)

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOFullTextCatalog, 10023505)
DEFINE_SQLDMOGUID(IID_IVSQLDMOFullTextCatalog, 10023506)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID

// Collection

// Interface
DEFINE_SQLDMOGUID(IID_IWSQLDMOFullTextService, 10023605)
DEFINE_SQLDMOGUID(IID_IVSQLDMOFullTextService, 10023606)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////





/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOTransPublication, 10030100)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOTransPublications, 10030101)
DEFINE_SQLDMOGUID(IID_IWSQLDMOTransPublications, 10030102)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTransPublications, 10030103)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOTransPublication, 10030104)
DEFINE_SQLDMOGUID(IID_IWSQLDMOTransPublication, 10030105)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTransPublication, 10030106)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOTransArticle, 10030200)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOTransArticles, 10030201)
DEFINE_SQLDMOGUID(IID_IWSQLDMOTransArticles, 10030202)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTransArticles, 10030203)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOTransArticle, 10030204)
DEFINE_SQLDMOGUID(IID_IWSQLDMOTransArticle, 10030205)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTransArticle, 10030206)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOTransSubscription, 10030300)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOTransSubscriptions, 10030301)
DEFINE_SQLDMOGUID(IID_IWSQLDMOTransSubscriptions, 10030302)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTransSubscriptions, 10030303)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOTransSubscription, 10030304)
DEFINE_SQLDMOGUID(IID_IWSQLDMOTransSubscription, 10030305)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTransSubscription, 10030306)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOMergePublication, 10030400)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOMergePublications, 10030401)
DEFINE_SQLDMOGUID(IID_IWSQLDMOMergePublications, 10030402)
DEFINE_SQLDMOGUID(IID_IVSQLDMOMergePublications, 10030403)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOMergePublication, 10030404)
DEFINE_SQLDMOGUID(IID_IWSQLDMOMergePublication, 10030405)
DEFINE_SQLDMOGUID(IID_IVSQLDMOMergePublication, 10030406)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOMergeArticle, 10030500)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOMergeArticles, 10030501)
DEFINE_SQLDMOGUID(IID_IWSQLDMOMergeArticles, 10030502)
DEFINE_SQLDMOGUID(IID_IVSQLDMOMergeArticles, 10030503)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOMergeArticle, 10030504)
DEFINE_SQLDMOGUID(IID_IWSQLDMOMergeArticle, 10030505)
DEFINE_SQLDMOGUID(IID_IVSQLDMOMergeArticle, 10030506)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOMergeSubscription, 10030600)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOMergeSubscriptions, 10030601)
DEFINE_SQLDMOGUID(IID_IWSQLDMOMergeSubscriptions, 10030602)
DEFINE_SQLDMOGUID(IID_IVSQLDMOMergeSubscriptions, 10030603)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOMergeSubscription, 10030604)
DEFINE_SQLDMOGUID(IID_IWSQLDMOMergeSubscription, 10030605)
DEFINE_SQLDMOGUID(IID_IVSQLDMOMergeSubscription, 10030606)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMODistributionPublisher, 10030700)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMODistributionPublishers, 10030701)
DEFINE_SQLDMOGUID(IID_IWSQLDMODistributionPublishers, 10030702)
DEFINE_SQLDMOGUID(IID_IVSQLDMODistributionPublishers, 10030703)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMODistributionPublisher, 10030704)
DEFINE_SQLDMOGUID(IID_IWSQLDMODistributionPublisher, 10030705)
DEFINE_SQLDMOGUID(IID_IVSQLDMODistributionPublisher, 10030706)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMORegisteredSubscriber, 10030900)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMORegisteredSubscribers, 10030901)
DEFINE_SQLDMOGUID(IID_IWSQLDMORegisteredSubscribers, 10030902)
DEFINE_SQLDMOGUID(IID_IVSQLDMORegisteredSubscribers, 10030903)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMORegisteredSubscriber, 10030904)
DEFINE_SQLDMOGUID(IID_IWSQLDMORegisteredSubscriber, 10030905)
DEFINE_SQLDMOGUID(IID_IVSQLDMORegisteredSubscriber, 10030906)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// NO CLSID

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOReplicationDatabases, 10030a01)
DEFINE_SQLDMOGUID(IID_IWSQLDMOReplicationDatabases, 10030a02)
DEFINE_SQLDMOGUID(IID_IVSQLDMOReplicationDatabases, 10030a03)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOReplicationDatabase, 10030a04)
DEFINE_SQLDMOGUID(IID_IWSQLDMOReplicationDatabase, 10030a05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOReplicationDatabase, 10030a06)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOTransPullSubscription, 10030b00)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOTransPullSubscriptions, 10030b01)
DEFINE_SQLDMOGUID(IID_IWSQLDMOTransPullSubscriptions, 10030b02)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTransPullSubscriptions, 10030b03)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOTransPullSubscription, 10030b04)
DEFINE_SQLDMOGUID(IID_IWSQLDMOTransPullSubscription, 10030b05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTransPullSubscription, 10030b06)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOPublisher, 10030c04)
DEFINE_SQLDMOGUID(IID_IWSQLDMOPublisher, 10030c05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOPublisher, 10030c06)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOSubscriber, 10030d04)
DEFINE_SQLDMOGUID(IID_IWSQLDMOSubscriber, 10030d05)
DEFINE_SQLDMOGUID(IID_IVSQLDMOSubscriber, 10030d06)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMODistributor, 10030e04)
DEFINE_SQLDMOGUID(IID_IWSQLDMODistributor, 10030e05)
DEFINE_SQLDMOGUID(IID_IVSQLDMODistributor, 10030e06)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOReplication, 10031000)

// No Collection

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOReplication, 10031004)
DEFINE_SQLDMOGUID(IID_IWSQLDMOReplication, 10031005)
DEFINE_SQLDMOGUID(IID_IVSQLDMOReplication, 10031006)


// Interface (event sink)
DEFINE_SQLDMOGUID(IID_IWSQLDMOReplicationSink, 10031008)
DEFINE_SQLDMOGUID(IID_IVSQLDMOReplicationSink, 10031009)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOMergePullSubscription, 10031100)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOMergePullSubscriptions, 10031101)
DEFINE_SQLDMOGUID(IID_IWSQLDMOMergePullSubscriptions, 10031102)
DEFINE_SQLDMOGUID(IID_IVSQLDMOMergePullSubscriptions, 10031103)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOMergePullSubscription, 10031104)
DEFINE_SQLDMOGUID(IID_IWSQLDMOMergePullSubscription, 10031105)
DEFINE_SQLDMOGUID(IID_IVSQLDMOMergePullSubscription, 10031106)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOReplicationSecurity, 10031200)

// No Collection

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOReplicationSecurity, 10031204)
DEFINE_SQLDMOGUID(IID_IWSQLDMOReplicationSecurity, 10031205)
DEFINE_SQLDMOGUID(IID_IVSQLDMOReplicationSecurity, 10031206)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMODistributionDatabase, 10031300)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMODistributionDatabases, 10031301)
DEFINE_SQLDMOGUID(IID_IWSQLDMODistributionDatabases, 10031302)
DEFINE_SQLDMOGUID(IID_IVSQLDMODistributionDatabases, 10031303)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMODistributionDatabase, 10031304)
DEFINE_SQLDMOGUID(IID_IWSQLDMODistributionDatabase, 10031305)
DEFINE_SQLDMOGUID(IID_IVSQLDMODistributionDatabase, 10031306)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// NO CLSID

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOReplicationTables, 10031401)
DEFINE_SQLDMOGUID(IID_IWSQLDMOReplicationTables, 10031402)
DEFINE_SQLDMOGUID(IID_IVSQLDMOReplicationTables, 10031403)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOReplicationTable, 10031404)
DEFINE_SQLDMOGUID(IID_IWSQLDMOReplicationTable, 10031405)
DEFINE_SQLDMOGUID(IID_IVSQLDMOReplicationTable, 10031406)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
// NO CLSID

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOReplicationStoredProcedures, 10031601)
DEFINE_SQLDMOGUID(IID_IWSQLDMOReplicationStoredProcedures, 10031602)
DEFINE_SQLDMOGUID(IID_IVSQLDMOReplicationStoredProcedures, 10031603)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOReplicationStoredProcedure, 10031604)
DEFINE_SQLDMOGUID(IID_IWSQLDMOReplicationStoredProcedure, 10031605)
DEFINE_SQLDMOGUID(IID_IVSQLDMOReplicationStoredProcedure, 10031606)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMODistributionPublication, 10032100)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMODistributionPublications, 10032101)
DEFINE_SQLDMOGUID(IID_IWSQLDMODistributionPublications, 10032102)
DEFINE_SQLDMOGUID(IID_IVSQLDMODistributionPublications, 10032103)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMODistributionPublication, 10032104)
DEFINE_SQLDMOGUID(IID_IWSQLDMODistributionPublication, 10032105)
DEFINE_SQLDMOGUID(IID_IVSQLDMODistributionPublication, 10032106)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMODistributionArticle, 10033100)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMODistributionArticles, 10033101)
DEFINE_SQLDMOGUID(IID_IWSQLDMODistributionArticles, 10033102)
DEFINE_SQLDMOGUID(IID_IVSQLDMODistributionArticles, 10033103)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMODistributionArticle, 10033104)
DEFINE_SQLDMOGUID(IID_IWSQLDMODistributionArticle, 10033105)
DEFINE_SQLDMOGUID(IID_IVSQLDMODistributionArticle, 10033106)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMODistributionSubscription, 10034100)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMODistributionSubscriptions, 10034101)
DEFINE_SQLDMOGUID(IID_IWSQLDMODistributionSubscriptions, 10034102)
DEFINE_SQLDMOGUID(IID_IVSQLDMODistributionSubscriptions, 10034103)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMODistributionSubscription, 10034104)
DEFINE_SQLDMOGUID(IID_IWSQLDMODistributionSubscription, 10034105)
DEFINE_SQLDMOGUID(IID_IVSQLDMODistributionSubscription, 10034106)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOMergeSubsetFilter, 10035100)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOMergeSubsetFilters, 10035101)
DEFINE_SQLDMOGUID(IID_IWSQLDMOMergeSubsetFilters, 10035102)
DEFINE_SQLDMOGUID(IID_IVSQLDMOMergeSubsetFilters, 10035103)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOMergeSubsetFilter, 10035104)
DEFINE_SQLDMOGUID(IID_IWSQLDMOMergeSubsetFilter, 10035105)
DEFINE_SQLDMOGUID(IID_IVSQLDMOMergeSubsetFilter, 10035106)




/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOOperator, 10040200)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOOperators, 10040201)
DEFINE_SQLDMOGUID(IID_IWSQLDMOOperators, 10040202)
DEFINE_SQLDMOGUID(IID_IVSQLDMOOperators, 10040203)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOOperator, 10040204)
DEFINE_SQLDMOGUID(IID_IWSQLDMOOperator, 10040205)
DEFINE_SQLDMOGUID(IID_IVSQLDMOOperator, 10040206)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOJobServer, 10040404)
DEFINE_SQLDMOGUID(IID_IWSQLDMOJobServer, 10040405)
DEFINE_SQLDMOGUID(IID_IVSQLDMOJobServer, 10040406)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOAlertSystem, 10040504)
DEFINE_SQLDMOGUID(IID_IWSQLDMOAlertSystem, 10040505)
DEFINE_SQLDMOGUID(IID_IVSQLDMOAlertSystem, 10040506)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOAlert, 10040600)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOAlerts, 10040601)
DEFINE_SQLDMOGUID(IID_IWSQLDMOAlerts, 10040602)
DEFINE_SQLDMOGUID(IID_IVSQLDMOAlerts, 10040603)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOAlert, 10040604)
DEFINE_SQLDMOGUID(IID_IWSQLDMOAlert, 10040605)
DEFINE_SQLDMOGUID(IID_IVSQLDMOAlert, 10040606)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOJob, 10040800)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOJobs, 10040801)
DEFINE_SQLDMOGUID(IID_IWSQLDMOJobs, 10040802)
DEFINE_SQLDMOGUID(IID_IVSQLDMOJobs, 10040803)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOJob, 10040804)
DEFINE_SQLDMOGUID(IID_IWSQLDMOJob, 10040805)
DEFINE_SQLDMOGUID(IID_IVSQLDMOJob, 10040806)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOJobStep, 10040900)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOJobSteps, 10040901)
DEFINE_SQLDMOGUID(IID_IWSQLDMOJobSteps, 10040902)
DEFINE_SQLDMOGUID(IID_IVSQLDMOJobSteps, 10040903)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOJobStep, 10040904)
DEFINE_SQLDMOGUID(IID_IWSQLDMOJobStep, 10040905)
DEFINE_SQLDMOGUID(IID_IVSQLDMOJobStep, 10040906)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOTargetServer, 10041000)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOTargetServers, 10041001)
DEFINE_SQLDMOGUID(IID_IWSQLDMOTargetServers, 10041002)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTargetServers, 10041003)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOTargetServer, 10041004)
DEFINE_SQLDMOGUID(IID_IWSQLDMOTargetServer, 10041005)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTargetServer, 10041006)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOTargetServerGroup, 10041100)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOTargetServerGroups, 10041101)
DEFINE_SQLDMOGUID(IID_IWSQLDMOTargetServerGroups, 10041102)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTargetServerGroups, 10041103)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOTargetServerGroup, 10041104)
DEFINE_SQLDMOGUID(IID_IWSQLDMOTargetServerGroup, 10041105)
DEFINE_SQLDMOGUID(IID_IVSQLDMOTargetServerGroup, 10041106)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOSchedule, 10041204)
DEFINE_SQLDMOGUID(IID_IWSQLDMOSchedule, 10041205)
DEFINE_SQLDMOGUID(IID_IVSQLDMOSchedule, 10041206)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// No CLSID

// No Collection

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOJobFilter, 10041304)
DEFINE_SQLDMOGUID(IID_IWSQLDMOJobFilter, 10041305)
DEFINE_SQLDMOGUID(IID_IVSQLDMOJobFilter, 10041306)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID

// No Collection

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOJobHistoryFilter, 10041404)
DEFINE_SQLDMOGUID(IID_IWSQLDMOJobHistoryFilter, 10041405)
DEFINE_SQLDMOGUID(IID_IVSQLDMOJobHistoryFilter, 10041406)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOCategory, 10041500)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOJobCategories, 10041501)
DEFINE_SQLDMOGUID(IID_IWSQLDMOJobCategories, 10041502)
DEFINE_SQLDMOGUID(IID_IVSQLDMOJobCategories, 10041503)

// DEFINE_SQLDMOGUID(IID_IASQLDMOAlertCategories, 10041504)
DEFINE_SQLDMOGUID(IID_IWSQLDMOAlertCategories, 10041505)
DEFINE_SQLDMOGUID(IID_IVSQLDMOAlertCategories, 10041506)

// DEFINE_SQLDMOGUID(IID_IASQLDMOOperatorCategories, 10041507)
DEFINE_SQLDMOGUID(IID_IWSQLDMOOperatorCategories, 10041508)
DEFINE_SQLDMOGUID(IID_IVSQLDMOOperatorCategories, 10041509)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOCategory, 10041510)
DEFINE_SQLDMOGUID(IID_IWSQLDMOCategory, 10041511)
DEFINE_SQLDMOGUID(IID_IVSQLDMOCategory, 10041512)

/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

// CLSID
DEFINE_SQLDMOGUID(CLSID_SQLDMOJobSchedule, 10041600)

// Collection
// DEFINE_SQLDMOGUID(IID_IASQLDMOJobSchedules, 10041601)
DEFINE_SQLDMOGUID(IID_IWSQLDMOJobSchedules, 10041602)
DEFINE_SQLDMOGUID(IID_IVSQLDMOJobSchedules, 10041603)

// Interface
// DEFINE_SQLDMOGUID(IID_IASQLDMOJobSchedule, 10041604)
DEFINE_SQLDMOGUID(IID_IWSQLDMOJobSchedule, 10041605)
DEFINE_SQLDMOGUID(IID_IVSQLDMOJobSchedule, 10041606)



#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SqlMergx.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 3.01.75 */
/* at Fri Nov 13 02:35:09 1998
 */
/* Compiler settings for r:\SPHINX\SQLREPL\SQLMERGX\sqlmergx.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: none
*/
//@@MIDL_FILE_HEADING(  )
#include "rpc.h"
#include "rpcndr.h"
#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __sqlmergx_h__
#define __sqlmergx_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __ISQLMerge_FWD_DEFINED__
#define __ISQLMerge_FWD_DEFINED__
typedef interface ISQLMerge ISQLMerge;
#endif 	/* __ISQLMerge_FWD_DEFINED__ */


#ifndef ___SQLMergeEvents_FWD_DEFINED__
#define ___SQLMergeEvents_FWD_DEFINED__
typedef interface _SQLMergeEvents _SQLMergeEvents;
#endif 	/* ___SQLMergeEvents_FWD_DEFINED__ */


#ifndef __SQLMerge_FWD_DEFINED__
#define __SQLMerge_FWD_DEFINED__

#ifdef __cplusplus
typedef class SQLMerge SQLMerge;
#else
typedef struct SQLMerge SQLMerge;
#endif /* __cplusplus */

#endif 	/* __SQLMerge_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "replerrx.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/****************************************
 * Generated header for interface: __MIDL_itf_sqlmergx_0000
 * at Fri Nov 13 02:35:09 1998
 * using MIDL 3.01.75
 ****************************************/
/* [local] */ 


#ifndef COMMON_REPL_ENUMS_DEFINED
#define COMMON_REPL_ENUMS_DEFINED
typedef 
enum SECURITY_TYPE
    {	DB_AUTHENTICATION	= 0,
	NT_AUTHENTICATION	= 1
    }	REPL_SECURITY_TYPE;

typedef 
enum DATASOURCE_TYPE
    {	SQL_SERVER	= 0,
	ODBC_DSN	= 1,
	JET4_DATABASE	= 2,
	OLEDB_DATASOURCE	= 3
    }	REPL_DATASOURCE_TYPE;

typedef 
enum SUBSCRIPTION_TYPE
    {	PUSH	= 0,
	PULL	= 1,
	ANONYMOUS	= 2
    }	REPL_SUBSCRIPTION_TYPE;

typedef 
enum NETWORK_TYPE
    {	DEFAULT_NETWORK	= 0,
	TCPIP_SOCKETS	= 1,
	MULTI_PROTOCOL	= 2
    }	REPL_NETWORK_TYPE;

typedef 
enum DBADDOPTION
    {	EXISTING_DATABASE	= 0,
	CREATE_DATABASE	= 1,
	ATTACH_DATABASE	= 2
    }	REPL_DBADDOPTION;

typedef 
enum DBDROPOPTION
    {	LEAVE_DATABASE	= 0,
	DROP_DATABASE	= 1
    }	REPL_DBDROPOPTION;

typedef 
enum SUBSCRIPTION_HOST
    {	NONE	= 0,
	SYNC_MANAGER	= 1
    }	REPL_SUBSCRIPTION_HOST;

typedef 
enum STATUS_RETURN_CODE
    {	SUCCESS	= 0,
	CANCEL	= 1
    }	REPL_STATUS_RETURN_CODE;

#define S_REPLX_CANCELLED	MAKE_SCODE(SEVERITY_SUCCESS,FACILITY_ITF,0x0101)
#endif //COMMON_REPL_ENUMS_DEFINED
typedef 
enum VALIDATE_TYPE
    {	NO_VALIDATION	= 0,
	ROWCOUNT_ONLY	= 1,
	ROWCOUNT_AND_CHECKSUM	= 2,
	FAST_ROWCOUNT_ONLY	= 3,
	FAST_ROWCOUNT_AND_CHECKSUM	= 4
    }	REPL_VALIDATE_TYPE;

typedef 
enum EXCHANGE_TYPE
    {	UPLOAD	= 1,
	DOWNLOAD	= 2,
	BIDIRECTIONAL	= 3
    }	REPL_EXCHANGE_TYPE;



extern RPC_IF_HANDLE __MIDL_itf_sqlmergx_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_sqlmergx_0000_v0_0_s_ifspec;

#ifndef __ISQLMerge_INTERFACE_DEFINED__
#define __ISQLMerge_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: ISQLMerge
 * at Fri Nov 13 02:35:09 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_ISQLMerge;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("84923188-F94B-11d0-A8E8-00C04FC2DEB3")
    ISQLMerge : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Publication( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Publication( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Publisher( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Publisher( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PublisherDatabase( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PublisherDatabase( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PublisherSecurityMode( 
            /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PublisherSecurityMode( 
            /* [in] */ REPL_SECURITY_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PublisherLogin( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PublisherLogin( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PublisherPassword( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PublisherPassword( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Distributor( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Distributor( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DistributorSecurityMode( 
            /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DistributorSecurityMode( 
            /* [in] */ REPL_SECURITY_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DistributorLogin( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DistributorLogin( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DistributorPassword( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DistributorPassword( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Subscriber( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Subscriber( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberDatabase( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriberDatabase( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberSecurityMode( 
            /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriberSecurityMode( 
            /* [in] */ REPL_SECURITY_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberLogin( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriberLogin( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberPassword( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriberPassword( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberDatasourceType( 
            /* [retval][out] */ REPL_DATASOURCE_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriberDatasourceType( 
            /* [in] */ REPL_DATASOURCE_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberDatabasePath( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriberDatabasePath( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriptionType( 
            /* [retval][out] */ REPL_SUBSCRIPTION_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriptionType( 
            /* [in] */ REPL_SUBSCRIPTION_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExchangeType( 
            /* [retval][out] */ REPL_EXCHANGE_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ExchangeType( 
            /* [in] */ REPL_EXCHANGE_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LoginTimeout( 
            /* [retval][out] */ short __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_LoginTimeout( 
            /* [in] */ short newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_QueryTimeout( 
            /* [retval][out] */ short __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_QueryTimeout( 
            /* [in] */ short newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FTPAddress( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FTPAddress( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FTPPort( 
            /* [retval][out] */ long __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FTPPort( 
            /* [in] */ long newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FTPLogin( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FTPLogin( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FTPPassword( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FTPPassword( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DistributorAddress( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DistributorAddress( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DistributorNetwork( 
            /* [retval][out] */ REPL_NETWORK_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DistributorNetwork( 
            /* [in] */ REPL_NETWORK_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PublisherAddress( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PublisherAddress( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PublisherNetwork( 
            /* [retval][out] */ REPL_NETWORK_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PublisherNetwork( 
            /* [in] */ REPL_NETWORK_TYPE newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PublisherChanges( 
            /* [retval][out] */ long __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PublisherConflicts( 
            /* [retval][out] */ long __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberChanges( 
            /* [retval][out] */ long __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberConflicts( 
            /* [retval][out] */ long __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Validate( 
            /* [retval][out] */ REPL_VALIDATE_TYPE __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Validate( 
            /* [in] */ REPL_VALIDATE_TYPE newVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Initialize( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddSubscription( 
            /* [in] */ REPL_DBADDOPTION DBAddOption,
            /* [in] */ REPL_SUBSCRIPTION_HOST SubscriptionHost) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DropSubscription( 
            /* [in] */ REPL_DBDROPOPTION DBDropOption) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Run( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Terminate( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ReinitializeSubscription( void) = 0;
        
        virtual /* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE put_PublisherEncryptedPassword( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE put_DistributorEncryptedPassword( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriberEncryptedPassword( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProfileName( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProfileName( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ErrorRecords( 
            /* [retval][out] */ ISQLReplErrors __RPC_FAR *__RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HostName( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HostName( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriptionName( 
            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubscriptionName( 
            /* [in] */ BSTR newVal) = 0;
        
        virtual /* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE put_HostType( 
            /* [in] */ REPL_SUBSCRIPTION_HOST newVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISQLMergeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ISQLMerge __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ISQLMerge __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            ISQLMerge __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Publication )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Publication )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Publisher )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Publisher )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PublisherDatabase )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PublisherDatabase )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PublisherSecurityMode )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PublisherSecurityMode )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ REPL_SECURITY_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PublisherLogin )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PublisherLogin )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PublisherPassword )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PublisherPassword )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Distributor )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Distributor )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DistributorSecurityMode )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DistributorSecurityMode )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ REPL_SECURITY_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DistributorLogin )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DistributorLogin )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DistributorPassword )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DistributorPassword )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Subscriber )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Subscriber )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriberDatabase )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriberDatabase )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriberSecurityMode )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriberSecurityMode )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ REPL_SECURITY_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriberLogin )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriberLogin )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriberPassword )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriberPassword )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriberDatasourceType )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ REPL_DATASOURCE_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriberDatasourceType )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ REPL_DATASOURCE_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriberDatabasePath )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriberDatabasePath )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriptionType )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ REPL_SUBSCRIPTION_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriptionType )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ REPL_SUBSCRIPTION_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExchangeType )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ REPL_EXCHANGE_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ExchangeType )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ REPL_EXCHANGE_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LoginTimeout )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_LoginTimeout )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ short newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_QueryTimeout )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_QueryTimeout )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ short newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FTPAddress )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FTPAddress )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FTPPort )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FTPPort )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ long newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FTPLogin )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FTPLogin )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FTPPassword )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FTPPassword )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DistributorAddress )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DistributorAddress )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DistributorNetwork )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ REPL_NETWORK_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DistributorNetwork )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ REPL_NETWORK_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PublisherAddress )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PublisherAddress )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PublisherNetwork )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ REPL_NETWORK_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PublisherNetwork )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ REPL_NETWORK_TYPE newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PublisherChanges )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PublisherConflicts )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriberChanges )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriberConflicts )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Validate )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ REPL_VALIDATE_TYPE __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Validate )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ REPL_VALIDATE_TYPE newVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            ISQLMerge __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddSubscription )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ REPL_DBADDOPTION DBAddOption,
            /* [in] */ REPL_SUBSCRIPTION_HOST SubscriptionHost);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DropSubscription )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ REPL_DBDROPOPTION DBDropOption);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Run )( 
            ISQLMerge __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Terminate )( 
            ISQLMerge __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReinitializeSubscription )( 
            ISQLMerge __RPC_FAR * This);
        
        /* [helpstring][restricted][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_PublisherEncryptedPassword )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][restricted][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DistributorEncryptedPassword )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][restricted][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriberEncryptedPassword )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ProfileName )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ProfileName )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ErrorRecords )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ ISQLReplErrors __RPC_FAR *__RPC_FAR *pVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HostName )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HostName )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SubscriptionName )( 
            ISQLMerge __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SubscriptionName )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ BSTR newVal);
        
        /* [helpstring][restricted][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HostType )( 
            ISQLMerge __RPC_FAR * This,
            /* [in] */ REPL_SUBSCRIPTION_HOST newVal);
        
        END_INTERFACE
    } ISQLMergeVtbl;

    interface ISQLMerge
    {
        CONST_VTBL struct ISQLMergeVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISQLMerge_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ISQLMerge_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ISQLMerge_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ISQLMerge_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define ISQLMerge_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define ISQLMerge_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define ISQLMerge_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define ISQLMerge_get_Publication(This,pVal)	\
    (This)->lpVtbl -> get_Publication(This,pVal)

#define ISQLMerge_put_Publication(This,newVal)	\
    (This)->lpVtbl -> put_Publication(This,newVal)

#define ISQLMerge_get_Publisher(This,pVal)	\
    (This)->lpVtbl -> get_Publisher(This,pVal)

#define ISQLMerge_put_Publisher(This,newVal)	\
    (This)->lpVtbl -> put_Publisher(This,newVal)

#define ISQLMerge_get_PublisherDatabase(This,pVal)	\
    (This)->lpVtbl -> get_PublisherDatabase(This,pVal)

#define ISQLMerge_put_PublisherDatabase(This,newVal)	\
    (This)->lpVtbl -> put_PublisherDatabase(This,newVal)

#define ISQLMerge_get_PublisherSecurityMode(This,pVal)	\
    (This)->lpVtbl -> get_PublisherSecurityMode(This,pVal)

#define ISQLMerge_put_PublisherSecurityMode(This,newVal)	\
    (This)->lpVtbl -> put_PublisherSecurityMode(This,newVal)

#define ISQLMerge_get_PublisherLogin(This,pVal)	\
    (This)->lpVtbl -> get_PublisherLogin(This,pVal)

#define ISQLMerge_put_PublisherLogin(This,newVal)	\
    (This)->lpVtbl -> put_PublisherLogin(This,newVal)

#define ISQLMerge_get_PublisherPassword(This,pVal)	\
    (This)->lpVtbl -> get_PublisherPassword(This,pVal)

#define ISQLMerge_put_PublisherPassword(This,newVal)	\
    (This)->lpVtbl -> put_PublisherPassword(This,newVal)

#define ISQLMerge_get_Distributor(This,pVal)	\
    (This)->lpVtbl -> get_Distributor(This,pVal)

#define ISQLMerge_put_Distributor(This,newVal)	\
    (This)->lpVtbl -> put_Distributor(This,newVal)

#define ISQLMerge_get_DistributorSecurityMode(This,pVal)	\
    (This)->lpVtbl -> get_DistributorSecurityMode(This,pVal)

#define ISQLMerge_put_DistributorSecurityMode(This,newVal)	\
    (This)->lpVtbl -> put_DistributorSecurityMode(This,newVal)

#define ISQLMerge_get_DistributorLogin(This,pVal)	\
    (This)->lpVtbl -> get_DistributorLogin(This,pVal)

#define ISQLMerge_put_DistributorLogin(This,newVal)	\
    (This)->lpVtbl -> put_DistributorLogin(This,newVal)

#define ISQLMerge_get_DistributorPassword(This,pVal)	\
    (This)->lpVtbl -> get_DistributorPassword(This,pVal)

#define ISQLMerge_put_DistributorPassword(This,newVal)	\
    (This)->lpVtbl -> put_DistributorPassword(This,newVal)

#define ISQLMerge_get_Subscriber(This,pVal)	\
    (This)->lpVtbl -> get_Subscriber(This,pVal)

#define ISQLMerge_put_Subscriber(This,newVal)	\
    (This)->lpVtbl -> put_Subscriber(This,newVal)

#define ISQLMerge_get_SubscriberDatabase(This,pVal)	\
    (This)->lpVtbl -> get_SubscriberDatabase(This,pVal)

#define ISQLMerge_put_SubscriberDatabase(This,newVal)	\
    (This)->lpVtbl -> put_SubscriberDatabase(This,newVal)

#define ISQLMerge_get_SubscriberSecurityMode(This,pVal)	\
    (This)->lpVtbl -> get_SubscriberSecurityMode(This,pVal)

#define ISQLMerge_put_SubscriberSecurityMode(This,newVal)	\
    (This)->lpVtbl -> put_SubscriberSecurityMode(This,newVal)

#define ISQLMerge_get_SubscriberLogin(This,pVal)	\
    (This)->lpVtbl -> get_SubscriberLogin(This,pVal)

#define ISQLMerge_put_SubscriberLogin(This,newVal)	\
    (This)->lpVtbl -> put_SubscriberLogin(This,newVal)

#define ISQLMerge_get_SubscriberPassword(This,pVal)	\
    (This)->lpVtbl -> get_SubscriberPassword(This,pVal)

#define ISQLMerge_put_SubscriberPassword(This,newVal)	\
    (This)->lpVtbl -> put_SubscriberPassword(This,newVal)

#define ISQLMerge_get_SubscriberDatasourceType(This,pVal)	\
    (This)->lpVtbl -> get_SubscriberDatasourceType(This,pVal)

#define ISQLMerge_put_SubscriberDatasourceType(This,newVal)	\
    (This)->lpVtbl -> put_SubscriberDatasourceType(This,newVal)

#define ISQLMerge_get_SubscriberDatabasePath(This,pVal)	\
    (This)->lpVtbl -> get_SubscriberDatabasePath(This,pVal)

#define ISQLMerge_put_SubscriberDatabasePath(This,newVal)	\
    (This)->lpVtbl -> put_SubscriberDatabasePath(This,newVal)

#define ISQLMerge_get_SubscriptionType(This,pVal)	\
    (This)->lpVtbl -> get_SubscriptionType(This,pVal)

#define ISQLMerge_put_SubscriptionType(This,newVal)	\
    (This)->lpVtbl -> put_SubscriptionType(This,newVal)

#define ISQLMerge_get_ExchangeType(This,pVal)	\
    (This)->lpVtbl -> get_ExchangeType(This,pVal)

#define ISQLMerge_put_ExchangeType(This,newVal)	\
    (This)->lpVtbl -> put_ExchangeType(This,newVal)

#define ISQLMerge_get_LoginTimeout(This,pVal)	\
    (This)->lpVtbl -> get_LoginTimeout(This,pVal)

#define ISQLMerge_put_LoginTimeout(This,newVal)	\
    (This)->lpVtbl -> put_LoginTimeout(This,newVal)

#define ISQLMerge_get_QueryTimeout(This,pVal)	\
    (This)->lpVtbl -> get_QueryTimeout(This,pVal)

#define ISQLMerge_put_QueryTimeout(This,newVal)	\
    (This)->lpVtbl -> put_QueryTimeout(This,newVal)

#define ISQLMerge_get_FTPAddress(This,pVal)	\
    (This)->lpVtbl -> get_FTPAddress(This,pVal)

#define ISQLMerge_put_FTPAddress(This,newVal)	\
    (This)->lpVtbl -> put_FTPAddress(This,newVal)

#define ISQLMerge_get_FTPPort(This,pVal)	\
    (This)->lpVtbl -> get_FTPPort(This,pVal)

#define ISQLMerge_put_FTPPort(This,newVal)	\
    (This)->lpVtbl -> put_FTPPort(This,newVal)

#define ISQLMerge_get_FTPLogin(This,pVal)	\
    (This)->lpVtbl -> get_FTPLogin(This,pVal)

#define ISQLMerge_put_FTPLogin(This,newVal)	\
    (This)->lpVtbl -> put_FTPLogin(This,newVal)

#define ISQLMerge_get_FTPPassword(This,pVal)	\
    (This)->lpVtbl -> get_FTPPassword(This,pVal)

#define ISQLMerge_put_FTPPassword(This,newVal)	\
    (This)->lpVtbl -> put_FTPPassword(This,newVal)

#define ISQLMerge_get_DistributorAddress(This,pVal)	\
    (This)->lpVtbl -> get_DistributorAddress(This,pVal)

#define ISQLMerge_put_DistributorAddress(This,newVal)	\
    (This)->lpVtbl -> put_DistributorAddress(This,newVal)

#define ISQLMerge_get_DistributorNetwork(This,pVal)	\
    (This)->lpVtbl -> get_DistributorNetwork(This,pVal)

#define ISQLMerge_put_DistributorNetwork(This,newVal)	\
    (This)->lpVtbl -> put_DistributorNetwork(This,newVal)

#define ISQLMerge_get_PublisherAddress(This,pVal)	\
    (This)->lpVtbl -> get_PublisherAddress(This,pVal)

#define ISQLMerge_put_PublisherAddress(This,newVal)	\
    (This)->lpVtbl -> put_PublisherAddress(This,newVal)

#define ISQLMerge_get_PublisherNetwork(This,pVal)	\
    (This)->lpVtbl -> get_PublisherNetwork(This,pVal)

#define ISQLMerge_put_PublisherNetwork(This,newVal)	\
    (This)->lpVtbl -> put_PublisherNetwork(This,newVal)

#define ISQLMerge_get_PublisherChanges(This,pVal)	\
    (This)->lpVtbl -> get_PublisherChanges(This,pVal)

#define ISQLMerge_get_PublisherConflicts(This,pVal)	\
    (This)->lpVtbl -> get_PublisherConflicts(This,pVal)

#define ISQLMerge_get_SubscriberChanges(This,pVal)	\
    (This)->lpVtbl -> get_SubscriberChanges(This,pVal)

#define ISQLMerge_get_SubscriberConflicts(This,pVal)	\
    (This)->lpVtbl -> get_SubscriberConflicts(This,pVal)

#define ISQLMerge_get_Validate(This,pVal)	\
    (This)->lpVtbl -> get_Validate(This,pVal)

#define ISQLMerge_put_Validate(This,newVal)	\
    (This)->lpVtbl -> put_Validate(This,newVal)

#define ISQLMerge_Initialize(This)	\
    (This)->lpVtbl -> Initialize(This)

#define ISQLMerge_AddSubscription(This,DBAddOption,SubscriptionHost)	\
    (This)->lpVtbl -> AddSubscription(This,DBAddOption,SubscriptionHost)

#define ISQLMerge_DropSubscription(This,DBDropOption)	\
    (This)->lpVtbl -> DropSubscription(This,DBDropOption)

#define ISQLMerge_Run(This)	\
    (This)->lpVtbl -> Run(This)

#define ISQLMerge_Terminate(This)	\
    (This)->lpVtbl -> Terminate(This)

#define ISQLMerge_ReinitializeSubscription(This)	\
    (This)->lpVtbl -> ReinitializeSubscription(This)

#define ISQLMerge_put_PublisherEncryptedPassword(This,newVal)	\
    (This)->lpVtbl -> put_PublisherEncryptedPassword(This,newVal)

#define ISQLMerge_put_DistributorEncryptedPassword(This,newVal)	\
    (This)->lpVtbl -> put_DistributorEncryptedPassword(This,newVal)

#define ISQLMerge_put_SubscriberEncryptedPassword(This,newVal)	\
    (This)->lpVtbl -> put_SubscriberEncryptedPassword(This,newVal)

#define ISQLMerge_get_ProfileName(This,pVal)	\
    (This)->lpVtbl -> get_ProfileName(This,pVal)

#define ISQLMerge_put_ProfileName(This,newVal)	\
    (This)->lpVtbl -> put_ProfileName(This,newVal)

#define ISQLMerge_get_ErrorRecords(This,pVal)	\
    (This)->lpVtbl -> get_ErrorRecords(This,pVal)

#define ISQLMerge_get_HostName(This,pVal)	\
    (This)->lpVtbl -> get_HostName(This,pVal)

#define ISQLMerge_put_HostName(This,newVal)	\
    (This)->lpVtbl -> put_HostName(This,newVal)

#define ISQLMerge_get_SubscriptionName(This,pVal)	\
    (This)->lpVtbl -> get_SubscriptionName(This,pVal)

#define ISQLMerge_put_SubscriptionName(This,newVal)	\
    (This)->lpVtbl -> put_SubscriptionName(This,newVal)

#define ISQLMerge_put_HostType(This,newVal)	\
    (This)->lpVtbl -> put_HostType(This,newVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_Publication_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_Publication_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_Publication_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_Publication_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_Publisher_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_Publisher_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_Publisher_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_Publisher_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_PublisherDatabase_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_PublisherDatabase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_PublisherDatabase_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_PublisherDatabase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_PublisherSecurityMode_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_PublisherSecurityMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_PublisherSecurityMode_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ REPL_SECURITY_TYPE newVal);


void __RPC_STUB ISQLMerge_put_PublisherSecurityMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_PublisherLogin_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_PublisherLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_PublisherLogin_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_PublisherLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_PublisherPassword_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_PublisherPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_PublisherPassword_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_PublisherPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_Distributor_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_Distributor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_Distributor_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_Distributor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_DistributorSecurityMode_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_DistributorSecurityMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_DistributorSecurityMode_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ REPL_SECURITY_TYPE newVal);


void __RPC_STUB ISQLMerge_put_DistributorSecurityMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_DistributorLogin_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_DistributorLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_DistributorLogin_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_DistributorLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_DistributorPassword_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_DistributorPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_DistributorPassword_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_DistributorPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_Subscriber_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_Subscriber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_Subscriber_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_Subscriber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_SubscriberDatabase_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_SubscriberDatabase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_SubscriberDatabase_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_SubscriberDatabase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_SubscriberSecurityMode_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ REPL_SECURITY_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_SubscriberSecurityMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_SubscriberSecurityMode_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ REPL_SECURITY_TYPE newVal);


void __RPC_STUB ISQLMerge_put_SubscriberSecurityMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_SubscriberLogin_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_SubscriberLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_SubscriberLogin_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_SubscriberLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_SubscriberPassword_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_SubscriberPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_SubscriberPassword_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_SubscriberPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_SubscriberDatasourceType_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ REPL_DATASOURCE_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_SubscriberDatasourceType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_SubscriberDatasourceType_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ REPL_DATASOURCE_TYPE newVal);


void __RPC_STUB ISQLMerge_put_SubscriberDatasourceType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_SubscriberDatabasePath_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_SubscriberDatabasePath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_SubscriberDatabasePath_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_SubscriberDatabasePath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_SubscriptionType_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ REPL_SUBSCRIPTION_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_SubscriptionType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_SubscriptionType_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ REPL_SUBSCRIPTION_TYPE newVal);


void __RPC_STUB ISQLMerge_put_SubscriptionType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_ExchangeType_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ REPL_EXCHANGE_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_ExchangeType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_ExchangeType_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ REPL_EXCHANGE_TYPE newVal);


void __RPC_STUB ISQLMerge_put_ExchangeType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_LoginTimeout_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_LoginTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_LoginTimeout_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ short newVal);


void __RPC_STUB ISQLMerge_put_LoginTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_QueryTimeout_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_QueryTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_QueryTimeout_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ short newVal);


void __RPC_STUB ISQLMerge_put_QueryTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_FTPAddress_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_FTPAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_FTPAddress_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_FTPAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_FTPPort_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_FTPPort_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_FTPPort_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ long newVal);


void __RPC_STUB ISQLMerge_put_FTPPort_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_FTPLogin_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_FTPLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_FTPLogin_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_FTPLogin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_FTPPassword_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_FTPPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_FTPPassword_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_FTPPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_DistributorAddress_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_DistributorAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_DistributorAddress_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_DistributorAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_DistributorNetwork_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ REPL_NETWORK_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_DistributorNetwork_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_DistributorNetwork_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ REPL_NETWORK_TYPE newVal);


void __RPC_STUB ISQLMerge_put_DistributorNetwork_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_PublisherAddress_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_PublisherAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_PublisherAddress_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_PublisherAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_PublisherNetwork_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ REPL_NETWORK_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_PublisherNetwork_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_PublisherNetwork_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ REPL_NETWORK_TYPE newVal);


void __RPC_STUB ISQLMerge_put_PublisherNetwork_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_PublisherChanges_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_PublisherChanges_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_PublisherConflicts_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_PublisherConflicts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_SubscriberChanges_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_SubscriberChanges_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_SubscriberConflicts_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_SubscriberConflicts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_Validate_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ REPL_VALIDATE_TYPE __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_Validate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_Validate_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ REPL_VALIDATE_TYPE newVal);


void __RPC_STUB ISQLMerge_put_Validate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLMerge_Initialize_Proxy( 
    ISQLMerge __RPC_FAR * This);


void __RPC_STUB ISQLMerge_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLMerge_AddSubscription_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ REPL_DBADDOPTION DBAddOption,
    /* [in] */ REPL_SUBSCRIPTION_HOST SubscriptionHost);


void __RPC_STUB ISQLMerge_AddSubscription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLMerge_DropSubscription_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ REPL_DBDROPOPTION DBDropOption);


void __RPC_STUB ISQLMerge_DropSubscription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLMerge_Run_Proxy( 
    ISQLMerge __RPC_FAR * This);


void __RPC_STUB ISQLMerge_Run_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLMerge_Terminate_Proxy( 
    ISQLMerge __RPC_FAR * This);


void __RPC_STUB ISQLMerge_Terminate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLMerge_ReinitializeSubscription_Proxy( 
    ISQLMerge __RPC_FAR * This);


void __RPC_STUB ISQLMerge_ReinitializeSubscription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_PublisherEncryptedPassword_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_PublisherEncryptedPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_DistributorEncryptedPassword_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_DistributorEncryptedPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_SubscriberEncryptedPassword_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_SubscriberEncryptedPassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_ProfileName_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_ProfileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_ProfileName_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_ProfileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_ErrorRecords_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ ISQLReplErrors __RPC_FAR *__RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_ErrorRecords_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_HostName_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_HostName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_HostName_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_HostName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ISQLMerge_get_SubscriptionName_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVal);


void __RPC_STUB ISQLMerge_get_SubscriptionName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_SubscriptionName_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ BSTR newVal);


void __RPC_STUB ISQLMerge_put_SubscriptionName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][restricted][id][propput] */ HRESULT STDMETHODCALLTYPE ISQLMerge_put_HostType_Proxy( 
    ISQLMerge __RPC_FAR * This,
    /* [in] */ REPL_SUBSCRIPTION_HOST newVal);


void __RPC_STUB ISQLMerge_put_HostType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISQLMerge_INTERFACE_DEFINED__ */



#ifndef __SQLMERGXLib_LIBRARY_DEFINED__
#define __SQLMERGXLib_LIBRARY_DEFINED__

/****************************************
 * Generated header for library: SQLMERGXLib
 * at Fri Nov 13 02:35:09 1998
 * using MIDL 3.01.75
 ****************************************/
/* [helpstring][version][uuid] */ 



EXTERN_C const IID LIBID_SQLMERGXLib;

#ifndef ___SQLMergeEvents_DISPINTERFACE_DEFINED__
#define ___SQLMergeEvents_DISPINTERFACE_DEFINED__

/****************************************
 * Generated header for dispinterface: _SQLMergeEvents
 * at Fri Nov 13 02:35:09 1998
 * using MIDL 3.01.75
 ****************************************/
/* [helpstring][uuid] */ 



EXTERN_C const IID DIID__SQLMergeEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    interface DECLSPEC_UUID("84923186-F94B-11d0-A8E8-00C04FC2DEB3")
    _SQLMergeEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _SQLMergeEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            _SQLMergeEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            _SQLMergeEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            _SQLMergeEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            _SQLMergeEvents __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            _SQLMergeEvents __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            _SQLMergeEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            _SQLMergeEvents __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } _SQLMergeEventsVtbl;

    interface _SQLMergeEvents
    {
        CONST_VTBL struct _SQLMergeEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SQLMergeEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define _SQLMergeEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define _SQLMergeEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define _SQLMergeEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define _SQLMergeEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define _SQLMergeEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define _SQLMergeEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___SQLMergeEvents_DISPINTERFACE_DEFINED__ */


#ifdef __cplusplus
EXTERN_C const CLSID CLSID_SQLMerge;

class DECLSPEC_UUID("84923184-F94B-11d0-A8E8-00C04FC2DEB3")
SQLMerge;
#endif
#endif /* __SQLMERGXLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SqlNsx.h ===
#include "rpc.h"
#include "rpcndr.h"

#ifndef __sqlnsx_h__
#define __sqlnsx_h__

#ifndef DO_ODL_TYPDEFS_
#define DO_ODL_TYPDEFS_
#define DO_HELP_CONSTANTS_
#include "sqlnsdef.h"
#endif

#ifdef __cplusplus

extern "C"{

#ifndef SQLNS_INTERNAL 

#define ISQLNSDispatch IDispatch

// Repeat the IDispatch members because C doesn't provide inheritance.
#define SQLNS_DISPATCH_BASE(itf)															\
		STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID * ppvObj) PURE;				\
		STDMETHOD_(ULONG,AddRef) (THIS) PURE;												\
		STDMETHOD_(ULONG,Release) (THIS) PURE;												\
		STDMETHOD(GetTypeInfoCount)(THIS_ UINT * pcTypeInfo) PURE;							\
		STDMETHOD(GetTypeInfo)(THIS_ UINT iTypeInfo, LCID lcid, ITypeInfo ** ppTI) PURE;	\
		STDMETHOD(GetIDsOfNames)(THIS_ REFIID riid, LPOLESTR * rgszNames, UINT cNames,		\
								LCID lcid, DISPID * rgdispid) PURE;							\
		STDMETHOD(Invoke)(THIS_ DISPID dispidMember, REFIID riid, LCID lcid, WORD wFlags,	\
								DISPPARAMS * pdispparams, LPVARIANT pvarResult,				\
								LPEXCEPINFO pexcepinfo, UINT * puArgErr) PURE;

#endif	// ndef SQLNS_INTERNAL

#endif 

/* Forward Declarations */ 

#ifndef __ISQLNamespace_FWD_DEFINED__
#define __ISQLNamespace_FWD_DEFINED__
typedef interface ISQLNamespace ISQLNamespace;
#endif 	/* __ISQLNamespace_FWD_DEFINED__ */


#ifndef __ISQLNamespaceObject_FWD_DEFINED__
#define __ISQLNamespaceObject_FWD_DEFINED__
typedef interface ISQLNamespaceObject ISQLNamespaceObject;
#endif 	/* __ISQLNamespaceObject_FWD_DEFINED__ */


#ifndef __ISQLNamespaceCommand_FWD_DEFINED__
#define __ISQLNamespaceCommand_FWD_DEFINED__
typedef interface ISQLNamespaceCommand ISQLNamespaceCommand;
#endif 	/* __ISQLNamespaceCommand_FWD_DEFINED__ */


#ifndef __ISQLNamespaceCommands_FWD_DEFINED__
#define __ISQLNamespaceCommands_FWD_DEFINED__
typedef interface ISQLNamespaceCommands ISQLNamespaceCommands;
#endif 	/* __ISQLNamespaceCommands_FWD_DEFINED__ */


#ifndef __SQLNamespace_FWD_DEFINED__
#define __SQLNamespace_FWD_DEFINED__

#ifdef __cplusplus
typedef class SQLNamespace SQLNamespace;
#else
typedef struct SQLNamespace SQLNamespace;
#endif /* __cplusplus */

#endif 	/* __SQLNamespace_FWD_DEFINED__ */


void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 


#ifndef __SQLNS_LIBRARY_DEFINED__
#define __SQLNS_LIBRARY_DEFINED__

/****************************************
 * Generated header for library: SQLNS
 * at Sat Nov 29 12:59:01 1997
 * using MIDL 3.01.75
 ****************************************/
/* [helpcontext][helpstring][helpfile][lcid][uuid][version] */ 







DEFINE_GUID(LIBID_SQLNS,0x00026f30,0xEB1C,0x11cf,0xAE,0x6E,0x00,0xAA,0x00,0x4A,0x34,0xD5);

#ifndef __ISQLNamespace_INTERFACE_DEFINED__
#define __ISQLNamespace_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: ISQLNamespace
 * at Sat Nov 29 12:59:01 1997
 * using MIDL 3.01.75
 ****************************************/
/* [object][helpcontext][helpstring][uuid][nonextensible][dual] */ 



DEFINE_GUID(IID_ISQLNamespace,0x00026f20,0xEB1C,0x11cf,0xAE,0x6E,0x00,0xAA,0x00,0x4A,0x34,0xD5);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    //interface DECLSPEC_UUID("00026f20-EB1C-11cf-AE6E-00AA004A34D5")
    //ISQLNamespace
    //{
    //public:
	DECLARE_INTERFACE_(ISQLNamespace, ISQLNSDispatch)
	{
		SQLNS_DISPATCH_BASE(ISQLNamespace);
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ BSTR bstrAppName,
            /* [optional][in] */ SQLNSRootType rootType,
            /* [optional][in] */ VARIANT * pRootInfo,
            /* [optional][in] */ long hWnd) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetRootItem( 
            /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetChildrenCount( 
            /* [in] */ HSQLNSITEM ItemIn,
            /* [retval][out] */ long __RPC_FAR *pRetVal) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetFirstChildItem( 
            /* [in] */ HSQLNSITEM ItemIn,
            /* [optional][in] */ SQLNSObjectType matchType,
            /* [optional][in] */ BSTR matchName,
            /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetNextSiblingItem( 
            /* [in] */ HSQLNSITEM ItemIn,
            /* [optional][in] */ SQLNSObjectType matchType,
            /* [optional][in] */ BSTR matchName,
            /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPreviousSiblingItem( 
            /* [in] */ HSQLNSITEM ItemIn,
            /* [optional][in] */ SQLNSObjectType matchType,
            /* [optional][in] */ BSTR matchName,
            /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetParentItem( 
            /* [in] */ HSQLNSITEM ItemIn,
            /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetName( 
            /* [in] */ HSQLNSITEM ItemIn,
            /* [retval][out] */ BSTR __RPC_FAR *pRetVal) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetType( 
            /* [in] */ HSQLNSITEM ItemIn,
            /* [retval][out] */ SQLNSObjectType __RPC_FAR *pRetVal) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSQLNamespaceObject( 
            /* [in] */ HSQLNSITEM ItemIn,
            /* [retval][out] */ ISQLNamespaceObject __RPC_FAR *__RPC_FAR *pRetVal) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSQLDMOObject( 
            /* [in] */ HSQLNSITEM ItemIn,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *pRetVal) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Refresh( 
            /* [in] */ HSQLNSITEM ItemIn) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE SetLCID( 
            /* [in] */ long lcid) = 0;
    };
    
#else 	/* C style interface */

    typedef struct ISQLNamespaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ISQLNamespace __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ISQLNamespace __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            ISQLNamespace __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ BSTR bstrAppName,
            /* [optional][in] */ SQLNSRootType rootType,
            /* [optional][in] */ VARIANT * pRootInfo,
            /* [optional][in] */ long hWnd);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetRootItem )( 
            ISQLNamespace __RPC_FAR * This,
            /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetChildrenCount )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ HSQLNSITEM ItemIn,
            /* [retval][out] */ long __RPC_FAR *pRetVal);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFirstChildItem )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ HSQLNSITEM ItemIn,
            /* [optional][in] */ SQLNSObjectType matchType,
            /* [optional][in] */ BSTR matchName,
            /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNextSiblingItem )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ HSQLNSITEM ItemIn,
            /* [optional][in] */ SQLNSObjectType matchType,
            /* [optional][in] */ BSTR matchName,
            /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPreviousSiblingItem )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ HSQLNSITEM ItemIn,
            /* [optional][in] */ SQLNSObjectType matchType,
            /* [optional][in] */ BSTR matchName,
            /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetParentItem )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ HSQLNSITEM ItemIn,
            /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetName )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ HSQLNSITEM ItemIn,
            /* [retval][out] */ BSTR __RPC_FAR *pRetVal);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetType )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ HSQLNSITEM ItemIn,
            /* [retval][out] */ SQLNSObjectType __RPC_FAR *pRetVal);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSQLNamespaceObject )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ HSQLNSITEM ItemIn,
            /* [retval][out] */ ISQLNamespaceObject __RPC_FAR *__RPC_FAR *pRetVal);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSQLDMOObject )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ HSQLNSITEM ItemIn,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *pRetVal);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Refresh )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ HSQLNSITEM ItemIn);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLCID )( 
            ISQLNamespace __RPC_FAR * This,
            /* [in] */ long lcid);
        
        END_INTERFACE
    } ISQLNamespaceVtbl;

    interface ISQLNamespace
    {
        CONST_VTBL struct ISQLNamespaceVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISQLNamespace_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ISQLNamespace_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ISQLNamespace_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ISQLNamespace_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define ISQLNamespace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define ISQLNamespace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define ISQLNamespace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define ISQLNamespace_Initialize(This,bstrAppName,rootType,pRootInfo,hWnd)	\
    (This)->lpVtbl -> Initialize(This,bstrAppName,rootType,pRootInfo,hWnd)

#define ISQLNamespace_GetRootItem(This,pItemOut)	\
    (This)->lpVtbl -> GetRootItem(This,pItemOut)

#define ISQLNamespace_GetChildrenCount(This,ItemIn,pRetVal)	\
    (This)->lpVtbl -> GetChildrenCount(This,ItemIn,pRetVal)

#define ISQLNamespace_GetFirstChildItem(This,ItemIn,matchType,matchName,pItemOut)	\
    (This)->lpVtbl -> GetFirstChildItem(This,ItemIn,matchType,matchName,pItemOut)

#define ISQLNamespace_GetNextSiblingItem(This,ItemIn,matchType,matchName,pItemOut)	\
    (This)->lpVtbl -> GetNextSiblingItem(This,ItemIn,matchType,matchName,pItemOut)

#define ISQLNamespace_GetPreviousSiblingItem(This,ItemIn,matchType,matchName,pItemOut)	\
    (This)->lpVtbl -> GetPreviousSiblingItem(This,ItemIn,matchType,matchName,pItemOut)

#define ISQLNamespace_GetParentItem(This,ItemIn,pItemOut)	\
    (This)->lpVtbl -> GetParentItem(This,ItemIn,pItemOut)

#define ISQLNamespace_GetName(This,ItemIn,pRetVal)	\
    (This)->lpVtbl -> GetName(This,ItemIn,pRetVal)

#define ISQLNamespace_GetType(This,ItemIn,pRetVal)	\
    (This)->lpVtbl -> GetType(This,ItemIn,pRetVal)

#define ISQLNamespace_GetSQLNamespaceObject(This,ItemIn,pRetVal)	\
    (This)->lpVtbl -> GetSQLNamespaceObject(This,ItemIn,pRetVal)

#define ISQLNamespace_GetSQLDMOObject(This,ItemIn,pRetVal)	\
    (This)->lpVtbl -> GetSQLDMOObject(This,ItemIn,pRetVal)

#define ISQLNamespace_Refresh(This,ItemIn)	\
    (This)->lpVtbl -> Refresh(This,ItemIn)

#define ISQLNamespace_SetLCID(This,lcid)	\
    (This)->lpVtbl -> SetLCID(This,lcid)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespace_Initialize_Proxy( 
    ISQLNamespace __RPC_FAR * This,
    /* [in] */ BSTR bstrAppName,
    /* [optional][in] */ SQLNSRootType rootType,
    /* [optional][in] */ VARIANT * pRootInfo,
    /* [optional][in] */ long hWnd);


void __RPC_STUB ISQLNamespace_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespace_GetRootItem_Proxy( 
    ISQLNamespace __RPC_FAR * This,
    /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut);


void __RPC_STUB ISQLNamespace_GetRootItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespace_GetChildrenCount_Proxy( 
    ISQLNamespace __RPC_FAR * This,
    /* [in] */ HSQLNSITEM ItemIn,
    /* [retval][out] */ long __RPC_FAR *pRetVal);


void __RPC_STUB ISQLNamespace_GetChildrenCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespace_GetFirstChildItem_Proxy( 
    ISQLNamespace __RPC_FAR * This,
    /* [in] */ HSQLNSITEM ItemIn,
    /* [optional][in] */ SQLNSObjectType matchType,
    /* [optional][in] */ BSTR matchName,
    /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut);


void __RPC_STUB ISQLNamespace_GetFirstChildItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespace_GetNextSiblingItem_Proxy( 
    ISQLNamespace __RPC_FAR * This,
    /* [in] */ HSQLNSITEM ItemIn,
    /* [optional][in] */ SQLNSObjectType matchType,
    /* [optional][in] */ BSTR matchName,
    /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut);


void __RPC_STUB ISQLNamespace_GetNextSiblingItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespace_GetPreviousSiblingItem_Proxy( 
    ISQLNamespace __RPC_FAR * This,
    /* [in] */ HSQLNSITEM ItemIn,
    /* [optional][in] */ SQLNSObjectType matchType,
    /* [optional][in] */ BSTR matchName,
    /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut);


void __RPC_STUB ISQLNamespace_GetPreviousSiblingItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespace_GetParentItem_Proxy( 
    ISQLNamespace __RPC_FAR * This,
    /* [in] */ HSQLNSITEM ItemIn,
    /* [retval][out] */ HSQLNSITEM __RPC_FAR *pItemOut);


void __RPC_STUB ISQLNamespace_GetParentItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespace_GetName_Proxy( 
    ISQLNamespace __RPC_FAR * This,
    /* [in] */ HSQLNSITEM ItemIn,
    /* [retval][out] */ BSTR __RPC_FAR *pRetVal);


void __RPC_STUB ISQLNamespace_GetName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespace_GetType_Proxy( 
    ISQLNamespace __RPC_FAR * This,
    /* [in] */ HSQLNSITEM ItemIn,
    /* [retval][out] */ SQLNSObjectType __RPC_FAR *pRetVal);


void __RPC_STUB ISQLNamespace_GetType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespace_GetSQLNamespaceObject_Proxy( 
    ISQLNamespace __RPC_FAR * This,
    /* [in] */ HSQLNSITEM ItemIn,
    /* [retval][out] */ ISQLNamespaceObject __RPC_FAR *__RPC_FAR *pRetVal);


void __RPC_STUB ISQLNamespace_GetSQLNamespaceObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespace_GetSQLDMOObject_Proxy( 
    ISQLNamespace __RPC_FAR * This,
    /* [in] */ HSQLNSITEM ItemIn,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *pRetVal);


void __RPC_STUB ISQLNamespace_GetSQLDMOObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespace_Refresh_Proxy( 
    ISQLNamespace __RPC_FAR * This,
    /* [in] */ HSQLNSITEM ItemIn);


void __RPC_STUB ISQLNamespace_Refresh_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespace_SetLCID_Proxy( 
    ISQLNamespace __RPC_FAR * This,
    /* [in] */ long lcid);


void __RPC_STUB ISQLNamespace_SetLCID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISQLNamespace_INTERFACE_DEFINED__ */


#ifndef __ISQLNamespaceObject_INTERFACE_DEFINED__
#define __ISQLNamespaceObject_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: ISQLNamespaceObject
 * at Sat Nov 29 12:59:01 1997
 * using MIDL 3.01.75
 ****************************************/
/* [object][helpcontext][helpstring][uuid][nonextensible][dual] */ 



DEFINE_GUID(IID_ISQLNamespaceObject,0x00026f21,0xEB1C,0x11cf,0xAE,0x6E,0x00,0xAA,0x00,0x4A,0x34,0xD5);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    //interface DECLSPEC_UUID("00026f21-EB1C-11cf-AE6E-00AA004A34D5")
    //ISQLNamespaceObject
    //{
    //public:
	DECLARE_INTERFACE_(ISQLNamespaceObject, ISQLNSDispatch)
	{
		SQLNS_DISPATCH_BASE(ISQLNamespaceObject);

        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE GetCommands( 
            /* [retval][out] */ ISQLNamespaceCommands __RPC_FAR *__RPC_FAR *pRetVal) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE GetName( 
            /* [retval][out] */ BSTR __RPC_FAR *pRetVal) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE GetType( 
            /* [retval][out] */ SQLNSObjectType __RPC_FAR *pRetVal) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE GetHandle( 
            /* [retval][out] */ HSQLNSITEM __RPC_FAR *pRetVal) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ExecuteCommandByName( 
            /* [in] */ BSTR bstrCommand,
            /* [optional][in] */ long hwnd,
            /* [optional][in] */ SQLNSModality modality) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ExecuteCommandByID( 
            /* [in] */ SQLNSCommandID CommandID,
            /* [optional][in] */ long hwnd,
            /* [optional][in] */ SQLNSModality modality) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISQLNamespaceObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ISQLNamespaceObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ISQLNamespaceObject __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ISQLNamespaceObject __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            ISQLNamespaceObject __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            ISQLNamespaceObject __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            ISQLNamespaceObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            ISQLNamespaceObject __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommands )( 
            ISQLNamespaceObject __RPC_FAR * This,
            /* [retval][out] */ ISQLNamespaceCommands __RPC_FAR *__RPC_FAR *pRetVal);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetName )( 
            ISQLNamespaceObject __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pRetVal);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetType )( 
            ISQLNamespaceObject __RPC_FAR * This,
            /* [retval][out] */ SQLNSObjectType __RPC_FAR *pRetVal);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHandle )( 
            ISQLNamespaceObject __RPC_FAR * This,
            /* [retval][out] */ HSQLNSITEM __RPC_FAR *pRetVal);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ExecuteCommandByName )( 
            ISQLNamespaceObject __RPC_FAR * This,
            /* [in] */ BSTR bstrCommand,
            /* [optional][in] */ long hwnd,
            /* [optional][in] */ SQLNSModality modality);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ExecuteCommandByID )( 
            ISQLNamespaceObject __RPC_FAR * This,
            /* [in] */ SQLNSCommandID CommandID,
            /* [optional][in] */ long hwnd,
            /* [optional][in] */ SQLNSModality modality);
        
        END_INTERFACE
    } ISQLNamespaceObjectVtbl;

    interface ISQLNamespaceObject
    {
        CONST_VTBL struct ISQLNamespaceObjectVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISQLNamespaceObject_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ISQLNamespaceObject_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ISQLNamespaceObject_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ISQLNamespaceObject_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define ISQLNamespaceObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define ISQLNamespaceObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define ISQLNamespaceObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define ISQLNamespaceObject_GetCommands(This,pRetVal)	\
    (This)->lpVtbl -> GetCommands(This,pRetVal)

#define ISQLNamespaceObject_GetName(This,pRetVal)	\
    (This)->lpVtbl -> GetName(This,pRetVal)

#define ISQLNamespaceObject_GetType(This,pRetVal)	\
    (This)->lpVtbl -> GetType(This,pRetVal)

#define ISQLNamespaceObject_GetHandle(This,pRetVal)	\
    (This)->lpVtbl -> GetHandle(This,pRetVal)

#define ISQLNamespaceObject_ExecuteCommandByName(This,bstrCommand,hwnd,modality)	\
    (This)->lpVtbl -> ExecuteCommandByName(This,bstrCommand,hwnd,modality)

#define ISQLNamespaceObject_ExecuteCommandByID(This,CommandID,hwnd,modality)	\
    (This)->lpVtbl -> ExecuteCommandByID(This,CommandID,hwnd,modality)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespaceObject_GetCommands_Proxy( 
    ISQLNamespaceObject __RPC_FAR * This,
    /* [retval][out] */ ISQLNamespaceCommands __RPC_FAR *__RPC_FAR *pRetVal);


void __RPC_STUB ISQLNamespaceObject_GetCommands_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespaceObject_GetName_Proxy( 
    ISQLNamespaceObject __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pRetVal);


void __RPC_STUB ISQLNamespaceObject_GetName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespaceObject_GetType_Proxy( 
    ISQLNamespaceObject __RPC_FAR * This,
    /* [retval][out] */ SQLNSObjectType __RPC_FAR *pRetVal);


void __RPC_STUB ISQLNamespaceObject_GetType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespaceObject_GetHandle_Proxy( 
    ISQLNamespaceObject __RPC_FAR * This,
    /* [retval][out] */ HSQLNSITEM __RPC_FAR *pRetVal);


void __RPC_STUB ISQLNamespaceObject_GetHandle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespaceObject_ExecuteCommandByName_Proxy( 
    ISQLNamespaceObject __RPC_FAR * This,
    /* [in] */ BSTR bstrCommand,
    /* [optional][in] */ long hwnd,
    /* [optional][in] */ SQLNSModality modality);


void __RPC_STUB ISQLNamespaceObject_ExecuteCommandByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespaceObject_ExecuteCommandByID_Proxy( 
    ISQLNamespaceObject __RPC_FAR * This,
    /* [in] */ SQLNSCommandID CommandID,
    /* [optional][in] */ long hwnd,
    /* [optional][in] */ SQLNSModality modality);


void __RPC_STUB ISQLNamespaceObject_ExecuteCommandByID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISQLNamespaceObject_INTERFACE_DEFINED__ */


#ifndef __ISQLNamespaceCommand_INTERFACE_DEFINED__
#define __ISQLNamespaceCommand_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: ISQLNamespaceCommand
 * at Sat Nov 29 12:59:01 1997
 * using MIDL 3.01.75
 ****************************************/
/* [object][helpcontext][helpstring][uuid][nonextensible][dual] */ 



DEFINE_GUID(IID_ISQLNamespaceCommand,0x00026f22,0xEB1C,0x11cf,0xAE,0x6E,0x00,0xAA,0x00,0x4A,0x34,0xD5);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    //interface DECLSPEC_UUID("00026f22-EB1C-11cf-AE6E-00AA004A34D5")
    //ISQLNamespaceCommand
    //{
    //public:
	DECLARE_INTERFACE_(ISQLNamespaceCommand, ISQLNSDispatch)
	{
		SQLNS_DISPATCH_BASE(ISQLNamespaceCommand);

        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE GetName( 
            /* [retval][out] */ BSTR __RPC_FAR *pRetVal) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE GetCommandID( 
            /* [retval][out] */ SQLNSCommandID __RPC_FAR *pRetVal) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE GetHelpString( 
            /* [retval][out] */ BSTR __RPC_FAR *pRetVal) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE GetCommandGroup( 
            /* [retval][out] */ long __RPC_FAR *pRetVal) = 0;
        
        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Execute( 
            /* [optional][in] */ long hwnd,
            /* [optional][in] */ SQLNSModality modality) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISQLNamespaceCommandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ISQLNamespaceCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ISQLNamespaceCommand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ISQLNamespaceCommand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            ISQLNamespaceCommand __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            ISQLNamespaceCommand __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            ISQLNamespaceCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            ISQLNamespaceCommand __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpString )( 
            ISQLNamespaceCommand __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pRetVal);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommandID )( 
            ISQLNamespaceCommand __RPC_FAR * This,
            /* [retval][out] */ SQLNSCommandID __RPC_FAR *pRetVal);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommandGroup )( 
            ISQLNamespaceCommand __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pRetVal);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Execute )( 
            ISQLNamespaceCommand __RPC_FAR * This,
            /* [optional][in] */ long hwnd,
            /* [optional][in] */ SQLNSModality modality);
        
        END_INTERFACE
    } ISQLNamespaceCommandVtbl;

    interface ISQLNamespaceCommand
    {
        CONST_VTBL struct ISQLNamespaceCommandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISQLNamespaceCommand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ISQLNamespaceCommand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ISQLNamespaceCommand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ISQLNamespaceCommand_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define ISQLNamespaceCommand_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define ISQLNamespaceCommand_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define ISQLNamespaceCommand_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define ISQLNamespaceCommand_GetHelpString(This,pRetVal)	\
    (This)->lpVtbl -> GetHelpString(This,pRetVal)

#define ISQLNamespaceCommand_GetCommandID(This,pRetVal)	\
    (This)->lpVtbl -> GetCommandID(This,pRetVal)

#define ISQLNamespaceCommand_GetCommandGroup(This,pRetVal)	\
    (This)->lpVtbl -> GetCommandGroup(This,pRetVal)

#define ISQLNamespaceCommand_Execute(This,hwnd,modality)	\
    (This)->lpVtbl -> Execute(This,hwnd,modality)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespaceCommand_GetHelpString_Proxy( 
    ISQLNamespaceCommand __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pRetVal);


void __RPC_STUB ISQLNamespaceCommand_GetHelpString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespaceCommand_GetCommandID_Proxy( 
    ISQLNamespaceCommand __RPC_FAR * This,
    /* [retval][out] */ SQLNSCommandID __RPC_FAR *pRetVal);


void __RPC_STUB ISQLNamespaceCommand_GetCommandID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespaceCommand_GetCommandGroup_Proxy( 
    ISQLNamespaceCommand __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pRetVal);


void __RPC_STUB ISQLNamespaceCommand_GetCommandGroup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespaceCommand_Execute_Proxy( 
    ISQLNamespaceCommand __RPC_FAR * This,
    /* [optional][in] */ long hwnd,
    /* [optional][in] */ SQLNSModality modality);


void __RPC_STUB ISQLNamespaceCommand_Execute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISQLNamespaceCommand_INTERFACE_DEFINED__ */


#ifndef __ISQLNamespaceCommands_INTERFACE_DEFINED__
#define __ISQLNamespaceCommands_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: ISQLNamespaceCommands
 * at Sat Nov 29 12:59:01 1997
 * using MIDL 3.01.75
 ****************************************/
/* [object][helpcontext][helpstring][uuid][nonextensible][dual] */ 



DEFINE_GUID(IID_ISQLNamespaceCommands,0x00026f23,0xEB1C,0x11cf,0xAE,0x6E,0x00,0xAA,0x00,0x4A,0x34,0xD5);
DEFINE_GUID(IID_IReplicationCustomization,0x00026f24,0xEB1C,0x11cf,0xAE,0x6E,0x00,0xAA,0x00,0x4A,0x34,0xD5);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    //interface DECLSPEC_UUID("00026f23-EB1C-11cf-AE6E-00AA004A34D5")
    //ISQLNamespaceCommands
    //{
    //public:
	DECLARE_INTERFACE_(ISQLNamespaceCommands, ISQLNSDispatch)
	{
		SQLNS_DISPATCH_BASE(ISQLNamespaceCommands);

        virtual /* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ISQLNamespaceCommand __RPC_FAR *__RPC_FAR *pRetVal) = 0;
        
        virtual /* [helpcontext][helpstring][propget][restricted][id] */ HRESULT STDMETHODCALLTYPE Get_NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnum) = 0;
        
        virtual /* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE GetCount( 
            /* [retval][out] */ long __RPC_FAR *pRetVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISQLNamespaceCommandsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ISQLNamespaceCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ISQLNamespaceCommands __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ISQLNamespaceCommands __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            ISQLNamespaceCommands __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            ISQLNamespaceCommands __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            ISQLNamespaceCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            ISQLNamespaceCommands __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Item )( 
            ISQLNamespaceCommands __RPC_FAR * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ ISQLNamespaceCommand __RPC_FAR *__RPC_FAR *pRetVal);
        
        /* [helpcontext][helpstring][propget][restricted][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Get_NewEnum )( 
            ISQLNamespaceCommands __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnum);
        
        /* [helpcontext][helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            ISQLNamespaceCommands __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pRetVal);
        
        END_INTERFACE
    } ISQLNamespaceCommandsVtbl;

    interface ISQLNamespaceCommands
    {
        CONST_VTBL struct ISQLNamespaceCommandsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISQLNamespaceCommands_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ISQLNamespaceCommands_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ISQLNamespaceCommands_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ISQLNamespaceCommands_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define ISQLNamespaceCommands_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define ISQLNamespaceCommands_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define ISQLNamespaceCommands_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define ISQLNamespaceCommands_Item(This,Index,pRetVal)	\
    (This)->lpVtbl -> Item(This,Index,pRetVal)

#define ISQLNamespaceCommands_Get_NewEnum(This,ppEnum)	\
    (This)->lpVtbl -> Get_NewEnum(This,ppEnum)

#define ISQLNamespaceCommands_GetCount(This,pRetVal)	\
    (This)->lpVtbl -> GetCount(This,pRetVal)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][helpstring][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespaceCommands_Item_Proxy( 
    ISQLNamespaceCommands __RPC_FAR * This,
    /* [in] */ VARIANT Index,
    /* [retval][out] */ ISQLNamespaceCommand __RPC_FAR *__RPC_FAR *pRetVal);


void __RPC_STUB ISQLNamespaceCommands_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][propget][restricted][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespaceCommands_Get_NewEnum_Proxy( 
    ISQLNamespaceCommands __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnum);


void __RPC_STUB ISQLNamespaceCommands_Get_NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ISQLNamespaceCommands_GetCount_Proxy( 
    ISQLNamespaceCommands __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pRetVal);


void __RPC_STUB ISQLNamespaceCommands_GetCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISQLNamespaceCommands_INTERFACE_DEFINED__ */


#ifdef __cplusplus
DEFINE_GUID(CLSID_SQLNamespace,0x00026f00,0xEB1C,0x11cf,0xAE,0x6E,0x00,0xAA,0x00,0x4A,0x34,0xD5);

class DECLSPEC_UUID("00026f10-EB1C-11cf-AE6E-00AA004A34D5")
SQLNamespaceEx;
#endif
#endif /* __SQLNS_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\sqlext.h ===
//-----------------------------------------------------------------------------
// File:			sqlext.h
//
// Copyright:		Copyright (c) 1990-1999 Microsoft Corporation
//
// Contents: 		This is the include for applications using the Microsoft SQL Extensions
//
// Comments: 		
//
//-----------------------------------------------------------------------------

#ifndef __SQLEXT
#define __SQLEXT

#ifndef __SQL
#include "sql.h"
#endif

#ifdef __cplusplus
extern "C" {                         /* Assume C declarations for C++ */
#endif  /* __cplusplus */

/* generally useful constants */
#define SQL_SPEC_MAJOR     3     	/* Major version of specification  */
#define SQL_SPEC_MINOR	   52     	/* Minor version of specification  */
#define SQL_SPEC_STRING   "03.52"	/* String constant for version */

#define SQL_SQLSTATE_SIZE	5	/* size of SQLSTATE */
#define SQL_MAX_DSN_LENGTH	32	/* maximum data source name size */

#define SQL_MAX_OPTION_STRING_LENGTH    256

/* return code SQL_NO_DATA_FOUND is the same as SQL_NO_DATA */
#if (ODBCVER < 0x0300)
#define SQL_NO_DATA_FOUND	100
#else
#define SQL_NO_DATA_FOUND	SQL_NO_DATA
#endif

/* an end handle type */
#if (ODBCVER >= 0x0300)
#define	SQL_HANDLE_SENV		5
#endif  /* ODBCVER >= 0x0300 */

/* env attribute */
#if (ODBCVER >= 0x0300)
#define SQL_ATTR_ODBC_VERSION				200
#define SQL_ATTR_CONNECTION_POOLING			201
#define SQL_ATTR_CP_MATCH					202
#endif  /* ODBCVER >= 0x0300 */

#if (ODBCVER >= 0x0300)
/* values for SQL_ATTR_CONNECTION_POOLING */
#define SQL_CP_OFF							0UL
#define SQL_CP_ONE_PER_DRIVER				1UL
#define SQL_CP_ONE_PER_HENV					2UL
#define SQL_CP_DEFAULT						SQL_CP_OFF

/* values for SQL_ATTR_CP_MATCH */
#define SQL_CP_STRICT_MATCH					0UL
#define SQL_CP_RELAXED_MATCH				1UL
#define SQL_CP_MATCH_DEFAULT				SQL_CP_STRICT_MATCH		

/* values for SQL_ATTR_ODBC_VERSION */
#define SQL_OV_ODBC2						2UL
#define	SQL_OV_ODBC3						3UL
#endif  /* ODBCVER >= 0x0300 */

/* connection attributes */
#define SQL_ACCESS_MODE                 101
#define SQL_AUTOCOMMIT                  102
#define SQL_LOGIN_TIMEOUT               103
#define SQL_OPT_TRACE                   104
#define SQL_OPT_TRACEFILE               105
#define SQL_TRANSLATE_DLL               106
#define SQL_TRANSLATE_OPTION            107
#define SQL_TXN_ISOLATION               108
#define SQL_CURRENT_QUALIFIER           109
#define SQL_ODBC_CURSORS                110
#define SQL_QUIET_MODE                  111
#define SQL_PACKET_SIZE                 112

/* connection attributes with new names */
#if (ODBCVER >= 0x0300)
#define SQL_ATTR_ACCESS_MODE		SQL_ACCESS_MODE
#define SQL_ATTR_AUTOCOMMIT			SQL_AUTOCOMMIT
#define SQL_ATTR_CONNECTION_TIMEOUT	113
#define SQL_ATTR_CURRENT_CATALOG	SQL_CURRENT_QUALIFIER
#define SQL_ATTR_DISCONNECT_BEHAVIOR	114
#define SQL_ATTR_ENLIST_IN_DTC		1207
#define SQL_ATTR_ENLIST_IN_XA		1208
#define SQL_ATTR_LOGIN_TIMEOUT		SQL_LOGIN_TIMEOUT
#define SQL_ATTR_ODBC_CURSORS		SQL_ODBC_CURSORS
#define SQL_ATTR_PACKET_SIZE		SQL_PACKET_SIZE
#define SQL_ATTR_QUIET_MODE			SQL_QUIET_MODE
#define SQL_ATTR_TRACE				SQL_OPT_TRACE
#define SQL_ATTR_TRACEFILE			SQL_OPT_TRACEFILE
#define SQL_ATTR_TRANSLATE_LIB		SQL_TRANSLATE_DLL
#define SQL_ATTR_TRANSLATE_OPTION	SQL_TRANSLATE_OPTION
#define SQL_ATTR_TXN_ISOLATION		SQL_TXN_ISOLATION
#endif  /* ODBCVER >= 0x0300 */

#define SQL_ATTR_CONNECTION_DEAD	1209	/* GetConnectAttr only */

#if (ODBCVER >= 0x0351)
/*	ODBC Driver Manager sets this connection attribute to a unicode driver 
	(which supports SQLConnectW) when the application is an ANSI application
	(which calls SQLConnect, SQLDriverConnect, or SQLBrowseConnect). 
	This is SetConnectAttr only and application does not set this attribute
	This attribute was introduced because some unicode driver's some APIs may 
	need to behave differently on ANSI or Unicode applications. A unicode 
	driver, which  has same behavior for both ANSI or Unicode applications,
	should return SQL_ERROR when the driver manager sets this connection 
	attribute. When a unicode driver returns SQL_SUCCESS on this attribute,
	the driver manager treates ANSI and Unicode connections differently in
	connection pooling.
*/
#define SQL_ATTR_ANSI_APP			115
#endif

/* SQL_CONNECT_OPT_DRVR_START is not meaningful for 3.0 driver */
#if (ODBCVER < 0x0300)
#define SQL_CONNECT_OPT_DRVR_START      1000
#endif  /* ODBCVER < 0x0300 */

#if (ODBCVER < 0x0300)
#define SQL_CONN_OPT_MAX                SQL_PACKET_SIZE
#define SQL_CONN_OPT_MIN                SQL_ACCESS_MODE
#endif /* ODBCVER < 0x0300 */

/* SQL_ACCESS_MODE options */
#define SQL_MODE_READ_WRITE             0UL
#define SQL_MODE_READ_ONLY              1UL
#define SQL_MODE_DEFAULT                SQL_MODE_READ_WRITE

/* SQL_AUTOCOMMIT options */
#define SQL_AUTOCOMMIT_OFF              0UL
#define SQL_AUTOCOMMIT_ON               1UL
#define SQL_AUTOCOMMIT_DEFAULT          SQL_AUTOCOMMIT_ON

/* SQL_LOGIN_TIMEOUT options */
#define SQL_LOGIN_TIMEOUT_DEFAULT       15UL

/* SQL_OPT_TRACE options */
#define SQL_OPT_TRACE_OFF               0UL
#define SQL_OPT_TRACE_ON                1UL
#define SQL_OPT_TRACE_DEFAULT           SQL_OPT_TRACE_OFF
#define SQL_OPT_TRACE_FILE_DEFAULT      "\\SQL.LOG"

/* SQL_ODBC_CURSORS options */
#define SQL_CUR_USE_IF_NEEDED           0UL
#define SQL_CUR_USE_ODBC                1UL
#define SQL_CUR_USE_DRIVER              2UL
#define SQL_CUR_DEFAULT                 SQL_CUR_USE_DRIVER

#if (ODBCVER >= 0x0300)
/* values for SQL_ATTR_DISCONNECT_BEHAVIOR */
#define SQL_DB_RETURN_TO_POOL			0UL
#define SQL_DB_DISCONNECT				1UL
#define SQL_DB_DEFAULT					SQL_DB_RETURN_TO_POOL

/* values for SQL_ATTR_ENLIST_IN_DTC */
#define SQL_DTC_DONE					0L
#endif  /* ODBCVER >= 0x0300 */

/* values for SQL_ATTR_CONNECTION_DEAD */
#define SQL_CD_TRUE					1L		/* Connection is closed/dead */
#define SQL_CD_FALSE				0L		/* Connection is open/available */

/* values for SQL_ATTR_ANSI_APP */
#if (ODBCVER >= 0x0351)
#define SQL_AA_TRUE					1L	/* the application is an ANSI app */
#define SQL_AA_FALSE					0L	/* the application is a Unicode app */
#endif

/* statement attributes */
#define SQL_QUERY_TIMEOUT		0
#define SQL_MAX_ROWS			1
#define SQL_NOSCAN				2
#define SQL_MAX_LENGTH			3
#define SQL_ASYNC_ENABLE		4	/* same as SQL_ATTR_ASYNC_ENABLE */	
#define SQL_BIND_TYPE			5
#define SQL_CURSOR_TYPE			6
#define SQL_CONCURRENCY			7
#define SQL_KEYSET_SIZE			8
#define SQL_ROWSET_SIZE			9
#define SQL_SIMULATE_CURSOR		10
#define SQL_RETRIEVE_DATA		11
#define SQL_USE_BOOKMARKS		12
#define SQL_GET_BOOKMARK		13      /*      GetStmtOption Only */
#define SQL_ROW_NUMBER			14      /*      GetStmtOption Only */

/* statement attributes for ODBC 3.0 */
#if (ODBCVER >= 0x0300)
#define SQL_ATTR_ASYNC_ENABLE				4
#define SQL_ATTR_CONCURRENCY				SQL_CONCURRENCY
#define SQL_ATTR_CURSOR_TYPE				SQL_CURSOR_TYPE
#define	SQL_ATTR_ENABLE_AUTO_IPD			15
#define SQL_ATTR_FETCH_BOOKMARK_PTR			16
#define SQL_ATTR_KEYSET_SIZE				SQL_KEYSET_SIZE
#define SQL_ATTR_MAX_LENGTH					SQL_MAX_LENGTH
#define SQL_ATTR_MAX_ROWS					SQL_MAX_ROWS
#define SQL_ATTR_NOSCAN						SQL_NOSCAN
#define SQL_ATTR_PARAM_BIND_OFFSET_PTR		17
#define	SQL_ATTR_PARAM_BIND_TYPE			18
#define SQL_ATTR_PARAM_OPERATION_PTR		19
#define SQL_ATTR_PARAM_STATUS_PTR			20
#define	SQL_ATTR_PARAMS_PROCESSED_PTR		21
#define	SQL_ATTR_PARAMSET_SIZE				22
#define SQL_ATTR_QUERY_TIMEOUT				SQL_QUERY_TIMEOUT
#define SQL_ATTR_RETRIEVE_DATA				SQL_RETRIEVE_DATA
#define SQL_ATTR_ROW_BIND_OFFSET_PTR		23
#define	SQL_ATTR_ROW_BIND_TYPE				SQL_BIND_TYPE
#define SQL_ATTR_ROW_NUMBER					SQL_ROW_NUMBER	  	/*GetStmtAttr*/
#define SQL_ATTR_ROW_OPERATION_PTR			24
#define	SQL_ATTR_ROW_STATUS_PTR				25
#define	SQL_ATTR_ROWS_FETCHED_PTR			26
#define SQL_ATTR_ROW_ARRAY_SIZE				27	
#define SQL_ATTR_SIMULATE_CURSOR			SQL_SIMULATE_CURSOR
#define SQL_ATTR_USE_BOOKMARKS				SQL_USE_BOOKMARKS	

#endif  /* ODBCVER >= 0x0300 */

#if (ODBCVER < 0x0300)
#define SQL_STMT_OPT_MAX                SQL_ROW_NUMBER
#define SQL_STMT_OPT_MIN	SQL_QUERY_TIMEOUT
#endif    	/* ODBCVER < 0x0300 */

/* New defines for SEARCHABLE column in SQLGetTypeInfo */

#if (ODBCVER >= 0x0300)
#define	SQL_COL_PRED_CHAR		SQL_LIKE_ONLY
#define	SQL_COL_PRED_BASIC		SQL_ALL_EXCEPT_LIKE
#endif /* ODBCVER >= 0x0300 */



/* whether an attribute is a pointer or not */
#if (ODBCVER >= 0x0300)
#define SQL_IS_POINTER							(-4)
#define SQL_IS_UINTEGER							(-5)
#define SQL_IS_INTEGER							(-6)
#define SQL_IS_USMALLINT						(-7)
#define SQL_IS_SMALLINT							(-8)
#endif  /* ODBCVER >= 0x0300 */

/* the value of SQL_ATTR_PARAM_BIND_TYPE */
#if (ODBCVER >= 0x0300)
#define SQL_PARAM_BIND_BY_COLUMN			0UL
#define SQL_PARAM_BIND_TYPE_DEFAULT			SQL_PARAM_BIND_BY_COLUMN
#endif  /* ODBCVER >= 0x0300 */

/* SQL_QUERY_TIMEOUT options */
#define SQL_QUERY_TIMEOUT_DEFAULT       0UL

/* SQL_MAX_ROWS options */
#define SQL_MAX_ROWS_DEFAULT            0UL

/* SQL_NOSCAN options */
#define SQL_NOSCAN_OFF                  0UL     /*      1.0 FALSE */
#define SQL_NOSCAN_ON                   1UL     /*      1.0 TRUE */
#define SQL_NOSCAN_DEFAULT              SQL_NOSCAN_OFF

/* SQL_MAX_LENGTH options */
#define SQL_MAX_LENGTH_DEFAULT          0UL

/* values for SQL_ATTR_ASYNC_ENABLE */
#define SQL_ASYNC_ENABLE_OFF			0UL
#define SQL_ASYNC_ENABLE_ON				1UL
#define SQL_ASYNC_ENABLE_DEFAULT        SQL_ASYNC_ENABLE_OFF

/* SQL_BIND_TYPE options */
#define SQL_BIND_BY_COLUMN              0UL
#define SQL_BIND_TYPE_DEFAULT           SQL_BIND_BY_COLUMN  /* Default value */

/* SQL_CONCURRENCY options */
#define SQL_CONCUR_READ_ONLY            1
#define SQL_CONCUR_LOCK                 2
#define SQL_CONCUR_ROWVER               3
#define SQL_CONCUR_VALUES               4
#define SQL_CONCUR_DEFAULT              SQL_CONCUR_READ_ONLY /* Default value */

/* SQL_CURSOR_TYPE options */
#define SQL_CURSOR_FORWARD_ONLY         0UL
#define SQL_CURSOR_KEYSET_DRIVEN        1UL
#define SQL_CURSOR_DYNAMIC              2UL
#define SQL_CURSOR_STATIC               3UL
#define SQL_CURSOR_TYPE_DEFAULT         SQL_CURSOR_FORWARD_ONLY /* Default value */

/* SQL_ROWSET_SIZE options */
#define SQL_ROWSET_SIZE_DEFAULT         1UL

/* SQL_KEYSET_SIZE options */
#define SQL_KEYSET_SIZE_DEFAULT         0UL

/* SQL_SIMULATE_CURSOR options */
#define SQL_SC_NON_UNIQUE               0UL
#define SQL_SC_TRY_UNIQUE               1UL
#define SQL_SC_UNIQUE                   2UL

/* SQL_RETRIEVE_DATA options */
#define SQL_RD_OFF                      0UL
#define SQL_RD_ON                       1UL
#define SQL_RD_DEFAULT                  SQL_RD_ON

/* SQL_USE_BOOKMARKS options */
#define SQL_UB_OFF                      0UL
#define	SQL_UB_ON						01UL
#define SQL_UB_DEFAULT                  SQL_UB_OFF

/* New values for SQL_USE_BOOKMARKS attribute */
#if (ODBCVER >= 0x0300)
#define SQL_UB_FIXED					SQL_UB_ON
#define SQL_UB_VARIABLE					2UL
#endif  /* ODBCVER >= 0x0300 */

/* extended descriptor field */
#if (ODBCVER >= 0x0300)
#define SQL_DESC_ARRAY_SIZE						20
#define SQL_DESC_ARRAY_STATUS_PTR				21
#define SQL_DESC_AUTO_UNIQUE_VALUE				SQL_COLUMN_AUTO_INCREMENT
#define SQL_DESC_BASE_COLUMN_NAME				22
#define SQL_DESC_BASE_TABLE_NAME				23
#define SQL_DESC_BIND_OFFSET_PTR				24
#define SQL_DESC_BIND_TYPE						25
#define SQL_DESC_CASE_SENSITIVE					SQL_COLUMN_CASE_SENSITIVE
#define SQL_DESC_CATALOG_NAME					SQL_COLUMN_QUALIFIER_NAME
#define SQL_DESC_CONCISE_TYPE					SQL_COLUMN_TYPE
#define SQL_DESC_DATETIME_INTERVAL_PRECISION	26
#define SQL_DESC_DISPLAY_SIZE					SQL_COLUMN_DISPLAY_SIZE
#define SQL_DESC_FIXED_PREC_SCALE				SQL_COLUMN_MONEY
#define SQL_DESC_LABEL							SQL_COLUMN_LABEL
#define SQL_DESC_LITERAL_PREFIX					27
#define SQL_DESC_LITERAL_SUFFIX					28
#define SQL_DESC_LOCAL_TYPE_NAME				29
#define	SQL_DESC_MAXIMUM_SCALE					30
#define SQL_DESC_MINIMUM_SCALE					31
#define SQL_DESC_NUM_PREC_RADIX					32
#define SQL_DESC_PARAMETER_TYPE					33
#define SQL_DESC_ROWS_PROCESSED_PTR				34
#if (ODBCVER >= 0x0350)
#define SQL_DESC_ROWVER							35
#endif /* ODBCVER >= 0x0350 */
#define SQL_DESC_SCHEMA_NAME					SQL_COLUMN_OWNER_NAME
#define SQL_DESC_SEARCHABLE						SQL_COLUMN_SEARCHABLE
#define SQL_DESC_TYPE_NAME						SQL_COLUMN_TYPE_NAME
#define SQL_DESC_TABLE_NAME						SQL_COLUMN_TABLE_NAME
#define SQL_DESC_UNSIGNED						SQL_COLUMN_UNSIGNED
#define SQL_DESC_UPDATABLE						SQL_COLUMN_UPDATABLE
#endif /* ODBCVER >= 0x0300 */


/* defines for diagnostics fields */
#if (ODBCVER >= 0x0300)
#define SQL_DIAG_CURSOR_ROW_COUNT			(-1249)
#define SQL_DIAG_ROW_NUMBER					(-1248)
#define SQL_DIAG_COLUMN_NUMBER				(-1247)	
#endif /* ODBCVER >= 0x0300 */

/* SQL extended datatypes */
#define SQL_DATE                                9
#if (ODBCVER >= 0x0300)
#define SQL_INTERVAL							10
#endif  /* ODBCVER >= 0x0300 */
#define SQL_TIME                                10
#define SQL_TIMESTAMP                           11
#define SQL_LONGVARCHAR                         (-1)
#define SQL_BINARY                              (-2)
#define SQL_VARBINARY                           (-3)
#define SQL_LONGVARBINARY                       (-4)
#define SQL_BIGINT                              (-5)
#define SQL_TINYINT                             (-6)
#define SQL_BIT                                 (-7)
#if (ODBCVER >= 0x0350)
#define SQL_GUID				(-11)
#endif  /* ODBCVER >= 0x0350 */

#if (ODBCVER >= 0x0300)
/* interval code */
#define SQL_CODE_YEAR				1
#define SQL_CODE_MONTH				2
#define SQL_CODE_DAY				3
#define SQL_CODE_HOUR				4
#define SQL_CODE_MINUTE				5
#define SQL_CODE_SECOND				6
#define SQL_CODE_YEAR_TO_MONTH			7
#define SQL_CODE_DAY_TO_HOUR			8
#define SQL_CODE_DAY_TO_MINUTE			9
#define SQL_CODE_DAY_TO_SECOND			10
#define SQL_CODE_HOUR_TO_MINUTE			11
#define SQL_CODE_HOUR_TO_SECOND			12
#define SQL_CODE_MINUTE_TO_SECOND		13

#define SQL_INTERVAL_YEAR					(100 + SQL_CODE_YEAR)
#define SQL_INTERVAL_MONTH					(100 + SQL_CODE_MONTH)
#define SQL_INTERVAL_DAY					(100 + SQL_CODE_DAY) 
#define SQL_INTERVAL_HOUR					(100 + SQL_CODE_HOUR) 
#define SQL_INTERVAL_MINUTE					(100 + SQL_CODE_MINUTE) 
#define SQL_INTERVAL_SECOND                	(100 + SQL_CODE_SECOND) 
#define SQL_INTERVAL_YEAR_TO_MONTH			(100 + SQL_CODE_YEAR_TO_MONTH)
#define SQL_INTERVAL_DAY_TO_HOUR			(100 + SQL_CODE_DAY_TO_HOUR) 
#define SQL_INTERVAL_DAY_TO_MINUTE			(100 + SQL_CODE_DAY_TO_MINUTE) 
#define SQL_INTERVAL_DAY_TO_SECOND			(100 + SQL_CODE_DAY_TO_SECOND) 
#define SQL_INTERVAL_HOUR_TO_MINUTE			(100 + SQL_CODE_HOUR_TO_MINUTE)
#define SQL_INTERVAL_HOUR_TO_SECOND			(100 + SQL_CODE_HOUR_TO_SECOND) 
#define SQL_INTERVAL_MINUTE_TO_SECOND		(100 + SQL_CODE_MINUTE_TO_SECOND) 

#else
#define SQL_INTERVAL_YEAR                       (-80)
#define SQL_INTERVAL_MONTH                      (-81)
#define SQL_INTERVAL_YEAR_TO_MONTH              (-82)
#define SQL_INTERVAL_DAY                        (-83)
#define SQL_INTERVAL_HOUR                       (-84)
#define SQL_INTERVAL_MINUTE                     (-85)
#define SQL_INTERVAL_SECOND                     (-86)
#define SQL_INTERVAL_DAY_TO_HOUR                (-87)
#define SQL_INTERVAL_DAY_TO_MINUTE              (-88)
#define SQL_INTERVAL_DAY_TO_SECOND              (-89)
#define SQL_INTERVAL_HOUR_TO_MINUTE             (-90)
#define SQL_INTERVAL_HOUR_TO_SECOND             (-91)
#define SQL_INTERVAL_MINUTE_TO_SECOND           (-92)
#endif  /* ODBCVER >= 0x0300 */


#if (ODBCVER <= 0x0300)
#define SQL_UNICODE                             (-95)
#define SQL_UNICODE_VARCHAR                     (-96)
#define SQL_UNICODE_LONGVARCHAR                 (-97)
#define SQL_UNICODE_CHAR                        SQL_UNICODE
#else
/* The previous definitions for SQL_UNICODE_ are historical and obsolete */

#define	SQL_UNICODE				SQL_WCHAR

#define	SQL_UNICODE_VARCHAR		SQL_WVARCHAR
#define SQL_UNICODE_LONGVARCHAR	SQL_WLONGVARCHAR
#define SQL_UNICODE_CHAR		SQL_WCHAR
#endif

#if (ODBCVER < 0x0300)
#define SQL_TYPE_DRIVER_START                   SQL_INTERVAL_YEAR
#define SQL_TYPE_DRIVER_END                     SQL_UNICODE_LONGVARCHAR
#endif  /* ODBCVER < 0x0300 */

/* C datatype to SQL datatype mapping      SQL types
                                           ------------------- */
#define SQL_C_CHAR    SQL_CHAR             /* CHAR, VARCHAR, DECIMAL, NUMERIC */
#define SQL_C_LONG    SQL_INTEGER          /* INTEGER                      */
#define SQL_C_SHORT   SQL_SMALLINT         /* SMALLINT                     */
#define SQL_C_FLOAT   SQL_REAL             /* REAL                         */
#define SQL_C_DOUBLE  SQL_DOUBLE           /* FLOAT, DOUBLE                */
#if (ODBCVER >= 0x0300)
#define	SQL_C_NUMERIC		SQL_NUMERIC
#endif  /* ODBCVER >= 0x0300 */
#define SQL_C_DEFAULT 99

#define SQL_SIGNED_OFFSET       (-20)
#define SQL_UNSIGNED_OFFSET     (-22)

/* C datatype to SQL datatype mapping */
#define SQL_C_DATE       SQL_DATE
#define SQL_C_TIME       SQL_TIME
#define SQL_C_TIMESTAMP  SQL_TIMESTAMP
#if (ODBCVER >= 0x0300)
#define SQL_C_TYPE_DATE					SQL_TYPE_DATE
#define SQL_C_TYPE_TIME					SQL_TYPE_TIME
#define SQL_C_TYPE_TIMESTAMP			SQL_TYPE_TIMESTAMP
#define SQL_C_INTERVAL_YEAR				SQL_INTERVAL_YEAR
#define SQL_C_INTERVAL_MONTH			SQL_INTERVAL_MONTH
#define SQL_C_INTERVAL_DAY				SQL_INTERVAL_DAY
#define SQL_C_INTERVAL_HOUR				SQL_INTERVAL_HOUR
#define SQL_C_INTERVAL_MINUTE			SQL_INTERVAL_MINUTE
#define SQL_C_INTERVAL_SECOND			SQL_INTERVAL_SECOND
#define SQL_C_INTERVAL_YEAR_TO_MONTH	SQL_INTERVAL_YEAR_TO_MONTH
#define SQL_C_INTERVAL_DAY_TO_HOUR		SQL_INTERVAL_DAY_TO_HOUR
#define SQL_C_INTERVAL_DAY_TO_MINUTE	SQL_INTERVAL_DAY_TO_MINUTE
#define SQL_C_INTERVAL_DAY_TO_SECOND	SQL_INTERVAL_DAY_TO_SECOND
#define SQL_C_INTERVAL_HOUR_TO_MINUTE	SQL_INTERVAL_HOUR_TO_MINUTE
#define SQL_C_INTERVAL_HOUR_TO_SECOND	SQL_INTERVAL_HOUR_TO_SECOND
#define SQL_C_INTERVAL_MINUTE_TO_SECOND	SQL_INTERVAL_MINUTE_TO_SECOND
#endif  /* ODBCVER >= 0x0300 */
#define SQL_C_BINARY     SQL_BINARY
#define SQL_C_BIT        SQL_BIT
#if (ODBCVER >= 0x0300)
#define SQL_C_SBIGINT	(SQL_BIGINT+SQL_SIGNED_OFFSET)	   /* SIGNED BIGINT */
#define SQL_C_UBIGINT	(SQL_BIGINT+SQL_UNSIGNED_OFFSET)   /* UNSIGNED BIGINT */
#endif  /* ODBCVER >= 0x0300 */
#define SQL_C_TINYINT    SQL_TINYINT
#define SQL_C_SLONG      (SQL_C_LONG+SQL_SIGNED_OFFSET)    /* SIGNED INTEGER  */
#define SQL_C_SSHORT     (SQL_C_SHORT+SQL_SIGNED_OFFSET)   /* SIGNED SMALLINT */
#define SQL_C_STINYINT   (SQL_TINYINT+SQL_SIGNED_OFFSET)   /* SIGNED TINYINT  */
#define SQL_C_ULONG      (SQL_C_LONG+SQL_UNSIGNED_OFFSET)  /* UNSIGNED INTEGER*/
#define SQL_C_USHORT     (SQL_C_SHORT+SQL_UNSIGNED_OFFSET) /* UNSIGNED SMALLINT*/
#define SQL_C_UTINYINT   (SQL_TINYINT+SQL_UNSIGNED_OFFSET) /* UNSIGNED TINYINT*/
#define SQL_C_BOOKMARK   SQL_C_ULONG                       /* BOOKMARK        */

#if (ODBCVER >= 0x0350)
#define SQL_C_GUID	SQL_GUID
#endif  /* ODBCVER >= 0x0350 */

#define SQL_TYPE_NULL                   0
#if (ODBCVER < 0x0300)
#define SQL_TYPE_MIN                    SQL_BIT
#define SQL_TYPE_MAX                    SQL_VARCHAR
#endif

#if (ODBCVER >= 0x0300)
#define SQL_C_VARBOOKMARK		SQL_C_BINARY
#endif  /* ODBCVER >= 0x0300 */

/* define for SQL_DIAG_ROW_NUMBER and SQL_DIAG_COLUMN_NUMBER */
#if (ODBCVER >= 0x0300)
#define SQL_NO_ROW_NUMBER						(-1)
#define SQL_NO_COLUMN_NUMBER					(-1)
#define SQL_ROW_NUMBER_UNKNOWN					(-2)
#define SQL_COLUMN_NUMBER_UNKNOWN				(-2)
#endif

/* SQLBindParameter extensions */
#define SQL_DEFAULT_PARAM            (-5)
#define SQL_IGNORE                   (-6)
#if (ODBCVER >= 0x0300)
#define SQL_COLUMN_IGNORE			SQL_IGNORE
#endif  /* ODBCVER >= 0x0300 */
#define SQL_LEN_DATA_AT_EXEC_OFFSET  (-100)
#define SQL_LEN_DATA_AT_EXEC(length) (-(length)+SQL_LEN_DATA_AT_EXEC_OFFSET)

/* binary length for driver specific attributes */
#define SQL_LEN_BINARY_ATTR_OFFSET	 (-100)
#define SQL_LEN_BINARY_ATTR(length)	 (-(length)+SQL_LEN_BINARY_ATTR_OFFSET)

/* Defines used by Driver Manager when mapping SQLSetParam to SQLBindParameter
*/
#define SQL_PARAM_TYPE_DEFAULT           SQL_PARAM_INPUT_OUTPUT
#define SQL_SETPARAM_VALUE_MAX           (-1L)

/* SQLColAttributes defines */
#define SQL_COLUMN_COUNT                0
#define SQL_COLUMN_NAME                 1
#define SQL_COLUMN_TYPE                 2
#define SQL_COLUMN_LENGTH               3
#define SQL_COLUMN_PRECISION            4
#define SQL_COLUMN_SCALE                5
#define SQL_COLUMN_DISPLAY_SIZE         6
#define SQL_COLUMN_NULLABLE             7
#define SQL_COLUMN_UNSIGNED             8
#define SQL_COLUMN_MONEY                9
#define SQL_COLUMN_UPDATABLE            10
#define SQL_COLUMN_AUTO_INCREMENT       11
#define SQL_COLUMN_CASE_SENSITIVE       12
#define SQL_COLUMN_SEARCHABLE           13
#define SQL_COLUMN_TYPE_NAME            14
#define SQL_COLUMN_TABLE_NAME           15
#define SQL_COLUMN_OWNER_NAME           16
#define SQL_COLUMN_QUALIFIER_NAME       17
#define SQL_COLUMN_LABEL                18
#define SQL_COLATT_OPT_MAX              SQL_COLUMN_LABEL
#if (ODBCVER < 0x0300)
#define SQL_COLUMN_DRIVER_START         1000
#endif  /* ODBCVER < 0x0300 */

#define SQL_COLATT_OPT_MIN              SQL_COLUMN_COUNT

/* SQLColAttributes subdefines for SQL_COLUMN_UPDATABLE */
#define SQL_ATTR_READONLY               0
#define SQL_ATTR_WRITE                  1
#define SQL_ATTR_READWRITE_UNKNOWN      2

/* SQLColAttributes subdefines for SQL_COLUMN_SEARCHABLE */
/* These are also used by SQLGetInfo                     */
#define SQL_UNSEARCHABLE                0
#define SQL_LIKE_ONLY                   1
#define SQL_ALL_EXCEPT_LIKE             2
#define SQL_SEARCHABLE                  3
#define SQL_PRED_SEARCHABLE				SQL_SEARCHABLE


/* Special return values for SQLGetData */
#define SQL_NO_TOTAL                    (-4)

/********************************************/
/* SQLGetFunctions: additional values for   */
/* fFunction to represent functions that    */
/* are not in the X/Open spec.				*/
/********************************************/

#if (ODBCVER >= 0x0300)
#define SQL_API_SQLALLOCHANDLESTD	73
#define SQL_API_SQLBULKOPERATIONS	24
#endif /* ODBCVER >= 0x0300 */
#define SQL_API_SQLBINDPARAMETER    72
#define SQL_API_SQLBROWSECONNECT    55    
#define SQL_API_SQLCOLATTRIBUTES    6 
#define SQL_API_SQLCOLUMNPRIVILEGES 56
#define SQL_API_SQLDESCRIBEPARAM    58
#define	SQL_API_SQLDRIVERCONNECT	41 
#define SQL_API_SQLDRIVERS          71
#define SQL_API_SQLEXTENDEDFETCH    59
#define SQL_API_SQLFOREIGNKEYS      60
#define SQL_API_SQLMORERESULTS      61
#define SQL_API_SQLNATIVESQL        62
#define SQL_API_SQLNUMPARAMS        63
#define SQL_API_SQLPARAMOPTIONS     64
#define SQL_API_SQLPRIMARYKEYS      65
#define SQL_API_SQLPROCEDURECOLUMNS 66
#define SQL_API_SQLPROCEDURES       67
#define SQL_API_SQLSETPOS           68
#define SQL_API_SQLSETSCROLLOPTIONS 69
#define SQL_API_SQLTABLEPRIVILEGES  70

/*-------------------------------------------*/
/* SQL_EXT_API_LAST is not useful with ODBC  */
/* version 3.0 because some of the values    */
/* from X/Open are in the 10000 range.       */
/*-------------------------------------------*/

#if (ODBCVER < 0x0300)
#define SQL_EXT_API_LAST            SQL_API_SQLBINDPARAMETER
#define SQL_NUM_FUNCTIONS           23
#define SQL_EXT_API_START           40
#define SQL_NUM_EXTENSIONS (SQL_EXT_API_LAST-SQL_EXT_API_START+1)
#endif

/*--------------------------------------------*/
/* SQL_API_ALL_FUNCTIONS returns an array     */
/* of 'booleans' representing whether a       */
/* function is implemented by the driver.     */
/*                                            */
/* CAUTION: Only functions defined in ODBC    */
/* version 2.0 and earlier are returned, the  */
/* new high-range function numbers defined by */
/* X/Open break this scheme.   See the new    */
/* method -- SQL_API_ODBC3_ALL_FUNCTIONS      */
/*--------------------------------------------*/

#define SQL_API_ALL_FUNCTIONS       0		/* See CAUTION above */

/*----------------------------------------------*/
/* 2.X drivers export a dummy function with  	*/
/* ordinal number SQL_API_LOADBYORDINAL to speed*/
/* loading under the windows operating system.  */
/* 						*/
/* CAUTION: Loading by ordinal is not supported */
/* for 3.0 and above drivers.			*/
/*----------------------------------------------*/

#define SQL_API_LOADBYORDINAL       199		/* See CAUTION above */	

/*----------------------------------------------*/
/* SQL_API_ODBC3_ALL_FUNCTIONS                  */
/* This returns a bitmap, which allows us to    */
/* handle the higher-valued function numbers.   */
/* Use  SQL_FUNC_EXISTS(bitmap,function_number) */
/* to determine if the function exists.         */
/*----------------------------------------------*/


#if (ODBCVER >= 0x0300)
#define SQL_API_ODBC3_ALL_FUNCTIONS	999
#define	SQL_API_ODBC3_ALL_FUNCTIONS_SIZE	250		/* array of 250 words */

#define SQL_FUNC_EXISTS(pfExists, uwAPI) \
				((*(((UWORD*) (pfExists)) + ((uwAPI) >> 4)) \
					& (1 << ((uwAPI) & 0x000F)) \
 				 ) ? SQL_TRUE : SQL_FALSE \
				)
#endif  /* ODBCVER >= 0x0300 */


/************************************************/
/* Extended definitions for SQLGetInfo			*/
/************************************************/

/*---------------------------------*/
/* Values in ODBC 2.0 that are not */
/* in the X/Open spec              */
/*---------------------------------*/

#define SQL_INFO_FIRST                       0		
#define SQL_ACTIVE_CONNECTIONS               0	/* MAX_DRIVER_CONNECTIONS */
#define SQL_ACTIVE_STATEMENTS                1	/* MAX_CONCURRENT_ACTIVITIES */
#define SQL_DRIVER_HDBC                      3
#define SQL_DRIVER_HENV                      4
#define SQL_DRIVER_HSTMT                     5
#define SQL_DRIVER_NAME                      6
#define SQL_DRIVER_VER                       7
#define SQL_ODBC_API_CONFORMANCE             9
#define SQL_ODBC_VER                        10
#define SQL_ROW_UPDATES                     11
#define SQL_ODBC_SAG_CLI_CONFORMANCE        12
#define SQL_ODBC_SQL_CONFORMANCE            15
#define SQL_PROCEDURES                      21
#define SQL_CONCAT_NULL_BEHAVIOR            22
#define SQL_CURSOR_ROLLBACK_BEHAVIOR        24
#define SQL_EXPRESSIONS_IN_ORDERBY          27
#define SQL_MAX_OWNER_NAME_LEN              32	/* MAX_SCHEMA_NAME_LEN */
#define SQL_MAX_PROCEDURE_NAME_LEN          33
#define SQL_MAX_QUALIFIER_NAME_LEN          34	/* MAX_CATALOG_NAME_LEN */
#define SQL_MULT_RESULT_SETS                36
#define SQL_MULTIPLE_ACTIVE_TXN             37
#define SQL_OUTER_JOINS                     38
#define SQL_OWNER_TERM                      39
#define SQL_PROCEDURE_TERM                  40
#define SQL_QUALIFIER_NAME_SEPARATOR        41
#define SQL_QUALIFIER_TERM                  42
#define SQL_SCROLL_OPTIONS                  44
#define SQL_TABLE_TERM                      45
#define SQL_CONVERT_FUNCTIONS               48
#define SQL_NUMERIC_FUNCTIONS               49
#define SQL_STRING_FUNCTIONS                50
#define SQL_SYSTEM_FUNCTIONS                51
#define SQL_TIMEDATE_FUNCTIONS              52
#define SQL_CONVERT_BIGINT                  53
#define SQL_CONVERT_BINARY                  54
#define SQL_CONVERT_BIT                     55
#define SQL_CONVERT_CHAR                    56
#define SQL_CONVERT_DATE                    57
#define SQL_CONVERT_DECIMAL                 58
#define SQL_CONVERT_DOUBLE                  59
#define SQL_CONVERT_FLOAT                   60
#define SQL_CONVERT_INTEGER                 61
#define SQL_CONVERT_LONGVARCHAR             62
#define SQL_CONVERT_NUMERIC                 63
#define SQL_CONVERT_REAL                    64
#define SQL_CONVERT_SMALLINT                65
#define SQL_CONVERT_TIME                    66
#define SQL_CONVERT_TIMESTAMP               67
#define SQL_CONVERT_TINYINT                 68
#define SQL_CONVERT_VARBINARY               69
#define SQL_CONVERT_VARCHAR                 70
#define SQL_CONVERT_LONGVARBINARY           71
#define SQL_ODBC_SQL_OPT_IEF                73		/* SQL_INTEGRITY */
#define SQL_CORRELATION_NAME                74
#define SQL_NON_NULLABLE_COLUMNS            75
#define SQL_DRIVER_HLIB                     76
#define SQL_DRIVER_ODBC_VER                 77
#define SQL_LOCK_TYPES                      78
#define SQL_POS_OPERATIONS                  79
#define SQL_POSITIONED_STATEMENTS           80
#define SQL_BOOKMARK_PERSISTENCE            82
#define SQL_STATIC_SENSITIVITY              83
#define SQL_FILE_USAGE                      84
#define SQL_COLUMN_ALIAS                    87
#define SQL_GROUP_BY                        88
#define SQL_KEYWORDS                        89
#define SQL_OWNER_USAGE                     91
#define SQL_QUALIFIER_USAGE                 92
#define SQL_QUOTED_IDENTIFIER_CASE          93
#define SQL_SUBQUERIES                      95
#define SQL_UNION                           96
#define SQL_MAX_ROW_SIZE_INCLUDES_LONG      103
#define SQL_MAX_CHAR_LITERAL_LEN            108
#define SQL_TIMEDATE_ADD_INTERVALS          109
#define SQL_TIMEDATE_DIFF_INTERVALS         110
#define SQL_NEED_LONG_DATA_LEN              111
#define SQL_MAX_BINARY_LITERAL_LEN          112
#define SQL_LIKE_ESCAPE_CLAUSE              113
#define SQL_QUALIFIER_LOCATION              114

#if (ODBCVER >= 0x0201 && ODBCVER < 0x0300)
#define SQL_OJ_CAPABILITIES         65003  /* Temp value until ODBC 3.0 */
#endif  /* ODBCVER >= 0x0201 && ODBCVER < 0x0300 */

/*----------------------------------------------*/
/* SQL_INFO_LAST and SQL_INFO_DRIVER_START are  */
/* not useful anymore, because  X/Open has      */
/* values in the 10000 range.   You  			*/
/* must contact X/Open directly to get a range	*/
/* of numbers for driver-specific values.	    */
/*----------------------------------------------*/

#if (ODBCVER < 0x0300)
#define SQL_INFO_LAST						SQL_QUALIFIER_LOCATION
#define SQL_INFO_DRIVER_START				1000
#endif /* ODBCVER < 0x0300 */

/*-----------------------------------------------*/
/* ODBC 3.0 SQLGetInfo values that are not part  */
/* of the X/Open standard at this time.   X/Open */
/* standard values are in sql.h.				 */
/*-----------------------------------------------*/

#if (ODBCVER >= 0x0300)
#define SQL_ACTIVE_ENVIRONMENTS					116
#define	SQL_ALTER_DOMAIN						117

#define	SQL_SQL_CONFORMANCE						118
#define SQL_DATETIME_LITERALS					119

#define	SQL_ASYNC_MODE							10021	/* new X/Open spec */
#define SQL_BATCH_ROW_COUNT						120
#define SQL_BATCH_SUPPORT						121
#define SQL_CATALOG_LOCATION					SQL_QUALIFIER_LOCATION
#define SQL_CATALOG_NAME_SEPARATOR				SQL_QUALIFIER_NAME_SEPARATOR
#define SQL_CATALOG_TERM						SQL_QUALIFIER_TERM
#define SQL_CATALOG_USAGE						SQL_QUALIFIER_USAGE
#define	SQL_CONVERT_WCHAR						122
#define SQL_CONVERT_INTERVAL_DAY_TIME			123
#define SQL_CONVERT_INTERVAL_YEAR_MONTH			124
#define	SQL_CONVERT_WLONGVARCHAR				125
#define	SQL_CONVERT_WVARCHAR					126
#define	SQL_CREATE_ASSERTION					127
#define	SQL_CREATE_CHARACTER_SET				128
#define	SQL_CREATE_COLLATION					129
#define	SQL_CREATE_DOMAIN						130
#define	SQL_CREATE_SCHEMA						131
#define	SQL_CREATE_TABLE						132
#define	SQL_CREATE_TRANSLATION					133
#define	SQL_CREATE_VIEW							134
#define SQL_DRIVER_HDESC						135
#define	SQL_DROP_ASSERTION						136
#define	SQL_DROP_CHARACTER_SET					137
#define	SQL_DROP_COLLATION						138
#define	SQL_DROP_DOMAIN							139
#define	SQL_DROP_SCHEMA							140
#define	SQL_DROP_TABLE							141
#define	SQL_DROP_TRANSLATION					142
#define	SQL_DROP_VIEW							143
#define SQL_DYNAMIC_CURSOR_ATTRIBUTES1			144
#define SQL_DYNAMIC_CURSOR_ATTRIBUTES2			145
#define SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1		146		
#define SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2		147
#define SQL_INDEX_KEYWORDS						148
#define SQL_INFO_SCHEMA_VIEWS					149
#define SQL_KEYSET_CURSOR_ATTRIBUTES1			150
#define SQL_KEYSET_CURSOR_ATTRIBUTES2			151
#define	SQL_MAX_ASYNC_CONCURRENT_STATEMENTS		10022	/* new X/Open spec */
#define SQL_ODBC_INTERFACE_CONFORMANCE			152
#define SQL_PARAM_ARRAY_ROW_COUNTS     			153
#define SQL_PARAM_ARRAY_SELECTS     			154
#define SQL_SCHEMA_TERM							SQL_OWNER_TERM
#define SQL_SCHEMA_USAGE						SQL_OWNER_USAGE
#define SQL_SQL92_DATETIME_FUNCTIONS			155
#define SQL_SQL92_FOREIGN_KEY_DELETE_RULE		156		
#define SQL_SQL92_FOREIGN_KEY_UPDATE_RULE		157		
#define SQL_SQL92_GRANT							158
#define SQL_SQL92_NUMERIC_VALUE_FUNCTIONS		159
#define SQL_SQL92_PREDICATES					160
#define SQL_SQL92_RELATIONAL_JOIN_OPERATORS		161
#define SQL_SQL92_REVOKE						162
#define SQL_SQL92_ROW_VALUE_CONSTRUCTOR			163
#define SQL_SQL92_STRING_FUNCTIONS				164
#define SQL_SQL92_VALUE_EXPRESSIONS				165
#define SQL_STANDARD_CLI_CONFORMANCE			166
#define SQL_STATIC_CURSOR_ATTRIBUTES1			167	
#define SQL_STATIC_CURSOR_ATTRIBUTES2			168

#define SQL_AGGREGATE_FUNCTIONS					169
#define SQL_DDL_INDEX							170
#define SQL_DM_VER								171
#define SQL_INSERT_STATEMENT					172
#define	SQL_CONVERT_GUID						173		
#define SQL_UNION_STATEMENT						SQL_UNION
#endif  /* ODBCVER >= 0x0300 */

#define	SQL_DTC_TRANSITION_COST					1750

/* SQL_ALTER_TABLE bitmasks */
#if (ODBCVER >= 0x0300)
/* the following 5 bitmasks are defined in sql.h
*#define SQL_AT_ADD_COLUMN                   	0x00000001L
*#define SQL_AT_DROP_COLUMN                  	0x00000002L
*#define SQL_AT_ADD_CONSTRAINT               	0x00000008L
*/
#define	SQL_AT_ADD_COLUMN_SINGLE				0x00000020L	
#define	SQL_AT_ADD_COLUMN_DEFAULT				0x00000040L
#define	SQL_AT_ADD_COLUMN_COLLATION				0x00000080L
#define	SQL_AT_SET_COLUMN_DEFAULT				0x00000100L
#define	SQL_AT_DROP_COLUMN_DEFAULT				0x00000200L
#define	SQL_AT_DROP_COLUMN_CASCADE				0x00000400L
#define	SQL_AT_DROP_COLUMN_RESTRICT				0x00000800L
#define SQL_AT_ADD_TABLE_CONSTRAINT				0x00001000L		
#define SQL_AT_DROP_TABLE_CONSTRAINT_CASCADE	0x00002000L		
#define SQL_AT_DROP_TABLE_CONSTRAINT_RESTRICT	0x00004000L		
#define SQL_AT_CONSTRAINT_NAME_DEFINITION		0x00008000L
#define SQL_AT_CONSTRAINT_INITIALLY_DEFERRED	0x00010000L
#define SQL_AT_CONSTRAINT_INITIALLY_IMMEDIATE	0x00020000L
#define SQL_AT_CONSTRAINT_DEFERRABLE			0x00040000L
#define SQL_AT_CONSTRAINT_NON_DEFERRABLE		0x00080000L
#endif	/* ODBCVER >= 0x0300 */

/* SQL_CONVERT_*  return value bitmasks */

#define SQL_CVT_CHAR                        0x00000001L
#define SQL_CVT_NUMERIC                     0x00000002L
#define SQL_CVT_DECIMAL                     0x00000004L
#define SQL_CVT_INTEGER                     0x00000008L
#define SQL_CVT_SMALLINT                    0x00000010L
#define SQL_CVT_FLOAT                       0x00000020L
#define SQL_CVT_REAL                        0x00000040L
#define SQL_CVT_DOUBLE                      0x00000080L
#define SQL_CVT_VARCHAR                     0x00000100L
#define SQL_CVT_LONGVARCHAR                 0x00000200L
#define SQL_CVT_BINARY                      0x00000400L
#define SQL_CVT_VARBINARY                   0x00000800L
#define SQL_CVT_BIT                         0x00001000L
#define SQL_CVT_TINYINT                     0x00002000L
#define SQL_CVT_BIGINT                      0x00004000L
#define SQL_CVT_DATE                        0x00008000L
#define SQL_CVT_TIME                        0x00010000L
#define SQL_CVT_TIMESTAMP                   0x00020000L
#define SQL_CVT_LONGVARBINARY               0x00040000L
#if (ODBCVER >= 0x0300)
#define SQL_CVT_INTERVAL_YEAR_MONTH	    	0x00080000L
#define SQL_CVT_INTERVAL_DAY_TIME	    	0x00100000L
#define	SQL_CVT_WCHAR						0x00200000L
#define	SQL_CVT_WLONGVARCHAR				0x00400000L
#define	SQL_CVT_WVARCHAR					0x00800000L
#define SQL_CVT_GUID						0x01000000L

#endif  /* ODBCVER >= 0x0300 */


/* SQL_CONVERT_FUNCTIONS functions */
#define SQL_FN_CVT_CONVERT                  0x00000001L
#if (ODBCVER >= 0x0300)
#define SQL_FN_CVT_CAST						0x00000002L
#endif  /* ODBCVER >= 0x0300 */


/* SQL_STRING_FUNCTIONS functions */

#define SQL_FN_STR_CONCAT                   0x00000001L
#define SQL_FN_STR_INSERT                   0x00000002L
#define SQL_FN_STR_LEFT                     0x00000004L
#define SQL_FN_STR_LTRIM                    0x00000008L
#define SQL_FN_STR_LENGTH                   0x00000010L
#define SQL_FN_STR_LOCATE                   0x00000020L
#define SQL_FN_STR_LCASE                    0x00000040L
#define SQL_FN_STR_REPEAT                   0x00000080L
#define SQL_FN_STR_REPLACE                  0x00000100L
#define SQL_FN_STR_RIGHT                    0x00000200L
#define SQL_FN_STR_RTRIM                    0x00000400L
#define SQL_FN_STR_SUBSTRING                0x00000800L
#define SQL_FN_STR_UCASE                    0x00001000L
#define SQL_FN_STR_ASCII                    0x00002000L
#define SQL_FN_STR_CHAR                     0x00004000L
#define SQL_FN_STR_DIFFERENCE               0x00008000L
#define SQL_FN_STR_LOCATE_2                 0x00010000L
#define SQL_FN_STR_SOUNDEX                  0x00020000L
#define SQL_FN_STR_SPACE                    0x00040000L
#if (ODBCVER >= 0x0300)
#define SQL_FN_STR_BIT_LENGTH				0x00080000L
#define SQL_FN_STR_CHAR_LENGTH				0x00100000L
#define SQL_FN_STR_CHARACTER_LENGTH			0x00200000L
#define SQL_FN_STR_OCTET_LENGTH				0x00400000L
#define SQL_FN_STR_POSITION					0x00800000L
#endif  /* ODBCVER >= 0x0300 */

/* SQL_SQL92_STRING_FUNCTIONS */
#if (ODBCVER >= 0x0300)
#define SQL_SSF_CONVERT						0x00000001L	
#define SQL_SSF_LOWER						0x00000002L
#define SQL_SSF_UPPER						0x00000004L
#define SQL_SSF_SUBSTRING					0x00000008L
#define SQL_SSF_TRANSLATE					0x00000010L
#define SQL_SSF_TRIM_BOTH					0x00000020L
#define SQL_SSF_TRIM_LEADING				0x00000040L
#define SQL_SSF_TRIM_TRAILING				0x00000080L
#endif /* ODBCVER >= 0x0300 */

/* SQL_NUMERIC_FUNCTIONS functions */

#define SQL_FN_NUM_ABS                      0x00000001L
#define SQL_FN_NUM_ACOS                     0x00000002L
#define SQL_FN_NUM_ASIN                     0x00000004L
#define SQL_FN_NUM_ATAN                     0x00000008L
#define SQL_FN_NUM_ATAN2                    0x00000010L
#define SQL_FN_NUM_CEILING                  0x00000020L
#define SQL_FN_NUM_COS                      0x00000040L
#define SQL_FN_NUM_COT                      0x00000080L
#define SQL_FN_NUM_EXP                      0x00000100L
#define SQL_FN_NUM_FLOOR                    0x00000200L
#define SQL_FN_NUM_LOG                      0x00000400L
#define SQL_FN_NUM_MOD                      0x00000800L
#define SQL_FN_NUM_SIGN                     0x00001000L
#define SQL_FN_NUM_SIN                      0x00002000L
#define SQL_FN_NUM_SQRT                     0x00004000L
#define SQL_FN_NUM_TAN                      0x00008000L
#define SQL_FN_NUM_PI                       0x00010000L
#define SQL_FN_NUM_RAND                     0x00020000L
#define SQL_FN_NUM_DEGREES                  0x00040000L
#define SQL_FN_NUM_LOG10                    0x00080000L
#define SQL_FN_NUM_POWER                    0x00100000L
#define SQL_FN_NUM_RADIANS                  0x00200000L
#define SQL_FN_NUM_ROUND                    0x00400000L
#define SQL_FN_NUM_TRUNCATE                 0x00800000L

/* SQL_SQL92_NUMERIC_VALUE_FUNCTIONS */
#if (ODBCVER >= 0x0300)
#define SQL_SNVF_BIT_LENGTH					0x00000001L
#define SQL_SNVF_CHAR_LENGTH				0x00000002L
#define SQL_SNVF_CHARACTER_LENGTH			0x00000004L
#define SQL_SNVF_EXTRACT					0x00000008L
#define SQL_SNVF_OCTET_LENGTH				0x00000010L
#define SQL_SNVF_POSITION					0x00000020L
#endif  /* ODBCVER >= 0x0300 */

/* SQL_TIMEDATE_FUNCTIONS functions */

#define SQL_FN_TD_NOW                       0x00000001L
#define SQL_FN_TD_CURDATE                   0x00000002L
#define SQL_FN_TD_DAYOFMONTH                0x00000004L
#define SQL_FN_TD_DAYOFWEEK                 0x00000008L
#define SQL_FN_TD_DAYOFYEAR                 0x00000010L
#define SQL_FN_TD_MONTH                     0x00000020L
#define SQL_FN_TD_QUARTER                   0x00000040L
#define SQL_FN_TD_WEEK                      0x00000080L
#define SQL_FN_TD_YEAR                      0x00000100L
#define SQL_FN_TD_CURTIME                   0x00000200L
#define SQL_FN_TD_HOUR                      0x00000400L
#define SQL_FN_TD_MINUTE                    0x00000800L
#define SQL_FN_TD_SECOND                    0x00001000L
#define SQL_FN_TD_TIMESTAMPADD              0x00002000L
#define SQL_FN_TD_TIMESTAMPDIFF             0x00004000L
#define SQL_FN_TD_DAYNAME                   0x00008000L
#define SQL_FN_TD_MONTHNAME                 0x00010000L
#if (ODBCVER >= 0x0300)
#define SQL_FN_TD_CURRENT_DATE				0x00020000L
#define SQL_FN_TD_CURRENT_TIME				0x00040000L
#define SQL_FN_TD_CURRENT_TIMESTAMP			0x00080000L
#define SQL_FN_TD_EXTRACT					0x00100000L
#endif  /* ODBCVER >= 0x0300 */

/* SQL_SQL92_DATETIME_FUNCTIONS */
#if (ODBCVER >= 0x0300)
#define SQL_SDF_CURRENT_DATE				0x00000001L
#define SQL_SDF_CURRENT_TIME				0x00000002L
#define SQL_SDF_CURRENT_TIMESTAMP			0x00000004L
#endif /* ODBCVER >= 0x0300 */

/* SQL_SYSTEM_FUNCTIONS functions */

#define SQL_FN_SYS_USERNAME                 0x00000001L
#define SQL_FN_SYS_DBNAME                   0x00000002L
#define SQL_FN_SYS_IFNULL                   0x00000004L

/* SQL_TIMEDATE_ADD_INTERVALS and SQL_TIMEDATE_DIFF_INTERVALS functions */

#define SQL_FN_TSI_FRAC_SECOND              0x00000001L
#define SQL_FN_TSI_SECOND                   0x00000002L
#define SQL_FN_TSI_MINUTE                   0x00000004L
#define SQL_FN_TSI_HOUR                     0x00000008L
#define SQL_FN_TSI_DAY                      0x00000010L
#define SQL_FN_TSI_WEEK                     0x00000020L
#define SQL_FN_TSI_MONTH                    0x00000040L
#define SQL_FN_TSI_QUARTER                  0x00000080L
#define SQL_FN_TSI_YEAR                     0x00000100L

/* bitmasks for SQL_DYNAMIC_CURSOR_ATTRIBUTES1,
 * SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1, 
 * SQL_KEYSET_CURSOR_ATTRIBUTES1, and SQL_STATIC_CURSOR_ATTRIBUTES1 
 */
#if (ODBCVER >= 0x0300)
/* supported SQLFetchScroll FetchOrientation's */
#define SQL_CA1_NEXT						0x00000001L
#define SQL_CA1_ABSOLUTE					0x00000002L
#define SQL_CA1_RELATIVE					0x00000004L
#define SQL_CA1_BOOKMARK					0x00000008L

/* supported SQLSetPos LockType's */
#define SQL_CA1_LOCK_NO_CHANGE				0x00000040L
#define SQL_CA1_LOCK_EXCLUSIVE				0x00000080L
#define SQL_CA1_LOCK_UNLOCK					0x00000100L

/* supported SQLSetPos Operations */
#define SQL_CA1_POS_POSITION				0x00000200L
#define SQL_CA1_POS_UPDATE					0x00000400L
#define SQL_CA1_POS_DELETE					0x00000800L
#define SQL_CA1_POS_REFRESH					0x00001000L

/* positioned updates and deletes */
#define SQL_CA1_POSITIONED_UPDATE			0x00002000L
#define SQL_CA1_POSITIONED_DELETE			0x00004000L
#define SQL_CA1_SELECT_FOR_UPDATE			0x00008000L

/* supported SQLBulkOperations operations */
#define SQL_CA1_BULK_ADD					0x00010000L
#define SQL_CA1_BULK_UPDATE_BY_BOOKMARK		0x00020000L
#define SQL_CA1_BULK_DELETE_BY_BOOKMARK		0x00040000L
#define SQL_CA1_BULK_FETCH_BY_BOOKMARK		0x00080000L
#endif  /* ODBCVER >= 0x0300 */

/* bitmasks for SQL_DYNAMIC_CURSOR_ATTRIBUTES2,
 * SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2, 
 * SQL_KEYSET_CURSOR_ATTRIBUTES2, and SQL_STATIC_CURSOR_ATTRIBUTES2 
 */
#if (ODBCVER >= 0x0300)
/* supported values for SQL_ATTR_SCROLL_CONCURRENCY */
#define SQL_CA2_READ_ONLY_CONCURRENCY		0x00000001L
#define SQL_CA2_LOCK_CONCURRENCY			0x00000002L
#define SQL_CA2_OPT_ROWVER_CONCURRENCY		0x00000004L
#define SQL_CA2_OPT_VALUES_CONCURRENCY		0x00000008L

/* sensitivity of the cursor to its own inserts, deletes, and updates */
#define SQL_CA2_SENSITIVITY_ADDITIONS		0x00000010L
#define SQL_CA2_SENSITIVITY_DELETIONS		0x00000020L
#define SQL_CA2_SENSITIVITY_UPDATES			0x00000040L

/* semantics of SQL_ATTR_MAX_ROWS */
#define SQL_CA2_MAX_ROWS_SELECT				0x00000080L
#define SQL_CA2_MAX_ROWS_INSERT				0x00000100L
#define SQL_CA2_MAX_ROWS_DELETE				0x00000200L
#define SQL_CA2_MAX_ROWS_UPDATE				0x00000400L
#define SQL_CA2_MAX_ROWS_CATALOG			0x00000800L
#define SQL_CA2_MAX_ROWS_AFFECTS_ALL		(SQL_CA2_MAX_ROWS_SELECT | \
					SQL_CA2_MAX_ROWS_INSERT | SQL_CA2_MAX_ROWS_DELETE | \
					SQL_CA2_MAX_ROWS_UPDATE | SQL_CA2_MAX_ROWS_CATALOG)

/* semantics of SQL_DIAG_CURSOR_ROW_COUNT */
#define SQL_CA2_CRC_EXACT					0x00001000L
#define SQL_CA2_CRC_APPROXIMATE				0x00002000L

/* the kinds of positioned statements that can be simulated */
#define SQL_CA2_SIMULATE_NON_UNIQUE			0x00004000L
#define SQL_CA2_SIMULATE_TRY_UNIQUE			0x00008000L
#define SQL_CA2_SIMULATE_UNIQUE				0x00010000L
#endif  /* ODBCVER >= 0x0300 */

/* SQL_ODBC_API_CONFORMANCE values */

#define SQL_OAC_NONE                        0x0000
#define SQL_OAC_LEVEL1                      0x0001
#define SQL_OAC_LEVEL2                      0x0002

/* SQL_ODBC_SAG_CLI_CONFORMANCE values */

#define SQL_OSCC_NOT_COMPLIANT              0x0000
#define SQL_OSCC_COMPLIANT                  0x0001

/* SQL_ODBC_SQL_CONFORMANCE values */

#define SQL_OSC_MINIMUM                     0x0000
#define SQL_OSC_CORE                        0x0001
#define SQL_OSC_EXTENDED                    0x0002


/* SQL_CONCAT_NULL_BEHAVIOR values */

#define SQL_CB_NULL                         0x0000
#define SQL_CB_NON_NULL                     0x0001

/* SQL_SCROLL_OPTIONS masks */

#define SQL_SO_FORWARD_ONLY                 0x00000001L
#define SQL_SO_KEYSET_DRIVEN                0x00000002L
#define SQL_SO_DYNAMIC                      0x00000004L
#define SQL_SO_MIXED                        0x00000008L
#define SQL_SO_STATIC                       0x00000010L

/* SQL_FETCH_DIRECTION masks */

/* SQL_FETCH_RESUME is no longer supported
#define SQL_FD_FETCH_RESUME                 0x00000040L 
*/
#define SQL_FD_FETCH_BOOKMARK               0x00000080L

/* SQL_TXN_ISOLATION_OPTION masks */
/* SQL_TXN_VERSIONING is no longer supported
#define SQL_TXN_VERSIONING                  0x00000010L
*/

/* SQL_CORRELATION_NAME values */

#define SQL_CN_NONE                         0x0000
#define SQL_CN_DIFFERENT                    0x0001
#define SQL_CN_ANY                          0x0002

/* SQL_NON_NULLABLE_COLUMNS values */

#define SQL_NNC_NULL                        0x0000
#define SQL_NNC_NON_NULL                    0x0001

/* SQL_NULL_COLLATION values */

#define SQL_NC_START                        0x0002
#define SQL_NC_END                          0x0004

/* SQL_FILE_USAGE values */

#define SQL_FILE_NOT_SUPPORTED              0x0000
#define SQL_FILE_TABLE                      0x0001
#define SQL_FILE_QUALIFIER                  0x0002
#define SQL_FILE_CATALOG					SQL_FILE_QUALIFIER	// ODBC 3.0


/* SQL_GETDATA_EXTENSIONS values */

#define SQL_GD_BLOCK                        0x00000004L
#define SQL_GD_BOUND                        0x00000008L

/* SQL_POSITIONED_STATEMENTS masks */

#define SQL_PS_POSITIONED_DELETE            0x00000001L
#define SQL_PS_POSITIONED_UPDATE            0x00000002L
#define SQL_PS_SELECT_FOR_UPDATE            0x00000004L

/* SQL_GROUP_BY values */

#define SQL_GB_NOT_SUPPORTED                0x0000
#define SQL_GB_GROUP_BY_EQUALS_SELECT       0x0001
#define SQL_GB_GROUP_BY_CONTAINS_SELECT     0x0002
#define SQL_GB_NO_RELATION                  0x0003
#if (ODBCVER >= 0x0300)
#define	SQL_GB_COLLATE						0x0004

#endif  /* ODBCVER >= 0x0300 */

/* SQL_OWNER_USAGE masks */

#define SQL_OU_DML_STATEMENTS               0x00000001L
#define SQL_OU_PROCEDURE_INVOCATION         0x00000002L
#define SQL_OU_TABLE_DEFINITION             0x00000004L
#define SQL_OU_INDEX_DEFINITION             0x00000008L
#define SQL_OU_PRIVILEGE_DEFINITION         0x00000010L

/* SQL_SCHEMA_USAGE masks */
#if (ODBCVER >= 0x0300)
#define SQL_SU_DML_STATEMENTS			SQL_OU_DML_STATEMENTS 
#define SQL_SU_PROCEDURE_INVOCATION		SQL_OU_PROCEDURE_INVOCATION
#define SQL_SU_TABLE_DEFINITION			SQL_OU_TABLE_DEFINITION
#define SQL_SU_INDEX_DEFINITION			SQL_OU_INDEX_DEFINITION
#define SQL_SU_PRIVILEGE_DEFINITION		SQL_OU_PRIVILEGE_DEFINITION
#endif  /* ODBCVER >= 0x0300 */

/* SQL_QUALIFIER_USAGE masks */

#define SQL_QU_DML_STATEMENTS               0x00000001L
#define SQL_QU_PROCEDURE_INVOCATION         0x00000002L
#define SQL_QU_TABLE_DEFINITION             0x00000004L
#define SQL_QU_INDEX_DEFINITION             0x00000008L
#define SQL_QU_PRIVILEGE_DEFINITION         0x00000010L

#if (ODBCVER >= 0x0300)
/* SQL_CATALOG_USAGE masks */
#define SQL_CU_DML_STATEMENTS			SQL_QU_DML_STATEMENTS
#define SQL_CU_PROCEDURE_INVOCATION		SQL_QU_PROCEDURE_INVOCATION 
#define SQL_CU_TABLE_DEFINITION			SQL_QU_TABLE_DEFINITION
#define SQL_CU_INDEX_DEFINITION			SQL_QU_INDEX_DEFINITION 
#define SQL_CU_PRIVILEGE_DEFINITION		SQL_QU_PRIVILEGE_DEFINITION 
#endif  /* ODBCVER >= 0x0300 */

/* SQL_SUBQUERIES masks */

#define SQL_SQ_COMPARISON                   0x00000001L
#define SQL_SQ_EXISTS                       0x00000002L
#define SQL_SQ_IN                           0x00000004L
#define SQL_SQ_QUANTIFIED                   0x00000008L
#define SQL_SQ_CORRELATED_SUBQUERIES        0x00000010L

/* SQL_UNION masks */

#define SQL_U_UNION                         0x00000001L
#define SQL_U_UNION_ALL                     0x00000002L

/* SQL_BOOKMARK_PERSISTENCE values */

#define SQL_BP_CLOSE                        0x00000001L
#define SQL_BP_DELETE                       0x00000002L
#define SQL_BP_DROP                         0x00000004L
#define SQL_BP_TRANSACTION                  0x00000008L
#define SQL_BP_UPDATE                       0x00000010L
#define SQL_BP_OTHER_HSTMT                  0x00000020L
#define SQL_BP_SCROLL                       0x00000040L

/* SQL_STATIC_SENSITIVITY values */

#define SQL_SS_ADDITIONS                    0x00000001L
#define SQL_SS_DELETIONS                    0x00000002L
#define SQL_SS_UPDATES                      0x00000004L

/* SQL_VIEW values */
#define	SQL_CV_CREATE_VIEW					0x00000001L
#define	SQL_CV_CHECK_OPTION					0x00000002L
#define	SQL_CV_CASCADED						0x00000004L
#define	SQL_CV_LOCAL						0x00000008L

/* SQL_LOCK_TYPES masks */

#define SQL_LCK_NO_CHANGE                   0x00000001L
#define SQL_LCK_EXCLUSIVE                   0x00000002L
#define SQL_LCK_UNLOCK                      0x00000004L

/* SQL_POS_OPERATIONS masks */

#define SQL_POS_POSITION                    0x00000001L
#define SQL_POS_REFRESH                     0x00000002L
#define SQL_POS_UPDATE                      0x00000004L
#define SQL_POS_DELETE                      0x00000008L
#define SQL_POS_ADD                         0x00000010L

/* SQL_QUALIFIER_LOCATION values */

#define SQL_QL_START                        0x0001
#define SQL_QL_END                          0x0002

/* Here start return values for ODBC 3.0 SQLGetInfo */

#if (ODBCVER >= 0x0300)
/* SQL_AGGREGATE_FUNCTIONS bitmasks */
#define SQL_AF_AVG						0x00000001L
#define SQL_AF_COUNT					0x00000002L
#define SQL_AF_MAX						0x00000004L
#define SQL_AF_MIN						0x00000008L
#define SQL_AF_SUM						0x00000010L
#define SQL_AF_DISTINCT					0x00000020L
#define SQL_AF_ALL						0x00000040L	

/* SQL_SQL_CONFORMANCE bit masks */
#define	SQL_SC_SQL92_ENTRY				0x00000001L
#define	SQL_SC_FIPS127_2_TRANSITIONAL	0x00000002L
#define	SQL_SC_SQL92_INTERMEDIATE		0x00000004L
#define	SQL_SC_SQL92_FULL				0x00000008L

/* SQL_DATETIME_LITERALS masks */
#define SQL_DL_SQL92_DATE						0x00000001L
#define SQL_DL_SQL92_TIME						0x00000002L
#define SQL_DL_SQL92_TIMESTAMP					0x00000004L
#define SQL_DL_SQL92_INTERVAL_YEAR				0x00000008L
#define SQL_DL_SQL92_INTERVAL_MONTH				0x00000010L
#define SQL_DL_SQL92_INTERVAL_DAY				0x00000020L
#define SQL_DL_SQL92_INTERVAL_HOUR				0x00000040L
#define	SQL_DL_SQL92_INTERVAL_MINUTE			0x00000080L
#define SQL_DL_SQL92_INTERVAL_SECOND			0x00000100L
#define SQL_DL_SQL92_INTERVAL_YEAR_TO_MONTH		0x00000200L
#define SQL_DL_SQL92_INTERVAL_DAY_TO_HOUR		0x00000400L
#define SQL_DL_SQL92_INTERVAL_DAY_TO_MINUTE		0x00000800L
#define SQL_DL_SQL92_INTERVAL_DAY_TO_SECOND		0x00001000L
#define SQL_DL_SQL92_INTERVAL_HOUR_TO_MINUTE	0x00002000L
#define SQL_DL_SQL92_INTERVAL_HOUR_TO_SECOND	0x00004000L
#define SQL_DL_SQL92_INTERVAL_MINUTE_TO_SECOND	0x00008000L

/* SQL_CATALOG_LOCATION values */
#define SQL_CL_START						SQL_QL_START
#define SQL_CL_END							SQL_QL_END

/* values for SQL_BATCH_ROW_COUNT */
#define SQL_BRC_PROCEDURES			0x0000001
#define	SQL_BRC_EXPLICIT			0x0000002
#define	SQL_BRC_ROLLED_UP			0x0000004

/* bitmasks for SQL_BATCH_SUPPORT */
#define SQL_BS_SELECT_EXPLICIT				0x00000001L
#define SQL_BS_ROW_COUNT_EXPLICIT			0x00000002L
#define SQL_BS_SELECT_PROC					0x00000004L
#define SQL_BS_ROW_COUNT_PROC				0x00000008L

/* Values for SQL_PARAM_ARRAY_ROW_COUNTS getinfo */
#define SQL_PARC_BATCH		1
#define SQL_PARC_NO_BATCH	2

/* values for SQL_PARAM_ARRAY_SELECTS */
#define SQL_PAS_BATCH				1
#define SQL_PAS_NO_BATCH			2		
#define SQL_PAS_NO_SELECT			3

/* Bitmasks for SQL_INDEX_KEYWORDS */
#define SQL_IK_NONE							0x00000000L
#define SQL_IK_ASC							0x00000001L
#define SQL_IK_DESC							0x00000002L
#define SQL_IK_ALL							(SQL_IK_ASC | SQL_IK_DESC)

/* Bitmasks for SQL_INFO_SCHEMA_VIEWS */

#define SQL_ISV_ASSERTIONS					0x00000001L
#define SQL_ISV_CHARACTER_SETS				0x00000002L
#define SQL_ISV_CHECK_CONSTRAINTS			0x00000004L
#define SQL_ISV_COLLATIONS					0x00000008L
#define SQL_ISV_COLUMN_DOMAIN_USAGE			0x00000010L
#define SQL_ISV_COLUMN_PRIVILEGES			0x00000020L
#define SQL_ISV_COLUMNS						0x00000040L
#define SQL_ISV_CONSTRAINT_COLUMN_USAGE		0x00000080L
#define SQL_ISV_CONSTRAINT_TABLE_USAGE		0x00000100L
#define SQL_ISV_DOMAIN_CONSTRAINTS			0x00000200L
#define SQL_ISV_DOMAINS						0x00000400L
#define SQL_ISV_KEY_COLUMN_USAGE			0x00000800L
#define SQL_ISV_REFERENTIAL_CONSTRAINTS		0x00001000L
#define SQL_ISV_SCHEMATA					0x00002000L
#define SQL_ISV_SQL_LANGUAGES				0x00004000L
#define	SQL_ISV_TABLE_CONSTRAINTS			0x00008000L
#define SQL_ISV_TABLE_PRIVILEGES			0x00010000L
#define SQL_ISV_TABLES						0x00020000L
#define SQL_ISV_TRANSLATIONS				0x00040000L
#define SQL_ISV_USAGE_PRIVILEGES			0x00080000L
#define SQL_ISV_VIEW_COLUMN_USAGE			0x00100000L
#define SQL_ISV_VIEW_TABLE_USAGE			0x00200000L
#define SQL_ISV_VIEWS						0x00400000L

/* Bitmasks for SQL_ASYNC_MODE */

#define	SQL_AM_NONE			0
#define	SQL_AM_CONNECTION	1
#define	SQL_AM_STATEMENT	2

/* Bitmasks for SQL_ALTER_DOMAIN */
#define SQL_AD_CONSTRAINT_NAME_DEFINITION			0x00000001L	
#define	SQL_AD_ADD_DOMAIN_CONSTRAINT	 			0x00000002L
#define	SQL_AD_DROP_DOMAIN_CONSTRAINT	 			0x00000004L
#define	SQL_AD_ADD_DOMAIN_DEFAULT   	 			0x00000008L
#define	SQL_AD_DROP_DOMAIN_DEFAULT   	 			0x00000010L
#define SQL_AD_ADD_CONSTRAINT_INITIALLY_DEFERRED	0x00000020L
#define SQL_AD_ADD_CONSTRAINT_INITIALLY_IMMEDIATE	0x00000040L
#define SQL_AD_ADD_CONSTRAINT_DEFERRABLE			0x00000080L
#define SQL_AD_ADD_CONSTRAINT_NON_DEFERRABLE		0x00000100L


/* SQL_CREATE_SCHEMA bitmasks */
#define	SQL_CS_CREATE_SCHEMA				0x00000001L
#define	SQL_CS_AUTHORIZATION				0x00000002L
#define	SQL_CS_DEFAULT_CHARACTER_SET		0x00000004L

/* SQL_CREATE_TRANSLATION bitmasks */
#define	SQL_CTR_CREATE_TRANSLATION			0x00000001L

/* SQL_CREATE_ASSERTION bitmasks */
#define	SQL_CA_CREATE_ASSERTION					0x00000001L
#define	SQL_CA_CONSTRAINT_INITIALLY_DEFERRED	0x00000010L
#define	SQL_CA_CONSTRAINT_INITIALLY_IMMEDIATE	0x00000020L
#define	SQL_CA_CONSTRAINT_DEFERRABLE			0x00000040L
#define	SQL_CA_CONSTRAINT_NON_DEFERRABLE		0x00000080L

/* SQL_CREATE_CHARACTER_SET bitmasks */
#define	SQL_CCS_CREATE_CHARACTER_SET		0x00000001L
#define	SQL_CCS_COLLATE_CLAUSE				0x00000002L
#define	SQL_CCS_LIMITED_COLLATION			0x00000004L

/* SQL_CREATE_COLLATION bitmasks */
#define	SQL_CCOL_CREATE_COLLATION			0x00000001L

/* SQL_CREATE_DOMAIN bitmasks */
#define	SQL_CDO_CREATE_DOMAIN					0x00000001L
#define	SQL_CDO_DEFAULT							0x00000002L
#define	SQL_CDO_CONSTRAINT						0x00000004L
#define	SQL_CDO_COLLATION						0x00000008L
#define SQL_CDO_CONSTRAINT_NAME_DEFINITION		0x00000010L
#define SQL_CDO_CONSTRAINT_INITIALLY_DEFERRED	0x00000020L
#define SQL_CDO_CONSTRAINT_INITIALLY_IMMEDIATE	0x00000040L
#define SQL_CDO_CONSTRAINT_DEFERRABLE			0x00000080L
#define SQL_CDO_CONSTRAINT_NON_DEFERRABLE		0x00000100L

/* SQL_CREATE_TABLE bitmasks */
#define	SQL_CT_CREATE_TABLE						0x00000001L
#define	SQL_CT_COMMIT_PRESERVE					0x00000002L
#define	SQL_CT_COMMIT_DELETE					0x00000004L
#define	SQL_CT_GLOBAL_TEMPORARY					0x00000008L
#define	SQL_CT_LOCAL_TEMPORARY					0x00000010L
#define	SQL_CT_CONSTRAINT_INITIALLY_DEFERRED	0x00000020L
#define	SQL_CT_CONSTRAINT_INITIALLY_IMMEDIATE	0x00000040L
#define	SQL_CT_CONSTRAINT_DEFERRABLE			0x00000080L
#define	SQL_CT_CONSTRAINT_NON_DEFERRABLE		0x00000100L
#define SQL_CT_COLUMN_CONSTRAINT				0x00000200L
#define SQL_CT_COLUMN_DEFAULT					0x00000400L
#define SQL_CT_COLUMN_COLLATION					0x00000800L
#define SQL_CT_TABLE_CONSTRAINT					0x00001000L
#define SQL_CT_CONSTRAINT_NAME_DEFINITION		0x00002000L

/* SQL_DDL_INDEX bitmasks */
#define SQL_DI_CREATE_INDEX						0x00000001L
#define SQL_DI_DROP_INDEX						0x00000002L

/* SQL_DROP_COLLATION bitmasks */
#define	SQL_DC_DROP_COLLATION					0x00000001L

/* SQL_DROP_DOMAIN bitmasks */
#define	SQL_DD_DROP_DOMAIN						0x00000001L
#define	SQL_DD_RESTRICT							0x00000002L
#define	SQL_DD_CASCADE							0x00000004L

/* SQL_DROP_SCHEMA bitmasks */
#define	SQL_DS_DROP_SCHEMA						0x00000001L
#define SQL_DS_RESTRICT							0x00000002L
#define	SQL_DS_CASCADE							0x00000004L

/* SQL_DROP_CHARACTER_SET bitmasks */
#define	SQL_DCS_DROP_CHARACTER_SET				0x00000001L

/* SQL_DROP_ASSERTION bitmasks */
#define	SQL_DA_DROP_ASSERTION					0x00000001L

/* SQL_DROP_TABLE bitmasks */
#define	SQL_DT_DROP_TABLE						0x00000001L
#define	SQL_DT_RESTRICT							0x00000002L
#define	SQL_DT_CASCADE							0x00000004L

/* SQL_DROP_TRANSLATION bitmasks */
#define	SQL_DTR_DROP_TRANSLATION				0x00000001L

/* SQL_DROP_VIEW bitmasks */
#define	SQL_DV_DROP_VIEW						0x00000001L
#define	SQL_DV_RESTRICT							0x00000002L
#define	SQL_DV_CASCADE							0x00000004L

/* SQL_INSERT_STATEMENT bitmasks */
#define	SQL_IS_INSERT_LITERALS					0x00000001L
#define SQL_IS_INSERT_SEARCHED					0x00000002L
#define SQL_IS_SELECT_INTO						0x00000004L

/* SQL_ODBC_INTERFACE_CONFORMANCE values */
#define SQL_OIC_CORE							1UL
#define SQL_OIC_LEVEL1							2UL
#define SQL_OIC_LEVEL2							3UL

/* SQL_SQL92_FOREIGN_KEY_DELETE_RULE bitmasks */
#define SQL_SFKD_CASCADE						0x00000001L
#define SQL_SFKD_NO_ACTION						0x00000002L
#define SQL_SFKD_SET_DEFAULT					0x00000004L
#define SQL_SFKD_SET_NULL						0x00000008L

/* SQL_SQL92_FOREIGN_KEY_UPDATE_RULE bitmasks */
#define SQL_SFKU_CASCADE						0x00000001L
#define SQL_SFKU_NO_ACTION						0x00000002L
#define SQL_SFKU_SET_DEFAULT					0x00000004L
#define SQL_SFKU_SET_NULL						0x00000008L

/* SQL_SQL92_GRANT	bitmasks */
#define SQL_SG_USAGE_ON_DOMAIN					0x00000001L
#define SQL_SG_USAGE_ON_CHARACTER_SET			0x00000002L
#define SQL_SG_USAGE_ON_COLLATION				0x00000004L
#define SQL_SG_USAGE_ON_TRANSLATION				0x00000008L
#define SQL_SG_WITH_GRANT_OPTION				0x00000010L
#define SQL_SG_DELETE_TABLE						0x00000020L
#define SQL_SG_INSERT_TABLE						0x00000040L
#define SQL_SG_INSERT_COLUMN					0x00000080L
#define SQL_SG_REFERENCES_TABLE					0x00000100L
#define SQL_SG_REFERENCES_COLUMN				0x00000200L
#define SQL_SG_SELECT_TABLE						0x00000400L
#define SQL_SG_UPDATE_TABLE						0x00000800L
#define SQL_SG_UPDATE_COLUMN					0x00001000L	

/* SQL_SQL92_PREDICATES bitmasks */
#define SQL_SP_EXISTS							0x00000001L
#define SQL_SP_ISNOTNULL						0x00000002L
#define SQL_SP_ISNULL							0x00000004L
#define SQL_SP_MATCH_FULL						0x00000008L
#define SQL_SP_MATCH_PARTIAL					0x00000010L
#define SQL_SP_MATCH_UNIQUE_FULL				0x00000020L
#define SQL_SP_MATCH_UNIQUE_PARTIAL				0x00000040L
#define SQL_SP_OVERLAPS							0x00000080L
#define SQL_SP_UNIQUE							0x00000100L
#define SQL_SP_LIKE								0x00000200L
#define SQL_SP_IN								0x00000400L
#define SQL_SP_BETWEEN							0x00000800L
#define SQL_SP_COMPARISON						0x00001000L
#define SQL_SP_QUANTIFIED_COMPARISON			0x00002000L

/* SQL_SQL92_RELATIONAL_JOIN_OPERATORS bitmasks */
#define SQL_SRJO_CORRESPONDING_CLAUSE			0x00000001L
#define SQL_SRJO_CROSS_JOIN						0x00000002L
#define SQL_SRJO_EXCEPT_JOIN					0x00000004L
#define SQL_SRJO_FULL_OUTER_JOIN				0x00000008L
#define SQL_SRJO_INNER_JOIN						0x00000010L
#define SQL_SRJO_INTERSECT_JOIN					0x00000020L
#define SQL_SRJO_LEFT_OUTER_JOIN				0x00000040L
#define SQL_SRJO_NATURAL_JOIN					0x00000080L
#define SQL_SRJO_RIGHT_OUTER_JOIN				0x00000100L
#define SQL_SRJO_UNION_JOIN						0x00000200L

/* SQL_SQL92_REVOKE bitmasks */
#define SQL_SR_USAGE_ON_DOMAIN					0x00000001L
#define SQL_SR_USAGE_ON_CHARACTER_SET			0x00000002L
#define SQL_SR_USAGE_ON_COLLATION				0x00000004L
#define SQL_SR_USAGE_ON_TRANSLATION				0x00000008L
#define SQL_SR_GRANT_OPTION_FOR					0x00000010L
#define SQL_SR_CASCADE							0x00000020L
#define SQL_SR_RESTRICT							0x00000040L
#define SQL_SR_DELETE_TABLE						0x00000080L
#define SQL_SR_INSERT_TABLE						0x00000100L
#define SQL_SR_INSERT_COLUMN					0x00000200L
#define SQL_SR_REFERENCES_TABLE					0x00000400L
#define SQL_SR_REFERENCES_COLUMN				0x00000800L
#define SQL_SR_SELECT_TABLE						0x00001000L
#define SQL_SR_UPDATE_TABLE						0x00002000L
#define SQL_SR_UPDATE_COLUMN					0x00004000L

/* SQL_SQL92_ROW_VALUE_CONSTRUCTOR bitmasks */
#define SQL_SRVC_VALUE_EXPRESSION				0x00000001L
#define SQL_SRVC_NULL							0x00000002L
#define SQL_SRVC_DEFAULT						0x00000004L
#define SQL_SRVC_ROW_SUBQUERY					0x00000008L

/* SQL_SQL92_VALUE_EXPRESSIONS bitmasks */
#define SQL_SVE_CASE							0x00000001L
#define SQL_SVE_CAST							0x00000002L
#define SQL_SVE_COALESCE						0x00000004L
#define SQL_SVE_NULLIF							0x00000008L

/* SQL_STANDARD_CLI_CONFORMANCE bitmasks */
#define SQL_SCC_XOPEN_CLI_VERSION1				0x00000001L
#define SQL_SCC_ISO92_CLI						0x00000002L

/* SQL_UNION_STATEMENT bitmasks */
#define SQL_US_UNION							SQL_U_UNION
#define SQL_US_UNION_ALL						SQL_U_UNION_ALL

#endif  /* ODBCVER >= 0x0300 */

/* SQL_DTC_TRANSITION_COST bitmasks */
#define SQL_DTC_ENLIST_EXPENSIVE				0x00000001L
#define SQL_DTC_UNENLIST_EXPENSIVE				0x00000002L

/* additional SQLDataSources fetch directions */
#if (ODBCVER >= 0x0300)
#define SQL_FETCH_FIRST_USER				31
#define SQL_FETCH_FIRST_SYSTEM				32
#endif  /* ODBCVER >= 0x0300 */


/* Defines for SQLSetPos */
#define SQL_ENTIRE_ROWSET            0

/* Operations in SQLSetPos */
#define SQL_POSITION                 0               /*      1.0 FALSE */
#define SQL_REFRESH                  1               /*      1.0 TRUE */
#define SQL_UPDATE                   2
#define SQL_DELETE                   3

/* Operations in SQLBulkOperations */
#define SQL_ADD                      4
#define	SQL_SETPOS_MAX_OPTION_VALUE			SQL_ADD
#if (ODBCVER >= 0x0300)
#define SQL_UPDATE_BY_BOOKMARK		 5
#define SQL_DELETE_BY_BOOKMARK		 6
#define	SQL_FETCH_BY_BOOKMARK		 7

#endif /*  ODBCVER >= 0x0300 */

/* Lock options in SQLSetPos */
#define SQL_LOCK_NO_CHANGE           0               /*      1.0 FALSE */
#define SQL_LOCK_EXCLUSIVE           1               /*      1.0 TRUE */
#define SQL_LOCK_UNLOCK              2

#define	SQL_SETPOS_MAX_LOCK_VALUE		SQL_LOCK_UNLOCK

/* Macros for SQLSetPos */
#define SQL_POSITION_TO(hstmt,irow) SQLSetPos(hstmt,irow,SQL_POSITION,SQL_LOCK_NO_CHANGE)
#define SQL_LOCK_RECORD(hstmt,irow,fLock) SQLSetPos(hstmt,irow,SQL_POSITION,fLock)
#define SQL_REFRESH_RECORD(hstmt,irow,fLock) SQLSetPos(hstmt,irow,SQL_REFRESH,fLock)
#define SQL_UPDATE_RECORD(hstmt,irow) SQLSetPos(hstmt,irow,SQL_UPDATE,SQL_LOCK_NO_CHANGE)
#define SQL_DELETE_RECORD(hstmt,irow) SQLSetPos(hstmt,irow,SQL_DELETE,SQL_LOCK_NO_CHANGE)
#define SQL_ADD_RECORD(hstmt,irow) SQLSetPos(hstmt,irow,SQL_ADD,SQL_LOCK_NO_CHANGE)

/* Column types and scopes in SQLSpecialColumns.  */
#define SQL_BEST_ROWID                  1
#define SQL_ROWVER                      2

/* Defines for SQLSpecialColumns (returned in the result set) 
   SQL_PC_UNKNOWN and SQL_PC_PSEUDO are defined in sql.h */
#define SQL_PC_NOT_PSEUDO               1

/* Defines for SQLStatistics */
#define SQL_QUICK                       0
#define SQL_ENSURE                      1

/* Defines for SQLStatistics (returned in the result set) 
   SQL_INDEX_CLUSTERED, SQL_INDEX_HASHED, and SQL_INDEX_OTHER are
   defined in sql.h */
#define SQL_TABLE_STAT                  0


/* Defines for SQLTables */
#if (ODBCVER >= 0x0300)
#define SQL_ALL_CATALOGS				"%"
#define SQL_ALL_SCHEMAS					"%"
#define SQL_ALL_TABLE_TYPES				"%"
#endif  /* ODBCVER >= 0x0300 */

/* Options for SQLDriverConnect */
#define SQL_DRIVER_NOPROMPT             0
#define SQL_DRIVER_COMPLETE             1
#define SQL_DRIVER_PROMPT               2
#define SQL_DRIVER_COMPLETE_REQUIRED    3

#ifndef RC_INVOKED

SQLRETURN SQL_API SQLDriverConnect(
    SQLHDBC            hdbc,
    SQLHWND            hwnd,
    SQLCHAR 		  *szConnStrIn,
    SQLSMALLINT        cbConnStrIn,
    SQLCHAR           *szConnStrOut,
    SQLSMALLINT        cbConnStrOutMax,
    SQLSMALLINT 	  *pcbConnStrOut,
    SQLUSMALLINT       fDriverCompletion);

#endif /* RC_INVOKED */

/* Level 2 Functions                             */

/* SQLExtendedFetch "fFetchType" values */
#define SQL_FETCH_BOOKMARK               8

/* SQLExtendedFetch "rgfRowStatus" element values */
#define SQL_ROW_SUCCESS                  0
#define SQL_ROW_DELETED                  1
#define SQL_ROW_UPDATED                  2
#define SQL_ROW_NOROW                    3
#define SQL_ROW_ADDED                    4
#define SQL_ROW_ERROR                    5
#if (ODBCVER >= 0x0300)
#define SQL_ROW_SUCCESS_WITH_INFO		 6
#define SQL_ROW_PROCEED					 0
#define SQL_ROW_IGNORE					 1
#endif

/* value for SQL_DESC_ARRAY_STATUS_PTR */
#if (ODBCVER >= 0x0300)
#define SQL_PARAM_SUCCESS				0
#define SQL_PARAM_SUCCESS_WITH_INFO		6
#define SQL_PARAM_ERROR					5
#define SQL_PARAM_UNUSED				7
#define SQL_PARAM_DIAG_UNAVAILABLE		1

#define SQL_PARAM_PROCEED				0
#define SQL_PARAM_IGNORE				1
#endif  /* ODBCVER >= 0x0300 */

/* Defines for SQLForeignKeys (UPDATE_RULE and DELETE_RULE) */
#define SQL_CASCADE                      0
#define SQL_RESTRICT                     1
#define SQL_SET_NULL                     2
#if (ODBCVER >= 0x0250)
#define SQL_NO_ACTION			 3
#define SQL_SET_DEFAULT			 4
#endif  /* ODBCVER >= 0x0250 */

#if (ODBCVER >= 0x0300)
/* Note that the following are in a different column of SQLForeignKeys than */
/* the previous #defines.   These are for DEFERRABILITY.                    */

#define SQL_INITIALLY_DEFERRED			5
#define SQL_INITIALLY_IMMEDIATE			6
#define SQL_NOT_DEFERRABLE			7

#endif  /* ODBCVER >= 0x0300 */

/* Defines for SQLBindParameter and
                           SQLProcedureColumns (returned in the result set) */
#define SQL_PARAM_TYPE_UNKNOWN           0
#define SQL_PARAM_INPUT                  1
#define SQL_PARAM_INPUT_OUTPUT           2
#define SQL_RESULT_COL                   3
#define SQL_PARAM_OUTPUT                 4
#define SQL_RETURN_VALUE                 5

/* Defines for SQLProcedures (returned in the result set) */
#define SQL_PT_UNKNOWN                   0
#define SQL_PT_PROCEDURE                 1
#define SQL_PT_FUNCTION                  2

#ifndef RC_INVOKED

/*      This define is too large for RC */
#define SQL_ODBC_KEYWORDS \
"ABSOLUTE,ACTION,ADA,ADD,ALL,ALLOCATE,ALTER,AND,ANY,ARE,AS,"\
"ASC,ASSERTION,AT,AUTHORIZATION,AVG,"\
"BEGIN,BETWEEN,BIT,BIT_LENGTH,BOTH,BY,CASCADE,CASCADED,CASE,CAST,CATALOG,"\
"CHAR,CHAR_LENGTH,CHARACTER,CHARACTER_LENGTH,CHECK,CLOSE,COALESCE,"\
"COLLATE,COLLATION,COLUMN,COMMIT,CONNECT,CONNECTION,CONSTRAINT,"\
"CONSTRAINTS,CONTINUE,CONVERT,CORRESPONDING,COUNT,CREATE,CROSS,CURRENT,"\
"CURRENT_DATE,CURRENT_TIME,CURRENT_TIMESTAMP,CURRENT_USER,CURSOR,"\
"DATE,DAY,DEALLOCATE,DEC,DECIMAL,DECLARE,DEFAULT,DEFERRABLE,"\
"DEFERRED,DELETE,DESC,DESCRIBE,DESCRIPTOR,DIAGNOSTICS,DISCONNECT,"\
"DISTINCT,DOMAIN,DOUBLE,DROP,"\
"ELSE,END,END-EXEC,ESCAPE,EXCEPT,EXCEPTION,EXEC,EXECUTE,"\
"EXISTS,EXTERNAL,EXTRACT,"\
"FALSE,FETCH,FIRST,FLOAT,FOR,FOREIGN,FORTRAN,FOUND,FROM,FULL,"\
"GET,GLOBAL,GO,GOTO,GRANT,GROUP,HAVING,HOUR,"\
"IDENTITY,IMMEDIATE,IN,INCLUDE,INDEX,INDICATOR,INITIALLY,INNER,"\
"INPUT,INSENSITIVE,INSERT,INT,INTEGER,INTERSECT,INTERVAL,INTO,IS,ISOLATION,"\
"JOIN,KEY,LANGUAGE,LAST,LEADING,LEFT,LEVEL,LIKE,LOCAL,LOWER,"\
"MATCH,MAX,MIN,MINUTE,MODULE,MONTH,"\
"NAMES,NATIONAL,NATURAL,NCHAR,NEXT,NO,NONE,NOT,NULL,NULLIF,NUMERIC,"\
"OCTET_LENGTH,OF,ON,ONLY,OPEN,OPTION,OR,ORDER,OUTER,OUTPUT,OVERLAPS,"\
"PAD,PARTIAL,PASCAL,PLI,POSITION,PRECISION,PREPARE,PRESERVE,"\
"PRIMARY,PRIOR,PRIVILEGES,PROCEDURE,PUBLIC,"\
"READ,REAL,REFERENCES,RELATIVE,RESTRICT,REVOKE,RIGHT,ROLLBACK,ROWS"\
"SCHEMA,SCROLL,SECOND,SECTION,SELECT,SESSION,SESSION_USER,SET,SIZE,"\
"SMALLINT,SOME,SPACE,SQL,SQLCA,SQLCODE,SQLERROR,SQLSTATE,SQLWARNING,"\
"SUBSTRING,SUM,SYSTEM_USER,"\
"TABLE,TEMPORARY,THEN,TIME,TIMESTAMP,TIMEZONE_HOUR,TIMEZONE_MINUTE,"\
"TO,TRAILING,TRANSACTION,TRANSLATE,TRANSLATION,TRIM,TRUE,"\
"UNION,UNIQUE,UNKNOWN,UPDATE,UPPER,USAGE,USER,USING,"\
"VALUE,VALUES,VARCHAR,VARYING,VIEW,WHEN,WHENEVER,WHERE,WITH,WORK,WRITE,"\
"YEAR,ZONE"

SQLRETURN SQL_API SQLBrowseConnect(
    SQLHDBC            hdbc,
    SQLCHAR 		  *szConnStrIn,
    SQLSMALLINT        cbConnStrIn,
    SQLCHAR 		  *szConnStrOut,
    SQLSMALLINT        cbConnStrOutMax,
    SQLSMALLINT       *pcbConnStrOut);

#if (ODBCVER >= 0x0300)
SQLRETURN	SQL_API	SQLBulkOperations(
	SQLHSTMT			StatementHandle,
	SQLSMALLINT			Operation);
#endif  /* ODBCVER >= 0x0300 */

SQLRETURN SQL_API SQLColAttributes(
    SQLHSTMT           hstmt,
    SQLUSMALLINT       icol,
    SQLUSMALLINT       fDescType,
    SQLPOINTER         rgbDesc,
    SQLSMALLINT        cbDescMax,
    SQLSMALLINT 	  *pcbDesc,
    SQLLEN 		      * pfDesc);

SQLRETURN SQL_API SQLColumnPrivileges(
    SQLHSTMT           hstmt,
    SQLCHAR 		  *szCatalogName,
    SQLSMALLINT        cbCatalogName,
    SQLCHAR 		  *szSchemaName,
    SQLSMALLINT        cbSchemaName,
    SQLCHAR 		  *szTableName,
    SQLSMALLINT        cbTableName,
    SQLCHAR 		  *szColumnName,
    SQLSMALLINT        cbColumnName);

SQLRETURN SQL_API SQLDescribeParam(
    SQLHSTMT           hstmt,
    SQLUSMALLINT       ipar,
    SQLSMALLINT 	  *pfSqlType,
    SQLULEN      	  *pcbParamDef,
    SQLSMALLINT 	  *pibScale,
    SQLSMALLINT 	  *pfNullable);

SQLRETURN SQL_API SQLExtendedFetch(
    SQLHSTMT           hstmt,
    SQLUSMALLINT       fFetchType,
    SQLROWOFFSET       irow,
    SQLROWSETSIZE	  *pcrow,
    SQLUSMALLINT 	  *rgfRowStatus);

SQLRETURN SQL_API SQLForeignKeys(
    SQLHSTMT           hstmt,
    SQLCHAR 		  *szPkCatalogName,
    SQLSMALLINT        cbPkCatalogName,
    SQLCHAR 		  *szPkSchemaName,
    SQLSMALLINT        cbPkSchemaName,
    SQLCHAR 		  *szPkTableName,
    SQLSMALLINT        cbPkTableName,
    SQLCHAR 		  *szFkCatalogName,
    SQLSMALLINT        cbFkCatalogName,
    SQLCHAR 		  *szFkSchemaName,
    SQLSMALLINT        cbFkSchemaName,
    SQLCHAR 		  *szFkTableName,
    SQLSMALLINT        cbFkTableName);

SQLRETURN SQL_API SQLMoreResults(
    SQLHSTMT           hstmt);

SQLRETURN SQL_API SQLNativeSql(
    SQLHDBC            hdbc,
    SQLCHAR 		  *szSqlStrIn,
    SQLINTEGER         cbSqlStrIn,
    SQLCHAR 		  *szSqlStr,
    SQLINTEGER         cbSqlStrMax,
    SQLINTEGER 		  *pcbSqlStr);

SQLRETURN SQL_API SQLNumParams(
    SQLHSTMT           hstmt,
    SQLSMALLINT 	  *pcpar);

SQLRETURN SQL_API SQLParamOptions(
    SQLHSTMT           hstmt,
    SQLROWSETSIZE      crow,
    SQLROWSETSIZE  	  *pirow);

SQLRETURN SQL_API SQLPrimaryKeys(
    SQLHSTMT           hstmt,
    SQLCHAR 		  *szCatalogName,
    SQLSMALLINT        cbCatalogName,
    SQLCHAR 		  *szSchemaName,
    SQLSMALLINT        cbSchemaName,
    SQLCHAR 		  *szTableName,
    SQLSMALLINT        cbTableName);

SQLRETURN SQL_API SQLProcedureColumns(
    SQLHSTMT           hstmt,
    SQLCHAR 		  *szCatalogName,
    SQLSMALLINT        cbCatalogName,
    SQLCHAR 		  *szSchemaName,
    SQLSMALLINT        cbSchemaName,
    SQLCHAR 		  *szProcName,
    SQLSMALLINT        cbProcName,
    SQLCHAR 		  *szColumnName,
    SQLSMALLINT        cbColumnName);

SQLRETURN SQL_API SQLProcedures(
    SQLHSTMT           hstmt,
    SQLCHAR 		  *szCatalogName,
    SQLSMALLINT        cbCatalogName,
    SQLCHAR 		  *szSchemaName,
    SQLSMALLINT        cbSchemaName,
    SQLCHAR 		  *szProcName,
    SQLSMALLINT        cbProcName);



SQLRETURN SQL_API SQLSetPos(
    SQLHSTMT           hstmt,
    SQLSETPOSIROW      irow,
    SQLUSMALLINT       fOption,
    SQLUSMALLINT       fLock);

SQLRETURN SQL_API SQLTablePrivileges(
    SQLHSTMT           hstmt,
    SQLCHAR 		  *szCatalogName,
    SQLSMALLINT        cbCatalogName,
    SQLCHAR 		  *szSchemaName,
    SQLSMALLINT        cbSchemaName,
    SQLCHAR 		  *szTableName,
    SQLSMALLINT        cbTableName);

SQLRETURN SQL_API SQLDrivers(
    SQLHENV            henv,
    SQLUSMALLINT       fDirection,
    SQLCHAR 		  *szDriverDesc,
    SQLSMALLINT        cbDriverDescMax,
    SQLSMALLINT 	  *pcbDriverDesc,
    SQLCHAR 		  *szDriverAttributes,
    SQLSMALLINT        cbDrvrAttrMax,
    SQLSMALLINT 	  *pcbDrvrAttr);

SQLRETURN SQL_API SQLBindParameter(
    SQLHSTMT           hstmt,
    SQLUSMALLINT       ipar,
    SQLSMALLINT        fParamType,
    SQLSMALLINT        fCType,
    SQLSMALLINT        fSqlType,
    SQLULEN            cbColDef,
    SQLSMALLINT        ibScale,
    SQLPOINTER         rgbValue,
    SQLLEN             cbValueMax,
    SQLLEN     		   *pcbValue);


#endif /* RC_INVOKED */

/*---------------------------------------------------------*/
/* SQLAllocHandleStd is implemented to make SQLAllocHandle */
/* compatible with X/Open standard.	 an application should */
/* not call SQLAllocHandleStd directly					   */ 
/*---------------------------------------------------------*/
#ifdef ODBC_STD
#define SQLAllocHandle  SQLAllocHandleStd
#define SQLAllocEnv(phenv)  SQLAllocHandleStd(SQL_HANDLE_ENV, SQL_NULL_HANDLE, phenv)

/* Internal type subcodes */
#define SQL_YEAR						SQL_CODE_YEAR
#define SQL_MONTH						SQL_CODE_MONTH
#define SQL_DAY							SQL_CODE_DAY
#define SQL_HOUR						SQL_CODE_HOUR
#define SQL_MINUTE						SQL_CODE_MINUTE
#define SQL_SECOND						SQL_CODE_SECOND	
#define SQL_YEAR_TO_MONTH				SQL_CODE_YEAR_TO_MONTH
#define SQL_DAY_TO_HOUR					SQL_CODE_DAY_TO_HOUR
#define SQL_DAY_TO_MINUTE				SQL_CODE_DAY_TO_MINUTE
#define SQL_DAY_TO_SECOND				SQL_CODE_DAY_TO_SECOND
#define SQL_HOUR_TO_MINUTE				SQL_CODE_HOUR_TO_MINUTE	
#define SQL_HOUR_TO_SECOND				SQL_CODE_HOUR_TO_SECOND
#define SQL_MINUTE_TO_SECOND			SQL_CODE_MINUTE_TO_SECOND
#endif /* ODBC_STD */

#if (ODBCVER >= 0x0300)
#ifndef RC_INVOKED
SQLRETURN SQL_API SQLAllocHandleStd(
	SQLSMALLINT		fHandleType,
	SQLHANDLE		hInput,
	SQLHANDLE	   *phOutput);
#endif /* RC_INVOKED */
#endif

/*      Deprecated defines from prior versions of ODBC */
#define SQL_DATABASE_NAME               16    /* Use SQLGetConnectOption/SQL_CURRENT_QUALIFIER */
#define SQL_FD_FETCH_PREV               SQL_FD_FETCH_PRIOR
#define SQL_FETCH_PREV                  SQL_FETCH_PRIOR
#define SQL_CONCUR_TIMESTAMP            SQL_CONCUR_ROWVER
#define SQL_SCCO_OPT_TIMESTAMP          SQL_SCCO_OPT_ROWVER
#define SQL_CC_DELETE                   SQL_CB_DELETE
#define SQL_CR_DELETE                   SQL_CB_DELETE
#define SQL_CC_CLOSE                    SQL_CB_CLOSE
#define SQL_CR_CLOSE                    SQL_CB_CLOSE
#define SQL_CC_PRESERVE                 SQL_CB_PRESERVE
#define SQL_CR_PRESERVE                 SQL_CB_PRESERVE
/* SQL_FETCH_RESUME is not supported by 2.0+ drivers 
#define SQL_FETCH_RESUME                7    
*/
#define SQL_SCROLL_FORWARD_ONLY         0L    /*-SQL_CURSOR_FORWARD_ONLY */
#define SQL_SCROLL_KEYSET_DRIVEN        (-1L) /*-SQL_CURSOR_KEYSET_DRIVEN */
#define SQL_SCROLL_DYNAMIC              (-2L) /*-SQL_CURSOR_DYNAMIC */
#define SQL_SCROLL_STATIC               (-3L) /*-SQL_CURSOR_STATIC */

/*      Deprecated functions from prior versions of ODBC */
#ifndef RC_INVOKED

SQLRETURN SQL_API SQLSetScrollOptions(    /*      Use SQLSetStmtOptions */
    SQLHSTMT           hstmt,
    SQLUSMALLINT       fConcurrency,
    SQLLEN             crowKeyset,
    SQLUSMALLINT       crowRowset);

/* Tracing section */

#define		TRACE_VERSION	1000		/* Version of trace API */

RETCODE	SQL_API TraceOpenLogFile(LPWSTR,LPWSTR,DWORD);// open a trace log file
RETCODE	SQL_API TraceCloseLogFile();			// Request to close a trace log
VOID	SQL_API TraceReturn(RETCODE,RETCODE);	// Processes trace after FN is called
DWORD	SQL_API TraceVersion();					// Returns trace API version

/* Functions for Visual Studio Analyzer*/
/* to turn on/off tracing or VS events, call TraceVSControl by setting or clearing the following bits  */
#define TRACE_ON			0x00000001L
#define TRACE_VS_EVENT_ON	0x00000002L	

RETCODE	SQL_API	TraceVSControl(DWORD);			

/* Functions for setting the connection pooling failure detection code */
/* The "TryWait" value is the time (in seconds) that the DM will wait  */
/* between detecting that a connection is dead (using                  */
/* SQL_ATTR_CONNECTION_DEAD) and retrying the connection.  During that */
/* interval, connection requests will get "The server appears to be    */
/* dead" error returns.                                                */ 


BOOL SQL_API    ODBCSetTryWaitValue(DWORD dwValue);	/* In seconds */
DWORD SQL_API	ODBCGetTryWaitValue();			/* In Milliseconds(!) */


/* the flags in ODBC_VS_ARGS */
#define ODBC_VS_FLAG_UNICODE_ARG	0x00000001L	/* the argument is unicode */
#define	ODBC_VS_FLAG_UNICODE_COR	0x00000002L	/* the correlation is unicode */
#define ODBC_VS_FLAG_RETCODE		0x00000004L	/* RetCode field is set */
#define ODBC_VS_FLAG_STOP		0x00000008L	/* Stop firing visual studio analyzer events */

typedef struct tagODBC_VS_ARGS {
	const GUID	*pguidEvent;	/* the GUID for event */
	DWORD	dwFlags;		/* flags for the call */
	union {
		WCHAR	*wszArg;	
		CHAR	*szArg;
	};
	union {
		WCHAR	*wszCorrelation;
		CHAR	*szCorrelation;
	};				
	RETCODE	RetCode;
} ODBC_VS_ARGS, *PODBC_VS_ARGS;
VOID	SQL_API	FireVSDebugEvent(PODBC_VS_ARGS);

#endif /* RC_INVOKED */


#ifdef __cplusplus
}                                     /* End of extern "C" { */
#endif  /* __cplusplus */

#if defined(WIN32) 
#include "sqlucode.h"
#endif

#endif /* __SQLEXT */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SqlNsDef.h ===
#ifndef SQLNS_DEF_H_

#ifdef  DO_SQLNS_ODL_CONSTANTS_
#define DONE_SQLNS_ODL_CONSTANTS_

#ifndef SQLNSVersion_Major
	#define SQLNSVersion_Major 7
	#define SQLNSVersion_Minor 0
#endif // SQLNSVersion_Major

/////////////////////////////////////////////////////////////////////////////////////////
// Constant enumerations.
/////////////////////////////////////////////////////////////////////////////////////////

#define IID_ISQLNamespace 00026f20-EB1C-11cf-AE6E-00AA004A34D5
#define IID_ISQLNamespaceObject 00026f21-EB1C-11cf-AE6E-00AA004A34D5
#define IID_ISQLNamespaceCommand 00026f22-EB1C-11cf-AE6E-00AA004A34D5
#define IID_ISQLNamespaceCommands 00026f23-EB1C-11cf-AE6E-00AA004A34D5
#define IID_IReplicationCustomization 00026f24-EB1C-11cf-AE6E-00AA004A34D5

#define LIBID_SQLNamespace 00026f30-EB1C-11cf-AE6E-00AA004A34D5
#define CLSID_SQLNamespace 00026f00-EB1C-11cf-AE6E-00AA004A34D5
#define CLSID_SQLNamespaceInternal 00026f10-EB1C-11cf-AE6E-00AA004A34D5


#endif //DO_SQLNS_ODL_CONSTANTS_


#ifdef DO_HELP_CONSTANTS_

//interfaces
#define H_NamespaceLibrary		100
#define H_Namespace				200
#define H_NamespaceObject		400
#define H_NamespaceCommand		600
#define H_NamespaceCommands		800

//enums
#define H_SQLNSRootType			2000
#define H_SQLNSObjectType		2200
#define H_SQLNSModality			2400
#define H_SQLNSCommandID		2600
#define H_SQLNSErrors			2800

#endif //DO_HELP_CONSTANTS_



#ifdef DO_ODL_TYPDEFS_


// To avoid the need to cast on bitwise operations (which defeats typesafety anyway),
// define the datatype as DWORD for C/CPP.  OleAut languages don't do typechecking
// and organize by the enum name.
#ifdef SQLNS_ODL_
	#define SQLNS_ENUM_BEGIN(tdef, hstring)	[helpcontext(H_##tdef), helpstring(hstring)] enum
		// item = value, ...
	#define SQLNS_ENUM_END(tdef)				tdef, *LP##tdef
#else
	#define SQLNS_ENUM_BEGIN(tdef, hstring)	DWORD tdef, *LP##tdef; enum tag##tdef
		// item = value, ...
	#define SQLNS_ENUM_END(tdef)				
#endif


typedef SQLNS_ENUM_BEGIN(SQLNSRootType, "The type of object to set as root")
{
	SQLNSRootType_DefaultRoot		= 0x0000,
	SQLNSRootType_ServerGroup		= 0x0001,
	SQLNSRootType_Server			= 0x0002,
	SQLNSRootType_Database			= 0x0003
} SQLNS_ENUM_END(SQLNSRootType);

typedef SQLNS_ENUM_BEGIN(SQLNSObjectType, "The type of object")
{
	SQLNSOBJECTTYPE_ROOT				= 0x0000,
	SQLNSOBJECTTYPE_EMPTY,
	SQLNSOBJECTTYPE_SERVER_GROUP,
	SQLNSOBJECTTYPE_SERVER,
	SQLNSOBJECTTYPE_DATABASES,
	SQLNSOBJECTTYPE_DATABASE,
    SQLNSOBJECTTYPE_MANAGEMENT,
    SQLNSOBJECTTYPE_SECURITY,
    SQLNSOBJECTTYPE_SERVICES,
	SQLNSOBJECTTYPE_LOGINS,
	SQLNSOBJECTTYPE_LOGIN,
	SQLNSOBJECTTYPE_BACKUPDEVICES,
	SQLNSOBJECTTYPE_BACKUPDEVICE,
	SQLNSOBJECTTYPE_DATABASE_PUBLICATIONS,
	SQLNSOBJECTTYPE_DATABASE_PUBLICATION,
	SQLNSOBJECTTYPE_DATABASE_PUB_SUBSCRIPTION,
	SQLNSOBJECTTYPE_DATABASE_PULL_SUBSCRIPTIONS,
	SQLNSOBJECTTYPE_DATABASE_PULL_SUBSCRIPTION,
	SQLNSOBJECTTYPE_DATABASE_USERS,
	SQLNSOBJECTTYPE_DATABASE_USER,
	SQLNSOBJECTTYPE_DATABASE_ROLES,
	SQLNSOBJECTTYPE_DATABASE_ROLE,
	SQLNSOBJECTTYPE_DATABASE_DIAGRAMS,
	SQLNSOBJECTTYPE_DATABASE_DIAGRAM,
	SQLNSOBJECTTYPE_DATABASE_TABLES,
	SQLNSOBJECTTYPE_DATABASE_TABLE,
	SQLNSOBJECTTYPE_DATABASE_VIEWS,
	SQLNSOBJECTTYPE_DATABASE_VIEW,
	SQLNSOBJECTTYPE_DATABASE_SPS,
	SQLNSOBJECTTYPE_DATABASE_SP,
	SQLNSOBJECTTYPE_DATABASE_EXTENDED_SPS,
	SQLNSOBJECTTYPE_DATABASE_EXTENDED_SP,
	SQLNSOBJECTTYPE_DATABASE_RULES,
	SQLNSOBJECTTYPE_DATABASE_RULE,
	SQLNSOBJECTTYPE_DATABASE_DEFAULTS,
	SQLNSOBJECTTYPE_DATABASE_DEFAULT,
	SQLNSOBJECTTYPE_DATABASE_UDDTS,								
	SQLNSOBJECTTYPE_DATABASE_UDDT,
	SQLNSOBJECTTYPE_JOBSERVER,
	SQLNSOBJECTTYPE_SQLMAIL,
	SQLNSOBJECTTYPE_DTC,
    SQLNSOBJECTTYPE_INDEXSERVER,
    SQLNSOBJECTTYPE_INDEXSERVER_CATALOGS,
    SQLNSOBJECTTYPE_INDEXSERVER_CATALOG,
	SQLNSOBJECTTYPE_ERRORLOGS,
	SQLNSOBJECTTYPE_ERRORLOG,
	SQLNSOBJECTTYPE_ERRORLOGENTRY,
	SQLNSOBJECTTYPE_ALERTS,
	SQLNSOBJECTTYPE_OPERATORS,
	SQLNSOBJECTTYPE_MSX_JOBS,
	SQLNSOBJECTTYPE_LOCAL_JOBS,
	SQLNSOBJECTTYPE_MULTI_JOBS,
	SQLNSOBJECTTYPE_LOCAL_JOB,
	SQLNSOBJECTTYPE_MULTI_JOB,
	SQLNSOBJECTTYPE_REMOTESERVERS,
	SQLNSOBJECTTYPE_LINKEDSERVERS,
	SQLNSOBJECTTYPE_SERVERROLES,
	SQLNSOBJECTTYPE_SERVERROLE,
	SQLNSOBJECTTYPE_ALERT,
	SQLNSOBJECTTYPE_OPERATOR,
	SQLNSOBJECTTYPE_REMOTESERVER,
	SQLNSOBJECTTYPE_LINKEDSERVER,
	SQLNSOBJECTTYPE_LINKEDSERVER_TABLES,
	SQLNSOBJECTTYPE_LINKEDSERVER_TABLE,
	SQLNSOBJECTTYPE_REPLICATION,
	SQLNSOBJECTTYPE_REPLICATION_PUBLISHERS,
	SQLNSOBJECTTYPE_REPLICATION_PUBLISHER,
	SQLNSOBJECTTYPE_REPLICATION_AGENTS,
	SQLNSOBJECTTYPE_REPLICATION_REPORTS,
	SQLNSOBJECTTYPE_REPLICATION_ALERTS,
	SQLNSOBJECTTYPE_REPLICATION_SUBSCRIPTION,
	// do not add between here and SQLNSOBJECTTYPE_REPLICATION_MERGE_AGENTS
	SQLNSOBJECTTYPE_REPLICATION_PUBLICATION,
	SQLNSOBJECTTYPE_REPLICATION_SNAPSHOT_AGENTS,
	SQLNSOBJECTTYPE_REPLICATION_LOGREADER_AGENTS,
	SQLNSOBJECTTYPE_REPLICATION_DISTRIBUTION_AGENTS,
	SQLNSOBJECTTYPE_REPLICATION_MERGE_AGENTS,
	SQLNSOBJECTTYPE_REPLICATION_MISC_AGENTS,
	//
	SQLNSOBJECTTYPE_REPLICATION_SNAPSHOT_AGENT,
	SQLNSOBJECTTYPE_REPLICATION_LOGREADER_AGENT,
	SQLNSOBJECTTYPE_REPLICATION_DISTRIBUTION_AGENT,
	SQLNSOBJECTTYPE_REPLICATION_MERGE_AGENT,
	SQLNSOBJECTTYPE_REPLICATION_MISC_AGENT,
	SQLNSOBJECTTYPE_REPLICATION_REPORT,
	SQLNSOBJECTTYPE_DTSPKGS,
	SQLNSOBJECTTYPE_DTS_LOCALPKGS,
	SQLNSOBJECTTYPE_DTS_REPOSPKGS,
	SQLNSOBJECTTYPE_DTS_METADATA,
	SQLNSOBJECTTYPE_DTSPKG,
	SQLNSOBJECTTYPE_DB_MAINT_PLANS,
	SQLNSOBJECTTYPE_DB_MAINT_PLAN,
	SQLNSOBJECTTYPE_WEBASSISTANTJOBS,
	SQLNSOBJECTTYPE_WEBASSISTANTJOB,
    SQLNSOBJECTTYPE_CURRENTACTIVITY,
    SQLNSOBJECTTYPE_CURRENTACTIVITY_PROCESSINFO,
    SQLNSOBJECTTYPE_CURRENTACTIVITY_PROCESSINFO_INFO,
    SQLNSOBJECTTYPE_CURRENTACTIVITY_LOCKEDPROCESSES,
    SQLNSOBJECTTYPE_CURRENTACTIVITY_SPID,
    SQLNSOBJECTTYPE_CURRENTACTIVITY_SPID_INFO,
    SQLNSOBJECTTYPE_CURRENTACTIVITY_LOCKEDOBJECTS,
    SQLNSOBJECTTYPE_CURRENTACTIVITY_LOCKEDOBJECT,
    SQLNSOBJECTTYPE_CURRENTACTIVITY_LOCKEDOBJECT_INFO

	//update SQLNSOBJECTTYPE_LAST is you add items at end

} SQLNS_ENUM_END(SQLNSObjectType);

#define SQLNSOBJECTTYPE_LAST SQLNSOBJECTTYPE_CURRENTACTIVITY_LOCKEDOBJECT_INFO

typedef SQLNS_ENUM_BEGIN(SQLNSModality, "Suggests the modality of the UI displayed")
{
	SQLNamespace_DontCare   = 0x0000,
	SQLNamespace_PreferModal	= 0x0001,
	SQLNamespace_PreferModeless	= 0x0002
} SQLNS_ENUM_END(SQLNSModality);







typedef SQLNS_ENUM_BEGIN(SQLNSCommandID, "Command IDs available in the SQLNamespace")
{
	SQLNS_CmdID_WIZARD_CREATEDB             =		1,
	SQLNS_CmdID_WIZARD_CREATEINDEX          ,
	SQLNS_CmdID_WIZARD_DTSIMPORT            ,
	SQLNS_CmdID_WIZARD_DTSEXPORT            ,
	SQLNS_CmdID_WIZARD_CREATEJOB            ,
	SQLNS_CmdID_WIZARD_SECURITY             ,
	SQLNS_CmdID_WIZARD_SP                   ,
	SQLNS_CmdID_WIZARD_VIEW                 ,
	SQLNS_CmdID_WIZARD_INDEXTUNING          ,
	SQLNS_CmdID_WIZARD_ALERT                ,
	SQLNS_CmdID_WIZARD_MAINTPLAN            ,
	SQLNS_CmdID_WIZARD_WEBASST              ,
	SQLNS_CmdID_WIZARD_BACKUP				,
	SQLNS_CmdID_WIZARD_CREATETRACE          ,
	SQLNS_CmdID_WIZARDS                     ,
	SQLNS_CmdID_PROPERTIES                  ,
	SQLNS_CmdID_DELETE                      ,
	SQLNS_CmdID_NEW_SERVER                  ,
	SQLNS_CmdID_NEW_JOB                     ,
	SQLNS_CmdID_NEW_ALERT                   ,
	SQLNS_CmdID_NEW_OPERATOR                ,
	SQLNS_CmdID_NEW_REMOTE_SERVER           ,
	SQLNS_CmdID_NEW_DATABASE                ,
	SQLNS_CmdID_NEW_TABLE                   ,
	SQLNS_CmdID_NEW_VIEW                    ,
	SQLNS_CmdID_NEW_STORED_PROCEDURE        ,
	SQLNS_CmdID_NEW_EXTENDED_STORED_PROCEDURE,
	SQLNS_CmdID_NEW_RULE                    ,
	SQLNS_CmdID_NEW_DEFAULT                 ,
	SQLNS_CmdID_NEW_UDDT                    ,
	SQLNS_CmdID_NEW_SERVER_GROUP            ,
	SQLNS_CmdID_NEW_DIAGRAM					,
	SQLNS_CmdID_NEW_DATABASE_ROLE			,
	SQLNS_CmdID_NEW_LOGIN                   ,
	SQLNS_CmdID_NEW_DBUSER                  ,
	SQLNS_CmdID_NEW_BACKUPDEVICE            ,
	SQLNS_CmdID_OPEN                        ,
	SQLNS_CmdID_JOBSERVER_ERRORLOG			,
	SQLNS_CmdID_JOB_START					,
	SQLNS_CmdID_JOB_HISTORY					,
	SQLNS_CmdID_JOB_STOP					,
	SQLNS_CmdID_JOBSERVER_TARGET_SERVERS    ,
	SQLNS_CmdID_EDIT_SERVER                 ,
	SQLNS_CmdID_OBJECT_PERMISSIONS          ,
	SQLNS_CmdID_OBJECT_DEPENDENCIES         ,
	SQLNS_CmdID_TABLE_INDEXES               ,
	SQLNS_CmdID_TABLE_TRIGGERS              ,
	//SQLNS_CmdID_JOB_STEPS					,
	SQLNS_CmdID_SVC_STOP					=		49,
	SQLNS_CmdID_SVC_PAUSE                   ,
	SQLNS_CmdID_SVC_START                   ,
	SQLNS_CmdID_SERVER_SECURITY             ,
	//SQLNS_CmdID_CONNECT					,
	//SQLNS_CmdID_SERVER_CONFIGURATION		,
	SQLNS_CmdID_ENLIST                      =		55,
	SQLNS_CmdID_DEFECT                      ,
	SQLNS_CmdID_EXPORT_JOB                  ,
	//SQLNS_CmdID_MULTI_SERVER_JOB_STATUS   ,
	SQLNS_CmdID_DTS_IMPORT					=		59,
	SQLNS_CmdID_DTS_EXPORT					,
	SQLNS_CmdID_DTS_RUN						,
	SQLNS_CmdID_ENLIST_REG_SERVERS          ,
	SQLNS_CmdID_TOOLS_MAINT_PLAN            ,
	SQLNS_CmdID_REPLICATION_PUBLISH         ,
	SQLNS_CmdID_REPLICATION_CONFIGURE       ,
	SQLNS_CmdID_REPLICATION_SUBSCRIBE       ,
	SQLNS_CmdID_REPLICATION_SCRIPT          ,
	SQLNS_CmdID_REPLICATION_UNINSTALL       ,
	SQLNS_CmdID_NEW_PUBLICATION             ,
	SQLNS_CmdID_PUSH_NEW_SUBSCRIPTION       ,
	SQLNS_CmdID_REPLICATION_RESOLVE_CONFLICTS,
	SQLNS_CmdID_NEW_SUBSCRIPTION            ,
	SQLNS_CmdID_REINIT_SUBSCRIPTION			,
	SQLNS_CmdID_SYNCHRONIZE_NOW			    ,
	SQLNS_CmdID_STOP_SYNCHRONIZING          ,
	SQLNS_CmdID_AGENT_ERROR_DETAILS			,
	SQLNS_CmdID_AGENT_HISTORY				,
	SQLNS_CmdID_SECURITY_LIST				,
	SQLNS_CmdID_GENERATE_SCRIPTS			,
	SQLNS_CmdID_DATABASE_BACKUP				,
	SQLNS_CmdID_DATABASE_RESTORE			,
	SQLNS_CmdID_DATABASE_SHRINKDB			,
	SQLNS_CmdID_PUBLISHING_PROPERTIES		,
	SQLNS_CmdID_NEW_LINKED_SERVER			,
	//more to come
} SQLNS_ENUM_END(SQLNSCommandID);

typedef SQLNS_ENUM_BEGIN(SQLNSErrors, "Error ranges available in the SQLNamespace")
{
	SQLNS_E_NotImplemented						= 1001,
	SQLNS_E_OrdOutOfRange						= 1002,
	SQLNS_E_NameNotFound						= 1003,
	SQLNS_E_NameDup								= 1004,
	SQLNS_E_Already_Initialized					= 1005,
	SQLNS_E_InvalidRootType						= 1006,
	SQLNS_E_RequireAppName						= 1007,
	SQLNS_E_InvalidObjectHandle					= 1008,
	SQLNS_E_NoDMOObject							= 1009,
	SQLNS_E_InvalidCommandName					= 1010,
	SQLNS_E_InvalidCommandID					= 1011,
	SQLNS_E_InvalidRootInfo						= 1012,
	SQLNS_E_InvalidServerName					= 1013,
	SQLNS_E_InvalidLoginInfo					= 1014,
	SQLNS_E_InvalidDBName						= 1015,
	SQLNS_E_InvalidConnectString				= 1016,
	SQLNS_E_SrvGrpNotFound						= 1017,
	SQLNS_E_ServerNotFound						= 1018,
	SQLNS_E_DatabaseNotFound					= 1019,
	SQLNS_E_InvalidServerVersion				= 1020,
	SQLNS_E_ExternalError						= 1100			//General, external error..we don't have a description for this error
	//more to come
} SQLNS_ENUM_END(SQLNSErrors);

#ifndef SQLNS_ODL_

#define SIZE_SQLOBJ_NAMELEN 128
typedef struct
  {
  DWORD						dwStructSize; // in Bytes
  DWORD						dwCreatePubAllowTypes;
  DWORD						dwPubPropPages;
  DWORD						dwConfigurePropPages;
  TCHAR						szDatabaseName[SIZE_SQLOBJ_NAMELEN + 2]; // database name should not be more than 128 TCHARs.
  } REPLICATION_CUSTOMIZE_INFO, *PREPLICATION_CUSTOMIZE_INFO;

#endif

// These flag groups are used to control the Create Publication wizard, 
// the publication property sheet, and Configure Publishing and 
// Distribution property sheet
//
// the caller may not want to allow all types of publications to be created
const long fAllowSnapshotPubs				= 0x01;
const long fAllowTransPubs					= 0x02;
const long fAllowMergePubs					= 0x04;
const long grfAllowAllPubTypes				= 0x07;

// You can select which property pages to display in the publication property
// sheet.  Note that some pages are dependent on the General page being displayed. 
// General page is always displayed.
const long fPubPropArticles					= 0x02;
const long fPubPropFilters					= 0x04;	// controls both Columns & Rows
const long fPubPropSubs						= 0x08;
const long fPubPropSubOptions				= 0x10;
const long fPubPropStatus					= 0x20;
const long fPubPropScript					= 0x40;
const long fPubPropACL						= 0x80;
const long grfPubPropAllPages				= 0xFF;
	
// You can select which property pages to display in the Configure Publishing
// and Distribution property sheet.
const long fConfigurePropDist				= 0x01;
const long fConfigurePropDBs				= 0x02;
const long fConfigurePropSubscribers		= 0x04;
const long fConfigurePropPublishers			= 0x08;
const long fConfigurePropAccessList			= 0x10;		// UNDONE: This page has been removed
const long grfConfigurePropAllPages			= 0x1F;

#ifdef SQLNS_ODL_
typedef long HSQLNSITEM, *PHSQLNSITEM;	//handle to a namespace item
#else
typedef DWORD HSQLNSITEM, *PHSQLNSITEM;	//handle to a namespace item
#endif





#endif //DO_ODL_TYPDEFS_

#define SQLNS_DEF_H_
#endif //SQLNS_DEF_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SqlResID.h ===
/////////////////////////////////////////////////////////////////////////////////////////
// Header file for Replication Custom Resolver Component Object Interface IIDs.
// Copyright 1994-1999 Microsoft Corporation.
/////////////////////////////////////////////////////////////////////////////////////////
 #ifndef SQLRESID_H_
#define SQLRESID_H_

// {FC2F91C1-1CA2-11d0-A11B-00AA003E4672}
DEFINE_GUID(IID_ICustomResolver, 0xfc2f91c1, 0x1ca2, 0x11d0, 0xa1, 0x1b, 0x0, 0xaa, 0x0, 0x3e, 0x46, 0x72);

// {FC2F91C2-1CA2-11d0-A11B-00AA003E4672}
DEFINE_GUID(IID_IReplRowChange, 0xfc2f91c2, 0x1ca2, 0x11d0, 0xa1, 0x1b, 0x0, 0xaa, 0x0, 0x3e, 0x46, 0x72);

// {37E95A52-1CA3-11d0-A11B-00AA003E4672}
DEFINE_GUID(IID_IConnectionInfo, 0x37e95a52, 0x1ca3, 0x11d0, 0xa1, 0x1b, 0x0, 0xaa, 0x0, 0x3e, 0x46, 0x72);

#endif /* SQLRESID_H_ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\sqlfront.h ===
#ifndef _INC_SQLFRONT
#define _INC_SQLFRONT

#ifdef DBNTWIN32
	#ifndef _WINDOWS_
		#pragma message (__FILE__ " : db-library error: windows.h must be included before sqlfront.h.")
	#endif
#endif

#ifdef __cplusplus
	extern "C" {
#endif

/*****************************************************************************
*                                                                            *
*     SQLFRONT.H - DB-Library header file for the Microsoft SQL Server.      *
*                                                                            *
*     Copyright (c) 1989 - 1999 by Microsoft Corp.  All rights reserved.     *
*                                                                            *
* All constant and macro definitions for DB-Library applications programming *
* are contained in this file.  This file must be included before SQLDB.H and *
* one of the following #defines must be made, depending on the operating     *
* system: DBMSDOS, DBMSWIN or DBNTWIN32.                                     *
*                                                                            *
*****************************************************************************/


/*****************************************************************************
* Datatype definitions                                                       *
*****************************************************************************/

// Note this has changed because Windows 3.1 defines API as 'pascal far'

#if !defined(M_I86SM) && !defined(DBNTWIN32)
#define SQLAPI cdecl far
#else
#define SQLAPI _cdecl
#endif

#ifndef  API
#define  API  SQLAPI
#endif

#ifndef DOUBLE
typedef double DOUBLE;
#endif


/*****************************************************************************
* DBPROCESS, LOGINREC and DBCURSOR                                           *
*****************************************************************************/

#define DBPROCESS void   // dbprocess structure type
#define LOGINREC  void   // login record type
#define DBCURSOR  void   // cursor record type
#define DBHANDLE  void   // generic handle

// DOS Specific
#ifdef DBMSDOS
typedef DBPROCESS * PDBPROCESS;
typedef LOGINREC  * PLOGINREC;
typedef DBCURSOR  * PDBCURSOR;
typedef DBHANDLE  * PDBHANDLE;
#define PTR *
#endif


// WIN 3.x Specific.  The handle pointers are near for Windows 3.x
#ifdef DBMSWIN
typedef DBPROCESS near * PDBPROCESS;
typedef LOGINREC  near * PLOGINREC;
typedef DBCURSOR  near * PDBCURSOR;
typedef DBHANDLE  near * PDBHANDLE;
#define PTR far *
#endif


// Windows NT Specific
#ifdef DBNTWIN32
typedef DBPROCESS * PDBPROCESS;
typedef LOGINREC  * PLOGINREC;
typedef DBCURSOR  * PDBCURSOR;
typedef DBHANDLE  * PDBHANDLE;
#define PTR *
typedef int (SQLAPI *SQLFARPROC)();
#else
typedef long (far pascal *LGFARPROC)();  // Windows loadable driver fp
#endif


/*****************************************************************************
* Win32 compatibility datatype definitions                                   *
* Note: The following datatypes are provided for Win32 compatibility.        *
* Since some of the datatypes are already defined in unrelated include files *
* there may definition duplication.  Every attempt has been made to check    *
* for such problems.                                                         *
*****************************************************************************/

#ifndef DBNTWIN32

#ifndef SHORT
typedef short SHORT;
#endif

#ifndef INT
typedef int INT;
#endif

#ifndef UINT
typedef unsigned int UINT;
#endif

#ifndef USHORT
typedef unsigned short USHORT;
#endif

#ifndef ULONG
typedef unsigned long ULONG;
#endif

#ifndef CHAR
typedef char CHAR;
#endif

#ifndef LPINT
typedef INT PTR LPINT;
#endif

typedef unsigned char BYTE;

typedef       CHAR PTR LPSTR;
typedef       BYTE PTR LPBYTE;
typedef       void PTR LPVOID;	
typedef const CHAR PTR LPCSTR;

typedef int BOOL;

#endif


/*****************************************************************************
* DB-Library datatype definitions                                            *
*****************************************************************************/

#define DBMAXCHAR 256 // Max length of DBVARBINARY and DBVARCHAR, etc.

#ifndef DBTYPEDEFS    // srv.h (Open Server include) not already included

#define DBTYPEDEFS

#define RETCODE INT
#define STATUS INT

// DB-Library datatypes
typedef char            DBCHAR;
typedef unsigned char   DBBINARY;
typedef unsigned char   DBTINYINT;
typedef short           DBSMALLINT;
typedef unsigned short  DBUSMALLINT;
typedef long            DBINT;
typedef double          DBFLT8;
typedef unsigned char   DBBIT;
typedef unsigned char   DBBOOL;
typedef float           DBFLT4;
typedef long            DBMONEY4;

typedef DBFLT4 DBREAL;
typedef UINT   DBUBOOL;

typedef struct dbdatetime4
{
	USHORT numdays;        // No of days since Jan-1-1900
	USHORT nummins;        // No. of minutes since midnight
} DBDATETIM4;


typedef struct dbvarychar
{
	DBSMALLINT  len;
	DBCHAR      str[DBMAXCHAR];
} DBVARYCHAR;

typedef struct dbvarybin
{
	DBSMALLINT  len;
	BYTE        array[DBMAXCHAR];
} DBVARYBIN;

typedef struct dbmoney
{
	DBINT mnyhigh;
	ULONG mnylow;
} DBMONEY;

typedef struct dbdatetime
{
	DBINT dtdays;
	ULONG dttime;
} DBDATETIME;

// DBDATEREC structure used by dbdatecrack
typedef struct dbdaterec
{
	INT     year;         // 1753 - 9999
	INT     quarter;      // 1 - 4
	INT     month;        // 1 - 12
	INT     dayofyear;    // 1 - 366
	INT     day;          // 1 - 31
	INT     week;         // 1 - 54 (for leap years)
	INT     weekday;      // 1 - 7  (Mon - Sun)
	INT     hour;         // 0 - 23
	INT     minute;       // 0 - 59
	INT     second;       // 0 - 59
	INT     millisecond;  // 0 - 999
} DBDATEREC;

#define MAXNUMERICLEN 16
#define MAXNUMERICDIG 38

#define DEFAULTPRECISION 18
#define DEFAULTSCALE     0

typedef struct dbnumeric
{
	BYTE precision;
	BYTE scale;
	BYTE sign; // 1 = Positive, 0 = Negative
	BYTE val[MAXNUMERICLEN];
} DBNUMERIC;

typedef DBNUMERIC DBDECIMAL;


// Pack the following structures on a word boundary
#ifdef __BORLANDC__
#pragma option -a+
#else
	#ifndef DBLIB_SKIP_PRAGMA_PACK   // Define this if your compiler does not support #pragma pack()
	#pragma pack(2)
	#endif
#endif

#define MAXCOLNAMELEN 30
#define MAXTABLENAME  30

typedef struct
{
	DBINT SizeOfStruct;
	CHAR  Name[MAXCOLNAMELEN+1];
	CHAR  ActualName[MAXCOLNAMELEN+1];
	CHAR  TableName[MAXTABLENAME+1];
	SHORT Type;
	DBINT UserType;
	DBINT MaxLength;
	BYTE  Precision;
	BYTE  Scale;
	BOOL  VarLength;     // TRUE, FALSE
	BYTE  Null;          // TRUE, FALSE or DBUNKNOWN
	BYTE  CaseSensitive; // TRUE, FALSE or DBUNKNOWN
	BYTE  Updatable;     // TRUE, FALSE or DBUNKNOWN
	BOOL  Identity;      // TRUE, FALSE
} DBCOL, PTR LPDBCOL;


#define MAXSERVERNAME 30
#define MAXNETLIBNAME 255
#define MAXNETLIBCONNSTR 255

typedef struct
{
	DBINT  SizeOfStruct;
	BYTE   ServerType;
	USHORT ServerMajor;
	USHORT ServerMinor;
	USHORT ServerRevision;
	CHAR   ServerName[MAXSERVERNAME+1];
	CHAR   NetLibName[MAXNETLIBNAME+1];
	CHAR   NetLibConnStr[MAXNETLIBCONNSTR+1];
} DBPROCINFO, PTR LPDBPROCINFO;

typedef struct
{
	DBINT SizeOfStruct;   // Use sizeof(DBCURSORINFO)
	ULONG TotCols;        // Total Columns in cursor
	ULONG TotRows;        // Total Rows in cursor
	ULONG CurRow;         // Current actual row in server
	ULONG TotRowsFetched; // Total rows actually fetched
	ULONG Type;           // See CU_...
	ULONG Status;         // See CU_...
} DBCURSORINFO, PTR LPDBCURSORINFO;

#define INVALID_UROWNUM ((ULONG)(-1))

// Reset default alignment
#ifdef __BORLANDC__
#pragma option -a-
#else
	#ifndef DBLIB_SKIP_PRAGMA_PACK   // Define this if your compiler does not support #pragma pack()
	#pragma pack()
	#endif
#endif


#endif // End DBTYPEDEFS


/*****************************************************************************
* Pointer Datatypes                                                          *
*****************************************************************************/

typedef const LPINT          LPCINT;


#ifndef _LPCBYTE_DEFINED
#define _LPCBYTE_DEFINED
typedef const LPBYTE         LPCBYTE ;
#endif

typedef       USHORT PTR     LPUSHORT;
typedef const LPUSHORT       LPCUSHORT;
typedef       DBINT PTR      LPDBINT;
typedef const LPDBINT        LPCDBINT;
typedef       DBBINARY PTR   LPDBBINARY;
typedef const LPDBBINARY     LPCDBBINARY;
typedef       DBDATEREC PTR  LPDBDATEREC;
typedef const LPDBDATEREC    LPCDBDATEREC;
typedef       DBDATETIME PTR LPDBDATETIME;
typedef const LPDBDATETIME   LPCDBDATETIME;


/*****************************************************************************
* General #defines                                                           *
*****************************************************************************/

#define TIMEOUT_IGNORE (ULONG)-1
#define TIMEOUT_INFINITE (ULONG)0
#define TIMEOUT_MAXIMUM (ULONG)1200 // 20 minutes maximum timeout value

// Used for ServerType in dbgetprocinfo
#define SERVTYPE_UNKNOWN   0
#define SERVTYPE_MICROSOFT 1

// Used by dbcolinfo
enum CI_TYPES { CI_REGULAR=1, CI_ALTERNATE=2, CI_CURSOR=3 };

// Bulk Copy Definitions (bcp)
#define DB_IN	1         // Transfer from client to server
#define DB_OUT	2         // Transfer from server to client

#define BCPMAXERRS   1    // bcp_control parameter
#define BCPFIRST     2    // bcp_control parameter
#define BCPLAST      3    // bcp_control parameter
#define BCPBATCH     4    // bcp_control parameter
#define BCPKEEPNULLS 5    // bcp_control parameter
#define BCPABORT     6    // bcp_control parameter

#ifndef TRUE
#define TRUE 1
#endif

#ifndef FALSE
#define FALSE 0
#endif

#define TINYBIND         1
#define SMALLBIND        2
#define INTBIND          3
#define CHARBIND         4
#define BINARYBIND       5
#define BITBIND          6
#define DATETIMEBIND     7
#define MONEYBIND        8
#define FLT8BIND         9
#define STRINGBIND      10
#define NTBSTRINGBIND   11
#define VARYCHARBIND    12
#define VARYBINBIND     13
#define FLT4BIND        14
#define SMALLMONEYBIND  15
#define SMALLDATETIBIND 16
#define DECIMALBIND     17
#define NUMERICBIND     18
#define SRCDECIMALBIND  19
#define SRCNUMERICBIND  20
#define MAXBIND         SRCNUMERICBIND

#define DBSAVE          1
#define DBNOSAVE        0

#define DBNOERR         -1
#define DBFINDONE       0x04  // Definately done
#define DBMORE          0x10  // Maybe more commands waiting
#define DBMORE_ROWS     0x20  // This command returned rows

#define MAXNAME         31


#define DBTXTSLEN       8     // Timestamp length

#define DBTXPLEN        16    // Text pointer length

// Error code returns
#define INT_EXIT        0
#define INT_CONTINUE    1
#define INT_CANCEL      2


// dboptions
#define DBBUFFER        0
#define DBOFFSET        1
#define DBROWCOUNT      2
#define DBSTAT          3
#define DBTEXTLIMIT     4
#define DBTEXTSIZE      5
#define DBARITHABORT    6
#define DBARITHIGNORE   7
#define DBNOAUTOFREE    8
#define DBNOCOUNT       9
#define DBNOEXEC        10
#define DBPARSEONLY     11
#define DBSHOWPLAN      12
#define DBSTORPROCID		13

#if defined(DBMSWIN) || defined(DBNTWIN32)
#define DBANSItoOEM		14
#endif

#ifdef DBNTWIN32
#define DBOEMtoANSI		15
#endif

#define DBCLIENTCURSORS 16
#define DBSETTIME 17
#define DBQUOTEDIDENT 18


// Data Type Tokens
#define SQLVOID        0x1f
#define SQLTEXT        0x23
#define SQLVARBINARY   0x25
#define SQLINTN        0x26
#define SQLVARCHAR     0x27
#define SQLBINARY      0x2d
#define SQLIMAGE       0x22
#define SQLCHAR        0x2f
#define SQLINT1        0x30
#define SQLBIT         0x32
#define SQLINT2        0x34
#define SQLINT4        0x38
#define SQLMONEY       0x3c
#define SQLDATETIME    0x3d
#define SQLFLT8        0x3e
#define SQLFLTN        0x6d
#define SQLMONEYN      0x6e
#define SQLDATETIMN    0x6f
#define SQLFLT4        0x3b
#define SQLMONEY4      0x7a
#define SQLDATETIM4    0x3a
#define SQLDECIMAL     0x6a
#define SQLNUMERIC     0x6c

// Data stream tokens
#define SQLCOLFMT      0xa1
#define OLD_SQLCOLFMT  0x2a
#define SQLPROCID      0x7c
#define SQLCOLNAME     0xa0
#define SQLTABNAME     0xa4
#define SQLCOLINFO     0xa5
#define SQLALTNAME     0xa7
#define SQLALTFMT      0xa8
#define SQLERROR       0xaa
#define SQLINFO        0xab
#define SQLRETURNVALUE 0xac
#define SQLRETURNSTATUS 0x79
#define SQLRETURN      0xdb
#define SQLCONTROL     0xae
#define SQLALTCONTROL  0xaf
#define SQLROW         0xd1
#define SQLALTROW      0xd3
#define SQLDONE        0xfd
#define SQLDONEPROC    0xfe
#define SQLDONEINPROC  0xff
#define SQLOFFSET      0x78
#define SQLORDER       0xa9
#define SQLLOGINACK    0xad // NOTICE: change to real value

// Ag op tokens
#define SQLAOPCNT		0x4b
#define SQLAOPSUM    0x4d
#define SQLAOPAVG    0x4f
#define SQLAOPMIN    0x51
#define SQLAOPMAX    0x52
#define SQLAOPANY    0x53
#define SQLAOPNOOP   0x56

// Error numbers (dberrs) DB-Library error codes
#define SQLEMEM         10000
#define SQLENULL        10001
#define SQLENLOG        10002
#define SQLEPWD         10003
#define SQLECONN        10004
#define SQLEDDNE        10005
#define SQLENULLO       10006
#define SQLESMSG        10007
#define SQLEBTOK        10008
#define SQLENSPE        10009
#define SQLEREAD        10010
#define SQLECNOR        10011
#define SQLETSIT        10012
#define SQLEPARM        10013
#define SQLEAUTN        10014
#define SQLECOFL        10015
#define SQLERDCN        10016
#define SQLEICN         10017
#define SQLECLOS        10018
#define SQLENTXT        10019
#define SQLEDNTI        10020
#define SQLETMTD        10021
#define SQLEASEC        10022
#define SQLENTLL        10023
#define SQLETIME        10024
#define SQLEWRIT        10025
#define SQLEMODE        10026
#define SQLEOOB         10027
#define SQLEITIM        10028
#define SQLEDBPS        10029
#define SQLEIOPT        10030
#define SQLEASNL        10031
#define SQLEASUL        10032
#define SQLENPRM        10033
#define SQLEDBOP        10034
#define SQLENSIP        10035
#define SQLECNULL       10036
#define SQLESEOF        10037
#define SQLERPND        10038
#define SQLECSYN        10039
#define SQLENONET       10040
#define SQLEBTYP        10041
#define SQLEABNC        10042
#define SQLEABMT        10043
#define SQLEABNP        10044
#define SQLEBNCR        10045
#define SQLEAAMT        10046
#define SQLENXID        10047
#define SQLEIFNB        10048
#define SQLEKBCO        10049
#define SQLEBBCI        10050
#define SQLEKBCI        10051
#define SQLEBCWE        10052
#define SQLEBCNN        10053
#define SQLEBCOR        10054
#define SQLEBCPI        10055
#define SQLEBCPN        10056
#define SQLEBCPB        10057
#define SQLEVDPT        10058
#define SQLEBIVI        10059
#define SQLEBCBC        10060
#define SQLEBCFO        10061
#define SQLEBCVH        10062
#define SQLEBCUO        10063
#define SQLEBUOE        10064
#define SQLEBWEF        10065
#define SQLEBTMT        10066
#define SQLEBEOF        10067
#define SQLEBCSI        10068
#define SQLEPNUL        10069
#define SQLEBSKERR      10070
#define SQLEBDIO        10071
#define SQLEBCNT        10072
#define SQLEMDBP        10073
#define SQLINIT         10074
#define SQLCRSINV       10075
#define SQLCRSCMD       10076
#define SQLCRSNOIND     10077
#define SQLCRSDIS       10078
#define SQLCRSAGR       10079
#define SQLCRSORD       10080
#define SQLCRSMEM       10081
#define SQLCRSBSKEY     10082
#define SQLCRSNORES     10083
#define SQLCRSVIEW      10084
#define SQLCRSBUFR      10085
#define SQLCRSFROWN     10086
#define SQLCRSBROL      10087
#define SQLCRSFRAND     10088
#define SQLCRSFLAST     10089
#define SQLCRSRO        10090
#define SQLCRSTAB       10091
#define SQLCRSUPDTAB    10092
#define SQLCRSUPDNB     10093
#define SQLCRSVIIND     10094
#define SQLCRSNOUPD     10095
#define SQLCRSOS2       10096
#define SQLEBCSA        10097
#define SQLEBCRO        10098
#define SQLEBCNE        10099
#define SQLEBCSK        10100
#define SQLEUVBF        10101
#define SQLEBIHC        10102
#define SQLEBWFF        10103
#define SQLNUMVAL       10104
#define SQLEOLDVR       10105
#define SQLEBCPS	10106
#define SQLEDTC 	10107
#define SQLENOTIMPL	10108
#define SQLENONFLOAT	10109
#define SQLECONNFB   10110


// The severity levels are defined here
#define EXINFO          1  // Informational, non-error
#define EXUSER          2  // User error
#define EXNONFATAL      3  // Non-fatal error
#define EXCONVERSION    4  // Error in DB-LIBRARY data conversion
#define EXSERVER        5  // The Server has returned an error flag
#define EXTIME          6  // We have exceeded our timeout period while
                           // waiting for a response from the Server - the
                           // DBPROCESS is still alive
#define EXPROGRAM       7  // Coding error in user program
#define EXRESOURCE      8  // Running out of resources - the DBPROCESS may be dead
#define EXCOMM          9  // Failure in communication with Server - the DBPROCESS is dead
#define EXFATAL         10 // Fatal error - the DBPROCESS is dead
#define EXCONSISTENCY   11 // Internal software error  - notify MS Technical Supprt

// Offset identifiers
#define OFF_SELECT      0x16d
#define OFF_FROM        0x14f
#define OFF_ORDER       0x165
#define OFF_COMPUTE     0x139
#define OFF_TABLE       0x173
#define OFF_PROCEDURE   0x16a
#define OFF_STATEMENT   0x1cb
#define OFF_PARAM       0x1c4
#define OFF_EXEC        0x12c

// Print lengths for certain fixed length data types
#define PRINT4     11
#define PRINT2     6
#define PRINT1     3
#define PRFLT8     20
#define PRMONEY    26
#define PRBIT      3
#define PRDATETIME 27
#define PRDECIMAL (MAXNUMERICDIG + 2)
#define PRNUMERIC (MAXNUMERICDIG + 2)

#define SUCCEED  1
#define FAIL     0
#define SUCCEED_ABORT 2

#define DBUNKNOWN 2

#define MORE_ROWS    -1
#define NO_MORE_ROWS -2
#define REG_ROW      MORE_ROWS
#define BUF_FULL     -3

// Status code for dbresults(). Possible return values are
// SUCCEED, FAIL, and NO_MORE_RESULTS.
#define NO_MORE_RESULTS 2
#define NO_MORE_RPC_RESULTS 3

// Macros for dbsetlname()
#define DBSETHOST 1
#define DBSETUSER 2
#define DBSETPWD  3
#define DBSETAPP  4
#define DBSETID   5
#define DBSETLANG 6
#define DBSETSECURE 7
#define DBVER42    8
#define DBVER60    9
#define DBSETLOGINTIME 10
#define DBSETFALLBACK 12

// Standard exit and error values
#define STDEXIT  0
#define ERREXIT  -1

// dbrpcinit flags
#define DBRPCRECOMPILE  0x0001
#define DBRPCRESET      0x0004
#define DBRPCCURSOR     0x0008

// dbrpcparam flags
#define DBRPCRETURN     0x1
#define DBRPCDEFAULT    0x2


// Cursor related constants

// Following flags are used in the concuropt parameter in the dbcursoropen function
#define CUR_READONLY 1 // Read only cursor, no data modifications
#define CUR_LOCKCC   2 // Intent to update, all fetched data locked when
                       // dbcursorfetch is called inside a transaction block
#define CUR_OPTCC    3 // Optimistic concurrency control, data modifications
                       // succeed only if the row hasn't been updated since
                       // the last fetch.
#define CUR_OPTCCVAL 4 // Optimistic concurrency control based on selected column values

// Following flags are used in the scrollopt parameter in dbcursoropen
#define CUR_FORWARD 0       // Forward only scrolling
#define CUR_KEYSET  -1      // Keyset driven scrolling
#define CUR_DYNAMIC 1       // Fully dynamic
#define CUR_INSENSITIVE -2  // Server-side cursors only

// Following flags define the fetchtype in the dbcursorfetch function
#define FETCH_FIRST    1  // Fetch first n rows
#define FETCH_NEXT     2  // Fetch next n rows
#define FETCH_PREV     3  // Fetch previous n rows
#define FETCH_RANDOM   4  // Fetch n rows beginning with given row #
#define FETCH_RELATIVE 5  // Fetch relative to previous fetch row #
#define FETCH_LAST     6  // Fetch the last n rows

// Following flags define the per row status as filled by dbcursorfetch and/or dbcursorfetchex
#define FTC_EMPTY         0x00  // No row available
#define FTC_SUCCEED       0x01  // Fetch succeeded, (failed if not set)
#define FTC_MISSING       0x02  // The row is missing
#define FTC_ENDOFKEYSET   0x04  // End of the keyset reached
#define FTC_ENDOFRESULTS  0x08  // End of results set reached

// Following flags define the operator types for the dbcursor function
#define CRS_UPDATE   1  // Update operation
#define CRS_DELETE   2  // Delete operation
#define CRS_INSERT   3  // Insert operation
#define CRS_REFRESH  4  // Refetch given row
#define CRS_LOCKCC   5  // Lock given row

// Following value can be passed to the dbcursorbind function for NOBIND type
#define NOBIND -2       // Return length and pointer to data

// Following are values used by DBCURSORINFO's Type parameter
#define CU_CLIENT        0x00000001
#define CU_SERVER        0x00000002
#define CU_KEYSET        0x00000004
#define CU_MIXED         0x00000008
#define CU_DYNAMIC       0x00000010
#define CU_FORWARD       0x00000020
#define CU_INSENSITIVE   0x00000040
#define CU_READONLY      0x00000080
#define CU_LOCKCC        0x00000100
#define CU_OPTCC         0x00000200
#define CU_OPTCCVAL      0x00000400

// Following are values used by DBCURSORINFO's Status parameter
#define CU_FILLING       0x00000001
#define CU_FILLED        0x00000002


// Following are values used by dbupdatetext's type parameter
#define UT_TEXTPTR      0x0001
#define UT_TEXT         0x0002
#define UT_MORETEXT     0x0004
#define UT_DELETEONLY   0x0008
#define UT_LOG          0x0010


// The following values are passed to dbserverenum for searching criteria.
#define NET_SEARCH  0x0001
#define LOC_SEARCH  0x0002

// These constants are the possible return values from dbserverenum.
#define ENUM_SUCCESS         0x0000
#define MORE_DATA            0x0001
#define NET_NOT_AVAIL        0x0002
#define OUT_OF_MEMORY        0x0004
#define NOT_SUPPORTED        0x0008
#define ENUM_INVALID_PARAM   0x0010


// Netlib Error problem codes.  ConnectionError() should return one of
// these as the dblib-mapped problem code, so the corresponding string
// is sent to the dblib app's error handler as dberrstr.  Return NE_E_NOMAP
// for a generic DB-Library error string (as in prior versions of dblib).

#define NE_E_NOMAP              0   // No string; uses dblib default.
#define NE_E_NOMEMORY           1   // Insufficient memory.
#define NE_E_NOACCESS           2   // Access denied.
#define NE_E_CONNBUSY           3   // Connection is busy.
#define NE_E_CONNBROKEN         4   // Connection broken.
#define NE_E_TOOMANYCONN        5   // Connection limit exceeded.
#define NE_E_SERVERNOTFOUND     6   // Specified SQL server not found.
#define NE_E_NETNOTSTARTED      7   // The network has not been started.
#define NE_E_NORESOURCE         8   // Insufficient network resources.
#define NE_E_NETBUSY            9   // Network is busy.
#define NE_E_NONETACCESS        10  // Network access denied.
#define NE_E_GENERAL            11  // General network error.  Check your documentation.
#define NE_E_CONNMODE           12  // Incorrect connection mode.
#define NE_E_NAMENOTFOUND       13  // Name not found in directory service.
#define NE_E_INVALIDCONN        14  // Invalid connection.
#define NE_E_NETDATAERR         15  // Error reading or writing network data.
#define NE_E_TOOMANYFILES       16  // Too many open file handles.
#define NE_E_CANTCONNECT		  17  // SQL Server does not exist or access denied.

#define NE_MAX_NETERROR         17

#ifdef __cplusplus
}
#endif

#endif // _INC_SQLFRONT
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\Sql_1.h ===
/*++

Copyright (C) 1999 Microsoft Corporation

Module Name:

    SQL_1.H

Abstract:

    Level 1 Syntax SQL Parser

History:

--*/

#ifndef _SQL_1_H_
#define _SQL_1_H_

struct SQL_LEVEL_1_TOKEN
{
    enum { OP_EXPRESSION = 1, TOKEN_AND, TOKEN_OR, TOKEN_NOT };
    enum { IFUNC_NONE = 0, IFUNC_UPPER = 1, IFUNC_LOWER = 2 };

    int nTokenType; //  OP_EXPRESSION,TOKEN_AND, TOKEN_OR, TOKEN_NOT
    

    // If the field is a OP_EXPRESSION, then the following are used.
    enum { OP_EQUAL = 1, OP_NOT_EQUAL, OP_EQUALorGREATERTHAN,
		       OP_EQUALorLESSTHAN, OP_LESSTHAN, OP_GREATERTHAN, OP_LIKE };
    
    BSTR    pPropertyName;		// Name of the property on which the operator is applied
    int     nOperator;			// Operator that is applied on property
    BOOL	bConstIsStrNumeric;	// True if the vConstValue is a BSTR and is a UINT32 or any 64bit number
	VARIANT vConstValue;		// Value applied by operator
    BSTR    pPropName2;         // Property compared to.

    DWORD   dwPropertyFunction; // 0=no instrinsic function applied
    DWORD   dwConstFunction;    // "
    
    SQL_LEVEL_1_TOKEN();
    SQL_LEVEL_1_TOKEN(SQL_LEVEL_1_TOKEN&);
   ~SQL_LEVEL_1_TOKEN(); 
    SQL_LEVEL_1_TOKEN& operator=(SQL_LEVEL_1_TOKEN &Src);
    
    void Dump(FILE *);
};


// Contains RPN version of expression.
// ===================================

struct SQL_LEVEL_1_RPN_EXPRESSION
{
    int nNumTokens;
    int nCurSize;
    SQL_LEVEL_1_TOKEN *pArrayOfTokens;
    BSTR bsClassName;

	int nNumberOfProperties;          // Zero means all properties selected
    int nCurPropSize;
	BSTR *pbsRequestedPropertyNames;  // Array of property names which values are to be returned if
    
    SQL_LEVEL_1_RPN_EXPRESSION();
   ~SQL_LEVEL_1_RPN_EXPRESSION();
   
   //Note: this method deletes the token it is passed as an argument
    void AddToken(SQL_LEVEL_1_TOKEN *pTok);
    void AddToken(SQL_LEVEL_1_TOKEN &pTok);
    void AddProperty(LPWSTR pProp);
    void Dump(const char *pszTextFile);
};


class SQL1_Parser
{
    CGenLexer *m_pLexer;
    int        m_nLine;
    wchar_t*   m_pTokenText;
    int        m_nCurrentToken;
    SQL_LEVEL_1_RPN_EXPRESSION* m_pExpression;

	//Cleanup used by d'tor and SetSource
	void Cleanup();

	//Init used by c'tor and SetSource
	void Init(CGenLexSource *pSrc);

    // Semantic transfer variables.
    // ============================
    VARIANT    m_vTypedConst;
    int        m_nRelOp;
    DWORD      m_dwConstFunction;
    DWORD      m_dwPropFunction;
    LPWSTR     m_pIdent;
    LPWSTR     m_pPropComp;
	BOOL       m_bConstIsStrNumeric;
        
    // Parsing functions.
    // ==================
    BOOL Next();
    
    int parse();

    int prop_list();
    int class_name();
    int opt_where();
    int expr();
    int property_name();
    int prop_list_2();
    int term();
    int expr2();
    int simple_expr();
    int term2();
    int leading_ident_expr();
    int finalize();
    int rel_operator();
    int equiv_operator();
    int comp_operator();
    int is_operator();
    int trailing_prop_expr();
    int trailing_prop_expr2();
    int trailing_or_null();
    int trailing_const_expr();
    int unknown_func_expr();
    int typed_constant();

public:
    enum { 
        SUCCESS,
        SYNTAX_ERROR,
        LEXICAL_ERROR,
        FAILED,
        BUFFER_TOO_SMALL
        };

    SQL1_Parser(CGenLexSource *pSrc);
   ~SQL1_Parser();

    int GetQueryClass(LPWSTR pBuf, int nBufSize);
       
    int Parse(SQL_LEVEL_1_RPN_EXPRESSION **pOutput);
        // use operator delete on pOutput
            
    int CurrentLine() { return m_nLine; }
    LPWSTR CurrentToken() { return m_pTokenText; }
	void SetSource(CGenLexSource *pSrc);
};

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SqlRes.h ===
////////////////////////////////////////////////////////////////////////////////////////
// Header file for Replication Custom Resolver C/C++ Client Component Object interfaces.
// Copyright 1994-1999 Microsoft Corporation.
/////////////////////////////////////////////////////////////////////////////////////////

#ifndef __SQLRES_H__
#define __SQLRES_H__

typedef void FAR * HENV;

typedef enum {
    REPOLEDataSource_Native 	= 0x0000,	// Native SQL Server
    REPOLEDataSource_ODBC 		= 0x0001,	// ODBC DataSource
    REPOLEDataSource_Jet 		= 0x0002,	// Jet DataSource
	REPOLEDataSource_OLEDB		= 0x0003
} REPOLE_DATASOURCE_TYPE;

typedef enum {
	REPOLESecurity_Min 			= 0,				
	REPOLESecurity_Normal 		= 0,
	REPOLESecurity_Integrated 	= 1,
	REPOLESecurity_Mixed 		= 2,
	REPOLESecurity_Max 			= 2,
	REPOLESecurity_Invalid		= -1
} REPOLE_SECURITY_TYPE;

// NOTE:  All publisher action bitmasks are same as correspording
// subscriber bitmask shifted left 16 bytes...  Please don't break this
// convention for existing #defines.

typedef enum {
	REPOLEChange_SubscriberInsert						= 0x00000001,
	REPOLEChange_PublisherInsert						= 0x00010000,

 	REPOLEChange_SubscriberDelete_NoConflict			= 0x00000002,
 	REPOLEChange_PublisherDelete_NoConflict				= 0x00020000,
 	REPOLEChange_SubscriberSystemDelete					= 0x00000004,
 	REPOLEChange_PublisherSystemDelete					= 0x00040000,
 	REPOLEChange_SubscriberDelete_Conflict				= 0x00000008,
 	REPOLEChange_PublisherDelete_Conflict				= 0x00080000,
 	REPOLEChange_SubscriberRemoveFromPartial			= 0x00000010,
 	REPOLEChange_PublisherRemoveFromPartial				= 0x00100000,

 	REPOLEChange_SubscriberUpdate_NoConflict			= 0x00000020,
 	REPOLEChange_PublisherUpdate_NoConflict				= 0x00200000,
 	REPOLEChange_SubscriberUpdate_ConflictWithDelete	= 0x00000040,
 	REPOLEChange_PublisherUpdate_ConflictWithDelete		= 0x00400000,
 	REPOLEChange_SubscriberUpdate_ConflictColTrack		= 0x00000080,
 	REPOLEChange_PublisherUpdate_ConflictColTrack		= 0x00800000,
 	REPOLEChange_SubscriberUpdate_ConflictNoColTrack	= 0x00000100,
 	REPOLEChange_PublisherUpdate_ConflictNoColTrack		= 0x01000000,


 	REPOLEChange_UploadInsertFailed						= 0x00000200,
 	REPOLEChange_DownloadInsertFailed					= 0x02000000,
 	REPOLEChange_UploadDeleteFailed						= 0x00000400,
 	REPOLEChange_DownloadDeleteFailed					= 0x04000000,
 	REPOLEChange_UploadUpdateFailed						= 0x00000800,
 	REPOLEChange_DownloadUpdateFailed					= 0x08000000
	
} REPOLE_CHANGE_TYPE;	

#define REPOLEUpdateConflicts (REPOLEChange_SubscriberUpdate_ConflictColTrack | REPOLEChange_PublisherUpdate_ConflictColTrack \
	| REPOLEChange_SubscriberUpdate_ConflictNoColTrack | REPOLEChange_PublisherUpdate_ConflictNoColTrack)

#define REPOLEAllConflicts (REPOLEChange_SubscriberDelete_Conflict | REPOLEChange_PublisherDelete_Conflict \
	| REPOLEChange_SubscriberUpdate_ConflictWithDelete | REPOLEChange_PublisherUpdate_ConflictWithDelete \
	| REPOLEUpdateConflicts)
	
#define REPOLEAllErrors (REPOLEChange_UploadInsertFailed | REPOLEChange_DownloadInsertFailed \
	| REPOLEChange_UploadDeleteFailed | REPOLEChange_DownloadDeleteFailed \
	| REPOLEChange_UploadUpdateFailed | REPOLEChange_DownloadUpdateFailed)
#define REPOLEAllNonConflicts (REPOLEChange_SubscriberInsert | REPOLEChange_PublisherInsert \
	| REPOLEChange_SubscriberDelete_NoConflict | REPOLEChange_PublisherDelete_NoConflict \
	| REPOLEChange_SubscriberSystemDelete | REPOLEChange_PublisherSystemDelete \
	| REPOLEChange_SubscriberRemoveFromPartial | REPOLEChange_SubscriberUpdate_NoConflict \
	| REPOLEChange_PublisherUpdate_NoConflict)
#define REPOLEAllChanges (REPOLEAllConflicts | REPOLEAllErrors | REPOLEAllNonConflicts)

typedef enum {
	REPOLEConflict_Min						= 1,
	REPOLEConflict_UpdateConflict			= 1,
	REPOLEConflict_ColumnUpdateConflict		= 2,
	REPOLEConflict_UpdateDeleteWinsConflict	= 3,
	REPOLEConflict_UpdateWinsDeleteConflict	= 4,
 	REPOLEConflict_UploadInsertFailed		= 5,
 	REPOLEConflict_DownloadInsertFailed		= 6,
 	REPOLEConflict_UploadDeleteFailed		= 7,
 	REPOLEConflict_DownloadDeleteFailed		= 8,
 	REPOLEConflict_UploadUpdateFailed		= 9,
 	REPOLEConflict_DownloadUpdateFailed		= 10,
	REPOLEConflict_Max						= 10
} REPOLE_CONFLICT_TYPE;

typedef enum {
	REPOLEColumn_NotUpdated			 		= 0x0001,	// No updates to column or data values match
	REPOLEColumn_UpdatedNoConflict			= 0x0002,	// Column updated at src, no column level conflict
	REPOLEColumn_UpdatedWithConflict		= 0x0003,	// Column updated at src, conflicts with change at destination
	REPOLEColumn_DifferNoTrack				= 0x0004	// No column tracking info, data values are different
} REPOLE_COLSTATUS_TYPE;	

typedef enum {
	REPOLEPriority_Source		= 0x0001,	// The source has the higher priority
	REPOLEPriority_Destination 	= 0x0002,	// The destination has the higher priority
	REPOLEPriority_Equal		= 0x0003	// Source and destination have equal priority
} REPOLE_PRIORITY_TYPE;	


/**** Implemented by the Reconciler ***/
#undef  INTERFACE
#define INTERFACE IConnectionInfo
DECLARE_INTERFACE_(IConnectionInfo, IUnknown)
{
   	//*** IUnknown methods
   	STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
   	STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
   	STDMETHOD_(ULONG,Release) (THIS) PURE;

   	/* IConnectionInfo Get methods */
    STDMETHOD(GetConnectName)(THIS_ LPTSTR ConnectName, DWORD cbConnectName) PURE;
    STDMETHOD(GetServerName)(THIS_ LPTSTR ServerName, DWORD cbServerName) PURE;
    STDMETHOD(GetHostName)(THIS_ LPTSTR HostName, DWORD cbHostName) PURE;
	STDMETHOD(GetServerRole)(THIS_ LPTSTR ServerRole, DWORD cbServerRole) PURE;
    STDMETHOD(GetInternetAddress)(THIS_ LPTSTR InternetAddress, DWORD cbInternetAddress) PURE;
    STDMETHOD(GetInternetNetwork)(THIS_ LPTSTR InternetNetwork, DWORD cbInternetNetwork) PURE;
    STDMETHOD(GetDatabase)(THIS_ LPTSTR Database, DWORD cbDatabase) PURE;
	STDMETHOD(GetDatabaseStatus)(THIS_ LONG *plDatabaseStatus) PURE;
    STDMETHOD(GetDatasourcePath)(THIS_ LPTSTR DatasourcePath, DWORD cbDatasourcePath) PURE;
    STDMETHOD(GetDataSourceType)(THIS_ REPOLE_DATASOURCE_TYPE FAR * pRetValue) PURE;
    STDMETHOD(GetSecurityMode)(THIS_ REPOLE_SECURITY_TYPE FAR * pRetValue) PURE;
    STDMETHOD(GetLogin)(THIS_ LPTSTR Login, DWORD cbLogin) PURE;
    STDMETHOD(GetPassword)(THIS_ LPTSTR Password, DWORD cbPassword) PURE;
    STDMETHOD(GetODBCEnvironmentHandle)(THIS_ HENV * phenv) PURE;
    STDMETHOD(GetLoginTimeout)(THIS_ LONG * plLoginTimeout) PURE;
    STDMETHOD(GetQueryTimeout)(THIS_ LONG * plQueryTimeout) PURE;
    STDMETHOD(GetPacketSize)(THIS_ unsigned long * pusPacketSize) PURE;
    STDMETHOD(GetApplicationName)(THIS_ LPTSTR ApplicationName, DWORD cbApplicationName) PURE;
	STDMETHOD(GetProviderName)(THIS_ LPTSTR ProviderName, DWORD cbProviderName) PURE;
	STDMETHOD(GetDatasource)(THIS_ LPTSTR Datasource, DWORD cbDatasource) PURE;
	STDMETHOD(GetLocation)(THIS_ LPTSTR Location, DWORD cbLocation) PURE;
	STDMETHOD(GetProviderString)(THIS_ LPTSTR ProviderString, DWORD cbProviderString) PURE;
	STDMETHOD(GetCatalog)(THIS_ LPTSTR Catalog, DWORD cbCatalog) PURE;
	STDMETHOD(GetDBCreatedThisSession)(THIS_ BOOL *pbDBCreatedThisSession) PURE;

   	/* IConnectionInfo Set methods (not accessible to third part resolver) */
    STDMETHOD(SetConnectName)(THIS_ LPCTSTR ConnectName) PURE;
    STDMETHOD(SetServerName)(THIS_ LPCTSTR ServerName) PURE;
    STDMETHOD(SetHostName)(THIS_ LPCTSTR HostName) PURE;
	STDMETHOD(SetServerRole)(THIS_ LPCTSTR ServerRole) PURE;
    STDMETHOD(SetInternetAddress)(THIS_ LPCTSTR InternetAddress) PURE;
    STDMETHOD(SetInternetNetwork)(THIS_ LPCTSTR InternetNetwork) PURE;
    STDMETHOD(SetDatabase)(THIS_ LPCTSTR Database) PURE;
	STDMETHOD(SetDatabaseStatus)(THIS_ LONG lDatabaseStatus) PURE;
    STDMETHOD(SetDatasourcePath)(THIS_ LPCTSTR DatasourcePath) PURE;
    STDMETHOD(SetDataSourceType)(THIS_ REPOLE_DATASOURCE_TYPE DataSourceType) PURE;
    STDMETHOD(SetSecurityMode)(THIS_ REPOLE_SECURITY_TYPE SecurityMode) PURE;
    STDMETHOD(SetLogin)(THIS_ LPCTSTR Login) PURE;
    STDMETHOD(SetPassword)(THIS_ LPCTSTR Password) PURE;
    STDMETHOD(SetODBCEnvironmentHandle)(THIS_ HENV henv) PURE;
    STDMETHOD(SetLoginTimeout)(THIS_ LONG lLoginTimeout) PURE;
    STDMETHOD(SetQueryTimeout)(THIS_ LONG lQueryTimeout) PURE;
    STDMETHOD(SetPacketSize)(THIS_ unsigned long usPacketSize) PURE;
    STDMETHOD(SetApplicationName)(THIS_ LPCTSTR ApplicationName) PURE;
	STDMETHOD(SetProviderName)(THIS_ LPCTSTR ProviderName) PURE;
	STDMETHOD(SetDatasource)(THIS_ LPCTSTR Datasource) PURE;
	STDMETHOD(SetLocation)(THIS_ LPCTSTR Location) PURE;
	STDMETHOD(SetProviderString)(THIS_ LPCTSTR ProviderString) PURE;
	STDMETHOD(SetCatalog)(THIS_ LPCTSTR Catalog) PURE;
	STDMETHOD(SetDBCreatedThisSession)(THIS_ BOOL bDBCreatedThisSession) PURE;
    STDMETHOD(SetBcpBatchSize)(THIS_ LONG lBcpBatchSize) PURE;
    STDMETHOD(GetBcpBatchSize)(THIS_ LONG * plBcpBatchSize) PURE;
};


/**** Implemented by the Reconciler ***/
#undef  INTERFACE
#define INTERFACE IReplRowChange
DECLARE_INTERFACE_(IReplRowChange, IUnknown)
{
   	//*** IUnknown methods
   	STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
   	STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
   	STDMETHOD_(ULONG,Release) (THIS) PURE;

   	/* IReplRowChange methods */
    STDMETHOD(GetTableName)(THIS_ LPTSTR pTableName, DWORD cbTableName) PURE;
    STDMETHOD(GetRowIdentifier)(THIS_ LPGUID pRowGuid) PURE;
	STDMETHOD(GetResolverProcedureName)(LPTSTR pResolverProcedureName, DWORD cbResolverProcedureName) PURE;
    STDMETHOD(GetNumColumns)(THIS_ LPDWORD pdwColumnCount) PURE;
    STDMETHOD(GetChangeType)(THIS_ REPOLE_CHANGE_TYPE * pChangeType) PURE;
    STDMETHOD(GetColumnStatus)(THIS_ DWORD ColumnId, REPOLE_COLSTATUS_TYPE FAR *pColStatus) PURE;
    STDMETHOD(GetColumnName)(THIS_ DWORD ColumnId, LPTSTR pColumnName, DWORD cbColumnName) PURE;
	STDMETHOD(GetColumnDatatype)(DWORD ColumnId, LPLONG plDataType) PURE;
	STDMETHOD(GetSourceColumnValue)(THIS_ DWORD ColumnId, LPVOID pvBuffer, DWORD cbBufferMax, LPDWORD pcbBufferActual) PURE;
	STDMETHOD(GetDestinationColumnValue)(DWORD ColumnId, LPVOID pvBuffer, DWORD cbBufferMax, LPDWORD pcbBufferActual) PURE;
    STDMETHOD(GetPriorityWinner)(THIS_ REPOLE_PRIORITY_TYPE FAR * pPriorityWinner) PURE;
    STDMETHOD(GetSourceConnectionInfo)(THIS_ IConnectionInfo ** ppSourceConnectionInfo, LPBOOL pfIsPublisher) PURE;
    STDMETHOD(GetDestinationConnectionInfo)(THIS_ IConnectionInfo ** ppDestinationConnectionInfo, LPBOOL pfIsPublisher) PURE;
    STDMETHOD(DeleteRow)(THIS) PURE;
    STDMETHOD(CopyRowFromSource)(THIS) PURE;
    STDMETHOD(CopyColumnFromSource)(THIS_ DWORD ColumnId) PURE;
    STDMETHOD(SetColumn)(THIS_ DWORD ColumnId, LPVOID pvBuffer, DWORD cbBuffer) PURE;
    STDMETHOD(UpdateRow)(THIS) PURE;
    STDMETHOD(InsertRow)(THIS) PURE;
    STDMETHOD(LogConflict)(THIS_ BOOL bLogSourceConflict, REPOLE_CONFLICT_TYPE ConflictType, BOOL bOnlyLogIfUpdater, LPTSTR pszConflictMessage = NULL) PURE;
    STDMETHOD(LogError)(THIS_ REPOLE_CHANGE_TYPE ChangeType, LPTSTR pszErrorMessage = NULL) PURE;
    STDMETHOD(GetErrorInfo)(THIS_ DWORD *pErrCode, LPTSTR pErrText) PURE;
    STDMETHOD(DoDummyUpdate)(THIS_ BOOL fUpLineage, BOOL fAtPublisher) PURE;
    STDMETHOD(GetTableOwnerName)(THIS_ LPTSTR pOwnerName, DWORD cbOwnerName) PURE;
    STDMETHOD(GetRowGuidColName)(THIS_ LPTSTR pRowGuidColName, DWORD cbRowGuidColName) PURE;
};



/**** Default implemention by the Reconciler, can be provided by the ISV ***/
#undef  INTERFACE
#define INTERFACE ICustomResolver
DECLARE_INTERFACE_(ICustomResolver, IUnknown)
{
   	//*** IUnknown methods
   	STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
   	STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
   	STDMETHOD_(ULONG,Release) (THIS) PURE;

   	/* ICustomResolver methods */
    STDMETHOD(Reconcile)(THIS_
                        IReplRowChange *pRowChange,
                        DWORD dwFlags,
                        PVOID pvReserved) PURE;
    STDMETHOD(GetHandledStates) (THIS_
    					DWORD	*pResolverBm) PURE;
};

#endif   /* ! __SQLRES_H__ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\SqlOleDB.h ===
//--------------------------------------------------------------------
// Microsoft OLE DB Provider for SQL Server
// (C) Copyright 1997 By Microsoft Corporation.
//
// @doc
//
// @module SQLOLEDB.H | Provider Specific definitions
//
//--------------------------------------------------------------------

#ifndef  _SQLOLEDB_H_
#define  _SQLOLEDB_H_

//----------------------------------------------------------------------------
// Provider-specific Class Ids
#ifdef DBINITCONSTANTS
// Provider CLSID 		{0C7FF16C-38E3-11d0-97AB-00C04FC2AD98}
extern const GUID CLSID_SQLOLEDB      		= {0xc7ff16cL,0x38e3,0x11d0,{0x97,0xab,0x0,0xc0,0x4f,0xc2,0xad,0x98}};
// Error Lookup CLSID 		{C0932C62-38E5-11d0-97AB-00C04FC2AD98}
extern const GUID CLSID_SQLOLEDB_ERROR 		= {0xc0932c62L,0x38e5,0x11d0,{0x97,0xab,0x0,0xc0,0x4f,0xc2,0xad,0x98}};
// Enumerator CLSID 		{DFA22B8E-E68D-11d0-97E4-00C04FC2AD98}
extern const GUID CLSID_SQLOLEDB_ENUMERATOR 	= {0xdfa22b8eL,0xe68d,0x11d0,{0x97,0xe4,0x0,0xc0,0x4f,0xc2,0xad,0x98}};
#else // !DBINITCONSTANTS
extern const GUID CLSID_SQLOLEDB;
extern const GUID CLSID_SQLOLEDB_ERROR;
extern const GUID CLSID_SQLOLEDB_ENUMERATOR;
#endif // DBINITCONSTANTS

//----------------------------------------------------------------------------
// Provider-specific Interface Ids
#ifdef DBINITCONSTANTS
extern const GUID IID_ISQLServerErrorInfo	= {0x5cf4ca12,0xef21,0x11d0,{0x97,0xe7,0x0,0xc0,0x4f,0xc2,0xad,0x98}};
extern const GUID IID_IRowsetFastLoad 		= {0x5cf4ca13,0xef21,0x11d0,{0x97,0xe7,0x0,0xc0,0x4f,0xc2,0xad,0x98}};
#else // !DBINITCONSTANTS
extern const GUID IID_ISQLServerErrorInfo;
extern const GUID IID_IRowsetFastLoad;
#endif // DBINITCONSTANTS

//----------------------------------------------------------------------------
// Provider-specific schema rowsets
#ifdef DBINITCONSTANTS
extern const GUID DBSCHEMA_LINKEDSERVERS	= {0x9093caf4,0x2eac,0x11d1,{0x98,0x9,0x0,0xc0,0x4f,0xc2,0xad,0x98}};
#else // !DBINITCONSTANTS
extern const GUID DBSCHEMA_LINKEDSERVERS;
#endif // DBINITCONSTANTS

#define CRESTRICTIONS_DBSCHEMA_LINKEDSERVERS	1


//----------------------------------------------------------------------------
// Provider-specific property sets
#ifdef DBINITCONSTANTS
extern const GUID DBPROPSET_SQLSERVERDBINIT 	= {0x5cf4ca10,0xef21,0x11d0,{0x97,0xe7,0x0,0xc0,0x4f,0xc2,0xad,0x98}};
extern const GUID DBPROPSET_SQLSERVERROWSET 	= {0x5cf4ca11,0xef21,0x11d0,{0x97,0xe7,0x0,0xc0,0x4f,0xc2,0xad,0x98}};
extern const GUID DBPROPSET_SQLSERVERDATASOURCE = {0x28efaee4,0x2d2c,0x11d1,{0x98,0x7,0x0,0xc0,0x4f,0xc2,0xad,0x98}};
extern const GUID DBPROPSET_SQLSERVERSESSION	= {0x28efaee5,0x2d2c,0x11d1,{0x98,0x7,0x0,0xc0,0x4f,0xc2,0xad,0x98}};

#else // !DBINITCONSTANTS
extern const GUID DBPROPSET_SQLSERVERDBINIT;
extern const GUID DBPROPSET_SQLSERVERROWSET;
extern const GUID DBPROPSET_SQLSERVERDATASOURCE;
extern const GUID DBPROPSET_SQLSERVERSESSION;
#endif // DBINITCONSTANTS

//----------------------------------------------------------------------------
// PropIds for DBPROPSET_SQLSERVERDBINIT 
#define SSPROP_INIT_CURRENTLANGUAGE		4
#define SSPROP_INIT_NETWORKADDRESS		5
#define SSPROP_INIT_NETWORKLIBRARY		6
#define SSPROP_INIT_USEPROCFORPREP		7
#define SSPROP_INIT_AUTOTRANSLATE		8
#define SSPROP_INIT_PACKETSIZE			9
#define SSPROP_INIT_APPNAME			10
#define SSPROP_INIT_WSID			11
#define SSPROP_INIT_FILENAME			12

// Values for SSPROP_USEPROCFORPREP
#define SSPROPVAL_USEPROCFORPREP_OFF		0
#define SSPROPVAL_USEPROCFORPREP_ON		1
#define SSPROPVAL_USEPROCFORPREP_ON_DROP	2

//----------------------------------------------------------------------------
// PropIds for DBPROPSET_SQLSERVERDATASOURCE
#define SSPROP_ENABLEFASTLOAD			2

//----------------------------------------------------------------------------
// PropIds for DBPROPSET_SQLSERVERSESSION
#define SSPROP_QUOTEDCATALOGNAMES		2

//----------------------------------------------------------------------------
// PropIds for DBPROPSET_SQLSERVERROWSET 
#define SSPROP_MAXBLOBLENGTH			8
#define SSPROP_FASTLOADOPTIONS			9
#define SSPROP_FASTLOADKEEPNULLS		10
#define SSPROP_FASTLOADKEEPIDENTITY		11


/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 3.01.75 */
/* at Sun Sep 14 11:43:38 1997
 */
/* Compiler settings for ..\inc\sqloledb.idl:
    Os (OptLev=s), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: none
*/
//@@MIDL_FILE_HEADING(  )
#include "rpc.h"
#include "rpcndr.h"
#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __sqloledb_h__
#define __sqloledb_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __ISQLServerErrorInfo_FWD_DEFINED__
#define __ISQLServerErrorInfo_FWD_DEFINED__
typedef interface ISQLServerErrorInfo ISQLServerErrorInfo;
#endif 	/* __ISQLServerErrorInfo_FWD_DEFINED__ */


#ifndef __IRowsetFastLoad_FWD_DEFINED__
#define __IRowsetFastLoad_FWD_DEFINED__
typedef interface IRowsetFastLoad IRowsetFastLoad;
#endif 	/* __IRowsetFastLoad_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/****************************************
 * Generated header for interface: __MIDL_itf_sqloledb_0000
 * at Sun Sep 14 11:43:38 1997
 * using MIDL 3.01.75
 ****************************************/
/* [local] */ 


// the structure returned by  ISQLServerErrorInfo::GetSQLServerInfo
typedef struct  tagSSErrorInfo
    {
    LPOLESTR pwszMessage;
    LPOLESTR pwszServer;
    LPOLESTR pwszProcedure;
    LONG lNative;
    BYTE bState;
    BYTE bClass;
    WORD wLineNumber;
    }	SSERRORINFO;



extern RPC_IF_HANDLE __MIDL_itf_sqloledb_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_sqloledb_0000_v0_0_s_ifspec;

#ifndef __ISQLServerErrorInfo_INTERFACE_DEFINED__
#define __ISQLServerErrorInfo_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: ISQLServerErrorInfo
 * at Sun Sep 14 11:43:38 1997
 * using MIDL 3.01.75
 ****************************************/
/* [unique][object][local][uuid] */ 



EXTERN_C const IID IID_ISQLServerErrorInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface ISQLServerErrorInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetErrorInfo( 
            /* [out] */ SSERRORINFO __RPC_FAR *__RPC_FAR *ppErrorInfo,
            /* [out] */ OLECHAR __RPC_FAR *__RPC_FAR *ppStringsBuffer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISQLServerErrorInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            ISQLServerErrorInfo __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            ISQLServerErrorInfo __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            ISQLServerErrorInfo __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetErrorInfo )( 
            ISQLServerErrorInfo __RPC_FAR * This,
            /* [out] */ SSERRORINFO __RPC_FAR *__RPC_FAR *ppErrorInfo,
            /* [out] */ OLECHAR __RPC_FAR *__RPC_FAR *ppStringsBuffer);
        
        END_INTERFACE
    } ISQLServerErrorInfoVtbl;

    interface ISQLServerErrorInfo
    {
        CONST_VTBL struct ISQLServerErrorInfoVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISQLServerErrorInfo_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ISQLServerErrorInfo_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ISQLServerErrorInfo_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ISQLServerErrorInfo_GetErrorInfo(This,ppErrorInfo,ppStringsBuffer)	\
    (This)->lpVtbl -> GetErrorInfo(This,ppErrorInfo,ppStringsBuffer)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE ISQLServerErrorInfo_GetErrorInfo_Proxy( 
    ISQLServerErrorInfo __RPC_FAR * This,
    /* [out] */ SSERRORINFO __RPC_FAR *__RPC_FAR *ppErrorInfo,
    /* [out] */ OLECHAR __RPC_FAR *__RPC_FAR *ppStringsBuffer);


void __RPC_STUB ISQLServerErrorInfo_GetErrorInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISQLServerErrorInfo_INTERFACE_DEFINED__ */


/****************************************
 * Generated header for interface: __MIDL_itf_sqloledb_0006
 * at Sun Sep 14 11:43:38 1997
 * using MIDL 3.01.75
 ****************************************/
/* [local] */ 


typedef ULONG_PTR HACCESSOR;



extern RPC_IF_HANDLE __MIDL_itf_sqloledb_0006_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_sqloledb_0006_v0_0_s_ifspec;

#ifndef __IRowsetFastLoad_INTERFACE_DEFINED__
#define __IRowsetFastLoad_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IRowsetFastLoad
 * at Sun Sep 14 11:43:38 1997
 * using MIDL 3.01.75
 ****************************************/
/* [unique][object][local][uuid] */ 



EXTERN_C const IID IID_IRowsetFastLoad;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface IRowsetFastLoad : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE InsertRow( 
            /* [in] */ HACCESSOR hAccessor,
            /* [in] */ void __RPC_FAR *pData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Commit( 
            /* [in] */ BOOL fDone) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IRowsetFastLoadVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IRowsetFastLoad __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IRowsetFastLoad __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IRowsetFastLoad __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InsertRow )( 
            IRowsetFastLoad __RPC_FAR * This,
            /* [in] */ HACCESSOR hAccessor,
            /* [in] */ void __RPC_FAR *pData);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Commit )( 
            IRowsetFastLoad __RPC_FAR * This,
            /* [in] */ BOOL fDone);
        
        END_INTERFACE
    } IRowsetFastLoadVtbl;

    interface IRowsetFastLoad
    {
        CONST_VTBL struct IRowsetFastLoadVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRowsetFastLoad_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IRowsetFastLoad_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IRowsetFastLoad_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IRowsetFastLoad_InsertRow(This,hAccessor,pData)	\
    (This)->lpVtbl -> InsertRow(This,hAccessor,pData)

#define IRowsetFastLoad_Commit(This,fDone)	\
    (This)->lpVtbl -> Commit(This,fDone)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IRowsetFastLoad_InsertRow_Proxy( 
    IRowsetFastLoad __RPC_FAR * This,
    /* [in] */ HACCESSOR hAccessor,
    /* [in] */ void __RPC_FAR *pData);


void __RPC_STUB IRowsetFastLoad_InsertRow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IRowsetFastLoad_Commit_Proxy( 
    IRowsetFastLoad __RPC_FAR * This,
    /* [in] */ BOOL fDone);


void __RPC_STUB IRowsetFastLoad_Commit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IRowsetFastLoad_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif

#endif //_SQLOLEDB_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\sqltypes.h ===
//-----------------------------------------------------------------------------
// File:			sqltypes.h
//
// Copyright:		Copyright (c) 1995-1999 Microsoft Corporation
//
// Contents: 		This file defines the types used in ODBC
//
// Comments: 		
//
//-----------------------------------------------------------------------------

#ifndef __SQLTYPES
#define __SQLTYPES

/* if ODBCVER is not defined, assume version 3.51 */
#ifndef ODBCVER
#define ODBCVER	0x0351
#endif  /* ODBCVER */

#ifdef __cplusplus
extern "C" { 			/* Assume C declarations for C++   */
#endif  /* __cplusplus */

/* environment specific definitions */
#ifndef EXPORT
#define EXPORT   
#endif

#ifdef WIN32
#define SQL_API  __stdcall
#else
#define SQL_API
#endif

#ifndef RC_INVOKED

/* API declaration data types */
typedef unsigned char   SQLCHAR;
#if (ODBCVER >= 0x0300)
typedef signed char     SQLSCHAR;
typedef unsigned char   SQLDATE;
typedef unsigned char   SQLDECIMAL;
typedef double          SQLDOUBLE;
typedef double          SQLFLOAT;
#endif
typedef long            SQLINTEGER;
typedef unsigned long   SQLUINTEGER;


#define SQLROWSETSIZE   SQLUINTEGER

#ifdef _WIN64
typedef INT64           SQLLEN;
typedef INT64           SQLROWOFFSET;
typedef UINT64          SQLROWCOUNT;
typedef UINT64          SQLULEN;
typedef UINT64          SQLTRANSID;
typedef unsigned long   SQLSETPOSIROW;
#else
#define SQLLEN          SQLINTEGER
#define SQLROWOFFSET    SQLINTEGER
#define SQLROWCOUNT     SQLUINTEGER
#define SQLULEN         SQLUINTEGER
#define SQLTRANSID      DWORD
#define SQLSETPOSIROW   SQLUSMALLINT
#endif
#if (ODBCVER >= 0x0300)
typedef unsigned char   SQLNUMERIC;
#endif
typedef void *          SQLPOINTER;
#if (ODBCVER >= 0x0300)
typedef float           SQLREAL;
#endif
typedef short           SQLSMALLINT;
typedef unsigned short  SQLUSMALLINT;
#if (ODBCVER >= 0x0300)
typedef unsigned char   SQLTIME;
typedef unsigned char   SQLTIMESTAMP;
typedef unsigned char   SQLVARCHAR;
#endif

/* function return type */
typedef SQLSMALLINT     SQLRETURN;

/* generic data structures */
#if (ODBCVER >= 0x0300)
#if defined(WIN32)
typedef void*					SQLHANDLE;
#else
typedef SQLINTEGER		SQLHANDLE;
#endif	/* defined(WIN32) */
typedef SQLHANDLE               SQLHENV;
typedef SQLHANDLE               SQLHDBC;
typedef SQLHANDLE               SQLHSTMT;
typedef SQLHANDLE               SQLHDESC;
#else
#if defined(WIN32)
typedef void*					SQLHENV;
typedef void*					SQLHDBC;
typedef void*					SQLHSTMT;
#else
typedef SQLINTEGER              SQLHENV;
typedef SQLINTEGER              SQLHDBC;
typedef SQLINTEGER              SQLHSTMT;
#endif  /* defined(WIN32) */
#endif /* ODBCVER >= 0x0300 */

/* SQL portable types for C */
typedef unsigned char           UCHAR;
typedef signed char             SCHAR;
typedef SCHAR                   SQLSCHAR;
typedef long int                SDWORD;
typedef short int               SWORD;
typedef unsigned long int       UDWORD;
typedef unsigned short int      UWORD;
#ifndef _WIN64
typedef UDWORD                  SQLUINTEGER;
#endif

typedef signed long             SLONG;
typedef signed short            SSHORT;
typedef unsigned long           ULONG;
typedef unsigned short          USHORT;
typedef double                  SDOUBLE;
typedef double            		LDOUBLE; 
typedef float                   SFLOAT;

typedef void*              		PTR;

typedef void*              		HENV;
typedef void*              		HDBC;
typedef void*              		HSTMT;

typedef signed short            RETCODE;

#if defined(WIN32) || defined(OS2)
typedef HWND                    SQLHWND;
#elif defined (UNIX)
typedef Widget                  SQLHWND;
#else
/* placehold for future O/S GUI window handle definition */
typedef SQLPOINTER              SQLHWND;
#endif

#ifndef	__SQLDATE
#define	__SQLDATE
/* transfer types for DATE, TIME, TIMESTAMP */
typedef struct tagDATE_STRUCT
{
        SQLSMALLINT    year;
        SQLUSMALLINT   month;
        SQLUSMALLINT   day;
} DATE_STRUCT;

#if (ODBCVER >= 0x0300)
typedef DATE_STRUCT	SQL_DATE_STRUCT;
#endif  /* ODBCVER >= 0x0300 */

typedef struct tagTIME_STRUCT
{
        SQLUSMALLINT   hour;
        SQLUSMALLINT   minute;
        SQLUSMALLINT   second;
} TIME_STRUCT;

#if (ODBCVER >= 0x0300)
typedef TIME_STRUCT	SQL_TIME_STRUCT;
#endif /* ODBCVER >= 0x0300 */

typedef struct tagTIMESTAMP_STRUCT
{
        SQLSMALLINT    year;
        SQLUSMALLINT   month;
        SQLUSMALLINT   day;
        SQLUSMALLINT   hour;
        SQLUSMALLINT   minute;
        SQLUSMALLINT   second;
        SQLUINTEGER    fraction;
} TIMESTAMP_STRUCT;

#if (ODBCVER >= 0x0300)
typedef TIMESTAMP_STRUCT	SQL_TIMESTAMP_STRUCT;
#endif  /* ODBCVER >= 0x0300 */


/*
 * enumerations for DATETIME_INTERVAL_SUBCODE values for interval data types
 * these values are from SQL-92
 */

#if (ODBCVER >= 0x0300)
typedef enum 
{
	SQL_IS_YEAR						= 1,
	SQL_IS_MONTH					= 2,
	SQL_IS_DAY						= 3,
	SQL_IS_HOUR						= 4,
	SQL_IS_MINUTE					= 5,
	SQL_IS_SECOND					= 6,
	SQL_IS_YEAR_TO_MONTH			= 7,
	SQL_IS_DAY_TO_HOUR				= 8,
	SQL_IS_DAY_TO_MINUTE			= 9,
	SQL_IS_DAY_TO_SECOND			= 10,
	SQL_IS_HOUR_TO_MINUTE			= 11,
	SQL_IS_HOUR_TO_SECOND			= 12,
	SQL_IS_MINUTE_TO_SECOND			= 13
} SQLINTERVAL;

#endif  /* ODBCVER >= 0x0300 */

#if (ODBCVER >= 0x0300)
typedef struct tagSQL_YEAR_MONTH
{
		SQLUINTEGER		year;
		SQLUINTEGER		month;
} SQL_YEAR_MONTH_STRUCT;

typedef struct tagSQL_DAY_SECOND
{
		SQLUINTEGER		day;
		SQLUINTEGER		hour;
		SQLUINTEGER		minute;
		SQLUINTEGER		second;
		SQLUINTEGER		fraction;
} SQL_DAY_SECOND_STRUCT;

typedef struct tagSQL_INTERVAL_STRUCT
{
	SQLINTERVAL		interval_type;
	SQLSMALLINT		interval_sign;
	union {
		SQL_YEAR_MONTH_STRUCT		year_month;
		SQL_DAY_SECOND_STRUCT		day_second;
	} intval;

} SQL_INTERVAL_STRUCT;

#endif  /* ODBCVER >= 0x0300 */

#endif	/* __SQLDATE	*/

/* the ODBC C types for SQL_C_SBIGINT and SQL_C_UBIGINT */
#if (ODBCVER >= 0x0300)
#if (_MSC_VER >= 900)
#define ODBCINT64	__int64
#endif  

/* If using other compilers, define ODBCINT64 to the 
	approriate 64 bit integer type */
#ifdef ODBCINT64
typedef ODBCINT64	SQLBIGINT;
typedef unsigned ODBCINT64	SQLUBIGINT;
#endif
#endif  /* ODBCVER >= 0x0300 */

/* internal representation of numeric data type */
#if (ODBCVER >= 0x0300)
#define SQL_MAX_NUMERIC_LEN		16
typedef struct tagSQL_NUMERIC_STRUCT
{
	SQLCHAR		precision;
	SQLSCHAR	scale;
	SQLCHAR		sign;	/* 1 if positive, 0 if negative */
	SQLCHAR		val[SQL_MAX_NUMERIC_LEN];
} SQL_NUMERIC_STRUCT;
#endif  /* ODBCVER >= 0x0300 */

#if (ODBCVER >= 0x0350)
#ifdef GUID_DEFINED
typedef GUID	SQLGUID;
#else
/* size is 16 */
typedef struct  tagSQLGUID
{
    DWORD Data1;
    WORD Data2;
    WORD Data3;
    BYTE Data4[ 8 ];
} SQLGUID;
#endif  /* GUID_DEFINED */
#endif  /* ODBCVER >= 0x0350 */

typedef unsigned long int       BOOKMARK;

#ifdef _WCHAR_T_DEFINED
typedef wchar_t SQLWCHAR;
#else
typedef unsigned short SQLWCHAR;
#endif

#ifdef UNICODE
typedef SQLWCHAR        SQLTCHAR;
#else
typedef SQLCHAR         SQLTCHAR;
#endif  /* UNICODE */



#endif     /* RC_INVOKED */


#ifdef __cplusplus
}                                    /* End of extern "C" { */
#endif  /* __cplusplus */

#endif /* #ifndef __SQLTYPES */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\sqloleid.h ===
#ifndef SQLOLEID_H_
#define SQLOLEID_H_
/////////////////////////////////////////////////////////////////////////////////////////
// Header file for SQLOLE Component Object classes and interfaces.
// Copyright 1994 - 1999 Microsoft Corporation.
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
//	SQLOLE Library UUID
/////////////////////////////////////////////////////////////////////////////////
DEFINE_OLEGUID(LIBID_SQLOLELibrary, 0x00026b00, 0, 0);

/////////////////////////////////////////////////////////////////////////////////
// VB/VBA Interfaces (IID_IV*).  These support IDispatch and vtable binding.
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Internal base interfaces.
/////////////////////////////////////////////////////////////////////////////////
DEFINE_OLEGUID(IID_IVSQLOLEStdObject, 0x00026b01, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEStdCollection, 0x00026b02, 0, 0);
DEFINE_OLEGUID(IID_ISQLOLEAnsiUniInternal, 0x00026b03, 0, 0);
DEFINE_OLEGUID(IID_ISQLOLEPrivate, 0x00026b04, 0, 0);

/////////////////////////////////////////////////////////////////////////////////
// Automation generic-property interfaces
/////////////////////////////////////////////////////////////////////////////////
DEFINE_OLEGUID(IID_IVSQLOLEProperties, 0x00026b05, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEProperty, 0x00026b06, 0, 0);

/////////////////////////////////////////////////////////////////////////////////
// Create our own GUID template (OLEPM doesn't maintain the list anymore)
// The hardcoded numbers are from uuidgen, a unique time and netcard combination.
// As versions of SQLOLE increase, most DEFINE_OLDGUID macros below will be
// replaced by DEFINE_SQLOLEGUID, as the IID's are revved when new members are
// added to the interface (the old GUIDs will still be recognized for binary
// compatibility, but newly-compiled apps will use the new ones).
/////////////////////////////////////////////////////////////////////////////////
#define DEFINE_SQLOLEGUID(name, l) \
      DEFINE_GUID(name, l, 0x0bcc, 0x11ce, 0xa4, 0xb3, 0x00, 0xaa, 0x00, 0x4a, 0x34, 0xd5)

/////////////////////////////////////////////////////////////////////////////////
//	SQLOLE NonCreatable-Object Interface UUIDs.  These consist of all objects
// which do not have a class factory, such as collections and other objects
// the user acquires as the result of a property call.  VBA binds to these
// for simple pointer declarations.
/////////////////////////////////////////////////////////////////////////////////

// Collections of Creatable objects.  All Creatable objects (those which have a
// Class Factory), except the Application Object, exist in collections.
DEFINE_OLEGUID(IID_IVSQLOLEServers, 0x00026b11, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEDatabases, 0x00026b12, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLETables, 0x00026b13, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEColumns, 0x00026b14, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEViews, 0x00026b15, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEUserDefinedDatatypes, 0x00026b16, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEDefaults, 0x00026b17, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLERules, 0x00026b18, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEUsers, 0x00026b19, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEGroups, 0x00026b1a, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEStoredProcedures, 0x00026b1b, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEIndexes, 0x00026b1c, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEKeys, 0x00026b1d, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLETriggers, 0x00026b1e, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEDevices, 0x00026b1f, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEAlerts, 0x00026b20, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLELogins, 0x00026b21, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLELanguages, 0x00026b22, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLERemoteServers, 0x00026b23, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLERemoteLogins, 0x00026b24, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLETasks, 0x00026b25, 0, 0);
// Not used; slot preserved for numerical sequencing.  DEFINE_OLEGUID(IID_IVSQLOLETransfers, 0x00026b26, 0, 0);
// Not used; slot preserved for numerical sequencing.  DEFINE_OLEGUID(IID_IVSQLOLEBackups, 0x00026b27, 0, 0);
// Not used; slot preserved for numerical sequencing.  DEFINE_OLEGUID(IID_IVSQLOLEHistoryFilters, 0x00026b28, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEOperators, 0x00026b29, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEPublications, 0x00026b2a, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEArticles, 0x00026b2b, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLESubscriptions, 0x00026b2c, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEChecks, 0x00026b2d, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEServerGroups, 0x00026b2e, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLERegisteredServers, 0x00026b2f, 0, 0);
// Not used; slot preserved for numerical sequencing.  DEFINE_OLEGUID(IID_IVSQLOLEBulkCopys, 0x00027b30, 0, 0);

// Non-Creatable objects, and collections thereof.
DEFINE_OLEGUID(IID_IVSQLOLENames, 0x00026b40, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEDBObject, 0x00026b41, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEDBOption, 0x00026b42, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEConfiguration, 0x00026b43, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEConfigValue, 0x00026b44, 0, 0);
DEFINE_SQLOLEGUID(IID_IVSQLOLESubscriberInfo, 0x00027b45);
DEFINE_OLEGUID(IID_IVSQLOLENameList, 0x00026b46, 0, 0);
DEFINE_SQLOLEGUID(IID_IVSQLOLEExecutive, 0x00027b47);
DEFINE_SQLOLEGUID(IID_IVSQLOLEQueryResults, 0x00027b48);
DEFINE_OLEGUID(IID_IVSQLOLETransactionLog, 0x00026b49, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLERegistry, 0x00026b4a, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLESystemDatatypes, 0x00026b4b, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLESystemDatatype, 0x00026b4c, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEObjectList, 0x00026b4d, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEPermission, 0x00026b4e, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEIntegratedSecurity, 0x00026b4f, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEDRIDefault, 0x00026b50, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEConfigValues, 0x00026b51, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEAlertSystem, 0x00026b52, 0, 0);

/////////////////////////////////////////////////////////////////////////////////
// SQLOLE Creatable-Object Interface UUIDs.  Class names in .odl/.hdl file are
// underscore-prefixed.  CoCreateInstance for these objects must use the corresponding
// CoClass uuid (CLSID_SQLOLE*) defined below.  These iids are solely to keep mktyplib happy.
// VBA binds to these interfaces indirectly, via the CoClass.
/////////////////////////////////////////////////////////////////////////////////
DEFINE_SQLOLEGUID(IID_IVSQLOLEApplication, 0x00027b70);

DEFINE_SQLOLEGUID(IID_IVSQLOLEServer, 0x00027b71);
DEFINE_SQLOLEGUID(IID_IVSQLOLEDatabase, 0x00027b72);
DEFINE_SQLOLEGUID(IID_IVSQLOLETable, 0x00027b73);
DEFINE_OLEGUID(IID_IVSQLOLEColumn, 0x00026b74, 0, 0);
DEFINE_SQLOLEGUID(IID_IVSQLOLEView, 0x00027b75);
DEFINE_OLEGUID(IID_IVSQLOLEUserDefinedDatatype, 0x00026b76, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEDefault, 0x00026b77, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLERule, 0x00026b78, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEUser, 0x00026b79, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEGroup, 0x00026b7a, 0, 0);
DEFINE_SQLOLEGUID(IID_IVSQLOLEStoredProcedure, 0x00027b7b);
DEFINE_SQLOLEGUID(IID_IVSQLOLEIndex, 0x00027b7c);
DEFINE_SQLOLEGUID(IID_IVSQLOLEKey, 0x00027b7d);
DEFINE_OLEGUID(IID_IVSQLOLETrigger, 0x00026b7e, 0, 0);
DEFINE_SQLOLEGUID(IID_IVSQLOLEDevice, 0x00027b7f);
DEFINE_SQLOLEGUID(IID_IVSQLOLEAlert, 0x00027b80);
DEFINE_SQLOLEGUID(IID_IVSQLOLELogin, 0x00027b81);
DEFINE_OLEGUID(IID_IVSQLOLELanguage, 0x00026b82, 0, 0);
DEFINE_SQLOLEGUID(IID_IVSQLOLERemoteServer, 0x00027b83);
DEFINE_OLEGUID(IID_IVSQLOLERemoteLogin, 0x00026b84, 0, 0);
DEFINE_SQLOLEGUID(IID_IVSQLOLETask, 0x00027b85);
DEFINE_OLEGUID(IID_IVSQLOLETransfer, 0x00026b86, 0, 0);
DEFINE_SQLOLEGUID(IID_IVSQLOLEBackup, 0x00027b87);
DEFINE_OLEGUID(IID_IVSQLOLEHistoryFilter, 0x00026b88, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEOperator, 0x00026b89, 0, 0);
DEFINE_SQLOLEGUID(IID_IVSQLOLEPublication, 0x00027b8a);
DEFINE_SQLOLEGUID(IID_IVSQLOLEArticle, 0x00027b8b);
DEFINE_OLEGUID(IID_IVSQLOLESubscription, 0x00026b8c, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLECheck, 0x00026b8d, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLEServerGroup, 0x00026b8e, 0, 0);
DEFINE_OLEGUID(IID_IVSQLOLERegisteredServer, 0x00026b8f, 0, 0);
DEFINE_SQLOLEGUID(IID_IVSQLOLEBulkCopy, 0x00027b90);

/////////////////////////////////////////////////////////////////////////////////
//	SQLOLE Creatable-Object ClassFactory Interface UUIDs (must be in Registry).
/////////////////////////////////////////////////////////////////////////////////
DEFINE_OLEGUID(CLSID_SQLOLEApplication, 0x00026ba0, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEServer, 0x00026ba1, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEDatabase, 0x00026ba2, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLETable, 0x00026ba3, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEColumn, 0x00026ba4, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEView, 0x00026ba5, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEUserDefinedDatatype, 0x00026ba6, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEDefault, 0x00026ba7, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLERule, 0x00026ba8, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEUser, 0x00026ba9, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEGroup, 0x00026baa, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEStoredProcedure, 0x00026bab, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEIndex, 0x00026bac, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEKey, 0x00026bad, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLETrigger, 0x00026bae, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEDevice, 0x00026baf, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEAlert, 0x00026bb0, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLELogin, 0x00026bb1, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLELanguage, 0x00026bb2, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLERemoteServer, 0x00026bb3, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLERemoteLogin, 0x00026bb4, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLETask, 0x00026bb5, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLETransfer, 0x00026bb6, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEBackup, 0x00026bb7, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEHistoryFilter, 0x00026bb8, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEOperator, 0x00026bb9, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEPublication, 0x00026bba, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEArticle, 0x00026bbb, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLESubscription, 0x00026bbc, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLECheck, 0x00026bbd, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEServerGroup, 0x00026bbe, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLERegisteredServer, 0x00026bbf, 0, 0);
DEFINE_OLEGUID(CLSID_SQLOLEBulkCopy, 0x00026bc0, 0, 0);

/////////////////////////////////////////////////////////////////////////////////
// Ansi C/C++ Interfaces (IID_IA*)
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Internal base interfaces.
/////////////////////////////////////////////////////////////////////////////////
DEFINE_OLEGUID(IID_ISQLOLEInternal, 0x00026c00, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEStdObject, 0x00026c01, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEStdCollection, 0x00026c02, 0, 0);

/////////////////////////////////////////////////////////////////////////////////
//	These IIDs are used by Ansi C/C++ clients.  Their sequence is identical to that
// defined above for all IID_ interfaces (not CoClass CLSIDs).  C/C++ clients
// bind to these rather than the VBA forms above.
/////////////////////////////////////////////////////////////////////////////////
// Collections of Creatable objects.  All Creatable objects (those which have a
// Class Factory), except the Application Object, exist in collections.
DEFINE_OLEGUID(IID_IASQLOLEServers, 0x00026c11, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEDatabases, 0x00026c12, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLETables, 0x00026c13, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEColumns, 0x00026c14, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEViews, 0x00026c15, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEUserDefinedDatatypes, 0x00026c16, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEDefaults, 0x00026c17, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLERules, 0x00026c18, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEUsers, 0x00026c19, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEGroups, 0x00026c1a, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEStoredProcedures, 0x00026c1b, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEIndexes, 0x00026c1c, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEKeys, 0x00026c1d, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLETriggers, 0x00026c1e, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEDevices, 0x00026c1f, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEAlerts, 0x00026c20, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLELogins, 0x00026c21, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLELanguages, 0x00026c22, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLERemoteServers, 0x00026c23, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLERemoteLogins, 0x00026c24, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLETasks, 0x00026c25, 0, 0);
// Not used; slot preserved for numerical sequencing.  DEFINE_OLEGUID(IID_IASQLOLETransfers, 0x00026c26, 0, 0);
// Not used; slot preserved for numerical sequencing.  DEFINE_OLEGUID(IID_IASQLOLEBackups, 0x00026c27, 0, 0);
// Not used; slot preserved for numerical sequencing.  DEFINE_OLEGUID(IID_IASQLOLEHistoryFilters, 0x00026c28, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEOperators, 0x00026c29, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEPublications, 0x00026c2a, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEArticles, 0x00026c2b, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLESubscriptions, 0x00026c2c, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEChecks, 0x00026c2d, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEServerGroups, 0x00026c2e, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLERegisteredServers, 0x00026c2f, 0, 0);
// Not used; slot preserved for numerical sequencing.  DEFINE_OLEGUID(IID_IASQLOLEBulkCopys, 0x00026c30, 0, 0);

// Non-Creatable objects, and collections thereof.
DEFINE_OLEGUID(IID_IASQLOLENames, 0x00026c40, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEDBObject, 0x00026c41, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEDBOption, 0x00026c42, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEConfiguration, 0x00026c43, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEConfigValue, 0x00026c44, 0, 0);
DEFINE_SQLOLEGUID(IID_IASQLOLESubscriberInfo, 0x00027c45);
DEFINE_OLEGUID(IID_IASQLOLENameList, 0x00026c46, 0, 0);
DEFINE_SQLOLEGUID(IID_IASQLOLEExecutive, 0x00027c47);
DEFINE_SQLOLEGUID(IID_IASQLOLEQueryResults, 0x00027c48);
DEFINE_OLEGUID(IID_IASQLOLETransactionLog, 0x00026c49, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLERegistry, 0x00026c4a, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLESystemDatatypes, 0x00026c4b, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLESystemDatatype, 0x00026c4c, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEObjectList, 0x00026c4d, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEPermission, 0x00026c4e, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEIntegratedSecurity, 0x00026c4f, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEDRIDefault, 0x00026c50, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEConfigValues, 0x00026c51, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEAlertSystem, 0x00026c52, 0, 0);

//	Creatable objects.
DEFINE_SQLOLEGUID(IID_IASQLOLEApplication, 0x00027c70);

DEFINE_SQLOLEGUID(IID_IASQLOLEServer, 0x00027c71);
DEFINE_SQLOLEGUID(IID_IASQLOLEDatabase, 0x00027c72);
DEFINE_SQLOLEGUID(IID_IASQLOLETable, 0x00027c73);
DEFINE_OLEGUID(IID_IASQLOLEColumn, 0x00026c74, 0, 0);
DEFINE_SQLOLEGUID(IID_IASQLOLEView, 0x00027c75);
DEFINE_OLEGUID(IID_IASQLOLEUserDefinedDatatype, 0x00026c76, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEDefault, 0x00026c77, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLERule, 0x00026c78, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEUser, 0x00026c79, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEGroup, 0x00026c7a, 0, 0);
DEFINE_SQLOLEGUID(IID_IASQLOLEStoredProcedure, 0x00027c7b);
DEFINE_SQLOLEGUID(IID_IASQLOLEIndex, 0x00027c7c);
DEFINE_SQLOLEGUID(IID_IASQLOLEKey, 0x00027c7d);
DEFINE_OLEGUID(IID_IASQLOLETrigger, 0x00026c7e, 0, 0);
DEFINE_SQLOLEGUID(IID_IASQLOLEDevice, 0x00027c7f);
DEFINE_SQLOLEGUID(IID_IASQLOLEAlert, 0x00027c80);
DEFINE_SQLOLEGUID(IID_IASQLOLELogin, 0x00027c81);
DEFINE_OLEGUID(IID_IASQLOLELanguage, 0x00026c82, 0, 0);
DEFINE_SQLOLEGUID(IID_IASQLOLERemoteServer, 0x00027c83);
DEFINE_OLEGUID(IID_IASQLOLERemoteLogin, 0x00026c84, 0, 0);
DEFINE_SQLOLEGUID(IID_IASQLOLETask, 0x00027c85);
DEFINE_OLEGUID(IID_IASQLOLETransfer, 0x00026c86, 0, 0);
DEFINE_SQLOLEGUID(IID_IASQLOLEBackup, 0x00027c87);
DEFINE_OLEGUID(IID_IASQLOLEHistoryFilter, 0x00026c88, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEOperator, 0x00026c89, 0, 0);
DEFINE_SQLOLEGUID(IID_IASQLOLEPublication, 0x00027c8a);
DEFINE_SQLOLEGUID(IID_IASQLOLEArticle, 0x00027c8b);
DEFINE_OLEGUID(IID_IASQLOLESubscription, 0x00026c8c, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLECheck, 0x00026c8d, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLEServerGroup, 0x00026c8e, 0, 0);
DEFINE_OLEGUID(IID_IASQLOLERegisteredServer, 0x00026c8f, 0, 0);
DEFINE_SQLOLEGUID(IID_IASQLOLEBulkCopy, 0x00027c90);


/////////////////////////////////////////////////////////////////////////////////
// Wide (Unicode) C/C++ Interfaces (IID_IW*)
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Internal base interfaces.
/////////////////////////////////////////////////////////////////////////////////
DEFINE_OLEGUID(IID_IWSQLOLEStdObject, 0x00026d00, 0, 0);

/////////////////////////////////////////////////////////////////////////////////
// Collections of Creatable objects.  All Creatable objects (those which have a
// Class Factory), except the Application Object, exist in collections.
/////////////////////////////////////////////////////////////////////////////////

DEFINE_SQLOLEGUID(IID_IWSQLOLEServers, 0x00026d11);
DEFINE_SQLOLEGUID(IID_IWSQLOLEDatabases, 0x00026d12);
DEFINE_SQLOLEGUID(IID_IWSQLOLETables, 0x00026d13);
DEFINE_SQLOLEGUID(IID_IWSQLOLEColumns, 0x00026d14);
DEFINE_SQLOLEGUID(IID_IWSQLOLEViews, 0x00026d15);
DEFINE_SQLOLEGUID(IID_IWSQLOLEUserDefinedDatatypes, 0x00026d16);
DEFINE_SQLOLEGUID(IID_IWSQLOLEDefaults, 0x00026d17);
DEFINE_SQLOLEGUID(IID_IWSQLOLERules, 0x00026d18);
DEFINE_SQLOLEGUID(IID_IWSQLOLEUsers, 0x00026d19);
DEFINE_SQLOLEGUID(IID_IWSQLOLEGroups, 0x00026d1a);
DEFINE_SQLOLEGUID(IID_IWSQLOLEStoredProcedures, 0x00026d1b);
DEFINE_SQLOLEGUID(IID_IWSQLOLEIndexes, 0x00026d1c);
DEFINE_SQLOLEGUID(IID_IWSQLOLEKeys, 0x00026d1d);
DEFINE_SQLOLEGUID(IID_IWSQLOLETriggers, 0x00026d1e);
DEFINE_SQLOLEGUID(IID_IWSQLOLEDevices, 0x00026d1f);
DEFINE_SQLOLEGUID(IID_IWSQLOLEAlerts, 0x00026d20);
DEFINE_SQLOLEGUID(IID_IWSQLOLELogins, 0x00026d21);
DEFINE_SQLOLEGUID(IID_IWSQLOLELanguages, 0x00026d22);
DEFINE_SQLOLEGUID(IID_IWSQLOLERemoteServers, 0x00026d23);
DEFINE_SQLOLEGUID(IID_IWSQLOLERemoteLogins, 0x00026d24);
DEFINE_SQLOLEGUID(IID_IWSQLOLETasks, 0x00026d25);
// Not used; slot preserved for numerical sequencing.  DEFINE_SQLOLEGUID(IID_IWSQLOLETransfers, 0x00026d26);
// Not used; slot preserved for numerical sequencing.  DEFINE_SQLOLEGUID(IID_IWSQLOLEBackups, 0x00026d27);
// Not used; slot preserved for numerical sequencing.  DEFINE_SQLOLEGUID(IID_IWSQLOLEHistoryFilters, 0x00026d28);
DEFINE_SQLOLEGUID(IID_IWSQLOLEOperators, 0x00026d29);
DEFINE_SQLOLEGUID(IID_IWSQLOLEPublications, 0x00026d2a);
DEFINE_SQLOLEGUID(IID_IWSQLOLEArticles, 0x00026d2b);
DEFINE_SQLOLEGUID(IID_IWSQLOLESubscriptions, 0x00026d2c);
DEFINE_SQLOLEGUID(IID_IWSQLOLEChecks, 0x00026d2d);
DEFINE_SQLOLEGUID(IID_IWSQLOLEServerGroups, 0x00026d2e);
DEFINE_SQLOLEGUID(IID_IWSQLOLERegisteredServers, 0x00026d2f);
// Not used; slot preserved for numerical sequencing.  DEFINE_SQLOLEGUID(IID_IWSQLOLEBulkCopys, 0x00026d30);

// Non-Creatable objects, and collections thereof.
DEFINE_SQLOLEGUID(IID_IWSQLOLENames, 0x00026d40);
DEFINE_SQLOLEGUID(IID_IWSQLOLEDBObject, 0x00026d41);
DEFINE_SQLOLEGUID(IID_IWSQLOLEDBOption, 0x00026d42);
DEFINE_SQLOLEGUID(IID_IWSQLOLEConfiguration, 0x00026d43);
DEFINE_SQLOLEGUID(IID_IWSQLOLEConfigValue, 0x00026d44);
DEFINE_SQLOLEGUID(IID_IWSQLOLESubscriberInfo, 0x00027d45);
DEFINE_SQLOLEGUID(IID_IWSQLOLENameList, 0x00026d46);
DEFINE_SQLOLEGUID(IID_IWSQLOLEExecutive, 0x00027d47);
DEFINE_SQLOLEGUID(IID_IWSQLOLEQueryResults, 0x00027d48);
DEFINE_SQLOLEGUID(IID_IWSQLOLETransactionLog, 0x00026d49);
DEFINE_SQLOLEGUID(IID_IWSQLOLERegistry, 0x00026d4a);
DEFINE_SQLOLEGUID(IID_IWSQLOLESystemDatatypes, 0x00026d4b);
DEFINE_SQLOLEGUID(IID_IWSQLOLESystemDatatype, 0x00026d4c);
DEFINE_SQLOLEGUID(IID_IWSQLOLEObjectList, 0x00026d4d);
DEFINE_SQLOLEGUID(IID_IWSQLOLEPermission, 0x00026d4e);
DEFINE_SQLOLEGUID(IID_IWSQLOLEIntegratedSecurity, 0x00026d4f);
DEFINE_SQLOLEGUID(IID_IWSQLOLEDRIDefault, 0x00026d50);
DEFINE_SQLOLEGUID(IID_IWSQLOLEConfigValues, 0x00026d51);
DEFINE_SQLOLEGUID(IID_IWSQLOLEAlertSystem, 0x00026d52);

//	Creatable objects.
DEFINE_SQLOLEGUID(IID_IWSQLOLEApplication, 0x00027d70);

DEFINE_SQLOLEGUID(IID_IWSQLOLEServer, 0x00027d71);
DEFINE_SQLOLEGUID(IID_IWSQLOLEDatabase, 0x00027d72);
DEFINE_SQLOLEGUID(IID_IWSQLOLETable, 0x00027d73);
DEFINE_SQLOLEGUID(IID_IWSQLOLEColumn, 0x00026d74);
DEFINE_SQLOLEGUID(IID_IWSQLOLEView, 0x00027d75);
DEFINE_SQLOLEGUID(IID_IWSQLOLEUserDefinedDatatype, 0x00026d76);
DEFINE_SQLOLEGUID(IID_IWSQLOLEDefault, 0x00026d77);
DEFINE_SQLOLEGUID(IID_IWSQLOLERule, 0x00026d78);
DEFINE_SQLOLEGUID(IID_IWSQLOLEUser, 0x00026d79);
DEFINE_SQLOLEGUID(IID_IWSQLOLEGroup, 0x00026d7a);
DEFINE_SQLOLEGUID(IID_IWSQLOLEStoredProcedure, 0x00027d7b);
DEFINE_SQLOLEGUID(IID_IWSQLOLEIndex, 0x00027d7c);
DEFINE_SQLOLEGUID(IID_IWSQLOLEKey, 0x00027d7d);
DEFINE_SQLOLEGUID(IID_IWSQLOLETrigger, 0x00026d7e);
DEFINE_SQLOLEGUID(IID_IWSQLOLEDevice, 0x00027d7f);
DEFINE_SQLOLEGUID(IID_IWSQLOLEAlert, 0x00027d80);
DEFINE_SQLOLEGUID(IID_IWSQLOLELogin, 0x00027d81);
DEFINE_SQLOLEGUID(IID_IWSQLOLELanguage, 0x00026d82);
DEFINE_SQLOLEGUID(IID_IWSQLOLERemoteServer, 0x00027d83);
DEFINE_SQLOLEGUID(IID_IWSQLOLERemoteLogin, 0x00026d84);
DEFINE_SQLOLEGUID(IID_IWSQLOLETask, 0x00027d85);
DEFINE_SQLOLEGUID(IID_IWSQLOLETransfer, 0x00026d86);
DEFINE_SQLOLEGUID(IID_IWSQLOLEBackup, 0x00027d87);
DEFINE_SQLOLEGUID(IID_IWSQLOLEHistoryFilter, 0x00026d88);
DEFINE_SQLOLEGUID(IID_IWSQLOLEOperator, 0x00026d89);
DEFINE_SQLOLEGUID(IID_IWSQLOLEPublication, 0x00027d8a);
DEFINE_SQLOLEGUID(IID_IWSQLOLEArticle, 0x00027d8b);
DEFINE_SQLOLEGUID(IID_IWSQLOLESubscription, 0x00026d8c);
DEFINE_SQLOLEGUID(IID_IWSQLOLECheck, 0x00026d8d);
DEFINE_SQLOLEGUID(IID_IWSQLOLEServerGroup, 0x00026d8e);
DEFINE_SQLOLEGUID(IID_IWSQLOLERegisteredServer, 0x00026d8f);
DEFINE_SQLOLEGUID(IID_IWSQLOLEBulkCopy, 0x00027d90);

/////////////////////////////////////////////////////////////////////
// SQLOLE Connection Point IID's.
/////////////////////////////////////////////////////////////////////
DEFINE_SQLOLEGUID(IID_IASQLOLETransferSink, 0x00030000);
DEFINE_SQLOLEGUID(IID_IWSQLOLETransferSink, 0x00030001);
DEFINE_SQLOLEGUID(IID_IVSQLOLETransferSink, 0x00030002);
DEFINE_SQLOLEGUID(IID_IASQLOLEServerSink, 0x00030003);
DEFINE_SQLOLEGUID(IID_IWSQLOLEServerSink, 0x00030004);
DEFINE_SQLOLEGUID(IID_IVSQLOLEServerSink, 0x00030005);
DEFINE_SQLOLEGUID(IID_IASQLOLEBackupSink, 0x00030006);
DEFINE_SQLOLEGUID(IID_IWSQLOLEBackupSink, 0x00030007);
DEFINE_SQLOLEGUID(IID_IVSQLOLEBackupSink, 0x00030008);
DEFINE_SQLOLEGUID(IID_IASQLOLEBulkCopySink, 0x00030009);
DEFINE_SQLOLEGUID(IID_IWSQLOLEBulkCopySink, 0x0003000a);
DEFINE_SQLOLEGUID(IID_IVSQLOLEBulkCopySink, 0x0003000b);

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\public\wsdk\inc\crt70\sqlole.h ===
/////////////////////////////////////////////////////////////////////////////////////////
// Header file for SQLOLE C/C++ Client Component Object interfaces.
// Copyright 1994-1999 Microsoft Corporation.
/////////////////////////////////////////////////////////////////////////////////////////
#ifndef _SQLOLE_H_
#define _SQLOLE_H_

// SQLOLE versions supported for this header file.  
#define SQLOLEVERSION_600		0x00060000
#define SQLOLEVERSION_650		0x00063200

// Current version of sqlole for this header file (matches sp_MSSQLOLE_version).
#define SQLOLEVERSION_CURRENT	SQLOLEVERSION_650

/////////////////////////////////////////////////////////////////////////////////////////
// Constant enumerations.
/////////////////////////////////////////////////////////////////////////////////////////
#ifndef _SQLOLE_CONSTANTS_
#define _SQLOLE_CONSTANTS_

#ifdef _SQLOLE_ODL_		// Generate helpids if in ODL file.
#define SQLOLE_HELPID(id) [helpcontext(H_##id)]
#else
#define SQLOLE_HELPID(id)
#endif

typedef SQLOLE_HELPID(SQLOLE_OBJECT_TYPE) enum {
	SQLOLEObj_Unknown = 16384,		// Make it the only bit set
	SQLOLEObj_Application = 0,

	// Database objects, value is power(2, sysobjects.sysstat & 0x0f), plus UDDTs in 0.
	// These values can be bitmasked together for object listings.
	SQLOLEObj_UserDefinedDatatype = 1,
	SQLOLEObj_SystemTable = 2,
	SQLOLEObj_View = 4,
	SQLOLEObj_UserTable = 8,
	SQLOLEObj_StoredProcedure = 16,
	SQLOLEObj_Default = 64,
	SQLOLEObj_Rule = 128,
	SQLOLEObj_Trigger = 256,
	SQLOLEObj_AllDatabaseUserObjects = 0x01fd,
	SQLOLEObj_AllDatabaseObjects = 0x01ff,

	// Other Database objects (not in sysobjects)
	SQLOLEObj_SystemDatatype = 10021,
	SQLOLEObj_User = 10022,
	SQLOLEObj_Group = 10023,
	SQLOLEObj_Index = 10024,
	SQLOLEObj_Key = 10025,
	SQLOLEObj_Column = 10026,
	SQLOLEObj_DBObject = 10027,
	SQLOLEObj_DBOption = 10028,
	SQLOLEObj_ProcedureParameter = 10029,
	SQLOLEObj_Permission = 10033,
	SQLOLEObj_IntegratedSecurity = 10034,
	SQLOLEObj_Check = 10035,
	SQLOLEObj_DRIDefault = 10036,

	// Objects not in databases.
	SQLOLEObj_SQLServer = 10050,
	SQLOLEObj_Database = 10051,
	SQLOLEObj_Device = 10052,
	SQLOLEObj_Login = 10054,
	SQLOLEObj_Language = 10055,
	SQLOLEObj_RemoteServer = 10056,
	SQLOLEObj_RemoteLogin = 10057,

	SQLOLEObj_Configuration = 10059,
	SQLOLEObj_ConfigValue = 10060,
	SQLOLEObj_AlertSystem = 10061,
	SQLOLEObj_Executive = 10062,
	SQLOLEObj_QueryResults = 10063,
	SQLOLEObj_TransactionLog = 10064,
	SQLOLEObj_Registry = 10065,
	SQLOLEObj_Transfer = 10066,
	SQLOLEObj_Backup = 10067,
	SQLOLEObj_Task = 10068,
	SQLOLEObj_Alert = 10069,
	SQLOLEObj_Operator = 10070,
	SQLOLEObj_HistoryFilter = 10071,
	SQLOLEObj_Publication = 10072,
	SQLOLEObj_Article = 10073,
	SQLOLEObj_Subscription = 10074,
	SQLOLEObj_SubscriberInfo = 10075,
	SQLOLEObj_AutoProperty = 10076,		// Automation property or properties collection.
	SQLOLEObj_ServerGroup = 10077,
	SQLOLEObj_RegisteredServer = 10078,
	SQLOLEObj_BulkCopy = 10079
} SQLOLE_OBJECT_TYPE;

typedef SQLOLE_HELPID(SQLOLE_KEY_TYPE) enum {
	SQLOLEKey_Unknown = 0,
	SQLOLEKey_Primary = 1,
	SQLOLEKey_Unique = 2,
	SQLOLEKey_Foreign = 3
} SQLOLE_KEY_TYPE;

typedef SQLOLE_HELPID(SQLOLE_DEVICE_TYPE) enum {
	SQLOLEDevice_Unknown = 100,
	SQLOLEDevice_Database = 0,
	SQLOLEDevice_DiskDump = 2,
	SQLOLEDevice_FloppyADump = 3,
	SQLOLEDevice_FloppyBDump = 4,
	SQLOLEDevice_TapeDump = 5,
	SQLOLEDevice_PipeDump = 6,
	SQLOLEDevice_CDROM = 7
} SQLOLE_DEVICE_TYPE;

typedef SQLOLE_HELPID(SQLOLE_MIRROR_TYPE) enum {
	// Mirror states:
	// 	None = no mirror specified
	//	Inactive = mirror specified but not active
	//  RunningOnMirror = mirror device is functioning as the active device (after SwitchToMirrorTemp)
	//	Active = mirror is specified and actively mirroring the device.
	SQLOLEMirror_None = 0,
	SQLOLEMirror_Inactive = 64,
	SQLOLEMirror_RunningOnMirror = 320,
	SQLOLEMirror_Active = 576
} SQLOLE_MIRROR_TYPE;

typedef SQLOLE_HELPID(SQLOLE_PRIVILEGE_TYPE) enum {
	SQLOLEPriv_Unknown = 0,

	// Privilege values, different from sysprotects as we need to bitmask.
	// Object privileges.
	SQLOLEPriv_Select = 1,
	SQLOLEPriv_Insert = 2,
	SQLOLEPriv_Update = 4,
	SQLOLEPriv_Delete = 8,
	SQLOLEPriv_Execute = 16,
	SQLOLEPriv_References = 32,
	SQLOLEPriv_AllObjectPrivs = 63,
	
	// Database (statement) privileges.
	SQLOLEPriv_CreateTable = 128,
	SQLOLEPriv_CreateDatabase = 256,
	SQLOLEPriv_CreateView = 512,
	SQLOLEPriv_CreateProcedure = 1024,
	SQLOLEPriv_DumpDatabase = 2048,
	SQLOLEPriv_CreateDefault = 4096,
	SQLOLEPriv_DumpTransaction = 8192,
	SQLOLEPriv_CreateRule = 16384,
	SQLOLEPriv_AllDatabasePrivs = 32640
} SQLOLE_PRIVILEGE_TYPE;

typedef SQLOLE_HELPID(SQLOLE_PROCEDURE_TYPE) enum {
	SQLOLEProc_Unknown = 0,
	SQLOLEProc_Standard = 1,
	SQLOLEProc_Extended = 2,
	SQLOLEProc_Macro = 3,
	SQLOLEProc_ReplicationFilter = 4
} SQLOLE_PROCEDURE_TYPE;

// Trigger types may be OR'd together.
typedef SQLOLE_HELPID(SQLOLE_TRIGGER_TYPE) enum {
	SQLOLETrig_Unknown = 0,
	SQLOLETrig_Insert = 1,
	SQLOLETrig_Update = 2,
	SQLOLETrig_Delete = 4,
	SQLOLETrig_All = 7
} SQLOLE_TRIGGER_TYPE;

typedef SQLOLE_HELPID(SQLOLE_INDEX_TYPE) enum {							// SQLOLE Internal:  sync with ntinc\index.h
	// Index type values as in sysindexes.status.
	SQLOLEIndex_Default = 0x0000,
	SQLOLEIndex_IgnoreDupKey = 0x0001,
	SQLOLEIndex_Unique = 0x0002,
	SQLOLEIndex_IgnoreDupRow = 0x0004,
	SQLOLEIndex_Clustered = 0x0010,
	SQLOLEIndex_AllowDupRow = 0x0040,
	SQLOLEIndex_SortedData = 0x0200,
	SQLOLEIndex_SortedDataReorg = 0x2000,	// 6.0-only; sorted-data with reorganization
	SQLOLEIndex_Valid = 0x2257,				// Any of foregoing (writable) types
	SQLOLEIndex_DRIPrimaryKey = 0x0800,		// 6.0-only, readonly; DRI-generated types
	SQLOLEIndex_DRIUniqueKey = 0x1000,
	SQLOLEIndex_DRIIndex = 0x1800			// Index implements DRI (DRIPrimaryKey | DRIUniqueKey)
} SQLOLE_INDEX_TYPE;

typedef SQLOLE_HELPID(SQLOLE_QUERY_DATATYPE) enum {
   // Indexed as per ..\common\inc\sql.hpp and sqlfront.h datatype constants.
	SQLOLE_DTypeUnknown = 0,
	SQLOLE_DTypeChar 	= 0x2f,
	SQLOLE_DTypeText 	= 0x23,
	SQLOLE_DTypeVarchar 	= 0x27,
	SQLOLE_DTypeVarBinary= 0x25,
	SQLOLE_DTypeBinary 	= 0x2d,
	SQLOLE_DTypeImage 	= 0x22,
	SQLOLE_DTypeFloat4 	= 0x3b,
	SQLOLE_DTypeFloat8 	= 0x3e,
	SQLOLE_DTypeInt1 	= 0x30,
	SQLOLE_DTypeInt2 	= 0x34,
	SQLOLE_DTypeInt4		= 0x38,
	SQLOLE_DTypeMoney4	= 0x7a,
	SQLOLE_DTypeMoney	= 0x3c,
	SQLOLE_DTypeDateTime	= 0x3d,
	SQLOLE_DTypeDateTime4= 0x3a,
	SQLOLE_DTypeBit		= 0x32
} SQLOLE_QUERY_DATATYPE;

typedef SQLOLE_HELPID(SQLOLE_AUDIT_TYPE) enum {
	SQLOLEAudit_None = 0,
	SQLOLEAudit_Success = 1,
	SQLOLEAudit_Failure = 2,
	SQLOLEAudit_All = 3
} SQLOLE_AUDIT_TYPE;

typedef SQLOLE_HELPID(SQLOLE_SECURITY_TYPE) enum {
	SQLOLESecurity_Min = 0,
	SQLOLESecurity_Normal = 0,
	SQLOLESecurity_Integrated = 1,
	SQLOLESecurity_Mixed = 2,
	SQLOLESecurity_Max = 2
} SQLOLE_SECURITY_TYPE;

typedef SQLOLE_HELPID(SQLOLE_MEDIA_TYPE) enum {
	SQLOLEMedia_Floppy = 1,
	SQLOLEMedia_FixedDisk = 2,
	SQLOLEMedia_Tape = 4,
	SQLOLEMedia_CDROM = 8,
	SQLOLEMedia_All = 15
} SQLOLE_MEDIA_TYPE;

typedef SQLOLE_HELPID(SQLOLE_PERFMON_TYPE) enum {
	SQLOLEPerfmon_None = 1000,					// No perfmon integration
	SQLOLEPerfmon_MinSet = 0,
	SQLOLEPerfmon_Continuous = 0,
	SQLOLEPerfmon_OnDemand = 1,
	SQLOLEPerfmon_MaxSet = 1
} SQLOLE_PERFMON_TYPE;

typedef SQLOLE_HELPID(SQLOLE_STARTSRV_TYPE) enum {
	SQLOLEStart_NoServiceControl = 1,
	SQLOLEStart_NTErrorLogging = 2,
	SQLOLEStart_SingleUser = 4,
	SQLOLEStart_StartAndConnect = 8,
	SQLOLEStart_RealTime = 16,
	SQLOLEStart_Defaults = 10					// ServiceControl, StartAndConnect, and NTErrorLogging
} SQLOLE_STARTSRV_TYPE;

typedef SQLOLE_HELPID(SQLOLE_DBSTATUS_TYPE) enum {
	SQLOLEDBStat_Normal = 0x0000,
	SQLOLEDBStat_Loading = 0x0020,
	SQLOLEDBStat_Recovering = 0x00c0,			// 0x40 | 0x80
	SQLOLEDBStat_Suspect = 0x0100,
	SQLOLEDBStat_Offline = 0x0200,
	SQLOLEDBStat_Inaccessible = 0x03e0,			// Loading | Recovering | Suspect | Offline
	SQLOLEDBStat_EmergencyMode = 0x8000,
	SQLOLEDBStat_All = 0x83e0
} SQLOLE_DBSTATUS_TYPE;

typedef SQLOLE_HELPID(SQLOLE_COPYDATA_TYPE) enum {
	SQLOLECopyData_False = 0,
	SQLOLECopyData_Replace = 1,
	SQLOLECopyData_Append = 2
} SQLOLE_COPYDATA_TYPE;

typedef SQLOLE_HELPID(SQLOLE_DATAFILE_TYPE) enum {
	// Bulk-copy datafile options (Table/View.Export and Table.Import).  These are mutually exclusive.
	SQLOLEDataFile_CommaDelimitedChar = 		0x00000001,	// ColumnDelimiter == Comma, RowDelimiter == <CRLF>
	SQLOLEDataFile_Default = 					0x00000001,	// Default == csv
	SQLOLEDataFile_TabDelimitedChar = 			0x00000002,	// ColumnDelimiter == <TAB>, RowDelimiter == <CRLF>
	SQLOLEDataFile_SpecialDelimitedChar = 		0x00000003,	// Set BulkCopy.ColumnDelimiter and .RowDelimiter
	SQLOLEDataFile_NativeFormat = 				0x00000004,	// Use native datatype formats
	SQLOLEDataFile_UseFormatFile = 				0x00000005,	// Use an existing format file.
} SQLOLE_DATAFILE_TYPE;

typedef SQLOLE_HELPID(SQLOLE_STATUSINFO_TYPE) enum {
	SQLOLEStatInfo_Unknown = 0,					// Initialization value, not valid as a parameter
	SQLOLEStatInfo_DatabaseStatus = 0x0001,		// Database.Status
	SQLOLEStatInfo_DatabaseSpace = 0x0002,		// Database.SpaceAvailable
	SQLOLEStatInfo_AutoVerifyConnection = 0x0004,	// Server.VerifyConnection done automatically.
	SQLOLEStatInfo_All = 0x0007					// All the foregoing
} SQLOLE_STATUSINFO_TYPE;

typedef SQLOLE_HELPID(SQLOLE_SCRIPT_TYPE) enum {
	// What's included in the Script method output.
	SQLOLEScript_Default = 0x0004,				// Object creation only
	SQLOLEScript_Drops = 0x0001,				// Include object drops
	SQLOLEScript_ObjectPermissions = 0x0002,	// Include object permissions
	SQLOLEScript_PrimaryObject = 0x0004,		// Include object creation
	SQLOLEScript_ClusteredIndexes = 0x0008,		// Include clustered index creation (table only)
	SQLOLEScript_Triggers = 0x0010,				// Include trigger creation (table only)
	SQLOLEScript_DatabasePermissions = 0x0020,	// Database (statement) permissions
	SQLOLEScript_Permissions = 0x0022,			// Both database and object permissions (for scripting users).
	SQLOLEScript_ToFileOnly = 0x0040,			// If not set, a string is returned (if file nonnull, both are done)
	SQLOLEScript_Bindings = 0x0080,				// Include rule/default bindings (table only)
	SQLOLEScript_AppendToFile = 0x0100,			// Append to output file if it already exists.
	SQLOLEScript_NoDRI = 0x0200,				// Do not include DRI (intended for use if targeting pre-6.0 server with scripts)
	SQLOLEScript_UDDTsToBaseType = 0x0400,		// Convert UserDefinedDatatypes to base type when creating columns (table only)
	SQLOLEScript_42Syntax = 0x0800,				// Use SQL 4.2x syntax (convert numerics, skip identity, etc.)
	SQLOLEScript_ODBCSyntax = 0x0E00,			// Use ODBC syntax (strip SQL-specifics); includes NoDRI, UDDTsToBaseTypes.
	SQLOLEScript_IncludeIfNotExists = 0x1000,	// Include "if not exists" on object creation.
	SQLOLEScript_NonClusteredIndexes = 0x2000,	// Include nonclustered index creation (table only)
	SQLOLEScript_Indexes = 0x12008,				// Include all index creation (table only)
	SQLOLEScript_Aliases = 0x4000,				// For users, script aliases
	SQLOLEScript_NoCommandTerm = 0x8000,		// Do not append "GO" to commands.
	SQLOLEScript_DRIIndexes = 0x10000,			// Script DRI-generated indexes as indexes if NoDRI is specified.
	SQLOLEScript_IncludeHeaders = 0x20000,		// Include descriptive header in individual object script output.
	SQLOLEScript_OwnerQualify = 0x40000,		// Owner-qualify DROP statements (and CREATE where possible).
	SQLOLEScript_TimestampToBinary = 0x80000,	// Convert timestamp columns to binary(8) (for replication, etc.).
	SQLOLEScript_SortedData = 0x100000, 		// If the index or constraint was clustered, append sorted_data
	SQLOLEScript_SortedDataReorg = 0x200000,	// Same as SQLOLEScript_SortedData, but Reorg is used to preserve fillfactor.

	SQLOLEScript_TransferDefault = 0x670ff,		//The default script type for Transfer. This is combination of following flags:
												//SQLOLEScript_PrimaryObject | SQLOLEScript_Bindings | SQLOLEScript_ClusteredIndexes | SQLOLEScript_NonClusteredIndexes | 
												//SQLOLEScript_Triggers| SQLOLEScript_ToFileOnly|SQLOLEScript_Permissions| SQLOLEScript_IncludeHeaders|
												//SQLOLEScript_Aliases|SQLOLEScript_IncludeIfNotExists|SQLOLEScript_OwnerQualify

	// DRI-restrictive flags.  These may be combined with PrimaryObject as desired.
	// These are to be used to include or exclude specific DRI components, such
	// as for multi-pass scripting.
	SQLOLEScript_DRI_NonClustered = 	0x00400000,
	SQLOLEScript_DRI_Clustered = 		0x00800000,
	SQLOLEScript_DRI_Checks = 			0x01000000,
	SQLOLEScript_DRI_Defaults = 		0x02000000,
	SQLOLEScript_DRI_UniqueKeys = 		0x04000000,
	SQLOLEScript_DRI_ForeignKeys = 		0x08000000,
	SQLOLEScript_DRI_PrimaryKey = 		0x10000000,
	SQLOLEScript_DRI_AllKeys =			0x1c000000, // Bitmask of all key types (PK, FK, Unique).
	SQLOLEScript_DRI_AllConstraints = 	0x1f000000,	// Bitmask of all constraint types (PK, FK, Unique, Check, Default).
	SQLOLEScript_DRI_All = 				0x1fc00000,	// All the foregoing (specifying this and not PrimaryObject gets just DRI output).

	SQLOLEScript_DRIWithNoCheck = 		0x20000000,	// Script DRI with nocheck (not included in _DRI_All).
	SQLOLEScript_NoIdentity = 			0x40000000,	// Script with no IDENTITY attribute (e.g. for Replication).

	// Scripts with quoted identifiers. Also will cause Transfer to SET QUOTED_IDENTIFIER ON on the destination.
	SQLOLEScript_UseQuotedIdentifiers =	0x80000000
} SQLOLE_SCRIPT_TYPE;

typedef SQLOLE_HELPID(SQLOLE_XFRSCRIPTMODE_TYPE) enum {
	// How many files the XFR Script is to written to.
	SQLOLEXfrFile_Default = 0x0001,	
	SQLOLEXfrFile_SummaryFiles	= 0x0001,		// One files per class of objects transferred/dropped
	SQLOLEXfrFile_SingleFile	= 0x0002,		// All scripts go to same file
	SQLOLEXfrFile_SingleFilePerObject = 0x0004	// One file per object
} SQLOLE_XFRSCRIPTMODE_TYPE;

typedef SQLOLE_HELPID(SQLOLE_DEPENDENCY_TYPE) enum {
	SQLOLEDep_Parents = 0,						// Default:  return all parents of input object
	SQLOLEDep_FullHierarchy = 0x10000,			// Return full hierarchy; multiple rows of object and parents/children
	SQLOLEDep_OrderDescending = 0x20000,		// Order return in descending order
	SQLOLEDep_Children = 0x40000,				// Return children of input object
	SQLOLEDep_ReturnInputObject = 0x80000,		// Include input object in the return set
	SQLOLEDep_FirstLevelOnly = 0x100000,		// Return only immediate parents/children
	SQLOLEDep_DRIOnly = 0x200000,				// Return DRI dependencies only.
	SQLOLEDep_Valid = 0x3f0000					// All valid options.
} SQLOLE_DEPENDENCY_TYPE;

typedef SQLOLE_HELPID(SQLOLE_OBJSORT_TYPE) enum {
	SQLOLEObjSort_Name = 0,
	SQLOLEObjSort_Type = 1,
	SQLOLEObjSort_Owner = 2,
	SQLOLEObjSort_Date = 3
} SQLOLE_OBJSORT_TYPE;

// May be bitmasked.
typedef SQLOLE_HELPID(SQLOLE_COMPLETION_TYPE) enum {
	SQLOLEComp_Unknown = 0x1000,		// Only bit set
	SQLOLEComp_None = 0x0000,
	SQLOLEComp_Success = 0x0001,
	SQLOLEComp_Failure = 0x0002,
	SQLOLEComp_Always = 0x0003,
	SQLOLEComp_Running = 0x0004,
	SQLOLEComp_Aborted = 0x0008,
	SQLOLEComp_Skipped = 0x0010,
	SQLOLEComp_All = 0x001f
} SQLOLE_COMPLETION_TYPE;

typedef SQLOLE_HELPID(SQLOLE_EVENT_TYPE) enum {
	SQLOLEEvent_Unknown = 0x0000,
	SQLOLEEvent_Info = 0x0001,
	SQLOLEEvent_Warning = 0x0002,
	SQLOLEEvent_Error = 0x0004,
	SQLOLEEvent_AuditSuccess = 0x0008,
	SQLOLEEvent_AuditFailure = 0x0010,
	SQLOLEEvent_All = 0x001f
} SQLOLE_EVENT_TYPE;

typedef SQLOLE_HELPID(SQLOLE_SVCSTATUS_TYPE) enum {
	SQLOLESvc_Unknown = 0,
	SQLOLESvc_Running = 1,
	SQLOLESvc_Paused = 2,
	SQLOLESvc_Stopped = 3,
	SQLOLESvc_Starting = 4,
	SQLOLESvc_Stopping = 5,
	SQLOLESvc_Continuing = 6,
	SQLOLESvc_Pausing = 7
} SQLOLE_SVCSTATUS_TYPE;

typedef SQLOLE_HELPID(SQLOLE_FREQUENCY_TYPE) enum {							// SQLOLE Internal:  sync with qsched.h
	SQLOLEFreq_Unknown = 0x0000,
	SQLOLEFreq_OneTime = 0x0001,
	SQLOLEFreq_OnDemand = 0x0002,
	SQLOLEFreq_Daily = 0x0004,
	SQLOLEFreq_Weekly = 0x0008,
	SQLOLEFreq_Monthly = 0x0010,
	SQLOLEFreq_MonthlyRelative = 0x0020,
	SQLOLEFreq_Autostart = 0x0040,
	SQLOLEFreq_Recurring = 0x007c,		// Any recurring type
	SQLOLEFreq_Valid = 0x007f			// All valid frequency types
} SQLOLE_FREQUENCY_TYPE;

typedef SQLOLE_HELPID(SQLOLE_FREQSUB_TYPE) enum {							// SQLOLE Internal:  sync with qsched.h
	SQLOLEFreqSub_Unknown = 0x0000,
	SQLOLEFreqSub_Once = 0x0001,
	SQLOLEFreqSub_Minute = 0x0004,
	SQLOLEFreqSub_Hour = 0x0008,
	SQLOLEFreqSub_Valid = 0x000d		// All valid frequency subtypes
} SQLOLE_FREQSUB_TYPE;

typedef SQLOLE_HELPID(SQLOLE_FREQRELATIVE_TYPE) enum {						// SQLOLE Internal:  sync with qsched.h
	SQLOLEFreqRel_Unknown = 0x0000,
	SQLOLEFreqRel_First = 0x0001,
	SQLOLEFreqRel_Second = 0x0002,
	SQLOLEFreqRel_Third = 0x0004,
	SQLOLEFreqRel_Fourth = 0x0008,
	SQLOLEFreqRel_Last = 0x0010,
	SQLOLEFreqRel_Valid = 0x001f		// All valid Relative frequencies.
} SQLOLE_FREQRELATIVE_TYPE;

typedef SQLOLE_HELPID(SQLOLE_WEEKDAY_TYPE) enum {							// SQLOLE Internal:  sync with qsched.h
	// Specify for SQLOLEFreq_Weekly; bitmask
	SQLOLEWeek_Unknown = 0x0000,
	SQLOLEWeek_Sunday = 0x0001,
	SQLOLEWeek_Monday = 0x0002,
	SQLOLEWeek_Tuesday = 0x0004,
	SQLOLEWeek_Wednesday = 0x0008,
	SQLOLEWeek_Thursday = 0x0010,
	SQLOLEWeek_Friday = 0x0020,
	SQLOLEWeek_Saturday = 0x0040,
	SQLOLEWeek_WeekDays = 0x003e,		// Monday - Friday
	SQLOLEWeek_WeekEnds = 0x0041,		// Saturday - Sunday
	SQLOLEWeek_EveryDay = 0x007f
} SQLOLE_WEEKDAY_TYPE;

typedef SQLOLE_HELPID(SQLOLE_MONTHDAY_TYPE) enum {							// SQLOLE Internal:  sync with qsched.h
	// Specify for SQLOLEFreq_MonthlyRelative; single-value.
	// This is the relative interval SQLOLE_FREQRELATIVE_TYPE;
	// e.g., on the xth Monday of the month.
	SQLOLEMonth_Unknown = 0,
	SQLOLEMonth_MinValid = 1,
	SQLOLEMonth_Sunday = 1,
	SQLOLEMonth_Monday = 2,
	SQLOLEMonth_Tuesday = 3,
	SQLOLEMonth_Wednesday = 4,
	SQLOLEMonth_Thursday = 5,
	SQLOLEMonth_Friday = 6,
	SQLOLEMonth_Saturday = 7,
	SQLOLEMonth_Day = 8,				// xth day
	SQLOLEMonth_WeekDay = 9,			// xth weekday
	SQLOLEMonth_WeekEndDay = 10,		// xth weekendday
	SQLOLEMonth_MaxValid = 10
} SQLOLE_MONTHDAY_TYPE;

typedef SQLOLE_HELPID(SQLOLE_SRVOPTION_TYPE) enum {
	SQLOLESrvOpt_Unknown = 0x0000,
	SQLOLESrvOpt_RPC = 0x0001,
	SQLOLESrvOpt_Publisher = 0x0002,
	SQLOLESrvOpt_Subscriber = 0x0004,
	SQLOLESrvOpt_Distributor = 0x0008,
	SQLOLESrvOpt_DistPublisher = 0x0010,	// Separate from Publisher and Distributor; dpub bit set
	SQLOLESrvOpt_ODBCDatasource = 0x0020,	// Server is an ODBC datasource
	SQLOLESrvOpt_Valid = 0x003f
} SQLOLE_SRVOPTION_TYPE;

typedef SQLOLE_HELPID(SQLOLE_SUBSCRIBERINFO_TYPE) enum {
	SQLOLESubInfo_SQLServer = 0x00000000,		// Current version of MS SQLServer.
	SQLOLESubInfo_ODBCDatasource = 0x00000001	// ODBC Datasource
} SQLOLE_SUBSCRIBERINFO_TYPE;

typedef SQLOLE_HELPID(SQLOLE_TABLEATT_TYPE) enum {
	// Values from sysobjects.category.
	SQLOLETabAtt_Identity = 	0x0001,		// Table has an identity column
	SQLOLETabAtt_SystemObject =	0x0002,		// Table is a Microsoft system-required object
	SQLOLETabAtt_ForeignKey = 	0x0004, 	// Table has a foreign key
	SQLOLETabAtt_Referenced = 	0x0008,		// Table is referenced by another table's foreign key
	SQLOLETabAtt_Published = 	0x0020,		// Table is published
	SQLOLETabAtt_Replicated =	0x0040,		// Table has an active subscriber
	SQLOLETabAtt_Check = 		0x0080,		// Table has a check constraint
	SQLOLETabAtt_Replica = 		0x0100,		// Table is actively subscribed to a publisher
	SQLOLETabAtt_PrimaryKey = 	0x0200,		// Table has a primary key
	SQLOLETabAtt_Unique = 		0x0400,		// Table has a unique constraint
	SQLOLETabAtt_Default = 		0x0800,		// Table has a DRI default
	SQLOLETabAtt_ReplCheck = 	0x1000,		// Table has a check constraint that excludes replication
	SQLOLETabAtt_HasConstraint =0x1c84		// Table has at least one DRI constraint
} SQLOLE_TABLEATT_TYPE;

typedef SQLOLE_HELPID(SQLOLE_INITIALSYNC_TYPE) enum {
	SQLOLEInitSync_Unknown = 10,     // Pick your favourite invalid number
	SQLOLEInitSync_Min = 0,
	SQLOLEInitSync_BCPNative = 0,
	SQLOLEInitSync_BCPChar = 1,
	SQLOLEInitSync_TableDumpLoad = 2,
	SQLOLEInitSync_Max = 2
} SQLOLE_INITIALSYNC_TYPE;

typedef SQLOLE_HELPID(SQLOLE_REPFREQ_TYPE) enum {
	SQLOLERepFreq_Unknown = 1000,		// Tinyint out-of-range
	SQLOLERepFreq_Min = 0,
	SQLOLERepFreq_Continuous = 0,
	SQLOLERepFreq_Snapshot = 1,
	SQLOLERepFreq_Max = 1
} SQLOLE_REPFREQ_TYPE;

typedef SQLOLE_HELPID(SQLOLE_REPLICATION_TYPE) enum {
	SQLOLERep_Unknown = 0x100, 						// Tinyint out-of-range
	SQLOLERep_LogBased = 0x0001,					// Base for all LogBased replication types.
	SQLOLERep_ManualFilterProc = 0x0002,			// Bit for manually created (not auto-generated) filter proc
	SQLOLERep_LogBasedManualFilterProc = 0x0003,	// Log based, with manually created sync view.
	SQLOLERep_ManualSyncView = 0x0004,				// Bit for manually created (not auto-generated) filter proc.
	SQLOLERep_LogBasedManualSyncView = 0x0005,		// Log based, with manually created filter proc.
	SQLOLERep_LogBasedManualBoth = 0x0007,			// Log based, with manually created sync view and filter proc.
	SQLOLERep_Valid = 7
} SQLOLE_REPLICATION_TYPE;

typedef SQLOLE_HELPID(SQLOLE_SUBSYNC_TYPE) enum {
	SQLOLESubSync_Unknown = 1000,		// Tinyint out-of-range
	SQLOLESubSync_Min = 0,
	SQLOLESubSync_Manual = 0,
	SQLOLESubSync_Auto = 1,
	SQLOLESubSync_Default = 1,			// Auto is default.
	SQLOLESubSync_None = 2,
	SQLOLESubSync_Max = 2
} SQLOLE_SUBSYNC_TYPE;

typedef SQLOLE_HELPID(SQLOLE_PREARTICLE_TYPE) enum {
	// Article pre-creation methods on destination table.
	SQLOLEPreArt_Min = 0,
	SQLOLEPreArt_None = 0,				// Do nothing
	SQLOLEPreArt_DropTable = 1,			// Drop and re-create table
	SQLOLEPreArt_DeleteRows = 2,		// Delete rows (logged)
	SQLOLEPreArt_TruncateTable = 3,		// Truncate table (nonlogged)
	SQLOLEPreArt_Max = 3
} SQLOLE_PREARTICLE_TYPE;

typedef SQLOLE_HELPID(SQLOLE_SUBSTATUS_TYPE) enum {
	SQLOLESubStat_Unknown = 1000,		// Tinyint out-of-range
	SQLOLESubStat_Default = 1000,		// Use default
	SQLOLESubStat_Min = 0,
	SQLOLESubStat_Inactive = 0,
	SQLOLESubStat_Unsynced = 1,
	SQLOLESubStat_Active = 2,
	SQLOLESubStat_Max = 2
} SQLOLE_SUBSTATUS_TYPE;

typedef SQLOLE_HELPID(SQLOLE_RUNPRIORITY_TYPE) enum {
	// These must match the NT ThreadPriority values.
	SQLOLERunPri_Unknown = 100,			// Invalid ThreadPriority
	SQLOLERunPri_Min = 1,
	SQLOLERunPri_Idle = -15,
	SQLOLERunPri_Lowest = -2,
	SQLOLERunPri_BelowNormal = -1,
	SQLOLERunPri_Normal = 0,
	SQLOLERunPri_AboveNormal = 1,
	SQLOLERunPri_Highest = 2,
	SQLOLERunPri_TimeCritical = 15,
} SQLOLE_RUNPRIORITY_TYPE;

typedef SQLOLE_HELPID(SQLOLE_INTSECLOGIN_TYPE) enum {
	SQLOLEIntSecLogin_Unknown = 0,
	SQLOLEIntSecLogin_Min = 1,
	SQLOLEIntSecLogin_Admin = 1,
	SQLOLEIntSecLogin_User = 2,
	SQLOLEIntSecLogin_Replication = 3,
	SQLOLEIntSecLogin_Max = 3
} SQLOLE_INTSECLOGIN_TYPE;

typedef SQLOLE_HELPID(SQLOLE_NOTIFY_TYPE) enum {
	SQLOLENotify_None = 0x0000,
	SQLOLENotify_Email = 0x0001,
	SQLOLENotify_Pager = 0x0002,
	SQLOLENotify_Both = 0x0003,
	SQLOLENotify_Valid = 0x0003
} SQLOLE_NOTIFY_TYPE;

typedef SQLOLE_HELPID(SQLOLE_ENUMNOTIFY_TYPE) enum {
	SQLOLEEnumNotify_Min = 1,
	SQLOLEEnumNotify_All = 1,			// All operators/alerts
	SQLOLEEnumNotify_Actual = 2,		// Only operators/alerts receiving notifications for this alert/operator
	SQLOLEEnumNotify_Target = 3,		// Specifically named target alert/operator(s)
	SQLOLEEnumNotify_Max = 3
} SQLOLE_ENUMNOTIFY_TYPE;

typedef SQLOLE_HELPID(SQLOLE_VERIFYCONN_TYPE) enum {
	SQLOLEConn_LastState = 0x0001,			// State of conn at end of last operation.
	SQLOLEConn_CurrentState = 0x0002,		// Actual current state (checks pipe, etc.)
	SQLOLEConn_ReconnectIfDead = 0x0006,	// Reconnect if we've been disconnected (0x0004 | CurrentState)..
	SQLOLEConn_Valid = 0x0007				// All valid conn operations.
} SQLOLE_VERIFYCONN_TYPE;

typedef SQLOLE_HELPID(SQLOLE_EXEC_TYPE) enum {
	// For ExecuteImmediate, tells how to handle multi-batch commands.
	SQLOLEExec_Default = 0x0000,			// None of the following
	SQLOLEExec_NoCommandTerm = 0x0001,		// No command-terminator parsing (i.e. don't check for "GO"; exec as single batch)
	SQLOLEExec_ContinueOnError = 0x0002,	// Continue batch on all but broken-connection errors.
	SQLOLEExec_NoExec = 0x0004,				// SET NOEXEC ON/OFF
	SQLOLEExec_ParseOnly = 0x0008			// SET PARSEONLY ON/OFF
} SQLOLE_EXEC_TYPE;

typedef SQLOLE_HELPID(SQLOLE_CONFIGVALUE_TYPE) enum {
	SQLOLEConfig_RecoveryInterval = 101,
	SQLOLEConfig_AllowUpdates = 102,
	SQLOLEConfig_UserConnections = 103,
	SQLOLEConfig_Memory = 104,
	SQLOLEConfig_OpenDatabases = 105,
	SQLOLEConfig_Locks = 106,
	SQLOLEConfig_OpenObjects = 107,
	SQLOLEConfig_ProcedureCache = 108,
	SQLOLEConfig_FillFactor = 109,
	SQLOLEConfig_DatabaseSize = 111,
	SQLOLEConfig_MediaRetention = 112,
	SQLOLEConfig_RecoveryFlags = 113,
	SQLOLEConfig_NestedTriggers = 115,
	SQLOLEConfig_RemoteAccess = 117,
	SQLOLEConfig_DefaultLanguage = 124,
	SQLOLEConfig_LanguageInCache = 125,
	SQLOLEConfig_TempdbInRamMB = 501,
	SQLOLEConfig_MaxAsyncIO = 502,
	SQLOLEConfig_MaxWorkerThreads = 503,
	SQLOLEConfig_NetworkPacketSize = 505,
	SQLOLEConfig_RAWorkerThreads = 508,
	SQLOLEConfig_ShowAdvancedOption = 518,
	SQLOLEConfig_LEThresholdPercent = 521,
	SQLOLEConfig_LEThresholdMaximum = 523,
	SQLOLEConfig_BackupThreads = 540,
	SQLOLEConfig_BackupBufferSize = 541,
	SQLOLEConfig_RemoteProcTrans = 542,
	SQLOLEConfig_RemoteConnTimeout = 543,
	SQLOLEConfig_TimeSlice = 1110,
	SQLOLEConfig_RemoteSites = 1119,
	SQLOLEConfig_DefaultSortorderId = 1123,
	SQLOLEConfig_HashBuckets = 1504,
	SQLOLEConfig_SortPages = 1505,
	SQLOLEConfig_MaxLazywriteIO = 1506,
	SQLOLEConfig_RASlotsPerThread = 1509,
	SQLOLEConfig_RAPrefetches = 1510,
	SQLOLEConfig_RADelay = 1511,
	SQLOLEConfig_RACacheMissLimit = 1512,
	SQLOLEConfig_RACacheHitLimit = 1513,
	SQLOLEConfig_SpinCounter = 1514,
	SQLOLEConfig_FreeBuffers = 1515,
	SQLOLEConfig_SMPConcurrency = 1516,
	SQLOLEConfig_PriorityBoost = 1517,
	SQLOLEConfig_RemoteLoginTimeout = 1519,
	SQLOLEConfig_RemoteQueryTimeout = 1520,
	SQLOLEConfig_LEThresholdMinimum = 1522,
	SQLOLEConfig_LogwriteSleepMS = 1530,
	SQLOLEConfig_CursorThreshold = 1531,
	SQLOLEConfig_SetWorkingSetSize = 1532,
	SQLOLEConfig_ResourceTimeout = 1533,
	SQLOLEConfig_UserOptions = 1534,
	SQLOLEConfig_ProcessorAffinityMask = 1535,
	SQLOLEConfig_MaxTextReplSize = 1536
} SQLOLE_CONFIGVALUE_TYPE;

typedef SQLOLE_HELPID(SQLOLE_SRVUSERPROFILE_TYPE) enum {
	// Output from Server.GetUserProfile
	SQLOLESrvUserProf_None = 0x0000,
	SQLOLESrvUserProf_SaLogin = 0x0001,						// User is System Administrator
	SQLOLESrvUserProf_CreateDatabase = 0x0002,				// User has privilege to do this
	SQLOLESrvUserProf_CreateXP = 0x0004,					// User can create Extended Stored Procedures

	SQLOLESrvUserProf_AllProfileBits = 0x0007				// All server profile bits
} SQLOLE_SRVUSERPROFILE_TYPE;

typedef SQLOLE_HELPID(SQLOLE_DBUSERPROFILE_TYPE) enum {
	// Output from Database.GetUserProfile
	SQLOLEDbUserProf_None = 0x0000,
	SQLOLEDbUserProf_DboLogin = 0x0001,						// User is Database Owner
	SQLOLEDbUserProf_CreateTable = 0x0002,					// User has these privileges
	SQLOLEDbUserProf_CreateView = 0x0004,
	SQLOLEDbUserProf_CreateProcedure = 0x0008,
	SQLOLEDbUserProf_DumpDatabase = 0x0010,
	SQLOLEDbUserProf_CreateDefault = 0x0020,
	SQLOLEDbUserProf_DumpTransaction = 0x0040,
	SQLOLEDbUserProf_CreateRule = 0x0080,

	SQLOLEDbUserProf_AllProfileBits = 0x00ff,				// All DB-valid profile bits

	SQLOLEDbUserProf_InvalidLogin = 0x40000000,				// Current login not a valid user in this database.
	SQLOLEDbUserProf_InaccessibleDb = 0x80000000,			// Database Loading | Recovering | Suspect | Offline
	SQLOLEDbUserProf_DbNotAvailable = 0xc0000000			// All Database-not-accessible bits.
} SQLOLE_DBUSERPROFILE_TYPE;

typedef SQLOLE_HELPID(SQLOLE_ERROR_TYPE) enum {
	// Error values.  (MS-Internal:  See usa.rc for the string representation of these (OSQL_S_*)).
	// DBLib uses 10000 (0x2710) to 10200 (0x27D8).
	SQLOLE_E_DBLIBFIRSTERROR = 0x2710,
	SQLOLE_E_DBLIBLASTERROR = 0x27D8,

	// SQL Server itself sends errors back which may be up to 20000 (0x4E20).
	// SQLOLE-detected errors are in the range SQLOLE_E_FIRSTERROR to SQLOLE_E_LASTERROR.
	// Each SQLOLE_ECAT (Error CATegory) summarizes its specific errorcodes.
	SQLOLE_E_FIRSTERROR = 0x5000,

// All error categories masked off by this.
SQLOLE_ECAT_MASK = 0x5F00,

// Errors indicating an operation that is valid but not in the given context.
SQLOLE_ECAT_INVALIDCONTEXT = 0x5000,
	SQLOLE_E_ALREADYCONN = 0x5000,
	SQLOLE_E_ALREADYCOLL = 0x5001,
	SQLOLE_E_NOTCONN = 0x5002,
	SQLOLE_E_CANTDROPSERVER = 0x5003,
	SQLOLE_E_NOCOMPLEXALTER = 0x5004,
	SQLOLE_E_PROPNEEDSCREATE = 0x5005,
	SQLOLE_E_COLTYPEFIXED = 0x5006,
	SQLOLE_E_COLTYPENONNULL = 0x5007,
	SQLOLE_E_CANTCHANGEUDDT = 0x5008,
	SQLOLE_E_BASETYPEFIXED = 0x5009,
	SQLOLE_E_BASETYPENONNULL = 0x500A,
	SQLOLE_E_ENUMORDINAL = 0x500B,
	SQLOLE_E_CANTRENAMEUSER = 0x500C,
	SQLOLE_E_CANTRENAMEGROUP = 0x500D,
	SQLOLE_E_CANTRENAMELOGIN = 0x500E,
	SQLOLE_E_CANTRENAMEDEVICE = 0x500F,
	SQLOLE_E_NOTDUMPPROP = 0x5010,
	SQLOLE_E_NOSERVERASSOC = 0x5011,
	SQLOLE_E_NOTCOLLTYPE = 0x5012,
	SQLOLE_E_CANTMODIFYDRIINDEX = 0x5013,
	SQLOLE_E_CANTCHANGEPROCTYPE = 0x5014,
	SQLOLE_E_CANTMODIFYINDEX = 0x5015,
	SQLOLE_E_INVALIDPRIVOBJ = 0x5016,
	SQLOLE_E_CANTCHANGETRIGTYPE = 0x5017,
	SQLOLE_E_NOVIEWCOLALTER = 0x5018,
	SQLOLE_E_CANTRENAMELANGUAGE = 0x5019,
	SQLOLE_E_CANTRENAMERSERVER = 0x501A,
	SQLOLE_E_CANTRENAMERLOGIN = 0x501B,
	SQLOLE_E_MUSTBEDBDEV = 0x501C,
	SQLOLE_E_NOINACTIVEMIRROR = 0x501D,
	SQLOLE_E_NOACTIVEMIRROR = 0x501E,
	SQLOLE_E_NOMIRROR = 0x501F,
	SQLOLE_E_SERVERDISCONNECTED = 0x5020,
	SQLOLE_E_CANTRENAMESERVER = 0x5021,
	SQLOLE_E_CANTMODIFYTEXT = 0x5022,
	SQLOLE_E_CANTMODIFYSYSTABLE = 0x5023,
	SQLOLE_E_LOGINALREADYALIASED = 0x5024,
	SQLOLE_E_LOGINALREADYUSER = 0x5025,
	SQLOLE_E_CACHENORESULTS = 0x5026,
	SQLOLE_E_ALREADYCREATED = 0x5027,
	SQLOLE_E_NOTDISCONN = 0x5028,
	SQLOLE_E_CANTMODIFYARTTABLE = 0x5029,
	SQLOLE_E_CANTMODIFYSUBSERVER = 0x502A,
	SQLOLE_E_BASETYPENOTNUMERIC = 0x502B,
	SQLOLE_E_TOFILEBUTNOFILENAME = 0x502C,
	SQLOLE_E_MUSTBEDISTSERVER = 0x502D,
	SQLOLE_E_CANTMODIFYKEY = 0x502E,
	SQLOLE_E_LISTCANTREFRESH = 0x502F,
	SQLOLE_E_NOCOLTABLE = 0x5030,
	SQLOLE_E_MUSTBEINALTER = 0x5031,
	SQLOLE_E_CANTUNDEDICATELOGDEVICE = 0x5032,
	SQLOLE_E_CANTRENAMESERVERGROUP = 0x5033,
	SQLOLE_E_CANTRENAMEREGISTEREDSERVER = 0x5034,
	SQLOLE_E_INDEXREBUILDKEYTYPE = 0x5035,
	SQLOLE_E_REBUILDINDEXOPTIONS = 0x5036,
	SQLOLE_E_IMPERSONATEXPONLY = 0x5037,

// Errors indicating that the OLE object is not (or is no longer) valid in SQLOLE.
SQLOLE_ECAT_INVALIDOBJECT = 0x5100,
	SQLOLE_E_OBJECTDROPPED = 0x5100,
	SQLOLE_E_NOTSQLOLEOBJECT = 0x5101,
	SQLOLE_E_OBJECTDETACHED = 0x5102,
	SQLOLE_E_SERVERCLOSED = 0x5103,

// Errors indicating that an attempt was made to create an object (usually to add an object
// to a collection) but that its definition (property settings) were incomplete or inconsistent.
SQLOLE_ECAT_INVALIDOBJECTDEFINITION = 0x5200,
	SQLOLE_E_NOCOLUMNSADDED = 0x5200,
	SQLOLE_E_COLUMNINCOMPLETE = 0x5201,
	SQLOLE_E_TABLEINCOMPLETE = 0x5202,
	SQLOLE_E_UDDTINCOMPLETE = 0x5203,
	SQLOLE_E_RULEINCOMPLETE = 0x5204,
	SQLOLE_E_DEFAULTINCOMPLETE = 0x5205,
	SQLOLE_E_VIEWINCOMPLETE = 0x5206,
	SQLOLE_E_USERINCOMPLETE = 0x5207,
	SQLOLE_E_GROUPINCOMPLETE = 0x5208,
	SQLOLE_E_PROCINCOMPLETE = 0x5209,
	SQLOLE_E_USERALREADYEXISTS = 0x520A,
	SQLOLE_E_GROUPALREADYEXISTS = 0x520B,
	SQLOLE_E_COLUMNALREADYEXISTS = 0x520C,
	SQLOLE_E_OBJECTALREADYEXISTS = 0x520D,
	SQLOLE_E_INDEXALREADYEXISTS = 0x520E,
	SQLOLE_E_DBALREADYEXISTS = 0x520F,
	SQLOLE_E_LOGINALREADYEXISTS = 0x5210,
	SQLOLE_E_DEVICEALREADYEXISTS = 0x5211,
	SQLOLE_E_SKIPONLYTAPE = 0x5212,
	SQLOLE_E_DEVICEINCOMPLETE = 0x5213,
	SQLOLE_E_PROCALREADYEXISTS = 0x5214,
	SQLOLE_E_UDDTALREADYEXISTS = 0x5215,
	SQLOLE_E_TABLEALREADYEXISTS = 0x5216,
	SQLOLE_E_RULEALREADYEXISTS = 0x5217,
	SQLOLE_E_DEFAULTALREADYEXISTS = 0x5218,
	SQLOLE_E_VIEWALREADYEXISTS = 0x5219,
	SQLOLE_E_INDEXINCOMPLETE = 0x521A,
	SQLOLE_E_TRIGINCOMPLETE = 0x521B,
	SQLOLE_E_TRIGALREADYEXISTS = 0x521C,
	SQLOLE_E_LANGUAGEINCOMPLETE = 0x521D,
	SQLOLE_E_LANGUAGEALREADYEXISTS = 0x521E,
	SQLOLE_E_LOGININCOMPLETE = 0x521F,
	SQLOLE_E_RSERVERINCOMPLETE = 0x5220,
	SQLOLE_E_RSERVERALREADYEXISTS = 0x5221,
	SQLOLE_E_NULLRLOGINALREADYEXISTS = 0x5222,
	SQLOLE_E_RLOGINALREADYEXISTS = 0x5223,
	SQLOLE_E_REMOTENEEDSLOCAL = 0x5224,
	SQLOLE_E_BACKUPNEEDSDEVICE = 0x5225,
	SQLOLE_E_NEEDMANUALFILTERNAME = 0x5226,
	SQLOLE_E_TASKINCOMPLETE = 0x5227,
	SQLOLE_E_ARTINCOMPLETE = 0x5228,
	SQLOLE_E_PUBINCOMPLETE = 0x5229,
	SQLOLE_E_SUBINCOMPLETE = 0x522A,
	SQLOLE_E_ALERTINCOMPLETE = 0x522B,
	SQLOLE_E_OPERATORINCOMPLETE = 0x522C,
	SQLOLE_E_NAMEMUSTMATCH = 0x522D,
	SQLOLE_E_TRIGREQTABLENAME = 0x522E,
	SQLOLE_E_MUSTBESYNCTASK = 0x522F,
	SQLOLE_E_NOEVENTCOMPLETION = 0x5230,
	SQLOLE_E_FKEYINCOMPLETE = 0x5231,
	SQLOLE_E_KEYINCOMPLETE = 0x5232,
	SQLOLE_E_KEYALREADYEXISTS = 0x5233,
	SQLOLE_E_CHECKINCOMPLETE = 0x5234,
	SQLOLE_E_DRIDEFAULTINCOMPLETE = 0x5235,
	SQLOLE_E_CHECKALREADYEXISTS = 0x5236,
	SQLOLE_E_ONLYONEPRIMARYKEY = 0x5237,
	SQLOLE_E_NEEDMANUALVIEWNAME = 0x5238,
	SQLOLE_E_SERVERGROUPINCOMPLETE = 0x5239,
	SQLOLE_E_REGISTEREDSERVERINCOMPLETE = 0x523A,
	SQLOLE_E_SERVERGROUPALREADYEXISTS = 0x523B,
	SQLOLE_E_REGISTEREDSERVERALREADYEXISTS = 0x523C,
	SQLOLE_E_NEEDLOADTABLENAME = 0x523D,

// Errors indicating an invalid parameter passed to a method or property, or other unexpected condition.
SQLOLE_ECAT_INVALIDPARAMETER = 0x5300,
	SQLOLE_E_BADCOLLEN = 0x5300,
	SQLOLE_E_INVALIDPERFMONSET = 0x5301,
	SQLOLE_E_BADDEVICETYPE = 0x5302,
	SQLOLE_E_SIZEGREATERTHAN0 = 0x5303,
	SQLOLE_E_RESULTSETOUTOFRANGE = 0x5304,
	SQLOLE_E_OUTPUTPARAMREQUIRED = 0x5305,
	SQLOLE_E_PROPTEXTNONNULL = 0x5306,
	SQLOLE_E_BADPROCTYPE = 0x5307,
	SQLOLE_E_BADFILLFACTOR = 0x5308,
	SQLOLE_E_INVALIDINDEXTYPE = 0x5309,
	SQLOLE_E_INVALIDPRIVTYPE = 0x530A,
	SQLOLE_E_BADTRIGTYPE = 0x530B,
	SQLOLE_E_INVALIDDAYOFWEEK = 0x530C,
	SQLOLE_E_INVALIDMONTH = 0x530D,
	SQLOLE_E_BADDAYCOUNT = 0x530E,
	SQLOLE_E_BADMONTHCOUNT = 0x530F,
	SQLOLE_E_BADCONFIGVALUE = 0x5310,
	SQLOLE_E_INVALIDPARAMINDEX = 0x5311,
	SQLOLE_E_INVALIDPARAMRANGE = 0x5312,
	SQLOLE_E_INVALIDDBOBJTYPE = 0x5313,
	SQLOLE_E_ROWCOLOUTOFRANGE = 0x5314,
	SQLOLE_E_NONUNIQUENAME = 0x5315,
	SQLOLE_E_NOTIMESTAMPUDDT = 0x5316,
	SQLOLE_E_INVALIDNAME = 0x5317,
	SQLOLE_E_INVALIDCOMPLETION = 0x5318,
	SQLOLE_E_NAMETOOLONG = 0x5319,
	SQLOLE_E_INVALIDFREQTYPE = 0x531A,
	SQLOLE_E_INVALIDFREQSUBDAY = 0x531B,
	SQLOLE_E_INVALIDFREQRELINTERVAL = 0x531C,
	SQLOLE_E_BADWEEKLYINTERVAL = 0x531D,
	SQLOLE_E_BADMONTHLYINTERVAL = 0x531E,
	SQLOLE_E_BADMONTHLYRELINTERVAL = 0x531F,
	SQLOLE_E_INVALIDSRVOPTION = 0x5320,
	SQLOLE_E_INVALIDRUNPRIORITY = 0x5321,
	SQLOLE_E_DBNAMEREQUIRED = 0x5322,
	SQLOLE_E_PUBNAMEREQUIRED = 0x5323,
	SQLOLE_E_PROPINDEXOUTOFRANGE = 0x5324,
	SQLOLE_E_INVALIDNOTIFYTYPE = 0x5325,
	SQLOLE_E_INVALIDENUMNOTIFYTYPE = 0x5326,
	SQLOLE_E_INVALIDWEEKDAY = 0x5327,
	SQLOLE_E_INVALIDOBJECTTYPE = 0x5328,
	SQLOLE_E_OBJECTREQUIRED = 0x5329,
	SQLOLE_E_INVALIDEVENTTYPE = 0x532A,
	SQLOLE_E_INVALIDCOMPLETIONTYPE = 0x532B,
	SQLOLE_E_INVALIDKEYTYPE = 0x532C,
	SQLOLE_E_TABLEMUSTBECREATED = 0x532D,
	SQLOLE_E_INVALIDPREARTICLE = 0x532E,
	SQLOLE_E_INVALIDSECURITYMODE = 0x532F,
	SQLOLE_E_INVALIDPREC = 0x5330,
	SQLOLE_E_INVALIDDEPENDENCYTYPE = 0x5331,
	SQLOLE_E_INVALIDVERIFYCONNTYPE = 0x5332,
	SQLOLE_E_INVALIDSTATUSINFOTYPE = 0x5333,
	SQLOLE_E_INVALIDFORWARDINGSEVERITY = 0x5334,
	SQLOLE_E_INVALIDFORWARDINGSERVER = 0x5335,
	SQLOLE_E_INVALIDRESTARTINTERVAL = 0x5336,
	SQLOLE_E_INVALIDHISTORYROWSMAX = 0x5337,
	SQLOLE_E_NAMETOOSHORT = 0x5338,
	SQLOLE_E_UNEXPECTED = 0x5339,
	SQLOLE_E_INVALIDHISTORYROWSPERTASKMAX = 0x533A,
	SQLOLE_E_INVALIDOBJSORTTYPE = 0x533B,
	SQLOLE_E_INVALIDEXECTYPE = 0x533C,

// Errors indicating that either the connected SQL Server is an invalid version,
// or the client platform is invalid, or a combination of those; or that the
// server has not been set up properly for SQLOLE (the required stored procedures
// are not installed)..
SQLOLE_ECAT_INVALIDPLATFORM = 0x5400,
	SQLOLE_E_BACKUPSQL60ONLY = 0x5400,
	SQLOLE_E_MSSQLONLY = 0x5401,
	SQLOLE_E_WIN95REQUIRESCONN = 0x5402,
	SQLOLE_E_NOTONWIN95 = 0x5403,
	SQLOLE_E_SQL60ONLY = 0x5404,
	SQLOLE_E_REPLSQL60ONLY = 0x5405,
	SQLOLE_E_STARTUPPROCSQL60ONLY = 0x5406,
	SQLOLE_E_NEEDSQLOLEPROCS = 0x5407,
	SQLOLE_E_ALTERSQL60ONLY = 0x5408,
	SQLOLE_E_SORTEDDATAREORGSQL60ONLY = 0x5409,
	SQLOLE_E_MSSQLNTONLY = 0x540A,
	SQLOLE_E_WIN95REQUIRESSQL60 = 0x540B,
	SQLOLE_E_BACKUPSQL65ONLY = 0x540C,
	SQLOLE_E_SQL65ONLY = 0x540D,
	SQLOLE_E_ALERTSQL65ONLY = 0x540E,
	SQLOLE_E_REMOTESQL65ONLY = 0x540F,
	SQLOLE_E_PIPEDEVSQL60ONLY = 0x5410,
	SQLOLE_E_FKEYSQL65ONLY = 0x5411,
	SQLOLE_E_XPIMPERSONATESQL65ONLY = 0x5412,

// Errors indicating that the named object was not found in the collection, or 
// that the ordinal passed as a collection index was out of range.
SQLOLE_ECAT_ITEMNOTFOUND = 0x5500,
	SQLOLE_E_RULENOTFOUND = 0x5500,
	SQLOLE_E_DEFAULTNOTFOUND = 0x5501,
	SQLOLE_E_TYPENOTFOUND = 0x5502,
	SQLOLE_E_LOGINNOTFOUND = 0x5503,
	SQLOLE_E_GROUPNOTFOUND = 0x5504,
	SQLOLE_E_LANGNOTFOUND = 0x5505,
	SQLOLE_E_DBNOTFOUND = 0x5506,
	SQLOLE_E_DEVICENOTFOUND = 0x5507,
	SQLOLE_E_COLUMNNOTFOUND = 0x5508,
	SQLOLE_E_ORDOUTOFRANGE = 0x5509,
	SQLOLE_E_NAMENOTFOUND = 0x550A,
	SQLOLE_E_USERNOTFOUND = 0x550B,
	SQLOLE_E_NAMENOTINCACHE = 0x550C,
	SQLOLE_E_PROPNAMENOTFOUND = 0x550D,
	SQLOLE_E_IDNOTFOUND = 0x550E,

// Errors indicating that the current login does not have sufficient privilege
// to perform the requested operation.
SQLOLE_ECAT_UNPRIVILEGEDLOGIN = 0x5600,
	SQLOLE_E_MUSTBESAORDBO = 0x5600,
	SQLOLE_E_MUSTBESAORLOGIN = 0x5601,
	SQLOLE_E_MUSTBESA = 0x5602,

// Errors indicating a query execution error or an inaccessible database.
SQLOLE_ECAT_EXECUTION = 0x5700,
	SQLOLE_E_SYSPROCERROR = 0x5700,
	SQLOLE_E_CACHEEXECERROR = 0x5701,
	SQLOLE_E_INACCESSIBLEDB = 0x5702,
	SQLOLE_E_BATCHCOMPLETEWITHERRORS = 0x5703,

// Errors indicating the connection to SQL Server cannot be restored.  SQLOLE will
// automatically reconnect (as determined by the SQLServer.AutoReconnect property)
// but the network may be down or the server not started.
SQLOLE_ECAT_CONNECTION = 0x5800,
	SQLOLE_E_CANTRECONNDEADCONN = 0x5800,

// Errors indicating insufficient resources either locally or on the server.
SQLOLE_ECAT_RESOURCE = 0x5900,
	SQLOLE_E_OUTOFMEMORY = 0x5900,
	SQLOLE_E_NOMOREDEVNOS = 0x5901,

// Errors indicating termination of Transfer.
SQLOLE_ECAT_TRANSFER = 0x5A00,
	SQLOLE_E_USERABORTED = 0x5A00,			//User aborted transfer
	SQLOLE_E_FILEPATHREQUIRED = 0x5A01,		//User should specify path for script file

// Error indicating failure of bulk copy
SQLOLE_ECAT_BCP = 0x5B00,
	SQLOLE_E_INCOMPATIBLEPROPS = 0x5B00,	//Some of the bcp object properties are incompatible.
	SQLOLE_E_BCPEXECFAILED	= 0x5B01,		//dblib bcp_exec function failed
	SQLOLE_E_BCPINITFAILED = 0x5B02,		//dblib bcp_init function failed
	SQLOLE_E_BCPCONTROLFAILED = 0x5B03,		//dblib bcp_control function failed
	SQLOLE_E_BCPCOLFMTFAILED = 0x5B04, 		//dblib bcp_colfmt failed.
	SQLOLE_E_SUSPENDINDEX = 0x5B05, 		//Error trying to suspend indexing
	SQLOLE_E_RESUMEINDEX = 0x5B06,			//Error trying to resume suspended indexing

	SQLOLE_E_LASTERROR = 0x5AFF
} SQLOLE_ERROR_TYPE;

// SQLOLE_ERROR #defines.  These are categories, not severities; there is no
// mathematical relationship between groupings.
#ifndef _SQLOLE_ODL_		// Not done in .ODL file.

// Switch on SQLOLE_ECAT to determine the category of a returned error code.
// Use long cast as lint can complain about an enum-vs.-int.
#define SQLOLE_ECAT(scode) (scode & (long)SQLOLE_ECAT_MASK)

#endif

// Constant values.
typedef SQLOLE_HELPID(SQLOLE_CONSTANTS_TYPE) enum {
	SQLOLE_NOENDDATE =				99991231,	// For task dates/times
	SQLOLE_NOENDTIME =				235959,		// For task dates/times
	SQLOLE_USEEXISTINGFILLFACTOR =	0			// For Table.RebuildIndexes
} SQLOLE_CONSTANTS_TYPE;

#endif	// _SQLOLE_CONSTANTS_

/////////////////////////////////////////////////////////////////////////////////////////
// Interface definitions.
/////////////////////////////////////////////////////////////////////////////////////////
#ifndef _SQLOLE_ODL_		// Skip if in .odl file.

// Optional parameter definitions.  For C explicit values will have to be specified,
// as indicated within the CPPDEFAULT() expansion.
//
// SQLOLE Parameter sequencing is as follows ("optional" in accordance with C++ usage):
// 	Nonoptional parameters
//		Nonoptional Return value if any
//		Optional additional parameters
//		Optional return value, if any
//
#ifdef __cplusplus
#define CPPDEFAULT(DefaultParamValue)	DefaultParamValue
#else
#define CPPDEFAULT(DefaultParamValue)
#endif

// Windows.h should define these...
typedef BOOL *LPBOOL;
typedef float *LPFLOAT;
typedef double *LPDOUBLE;

///////////////////////////////////////////////////////////////////////////////////////
// Forward declarations and typedefs, allowing for UNICODE or ANSI clients.
///////////////////////////////////////////////////////////////////////////////////////
#undef SQLOLE_LPCSTR
#undef SQLOLE_BSTR
#undef SQLOLE_LPBSTR
#undef SQLOLEFreeString

// Carry over the Ansi definition of BSTR.
typedef char __RPC_FAR * BSTRA;
typedef BSTRA __RPC_FAR *LPBSTRA;

#if defined (UNICODE) || defined (_UNICODE)
#define SQLOLE_UNICODE
#define SQLOLE_LPCSTR   LPCWSTR
#define SQLOLE_BSTR     BSTR
#define SQLOLE_LPBSTR   LPBSTR
#define SQLOLEFreeString(bstr) SysFreeString(bstr)
#else	// !UNICODE
#define SQLOLE_LPCSTR  	LPCSTR
#define SQLOLE_BSTR     BSTRA
#define SQLOLE_LPBSTR   LPBSTRA
#define SQLOLEFreeString(bstr) SysFreeString((BSTR)bstr)
#endif

#ifdef __cplusplus
#define TYPEDEFINTERFACE typedef
#else
#define TYPEDEFINTERFACE typedef interface
#endif

// Forward declarations.  Base classes...
#undef LPSQLOLESTDOBJECT 
#undef ISQLOLEStdObject 
#undef IID_ISQLOLEStdObject 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEStdObject;			TYPEDEFINTERFACE IWSQLOLEStdObject *				LPWSQLOLESTDOBJECT;
#define LPSQLOLESTDOBJECT LPWSQLOLESTDOBJECT
#define ISQLOLEStdObject IWSQLOLEStdObject
#define IID_ISQLOLEStdObject IID_IWSQLOLEStdObject 
#else
interface IASQLOLEStdObject;			TYPEDEFINTERFACE IASQLOLEStdObject *				LPASQLOLESTDOBJECT;
#define LPSQLOLESTDOBJECT LPASQLOLESTDOBJECT
#define ISQLOLEStdObject IASQLOLEStdObject
#define IID_ISQLOLEStdObject IID_IASQLOLEStdObject 
#endif

#undef LPSQLOLESTDCOLLECTION 
#undef ISQLOLEStdCollection 
#undef IID_ISQLOLEStdCollection 
#ifdef SQLOLE_UNICODE
TYPEDEFINTERFACE IWSQLOLEStdObject * LPWSQLOLESTDCOLLECTION;	// Auto-documenting for collection management
#define LPSQLOLESTDCOLLECTION LPWSQLOLESTDCOLLECTION
#define ISQLOLEStdCollection IWSQLOLEStdCollection
#define IID_ISQLOLEStdCollection IID_IWSQLOLEStdCollection 
#else
TYPEDEFINTERFACE IASQLOLEStdObject * LPASQLOLESTDCOLLECTION;	// Auto-documenting for collection management
#define LPSQLOLESTDCOLLECTION LPASQLOLESTDCOLLECTION
#define ISQLOLEStdCollection IASQLOLEStdCollection
#define IID_ISQLOLEStdCollection IID_IASQLOLEStdCollection 
#endif

// ... and derived classes.
#undef LPSQLOLEAPPLICATION 
#undef ISQLOLEApplication 
#undef IID_ISQLOLEApplication 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEApplication;		TYPEDEFINTERFACE IWSQLOLEApplication *			LPWSQLOLEAPPLICATION;
#define LPSQLOLEAPPLICATION LPWSQLOLEAPPLICATION
#define ISQLOLEApplication IWSQLOLEApplication
#define IID_ISQLOLEApplication IID_IWSQLOLEApplication 
#else
interface IASQLOLEApplication;		TYPEDEFINTERFACE IASQLOLEApplication *			LPASQLOLEAPPLICATION;
#define LPSQLOLEAPPLICATION LPASQLOLEAPPLICATION
#define ISQLOLEApplication IASQLOLEApplication
#define IID_ISQLOLEApplication IID_IASQLOLEApplication 
#endif

#undef LPSQLOLESERVERS 
#undef ISQLOLEServers 
#undef IID_ISQLOLEServers 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEServers;			TYPEDEFINTERFACE IWSQLOLEServers *				LPWSQLOLESERVERS;
#define LPSQLOLESERVERS LPWSQLOLESERVERS
#define ISQLOLEServers IWSQLOLEServers
#define IID_ISQLOLEServers IID_IWSQLOLEServers 
#else
interface IASQLOLEServers;			TYPEDEFINTERFACE IASQLOLEServers *				LPASQLOLESERVERS;
#define LPSQLOLESERVERS LPASQLOLESERVERS
#define ISQLOLEServers IASQLOLEServers
#define IID_ISQLOLEServers IID_IASQLOLEServers 
#endif

#undef LPSQLOLESERVER 
#undef ISQLOLEServer 
#undef IID_ISQLOLEServer 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEServer;			TYPEDEFINTERFACE IWSQLOLEServer *					LPWSQLOLESERVER;
#define LPSQLOLESERVER LPWSQLOLESERVER
#define ISQLOLEServer IWSQLOLEServer
#define IID_ISQLOLEServer IID_IWSQLOLEServer 
#else
interface IASQLOLEServer;			TYPEDEFINTERFACE IASQLOLEServer *					LPASQLOLESERVER;
#define LPSQLOLESERVER LPASQLOLESERVER
#define ISQLOLEServer IASQLOLEServer
#define IID_ISQLOLEServer IID_IASQLOLEServer 
#endif

#undef LPSQLOLEDATABASES 
#undef ISQLOLEDatabases 
#undef IID_ISQLOLEDatabases 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEDatabases;			TYPEDEFINTERFACE IWSQLOLEDatabases *				LPWSQLOLEDATABASES;
#define LPSQLOLEDATABASES LPWSQLOLEDATABASES
#define ISQLOLEDatabases IWSQLOLEDatabases
#define IID_ISQLOLEDatabases IID_IWSQLOLEDatabases 
#else
interface IASQLOLEDatabases;			TYPEDEFINTERFACE IASQLOLEDatabases *				LPASQLOLEDATABASES;
#define LPSQLOLEDATABASES LPASQLOLEDATABASES
#define ISQLOLEDatabases IASQLOLEDatabases
#define IID_ISQLOLEDatabases IID_IASQLOLEDatabases 
#endif

#undef LPSQLOLEDATABASE 
#undef ISQLOLEDatabase 
#undef IID_ISQLOLEDatabase 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEDatabase;			TYPEDEFINTERFACE IWSQLOLEDatabase *				LPWSQLOLEDATABASE;
#define LPSQLOLEDATABASE LPWSQLOLEDATABASE
#define ISQLOLEDatabase IWSQLOLEDatabase
#define IID_ISQLOLEDatabase IID_IWSQLOLEDatabase 
#else
interface IASQLOLEDatabase;			TYPEDEFINTERFACE IASQLOLEDatabase *				LPASQLOLEDATABASE;
#define LPSQLOLEDATABASE LPASQLOLEDATABASE
#define ISQLOLEDatabase IASQLOLEDatabase
#define IID_ISQLOLEDatabase IID_IASQLOLEDatabase 
#endif

#undef LPSQLOLEDEVICES 
#undef ISQLOLEDevices 
#undef IID_ISQLOLEDevices 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEDevices;			TYPEDEFINTERFACE IWSQLOLEDevices *				LPWSQLOLEDEVICES;
#define LPSQLOLEDEVICES LPWSQLOLEDEVICES
#define ISQLOLEDevices IWSQLOLEDevices
#define IID_ISQLOLEDevices IID_IWSQLOLEDevices 
#else
interface IASQLOLEDevices;			TYPEDEFINTERFACE IASQLOLEDevices *				LPASQLOLEDEVICES;
#define LPSQLOLEDEVICES LPASQLOLEDEVICES
#define ISQLOLEDevices IASQLOLEDevices
#define IID_ISQLOLEDevices IID_IASQLOLEDevices 
#endif

#undef LPSQLOLEDEVICE 
#undef ISQLOLEDevice 
#undef IID_ISQLOLEDevice 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEDevice;			TYPEDEFINTERFACE IWSQLOLEDevice *					LPWSQLOLEDEVICE;
#define LPSQLOLEDEVICE LPWSQLOLEDEVICE
#define ISQLOLEDevice IWSQLOLEDevice
#define IID_ISQLOLEDevice IID_IWSQLOLEDevice 
#else
interface IASQLOLEDevice;			TYPEDEFINTERFACE IASQLOLEDevice *					LPASQLOLEDEVICE;
#define LPSQLOLEDEVICE LPASQLOLEDEVICE
#define ISQLOLEDevice IASQLOLEDevice
#define IID_ISQLOLEDevice IID_IASQLOLEDevice 
#endif

#undef LPSQLOLELOGINS 
#undef ISQLOLELogins 
#undef IID_ISQLOLELogins 
#ifdef SQLOLE_UNICODE
interface IWSQLOLELogins;			TYPEDEFINTERFACE IWSQLOLELogins *					LPWSQLOLELOGINS;
#define LPSQLOLELOGINS LPWSQLOLELOGINS
#define ISQLOLELogins IWSQLOLELogins
#define IID_ISQLOLELogins IID_IWSQLOLELogins 
#else
interface IASQLOLELogins;			TYPEDEFINTERFACE IASQLOLELogins *					LPASQLOLELOGINS;
#define LPSQLOLELOGINS LPASQLOLELOGINS
#define ISQLOLELogins IASQLOLELogins
#define IID_ISQLOLELogins IID_IASQLOLELogins 
#endif

#undef LPSQLOLELOGIN 
#undef ISQLOLELogin 
#undef IID_ISQLOLELogin 
#ifdef SQLOLE_UNICODE
interface IWSQLOLELogin;				TYPEDEFINTERFACE IWSQLOLELogin *					LPWSQLOLELOGIN;
#define LPSQLOLELOGIN LPWSQLOLELOGIN
#define ISQLOLELogin IWSQLOLELogin
#define IID_ISQLOLELogin IID_IWSQLOLELogin 
#else
interface IASQLOLELogin;				TYPEDEFINTERFACE IASQLOLELogin *					LPASQLOLELOGIN;
#define LPSQLOLELOGIN LPASQLOLELOGIN
#define ISQLOLELogin IASQLOLELogin
#define IID_ISQLOLELogin IID_IASQLOLELogin 
#endif

#undef LPSQLOLELANGUAGES 
#undef ISQLOLELanguages 
#undef IID_ISQLOLELanguages 
#ifdef SQLOLE_UNICODE
interface IWSQLOLELanguages;			TYPEDEFINTERFACE IWSQLOLELanguages *				LPWSQLOLELANGUAGES;
#define LPSQLOLELANGUAGES LPWSQLOLELANGUAGES
#define ISQLOLELanguages IWSQLOLELanguages
#define IID_ISQLOLELanguages IID_IWSQLOLELanguages 
#else
interface IASQLOLELanguages;			TYPEDEFINTERFACE IASQLOLELanguages *				LPASQLOLELANGUAGES;
#define LPSQLOLELANGUAGES LPASQLOLELANGUAGES
#define ISQLOLELanguages IASQLOLELanguages
#define IID_ISQLOLELanguages IID_IASQLOLELanguages 
#endif

#undef LPSQLOLELANGUAGE 
#undef ISQLOLELanguage 
#undef IID_ISQLOLELanguage 
#ifdef SQLOLE_UNICODE
interface IWSQLOLELanguage;			TYPEDEFINTERFACE IWSQLOLELanguage *				LPWSQLOLELANGUAGE;
#define LPSQLOLELANGUAGE LPWSQLOLELANGUAGE
#define ISQLOLELanguage IWSQLOLELanguage
#define IID_ISQLOLELanguage IID_IWSQLOLELanguage 
#else
interface IASQLOLELanguage;			TYPEDEFINTERFACE IASQLOLELanguage *				LPASQLOLELANGUAGE;
#define LPSQLOLELANGUAGE LPASQLOLELANGUAGE
#define ISQLOLELanguage IASQLOLELanguage
#define IID_ISQLOLELanguage IID_IASQLOLELanguage 
#endif

#undef LPSQLOLEREMOTESERVERS 
#undef ISQLOLERemoteServers 
#undef IID_ISQLOLERemoteServers 
#ifdef SQLOLE_UNICODE
interface IWSQLOLERemoteServers;		TYPEDEFINTERFACE IWSQLOLERemoteServers *			LPWSQLOLEREMOTESERVERS;
#define LPSQLOLEREMOTESERVERS LPWSQLOLEREMOTESERVERS
#define ISQLOLERemoteServers IWSQLOLERemoteServers
#define IID_ISQLOLERemoteServers IID_IWSQLOLERemoteServers 
#else
interface IASQLOLERemoteServers;		TYPEDEFINTERFACE IASQLOLERemoteServers *			LPASQLOLEREMOTESERVERS;
#define LPSQLOLEREMOTESERVERS LPASQLOLEREMOTESERVERS
#define ISQLOLERemoteServers IASQLOLERemoteServers
#define IID_ISQLOLERemoteServers IID_IASQLOLERemoteServers 
#endif

#undef LPSQLOLEREMOTESERVER 
#undef ISQLOLERemoteServer 
#undef IID_ISQLOLERemoteServer 
#ifdef SQLOLE_UNICODE
interface IWSQLOLERemoteServer;		TYPEDEFINTERFACE IWSQLOLERemoteServer *			LPWSQLOLEREMOTESERVER;
#define LPSQLOLEREMOTESERVER LPWSQLOLEREMOTESERVER
#define ISQLOLERemoteServer IWSQLOLERemoteServer
#define IID_ISQLOLERemoteServer IID_IWSQLOLERemoteServer 
#else
interface IASQLOLERemoteServer;		TYPEDEFINTERFACE IASQLOLERemoteServer *			LPASQLOLEREMOTESERVER;
#define LPSQLOLEREMOTESERVER LPASQLOLEREMOTESERVER
#define ISQLOLERemoteServer IASQLOLERemoteServer
#define IID_ISQLOLERemoteServer IID_IASQLOLERemoteServer 
#endif

#undef LPSQLOLETABLES 
#undef ISQLOLETables 
#undef IID_ISQLOLETables 
#ifdef SQLOLE_UNICODE
interface IWSQLOLETables;			TYPEDEFINTERFACE IWSQLOLETables *					LPWSQLOLETABLES;
#define LPSQLOLETABLES LPWSQLOLETABLES
#define ISQLOLETables IWSQLOLETables
#define IID_ISQLOLETables IID_IWSQLOLETables 
#else
interface IASQLOLETables;			TYPEDEFINTERFACE IASQLOLETables *					LPASQLOLETABLES;
#define LPSQLOLETABLES LPASQLOLETABLES
#define ISQLOLETables IASQLOLETables
#define IID_ISQLOLETables IID_IASQLOLETables 
#endif

#undef LPSQLOLETABLE 
#undef ISQLOLETable 
#undef IID_ISQLOLETable 
#ifdef SQLOLE_UNICODE
interface IWSQLOLETable;				TYPEDEFINTERFACE IWSQLOLETable *					LPWSQLOLETABLE;
#define LPSQLOLETABLE LPWSQLOLETABLE
#define ISQLOLETable IWSQLOLETable
#define IID_ISQLOLETable IID_IWSQLOLETable 
#else
interface IASQLOLETable;				TYPEDEFINTERFACE IASQLOLETable *					LPASQLOLETABLE;
#define LPSQLOLETABLE LPASQLOLETABLE
#define ISQLOLETable IASQLOLETable
#define IID_ISQLOLETable IID_IASQLOLETable 
#endif

#undef LPSQLOLECOLUMNS 
#undef ISQLOLEColumns 
#undef IID_ISQLOLEColumns 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEColumns;			TYPEDEFINTERFACE IWSQLOLEColumns *				LPWSQLOLECOLUMNS;
#define LPSQLOLECOLUMNS LPWSQLOLECOLUMNS
#define ISQLOLEColumns IWSQLOLEColumns
#define IID_ISQLOLEColumns IID_IWSQLOLEColumns 
#else
interface IASQLOLEColumns;			TYPEDEFINTERFACE IASQLOLEColumns *				LPASQLOLECOLUMNS;
#define LPSQLOLECOLUMNS LPASQLOLECOLUMNS
#define ISQLOLEColumns IASQLOLEColumns
#define IID_ISQLOLEColumns IID_IASQLOLEColumns 
#endif

#undef LPSQLOLECOLUMN 
#undef ISQLOLEColumn 
#undef IID_ISQLOLEColumn 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEColumn;			TYPEDEFINTERFACE IWSQLOLEColumn *					LPWSQLOLECOLUMN;
#define LPSQLOLECOLUMN LPWSQLOLECOLUMN
#define ISQLOLEColumn IWSQLOLEColumn
#define IID_ISQLOLEColumn IID_IWSQLOLEColumn 
#else
interface IASQLOLEColumn;			TYPEDEFINTERFACE IASQLOLEColumn *					LPASQLOLECOLUMN;
#define LPSQLOLECOLUMN LPASQLOLECOLUMN
#define ISQLOLEColumn IASQLOLEColumn
#define IID_ISQLOLEColumn IID_IASQLOLEColumn 
#endif

#undef LPSQLOLERULES 
#undef ISQLOLERules 
#undef IID_ISQLOLERules 
#ifdef SQLOLE_UNICODE
interface IWSQLOLERules;				TYPEDEFINTERFACE IWSQLOLERules *					LPWSQLOLERULES;
#define LPSQLOLERULES LPWSQLOLERULES
#define ISQLOLERules IWSQLOLERules
#define IID_ISQLOLERules IID_IWSQLOLERules 
#else
interface IASQLOLERules;				TYPEDEFINTERFACE IASQLOLERules *					LPASQLOLERULES;
#define LPSQLOLERULES LPASQLOLERULES
#define ISQLOLERules IASQLOLERules
#define IID_ISQLOLERules IID_IASQLOLERules 
#endif

#undef LPSQLOLERULE 
#undef ISQLOLERule 
#undef IID_ISQLOLERule 
#ifdef SQLOLE_UNICODE
interface IWSQLOLERule;				TYPEDEFINTERFACE IWSQLOLERule *					LPWSQLOLERULE;
#define LPSQLOLERULE LPWSQLOLERULE
#define ISQLOLERule IWSQLOLERule
#define IID_ISQLOLERule IID_IWSQLOLERule 
#else
interface IASQLOLERule;				TYPEDEFINTERFACE IASQLOLERule *					LPASQLOLERULE;
#define LPSQLOLERULE LPASQLOLERULE
#define ISQLOLERule IASQLOLERule
#define IID_ISQLOLERule IID_IASQLOLERule 
#endif

#undef LPSQLOLEDEFAULTS 
#undef ISQLOLEDefaults 
#undef IID_ISQLOLEDefaults 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEDefaults;			TYPEDEFINTERFACE IWSQLOLEDefaults *				LPWSQLOLEDEFAULTS;
#define LPSQLOLEDEFAULTS LPWSQLOLEDEFAULTS
#define ISQLOLEDefaults IWSQLOLEDefaults
#define IID_ISQLOLEDefaults IID_IWSQLOLEDefaults 
#else
interface IASQLOLEDefaults;			TYPEDEFINTERFACE IASQLOLEDefaults *				LPASQLOLEDEFAULTS;
#define LPSQLOLEDEFAULTS LPASQLOLEDEFAULTS
#define ISQLOLEDefaults IASQLOLEDefaults
#define IID_ISQLOLEDefaults IID_IASQLOLEDefaults 
#endif

#undef LPSQLOLEDEFAULT 
#undef ISQLOLEDefault 
#undef IID_ISQLOLEDefault 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEDefault;			TYPEDEFINTERFACE IWSQLOLEDefault *				LPWSQLOLEDEFAULT;
#define LPSQLOLEDEFAULT LPWSQLOLEDEFAULT
#define ISQLOLEDefault IWSQLOLEDefault
#define IID_ISQLOLEDefault IID_IWSQLOLEDefault 
#else
interface IASQLOLEDefault;			TYPEDEFINTERFACE IASQLOLEDefault *				LPASQLOLEDEFAULT;
#define LPSQLOLEDEFAULT LPASQLOLEDEFAULT
#define ISQLOLEDefault IASQLOLEDefault
#define IID_ISQLOLEDefault IID_IASQLOLEDefault 
#endif

#undef LPSQLOLEUSERDEFINEDDATATYPES 
#undef ISQLOLEUserDefinedDatatypes 
#undef IID_ISQLOLEUserDefinedDatatypes 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEUserDefinedDatatypes;	TYPEDEFINTERFACE IWSQLOLEUserDefinedDatatypes *	LPWSQLOLEUSERDEFINEDDATATYPES;
#define LPSQLOLEUSERDEFINEDDATATYPES LPWSQLOLEUSERDEFINEDDATATYPES
#define ISQLOLEUserDefinedDatatypes IWSQLOLEUserDefinedDatatypes
#define IID_ISQLOLEUserDefinedDatatypes IID_IWSQLOLEUserDefinedDatatypes 
#else
interface IASQLOLEUserDefinedDatatypes;	TYPEDEFINTERFACE IASQLOLEUserDefinedDatatypes *	LPASQLOLEUSERDEFINEDDATATYPES;
#define LPSQLOLEUSERDEFINEDDATATYPES LPASQLOLEUSERDEFINEDDATATYPES
#define ISQLOLEUserDefinedDatatypes IASQLOLEUserDefinedDatatypes
#define IID_ISQLOLEUserDefinedDatatypes IID_IASQLOLEUserDefinedDatatypes 
#endif

#undef LPSQLOLEUSERDEFINEDDATATYPE 
#undef ISQLOLEUserDefinedDatatype 
#undef IID_ISQLOLEUserDefinedDatatype 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEUserDefinedDatatype;	TYPEDEFINTERFACE IWSQLOLEUserDefinedDatatype *	LPWSQLOLEUSERDEFINEDDATATYPE;
#define LPSQLOLEUSERDEFINEDDATATYPE LPWSQLOLEUSERDEFINEDDATATYPE
#define ISQLOLEUserDefinedDatatype IWSQLOLEUserDefinedDatatype
#define IID_ISQLOLEUserDefinedDatatype IID_IWSQLOLEUserDefinedDatatype 
#else
interface IASQLOLEUserDefinedDatatype;	TYPEDEFINTERFACE IASQLOLEUserDefinedDatatype *	LPASQLOLEUSERDEFINEDDATATYPE;
#define LPSQLOLEUSERDEFINEDDATATYPE LPASQLOLEUSERDEFINEDDATATYPE
#define ISQLOLEUserDefinedDatatype IASQLOLEUserDefinedDatatype
#define IID_ISQLOLEUserDefinedDatatype IID_IASQLOLEUserDefinedDatatype 
#endif

#undef LPSQLOLESYSTEMDATATYPES 
#undef ISQLOLESystemDatatypes 
#undef IID_ISQLOLESystemDatatypes 
#ifdef SQLOLE_UNICODE
interface IWSQLOLESystemDatatypes;	TYPEDEFINTERFACE IWSQLOLESystemDatatypes *		LPWSQLOLESYSTEMDATATYPES;
#define LPSQLOLESYSTEMDATATYPES LPWSQLOLESYSTEMDATATYPES
#define ISQLOLESystemDatatypes IWSQLOLESystemDatatypes
#define IID_ISQLOLESystemDatatypes IID_IWSQLOLESystemDatatypes 
#else
interface IASQLOLESystemDatatypes;	TYPEDEFINTERFACE IASQLOLESystemDatatypes *		LPASQLOLESYSTEMDATATYPES;
#define LPSQLOLESYSTEMDATATYPES LPASQLOLESYSTEMDATATYPES
#define ISQLOLESystemDatatypes IASQLOLESystemDatatypes
#define IID_ISQLOLESystemDatatypes IID_IASQLOLESystemDatatypes 
#endif

#undef LPSQLOLESYSTEMDATATYPE 
#undef ISQLOLESystemDatatype 
#undef IID_ISQLOLESystemDatatype 
#ifdef SQLOLE_UNICODE
interface IWSQLOLESystemDatatype;	TYPEDEFINTERFACE IWSQLOLESystemDatatype *			LPWSQLOLESYSTEMDATATYPE;
#define LPSQLOLESYSTEMDATATYPE LPWSQLOLESYSTEMDATATYPE
#define ISQLOLESystemDatatype IWSQLOLESystemDatatype
#define IID_ISQLOLESystemDatatype IID_IWSQLOLESystemDatatype 
#else
interface IASQLOLESystemDatatype;	TYPEDEFINTERFACE IASQLOLESystemDatatype *			LPASQLOLESYSTEMDATATYPE;
#define LPSQLOLESYSTEMDATATYPE LPASQLOLESYSTEMDATATYPE
#define ISQLOLESystemDatatype IASQLOLESystemDatatype
#define IID_ISQLOLESystemDatatype IID_IASQLOLESystemDatatype 
#endif

#undef LPSQLOLEVIEWS 
#undef ISQLOLEViews 
#undef IID_ISQLOLEViews 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEViews;				TYPEDEFINTERFACE IWSQLOLEViews *					LPWSQLOLEVIEWS;
#define LPSQLOLEVIEWS LPWSQLOLEVIEWS
#define ISQLOLEViews IWSQLOLEViews
#define IID_ISQLOLEViews IID_IWSQLOLEViews 
#else
interface IASQLOLEViews;				TYPEDEFINTERFACE IASQLOLEViews *					LPASQLOLEVIEWS;
#define LPSQLOLEVIEWS LPASQLOLEVIEWS
#define ISQLOLEViews IASQLOLEViews
#define IID_ISQLOLEViews IID_IASQLOLEViews 
#endif

#undef LPSQLOLEVIEW 
#undef ISQLOLEView 
#undef IID_ISQLOLEView 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEView;				TYPEDEFINTERFACE IWSQLOLEView *					LPWSQLOLEVIEW;
#define LPSQLOLEVIEW LPWSQLOLEVIEW
#define ISQLOLEView IWSQLOLEView
#define IID_ISQLOLEView IID_IWSQLOLEView 
#else
interface IASQLOLEView;				TYPEDEFINTERFACE IASQLOLEView *					LPASQLOLEVIEW;
#define LPSQLOLEVIEW LPASQLOLEVIEW
#define ISQLOLEView IASQLOLEView
#define IID_ISQLOLEView IID_IASQLOLEView 
#endif

#undef LPSQLOLESTOREDPROCEDURES 
#undef ISQLOLEStoredProcedures 
#undef IID_ISQLOLEStoredProcedures 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEStoredProcedures;	TYPEDEFINTERFACE IWSQLOLEStoredProcedures *		LPWSQLOLESTOREDPROCEDURES;
#define LPSQLOLESTOREDPROCEDURES LPWSQLOLESTOREDPROCEDURES
#define ISQLOLEStoredProcedures IWSQLOLEStoredProcedures
#define IID_ISQLOLEStoredProcedures IID_IWSQLOLEStoredProcedures 
#else
interface IASQLOLEStoredProcedures;	TYPEDEFINTERFACE IASQLOLEStoredProcedures *		LPASQLOLESTOREDPROCEDURES;
#define LPSQLOLESTOREDPROCEDURES LPASQLOLESTOREDPROCEDURES
#define ISQLOLEStoredProcedures IASQLOLEStoredProcedures
#define IID_ISQLOLEStoredProcedures IID_IASQLOLEStoredProcedures 
#endif

#undef LPSQLOLESTOREDPROCEDURE 
#undef ISQLOLEStoredProcedure 
#undef IID_ISQLOLEStoredProcedure 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEStoredProcedure;	TYPEDEFINTERFACE IWSQLOLEStoredProcedure *		LPWSQLOLESTOREDPROCEDURE;
#define LPSQLOLESTOREDPROCEDURE LPWSQLOLESTOREDPROCEDURE
#define ISQLOLEStoredProcedure IWSQLOLEStoredProcedure
#define IID_ISQLOLEStoredProcedure IID_IWSQLOLEStoredProcedure 
#else
interface IASQLOLEStoredProcedure;	TYPEDEFINTERFACE IASQLOLEStoredProcedure *		LPASQLOLESTOREDPROCEDURE;
#define LPSQLOLESTOREDPROCEDURE LPASQLOLESTOREDPROCEDURE
#define ISQLOLEStoredProcedure IASQLOLEStoredProcedure
#define IID_ISQLOLEStoredProcedure IID_IASQLOLEStoredProcedure 
#endif

#undef LPSQLOLETRIGGERS 
#undef ISQLOLETriggers 
#undef IID_ISQLOLETriggers 
#ifdef SQLOLE_UNICODE
interface IWSQLOLETriggers;			TYPEDEFINTERFACE IWSQLOLETriggers *				LPWSQLOLETRIGGERS;
#define LPSQLOLETRIGGERS LPWSQLOLETRIGGERS
#define ISQLOLETriggers IWSQLOLETriggers
#define IID_ISQLOLETriggers IID_IWSQLOLETriggers 
#else
interface IASQLOLETriggers;			TYPEDEFINTERFACE IASQLOLETriggers *				LPASQLOLETRIGGERS;
#define LPSQLOLETRIGGERS LPASQLOLETRIGGERS
#define ISQLOLETriggers IASQLOLETriggers
#define IID_ISQLOLETriggers IID_IASQLOLETriggers 
#endif

#undef LPSQLOLETRIGGER 
#undef ISQLOLETrigger 
#undef IID_ISQLOLETrigger 
#ifdef SQLOLE_UNICODE
interface IWSQLOLETrigger;			TYPEDEFINTERFACE IWSQLOLETrigger *				LPWSQLOLETRIGGER;
#define LPSQLOLETRIGGER LPWSQLOLETRIGGER
#define ISQLOLETrigger IWSQLOLETrigger
#define IID_ISQLOLETrigger IID_IWSQLOLETrigger 
#else
interface IASQLOLETrigger;			TYPEDEFINTERFACE IASQLOLETrigger *				LPASQLOLETRIGGER;
#define LPSQLOLETRIGGER LPASQLOLETRIGGER
#define ISQLOLETrigger IASQLOLETrigger
#define IID_ISQLOLETrigger IID_IASQLOLETrigger 
#endif

#undef LPSQLOLEUSERS 
#undef ISQLOLEUsers 
#undef IID_ISQLOLEUsers 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEUsers;				TYPEDEFINTERFACE IWSQLOLEUsers *					LPWSQLOLEUSERS;
#define LPSQLOLEUSERS LPWSQLOLEUSERS
#define ISQLOLEUsers IWSQLOLEUsers
#define IID_ISQLOLEUsers IID_IWSQLOLEUsers 
#else
interface IASQLOLEUsers;				TYPEDEFINTERFACE IASQLOLEUsers *					LPASQLOLEUSERS;
#define LPSQLOLEUSERS LPASQLOLEUSERS
#define ISQLOLEUsers IASQLOLEUsers
#define IID_ISQLOLEUsers IID_IASQLOLEUsers 
#endif

#undef LPSQLOLEUSER 
#undef ISQLOLEUser 
#undef IID_ISQLOLEUser 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEUser;				TYPEDEFINTERFACE IWSQLOLEUser *					LPWSQLOLEUSER;
#define LPSQLOLEUSER LPWSQLOLEUSER
#define ISQLOLEUser IWSQLOLEUser
#define IID_ISQLOLEUser IID_IWSQLOLEUser 
#else
interface IASQLOLEUser;				TYPEDEFINTERFACE IASQLOLEUser *					LPASQLOLEUSER;
#define LPSQLOLEUSER LPASQLOLEUSER
#define ISQLOLEUser IASQLOLEUser
#define IID_ISQLOLEUser IID_IASQLOLEUser 
#endif

#undef LPSQLOLEGROUPS 
#undef ISQLOLEGroups 
#undef IID_ISQLOLEGroups 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEGroups;			TYPEDEFINTERFACE IWSQLOLEGroups *					LPWSQLOLEGROUPS;
#define LPSQLOLEGROUPS LPWSQLOLEGROUPS
#define ISQLOLEGroups IWSQLOLEGroups
#define IID_ISQLOLEGroups IID_IWSQLOLEGroups 
#else
interface IASQLOLEGroups;			TYPEDEFINTERFACE IASQLOLEGroups *					LPASQLOLEGROUPS;
#define LPSQLOLEGROUPS LPASQLOLEGROUPS
#define ISQLOLEGroups IASQLOLEGroups
#define IID_ISQLOLEGroups IID_IASQLOLEGroups 
#endif

#undef LPSQLOLEGROUP 
#undef ISQLOLEGroup 
#undef IID_ISQLOLEGroup 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEGroup;				TYPEDEFINTERFACE IWSQLOLEGroup *					LPWSQLOLEGROUP;
#define LPSQLOLEGROUP LPWSQLOLEGROUP
#define ISQLOLEGroup IWSQLOLEGroup
#define IID_ISQLOLEGroup IID_IWSQLOLEGroup 
#else
interface IASQLOLEGroup;				TYPEDEFINTERFACE IASQLOLEGroup *					LPASQLOLEGROUP;
#define LPSQLOLEGROUP LPASQLOLEGROUP
#define ISQLOLEGroup IASQLOLEGroup
#define IID_ISQLOLEGroup IID_IASQLOLEGroup 
#endif

#undef LPSQLOLEINDEXES 
#undef ISQLOLEIndexes 
#undef IID_ISQLOLEIndexes 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEIndexes;			TYPEDEFINTERFACE IWSQLOLEIndexes *				LPWSQLOLEINDEXES;
#define LPSQLOLEINDEXES LPWSQLOLEINDEXES
#define ISQLOLEIndexes IWSQLOLEIndexes
#define IID_ISQLOLEIndexes IID_IWSQLOLEIndexes 
#else
interface IASQLOLEIndexes;			TYPEDEFINTERFACE IASQLOLEIndexes *				LPASQLOLEINDEXES;
#define LPSQLOLEINDEXES LPASQLOLEINDEXES
#define ISQLOLEIndexes IASQLOLEIndexes
#define IID_ISQLOLEIndexes IID_IASQLOLEIndexes 
#endif

#undef LPSQLOLEINDEX 
#undef ISQLOLEIndex 
#undef IID_ISQLOLEIndex 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEIndex;				TYPEDEFINTERFACE IWSQLOLEIndex *					LPWSQLOLEINDEX;
#define LPSQLOLEINDEX LPWSQLOLEINDEX
#define ISQLOLEIndex IWSQLOLEIndex
#define IID_ISQLOLEIndex IID_IWSQLOLEIndex 
#else
interface IASQLOLEIndex;				TYPEDEFINTERFACE IASQLOLEIndex *					LPASQLOLEINDEX;
#define LPSQLOLEINDEX LPASQLOLEINDEX
#define ISQLOLEIndex IASQLOLEIndex
#define IID_ISQLOLEIndex IID_IASQLOLEIndex 
#endif

#undef LPSQLOLETRIGGERS 
#undef ISQLOLETriggers 
#undef IID_ISQLOLETriggers 
#ifdef SQLOLE_UNICODE
interface IWSQLOLETriggers;			TYPEDEFINTERFACE IWSQLOLETriggers *				LPWSQLOLETRIGGERS;
#define LPSQLOLETRIGGERS LPWSQLOLETRIGGERS
#define ISQLOLETriggers IWSQLOLETriggers
#define IID_ISQLOLETriggers IID_IWSQLOLETriggers 
#else
interface IASQLOLETriggers;			TYPEDEFINTERFACE IASQLOLETriggers *				LPASQLOLETRIGGERS;
#define LPSQLOLETRIGGERS LPASQLOLETRIGGERS
#define ISQLOLETriggers IASQLOLETriggers
#define IID_ISQLOLETriggers IID_IASQLOLETriggers 
#endif

#undef LPSQLOLETRIGGER 
#undef ISQLOLETrigger 
#undef IID_ISQLOLETrigger 
#ifdef SQLOLE_UNICODE
interface IWSQLOLETrigger;			TYPEDEFINTERFACE IWSQLOLETrigger *				LPWSQLOLETRIGGER;
#define LPSQLOLETRIGGER LPWSQLOLETRIGGER
#define ISQLOLETrigger IWSQLOLETrigger
#define IID_ISQLOLETrigger IID_IWSQLOLETrigger 
#else
interface IASQLOLETrigger;			TYPEDEFINTERFACE IASQLOLETrigger *				LPASQLOLETRIGGER;
#define LPSQLOLETRIGGER LPASQLOLETRIGGER
#define ISQLOLETrigger IASQLOLETrigger
#define IID_ISQLOLETrigger IID_IASQLOLETrigger 
#endif

#undef LPSQLOLEREMOTELOGINS 
#undef ISQLOLERemoteLogins 
#undef IID_ISQLOLERemoteLogins 
#ifdef SQLOLE_UNICODE
interface IWSQLOLERemoteLogins;		TYPEDEFINTERFACE IWSQLOLERemoteLogins *			LPWSQLOLEREMOTELOGINS;
#define LPSQLOLEREMOTELOGINS LPWSQLOLEREMOTELOGINS
#define ISQLOLERemoteLogins IWSQLOLERemoteLogins
#define IID_ISQLOLERemoteLogins IID_IWSQLOLERemoteLogins 
#else
interface IASQLOLERemoteLogins;		TYPEDEFINTERFACE IASQLOLERemoteLogins *			LPASQLOLEREMOTELOGINS;
#define LPSQLOLEREMOTELOGINS LPASQLOLEREMOTELOGINS
#define ISQLOLERemoteLogins IASQLOLERemoteLogins
#define IID_ISQLOLERemoteLogins IID_IASQLOLERemoteLogins 
#endif

#undef LPSQLOLEREMOTELOGIN 
#undef ISQLOLERemoteLogin 
#undef IID_ISQLOLERemoteLogin 
#ifdef SQLOLE_UNICODE
interface IWSQLOLERemoteLogin;		TYPEDEFINTERFACE IWSQLOLERemoteLogin *			LPWSQLOLEREMOTELOGIN;
#define LPSQLOLEREMOTELOGIN LPWSQLOLEREMOTELOGIN
#define ISQLOLERemoteLogin IWSQLOLERemoteLogin
#define IID_ISQLOLERemoteLogin IID_IWSQLOLERemoteLogin 
#else
interface IASQLOLERemoteLogin;		TYPEDEFINTERFACE IASQLOLERemoteLogin *			LPASQLOLEREMOTELOGIN;
#define LPSQLOLEREMOTELOGIN LPASQLOLEREMOTELOGIN
#define ISQLOLERemoteLogin IASQLOLERemoteLogin
#define IID_ISQLOLERemoteLogin IID_IASQLOLERemoteLogin 
#endif

#undef LPSQLOLETASKS 
#undef ISQLOLETasks 
#undef IID_ISQLOLETasks 
#ifdef SQLOLE_UNICODE
interface IWSQLOLETasks;			TYPEDEFINTERFACE IWSQLOLETasks *					LPWSQLOLETASKS;
#define LPSQLOLETASKS LPWSQLOLETASKS
#define ISQLOLETasks IWSQLOLETasks
#define IID_ISQLOLETasks IID_IWSQLOLETasks 
#else
interface IASQLOLETasks;			TYPEDEFINTERFACE IASQLOLETasks *					LPASQLOLETASKS;
#define LPSQLOLETASKS LPASQLOLETASKS
#define ISQLOLETasks IASQLOLETasks
#define IID_ISQLOLETasks IID_IASQLOLETasks 
#endif

#undef LPSQLOLETASK 
#undef ISQLOLETask 
#undef IID_ISQLOLETask 
#ifdef SQLOLE_UNICODE
interface IWSQLOLETask;				TYPEDEFINTERFACE IWSQLOLETask *					LPWSQLOLETASK;
#define LPSQLOLETASK LPWSQLOLETASK
#define ISQLOLETask IWSQLOLETask
#define IID_ISQLOLETask IID_IWSQLOLETask 
#else
interface IASQLOLETask;				TYPEDEFINTERFACE IASQLOLETask *					LPASQLOLETASK;
#define LPSQLOLETASK LPASQLOLETASK
#define ISQLOLETask IASQLOLETask
#define IID_ISQLOLETask IID_IASQLOLETask 
#endif

#undef LPSQLOLEALERTS 
#undef ISQLOLEAlerts 
#undef IID_ISQLOLEAlerts 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEAlerts;			TYPEDEFINTERFACE IWSQLOLEAlerts *					LPWSQLOLEALERTS;
#define LPSQLOLEALERTS LPWSQLOLEALERTS
#define ISQLOLEAlerts IWSQLOLEAlerts
#define IID_ISQLOLEAlerts IID_IWSQLOLEAlerts 
#else
interface IASQLOLEAlerts;			TYPEDEFINTERFACE IASQLOLEAlerts *					LPASQLOLEALERTS;
#define LPSQLOLEALERTS LPASQLOLEALERTS
#define ISQLOLEAlerts IASQLOLEAlerts
#define IID_ISQLOLEAlerts IID_IASQLOLEAlerts 
#endif

#undef LPSQLOLEALERT 
#undef ISQLOLEAlert 
#undef IID_ISQLOLEAlert 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEAlert;				TYPEDEFINTERFACE IWSQLOLEAlert *					LPWSQLOLEALERT;
#define LPSQLOLEALERT LPWSQLOLEALERT
#define ISQLOLEAlert IWSQLOLEAlert
#define IID_ISQLOLEAlert IID_IWSQLOLEAlert 
#else
interface IASQLOLEAlert;				TYPEDEFINTERFACE IASQLOLEAlert *					LPASQLOLEALERT;
#define LPSQLOLEALERT LPASQLOLEALERT
#define ISQLOLEAlert IASQLOLEAlert
#define IID_ISQLOLEAlert IID_IASQLOLEAlert 
#endif

#undef LPSQLOLEOPERATORS 
#undef ISQLOLEOperators 
#undef IID_ISQLOLEOperators 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEOperators;			TYPEDEFINTERFACE IWSQLOLEOperators *					LPWSQLOLEOPERATORS;
#define LPSQLOLEOPERATORS LPWSQLOLEOPERATORS
#define ISQLOLEOperators IWSQLOLEOperators
#define IID_ISQLOLEOperators IID_IWSQLOLEOperators 
#else
interface IASQLOLEOperators;			TYPEDEFINTERFACE IASQLOLEOperators *					LPASQLOLEOPERATORS;
#define LPSQLOLEOPERATORS LPASQLOLEOPERATORS
#define ISQLOLEOperators IASQLOLEOperators
#define IID_ISQLOLEOperators IID_IASQLOLEOperators 
#endif

#undef LPSQLOLEOPERATOR 
#undef ISQLOLEOperator 
#undef IID_ISQLOLEOperator 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEOperator;				TYPEDEFINTERFACE IWSQLOLEOperator *					LPWSQLOLEOPERATOR;
#define LPSQLOLEOPERATOR LPWSQLOLEOPERATOR
#define ISQLOLEOperator IWSQLOLEOperator
#define IID_ISQLOLEOperator IID_IWSQLOLEOperator 
#else
interface IASQLOLEOperator;				TYPEDEFINTERFACE IASQLOLEOperator *					LPASQLOLEOPERATOR;
#define LPSQLOLEOPERATOR LPASQLOLEOPERATOR
#define ISQLOLEOperator IASQLOLEOperator
#define IID_ISQLOLEOperator IID_IASQLOLEOperator 
#endif

#undef LPSQLOLEPUBLICATIONS 
#undef ISQLOLEPublications 
#undef IID_ISQLOLEPublications 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEPublications;			TYPEDEFINTERFACE IWSQLOLEPublications *					LPWSQLOLEPUBLICATIONS;
#define LPSQLOLEPUBLICATIONS LPWSQLOLEPUBLICATIONS
#define ISQLOLEPublications IWSQLOLEPublications
#define IID_ISQLOLEPublications IID_IWSQLOLEPublications 
#else
interface IASQLOLEPublications;			TYPEDEFINTERFACE IASQLOLEPublications *					LPASQLOLEPUBLICATIONS;
#define LPSQLOLEPUBLICATIONS LPASQLOLEPUBLICATIONS
#define ISQLOLEPublications IASQLOLEPublications
#define IID_ISQLOLEPublications IID_IASQLOLEPublications 
#endif

#undef LPSQLOLEPUBLICATION 
#undef ISQLOLEPublication 
#undef IID_ISQLOLEPublication 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEPublication;				TYPEDEFINTERFACE IWSQLOLEPublication *					LPWSQLOLEPUBLICATION;
#define LPSQLOLEPUBLICATION LPWSQLOLEPUBLICATION
#define ISQLOLEPublication IWSQLOLEPublication
#define IID_ISQLOLEPublication IID_IWSQLOLEPublication 
#else
interface IASQLOLEPublication;				TYPEDEFINTERFACE IASQLOLEPublication *					LPASQLOLEPUBLICATION;
#define LPSQLOLEPUBLICATION LPASQLOLEPUBLICATION
#define ISQLOLEPublication IASQLOLEPublication
#define IID_ISQLOLEPublication IID_IASQLOLEPublication 
#endif

#undef LPSQLOLEARTICLES 
#undef ISQLOLEArticles 
#undef IID_ISQLOLEArticles 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEArticles;			TYPEDEFINTERFACE IWSQLOLEArticles *					LPWSQLOLEARTICLES;
#define LPSQLOLEARTICLES LPWSQLOLEARTICLES
#define ISQLOLEArticles IWSQLOLEArticles
#define IID_ISQLOLEArticles IID_IWSQLOLEArticles 
#else
interface IASQLOLEArticles;			TYPEDEFINTERFACE IASQLOLEArticles *					LPASQLOLEARTICLES;
#define LPSQLOLEARTICLES LPASQLOLEARTICLES
#define ISQLOLEArticles IASQLOLEArticles
#define IID_ISQLOLEArticles IID_IASQLOLEArticles 
#endif

#undef LPSQLOLEARTICLE 
#undef ISQLOLEArticle 
#undef IID_ISQLOLEArticle 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEArticle;				TYPEDEFINTERFACE IWSQLOLEArticle *					LPWSQLOLEARTICLE;
#define LPSQLOLEARTICLE LPWSQLOLEARTICLE
#define ISQLOLEArticle IWSQLOLEArticle
#define IID_ISQLOLEArticle IID_IWSQLOLEArticle 
#else
interface IASQLOLEArticle;				TYPEDEFINTERFACE IASQLOLEArticle *					LPASQLOLEARTICLE;
#define LPSQLOLEARTICLE LPASQLOLEARTICLE
#define ISQLOLEArticle IASQLOLEArticle
#define IID_ISQLOLEArticle IID_IASQLOLEArticle 
#endif

#undef LPSQLOLESUBSCRIPTIONS 
#undef ISQLOLESubscriptions 
#undef IID_ISQLOLESubscriptions 
#ifdef SQLOLE_UNICODE
interface IWSQLOLESubscriptions;			TYPEDEFINTERFACE IWSQLOLESubscriptions *					LPWSQLOLESUBSCRIPTIONS;
#define LPSQLOLESUBSCRIPTIONS LPWSQLOLESUBSCRIPTIONS
#define ISQLOLESubscriptions IWSQLOLESubscriptions
#define IID_ISQLOLESubscriptions IID_IWSQLOLESubscriptions 
#else
interface IASQLOLESubscriptions;			TYPEDEFINTERFACE IASQLOLESubscriptions *					LPASQLOLESUBSCRIPTIONS;
#define LPSQLOLESUBSCRIPTIONS LPASQLOLESUBSCRIPTIONS
#define ISQLOLESubscriptions IASQLOLESubscriptions
#define IID_ISQLOLESubscriptions IID_IASQLOLESubscriptions 
#endif

#undef LPSQLOLESUBSCRIPTION 
#undef ISQLOLESubscription 
#undef IID_ISQLOLESubscription 
#ifdef SQLOLE_UNICODE
interface IWSQLOLESubscription;				TYPEDEFINTERFACE IWSQLOLESubscription *					LPWSQLOLESUBSCRIPTION;
#define LPSQLOLESUBSCRIPTION LPWSQLOLESUBSCRIPTION
#define ISQLOLESubscription IWSQLOLESubscription
#define IID_ISQLOLESubscription IID_IWSQLOLESubscription 
#else
interface IASQLOLESubscription;				TYPEDEFINTERFACE IASQLOLESubscription *					LPASQLOLESUBSCRIPTION;
#define LPSQLOLESUBSCRIPTION LPASQLOLESUBSCRIPTION
#define ISQLOLESubscription IASQLOLESubscription
#define IID_ISQLOLESubscription IID_IASQLOLESubscription 
#endif

#undef LPSQLOLESUBSCRIBERINFO 
#undef ISQLOLESubscriberInfo 
#undef IID_ISQLOLESubscriberInfo 
#ifdef SQLOLE_UNICODE
interface IWSQLOLESubscriberInfo;				TYPEDEFINTERFACE IWSQLOLESubscriberInfo *					LPWSQLOLESUBSCRIBERINFO;
#define LPSQLOLESUBSCRIBERINFO LPWSQLOLESUBSCRIBERINFO
#define ISQLOLESubscriberInfo IWSQLOLESubscriberInfo
#define IID_ISQLOLESubscriberInfo IID_IWSQLOLESubscriberInfo 
#else
interface IASQLOLESubscriberInfo;				TYPEDEFINTERFACE IASQLOLESubscriberInfo *					LPASQLOLESUBSCRIBERINFO;
#define LPSQLOLESUBSCRIBERINFO LPASQLOLESUBSCRIBERINFO
#define ISQLOLESubscriberInfo IASQLOLESubscriberInfo
#define IID_ISQLOLESubscriberInfo IID_IASQLOLESubscriberInfo 
#endif

#undef LPSQLOLEHISTORYFILTER 
#undef ISQLOLEHistoryFilter 
#undef IID_ISQLOLEHistoryFilter 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEHistoryFilter;			TYPEDEFINTERFACE IWSQLOLEHistoryFilter *				LPWSQLOLEHISTORYFILTER;
#define LPSQLOLEHISTORYFILTER LPWSQLOLEHISTORYFILTER
#define ISQLOLEHistoryFilter IWSQLOLEHistoryFilter
#define IID_ISQLOLEHistoryFilter IID_IWSQLOLEHistoryFilter 
#else
interface IASQLOLEHistoryFilter;			TYPEDEFINTERFACE IASQLOLEHistoryFilter *				LPASQLOLEHISTORYFILTER;
#define LPSQLOLEHISTORYFILTER LPASQLOLEHISTORYFILTER
#define ISQLOLEHistoryFilter IASQLOLEHistoryFilter
#define IID_ISQLOLEHistoryFilter IID_IASQLOLEHistoryFilter 
#endif

#undef LPSQLOLEDBOBJECTS 
#undef ISQLOLEDBObjects 
#undef IID_ISQLOLEDBObjects 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEDBObjects;			TYPEDEFINTERFACE IWSQLOLEDBObjects *				LPWSQLOLEDBOBJECTS;
#define LPSQLOLEDBOBJECTS LPWSQLOLEDBOBJECTS
#define ISQLOLEDBObjects IWSQLOLEDBObjects
#define IID_ISQLOLEDBObjects IID_IWSQLOLEDBObjects 
#else
interface IASQLOLEDBObjects;			TYPEDEFINTERFACE IASQLOLEDBObjects *				LPASQLOLEDBOBJECTS;
#define LPSQLOLEDBOBJECTS LPASQLOLEDBOBJECTS
#define ISQLOLEDBObjects IASQLOLEDBObjects
#define IID_ISQLOLEDBObjects IID_IASQLOLEDBObjects 
#endif

#undef LPSQLOLEDBOBJECT 
#undef ISQLOLEDBObject 
#undef IID_ISQLOLEDBObject 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEDBObject;			TYPEDEFINTERFACE IWSQLOLEDBObject *				LPWSQLOLEDBOBJECT;
#define LPSQLOLEDBOBJECT LPWSQLOLEDBOBJECT
#define ISQLOLEDBObject IWSQLOLEDBObject
#define IID_ISQLOLEDBObject IID_IWSQLOLEDBObject 
#else
interface IASQLOLEDBObject;			TYPEDEFINTERFACE IASQLOLEDBObject *				LPASQLOLEDBOBJECT;
#define LPSQLOLEDBOBJECT LPASQLOLEDBOBJECT
#define ISQLOLEDBObject IASQLOLEDBObject
#define IID_ISQLOLEDBObject IID_IASQLOLEDBObject 
#endif

#undef LPSQLOLEDBOPTION 
#undef ISQLOLEDBOption 
#undef IID_ISQLOLEDBOption 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEDBOption;			TYPEDEFINTERFACE IWSQLOLEDBOption *				LPWSQLOLEDBOPTION;
#define LPSQLOLEDBOPTION LPWSQLOLEDBOPTION
#define ISQLOLEDBOption IWSQLOLEDBOption
#define IID_ISQLOLEDBOption IID_IWSQLOLEDBOption 
#else
interface IASQLOLEDBOption;			TYPEDEFINTERFACE IASQLOLEDBOption *				LPASQLOLEDBOPTION;
#define LPSQLOLEDBOPTION LPASQLOLEDBOPTION
#define ISQLOLEDBOption IASQLOLEDBOption
#define IID_ISQLOLEDBOption IID_IASQLOLEDBOption 
#endif

#undef LPSQLOLECONFIGURATION 
#undef ISQLOLEConfiguration 
#undef IID_ISQLOLEConfiguration 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEConfiguration;		TYPEDEFINTERFACE IWSQLOLEConfiguration *			LPWSQLOLECONFIGURATION;
#define LPSQLOLECONFIGURATION LPWSQLOLECONFIGURATION
#define ISQLOLEConfiguration IWSQLOLEConfiguration
#define IID_ISQLOLEConfiguration IID_IWSQLOLEConfiguration 
#else
interface IASQLOLEConfiguration;		TYPEDEFINTERFACE IASQLOLEConfiguration *			LPASQLOLECONFIGURATION;
#define LPSQLOLECONFIGURATION LPASQLOLECONFIGURATION
#define ISQLOLEConfiguration IASQLOLEConfiguration
#define IID_ISQLOLEConfiguration IID_IASQLOLEConfiguration 
#endif

#undef LPSQLOLECONFIGVALUES 
#undef ISQLOLEConfigValues 
#undef IID_ISQLOLEConfigValues 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEConfigValues;		TYPEDEFINTERFACE IWSQLOLEConfigValues *				LPWSQLOLECONFIGVALUES;
#define LPSQLOLECONFIGVALUES LPWSQLOLECONFIGVALUES
#define ISQLOLEConfigValues IWSQLOLEConfigValues
#define IID_ISQLOLEConfigValues IID_IWSQLOLEConfigValues 
#else
interface IASQLOLEConfigValues;		TYPEDEFINTERFACE IASQLOLEConfigValues *				LPASQLOLECONFIGVALUES;
#define LPSQLOLECONFIGVALUES LPASQLOLECONFIGVALUES
#define ISQLOLEConfigValues IASQLOLEConfigValues
#define IID_ISQLOLEConfigValues IID_IASQLOLEConfigValues 
#endif

#undef LPSQLOLECONFIGVALUE 
#undef ISQLOLEConfigValue 
#undef IID_ISQLOLEConfigValue 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEConfigValue;		TYPEDEFINTERFACE IWSQLOLEConfigValue *				LPWSQLOLECONFIGVALUE;
#define LPSQLOLECONFIGVALUE LPWSQLOLECONFIGVALUE
#define ISQLOLEConfigValue IWSQLOLEConfigValue
#define IID_ISQLOLEConfigValue IID_IWSQLOLEConfigValue 
#else
interface IASQLOLEConfigValue;		TYPEDEFINTERFACE IASQLOLEConfigValue *				LPASQLOLECONFIGVALUE;
#define LPSQLOLECONFIGVALUE LPASQLOLECONFIGVALUE
#define ISQLOLEConfigValue IASQLOLEConfigValue
#define IID_ISQLOLEConfigValue IID_IASQLOLEConfigValue 
#endif

#undef LPSQLOLEEXECUTIVE 
#undef ISQLOLEExecutive 
#undef IID_ISQLOLEExecutive 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEExecutive;			TYPEDEFINTERFACE IWSQLOLEExecutive *				LPWSQLOLEEXECUTIVE;
#define LPSQLOLEEXECUTIVE LPWSQLOLEEXECUTIVE
#define ISQLOLEExecutive IWSQLOLEExecutive
#define IID_ISQLOLEExecutive IID_IWSQLOLEExecutive 
#else
interface IASQLOLEExecutive;			TYPEDEFINTERFACE IASQLOLEExecutive *				LPASQLOLEEXECUTIVE;
#define LPSQLOLEEXECUTIVE LPASQLOLEEXECUTIVE
#define ISQLOLEExecutive IASQLOLEExecutive
#define IID_ISQLOLEExecutive IID_IASQLOLEExecutive 
#endif

#undef LPSQLOLEQUERYRESULTS 
#undef ISQLOLEQueryResults 
#undef IID_ISQLOLEQueryResults 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEQueryResults;		TYPEDEFINTERFACE IWSQLOLEQueryResults *			LPWSQLOLEQUERYRESULTS;
#define LPSQLOLEQUERYRESULTS LPWSQLOLEQUERYRESULTS
#define ISQLOLEQueryResults IWSQLOLEQueryResults
#define IID_ISQLOLEQueryResults IID_IWSQLOLEQueryResults 
#else
interface IASQLOLEQueryResults;		TYPEDEFINTERFACE IASQLOLEQueryResults *			LPASQLOLEQUERYRESULTS;
#define LPSQLOLEQUERYRESULTS LPASQLOLEQUERYRESULTS
#define ISQLOLEQueryResults IASQLOLEQueryResults
#define IID_ISQLOLEQueryResults IID_IASQLOLEQueryResults 
#endif

#undef LPSQLOLETRANSACTIONLOG 
#undef ISQLOLETransactionLog 
#undef IID_ISQLOLETransactionLog 
#ifdef SQLOLE_UNICODE
interface IWSQLOLETransactionLog;	TYPEDEFINTERFACE IWSQLOLETransactionLog *			LPWSQLOLETRANSACTIONLOG;
#define LPSQLOLETRANSACTIONLOG LPWSQLOLETRANSACTIONLOG
#define ISQLOLETransactionLog IWSQLOLETransactionLog
#define IID_ISQLOLETransactionLog IID_IWSQLOLETransactionLog 
#else
interface IASQLOLETransactionLog;	TYPEDEFINTERFACE IASQLOLETransactionLog *			LPASQLOLETRANSACTIONLOG;
#define LPSQLOLETRANSACTIONLOG LPASQLOLETRANSACTIONLOG
#define ISQLOLETransactionLog IASQLOLETransactionLog
#define IID_ISQLOLETransactionLog IID_IASQLOLETransactionLog 
#endif

#undef LPSQLOLEREGISTRY 
#undef ISQLOLERegistry 
#undef IID_ISQLOLERegistry 
#ifdef SQLOLE_UNICODE
interface IWSQLOLERegistry;			TYPEDEFINTERFACE IWSQLOLERegistry *				LPWSQLOLEREGISTRY;
#define LPSQLOLEREGISTRY LPWSQLOLEREGISTRY
#define ISQLOLERegistry IWSQLOLERegistry
#define IID_ISQLOLERegistry IID_IWSQLOLERegistry 
#else
interface IASQLOLERegistry;			TYPEDEFINTERFACE IASQLOLERegistry *				LPASQLOLEREGISTRY;
#define LPSQLOLEREGISTRY LPASQLOLEREGISTRY
#define ISQLOLERegistry IASQLOLERegistry
#define IID_ISQLOLERegistry IID_IASQLOLERegistry 
#endif

#undef LPSQLOLEBACKUP 
#undef ISQLOLEBackup 
#undef IID_ISQLOLEBackup 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEBackup;			TYPEDEFINTERFACE IWSQLOLEBackup *					LPWSQLOLEBACKUP;
#define LPSQLOLEBACKUP LPWSQLOLEBACKUP
#define ISQLOLEBackup IWSQLOLEBackup
#define IID_ISQLOLEBackup IID_IWSQLOLEBackup 
#else
interface IASQLOLEBackup;			TYPEDEFINTERFACE IASQLOLEBackup *					LPASQLOLEBACKUP;
#define LPSQLOLEBACKUP LPASQLOLEBACKUP
#define ISQLOLEBackup IASQLOLEBackup
#define IID_ISQLOLEBackup IID_IASQLOLEBackup 
#endif

#undef LPSQLOLEBULKCOPY 
#undef ISQLOLEBulkCopy 
#undef IID_ISQLOLEBulkCopy 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEBulkCopy;			TYPEDEFINTERFACE IWSQLOLEBulkCopy *					LPWSQLOLEBULKCOPY;
#define LPSQLOLEBULKCOPY LPWSQLOLEBULKCOPY
#define ISQLOLEBulkCopy IWSQLOLEBulkCopy
#define IID_ISQLOLEBulkCopy IID_IWSQLOLEBulkCopy 
#else
interface IASQLOLEBulkCopy;			TYPEDEFINTERFACE IASQLOLEBulkCopy *					LPASQLOLEBULKCOPY;
#define LPSQLOLEBULKCOPY LPASQLOLEBULKCOPY
#define ISQLOLEBulkCopy IASQLOLEBulkCopy
#define IID_ISQLOLEBulkCopy IID_IASQLOLEBulkCopy 
#endif

#undef LPSQLOLEOBJECTLIST 
#undef ISQLOLEObjectList 
#undef IID_ISQLOLEObjectList 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEObjectList;		TYPEDEFINTERFACE IWSQLOLEObjectList *				LPWSQLOLEOBJECTLIST;
#define LPSQLOLEOBJECTLIST LPWSQLOLEOBJECTLIST
#define ISQLOLEObjectList IWSQLOLEObjectList
#define IID_ISQLOLEObjectList IID_IWSQLOLEObjectList 
#else
interface IASQLOLEObjectList;		TYPEDEFINTERFACE IASQLOLEObjectList *				LPASQLOLEOBJECTLIST;
#define LPSQLOLEOBJECTLIST LPASQLOLEOBJECTLIST
#define ISQLOLEObjectList IASQLOLEObjectList
#define IID_ISQLOLEObjectList IID_IASQLOLEObjectList 
#endif

#undef LPSQLOLENAMES 
#undef ISQLOLENames 
#undef IID_ISQLOLENames 
#ifdef SQLOLE_UNICODE
interface IWSQLOLENames;		TYPEDEFINTERFACE IWSQLOLENames *				LPWSQLOLENAMES;
#define LPSQLOLENAMES LPWSQLOLENAMES
#define ISQLOLENames IWSQLOLENames
#define IID_ISQLOLENames IID_IWSQLOLENames 
#else
interface IASQLOLENames;		TYPEDEFINTERFACE IASQLOLENames *				LPASQLOLENAMES;
#define LPSQLOLENAMES LPASQLOLENAMES
#define ISQLOLENames IASQLOLENames
#define IID_ISQLOLENames IID_IASQLOLENames 
#endif

#undef LPSQLOLENAMELIST 
#undef ISQLOLENameList 
#undef IID_ISQLOLENameList 
#ifdef SQLOLE_UNICODE
interface IWSQLOLENameList;		TYPEDEFINTERFACE IWSQLOLENameList *				LPWSQLOLENAMELIST;
#define LPSQLOLENAMELIST LPWSQLOLENAMELIST
#define ISQLOLENameList IWSQLOLENameList
#define IID_ISQLOLENameList IID_IWSQLOLENameList 
#else
interface IASQLOLENameList;		TYPEDEFINTERFACE IASQLOLENameList *				LPASQLOLENAMELIST;
#define LPSQLOLENAMELIST LPASQLOLENAMELIST
#define ISQLOLENameList IASQLOLENameList
#define IID_ISQLOLENameList IID_IASQLOLENameList 
#endif

#undef LPSQLOLEPERMISSION 
#undef ISQLOLEPermission 
#undef IID_ISQLOLEPermission 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEPermission;		TYPEDEFINTERFACE IWSQLOLEPermission *				LPWSQLOLEPERMISSION;
#define LPSQLOLEPERMISSION LPWSQLOLEPERMISSION
#define ISQLOLEPermission IWSQLOLEPermission
#define IID_ISQLOLEPermission IID_IWSQLOLEPermission 
#else
interface IASQLOLEPermission;		TYPEDEFINTERFACE IASQLOLEPermission *				LPASQLOLEPERMISSION;
#define LPSQLOLEPERMISSION LPASQLOLEPERMISSION
#define ISQLOLEPermission IASQLOLEPermission
#define IID_ISQLOLEPermission IID_IASQLOLEPermission 
#endif

#undef LPSQLOLEINTEGRATEDSECURITY 
#undef ISQLOLEIntegratedSecurity 
#undef IID_ISQLOLEIntegratedSecurity 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEIntegratedSecurity;	TYPEDEFINTERFACE IWSQLOLEIntegratedSecurity *	LPWSQLOLEINTEGRATEDSECURITY;
#define LPSQLOLEINTEGRATEDSECURITY LPWSQLOLEINTEGRATEDSECURITY
#define ISQLOLEIntegratedSecurity IWSQLOLEIntegratedSecurity
#define IID_ISQLOLEIntegratedSecurity IID_IWSQLOLEIntegratedSecurity 
#else
interface IASQLOLEIntegratedSecurity;	TYPEDEFINTERFACE IASQLOLEIntegratedSecurity *	LPASQLOLEINTEGRATEDSECURITY;
#define LPSQLOLEINTEGRATEDSECURITY LPASQLOLEINTEGRATEDSECURITY
#define ISQLOLEIntegratedSecurity IASQLOLEIntegratedSecurity
#define IID_ISQLOLEIntegratedSecurity IID_IASQLOLEIntegratedSecurity 
#endif

#undef LPSQLOLEKEYS 
#undef ISQLOLEKeys 
#undef IID_ISQLOLEKeys 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEKeys;			TYPEDEFINTERFACE IWSQLOLEKeys *					LPWSQLOLEKEYS;
#define LPSQLOLEKEYS LPWSQLOLEKEYS
#define ISQLOLEKeys IWSQLOLEKeys
#define IID_ISQLOLEKeys IID_IWSQLOLEKeys 
#else
interface IASQLOLEKeys;			TYPEDEFINTERFACE IASQLOLEKeys *					LPASQLOLEKEYS;
#define LPSQLOLEKEYS LPASQLOLEKEYS
#define ISQLOLEKeys IASQLOLEKeys
#define IID_ISQLOLEKeys IID_IASQLOLEKeys 
#endif

#undef LPSQLOLEKEY 
#undef ISQLOLEKey 
#undef IID_ISQLOLEKey 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEKey;				TYPEDEFINTERFACE IWSQLOLEKey *					LPWSQLOLEKEY;
#define LPSQLOLEKEY LPWSQLOLEKEY
#define ISQLOLEKey IWSQLOLEKey
#define IID_ISQLOLEKey IID_IWSQLOLEKey 
#else
interface IASQLOLEKey;				TYPEDEFINTERFACE IASQLOLEKey *					LPASQLOLEKEY;
#define LPSQLOLEKEY LPASQLOLEKEY
#define ISQLOLEKey IASQLOLEKey
#define IID_ISQLOLEKey IID_IASQLOLEKey 
#endif

#undef LPSQLOLECHECKS 
#undef ISQLOLEChecks 
#undef IID_ISQLOLEChecks 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEChecks;			TYPEDEFINTERFACE IWSQLOLEChecks *					LPWSQLOLECHECKS;
#define LPSQLOLECHECKS LPWSQLOLECHECKS
#define ISQLOLEChecks IWSQLOLEChecks
#define IID_ISQLOLEChecks IID_IWSQLOLEChecks 
#else
interface IASQLOLEChecks;			TYPEDEFINTERFACE IASQLOLEChecks *					LPASQLOLECHECKS;
#define LPSQLOLECHECKS LPASQLOLECHECKS
#define ISQLOLEChecks IASQLOLEChecks
#define IID_ISQLOLEChecks IID_IASQLOLEChecks 
#endif

#undef LPSQLOLECHECK 
#undef ISQLOLECheck 
#undef IID_ISQLOLECheck 
#ifdef SQLOLE_UNICODE
interface IWSQLOLECheck;				TYPEDEFINTERFACE IWSQLOLECheck *					LPWSQLOLECHECK;
#define LPSQLOLECHECK LPWSQLOLECHECK
#define ISQLOLECheck IWSQLOLECheck
#define IID_ISQLOLECheck IID_IWSQLOLECheck 
#else
interface IASQLOLECheck;				TYPEDEFINTERFACE IASQLOLECheck *					LPASQLOLECHECK;
#define LPSQLOLECHECK LPASQLOLECHECK
#define ISQLOLECheck IASQLOLECheck
#define IID_ISQLOLECheck IID_IASQLOLECheck 
#endif

#undef LPSQLOLEDRIDEFAULT 
#undef ISQLOLEDRIDefault 
#undef IID_ISQLOLEDRIDefault 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEDRIDefault;				TYPEDEFINTERFACE IWSQLOLEDRIDefault *					LPWSQLOLEDRIDEFAULT;
#define LPSQLOLEDRIDEFAULT LPWSQLOLEDRIDEFAULT
#define ISQLOLEDRIDefault IWSQLOLEDRIDefault
#define IID_ISQLOLEDRIDefault IID_IWSQLOLEDRIDefault 
#else
interface IASQLOLEDRIDefault;				TYPEDEFINTERFACE IASQLOLEDRIDefault *					LPASQLOLEDRIDEFAULT;
#define LPSQLOLEDRIDEFAULT LPASQLOLEDRIDEFAULT
#define ISQLOLEDRIDefault IASQLOLEDRIDefault
#define IID_ISQLOLEDRIDefault IID_IASQLOLEDRIDefault 
#endif

#undef LPSQLOLEALERTSYSTEM 
#undef ISQLOLEAlertSystem 
#undef IID_ISQLOLEAlertSystem 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEAlertSystem;				TYPEDEFINTERFACE IWSQLOLEAlertSystem *					LPWSQLOLEALERTSYSTEM;
#define LPSQLOLEALERTSYSTEM LPWSQLOLEALERTSYSTEM
#define ISQLOLEAlertSystem IWSQLOLEAlertSystem
#define IID_ISQLOLEAlertSystem IID_IWSQLOLEAlertSystem 
#else
interface IASQLOLEAlertSystem;				TYPEDEFINTERFACE IASQLOLEAlertSystem *					LPASQLOLEALERTSYSTEM;
#define LPSQLOLEALERTSYSTEM LPASQLOLEALERTSYSTEM
#define ISQLOLEAlertSystem IASQLOLEAlertSystem
#define IID_ISQLOLEAlertSystem IID_IASQLOLEAlertSystem 
#endif

#undef LPSQLOLESERVERGROUPS 
#undef ISQLOLEServerGroups 
#undef IID_ISQLOLEServerGroups 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEServerGroups;			TYPEDEFINTERFACE IWSQLOLEServerGroups *					LPWSQLOLESERVERGROUPS;
#define LPSQLOLESERVERGROUPS LPWSQLOLESERVERGROUPS
#define ISQLOLEServerGroups IWSQLOLEServerGroups
#define IID_ISQLOLEServerGroups IID_IWSQLOLEServerGroups 
#else
interface IASQLOLEServerGroups;			TYPEDEFINTERFACE IASQLOLEServerGroups *					LPASQLOLESERVERGROUPS;
#define LPSQLOLESERVERGROUPS LPASQLOLESERVERGROUPS
#define ISQLOLEServerGroups IASQLOLEServerGroups
#define IID_ISQLOLEServerGroups IID_IASQLOLEServerGroups 
#endif

#undef LPSQLOLESERVERGROUP 
#undef ISQLOLEServerGroup 
#undef IID_ISQLOLEServerGroup 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEServerGroup;				TYPEDEFINTERFACE IWSQLOLEServerGroup *					LPWSQLOLESERVERGROUP;
#define LPSQLOLESERVERGROUP LPWSQLOLESERVERGROUP
#define ISQLOLEServerGroup IWSQLOLEServerGroup
#define IID_ISQLOLEServerGroup IID_IWSQLOLEServerGroup 
#else
interface IASQLOLEServerGroup;				TYPEDEFINTERFACE IASQLOLEServerGroup *					LPASQLOLESERVERGROUP;
#define LPSQLOLESERVERGROUP LPASQLOLESERVERGROUP
#define ISQLOLEServerGroup IASQLOLEServerGroup
#define IID_ISQLOLEServerGroup IID_IASQLOLEServerGroup 
#endif

#undef LPSQLOLEREGISTEREDSERVERS 
#undef ISQLOLERegisteredServers 
#undef IID_ISQLOLERegisteredServers 
#ifdef SQLOLE_UNICODE
interface IWSQLOLERegisteredServers;			TYPEDEFINTERFACE IWSQLOLERegisteredServers *					LPWSQLOLEREGISTEREDSERVERS;
#define LPSQLOLEREGISTEREDSERVERS LPWSQLOLEREGISTEREDSERVERS
#define ISQLOLERegisteredServers IWSQLOLERegisteredServers
#define IID_ISQLOLERegisteredServers IID_IWSQLOLERegisteredServers 
#else
interface IASQLOLERegisteredServers;			TYPEDEFINTERFACE IASQLOLERegisteredServers *					LPASQLOLEREGISTEREDSERVERS;
#define LPSQLOLEREGISTEREDSERVERS LPASQLOLEREGISTEREDSERVERS
#define ISQLOLERegisteredServers IASQLOLERegisteredServers
#define IID_ISQLOLERegisteredServers IID_IASQLOLERegisteredServers 
#endif

#undef LPSQLOLEREGISTEREDSERVER 
#undef ISQLOLERegisteredServer 
#undef IID_ISQLOLERegisteredServer 
#ifdef SQLOLE_UNICODE
interface IWSQLOLERegisteredServer;				TYPEDEFINTERFACE IWSQLOLERegisteredServer *					LPWSQLOLEREGISTEREDSERVER;
#define LPSQLOLEREGISTEREDSERVER LPWSQLOLEREGISTEREDSERVER
#define ISQLOLERegisteredServer IWSQLOLERegisteredServer
#define IID_ISQLOLERegisteredServer IID_IWSQLOLERegisteredServer 
#else
interface IASQLOLERegisteredServer;				TYPEDEFINTERFACE IASQLOLERegisteredServer *					LPASQLOLEREGISTEREDSERVER;
#define LPSQLOLEREGISTEREDSERVER LPASQLOLEREGISTEREDSERVER
#define ISQLOLERegisteredServer IASQLOLERegisteredServer
#define IID_ISQLOLERegisteredServer IID_IASQLOLERegisteredServer 
#endif

#undef LPSQLOLETRANSFER 
#undef ISQLOLETransfer 
#undef IID_ISQLOLETransfer 
#ifdef SQLOLE_UNICODE
interface IWSQLOLETransfer;						TYPEDEFINTERFACE IWSQLOLETransfer *				LPWSQLOLETRANSFER;
#define LPSQLOLETRANSFER LPWSQLOLETRANSFER
#define ISQLOLETransfer IWSQLOLETransfer
#define IID_ISQLOLETransfer IID_IWSQLOLETransfer 
#else
interface IASQLOLETransfer;						TYPEDEFINTERFACE IASQLOLETransfer *				LPASQLOLETRANSFER;
#define LPSQLOLETRANSFER LPASQLOLETRANSFER
#define ISQLOLETransfer IASQLOLETransfer
#define IID_ISQLOLETransfer IID_IASQLOLETransfer 
#endif

////////////////////////////////////////////////////////////////////////////////////////
// Event Sink Interfaces
////////////////////////////////////////////////////////////////////////////////////////
#undef LPSQLOLETRANSFERSINK 
#undef ISQLOLETransferSink
#undef IID_ISQLOLETransferSink 
#ifdef SQLOLE_UNICODE
interface IWSQLOLETransferSink;						TYPEDEFINTERFACE IWSQLOLETransferSink *				LPWSQLOLETRANSFERSINK;
#define LPSQLOLETRANSFERSINK LPWSQLOLETRANSFERSINK
#define ISQLOLETransferSink IWSQLOLETransferSink
#define IID_ISQLOLETransferSink IID_IWSQLOLETransferSink
#else
interface IASQLOLETransferSink;						TYPEDEFINTERFACE IASQLOLETransferSink *				LPASQLOLETRANSFERSINK;
#define LPSQLOLETRANSFERSINK LPASQLOLETRANSFERSINK
#define ISQLOLETransferSink IASQLOLETransferSink
#define IID_ISQLOLETransferSink IID_IASQLOLETransferSink
#endif

#undef LPSQLOLESERVERSINK 
#undef ISQLOLEServerSink
#undef IID_ISQLOLEServerSink 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEServerSink;						TYPEDEFINTERFACE IWSQLOLEServerSink *				LPWSQLOLESERVERSINK;
#define LPSQLOLESERVERSINK LPWSQLOLESERVERSINK
#define ISQLOLEServerSink IWSQLOLEServerSink
#define IID_ISQLOLEServerSink IID_IWSQLOLEServerSink
#else
interface IASQLOLEServerSink;						TYPEDEFINTERFACE IASQLOLEServerSink *				LPASQLOLESERVERSINK;
#define LPSQLOLESERVERSINK LPASQLOLESERVERSINK
#define ISQLOLEServerSink IASQLOLEServerSink
#define IID_ISQLOLEServerSink IID_IASQLOLEServerSink
#endif

#undef LPSQLOLEBACKUPSINK 
#undef ISQLOLEBackupSink
#undef IID_ISQLOLEBackupSink 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEBackupSink;						TYPEDEFINTERFACE IWSQLOLEBackupSink *				LPWSQLOLEBACKUPSINK;
#define LPSQLOLEBACKUPSINK LPWSQLOLEBACKUPSINK
#define ISQLOLEBackupSink IWSQLOLEBackupSink
#define IID_ISQLOLEBackupSink IID_IWSQLOLEBackupSink
#else
interface IASQLOLEBackupSink;						TYPEDEFINTERFACE IASQLOLEBackupSink *				LPASQLOLEBACKUPSINK;
#define LPSQLOLEBACKUPSINK LPASQLOLEBACKUPSINK
#define ISQLOLEBackupSink IASQLOLEBackupSink
#define IID_ISQLOLEBackupSink IID_IASQLOLEBackupSink
#endif

#undef LPSQLOLEBULKCOPYSINK 
#undef ISQLOLEBulkCopySink
#undef IID_ISQLOLEBulkCopySink 
#ifdef SQLOLE_UNICODE
interface IWSQLOLEBulkCopySink;						TYPEDEFINTERFACE IWSQLOLEBulkCopySink *				LPWSQLOLEBULKCOPYSINK;
#define LPSQLOLEBULKCOPYSINK LPWSQLOLEBULKCOPYSINK
#define ISQLOLEBulkCopySink IWSQLOLEBulkCopySink
#define IID_ISQLOLEBulkCopySink IID_IWSQLOLEBulkCopySink
#else
interface IASQLOLEBulkCopySink;						TYPEDEFINTERFACE IASQLOLEBulkCopySink *				LPASQLOLEBULKCOPYSINK;
#define LPSQLOLEBULKCOPYSINK LPASQLOLEBULKCOPYSINK
#define ISQLOLEBulkCopySink IASQLOLEBulkCopySink
#define IID_ISQLOLEBulkCopySink IID_IASQLOLEBulkCopySink
#endif

// Auto-documenting names for these... They return an LPSQLOLEOBJECTLIST
// of the specified <objecttype>LIST objects.. e.g. LPSQLOLECOLUMNLIST
// returns a list of LPSQLOLECOLUMN objects.
#undef LPSQLOLEDBOBJECTLIST
#define LPSQLOLEDBOBJECTLIST LPSQLOLEOBJECTLIST
#define LPWSQLOLEDBOBJECTLIST LPWSQLOLEOBJECTLIST
#define LPASQLOLEDBOBJECTLIST LPASQLOLEOBJECTLIST
#undef LPSQLOLEPERMISSIONLIST
#define LPSQLOLEPERMISSIONLIST LPSQLOLEOBJECTLIST
#define LPWSQLOLEPERMISSIONLIST LPWSQLOLEOBJECTLIST
#define LPASQLOLEPERMISSIONLIST LPASQLOLEOBJECTLIST
#undef LPSQLOLECONFIGVALUELIST
#define LPSQLOLECONFIGVALUELIST LPSQLOLEOBJECTLIST
#define LPWSQLOLECONFIGVALUELIST LPWSQLOLEOBJECTLIST
#define LPASQLOLECONFIGVALUELIST LPASQLOLEOBJECTLIST
#undef LPSQLOLEDEVICELIST
#define LPSQLOLEDEVICELIST LPSQLOLEOBJECTLIST
#define LPWSQLOLEDEVICELIST LPWSQLOLEOBJECTLIST
#define LPASQLOLEDEVICELIST LPASQLOLEOBJECTLIST
#undef LPSQLOLECOLUMNLIST
#define LPSQLOLECOLUMNLIST LPSQLOLEOBJECTLIST
#define LPWSQLOLECOLUMNLIST LPWSQLOLEOBJECTLIST
#define LPASQLOLECOLUMNLIST LPASQLOLEOBJECTLIST
#undef LPSQLOLEUSERDEFINEDDATATYPELIST
#define LPSQLOLEUSERDEFINEDDATATYPELIST LPSQLOLEOBJECTLIST
#define LPWSQLOLEUSERDEFINEDDATATYPELIST LPWSQLOLEOBJECTLIST
#define LPASQLOLEUSERDEFINEDDATATYPELIST LPASQLOLEOBJECTLIST
#undef LPSQLOLESTOREDPROCEDURELIST
#define LPSQLOLESTOREDPROCEDURELIST LPSQLOLEOBJECTLIST
#define LPWSQLOLESTOREDPROCEDURELIST LPWSQLOLEOBJECTLIST
#define LPASQLOLESTOREDPROCEDURELIST LPASQLOLEOBJECTLIST
#undef LPSQLOLELOGINLIST
#define LPSQLOLELOGINLIST LPSQLOLEOBJECTLIST
#define LPWSQLOLELOGINLIST LPWSQLOLEOBJECTLIST
#define LPASQLOLELOGINLIST LPASQLOLEOBJECTLIST
#undef LPSQLOLEUSERLIST
#define LPSQLOLEUSERLIST LPSQLOLEOBJECTLIST
#define LPWSQLOLEUSERLIST LPWSQLOLEOBJECTLIST
#define LPASQLOLEUSERLIST LPASQLOLEOBJECTLIST
#undef LPSQLOLEDATABASELIST
#define LPSQLOLEDATABASELIST LPSQLOLEOBJECTLIST
#define LPWSQLOLEDATABASELIST LPWSQLOLEOBJECTLIST
#define LPASQLOLEDATABASELIST LPASQLOLEOBJECTLIST
#undef LPSQLOLETASKLIST
#define LPSQLOLETASKLIST LPSQLOLEOBJECTLIST
#define LPWSQLOLETASKLIST LPWSQLOLEOBJECTLIST
#define LPASQLOLETASKLIST LPASQLOLEOBJECTLIST
#undef LPSQLOLEARTICLELIST
#define LPSQLOLEARTICLELIST LPSQLOLEOBJECTLIST
#define LPWSQLOLEARTICLELIST LPWSQLOLEOBJECTLIST
#define LPASQLOLEARTICLELIST LPASQLOLEOBJECTLIST
#undef LPSQLOLEKEYLIST
#define LPSQLOLEKEYLIST LPSQLOLEOBJECTLIST
#define LPWSQLOLEKEYLIST LPWSQLOLEOBJECTLIST
#define LPASQLOLEKEYLIST LPASQLOLEOBJECTLIST

// This is the base class for all SQLOLE objects.  It is never instantiated by itself.
// The members must be copied into all derived classes so that C clients can reference
// them, since the DECLARE_INTERFACE_ macro doesn't provide inheritance in C.  The
// undef/def of INTERFACE is likewise required for C programmers.
#undef INTERFACE
#define INTERFACE ISQLOLEStdObject
DECLARE_INTERFACE_(INTERFACE, IUnknown)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLOLE standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLOLEAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLOLESTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLOLE_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;
};

#ifdef __cplusplus
#ifndef CTEMPOLEREF_DEFINED
#define CTEMPOLEREF_DEFINED
// This is a utility class that takes an IUnknown-derived pointer as input and automatically
// Release()s it in dtor.  Use this as a stack variable which will hold objects and
// Release() them when they go out of scope; useful if multiple exit points.
template < class OLEPTR> class CTempOLERef {
	OLEPTR m_oleptr;

	// Private copy operators -- we don't want these used due to refcounting issues.
	// Since they can't therefore be called, no need to assign a body.
	CTempOLERef(const CTempOLERef<OLEPTR>& Src);
	OLEPTR  operator = (const CTempOLERef<OLEPTR>& Src);

public:
	CTempOLERef() {m_oleptr = NULL;}
	CTempOLERef(OLEPTR pIn) {m_oleptr = pIn;}
	~CTempOLERef() {if (m_oleptr) m_oleptr->Release();}
	OLEPTR p() {return m_oleptr;}				// Alternative to casting (better for cut 'n paste).

	operator OLEPTR () {return m_oleptr;}		// Return the input pointer on a cast
	operator LPUNKNOWN () {return m_oleptr;}
	operator void *() {return (void *)m_oleptr;}
	operator BOOL () {return m_oleptr ? TRUE : FALSE;}
	OLEPTR  operator = (OLEPTR pIn) {if (m_oleptr) m_oleptr->Release(); return m_oleptr = pIn;}
	OLEPTR * operator & () {return &m_oleptr;}	// Overload address-of operator
	BOOL operator ! () {return m_oleptr ? FALSE : TRUE;}
	OLEPTR operator -> () {return m_oleptr;}	// Pass operator-> thru to m_oleptr; allows tempxxxRef->xxxSpecificMember();

	// Apps should not Release() this object directly as it is intended to do so as it goes out of scope,
	// hence as a safety feature to avoid double-Release() clear the pointer if it's called directly.
	void Release() {if (m_oleptr) m_oleptr->Release(); m_oleptr = NULL;}
};

// Similar to above, for use with SQLOLE_BSTR's
class CTempBSTR {
	SQLOLE_BSTR m_bstr;

	// Private copy operators -- we don't want these used due to refcounting issues.
	// Since they can't therefore be called, no need to assign a body.
	CTempBSTR(const CTempBSTR& Src);
	SQLOLE_BSTR  operator = (const CTempBSTR& Src);

public:
	CTempBSTR() {m_bstr = NULL;}
	CTempBSTR(SQLOLE_BSTR bstrIn) {m_bstr = bstrIn;}
	~CTempBSTR() {Free();}
	void Free() {if (m_bstr) {SQLOLEFreeString(m_bstr); m_bstr = NULL;}}
	SQLOLE_BSTR b() {return m_bstr;}

	operator SQLOLE_LPCSTR () {return (SQLOLE_LPCSTR)m_bstr;}
	operator void *() {return (void *)m_bstr;}
	SQLOLE_BSTR operator = (SQLOLE_BSTR bstrIn) {Free(); return m_bstr = bstrIn;}
	SQLOLE_BSTR * operator & () {return &m_bstr;}		// Overload address-of operator
	BOOL operator ! () {return m_bstr ? FALSE : TRUE;}
};

#endif  // CTEMPOLEREF_DEFINED
#endif	// __cplusplus

///////////////////////////
// Collection interfaces.
///////////////////////////
#undef INTERFACE
#define INTERFACE ISQLOLEServers
DECLARE_INTERFACE_(INTERFACE, ISQLOLEStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS) PURE;

	//*** SQLOLE standard object properties.
    STDMETHOD(GetApplication)(THIS_ LPSQLOLEAPPLICATION *ppApp) PURE;
    STDMETHOD(GetParent)(THIS_ LPSQLOLESTDOBJECT *ppParent) PURE;
    STDMETHOD(GetTypeOf)(THIS_ SQLOLE_OBJECT_TYPE *pRetVal) PURE;
    STDMETHOD(GetUserData)(THIS_ LPVOID *pRetVal) PURE;
    STDMETHOD(SetUserData)(THIS_ LPVOID lpvNewValue) PURE;

    //*** SQLOLE standard enumeration properties
	STDMETHOD(GetItemByOrd)(THIS_ long lOrdinal, LPSQLOLESERVER *ppObj) PURE;
	STDMETHOD(GetItemByName)(THIS_ SQLOLE_LPCSTR szName, LPSQLOLESERVER *ppObj) PURE;
    STDMETHOD(GetItemByID)(THIS_ long lID, LPSQLOLESERVER *ppObj) PURE;
	STDMETHOD(GetCount)(THIS_ LPLONG plCount) PURE;
};

// Generic enumerator object.
#undef INTERFACE
#define INTERFACE ISQLOLEObjectList
DECLARE_INTERFACE_(INTERFACE, ISQLOLEStdObject)
{
   //*** IUnknown methods
    STDMETHOD(QueryInterface) (THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef) (THIS)  PURE;
    STDMETHOD_(ULONG,Release) (THIS)