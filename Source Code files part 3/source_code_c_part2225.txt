ial tone "W"

// SpeakerVolume for MODEMDEVCAPS
#define MDMVOLFLAG_LOW      0x00000001
#define MDMVOLFLAG_MEDIUM   0x00000002
#define MDMVOLFLAG_HIGH     0x00000004

// SpeakerVolume for MODEMSETTINGS
#define MDMVOL_LOW          0x00000000
#define MDMVOL_MEDIUM       0x00000001
#define MDMVOL_HIGH         0x00000002

// SpeakerMode for MODEMDEVCAPS
#define MDMSPKRFLAG_OFF         0x00000001
#define MDMSPKRFLAG_DIAL        0x00000002
#define MDMSPKRFLAG_ON          0x00000004
#define MDMSPKRFLAG_CALLSETUP   0x00000008

// SpeakerMode for MODEMSETTINGS
#define MDMSPKR_OFF         0x00000000
#define MDMSPKR_DIAL        0x00000001
#define MDMSPKR_ON          0x00000002
#define MDMSPKR_CALLSETUP   0x00000003

// Modem Options
#define MDM_COMPRESSION      0x00000001
#define MDM_ERROR_CONTROL    0x00000002
#define MDM_FORCED_EC        0x00000004
#define MDM_CELLULAR         0x00000008
#define MDM_FLOWCONTROL_HARD 0x00000010
#define MDM_FLOWCONTROL_SOFT 0x00000020
#define MDM_CCITT_OVERRIDE   0x00000040
#define MDM_SPEED_ADJUST     0x00000080
#define MDM_TONE_DIAL        0x00000100
#define MDM_BLIND_DIAL       0x00000200
#define MDM_V23_OVERRIDE     0x00000400
#define MDM_DIAGNOSTICS      0x00000800


//=========================================================================
//
//
//      EXTENDED MODEM OPTIONS INFORMATION
//
//      THE following macros define additional bits in dwPreferredModemOptions.
//
//      These bits specify information relevant to making ISDN and GSM
//      calls, such as which protocol to use.
//
//=========================================================================

#define MDM_MASK_BEARERMODE   0x0000f000
#define MDM_SHIFT_BEARERMODE 12

#define MDM_MASK_PROTOCOLID   0x000f0000
#define MDM_SHIFT_PROTOCOLID  16

#define MDM_MASK_PROTOCOLDATA 0x0ff00000
#define MDM_SHIFT_PROTOCOLDATA  20

//
// PROTOCOLINFO is the union of PROTOCOLID and PROTOCOLDATA ...
//
#define MDM_MASK_PROTOCOLINFO  (MDM_MASK_PROTOCOLID|MDM_MASK_PROTOCOLDATA)
#define MDM_SHIFT_PROTOCOLINFO MDM_SHIFT_PROTOCOLID

//
// EXTENDEDINFO is the union of BEARERMODE and PROTOCOLINFO
//
#define MDM_MASK_EXTENDEDINFO (MDM_MASK_BEARERMODE|MDM_MASK_PROTOCOLINFO)
#define MDM_SHIFT_EXTENDEDINFO  MDM_SHIFT_BEARERMODE


#define MDM_GET_BEARERMODE(_dwOptions) \
                   (((_dwOptions)&MDM_MASK_BEARERMODE) >> MDM_SHIFT_BEARERMODE)

#define MDM_SET_BEARERMODE(_dwOptions,_bm)     \
    (((_dwOptions) &= ~MDM_MASK_BEARERMODE), \
    ((_dwOptions)  |= (((_bm)<<MDM_SHIFT_BEARERMODE)&MDM_MASK_BEARERMODE)))

#define MDM_GET_PROTOCOLID(_dwOptions) \
               (((_dwOptions)&MDM_MASK_PROTOCOLID) >> MDM_SHIFT_PROTOCOLID)

#define MDM_SET_PROTOCOLID(_dwOptions,_prot)     \
    (((_dwOptions) &= ~MDM_MASK_PROTOCOLID), \
    ((_dwOptions)  |= (((_prot)<<MDM_SHIFT_PROTOCOLID)&MDM_MASK_PROTOCOLID)))

#define MDM_GET_PROTOCOLDATA(_dwOptions) \
               (((_dwOptions)&MDM_MASK_PROTOCOLDATA) >> MDM_SHIFT_PROTOCOLDATA)

#define MDM_SET_PROTOCOLDATA(_dwOptions,_pd)     \
   (((_dwOptions) &= ~MDM_MASK_PROTOCOLDATA), \
   ((_dwOptions)  |= (((_pd)<<MDM_SHIFT_PROTOCOLDATA)&MDM_MASK_PROTOCOLDATA)))

//
// MDM_GET_PROTOCOLINFO gets the protocol-id and info bits in
// their IN-PLACE form (preserving their place in dwModemPreferredOptions)
//
#define MDM_GET_PROTOCOLINFO(_dwOptions) \
               ((_dwOptions)&MDM_MASK_PROTOCOLINFO)

//
// MDM_SET_PROTOCOLINFO takes as its argument the protocol-id and info bits in
// their IN-PLACE form (final position within dwModemPreferredOptions)
//
#define MDM_SET_PROTOCOLINFO(_dwOptions,_pinfo)     \
  (((_dwOptions) &= ~MDM_MASK_PROTOCOLINFO), \
  ((_dwOptions)  |= ((_pinfo)&MDM_MASK_PROTOCOLINFO)))

//
// MDM_GEN_PROTOCOLINFO generates the  the protocol-id and info bits in
// their IN-PLACE form (final position  within dwModemPreferredOptions).
//
#define MDM_GEN_PROTOCOLINFO(_pid, _pdata) \
        ((((_pid  )<<MDM_SHIFT_PROTOCOLID  )&MDM_MASK_PROTOCOLID  )   \
        |(((_pdata)<<MDM_SHIFT_PROTOCOLDATA)&MDM_MASK_PROTOCOLDATA))

//
// MDM_GET_EXTENDEDIONFO gets the bearermode and protocol information in
// their IN-PLACE form (preserving their place in dwModemPreferredOptions)
//
#define MDM_GET_EXTENDEDINFO(_dwOptions) \
               ((_dwOptions)&MDM_MASK_EXTENDEDINFO)

//
// MDM_SET_PROTOCOLINFO takes as its argument the bearermode and
// protocol bits in their IN-PLACE form (final position within
// dwModemPreferredOptions)
//
#define MDM_SET_EXTENDEDINFO(_dwOptions,_extinfo)     \
  (((_dwOptions) &= ~MDM_MASK_EXTENDEDINFO), \
  ((_dwOptions)  |= ((_extinfo) & MDM_MASK_EXTENDEDINFO)))


//
// MDM_GEN_EXTENDEDINFO generates the bearermode and protocol information
// in their IN-PLACE form (final position within dwModemPreferredOptions0.
//
#define MDM_GEN_EXTENDEDINFO(_bearermode, _pinfo)   \
        (((_pinfo)&MDM_MASK_PROTOCOLINFO  )         \
         |(((_bearermode)<<MDM_SHIFT_BEARERMODE)&MDM_MASK_BEARERMODE))


//=========================================================================
//  BEARER MODES
//=========================================================================
//
#define MDM_BEARERMODE_ANALOG   0x0
#define MDM_BEARERMODE_ISDN     0x1
#define MDM_BEARERMODE_GSM      0x2


//=========================================================================
//  PROTOCOL IDs
//=========================================================================
//
#define MDM_PROTOCOLID_DEFAULT  0x0
#define MDM_PROTOCOLID_HDLCPPP  0x1
#define MDM_PROTOCOLID_V128     0x2
#define MDM_PROTOCOLID_X75      0x3
#define MDM_PROTOCOLID_V110     0x4
#define MDM_PROTOCOLID_V120     0x5
#define MDM_PROTOCOLID_AUTO     0x6 // Auto protocol detection.
#define MDM_PROTOCOLID_ANALOG   0x7 // Applicable only to GSM
#define MDM_PROTOCOLID_GPRS     0x8
#define MDM_PROTOCOLID_PIAFS    0x9


//=========================================================================
//  HDLC PPP PROTOCOL INFORMATION
//=========================================================================
//
// Following are specific to the HDLC-PPP protocol.
// The shifts are w.r.t. the start of the PROTOCOLDATA field.

#define MDM_SHIFT_HDLCPPP_SPEED    0x0
#define MDM_MASK_HDLCPPP_SPEED     0x7  // 3 bits

#define MDM_HDLCPPP_SPEED_DEFAULT  0x0
#define MDM_HDLCPPP_SPEED_64K      0x1
#define MDM_HDLCPPP_SPEED_56K      0x2


#define MDM_SHIFT_HDLCPPP_AUTH     0x3
#define MDM_MASK_HDLCPPP_AUTH      (0x7<<3)  // 3 bits

#define MDM_HDLCPPP_AUTH_DEFAULT   0x0
#define MDM_HDLCPPP_AUTH_NONE      0x1
#define MDM_HDLCPPP_AUTH_PAP       0x2
#define MDM_HDLCPPP_AUTH_CHAP      0x3
#define MDM_HDLCPPP_AUTH_MSCHAP    0x4


#define MDM_SHIFT_HDLCPPP_ML       0x6
#define MDM_MASK_HDLCPPP_ML        (0x3<<6)  // 2 bits

#define MDM_HDLCPPP_ML_DEFAULT     0x0
#define MDM_HDLCPPP_ML_NONE        0x1
#define MDM_HDLCPPP_ML_2           0x2

#define MDM_GEN_HDLCPPP_PROTOCOL_DATA(_speed, _auth, _ml)           \
    ((((_speed)<<MDM_SHIFT_HDLCPPP_SPEED)&MDM_MASK_HDLCPPP_SPEED)   \
    |(((_auth )<<MDM_SHIFT_HDLCPPP_AUTH )&MDM_MASK_HDLCPPP_AUTH )   \
    |(((_ml   )<<MDM_SHIFT_HDLCPPP_ML   )&MDM_MASK_HDLCPPP_ML   ))


#define MDM_PROTOCOL_HDLCPPP_64K        \
    MDM_GEN_PROTOCOLINFO(               \
        MDM_PROTOCOLID_HDLCPPP,         \
        MDM_GEN_HDLCPPP_PROTOCOL_DATA ( \
            MDM_HDLCPPP_SPEED_64K,      \
            MDM_HDLCPPP_AUTH_DEFAULT,   \
            MDM_HDLCPPP_ML_DEFAULT      \
            )                           \
        )

#define MDM_PROTOCOL_HDLCPPP_56K        \
    MDM_GEN_PROTOCOLINFO(               \
        MDM_PROTOCOLID_HDLCPPP,         \
        MDM_GEN_HDLCPPP_PROTOCOL_DATA ( \
            MDM_HDLCPPP_SPEED_56K,      \
            MDM_HDLCPPP_AUTH_DEFAULT,   \
            MDM_HDLCPPP_ML_DEFAULT      \
            )                           \
        )

#define MDM_PROTOCOL_HDLCPPP_112K       \
    MDM_GEN_PROTOCOLINFO(               \
        MDM_PROTOCOLID_HDLCPPP,         \
        MDM_GEN_HDLCPPP_PROTOCOL_DATA ( \
            MDM_HDLCPPP_SPEED_56K,      \
            MDM_HDLCPPP_AUTH_DEFAULT,   \
            MDM_HDLCPPP_ML_2            \
            )                           \
        )

#define MDM_PROTOCOL_HDLCPPP_112K_PAP   \
    MDM_GEN_PROTOCOLINFO(               \
        MDM_PROTOCOLID_HDLCPPP,         \
        MDM_GEN_HDLCPPP_PROTOCOL_DATA ( \
            MDM_HDLCPPP_SPEED_56K,      \
            MDM_HDLCPPP_AUTH_PAP,       \
            MDM_HDLCPPP_ML_2            \
            )                           \
        )

#define MDM_PROTOCOL_HDLCPPP_112K_CHAP  \
    MDM_GEN_PROTOCOLINFO(               \
        MDM_PROTOCOLID_HDLCPPP,         \
        MDM_GEN_HDLCPPP_PROTOCOL_DATA ( \
            MDM_HDLCPPP_SPEED_56K,      \
            MDM_HDLCPPP_AUTH_CHAP,      \
            MDM_HDLCPPP_ML_2            \
            )                           \
        )

#define MDM_PROTOCOL_HDLCPPP_112K_MSCHAP\
    MDM_GEN_PROTOCOLINFO(               \
        MDM_PROTOCOLID_HDLCPPP,         \
        MDM_GEN_HDLCPPP_PROTOCOL_DATA ( \
            MDM_HDLCPPP_SPEED_56K,      \
            MDM_HDLCPPP_AUTH_MSCHAP,    \
            MDM_HDLCPPP_ML_2            \
            )                           \
        )
#define MDM_PROTOCOL_HDLCPPP_128K       \
    MDM_GEN_PROTOCOLINFO(               \
        MDM_PROTOCOLID_HDLCPPP,         \
        MDM_GEN_HDLCPPP_PROTOCOL_DATA ( \
            MDM_HDLCPPP_SPEED_64K,      \
            MDM_HDLCPPP_AUTH_DEFAULT,   \
            MDM_HDLCPPP_ML_2            \
            )                           \
        )

#define MDM_PROTOCOL_HDLCPPP_128K_PAP   \
    MDM_GEN_PROTOCOLINFO(               \
        MDM_PROTOCOLID_HDLCPPP,         \
        MDM_GEN_HDLCPPP_PROTOCOL_DATA ( \
            MDM_HDLCPPP_SPEED_64K,      \
            MDM_HDLCPPP_AUTH_PAP,       \
            MDM_HDLCPPP_ML_2            \
            )                           \
        )

#define MDM_PROTOCOL_HDLCPPP_128K_CHAP  \
    MDM_GEN_PROTOCOLINFO(               \
        MDM_PROTOCOLID_HDLCPPP,         \
        MDM_GEN_HDLCPPP_PROTOCOL_DATA ( \
            MDM_HDLCPPP_SPEED_64K,      \
            MDM_HDLCPPP_AUTH_CHAP,      \
            MDM_HDLCPPP_ML_2            \
            )                           \
        )

#define MDM_PROTOCOL_HDLCPPP_128K_MSCHAP\
    MDM_GEN_PROTOCOLINFO(               \
        MDM_PROTOCOLID_HDLCPPP,         \
        MDM_GEN_HDLCPPP_PROTOCOL_DATA ( \
            MDM_HDLCPPP_SPEED_64K,      \
            MDM_HDLCPPP_AUTH_MSCHAP,    \
            MDM_HDLCPPP_ML_2            \
            )                           \
        )

//=========================================================================
//  V120 PROTOCOL INFORMATION
//
// The shifts are w.r.t. the start of the PROTOCOLDATA field.
//
//=========================================================================

#define MDM_SHIFT_V120_SPEED    0x0
#define MDM_MASK_V120_SPEED     0x7  // 3 bits

#define MDM_V120_SPEED_DEFAULT  0x0
#define MDM_V120_SPEED_64K      0x1
#define MDM_V120_SPEED_56K      0x2


#define MDM_SHIFT_V120_ML       0x6
#define MDM_MASK_V120_ML        (0x3<<6)  // 2 bits

#define MDM_V120_ML_DEFAULT     0x0
#define MDM_V120_ML_NONE        0x1
#define MDM_V120_ML_2           0x2


#define MDM_GEN_V120_PROTOCOL_DATA(_speed, _ml)               \
    ((((_speed)<<MDM_SHIFT_V120_SPEED)&MDM_MASK_V120_SPEED)   \
    |(((_ml   )<<MDM_SHIFT_V120_ML   )&MDM_MASK_V120_ML   ))


#define MDM_PROTOCOL_V120_64K       \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_V120,        \
        MDM_GEN_V120_PROTOCOL_DATA (\
            MDM_V120_SPEED_64K,     \
            MDM_V120_ML_NONE        \
            )                       \
        )

#define MDM_PROTOCOL_V120_56K       \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_V120,        \
        MDM_GEN_V120_PROTOCOL_DATA (\
            MDM_V120_SPEED_56K,     \
            MDM_V120_ML_NONE        \
            )                       \
        )

#define MDM_PROTOCOL_V120_112K      \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_V120,        \
        MDM_GEN_V120_PROTOCOL_DATA (\
            MDM_V120_SPEED_56K,     \
            MDM_V120_ML_2           \
            )                       \
        )

#define MDM_PROTOCOL_V120_128K      \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_V120,        \
        MDM_GEN_V120_PROTOCOL_DATA (\
            MDM_V120_SPEED_64K,     \
            MDM_V120_ML_2           \
            )                       \
        )


//=========================================================================
//  X75 PROTOCOL INFORMATION
//
// The shifts are w.r.t. the start of the PROTOCOLDATA field.
//
//=========================================================================


#define MDM_SHIFT_X75_DATA    0x0
#define MDM_MASK_X75_DATA     0x7  // 3 bits

#define MDM_X75_DATA_DEFAULT  0x0
#define MDM_X75_DATA_64K      0x1
#define MDM_X75_DATA_128K     0x2
#define MDM_X75_DATA_T_70     0x3
#define MDM_X75_DATA_BTX      0x4

#define MDM_GEN_X75_PROTOCOL_DATA(_data) \
    (((_data)<<MDM_SHIFT_X75_DATA)&MDM_MASK_X75_DATA)


#define MDM_PROTOCOL_X75_64K        \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_X75,         \
        MDM_GEN_X75_PROTOCOL_DATA ( \
            MDM_X75_DATA_64K        \
            )                       \
        )

#define MDM_PROTOCOL_X75_128K       \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_X75,         \
        MDM_GEN_X75_PROTOCOL_DATA ( \
            MDM_X75_DATA_128K       \
            )                       \
        )

#define MDM_PROTOCOL_X75_T_70       \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_X75,         \
        MDM_GEN_X75_PROTOCOL_DATA ( \
            MDM_X75_DATA_T_70       \
            )                       \
        )                           \

#define MDM_PROTOCOL_X75_BTX        \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_X75,         \
        MDM_GEN_X75_PROTOCOL_DATA ( \
            MDM_X75_DATA_BTX        \
            )                       \
        )


//=========================================================================
//  V110 PROTOCOL INFORMATION
//
// The shifts are w.r.t. the start of the PROTOCOLDATA field.
//
//=========================================================================


#define MDM_SHIFT_V110_SPEED   0x0
#define MDM_MASK_V110_SPEED    0xf  // 4 bits

#define MDM_V110_SPEED_DEFAULT 0x0
#define MDM_V110_SPEED_1DOT2K  0x1
#define MDM_V110_SPEED_2DOT4K  0x2
#define MDM_V110_SPEED_4DOT8K  0x3
#define MDM_V110_SPEED_9DOT6K  0x4
#define MDM_V110_SPEED_12DOT0K 0x5
#define MDM_V110_SPEED_14DOT4K 0x6
#define MDM_V110_SPEED_19DOT2K 0x7
#define MDM_V110_SPEED_28DOT8K 0x8
#define MDM_V110_SPEED_38DOT4K 0x9
#define MDM_V110_SPEED_57DOT6K 0xA

#define MDM_GEN_V110_PROTOCOL_DATA(_data) \
    (((_data)<<MDM_SHIFT_V110_SPEED)&MDM_MASK_V110_SPEED)


#define MDM_PROTOCOL_V110_1DOT2K    \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_V110,        \
        MDM_GEN_V110_PROTOCOL_DATA (\
            MDM_V110_SPEED_1DOT2K   \
            )                       \
        )

#define MDM_PROTOCOL_V110_2DOT4K    \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_V110,        \
        MDM_GEN_V110_PROTOCOL_DATA (\
            MDM_V110_SPEED_2DOT4K   \
            )                       \
        )

#define MDM_PROTOCOL_V110_4DOT8K    \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_V110,        \
        MDM_GEN_V110_PROTOCOL_DATA (\
            MDM_V110_SPEED_4DOT8K   \
            )                       \
        )

#define MDM_PROTOCOL_V110_9DOT6K    \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_V110,        \
        MDM_GEN_V110_PROTOCOL_DATA (\
            MDM_V110_SPEED_9DOT6K   \
            )                       \
        )

#define MDM_PROTOCOL_V110_12DOT0K   \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_V110,        \
        MDM_GEN_V110_PROTOCOL_DATA (\
            MDM_V110_SPEED_12DOT0K  \
            )                       \
        )

#define MDM_PROTOCOL_V110_14DOT4K   \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_V110,        \
        MDM_GEN_V110_PROTOCOL_DATA (\
            MDM_V110_SPEED_14DOT4K  \
            )                       \
        )

#define MDM_PROTOCOL_V110_19DOT2K   \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_V110,        \
        MDM_GEN_V110_PROTOCOL_DATA (\
            MDM_V110_SPEED_19DOT2K  \
            )                       \
        )

#define MDM_PROTOCOL_V110_28DOT8K   \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_V110,        \
        MDM_GEN_V110_PROTOCOL_DATA (\
            MDM_V110_SPEED_28DOT8K  \
            )                       \
        )

#define MDM_PROTOCOL_V110_38DOT4K   \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_V110,        \
        MDM_GEN_V110_PROTOCOL_DATA (\
            MDM_V110_SPEED_38DOT4K  \
            )                       \
        )

#define MDM_PROTOCOL_V110_57DOT6K   \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_V110,        \
        MDM_GEN_V110_PROTOCOL_DATA (\
            MDM_V110_SPEED_57DOT6K  \
            )                       \
        )

//=========================================================================
//  AUTO PROTOCOL INFORMATION (ie, when the protocol is detected automatically)
//
// The shifts are w.r.t. the start of the PROTOCOLDATA field.
//
//=========================================================================
//
// Following are specific to the AUTO-protocol
//

#define MDM_SHIFT_AUTO_SPEED    0x0
#define MDM_MASK_AUTO_SPEED     0x7  // 3 bits
#define MDM_AUTO_SPEED_DEFAULT  0x0

#define MDM_SHIFT_AUTO_ML       0x6
#define MDM_MASK_AUTO_ML        (0x3<<6)  // 2 bits
#define MDM_AUTO_ML_DEFAULT     0x0
#define MDM_AUTO_ML_NONE        0x1
#define MDM_AUTO_ML_2           0x2

#define MDM_GEN_AUTO_PROTOCOL_DATA(_speed, _ml)             \
    ((((_speed)<<MDM_SHIFT_AUTO_SPEED)&MDM_MASK_AUTO_SPEED) \
    |(((_ml   )<<MDM_SHIFT_AUTO_ML   )&MDM_MASK_AUTO_ML))


#define MDM_PROTOCOL_AUTO_1CH       \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_AUTO,        \
        MDM_GEN_AUTO_PROTOCOL_DATA (\
            MDM_AUTO_SPEED_DEFAULT, \
            MDM_AUTO_ML_NONE        \
            )                       \
        )

#define MDM_PROTOCOL_AUTO_2CH       \
    MDM_GEN_PROTOCOLINFO(           \
        MDM_PROTOCOLID_AUTO,        \
        MDM_GEN_AUTO_PROTOCOL_DATA (\
            MDM_AUTO_SPEED_DEFAULT, \
            MDM_AUTO_ML_2           \
            )                       \
        )

//=========================================================================
//  ANALOG PROTOCOL INFORMATION (Applicable only to GSM)
//=========================================================================
//
// Following are specific to GSM Analog protocol
//

#define MDM_ANALOG_RLP_ON       0x0
#define MDM_ANALOG_RLP_OFF      0x1
#define MDM_ANALOG_V34          0x2

#define MDM_GEN_ANALOG_PROTOCOL_DATA(_rlp) \
    (_rlp)


#define MDM_PROTOCOL_ANALOG_RLP         \
    MDM_GEN_PROTOCOLINFO(               \
        MDM_PROTOCOLID_ANALOG,          \
        MDM_GEN_ANALOG_PROTOCOL_DATA (  \
            MDM_ANALOG_RLP_ON           \
            )                           \
        )

#define MDM_PROTOCOL_ANALOG_NRLP        \
    MDM_GEN_PROTOCOLINFO(               \
        MDM_PROTOCOLID_ANALOG,          \
        MDM_GEN_ANALOG_PROTOCOL_DATA (  \
            MDM_ANALOG_RLP_OFF          \
            )                           \
        )

//
//  v34 anolog for isdn
//
#define MDM_PROTOCOL_ANALOG_V34         \
    MDM_GEN_PROTOCOLINFO(               \
        MDM_PROTOCOLID_ANALOG,          \
        MDM_GEN_ANALOG_PROTOCOL_DATA (  \
            MDM_ANALOG_V34              \
            )                           \
        )


//=========================================================================
//  GPRS PROTOCOL INFORMATION (Applicable only to GSM)
//=========================================================================
//
// Following are specific to GPRS protocol
//

#define MDM_PROTOCOL_GPRS             \
    MDM_GEN_PROTOCOLINFO(             \
        MDM_PROTOCOLID_GPRS,          \
        0                             \
        )


//=========================================================================
//  PIAFS PROTOCOL INFORMATION
//=========================================================================
//
// Following are specific to PIAFS protocol
//

#define MDM_PIAFS_INCOMING            0
#define MDM_PIAFS_OUTGOING            1

#define MDM_PROTOCOL_PIAFS_INCOMING   \
    MDM_GEN_PROTOCOLINFO(             \
        MDM_PROTOCOLID_PIAFS,         \
        MDM_PIAFS_INCOMING            \
        )

#define MDM_PROTOCOL_PIAFS_OUTGOING   \
    MDM_GEN_PROTOCOLINFO(             \
        MDM_PROTOCOLID_PIAFS,         \
        MDM_PIAFS_OUTGOING           \
        )

#endif /* _MCX_H_ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\mbnapi.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mbnapi.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data , no_format_optimization
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mbnapi_h__
#define __mbnapi_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IDummyMBNUCMExt_FWD_DEFINED__
#define __IDummyMBNUCMExt_FWD_DEFINED__
typedef interface IDummyMBNUCMExt IDummyMBNUCMExt;
#endif 	/* __IDummyMBNUCMExt_FWD_DEFINED__ */


#ifndef __IMbnInterface_FWD_DEFINED__
#define __IMbnInterface_FWD_DEFINED__
typedef interface IMbnInterface IMbnInterface;
#endif 	/* __IMbnInterface_FWD_DEFINED__ */


#ifndef __IMbnSubscriberInformation_FWD_DEFINED__
#define __IMbnSubscriberInformation_FWD_DEFINED__
typedef interface IMbnSubscriberInformation IMbnSubscriberInformation;
#endif 	/* __IMbnSubscriberInformation_FWD_DEFINED__ */


#ifndef __IMbnInterfaceEvents_FWD_DEFINED__
#define __IMbnInterfaceEvents_FWD_DEFINED__
typedef interface IMbnInterfaceEvents IMbnInterfaceEvents;
#endif 	/* __IMbnInterfaceEvents_FWD_DEFINED__ */


#ifndef __IMbnSignal_FWD_DEFINED__
#define __IMbnSignal_FWD_DEFINED__
typedef interface IMbnSignal IMbnSignal;
#endif 	/* __IMbnSignal_FWD_DEFINED__ */


#ifndef __IMbnSignalEvents_FWD_DEFINED__
#define __IMbnSignalEvents_FWD_DEFINED__
typedef interface IMbnSignalEvents IMbnSignalEvents;
#endif 	/* __IMbnSignalEvents_FWD_DEFINED__ */


#ifndef __IMbnPinManager_FWD_DEFINED__
#define __IMbnPinManager_FWD_DEFINED__
typedef interface IMbnPinManager IMbnPinManager;
#endif 	/* __IMbnPinManager_FWD_DEFINED__ */


#ifndef __IMbnPinManagerEvents_FWD_DEFINED__
#define __IMbnPinManagerEvents_FWD_DEFINED__
typedef interface IMbnPinManagerEvents IMbnPinManagerEvents;
#endif 	/* __IMbnPinManagerEvents_FWD_DEFINED__ */


#ifndef __IMbnPin_FWD_DEFINED__
#define __IMbnPin_FWD_DEFINED__
typedef interface IMbnPin IMbnPin;
#endif 	/* __IMbnPin_FWD_DEFINED__ */


#ifndef __IMbnPinEvents_FWD_DEFINED__
#define __IMbnPinEvents_FWD_DEFINED__
typedef interface IMbnPinEvents IMbnPinEvents;
#endif 	/* __IMbnPinEvents_FWD_DEFINED__ */


#ifndef __IMbnRegistration_FWD_DEFINED__
#define __IMbnRegistration_FWD_DEFINED__
typedef interface IMbnRegistration IMbnRegistration;
#endif 	/* __IMbnRegistration_FWD_DEFINED__ */


#ifndef __IMbnRegistrationEvents_FWD_DEFINED__
#define __IMbnRegistrationEvents_FWD_DEFINED__
typedef interface IMbnRegistrationEvents IMbnRegistrationEvents;
#endif 	/* __IMbnRegistrationEvents_FWD_DEFINED__ */


#ifndef __IMbnConnectionContext_FWD_DEFINED__
#define __IMbnConnectionContext_FWD_DEFINED__
typedef interface IMbnConnectionContext IMbnConnectionContext;
#endif 	/* __IMbnConnectionContext_FWD_DEFINED__ */


#ifndef __IMbnConnectionContextEvents_FWD_DEFINED__
#define __IMbnConnectionContextEvents_FWD_DEFINED__
typedef interface IMbnConnectionContextEvents IMbnConnectionContextEvents;
#endif 	/* __IMbnConnectionContextEvents_FWD_DEFINED__ */


#ifndef __IMbnConnection_FWD_DEFINED__
#define __IMbnConnection_FWD_DEFINED__
typedef interface IMbnConnection IMbnConnection;
#endif 	/* __IMbnConnection_FWD_DEFINED__ */


#ifndef __IMbnConnectionEvents_FWD_DEFINED__
#define __IMbnConnectionEvents_FWD_DEFINED__
typedef interface IMbnConnectionEvents IMbnConnectionEvents;
#endif 	/* __IMbnConnectionEvents_FWD_DEFINED__ */


#ifndef __IMbnConnectionProfileManager_FWD_DEFINED__
#define __IMbnConnectionProfileManager_FWD_DEFINED__
typedef interface IMbnConnectionProfileManager IMbnConnectionProfileManager;
#endif 	/* __IMbnConnectionProfileManager_FWD_DEFINED__ */


#ifndef __IMbnConnectionProfile_FWD_DEFINED__
#define __IMbnConnectionProfile_FWD_DEFINED__
typedef interface IMbnConnectionProfile IMbnConnectionProfile;
#endif 	/* __IMbnConnectionProfile_FWD_DEFINED__ */


#ifndef __IMbnConnectionProfileEvents_FWD_DEFINED__
#define __IMbnConnectionProfileEvents_FWD_DEFINED__
typedef interface IMbnConnectionProfileEvents IMbnConnectionProfileEvents;
#endif 	/* __IMbnConnectionProfileEvents_FWD_DEFINED__ */


#ifndef __IMbnSmsConfiguration_FWD_DEFINED__
#define __IMbnSmsConfiguration_FWD_DEFINED__
typedef interface IMbnSmsConfiguration IMbnSmsConfiguration;
#endif 	/* __IMbnSmsConfiguration_FWD_DEFINED__ */


#ifndef __IMbnSmsReadMsgPdu_FWD_DEFINED__
#define __IMbnSmsReadMsgPdu_FWD_DEFINED__
typedef interface IMbnSmsReadMsgPdu IMbnSmsReadMsgPdu;
#endif 	/* __IMbnSmsReadMsgPdu_FWD_DEFINED__ */


#ifndef __IMbnSmsReadMsgTextCdma_FWD_DEFINED__
#define __IMbnSmsReadMsgTextCdma_FWD_DEFINED__
typedef interface IMbnSmsReadMsgTextCdma IMbnSmsReadMsgTextCdma;
#endif 	/* __IMbnSmsReadMsgTextCdma_FWD_DEFINED__ */


#ifndef __IMbnSms_FWD_DEFINED__
#define __IMbnSms_FWD_DEFINED__
typedef interface IMbnSms IMbnSms;
#endif 	/* __IMbnSms_FWD_DEFINED__ */


#ifndef __IMbnSmsEvents_FWD_DEFINED__
#define __IMbnSmsEvents_FWD_DEFINED__
typedef interface IMbnSmsEvents IMbnSmsEvents;
#endif 	/* __IMbnSmsEvents_FWD_DEFINED__ */


#ifndef __IMbnServiceActivation_FWD_DEFINED__
#define __IMbnServiceActivation_FWD_DEFINED__
typedef interface IMbnServiceActivation IMbnServiceActivation;
#endif 	/* __IMbnServiceActivation_FWD_DEFINED__ */


#ifndef __IMbnServiceActivationEvents_FWD_DEFINED__
#define __IMbnServiceActivationEvents_FWD_DEFINED__
typedef interface IMbnServiceActivationEvents IMbnServiceActivationEvents;
#endif 	/* __IMbnServiceActivationEvents_FWD_DEFINED__ */


#ifndef __IMbnVendorSpecificOperation_FWD_DEFINED__
#define __IMbnVendorSpecificOperation_FWD_DEFINED__
typedef interface IMbnVendorSpecificOperation IMbnVendorSpecificOperation;
#endif 	/* __IMbnVendorSpecificOperation_FWD_DEFINED__ */


#ifndef __IMbnVendorSpecificEvents_FWD_DEFINED__
#define __IMbnVendorSpecificEvents_FWD_DEFINED__
typedef interface IMbnVendorSpecificEvents IMbnVendorSpecificEvents;
#endif 	/* __IMbnVendorSpecificEvents_FWD_DEFINED__ */


#ifndef __IMbnInterfaceManager_FWD_DEFINED__
#define __IMbnInterfaceManager_FWD_DEFINED__
typedef interface IMbnInterfaceManager IMbnInterfaceManager;
#endif 	/* __IMbnInterfaceManager_FWD_DEFINED__ */


#ifndef __IMbnInterfaceManagerEvents_FWD_DEFINED__
#define __IMbnInterfaceManagerEvents_FWD_DEFINED__
typedef interface IMbnInterfaceManagerEvents IMbnInterfaceManagerEvents;
#endif 	/* __IMbnInterfaceManagerEvents_FWD_DEFINED__ */


#ifndef __IMbnConnectionManager_FWD_DEFINED__
#define __IMbnConnectionManager_FWD_DEFINED__
typedef interface IMbnConnectionManager IMbnConnectionManager;
#endif 	/* __IMbnConnectionManager_FWD_DEFINED__ */


#ifndef __IMbnConnectionManagerEvents_FWD_DEFINED__
#define __IMbnConnectionManagerEvents_FWD_DEFINED__
typedef interface IMbnConnectionManagerEvents IMbnConnectionManagerEvents;
#endif 	/* __IMbnConnectionManagerEvents_FWD_DEFINED__ */


#ifndef __IMbnConnectionProfileManagerEvents_FWD_DEFINED__
#define __IMbnConnectionProfileManagerEvents_FWD_DEFINED__
typedef interface IMbnConnectionProfileManagerEvents IMbnConnectionProfileManagerEvents;
#endif 	/* __IMbnConnectionProfileManagerEvents_FWD_DEFINED__ */


#ifndef __IMbnRadio_FWD_DEFINED__
#define __IMbnRadio_FWD_DEFINED__
typedef interface IMbnRadio IMbnRadio;
#endif 	/* __IMbnRadio_FWD_DEFINED__ */


#ifndef __IMbnRadioEvents_FWD_DEFINED__
#define __IMbnRadioEvents_FWD_DEFINED__
typedef interface IMbnRadioEvents IMbnRadioEvents;
#endif 	/* __IMbnRadioEvents_FWD_DEFINED__ */


#ifndef __MbnConnectionProfileManager_FWD_DEFINED__
#define __MbnConnectionProfileManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class MbnConnectionProfileManager MbnConnectionProfileManager;
#else
typedef struct MbnConnectionProfileManager MbnConnectionProfileManager;
#endif /* __cplusplus */

#endif 	/* __MbnConnectionProfileManager_FWD_DEFINED__ */


#ifndef __MbnInterfaceManager_FWD_DEFINED__
#define __MbnInterfaceManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class MbnInterfaceManager MbnInterfaceManager;
#else
typedef struct MbnInterfaceManager MbnInterfaceManager;
#endif /* __cplusplus */

#endif 	/* __MbnInterfaceManager_FWD_DEFINED__ */


#ifndef __MbnConnectionManager_FWD_DEFINED__
#define __MbnConnectionManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class MbnConnectionManager MbnConnectionManager;
#else
typedef struct MbnConnectionManager MbnConnectionManager;
#endif /* __cplusplus */

#endif 	/* __MbnConnectionManager_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mbnapi_0000_0000 */
/* [local] */ 



































extern RPC_IF_HANDLE __MIDL_itf_mbnapi_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mbnapi_0000_0000_v0_0_s_ifspec;

#ifndef __IDummyMBNUCMExt_INTERFACE_DEFINED__
#define __IDummyMBNUCMExt_INTERFACE_DEFINED__

/* interface IDummyMBNUCMExt */
/* [object][uuid] */ 


EXTERN_C const IID IID_IDummyMBNUCMExt;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-FFFF-4BBB-AAEE-338E368AF6FA")
    IDummyMBNUCMExt : public IDispatch
    {
    public:
    };
    
#else 	/* C style interface */

    typedef struct IDummyMBNUCMExtVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IDummyMBNUCMExt * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IDummyMBNUCMExt * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IDummyMBNUCMExt * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IDummyMBNUCMExt * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IDummyMBNUCMExt * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IDummyMBNUCMExt * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDummyMBNUCMExt * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } IDummyMBNUCMExtVtbl;

    interface IDummyMBNUCMExt
    {
        CONST_VTBL struct IDummyMBNUCMExtVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDummyMBNUCMExt_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDummyMBNUCMExt_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDummyMBNUCMExt_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDummyMBNUCMExt_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDummyMBNUCMExt_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDummyMBNUCMExt_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDummyMBNUCMExt_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDummyMBNUCMExt_INTERFACE_DEFINED__ */



#ifndef __MbnApi_LIBRARY_DEFINED__
#define __MbnApi_LIBRARY_DEFINED__

/* library MbnApi */
/* [helpstring][version][uuid] */ 

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("DCBBBAB6-6002-4BBB-AAEE-338E368AF6FA") 
enum MBN_CELLULAR_CLASS
    {	MBN_CELLULAR_CLASS_NONE	= 0,
	MBN_CELLULAR_CLASS_GSM	= 0x1,
	MBN_CELLULAR_CLASS_CDMA	= 0x2
    } 	MBN_CELLULAR_CLASS;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("83A34F4C-BDC4-11DC-A8A8-001321F1405F") 
enum MBN_DATA_CLASS
    {	MBN_DATA_CLASS_NONE	= 0,
	MBN_DATA_CLASS_GPRS	= 0x1,
	MBN_DATA_CLASS_EDGE	= 0x2,
	MBN_DATA_CLASS_UMTS	= 0x4,
	MBN_DATA_CLASS_HSDPA	= 0x8,
	MBN_DATA_CLASS_HSUPA	= 0x10,
	MBN_DATA_CLASS_LTE	= 0x20,
	MBN_DATA_CLASS_1XRTT	= 0x10000,
	MBN_DATA_CLASS_1XEVDO	= 0x20000,
	MBN_DATA_CLASS_1XEVDO_REVA	= 0x40000,
	MBN_DATA_CLASS_1XEVDV	= 0x80000,
	MBN_DATA_CLASS_3XRTT	= 0x100000,
	MBN_DATA_CLASS_1XEVDO_REVB	= 0x200000,
	MBN_DATA_CLASS_UMB	= 0x400000,
	MBN_DATA_CLASS_CUSTOM	= 0x80000000
    } 	MBN_DATA_CLASS;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("5DB6A98B-BDC5-11DC-A8A8-001321F1405F") 
enum MBN_BAND_CLASS
    {	MBN_BAND_CLASS_NONE	= 0,
	MBN_BAND_CLASS_0	= 0x1,
	MBN_BAND_CLASS_I	= 0x2,
	MBN_BAND_CLASS_II	= 0x4,
	MBN_BAND_CLASS_III	= 0x8,
	MBN_BAND_CLASS_IV	= 0x10,
	MBN_BAND_CLASS_V	= 0x20,
	MBN_BAND_CLASS_VI	= 0x40,
	MBN_BAND_CLASS_VII	= 0x80,
	MBN_BAND_CLASS_VIII	= 0x100,
	MBN_BAND_CLASS_IX	= 0x200,
	MBN_BAND_CLASS_X	= 0x400,
	MBN_BAND_CLASS_XI	= 0x800,
	MBN_BAND_CLASS_XII	= 0x1000,
	MBN_BAND_CLASS_XIII	= 0x2000,
	MBN_BAND_CLASS_XIV	= 0x4000,
	MBN_BAND_CLASS_XV	= 0x8000,
	MBN_BAND_CLASS_XVI	= 0x10000,
	MBN_BAND_CLASS_XVII	= 0x20000,
	MBN_BAND_CLASS_CUSTOM	= 0x80000000
    } 	MBN_BAND_CLASS;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("DCBBBAB6-6012-4BBB-AAEE-338E368AF6FA") 
enum MBN_VOICE_CLASS
    {	MBN_VOICE_CLASS_NONE	= 0,
	MBN_VOICE_CLASS_NO_VOICE	= 0x1,
	MBN_VOICE_CLASS_SEPARATE_VOICE_DATA	= 0x2,
	MBN_VOICE_CLASS_SIMULTANEOUS_VOICE_DATA	= 0x3
    } 	MBN_VOICE_CLASS;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("2308C1F7-BDC8-11DC-A8A8-001321F1405F") 
enum MBN_CTRL_CAPS
    {	MBN_CTRL_CAPS_NONE	= 0,
	MBN_CTRL_CAPS_REG_MANUAL	= 0x1,
	MBN_CTRL_CAPS_HW_RADIO_SWITCH	= 0x2,
	MBN_CTRL_CAPS_CDMA_MOBILE_IP	= 0x4,
	MBN_CTRL_CAPS_CDMA_SIMPLE_IP	= 0x8,
	MBN_CTRL_CAPS_PROTECT_UNIQUEID	= 0x10
    } 	MBN_CTRL_CAPS;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("E4096459-BDC8-11DC-A8A8-001321F1405F") 
enum MBN_SMS_CAPS
    {	MBN_SMS_CAPS_NONE	= 0,
	MBN_SMS_CAPS_PDU_RECEIVE	= 0x1,
	MBN_SMS_CAPS_PDU_SEND	= 0x2,
	MBN_SMS_CAPS_TEXT_RECEIVE	= 0x4,
	MBN_SMS_CAPS_TEXT_SEND	= 0x8
    } 	MBN_SMS_CAPS;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("59C235E7-BDC9-11DC-A8A8-001321F1405F") 
enum MBN_INTERFACE_CAPS_CONSTANTS
    {	MBN_DEVICEID_LEN	= 18,
	MBN_MANUFACTURER_LEN	= 32,
	MBN_MODEL_LEN	= 32,
	MBN_FIRMWARE_LEN	= 32
    } 	MBN_INTERFACE_CAPS_CONSTANTS;

typedef /* [uuid] */  DECLSPEC_UUID("CD1A4B17-BDC9-11DC-A8A8-001321F1405F") struct MBN_INTERFACE_CAPS
    {
    MBN_CELLULAR_CLASS cellularClass;
    MBN_VOICE_CLASS voiceClass;
    ULONG dataClass;
    BSTR customDataClass;
    ULONG gsmBandClass;
    ULONG cdmaBandClass;
    BSTR customBandClass;
    ULONG smsCaps;
    ULONG controlCaps;
    BSTR deviceID;
    BSTR manufacturer;
    BSTR model;
    BSTR firmwareInfo;
    } 	MBN_INTERFACE_CAPS;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("DCBBBAB6-6003-4BBB-AAEE-338E368AF6FA") 
enum MBN_READY_STATE
    {	MBN_READY_STATE_OFF	= 0,
	MBN_READY_STATE_INITIALIZED	= ( MBN_READY_STATE_OFF + 1 ) ,
	MBN_READY_STATE_SIM_NOT_INSERTED	= ( MBN_READY_STATE_INITIALIZED + 1 ) ,
	MBN_READY_STATE_BAD_SIM	= ( MBN_READY_STATE_SIM_NOT_INSERTED + 1 ) ,
	MBN_READY_STATE_FAILURE	= ( MBN_READY_STATE_BAD_SIM + 1 ) ,
	MBN_READY_STATE_NOT_ACTIVATED	= ( MBN_READY_STATE_FAILURE + 1 ) ,
	MBN_READY_STATE_DEVICE_LOCKED	= ( MBN_READY_STATE_NOT_ACTIVATED + 1 ) ,
	MBN_READY_STATE_DEVICE_BLOCKED	= ( MBN_READY_STATE_DEVICE_LOCKED + 1 ) 
    } 	MBN_READY_STATE;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("6E1348BB-BDCB-11DC-A8A8-001321F1405F") 
enum MBN_PROVIDER_STATE
    {	MBN_PROVIDER_STATE_NONE	= 0,
	MBN_PROVIDER_STATE_HOME	= 0x1,
	MBN_PROVIDER_STATE_FORBIDDEN	= 0x2,
	MBN_PROVIDER_STATE_PREFERRED	= 0x4,
	MBN_PROVIDER_STATE_VISIBLE	= 0x8,
	MBN_PROVIDER_STATE_REGISTERED	= 0x10
    } 	MBN_PROVIDER_STATE;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("934092FD-BDCB-11DC-A8A8-001321F1405F") 
enum MBN_PROVIDER_CONSTANTS
    {	MBN_PROVIDERNAME_LEN	= 20,
	MBN_PROVIDERID_LEN	= 6
    } 	MBN_PROVIDER_CONSTANTS;

typedef /* [uuid] */  DECLSPEC_UUID("DCBBBAB6-9005-4BBB-AAEE-338E368AF6FA") struct MBN_PROVIDER
    {
    BSTR providerID;
    ULONG providerState;
    BSTR providerName;
    ULONG dataClass;
    } 	MBN_PROVIDER;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("42FAAC0B-BDCC-11DC-A8A8-001321F1405F") 
enum MBN_SIGNAL_CONSTANTS
    {	MBN_RSSI_DEFAULT	= 0xffffffff,
	MBN_RSSI_DISABLE	= 0,
	MBN_RSSI_UNKNOWN	= 99,
	MBN_ERROR_RATE_UNKNOWN	= 99
    } 	MBN_SIGNAL_CONSTANTS;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("DCBBBAB6-6005-4BBB-AAEE-338E368AF6FA") 
enum MBN_PIN_TYPE
    {	MBN_PIN_TYPE_NONE	= 0,
	MBN_PIN_TYPE_CUSTOM	= ( MBN_PIN_TYPE_NONE + 1 ) ,
	MBN_PIN_TYPE_PIN1	= ( MBN_PIN_TYPE_CUSTOM + 1 ) ,
	MBN_PIN_TYPE_PIN2	= ( MBN_PIN_TYPE_PIN1 + 1 ) ,
	MBN_PIN_TYPE_DEVICE_SIM_PIN	= ( MBN_PIN_TYPE_PIN2 + 1 ) ,
	MBN_PIN_TYPE_DEVICE_FIRST_SIM_PIN	= ( MBN_PIN_TYPE_DEVICE_SIM_PIN + 1 ) ,
	MBN_PIN_TYPE_NETWORK_PIN	= ( MBN_PIN_TYPE_DEVICE_FIRST_SIM_PIN + 1 ) ,
	MBN_PIN_TYPE_NETWORK_SUBSET_PIN	= ( MBN_PIN_TYPE_NETWORK_PIN + 1 ) ,
	MBN_PIN_TYPE_SVC_PROVIDER_PIN	= ( MBN_PIN_TYPE_NETWORK_SUBSET_PIN + 1 ) ,
	MBN_PIN_TYPE_CORPORATE_PIN	= ( MBN_PIN_TYPE_SVC_PROVIDER_PIN + 1 ) ,
	MBN_PIN_TYPE_SUBSIDY_LOCK	= ( MBN_PIN_TYPE_CORPORATE_PIN + 1 ) 
    } 	MBN_PIN_TYPE;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("BD8A2871-BDCD-11DC-A8A8-001321F1405F") 
enum MBN_PIN_MODE
    {	MBN_PIN_MODE_ENABLED	= 1,
	MBN_PIN_MODE_DISABLED	= ( MBN_PIN_MODE_ENABLED + 1 ) 
    } 	MBN_PIN_MODE;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("C2A93665-BDCD-11DC-A8A8-001321F1405F") 
enum MBN_PIN_FORMAT
    {	MBN_PIN_FORMAT_NONE	= 0,
	MBN_PIN_FORMAT_NUMERIC	= ( MBN_PIN_FORMAT_NONE + 1 ) ,
	MBN_PIN_FORMAT_ALPHANUMERIC	= ( MBN_PIN_FORMAT_NUMERIC + 1 ) 
    } 	MBN_PIN_FORMAT;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("C75E76F5-BDCD-11DC-A8A8-001321F1405F") 
enum MBN_PIN_CONSTANTS
    {	MBN_ATTEMPTS_REMAINING_UNKNOWN	= 0xffffffff,
	MBN_PIN_LENGTH_UNKNOWN	= 0xffffffff
    } 	MBN_PIN_CONSTANTS;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("D11BD29D-BDCD-11DC-A8A8-001321F1405F") 
enum MBN_PIN_STATE
    {	MBN_PIN_STATE_NONE	= 0,
	MBN_PIN_STATE_ENTER	= ( MBN_PIN_STATE_NONE + 1 ) ,
	MBN_PIN_STATE_UNBLOCK	= ( MBN_PIN_STATE_ENTER + 1 ) 
    } 	MBN_PIN_STATE;

typedef /* [uuid] */  DECLSPEC_UUID("DCBBBAB6-9006-4BBB-AAEE-338E368AF6FA") struct MBN_PIN_INFO
    {
    MBN_PIN_STATE pinState;
    MBN_PIN_TYPE pinType;
    ULONG attemptsRemaining;
    } 	MBN_PIN_INFO;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("D5F1726B-BDCE-11DC-A8A8-001321F1405F") 
enum MBN_REGISTRATION_CONSTANTS
    {	MBN_ROAMTEXT_LEN	= 64,
	MBN_CDMA_DEFAULT_PROVIDER_ID	= 0
    } 	MBN_REGISTRATION_CONSTANTS;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("DCBBBAB6-6009-4BBB-AAEE-338E368AF6FA") 
enum MBN_REGISTER_STATE
    {	MBN_REGISTER_STATE_NONE	= 0,
	MBN_REGISTER_STATE_DEREGISTERED	= ( MBN_REGISTER_STATE_NONE + 1 ) ,
	MBN_REGISTER_STATE_SEARCHING	= ( MBN_REGISTER_STATE_DEREGISTERED + 1 ) ,
	MBN_REGISTER_STATE_HOME	= ( MBN_REGISTER_STATE_SEARCHING + 1 ) ,
	MBN_REGISTER_STATE_ROAMING	= ( MBN_REGISTER_STATE_HOME + 1 ) ,
	MBN_REGISTER_STATE_PARTNER	= ( MBN_REGISTER_STATE_ROAMING + 1 ) ,
	MBN_REGISTER_STATE_DENIED	= ( MBN_REGISTER_STATE_PARTNER + 1 ) 
    } 	MBN_REGISTER_STATE;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("D7F73F35-BDCD-11DC-A8A8-001321F1405F") 
enum MBN_REGISTER_MODE
    {	MBN_REGISTER_MODE_NONE	= 0,
	MBN_REGISTER_MODE_AUTOMATIC	= ( MBN_REGISTER_MODE_NONE + 1 ) ,
	MBN_REGISTER_MODE_MANUAL	= ( MBN_REGISTER_MODE_AUTOMATIC + 1 ) 
    } 	MBN_REGISTER_MODE;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("0E62803F-BDD0-11DC-A8A8-001321F1405F") 
enum MBN_CONTEXT_CONSTANTS
    {	MBN_ACCESSSTRING_LEN	= 100,
	MBN_USERNAME_LEN	= 255,
	MBN_PASSWORD_LEN	= 255,
	MBN_CONTEXT_ID_APPEND	= 0xffffffff
    } 	MBN_CONTEXT_CONSTANTS;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("E24B42EF-BDCD-11DC-A8A8-001321F1405F") 
enum MBN_AUTH_PROTOCOL
    {	MBN_AUTH_PROTOCOL_NONE	= 0,
	MBN_AUTH_PROTOCOL_PAP	= ( MBN_AUTH_PROTOCOL_NONE + 1 ) ,
	MBN_AUTH_PROTOCOL_CHAP	= ( MBN_AUTH_PROTOCOL_PAP + 1 ) ,
	MBN_AUTH_PROTOCOL_MSCHAPV2	= ( MBN_AUTH_PROTOCOL_CHAP + 1 ) 
    } 	MBN_AUTH_PROTOCOL;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("E6A360B9-BDCD-11DC-A8A8-001321F1405F") 
enum MBN_COMPRESSION
    {	MBN_COMPRESSION_NONE	= 0,
	MBN_COMPRESSION_ENABLE	= ( MBN_COMPRESSION_NONE + 1 ) 
    } 	MBN_COMPRESSION;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("EB4731EB-BDCD-11DC-A8A8-001321F1405F") 
enum MBN_CONTEXT_TYPE
    {	MBN_CONTEXT_TYPE_NONE	= 0,
	MBN_CONTEXT_TYPE_INTERNET	= ( MBN_CONTEXT_TYPE_NONE + 1 ) ,
	MBN_CONTEXT_TYPE_VPN	= ( MBN_CONTEXT_TYPE_INTERNET + 1 ) ,
	MBN_CONTEXT_TYPE_VOICE	= ( MBN_CONTEXT_TYPE_VPN + 1 ) ,
	MBN_CONTEXT_TYPE_VIDEO_SHARE	= ( MBN_CONTEXT_TYPE_VOICE + 1 ) ,
	MBN_CONTEXT_TYPE_CUSTOM	= ( MBN_CONTEXT_TYPE_VIDEO_SHARE + 1 ) 
    } 	MBN_CONTEXT_TYPE;

typedef /* [uuid] */  DECLSPEC_UUID("FE1F7B6F-BDCD-11DC-A8A8-001321F1405F") struct MBN_CONTEXT
    {
    ULONG contextID;
    MBN_CONTEXT_TYPE contextType;
    BSTR accessString;
    BSTR userName;
    BSTR password;
    MBN_COMPRESSION compression;
    MBN_AUTH_PROTOCOL authType;
    } 	MBN_CONTEXT;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("EFB7C00D-BDCD-11DC-A8A8-001321F1405F") 
enum MBN_ACTIVATION_STATE
    {	MBN_ACTIVATION_STATE_NONE	= 0,
	MBN_ACTIVATION_STATE_ACTIVATED	= ( MBN_ACTIVATION_STATE_NONE + 1 ) ,
	MBN_ACTIVATION_STATE_ACTIVATING	= ( MBN_ACTIVATION_STATE_ACTIVATED + 1 ) ,
	MBN_ACTIVATION_STATE_DEACTIVATED	= ( MBN_ACTIVATION_STATE_ACTIVATING + 1 ) ,
	MBN_ACTIVATION_STATE_DEACTIVATING	= ( MBN_ACTIVATION_STATE_DEACTIVATED + 1 ) 
    } 	MBN_ACTIVATION_STATE;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("F601E1EB-BDCD-11DC-A8A8-001321F1405F") 
enum MBN_CONNECTION_MODE
    {	MBN_CONNECTION_MODE_PROFILE	= 0,
	MBN_CONNECTION_MODE_TMP_PROFILE	= ( MBN_CONNECTION_MODE_PROFILE + 1 ) 
    } 	MBN_CONNECTION_MODE;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("6D8846E5-BDD1-11DC-A8A8-001321F1405F") 
enum MBN_VOICE_CALL_STATE
    {	MBN_VOICE_CALL_STATE_NONE	= 0,
	MBN_VOICE_CALL_STATE_IN_PROGRESS	= ( MBN_VOICE_CALL_STATE_NONE + 1 ) ,
	MBN_VOICE_CALL_STATE_HANGUP	= ( MBN_VOICE_CALL_STATE_IN_PROGRESS + 1 ) 
    } 	MBN_VOICE_CALL_STATE;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("130C65D3-BDD3-11DC-A8A8-001321F1405F") 
enum MBN_SMS_CONSTANTS
    {	MBN_MESSAGE_INDEX_NONE	= 0,
	MBN_CDMA_SHORT_MSG_SIZE_UNKNOWN	= 0,
	MBN_CDMA_SHORT_MSG_SIZE_MAX	= 160
    } 	WWAEXT_SMS_CONSTANTS;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("FC208FC1-BDE5-11DC-A8A8-001321F1405F") 
enum MBN_MSG_STATUS
    {	MBN_MSG_STATUS_NEW	= 0,
	MBN_MSG_STATUS_OLD	= ( MBN_MSG_STATUS_NEW + 1 ) ,
	MBN_MSG_STATUS_DRAFT	= ( MBN_MSG_STATUS_OLD + 1 ) ,
	MBN_MSG_STATUS_SENT	= ( MBN_MSG_STATUS_DRAFT + 1 ) 
    } 	MBN_MSG_STATUS;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("29912B29-BDD4-11DC-A8A8-001321F1405F") 
enum MBN_SMS_CDMA_LANG
    {	MBN_SMS_CDMA_LANG_NONE	= 0,
	MBN_SMS_CDMA_LANG_ENGLISH	= ( MBN_SMS_CDMA_LANG_NONE + 1 ) ,
	MBN_SMS_CDMA_LANG_FRENCH	= ( MBN_SMS_CDMA_LANG_ENGLISH + 1 ) ,
	MBN_SMS_CDMA_LANG_SPANISH	= ( MBN_SMS_CDMA_LANG_FRENCH + 1 ) ,
	MBN_SMS_CDMA_LANG_JAPANESE	= ( MBN_SMS_CDMA_LANG_SPANISH + 1 ) ,
	MBN_SMS_CDMA_LANG_KOREAN	= ( MBN_SMS_CDMA_LANG_JAPANESE + 1 ) ,
	MBN_SMS_CDMA_LANG_CHINESE	= ( MBN_SMS_CDMA_LANG_KOREAN + 1 ) ,
	MBN_SMS_CDMA_LANG_HEBREW	= ( MBN_SMS_CDMA_LANG_CHINESE + 1 ) 
    } 	MBN_SMS_CDMA_LANG;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("7F8E74CB-BDD4-11DC-A8A8-001321F1405F") 
enum MBN_SMS_CDMA_ENCODING
    {	MBN_SMS_CDMA_ENCODING_OCTET	= 0,
	MBN_SMS_CDMA_ENCODING_EPM	= ( MBN_SMS_CDMA_ENCODING_OCTET + 1 ) ,
	MBN_SMS_CDMA_ENCODING_7BIT_ASCII	= ( MBN_SMS_CDMA_ENCODING_EPM + 1 ) ,
	MBN_SMS_CDMA_ENCODING_IA5	= ( MBN_SMS_CDMA_ENCODING_7BIT_ASCII + 1 ) ,
	MBN_SMS_CDMA_ENCODING_UNICODE	= ( MBN_SMS_CDMA_ENCODING_IA5 + 1 ) ,
	MBN_SMS_CDMA_ENCODING_SHIFT_JIS	= ( MBN_SMS_CDMA_ENCODING_UNICODE + 1 ) ,
	MBN_SMS_CDMA_ENCODING_KOREAN	= ( MBN_SMS_CDMA_ENCODING_SHIFT_JIS + 1 ) ,
	MBN_SMS_CDMA_ENCODING_LATIN_HEBREW	= ( MBN_SMS_CDMA_ENCODING_KOREAN + 1 ) ,
	MBN_SMS_CDMA_ENCODING_LATIN	= ( MBN_SMS_CDMA_ENCODING_LATIN_HEBREW + 1 ) ,
	MBN_SMS_CDMA_ENCODING_GSM_7BIT	= ( MBN_SMS_CDMA_ENCODING_LATIN + 1 ) 
    } 	MBN_SMS_CDMA_ENCODING;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("0D42B514-BDDC-11DC-A8A8-001321F1405F") 
enum MBN_SMS_FLAG
    {	MBN_SMS_FLAG_ALL	= 0,
	MBN_SMS_FLAG_INDEX	= ( MBN_SMS_FLAG_ALL + 1 ) ,
	MBN_SMS_FLAG_NEW	= ( MBN_SMS_FLAG_INDEX + 1 ) ,
	MBN_SMS_FLAG_OLD	= ( MBN_SMS_FLAG_NEW + 1 ) ,
	MBN_SMS_FLAG_SENT	= ( MBN_SMS_FLAG_OLD + 1 ) ,
	MBN_SMS_FLAG_DRAFT	= ( MBN_SMS_FLAG_SENT + 1 ) 
    } 	MBN_SMS_FLAG;

typedef /* [uuid] */  DECLSPEC_UUID("406BFD60-BDDC-11DC-A8A8-001321F1405F") struct MBN_SMS_FILTER
    {
    MBN_SMS_FLAG flag;
    ULONG messageIndex;
    } 	MBN_SMS_FILTER;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("8098009D-BDDC-11DC-A8A8-001321F1405F") 
enum MBN_SMS_STATUS_FLAG
    {	MBN_SMS_FLAG_NONE	= 0,
	MBN_SMS_FLAG_MESSAGE_STORE_FULL	= 0x1,
	MBN_SMS_FLAG_NEW_MESSAGE	= 0x2
    } 	MBN_SMS_STATUS_FLAG;

typedef /* [uuid] */  DECLSPEC_UUID("1F6E9CA3-BDE6-11DC-A8A8-001321F1405F") struct MBN_SMS_STATUS_INFO
    {
    ULONG flag;
    ULONG messageIndex;
    } 	MBN_SMS_STATUS_INFO;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("4B0FE227-3709-41e2-8A78-E98C0CD0CB09") 
enum MBN_SMS_FORMAT
    {	MBN_SMS_FORMAT_NONE	= 0,
	MBN_SMS_FORMAT_PDU	= 0x1,
	MBN_SMS_FORMAT_TEXT	= 0x2
    } 	MBN_SMS_FORMAT;

typedef /* [helpstring][v1_enum][version][uuid] */  DECLSPEC_UUID("532A3FE4-BDE6-11DC-A8A8-001321F1405F") 
enum MBN_RADIO
    {	MBN_RADIO_OFF	= 0,
	MBN_RADIO_ON	= ( MBN_RADIO_OFF + 1 ) 
    } 	MBN_RADIO;


EXTERN_C const IID LIBID_MbnApi;

#ifndef __IMbnInterface_INTERFACE_DEFINED__
#define __IMbnInterface_INTERFACE_DEFINED__

/* interface IMbnInterface */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnInterface;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2001-4BBB-AAEE-338E368AF6FA")
    IMbnInterface : public IUnknown
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_InterfaceID( 
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *InterfaceID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetInterfaceCapability( 
            /* [retval][ref][out] */ __RPC__out MBN_INTERFACE_CAPS *interfaceCaps) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSubscriberInformation( 
            /* [retval][out] */ __RPC__deref_out_opt IMbnSubscriberInformation **subscriberInformation) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetReadyState( 
            /* [retval][ref][out] */ __RPC__out MBN_READY_STATE *readyState) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InEmergencyMode( 
            /* [retval][ref][out] */ __RPC__out VARIANT_BOOL *emergencyMode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetHomeProvider( 
            /* [retval][ref][out] */ __RPC__out MBN_PROVIDER *homeProvider) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPreferredProviders( 
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *preferredProviders) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetPreferredProviders( 
            /* [in] */ __RPC__in SAFEARRAY * preferredProviders,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetVisibleProviders( 
            /* [out] */ __RPC__out ULONG *age,
            /* [retval][out] */ __RPC__deref_out_opt SAFEARRAY * *visibleProviders) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ScanNetwork( 
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetConnection( 
            /* [retval][out] */ __RPC__deref_out_opt IMbnConnection **mbnConnection) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnInterfaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnInterface * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnInterface * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnInterface * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterfaceID )( 
            __RPC__in IMbnInterface * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *InterfaceID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetInterfaceCapability )( 
            __RPC__in IMbnInterface * This,
            /* [retval][ref][out] */ __RPC__out MBN_INTERFACE_CAPS *interfaceCaps);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSubscriberInformation )( 
            __RPC__in IMbnInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt IMbnSubscriberInformation **subscriberInformation);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetReadyState )( 
            __RPC__in IMbnInterface * This,
            /* [retval][ref][out] */ __RPC__out MBN_READY_STATE *readyState);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InEmergencyMode )( 
            __RPC__in IMbnInterface * This,
            /* [retval][ref][out] */ __RPC__out VARIANT_BOOL *emergencyMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetHomeProvider )( 
            __RPC__in IMbnInterface * This,
            /* [retval][ref][out] */ __RPC__out MBN_PROVIDER *homeProvider);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPreferredProviders )( 
            __RPC__in IMbnInterface * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *preferredProviders);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetPreferredProviders )( 
            __RPC__in IMbnInterface * This,
            /* [in] */ __RPC__in SAFEARRAY * preferredProviders,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetVisibleProviders )( 
            __RPC__in IMbnInterface * This,
            /* [out] */ __RPC__out ULONG *age,
            /* [retval][out] */ __RPC__deref_out_opt SAFEARRAY * *visibleProviders);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ScanNetwork )( 
            __RPC__in IMbnInterface * This,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetConnection )( 
            __RPC__in IMbnInterface * This,
            /* [retval][out] */ __RPC__deref_out_opt IMbnConnection **mbnConnection);
        
        END_INTERFACE
    } IMbnInterfaceVtbl;

    interface IMbnInterface
    {
        CONST_VTBL struct IMbnInterfaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnInterface_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnInterface_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnInterface_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnInterface_get_InterfaceID(This,InterfaceID)	\
    ( (This)->lpVtbl -> get_InterfaceID(This,InterfaceID) ) 

#define IMbnInterface_GetInterfaceCapability(This,interfaceCaps)	\
    ( (This)->lpVtbl -> GetInterfaceCapability(This,interfaceCaps) ) 

#define IMbnInterface_GetSubscriberInformation(This,subscriberInformation)	\
    ( (This)->lpVtbl -> GetSubscriberInformation(This,subscriberInformation) ) 

#define IMbnInterface_GetReadyState(This,readyState)	\
    ( (This)->lpVtbl -> GetReadyState(This,readyState) ) 

#define IMbnInterface_InEmergencyMode(This,emergencyMode)	\
    ( (This)->lpVtbl -> InEmergencyMode(This,emergencyMode) ) 

#define IMbnInterface_GetHomeProvider(This,homeProvider)	\
    ( (This)->lpVtbl -> GetHomeProvider(This,homeProvider) ) 

#define IMbnInterface_GetPreferredProviders(This,preferredProviders)	\
    ( (This)->lpVtbl -> GetPreferredProviders(This,preferredProviders) ) 

#define IMbnInterface_SetPreferredProviders(This,preferredProviders,requestID)	\
    ( (This)->lpVtbl -> SetPreferredProviders(This,preferredProviders,requestID) ) 

#define IMbnInterface_GetVisibleProviders(This,age,visibleProviders)	\
    ( (This)->lpVtbl -> GetVisibleProviders(This,age,visibleProviders) ) 

#define IMbnInterface_ScanNetwork(This,requestID)	\
    ( (This)->lpVtbl -> ScanNetwork(This,requestID) ) 

#define IMbnInterface_GetConnection(This,mbnConnection)	\
    ( (This)->lpVtbl -> GetConnection(This,mbnConnection) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnInterface_INTERFACE_DEFINED__ */


#ifndef __IMbnSubscriberInformation_INTERFACE_DEFINED__
#define __IMbnSubscriberInformation_INTERFACE_DEFINED__

/* interface IMbnSubscriberInformation */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnSubscriberInformation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("459ECC43-BCF5-11DC-A8A8-001321F1405F")
    IMbnSubscriberInformation : public IUnknown
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubscriberID( 
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *SubscriberID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SimIccID( 
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *SimIccID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TelephoneNumbers( 
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *TelephoneNumbers) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnSubscriberInformationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnSubscriberInformation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnSubscriberInformation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnSubscriberInformation * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SubscriberID )( 
            __RPC__in IMbnSubscriberInformation * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *SubscriberID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SimIccID )( 
            __RPC__in IMbnSubscriberInformation * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *SimIccID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TelephoneNumbers )( 
            __RPC__in IMbnSubscriberInformation * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *TelephoneNumbers);
        
        END_INTERFACE
    } IMbnSubscriberInformationVtbl;

    interface IMbnSubscriberInformation
    {
        CONST_VTBL struct IMbnSubscriberInformationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnSubscriberInformation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnSubscriberInformation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnSubscriberInformation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnSubscriberInformation_get_SubscriberID(This,SubscriberID)	\
    ( (This)->lpVtbl -> get_SubscriberID(This,SubscriberID) ) 

#define IMbnSubscriberInformation_get_SimIccID(This,SimIccID)	\
    ( (This)->lpVtbl -> get_SimIccID(This,SimIccID) ) 

#define IMbnSubscriberInformation_get_TelephoneNumbers(This,TelephoneNumbers)	\
    ( (This)->lpVtbl -> get_TelephoneNumbers(This,TelephoneNumbers) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnSubscriberInformation_INTERFACE_DEFINED__ */


#ifndef __IMbnInterfaceEvents_INTERFACE_DEFINED__
#define __IMbnInterfaceEvents_INTERFACE_DEFINED__

/* interface IMbnInterfaceEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnInterfaceEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2002-4BBB-AAEE-338E368AF6FA")
    IMbnInterfaceEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnInterfaceCapabilityAvailable( 
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSubscriberInformationChange( 
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnReadyStateChange( 
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnEmergencyModeChange( 
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnHomeProviderAvailable( 
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnPreferredProvidersChange( 
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSetPreferredProvidersComplete( 
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnScanNetworkComplete( 
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnInterfaceEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnInterfaceEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnInterfaceEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnInterfaceEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnInterfaceCapabilityAvailable )( 
            __RPC__in IMbnInterfaceEvents * This,
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSubscriberInformationChange )( 
            __RPC__in IMbnInterfaceEvents * This,
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnReadyStateChange )( 
            __RPC__in IMbnInterfaceEvents * This,
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnEmergencyModeChange )( 
            __RPC__in IMbnInterfaceEvents * This,
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnHomeProviderAvailable )( 
            __RPC__in IMbnInterfaceEvents * This,
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnPreferredProvidersChange )( 
            __RPC__in IMbnInterfaceEvents * This,
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSetPreferredProvidersComplete )( 
            __RPC__in IMbnInterfaceEvents * This,
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnScanNetworkComplete )( 
            __RPC__in IMbnInterfaceEvents * This,
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        END_INTERFACE
    } IMbnInterfaceEventsVtbl;

    interface IMbnInterfaceEvents
    {
        CONST_VTBL struct IMbnInterfaceEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnInterfaceEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnInterfaceEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnInterfaceEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnInterfaceEvents_OnInterfaceCapabilityAvailable(This,newInterface)	\
    ( (This)->lpVtbl -> OnInterfaceCapabilityAvailable(This,newInterface) ) 

#define IMbnInterfaceEvents_OnSubscriberInformationChange(This,newInterface)	\
    ( (This)->lpVtbl -> OnSubscriberInformationChange(This,newInterface) ) 

#define IMbnInterfaceEvents_OnReadyStateChange(This,newInterface)	\
    ( (This)->lpVtbl -> OnReadyStateChange(This,newInterface) ) 

#define IMbnInterfaceEvents_OnEmergencyModeChange(This,newInterface)	\
    ( (This)->lpVtbl -> OnEmergencyModeChange(This,newInterface) ) 

#define IMbnInterfaceEvents_OnHomeProviderAvailable(This,newInterface)	\
    ( (This)->lpVtbl -> OnHomeProviderAvailable(This,newInterface) ) 

#define IMbnInterfaceEvents_OnPreferredProvidersChange(This,newInterface)	\
    ( (This)->lpVtbl -> OnPreferredProvidersChange(This,newInterface) ) 

#define IMbnInterfaceEvents_OnSetPreferredProvidersComplete(This,newInterface,requestID,status)	\
    ( (This)->lpVtbl -> OnSetPreferredProvidersComplete(This,newInterface,requestID,status) ) 

#define IMbnInterfaceEvents_OnScanNetworkComplete(This,newInterface,requestID,status)	\
    ( (This)->lpVtbl -> OnScanNetworkComplete(This,newInterface,requestID,status) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnInterfaceEvents_INTERFACE_DEFINED__ */


#ifndef __IMbnSignal_INTERFACE_DEFINED__
#define __IMbnSignal_INTERFACE_DEFINED__

/* interface IMbnSignal */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnSignal;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2003-4BBB-AAEE-338E368AF6FA")
    IMbnSignal : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSignalStrength( 
            /* [retval][ref][out] */ __RPC__out ULONG *signalStrength) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSignalError( 
            /* [retval][ref][out] */ __RPC__out ULONG *signalError) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnSignalVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnSignal * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnSignal * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnSignal * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSignalStrength )( 
            __RPC__in IMbnSignal * This,
            /* [retval][ref][out] */ __RPC__out ULONG *signalStrength);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSignalError )( 
            __RPC__in IMbnSignal * This,
            /* [retval][ref][out] */ __RPC__out ULONG *signalError);
        
        END_INTERFACE
    } IMbnSignalVtbl;

    interface IMbnSignal
    {
        CONST_VTBL struct IMbnSignalVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnSignal_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnSignal_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnSignal_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnSignal_GetSignalStrength(This,signalStrength)	\
    ( (This)->lpVtbl -> GetSignalStrength(This,signalStrength) ) 

#define IMbnSignal_GetSignalError(This,signalError)	\
    ( (This)->lpVtbl -> GetSignalError(This,signalError) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnSignal_INTERFACE_DEFINED__ */


#ifndef __IMbnSignalEvents_INTERFACE_DEFINED__
#define __IMbnSignalEvents_INTERFACE_DEFINED__

/* interface IMbnSignalEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnSignalEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2004-4BBB-AAEE-338E368AF6FA")
    IMbnSignalEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSignalStateChange( 
            /* [in] */ __RPC__in_opt IMbnSignal *newInterface) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnSignalEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnSignalEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnSignalEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnSignalEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSignalStateChange )( 
            __RPC__in IMbnSignalEvents * This,
            /* [in] */ __RPC__in_opt IMbnSignal *newInterface);
        
        END_INTERFACE
    } IMbnSignalEventsVtbl;

    interface IMbnSignalEvents
    {
        CONST_VTBL struct IMbnSignalEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnSignalEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnSignalEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnSignalEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnSignalEvents_OnSignalStateChange(This,newInterface)	\
    ( (This)->lpVtbl -> OnSignalStateChange(This,newInterface) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnSignalEvents_INTERFACE_DEFINED__ */


#ifndef __IMbnPinManager_INTERFACE_DEFINED__
#define __IMbnPinManager_INTERFACE_DEFINED__

/* interface IMbnPinManager */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnPinManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2005-4BBB-AAEE-338E368AF6FA")
    IMbnPinManager : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPinList( 
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *pinList) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPin( 
            /* [in] */ MBN_PIN_TYPE pinType,
            /* [retval][ref][out] */ __RPC__deref_out_opt IMbnPin **pin) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPinState( 
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnPinManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnPinManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnPinManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnPinManager * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPinList )( 
            __RPC__in IMbnPinManager * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *pinList);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPin )( 
            __RPC__in IMbnPinManager * This,
            /* [in] */ MBN_PIN_TYPE pinType,
            /* [retval][ref][out] */ __RPC__deref_out_opt IMbnPin **pin);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPinState )( 
            __RPC__in IMbnPinManager * This,
            /* [out] */ __RPC__out ULONG *requestID);
        
        END_INTERFACE
    } IMbnPinManagerVtbl;

    interface IMbnPinManager
    {
        CONST_VTBL struct IMbnPinManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnPinManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnPinManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnPinManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnPinManager_GetPinList(This,pinList)	\
    ( (This)->lpVtbl -> GetPinList(This,pinList) ) 

#define IMbnPinManager_GetPin(This,pinType,pin)	\
    ( (This)->lpVtbl -> GetPin(This,pinType,pin) ) 

#define IMbnPinManager_GetPinState(This,requestID)	\
    ( (This)->lpVtbl -> GetPinState(This,requestID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnPinManager_INTERFACE_DEFINED__ */


#ifndef __IMbnPinManagerEvents_INTERFACE_DEFINED__
#define __IMbnPinManagerEvents_INTERFACE_DEFINED__

/* interface IMbnPinManagerEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnPinManagerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2006-4BBB-AAEE-338E368AF6FA")
    IMbnPinManagerEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnPinListAvailable( 
            /* [in] */ __RPC__in_opt IMbnPinManager *pinManager) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnGetPinStateComplete( 
            /* [in] */ __RPC__in_opt IMbnPinManager *pinManager,
            /* [in] */ MBN_PIN_INFO pinInfo,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnPinManagerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnPinManagerEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnPinManagerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnPinManagerEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnPinListAvailable )( 
            __RPC__in IMbnPinManagerEvents * This,
            /* [in] */ __RPC__in_opt IMbnPinManager *pinManager);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnGetPinStateComplete )( 
            __RPC__in IMbnPinManagerEvents * This,
            /* [in] */ __RPC__in_opt IMbnPinManager *pinManager,
            /* [in] */ MBN_PIN_INFO pinInfo,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        END_INTERFACE
    } IMbnPinManagerEventsVtbl;

    interface IMbnPinManagerEvents
    {
        CONST_VTBL struct IMbnPinManagerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnPinManagerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnPinManagerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnPinManagerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnPinManagerEvents_OnPinListAvailable(This,pinManager)	\
    ( (This)->lpVtbl -> OnPinListAvailable(This,pinManager) ) 

#define IMbnPinManagerEvents_OnGetPinStateComplete(This,pinManager,pinInfo,requestID,status)	\
    ( (This)->lpVtbl -> OnGetPinStateComplete(This,pinManager,pinInfo,requestID,status) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnPinManagerEvents_INTERFACE_DEFINED__ */


#ifndef __IMbnPin_INTERFACE_DEFINED__
#define __IMbnPin_INTERFACE_DEFINED__

/* interface IMbnPin */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnPin;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2007-4BBB-AAEE-338E368AF6FA")
    IMbnPin : public IUnknown
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PinType( 
            /* [retval][ref][out] */ __RPC__out MBN_PIN_TYPE *PinType) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PinFormat( 
            /* [retval][ref][out] */ __RPC__out MBN_PIN_FORMAT *PinFormat) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PinLengthMin( 
            /* [retval][ref][out] */ __RPC__out ULONG *PinLengthMin) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PinLengthMax( 
            /* [retval][ref][out] */ __RPC__out ULONG *PinLengthMax) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PinMode( 
            /* [retval][ref][out] */ __RPC__out MBN_PIN_MODE *PinMode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Enable( 
            /* [string][ref][in] */ __RPC__in_string LPCWSTR pin,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Disable( 
            /* [string][ref][in] */ __RPC__in_string LPCWSTR pin,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Enter( 
            /* [string][ref][in] */ __RPC__in_string LPCWSTR pin,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Change( 
            /* [string][ref][in] */ __RPC__in_string LPCWSTR pin,
            /* [string][ref][in] */ __RPC__in_string LPCWSTR newPin,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Unblock( 
            /* [string][ref][in] */ __RPC__in_string LPCWSTR puk,
            /* [string][ref][in] */ __RPC__in_string LPCWSTR newPin,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPinManager( 
            /* [retval][ref][out] */ __RPC__deref_out_opt IMbnPinManager **pinManager) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnPinVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnPin * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnPin * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnPin * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PinType )( 
            __RPC__in IMbnPin * This,
            /* [retval][ref][out] */ __RPC__out MBN_PIN_TYPE *PinType);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PinFormat )( 
            __RPC__in IMbnPin * This,
            /* [retval][ref][out] */ __RPC__out MBN_PIN_FORMAT *PinFormat);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PinLengthMin )( 
            __RPC__in IMbnPin * This,
            /* [retval][ref][out] */ __RPC__out ULONG *PinLengthMin);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PinLengthMax )( 
            __RPC__in IMbnPin * This,
            /* [retval][ref][out] */ __RPC__out ULONG *PinLengthMax);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PinMode )( 
            __RPC__in IMbnPin * This,
            /* [retval][ref][out] */ __RPC__out MBN_PIN_MODE *PinMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Enable )( 
            __RPC__in IMbnPin * This,
            /* [string][ref][in] */ __RPC__in_string LPCWSTR pin,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Disable )( 
            __RPC__in IMbnPin * This,
            /* [string][ref][in] */ __RPC__in_string LPCWSTR pin,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Enter )( 
            __RPC__in IMbnPin * This,
            /* [string][ref][in] */ __RPC__in_string LPCWSTR pin,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Change )( 
            __RPC__in IMbnPin * This,
            /* [string][ref][in] */ __RPC__in_string LPCWSTR pin,
            /* [string][ref][in] */ __RPC__in_string LPCWSTR newPin,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Unblock )( 
            __RPC__in IMbnPin * This,
            /* [string][ref][in] */ __RPC__in_string LPCWSTR puk,
            /* [string][ref][in] */ __RPC__in_string LPCWSTR newPin,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPinManager )( 
            __RPC__in IMbnPin * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt IMbnPinManager **pinManager);
        
        END_INTERFACE
    } IMbnPinVtbl;

    interface IMbnPin
    {
        CONST_VTBL struct IMbnPinVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnPin_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnPin_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnPin_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnPin_get_PinType(This,PinType)	\
    ( (This)->lpVtbl -> get_PinType(This,PinType) ) 

#define IMbnPin_get_PinFormat(This,PinFormat)	\
    ( (This)->lpVtbl -> get_PinFormat(This,PinFormat) ) 

#define IMbnPin_get_PinLengthMin(This,PinLengthMin)	\
    ( (This)->lpVtbl -> get_PinLengthMin(This,PinLengthMin) ) 

#define IMbnPin_get_PinLengthMax(This,PinLengthMax)	\
    ( (This)->lpVtbl -> get_PinLengthMax(This,PinLengthMax) ) 

#define IMbnPin_get_PinMode(This,PinMode)	\
    ( (This)->lpVtbl -> get_PinMode(This,PinMode) ) 

#define IMbnPin_Enable(This,pin,requestID)	\
    ( (This)->lpVtbl -> Enable(This,pin,requestID) ) 

#define IMbnPin_Disable(This,pin,requestID)	\
    ( (This)->lpVtbl -> Disable(This,pin,requestID) ) 

#define IMbnPin_Enter(This,pin,requestID)	\
    ( (This)->lpVtbl -> Enter(This,pin,requestID) ) 

#define IMbnPin_Change(This,pin,newPin,requestID)	\
    ( (This)->lpVtbl -> Change(This,pin,newPin,requestID) ) 

#define IMbnPin_Unblock(This,puk,newPin,requestID)	\
    ( (This)->lpVtbl -> Unblock(This,puk,newPin,requestID) ) 

#define IMbnPin_GetPinManager(This,pinManager)	\
    ( (This)->lpVtbl -> GetPinManager(This,pinManager) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnPin_INTERFACE_DEFINED__ */


#ifndef __IMbnPinEvents_INTERFACE_DEFINED__
#define __IMbnPinEvents_INTERFACE_DEFINED__

/* interface IMbnPinEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnPinEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2008-4BBB-AAEE-338E368AF6FA")
    IMbnPinEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnEnableComplete( 
            /* [in] */ __RPC__in_opt IMbnPin *pin,
            /* [ref][in] */ __RPC__in MBN_PIN_INFO *pinInfo,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnDisableComplete( 
            /* [in] */ __RPC__in_opt IMbnPin *pin,
            /* [ref][in] */ __RPC__in MBN_PIN_INFO *pinInfo,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnEnterComplete( 
            /* [in] */ __RPC__in_opt IMbnPin *Pin,
            /* [ref][in] */ __RPC__in MBN_PIN_INFO *pinInfo,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnChangeComplete( 
            /* [in] */ __RPC__in_opt IMbnPin *Pin,
            /* [ref][in] */ __RPC__in MBN_PIN_INFO *pinInfo,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnUnblockComplete( 
            /* [in] */ __RPC__in_opt IMbnPin *Pin,
            /* [ref][in] */ __RPC__in MBN_PIN_INFO *pinInfo,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnPinEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnPinEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnPinEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnPinEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnEnableComplete )( 
            __RPC__in IMbnPinEvents * This,
            /* [in] */ __RPC__in_opt IMbnPin *pin,
            /* [ref][in] */ __RPC__in MBN_PIN_INFO *pinInfo,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnDisableComplete )( 
            __RPC__in IMbnPinEvents * This,
            /* [in] */ __RPC__in_opt IMbnPin *pin,
            /* [ref][in] */ __RPC__in MBN_PIN_INFO *pinInfo,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnEnterComplete )( 
            __RPC__in IMbnPinEvents * This,
            /* [in] */ __RPC__in_opt IMbnPin *Pin,
            /* [ref][in] */ __RPC__in MBN_PIN_INFO *pinInfo,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnChangeComplete )( 
            __RPC__in IMbnPinEvents * This,
            /* [in] */ __RPC__in_opt IMbnPin *Pin,
            /* [ref][in] */ __RPC__in MBN_PIN_INFO *pinInfo,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnUnblockComplete )( 
            __RPC__in IMbnPinEvents * This,
            /* [in] */ __RPC__in_opt IMbnPin *Pin,
            /* [ref][in] */ __RPC__in MBN_PIN_INFO *pinInfo,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        END_INTERFACE
    } IMbnPinEventsVtbl;

    interface IMbnPinEvents
    {
        CONST_VTBL struct IMbnPinEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnPinEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnPinEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnPinEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnPinEvents_OnEnableComplete(This,pin,pinInfo,requestID,status)	\
    ( (This)->lpVtbl -> OnEnableComplete(This,pin,pinInfo,requestID,status) ) 

#define IMbnPinEvents_OnDisableComplete(This,pin,pinInfo,requestID,status)	\
    ( (This)->lpVtbl -> OnDisableComplete(This,pin,pinInfo,requestID,status) ) 

#define IMbnPinEvents_OnEnterComplete(This,Pin,pinInfo,requestID,status)	\
    ( (This)->lpVtbl -> OnEnterComplete(This,Pin,pinInfo,requestID,status) ) 

#define IMbnPinEvents_OnChangeComplete(This,Pin,pinInfo,requestID,status)	\
    ( (This)->lpVtbl -> OnChangeComplete(This,Pin,pinInfo,requestID,status) ) 

#define IMbnPinEvents_OnUnblockComplete(This,Pin,pinInfo,requestID,status)	\
    ( (This)->lpVtbl -> OnUnblockComplete(This,Pin,pinInfo,requestID,status) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnPinEvents_INTERFACE_DEFINED__ */


#ifndef __IMbnRegistration_INTERFACE_DEFINED__
#define __IMbnRegistration_INTERFACE_DEFINED__

/* interface IMbnRegistration */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnRegistration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2009-4BBB-AAEE-338E368AF6FA")
    IMbnRegistration : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetRegisterState( 
            /* [retval][ref][out] */ __RPC__out MBN_REGISTER_STATE *registerState) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetRegisterMode( 
            /* [retval][ref][out] */ __RPC__out MBN_REGISTER_MODE *registerMode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetProviderID( 
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *providerID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetProviderName( 
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *providerName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetRoamingText( 
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *roamingText) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetAvailableDataClasses( 
            /* [retval][ref][out] */ __RPC__out ULONG *availableDataClasses) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCurrentDataClass( 
            /* [retval][ref][out] */ __RPC__out ULONG *currentDataClass) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetRegistrationNetworkError( 
            /* [retval][ref][out] */ __RPC__out ULONG *registrationNetworkError) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPacketAttachNetworkError( 
            /* [retval][ref][out] */ __RPC__out ULONG *packetAttachNetworkError) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetRegisterMode( 
            /* [in] */ MBN_REGISTER_MODE registerMode,
            /* [string][in] */ __RPC__in_string LPCWSTR providerID,
            /* [in] */ ULONG dataClass,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnRegistrationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnRegistration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnRegistration * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnRegistration * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetRegisterState )( 
            __RPC__in IMbnRegistration * This,
            /* [retval][ref][out] */ __RPC__out MBN_REGISTER_STATE *registerState);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetRegisterMode )( 
            __RPC__in IMbnRegistration * This,
            /* [retval][ref][out] */ __RPC__out MBN_REGISTER_MODE *registerMode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetProviderID )( 
            __RPC__in IMbnRegistration * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *providerID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetProviderName )( 
            __RPC__in IMbnRegistration * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *providerName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetRoamingText )( 
            __RPC__in IMbnRegistration * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *roamingText);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetAvailableDataClasses )( 
            __RPC__in IMbnRegistration * This,
            /* [retval][ref][out] */ __RPC__out ULONG *availableDataClasses);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetCurrentDataClass )( 
            __RPC__in IMbnRegistration * This,
            /* [retval][ref][out] */ __RPC__out ULONG *currentDataClass);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetRegistrationNetworkError )( 
            __RPC__in IMbnRegistration * This,
            /* [retval][ref][out] */ __RPC__out ULONG *registrationNetworkError);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPacketAttachNetworkError )( 
            __RPC__in IMbnRegistration * This,
            /* [retval][ref][out] */ __RPC__out ULONG *packetAttachNetworkError);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetRegisterMode )( 
            __RPC__in IMbnRegistration * This,
            /* [in] */ MBN_REGISTER_MODE registerMode,
            /* [string][in] */ __RPC__in_string LPCWSTR providerID,
            /* [in] */ ULONG dataClass,
            /* [out] */ __RPC__out ULONG *requestID);
        
        END_INTERFACE
    } IMbnRegistrationVtbl;

    interface IMbnRegistration
    {
        CONST_VTBL struct IMbnRegistrationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnRegistration_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnRegistration_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnRegistration_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnRegistration_GetRegisterState(This,registerState)	\
    ( (This)->lpVtbl -> GetRegisterState(This,registerState) ) 

#define IMbnRegistration_GetRegisterMode(This,registerMode)	\
    ( (This)->lpVtbl -> GetRegisterMode(This,registerMode) ) 

#define IMbnRegistration_GetProviderID(This,providerID)	\
    ( (This)->lpVtbl -> GetProviderID(This,providerID) ) 

#define IMbnRegistration_GetProviderName(This,providerName)	\
    ( (This)->lpVtbl -> GetProviderName(This,providerName) ) 

#define IMbnRegistration_GetRoamingText(This,roamingText)	\
    ( (This)->lpVtbl -> GetRoamingText(This,roamingText) ) 

#define IMbnRegistration_GetAvailableDataClasses(This,availableDataClasses)	\
    ( (This)->lpVtbl -> GetAvailableDataClasses(This,availableDataClasses) ) 

#define IMbnRegistration_GetCurrentDataClass(This,currentDataClass)	\
    ( (This)->lpVtbl -> GetCurrentDataClass(This,currentDataClass) ) 

#define IMbnRegistration_GetRegistrationNetworkError(This,registrationNetworkError)	\
    ( (This)->lpVtbl -> GetRegistrationNetworkError(This,registrationNetworkError) ) 

#define IMbnRegistration_GetPacketAttachNetworkError(This,packetAttachNetworkError)	\
    ( (This)->lpVtbl -> GetPacketAttachNetworkError(This,packetAttachNetworkError) ) 

#define IMbnRegistration_SetRegisterMode(This,registerMode,providerID,dataClass,requestID)	\
    ( (This)->lpVtbl -> SetRegisterMode(This,registerMode,providerID,dataClass,requestID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnRegistration_INTERFACE_DEFINED__ */


#ifndef __IMbnRegistrationEvents_INTERFACE_DEFINED__
#define __IMbnRegistrationEvents_INTERFACE_DEFINED__

/* interface IMbnRegistrationEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnRegistrationEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-200A-4BBB-AAEE-338E368AF6FA")
    IMbnRegistrationEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnRegisterModeAvailable( 
            /* [in] */ __RPC__in_opt IMbnRegistration *newInterface) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnRegisterStateChange( 
            /* [in] */ __RPC__in_opt IMbnRegistration *newInterface) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnPacketServiceStateChange( 
            /* [in] */ __RPC__in_opt IMbnRegistration *newInterface) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSetRegisterModeComplete( 
            /* [in] */ __RPC__in_opt IMbnRegistration *newInterface,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnRegistrationEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnRegistrationEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnRegistrationEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnRegistrationEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnRegisterModeAvailable )( 
            __RPC__in IMbnRegistrationEvents * This,
            /* [in] */ __RPC__in_opt IMbnRegistration *newInterface);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnRegisterStateChange )( 
            __RPC__in IMbnRegistrationEvents * This,
            /* [in] */ __RPC__in_opt IMbnRegistration *newInterface);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnPacketServiceStateChange )( 
            __RPC__in IMbnRegistrationEvents * This,
            /* [in] */ __RPC__in_opt IMbnRegistration *newInterface);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSetRegisterModeComplete )( 
            __RPC__in IMbnRegistrationEvents * This,
            /* [in] */ __RPC__in_opt IMbnRegistration *newInterface,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        END_INTERFACE
    } IMbnRegistrationEventsVtbl;

    interface IMbnRegistrationEvents
    {
        CONST_VTBL struct IMbnRegistrationEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnRegistrationEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnRegistrationEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnRegistrationEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnRegistrationEvents_OnRegisterModeAvailable(This,newInterface)	\
    ( (This)->lpVtbl -> OnRegisterModeAvailable(This,newInterface) ) 

#define IMbnRegistrationEvents_OnRegisterStateChange(This,newInterface)	\
    ( (This)->lpVtbl -> OnRegisterStateChange(This,newInterface) ) 

#define IMbnRegistrationEvents_OnPacketServiceStateChange(This,newInterface)	\
    ( (This)->lpVtbl -> OnPacketServiceStateChange(This,newInterface) ) 

#define IMbnRegistrationEvents_OnSetRegisterModeComplete(This,newInterface,requestID,status)	\
    ( (This)->lpVtbl -> OnSetRegisterModeComplete(This,newInterface,requestID,status) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnRegistrationEvents_INTERFACE_DEFINED__ */


#ifndef __IMbnConnectionContext_INTERFACE_DEFINED__
#define __IMbnConnectionContext_INTERFACE_DEFINED__

/* interface IMbnConnectionContext */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnConnectionContext;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-200B-4BBB-AAEE-338E368AF6FA")
    IMbnConnectionContext : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetProvisionedContexts( 
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *provisionedContexts) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetProvisionedContext( 
            /* [in] */ MBN_CONTEXT provisionedContexts,
            /* [in] */ __RPC__in LPCWSTR providerID,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnConnectionContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnConnectionContext * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnConnectionContext * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnConnectionContext * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetProvisionedContexts )( 
            __RPC__in IMbnConnectionContext * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *provisionedContexts);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetProvisionedContext )( 
            __RPC__in IMbnConnectionContext * This,
            /* [in] */ MBN_CONTEXT provisionedContexts,
            /* [in] */ __RPC__in LPCWSTR providerID,
            /* [out] */ __RPC__out ULONG *requestID);
        
        END_INTERFACE
    } IMbnConnectionContextVtbl;

    interface IMbnConnectionContext
    {
        CONST_VTBL struct IMbnConnectionContextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnConnectionContext_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnConnectionContext_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnConnectionContext_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnConnectionContext_GetProvisionedContexts(This,provisionedContexts)	\
    ( (This)->lpVtbl -> GetProvisionedContexts(This,provisionedContexts) ) 

#define IMbnConnectionContext_SetProvisionedContext(This,provisionedContexts,providerID,requestID)	\
    ( (This)->lpVtbl -> SetProvisionedContext(This,provisionedContexts,providerID,requestID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnConnectionContext_INTERFACE_DEFINED__ */


#ifndef __IMbnConnectionContextEvents_INTERFACE_DEFINED__
#define __IMbnConnectionContextEvents_INTERFACE_DEFINED__

/* interface IMbnConnectionContextEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnConnectionContextEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-200C-4BBB-AAEE-338E368AF6FA")
    IMbnConnectionContextEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnProvisionedContextListChange( 
            /* [in] */ __RPC__in_opt IMbnConnectionContext *newInterface) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSetProvisionedContextComplete( 
            /* [in] */ __RPC__in_opt IMbnConnectionContext *newInterface,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnConnectionContextEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnConnectionContextEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnConnectionContextEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnConnectionContextEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnProvisionedContextListChange )( 
            __RPC__in IMbnConnectionContextEvents * This,
            /* [in] */ __RPC__in_opt IMbnConnectionContext *newInterface);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSetProvisionedContextComplete )( 
            __RPC__in IMbnConnectionContextEvents * This,
            /* [in] */ __RPC__in_opt IMbnConnectionContext *newInterface,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        END_INTERFACE
    } IMbnConnectionContextEventsVtbl;

    interface IMbnConnectionContextEvents
    {
        CONST_VTBL struct IMbnConnectionContextEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnConnectionContextEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnConnectionContextEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnConnectionContextEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnConnectionContextEvents_OnProvisionedContextListChange(This,newInterface)	\
    ( (This)->lpVtbl -> OnProvisionedContextListChange(This,newInterface) ) 

#define IMbnConnectionContextEvents_OnSetProvisionedContextComplete(This,newInterface,requestID,status)	\
    ( (This)->lpVtbl -> OnSetProvisionedContextComplete(This,newInterface,requestID,status) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnConnectionContextEvents_INTERFACE_DEFINED__ */


#ifndef __IMbnConnection_INTERFACE_DEFINED__
#define __IMbnConnection_INTERFACE_DEFINED__

/* interface IMbnConnection */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnConnection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-200D-4BBB-AAEE-338E368AF6FA")
    IMbnConnection : public IUnknown
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ConnectionID( 
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *ConnectionID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_InterfaceID( 
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *InterfaceID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Connect( 
            /* [in] */ MBN_CONNECTION_MODE connectionMode,
            /* [string][in] */ __RPC__in_string LPCWSTR strProfile,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Disconnect( 
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetConnectionState( 
            /* [ref][out] */ __RPC__out MBN_ACTIVATION_STATE *ConnectionState,
            /* [ref][out] */ __RPC__deref_out_opt BSTR *ProfileName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetVoiceCallState( 
            /* [retval][ref][out] */ __RPC__out MBN_VOICE_CALL_STATE *voiceCallState) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetActivationNetworkError( 
            /* [retval][ref][out] */ __RPC__out ULONG *networkError) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnConnectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnConnection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnConnection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnConnection * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConnectionID )( 
            __RPC__in IMbnConnection * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *ConnectionID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterfaceID )( 
            __RPC__in IMbnConnection * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *InterfaceID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Connect )( 
            __RPC__in IMbnConnection * This,
            /* [in] */ MBN_CONNECTION_MODE connectionMode,
            /* [string][in] */ __RPC__in_string LPCWSTR strProfile,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Disconnect )( 
            __RPC__in IMbnConnection * This,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetConnectionState )( 
            __RPC__in IMbnConnection * This,
            /* [ref][out] */ __RPC__out MBN_ACTIVATION_STATE *ConnectionState,
            /* [ref][out] */ __RPC__deref_out_opt BSTR *ProfileName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetVoiceCallState )( 
            __RPC__in IMbnConnection * This,
            /* [retval][ref][out] */ __RPC__out MBN_VOICE_CALL_STATE *voiceCallState);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetActivationNetworkError )( 
            __RPC__in IMbnConnection * This,
            /* [retval][ref][out] */ __RPC__out ULONG *networkError);
        
        END_INTERFACE
    } IMbnConnectionVtbl;

    interface IMbnConnection
    {
        CONST_VTBL struct IMbnConnectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnConnection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnConnection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnConnection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnConnection_get_ConnectionID(This,ConnectionID)	\
    ( (This)->lpVtbl -> get_ConnectionID(This,ConnectionID) ) 

#define IMbnConnection_get_InterfaceID(This,InterfaceID)	\
    ( (This)->lpVtbl -> get_InterfaceID(This,InterfaceID) ) 

#define IMbnConnection_Connect(This,connectionMode,strProfile,requestID)	\
    ( (This)->lpVtbl -> Connect(This,connectionMode,strProfile,requestID) ) 

#define IMbnConnection_Disconnect(This,requestID)	\
    ( (This)->lpVtbl -> Disconnect(This,requestID) ) 

#define IMbnConnection_GetConnectionState(This,ConnectionState,ProfileName)	\
    ( (This)->lpVtbl -> GetConnectionState(This,ConnectionState,ProfileName) ) 

#define IMbnConnection_GetVoiceCallState(This,voiceCallState)	\
    ( (This)->lpVtbl -> GetVoiceCallState(This,voiceCallState) ) 

#define IMbnConnection_GetActivationNetworkError(This,networkError)	\
    ( (This)->lpVtbl -> GetActivationNetworkError(This,networkError) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnConnection_INTERFACE_DEFINED__ */


#ifndef __IMbnConnectionEvents_INTERFACE_DEFINED__
#define __IMbnConnectionEvents_INTERFACE_DEFINED__

/* interface IMbnConnectionEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnConnectionEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-200E-4BBB-AAEE-338E368AF6FA")
    IMbnConnectionEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnConnectComplete( 
            /* [in] */ __RPC__in_opt IMbnConnection *newConnection,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnDisconnectComplete( 
            /* [in] */ __RPC__in_opt IMbnConnection *newConnection,
            /* [in] */ ULONG reqeustID,
            /* [in] */ HRESULT status) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnConnectStateChange( 
            /* [in] */ __RPC__in_opt IMbnConnection *newConnection) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnVoiceCallStateChange( 
            /* [in] */ __RPC__in_opt IMbnConnection *newConnection) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnConnectionEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnConnectionEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnConnectionEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnConnectionEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnConnectComplete )( 
            __RPC__in IMbnConnectionEvents * This,
            /* [in] */ __RPC__in_opt IMbnConnection *newConnection,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnDisconnectComplete )( 
            __RPC__in IMbnConnectionEvents * This,
            /* [in] */ __RPC__in_opt IMbnConnection *newConnection,
            /* [in] */ ULONG reqeustID,
            /* [in] */ HRESULT status);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnConnectStateChange )( 
            __RPC__in IMbnConnectionEvents * This,
            /* [in] */ __RPC__in_opt IMbnConnection *newConnection);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnVoiceCallStateChange )( 
            __RPC__in IMbnConnectionEvents * This,
            /* [in] */ __RPC__in_opt IMbnConnection *newConnection);
        
        END_INTERFACE
    } IMbnConnectionEventsVtbl;

    interface IMbnConnectionEvents
    {
        CONST_VTBL struct IMbnConnectionEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnConnectionEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnConnectionEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnConnectionEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnConnectionEvents_OnConnectComplete(This,newConnection,requestID,status)	\
    ( (This)->lpVtbl -> OnConnectComplete(This,newConnection,requestID,status) ) 

#define IMbnConnectionEvents_OnDisconnectComplete(This,newConnection,reqeustID,status)	\
    ( (This)->lpVtbl -> OnDisconnectComplete(This,newConnection,reqeustID,status) ) 

#define IMbnConnectionEvents_OnConnectStateChange(This,newConnection)	\
    ( (This)->lpVtbl -> OnConnectStateChange(This,newConnection) ) 

#define IMbnConnectionEvents_OnVoiceCallStateChange(This,newConnection)	\
    ( (This)->lpVtbl -> OnVoiceCallStateChange(This,newConnection) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnConnectionEvents_INTERFACE_DEFINED__ */


#ifndef __IMbnConnectionProfileManager_INTERFACE_DEFINED__
#define __IMbnConnectionProfileManager_INTERFACE_DEFINED__

/* interface IMbnConnectionProfileManager */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnConnectionProfileManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-200F-4BBB-AAEE-338E368AF6FA")
    IMbnConnectionProfileManager : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetConnectionProfiles( 
            /* [in] */ __RPC__in_opt IMbnInterface *mbnInterface,
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *connectionProfiles) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetConnectionProfile( 
            /* [in] */ __RPC__in_opt IMbnInterface *mbnInterface,
            /* [string][in] */ __RPC__in_string LPCWSTR profileName,
            /* [retval][ref][out] */ __RPC__deref_out_opt IMbnConnectionProfile **connectionProfile) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateConnectionProfile( 
            /* [string][in] */ __RPC__in_string LPCWSTR xmlProfile) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnConnectionProfileManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnConnectionProfileManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnConnectionProfileManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnConnectionProfileManager * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetConnectionProfiles )( 
            __RPC__in IMbnConnectionProfileManager * This,
            /* [in] */ __RPC__in_opt IMbnInterface *mbnInterface,
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *connectionProfiles);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetConnectionProfile )( 
            __RPC__in IMbnConnectionProfileManager * This,
            /* [in] */ __RPC__in_opt IMbnInterface *mbnInterface,
            /* [string][in] */ __RPC__in_string LPCWSTR profileName,
            /* [retval][ref][out] */ __RPC__deref_out_opt IMbnConnectionProfile **connectionProfile);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CreateConnectionProfile )( 
            __RPC__in IMbnConnectionProfileManager * This,
            /* [string][in] */ __RPC__in_string LPCWSTR xmlProfile);
        
        END_INTERFACE
    } IMbnConnectionProfileManagerVtbl;

    interface IMbnConnectionProfileManager
    {
        CONST_VTBL struct IMbnConnectionProfileManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnConnectionProfileManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnConnectionProfileManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnConnectionProfileManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnConnectionProfileManager_GetConnectionProfiles(This,mbnInterface,connectionProfiles)	\
    ( (This)->lpVtbl -> GetConnectionProfiles(This,mbnInterface,connectionProfiles) ) 

#define IMbnConnectionProfileManager_GetConnectionProfile(This,mbnInterface,profileName,connectionProfile)	\
    ( (This)->lpVtbl -> GetConnectionProfile(This,mbnInterface,profileName,connectionProfile) ) 

#define IMbnConnectionProfileManager_CreateConnectionProfile(This,xmlProfile)	\
    ( (This)->lpVtbl -> CreateConnectionProfile(This,xmlProfile) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnConnectionProfileManager_INTERFACE_DEFINED__ */


#ifndef __IMbnConnectionProfile_INTERFACE_DEFINED__
#define __IMbnConnectionProfile_INTERFACE_DEFINED__

/* interface IMbnConnectionProfile */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnConnectionProfile;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2010-4BBB-AAEE-338E368AF6FA")
    IMbnConnectionProfile : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetProfileXmlData( 
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *profileData) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE UpdateProfile( 
            /* [string][in] */ __RPC__in_string LPCWSTR strProfile) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Delete( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnConnectionProfileVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnConnectionProfile * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnConnectionProfile * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnConnectionProfile * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetProfileXmlData )( 
            __RPC__in IMbnConnectionProfile * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *profileData);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *UpdateProfile )( 
            __RPC__in IMbnConnectionProfile * This,
            /* [string][in] */ __RPC__in_string LPCWSTR strProfile);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            __RPC__in IMbnConnectionProfile * This);
        
        END_INTERFACE
    } IMbnConnectionProfileVtbl;

    interface IMbnConnectionProfile
    {
        CONST_VTBL struct IMbnConnectionProfileVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnConnectionProfile_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnConnectionProfile_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnConnectionProfile_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnConnectionProfile_GetProfileXmlData(This,profileData)	\
    ( (This)->lpVtbl -> GetProfileXmlData(This,profileData) ) 

#define IMbnConnectionProfile_UpdateProfile(This,strProfile)	\
    ( (This)->lpVtbl -> UpdateProfile(This,strProfile) ) 

#define IMbnConnectionProfile_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnConnectionProfile_INTERFACE_DEFINED__ */


#ifndef __IMbnConnectionProfileEvents_INTERFACE_DEFINED__
#define __IMbnConnectionProfileEvents_INTERFACE_DEFINED__

/* interface IMbnConnectionProfileEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnConnectionProfileEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2011-4BBB-AAEE-338E368AF6FA")
    IMbnConnectionProfileEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnProfileUpdate( 
            /* [in] */ __RPC__in_opt IMbnConnectionProfile *newProfile) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnConnectionProfileEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnConnectionProfileEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnConnectionProfileEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnConnectionProfileEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnProfileUpdate )( 
            __RPC__in IMbnConnectionProfileEvents * This,
            /* [in] */ __RPC__in_opt IMbnConnectionProfile *newProfile);
        
        END_INTERFACE
    } IMbnConnectionProfileEventsVtbl;

    interface IMbnConnectionProfileEvents
    {
        CONST_VTBL struct IMbnConnectionProfileEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnConnectionProfileEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnConnectionProfileEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnConnectionProfileEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnConnectionProfileEvents_OnProfileUpdate(This,newProfile)	\
    ( (This)->lpVtbl -> OnProfileUpdate(This,newProfile) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnConnectionProfileEvents_INTERFACE_DEFINED__ */


#ifndef __IMbnSmsConfiguration_INTERFACE_DEFINED__
#define __IMbnSmsConfiguration_INTERFACE_DEFINED__

/* interface IMbnSmsConfiguration */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnSmsConfiguration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2012-4BBB-AAEE-338E368AF6FA")
    IMbnSmsConfiguration : public IUnknown
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServiceCenterAddress( 
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *scAddress) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServiceCenterAddress( 
            /* [in] */ __RPC__in LPCWSTR scAddress) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_MaxMessageIndex( 
            /* [retval][ref][out] */ __RPC__out ULONG *index) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CdmaShortMsgSize( 
            /* [retval][ref][out] */ __RPC__out ULONG *shortMsgSize) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SmsFormat( 
            /* [retval][ref][out] */ __RPC__out MBN_SMS_FORMAT *smsFormat) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SmsFormat( 
            /* [in] */ MBN_SMS_FORMAT smsFormat) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnSmsConfigurationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnSmsConfiguration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnSmsConfiguration * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnSmsConfiguration * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServiceCenterAddress )( 
            __RPC__in IMbnSmsConfiguration * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *scAddress);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServiceCenterAddress )( 
            __RPC__in IMbnSmsConfiguration * This,
            /* [in] */ __RPC__in LPCWSTR scAddress);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxMessageIndex )( 
            __RPC__in IMbnSmsConfiguration * This,
            /* [retval][ref][out] */ __RPC__out ULONG *index);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CdmaShortMsgSize )( 
            __RPC__in IMbnSmsConfiguration * This,
            /* [retval][ref][out] */ __RPC__out ULONG *shortMsgSize);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SmsFormat )( 
            __RPC__in IMbnSmsConfiguration * This,
            /* [retval][ref][out] */ __RPC__out MBN_SMS_FORMAT *smsFormat);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SmsFormat )( 
            __RPC__in IMbnSmsConfiguration * This,
            /* [in] */ MBN_SMS_FORMAT smsFormat);
        
        END_INTERFACE
    } IMbnSmsConfigurationVtbl;

    interface IMbnSmsConfiguration
    {
        CONST_VTBL struct IMbnSmsConfigurationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnSmsConfiguration_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnSmsConfiguration_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnSmsConfiguration_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnSmsConfiguration_get_ServiceCenterAddress(This,scAddress)	\
    ( (This)->lpVtbl -> get_ServiceCenterAddress(This,scAddress) ) 

#define IMbnSmsConfiguration_put_ServiceCenterAddress(This,scAddress)	\
    ( (This)->lpVtbl -> put_ServiceCenterAddress(This,scAddress) ) 

#define IMbnSmsConfiguration_get_MaxMessageIndex(This,index)	\
    ( (This)->lpVtbl -> get_MaxMessageIndex(This,index) ) 

#define IMbnSmsConfiguration_get_CdmaShortMsgSize(This,shortMsgSize)	\
    ( (This)->lpVtbl -> get_CdmaShortMsgSize(This,shortMsgSize) ) 

#define IMbnSmsConfiguration_get_SmsFormat(This,smsFormat)	\
    ( (This)->lpVtbl -> get_SmsFormat(This,smsFormat) ) 

#define IMbnSmsConfiguration_put_SmsFormat(This,smsFormat)	\
    ( (This)->lpVtbl -> put_SmsFormat(This,smsFormat) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnSmsConfiguration_INTERFACE_DEFINED__ */


#ifndef __IMbnSmsReadMsgPdu_INTERFACE_DEFINED__
#define __IMbnSmsReadMsgPdu_INTERFACE_DEFINED__

/* interface IMbnSmsReadMsgPdu */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnSmsReadMsgPdu;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2013-4BBB-AAEE-338E368AF6FA")
    IMbnSmsReadMsgPdu : public IUnknown
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [retval][ref][out] */ __RPC__out ULONG *Index) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][ref][out] */ __RPC__out MBN_MSG_STATUS *Status) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PduData( 
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *PduData) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Message( 
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *Message) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnSmsReadMsgPduVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnSmsReadMsgPdu * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnSmsReadMsgPdu * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnSmsReadMsgPdu * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            __RPC__in IMbnSmsReadMsgPdu * This,
            /* [retval][ref][out] */ __RPC__out ULONG *Index);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            __RPC__in IMbnSmsReadMsgPdu * This,
            /* [retval][ref][out] */ __RPC__out MBN_MSG_STATUS *Status);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PduData )( 
            __RPC__in IMbnSmsReadMsgPdu * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *PduData);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Message )( 
            __RPC__in IMbnSmsReadMsgPdu * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *Message);
        
        END_INTERFACE
    } IMbnSmsReadMsgPduVtbl;

    interface IMbnSmsReadMsgPdu
    {
        CONST_VTBL struct IMbnSmsReadMsgPduVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnSmsReadMsgPdu_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnSmsReadMsgPdu_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnSmsReadMsgPdu_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnSmsReadMsgPdu_get_Index(This,Index)	\
    ( (This)->lpVtbl -> get_Index(This,Index) ) 

#define IMbnSmsReadMsgPdu_get_Status(This,Status)	\
    ( (This)->lpVtbl -> get_Status(This,Status) ) 

#define IMbnSmsReadMsgPdu_get_PduData(This,PduData)	\
    ( (This)->lpVtbl -> get_PduData(This,PduData) ) 

#define IMbnSmsReadMsgPdu_get_Message(This,Message)	\
    ( (This)->lpVtbl -> get_Message(This,Message) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnSmsReadMsgPdu_INTERFACE_DEFINED__ */


#ifndef __IMbnSmsReadMsgTextCdma_INTERFACE_DEFINED__
#define __IMbnSmsReadMsgTextCdma_INTERFACE_DEFINED__

/* interface IMbnSmsReadMsgTextCdma */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnSmsReadMsgTextCdma;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2014-4BBB-AAEE-338E368AF6FA")
    IMbnSmsReadMsgTextCdma : public IUnknown
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [retval][ref][out] */ __RPC__out ULONG *Index) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][ref][out] */ __RPC__out MBN_MSG_STATUS *Status) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Address( 
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *Address) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Timestamp( 
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *Timestamp) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EncodingID( 
            /* [retval][ref][out] */ __RPC__out MBN_SMS_CDMA_ENCODING *EncodingID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LanguageID( 
            /* [retval][ref][out] */ __RPC__out MBN_SMS_CDMA_LANG *LanguageID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SizeInCharacters( 
            /* [retval][ref][out] */ __RPC__out ULONG *SizeInCharacters) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Message( 
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *Message) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnSmsReadMsgTextCdmaVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnSmsReadMsgTextCdma * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnSmsReadMsgTextCdma * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnSmsReadMsgTextCdma * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            __RPC__in IMbnSmsReadMsgTextCdma * This,
            /* [retval][ref][out] */ __RPC__out ULONG *Index);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            __RPC__in IMbnSmsReadMsgTextCdma * This,
            /* [retval][ref][out] */ __RPC__out MBN_MSG_STATUS *Status);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Address )( 
            __RPC__in IMbnSmsReadMsgTextCdma * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *Address);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Timestamp )( 
            __RPC__in IMbnSmsReadMsgTextCdma * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt BSTR *Timestamp);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EncodingID )( 
            __RPC__in IMbnSmsReadMsgTextCdma * This,
            /* [retval][ref][out] */ __RPC__out MBN_SMS_CDMA_ENCODING *EncodingID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LanguageID )( 
            __RPC__in IMbnSmsReadMsgTextCdma * This,
            /* [retval][ref][out] */ __RPC__out MBN_SMS_CDMA_LANG *LanguageID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SizeInCharacters )( 
            __RPC__in IMbnSmsReadMsgTextCdma * This,
            /* [retval][ref][out] */ __RPC__out ULONG *SizeInCharacters);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Message )( 
            __RPC__in IMbnSmsReadMsgTextCdma * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *Message);
        
        END_INTERFACE
    } IMbnSmsReadMsgTextCdmaVtbl;

    interface IMbnSmsReadMsgTextCdma
    {
        CONST_VTBL struct IMbnSmsReadMsgTextCdmaVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnSmsReadMsgTextCdma_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnSmsReadMsgTextCdma_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnSmsReadMsgTextCdma_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnSmsReadMsgTextCdma_get_Index(This,Index)	\
    ( (This)->lpVtbl -> get_Index(This,Index) ) 

#define IMbnSmsReadMsgTextCdma_get_Status(This,Status)	\
    ( (This)->lpVtbl -> get_Status(This,Status) ) 

#define IMbnSmsReadMsgTextCdma_get_Address(This,Address)	\
    ( (This)->lpVtbl -> get_Address(This,Address) ) 

#define IMbnSmsReadMsgTextCdma_get_Timestamp(This,Timestamp)	\
    ( (This)->lpVtbl -> get_Timestamp(This,Timestamp) ) 

#define IMbnSmsReadMsgTextCdma_get_EncodingID(This,EncodingID)	\
    ( (This)->lpVtbl -> get_EncodingID(This,EncodingID) ) 

#define IMbnSmsReadMsgTextCdma_get_LanguageID(This,LanguageID)	\
    ( (This)->lpVtbl -> get_LanguageID(This,LanguageID) ) 

#define IMbnSmsReadMsgTextCdma_get_SizeInCharacters(This,SizeInCharacters)	\
    ( (This)->lpVtbl -> get_SizeInCharacters(This,SizeInCharacters) ) 

#define IMbnSmsReadMsgTextCdma_get_Message(This,Message)	\
    ( (This)->lpVtbl -> get_Message(This,Message) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnSmsReadMsgTextCdma_INTERFACE_DEFINED__ */


#ifndef __IMbnSms_INTERFACE_DEFINED__
#define __IMbnSms_INTERFACE_DEFINED__

/* interface IMbnSms */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnSms;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2015-4BBB-AAEE-338E368AF6FA")
    IMbnSms : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSmsConfiguration( 
            /* [retval][ref][out] */ __RPC__deref_out_opt IMbnSmsConfiguration **smsConfiguration) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetSmsConfiguration( 
            /* [in] */ __RPC__in_opt IMbnSmsConfiguration *smsConfiguration,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SmsSendPdu( 
            /* [in] */ __RPC__in LPCWSTR pduData,
            /* [in] */ BYTE size,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SmsSendCdma( 
            /* [in] */ __RPC__in LPCWSTR address,
            /* [in] */ MBN_SMS_CDMA_ENCODING encoding,
            /* [in] */ MBN_SMS_CDMA_LANG language,
            /* [in] */ ULONG sizeInCharacters,
            /* [in] */ __RPC__in SAFEARRAY * message,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SmsSendCdmaPdu( 
            /* [in] */ __RPC__in SAFEARRAY * message,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SmsRead( 
            /* [ref][in] */ __RPC__in MBN_SMS_FILTER *smsFilter,
            /* [in] */ MBN_SMS_FORMAT smsFormat,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SmsDelete( 
            /* [ref][in] */ __RPC__in MBN_SMS_FILTER *smsFilter,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetSmsStatus( 
            /* [ref][out] */ __RPC__out MBN_SMS_STATUS_INFO *smsStatusInfo) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnSmsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnSms * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnSms * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnSms * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSmsConfiguration )( 
            __RPC__in IMbnSms * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt IMbnSmsConfiguration **smsConfiguration);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetSmsConfiguration )( 
            __RPC__in IMbnSms * This,
            /* [in] */ __RPC__in_opt IMbnSmsConfiguration *smsConfiguration,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SmsSendPdu )( 
            __RPC__in IMbnSms * This,
            /* [in] */ __RPC__in LPCWSTR pduData,
            /* [in] */ BYTE size,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SmsSendCdma )( 
            __RPC__in IMbnSms * This,
            /* [in] */ __RPC__in LPCWSTR address,
            /* [in] */ MBN_SMS_CDMA_ENCODING encoding,
            /* [in] */ MBN_SMS_CDMA_LANG language,
            /* [in] */ ULONG sizeInCharacters,
            /* [in] */ __RPC__in SAFEARRAY * message,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SmsSendCdmaPdu )( 
            __RPC__in IMbnSms * This,
            /* [in] */ __RPC__in SAFEARRAY * message,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SmsRead )( 
            __RPC__in IMbnSms * This,
            /* [ref][in] */ __RPC__in MBN_SMS_FILTER *smsFilter,
            /* [in] */ MBN_SMS_FORMAT smsFormat,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SmsDelete )( 
            __RPC__in IMbnSms * This,
            /* [ref][in] */ __RPC__in MBN_SMS_FILTER *smsFilter,
            /* [out] */ __RPC__out ULONG *requestID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetSmsStatus )( 
            __RPC__in IMbnSms * This,
            /* [ref][out] */ __RPC__out MBN_SMS_STATUS_INFO *smsStatusInfo);
        
        END_INTERFACE
    } IMbnSmsVtbl;

    interface IMbnSms
    {
        CONST_VTBL struct IMbnSmsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnSms_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnSms_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnSms_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnSms_GetSmsConfiguration(This,smsConfiguration)	\
    ( (This)->lpVtbl -> GetSmsConfiguration(This,smsConfiguration) ) 

#define IMbnSms_SetSmsConfiguration(This,smsConfiguration,requestID)	\
    ( (This)->lpVtbl -> SetSmsConfiguration(This,smsConfiguration,requestID) ) 

#define IMbnSms_SmsSendPdu(This,pduData,size,requestID)	\
    ( (This)->lpVtbl -> SmsSendPdu(This,pduData,size,requestID) ) 

#define IMbnSms_SmsSendCdma(This,address,encoding,language,sizeInCharacters,message,requestID)	\
    ( (This)->lpVtbl -> SmsSendCdma(This,address,encoding,language,sizeInCharacters,message,requestID) ) 

#define IMbnSms_SmsSendCdmaPdu(This,message,requestID)	\
    ( (This)->lpVtbl -> SmsSendCdmaPdu(This,message,requestID) ) 

#define IMbnSms_SmsRead(This,smsFilter,smsFormat,requestID)	\
    ( (This)->lpVtbl -> SmsRead(This,smsFilter,smsFormat,requestID) ) 

#define IMbnSms_SmsDelete(This,smsFilter,requestID)	\
    ( (This)->lpVtbl -> SmsDelete(This,smsFilter,requestID) ) 

#define IMbnSms_GetSmsStatus(This,smsStatusInfo)	\
    ( (This)->lpVtbl -> GetSmsStatus(This,smsStatusInfo) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnSms_INTERFACE_DEFINED__ */


#ifndef __IMbnSmsEvents_INTERFACE_DEFINED__
#define __IMbnSmsEvents_INTERFACE_DEFINED__

/* interface IMbnSmsEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnSmsEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2016-4BBB-AAEE-338E368AF6FA")
    IMbnSmsEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSmsConfigurationChange( 
            /* [in] */ __RPC__in_opt IMbnSms *sms) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSetSmsConfigurationComplete( 
            /* [in] */ __RPC__in_opt IMbnSms *sms,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSmsSendComplete( 
            /* [in] */ __RPC__in_opt IMbnSms *sms,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSmsReadComplete( 
            /* [in] */ __RPC__in_opt IMbnSms *sms,
            /* [in] */ MBN_SMS_FORMAT smsFormat,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * readMsgs,
            /* [in] */ VARIANT_BOOL moreMsgs,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSmsNewClass0Message( 
            /* [in] */ __RPC__in_opt IMbnSms *sms,
            /* [in] */ MBN_SMS_FORMAT smsFormat,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * readMsgs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSmsDeleteComplete( 
            /* [in] */ __RPC__in_opt IMbnSms *sms,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSmsStatusChange( 
            /* [in] */ __RPC__in_opt IMbnSms *sms) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnSmsEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnSmsEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnSmsEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnSmsEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSmsConfigurationChange )( 
            __RPC__in IMbnSmsEvents * This,
            /* [in] */ __RPC__in_opt IMbnSms *sms);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSetSmsConfigurationComplete )( 
            __RPC__in IMbnSmsEvents * This,
            /* [in] */ __RPC__in_opt IMbnSms *sms,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSmsSendComplete )( 
            __RPC__in IMbnSmsEvents * This,
            /* [in] */ __RPC__in_opt IMbnSms *sms,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSmsReadComplete )( 
            __RPC__in IMbnSmsEvents * This,
            /* [in] */ __RPC__in_opt IMbnSms *sms,
            /* [in] */ MBN_SMS_FORMAT smsFormat,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * readMsgs,
            /* [in] */ VARIANT_BOOL moreMsgs,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSmsNewClass0Message )( 
            __RPC__in IMbnSmsEvents * This,
            /* [in] */ __RPC__in_opt IMbnSms *sms,
            /* [in] */ MBN_SMS_FORMAT smsFormat,
            /* [in] */ __RPC__deref_in_opt SAFEARRAY * readMsgs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSmsDeleteComplete )( 
            __RPC__in IMbnSmsEvents * This,
            /* [in] */ __RPC__in_opt IMbnSms *sms,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSmsStatusChange )( 
            __RPC__in IMbnSmsEvents * This,
            /* [in] */ __RPC__in_opt IMbnSms *sms);
        
        END_INTERFACE
    } IMbnSmsEventsVtbl;

    interface IMbnSmsEvents
    {
        CONST_VTBL struct IMbnSmsEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnSmsEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnSmsEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnSmsEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnSmsEvents_OnSmsConfigurationChange(This,sms)	\
    ( (This)->lpVtbl -> OnSmsConfigurationChange(This,sms) ) 

#define IMbnSmsEvents_OnSetSmsConfigurationComplete(This,sms,requestID,status)	\
    ( (This)->lpVtbl -> OnSetSmsConfigurationComplete(This,sms,requestID,status) ) 

#define IMbnSmsEvents_OnSmsSendComplete(This,sms,requestID,status)	\
    ( (This)->lpVtbl -> OnSmsSendComplete(This,sms,requestID,status) ) 

#define IMbnSmsEvents_OnSmsReadComplete(This,sms,smsFormat,readMsgs,moreMsgs,requestID,status)	\
    ( (This)->lpVtbl -> OnSmsReadComplete(This,sms,smsFormat,readMsgs,moreMsgs,requestID,status) ) 

#define IMbnSmsEvents_OnSmsNewClass0Message(This,sms,smsFormat,readMsgs)	\
    ( (This)->lpVtbl -> OnSmsNewClass0Message(This,sms,smsFormat,readMsgs) ) 

#define IMbnSmsEvents_OnSmsDeleteComplete(This,sms,requestID,status)	\
    ( (This)->lpVtbl -> OnSmsDeleteComplete(This,sms,requestID,status) ) 

#define IMbnSmsEvents_OnSmsStatusChange(This,sms)	\
    ( (This)->lpVtbl -> OnSmsStatusChange(This,sms) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnSmsEvents_INTERFACE_DEFINED__ */


#ifndef __IMbnServiceActivation_INTERFACE_DEFINED__
#define __IMbnServiceActivation_INTERFACE_DEFINED__

/* interface IMbnServiceActivation */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnServiceActivation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2017-4BBB-AAEE-338E368AF6FA")
    IMbnServiceActivation : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Activate( 
            /* [in] */ __RPC__in SAFEARRAY * vendorSpecificData,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnServiceActivationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnServiceActivation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnServiceActivation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnServiceActivation * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            __RPC__in IMbnServiceActivation * This,
            /* [in] */ __RPC__in SAFEARRAY * vendorSpecificData,
            /* [out] */ __RPC__out ULONG *requestID);
        
        END_INTERFACE
    } IMbnServiceActivationVtbl;

    interface IMbnServiceActivation
    {
        CONST_VTBL struct IMbnServiceActivationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnServiceActivation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnServiceActivation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnServiceActivation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnServiceActivation_Activate(This,vendorSpecificData,requestID)	\
    ( (This)->lpVtbl -> Activate(This,vendorSpecificData,requestID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnServiceActivation_INTERFACE_DEFINED__ */


#ifndef __IMbnServiceActivationEvents_INTERFACE_DEFINED__
#define __IMbnServiceActivationEvents_INTERFACE_DEFINED__

/* interface IMbnServiceActivationEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnServiceActivationEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2018-4BBB-AAEE-338E368AF6FA")
    IMbnServiceActivationEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnActivationComplete( 
            /* [in] */ __RPC__in_opt IMbnServiceActivation *serviceActivation,
            /* [in] */ __RPC__in SAFEARRAY * vendorSpecificData,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status,
            /* [in] */ ULONG networkError) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnServiceActivationEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnServiceActivationEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnServiceActivationEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnServiceActivationEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnActivationComplete )( 
            __RPC__in IMbnServiceActivationEvents * This,
            /* [in] */ __RPC__in_opt IMbnServiceActivation *serviceActivation,
            /* [in] */ __RPC__in SAFEARRAY * vendorSpecificData,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status,
            /* [in] */ ULONG networkError);
        
        END_INTERFACE
    } IMbnServiceActivationEventsVtbl;

    interface IMbnServiceActivationEvents
    {
        CONST_VTBL struct IMbnServiceActivationEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnServiceActivationEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnServiceActivationEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnServiceActivationEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnServiceActivationEvents_OnActivationComplete(This,serviceActivation,vendorSpecificData,requestID,status,networkError)	\
    ( (This)->lpVtbl -> OnActivationComplete(This,serviceActivation,vendorSpecificData,requestID,status,networkError) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnServiceActivationEvents_INTERFACE_DEFINED__ */


#ifndef __IMbnVendorSpecificOperation_INTERFACE_DEFINED__
#define __IMbnVendorSpecificOperation_INTERFACE_DEFINED__

/* interface IMbnVendorSpecificOperation */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnVendorSpecificOperation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-2019-4BBB-AAEE-338E368AF6FA")
    IMbnVendorSpecificOperation : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetVendorSpecific( 
            /* [ref][in] */ __RPC__in SAFEARRAY * vendorSpecificData,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnVendorSpecificOperationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnVendorSpecificOperation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnVendorSpecificOperation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnVendorSpecificOperation * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetVendorSpecific )( 
            __RPC__in IMbnVendorSpecificOperation * This,
            /* [ref][in] */ __RPC__in SAFEARRAY * vendorSpecificData,
            /* [out] */ __RPC__out ULONG *requestID);
        
        END_INTERFACE
    } IMbnVendorSpecificOperationVtbl;

    interface IMbnVendorSpecificOperation
    {
        CONST_VTBL struct IMbnVendorSpecificOperationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnVendorSpecificOperation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnVendorSpecificOperation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnVendorSpecificOperation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnVendorSpecificOperation_SetVendorSpecific(This,vendorSpecificData,requestID)	\
    ( (This)->lpVtbl -> SetVendorSpecific(This,vendorSpecificData,requestID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnVendorSpecificOperation_INTERFACE_DEFINED__ */


#ifndef __IMbnVendorSpecificEvents_INTERFACE_DEFINED__
#define __IMbnVendorSpecificEvents_INTERFACE_DEFINED__

/* interface IMbnVendorSpecificEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnVendorSpecificEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-201A-4BBB-AAEE-338E368AF6FA")
    IMbnVendorSpecificEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnEventNotification( 
            /* [in] */ __RPC__in_opt IMbnVendorSpecificOperation *vendorOperation,
            /* [in] */ __RPC__in SAFEARRAY * vendorSpecificData) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSetVendorSpecificComplete( 
            /* [in] */ __RPC__in_opt IMbnVendorSpecificOperation *vendorOperation,
            /* [in] */ __RPC__in SAFEARRAY * vendorSpecificData,
            /* [in] */ ULONG requestID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnVendorSpecificEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnVendorSpecificEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnVendorSpecificEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnVendorSpecificEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnEventNotification )( 
            __RPC__in IMbnVendorSpecificEvents * This,
            /* [in] */ __RPC__in_opt IMbnVendorSpecificOperation *vendorOperation,
            /* [in] */ __RPC__in SAFEARRAY * vendorSpecificData);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSetVendorSpecificComplete )( 
            __RPC__in IMbnVendorSpecificEvents * This,
            /* [in] */ __RPC__in_opt IMbnVendorSpecificOperation *vendorOperation,
            /* [in] */ __RPC__in SAFEARRAY * vendorSpecificData,
            /* [in] */ ULONG requestID);
        
        END_INTERFACE
    } IMbnVendorSpecificEventsVtbl;

    interface IMbnVendorSpecificEvents
    {
        CONST_VTBL struct IMbnVendorSpecificEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnVendorSpecificEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnVendorSpecificEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnVendorSpecificEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnVendorSpecificEvents_OnEventNotification(This,vendorOperation,vendorSpecificData)	\
    ( (This)->lpVtbl -> OnEventNotification(This,vendorOperation,vendorSpecificData) ) 

#define IMbnVendorSpecificEvents_OnSetVendorSpecificComplete(This,vendorOperation,vendorSpecificData,requestID)	\
    ( (This)->lpVtbl -> OnSetVendorSpecificComplete(This,vendorOperation,vendorSpecificData,requestID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnVendorSpecificEvents_INTERFACE_DEFINED__ */


#ifndef __IMbnInterfaceManager_INTERFACE_DEFINED__
#define __IMbnInterfaceManager_INTERFACE_DEFINED__

/* interface IMbnInterfaceManager */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnInterfaceManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-201B-4BBB-AAEE-338E368AF6FA")
    IMbnInterfaceManager : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetInterface( 
            /* [in] */ __RPC__in LPCWSTR interfaceID,
            /* [retval][ref][out] */ __RPC__deref_out_opt IMbnInterface **mbnInterface) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetInterfaces( 
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *mbnInterfaces) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnInterfaceManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnInterfaceManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnInterfaceManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnInterfaceManager * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetInterface )( 
            __RPC__in IMbnInterfaceManager * This,
            /* [in] */ __RPC__in LPCWSTR interfaceID,
            /* [retval][ref][out] */ __RPC__deref_out_opt IMbnInterface **mbnInterface);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetInterfaces )( 
            __RPC__in IMbnInterfaceManager * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *mbnInterfaces);
        
        END_INTERFACE
    } IMbnInterfaceManagerVtbl;

    interface IMbnInterfaceManager
    {
        CONST_VTBL struct IMbnInterfaceManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnInterfaceManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnInterfaceManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnInterfaceManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnInterfaceManager_GetInterface(This,interfaceID,mbnInterface)	\
    ( (This)->lpVtbl -> GetInterface(This,interfaceID,mbnInterface) ) 

#define IMbnInterfaceManager_GetInterfaces(This,mbnInterfaces)	\
    ( (This)->lpVtbl -> GetInterfaces(This,mbnInterfaces) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnInterfaceManager_INTERFACE_DEFINED__ */


#ifndef __IMbnInterfaceManagerEvents_INTERFACE_DEFINED__
#define __IMbnInterfaceManagerEvents_INTERFACE_DEFINED__

/* interface IMbnInterfaceManagerEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnInterfaceManagerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-201C-4BBB-AAEE-338E368AF6FA")
    IMbnInterfaceManagerEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnInterfaceArrival( 
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnInterfaceRemoval( 
            /* [in] */ __RPC__in_opt IMbnInterface *oldInterface) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnInterfaceManagerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnInterfaceManagerEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnInterfaceManagerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnInterfaceManagerEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnInterfaceArrival )( 
            __RPC__in IMbnInterfaceManagerEvents * This,
            /* [in] */ __RPC__in_opt IMbnInterface *newInterface);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnInterfaceRemoval )( 
            __RPC__in IMbnInterfaceManagerEvents * This,
            /* [in] */ __RPC__in_opt IMbnInterface *oldInterface);
        
        END_INTERFACE
    } IMbnInterfaceManagerEventsVtbl;

    interface IMbnInterfaceManagerEvents
    {
        CONST_VTBL struct IMbnInterfaceManagerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnInterfaceManagerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnInterfaceManagerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnInterfaceManagerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnInterfaceManagerEvents_OnInterfaceArrival(This,newInterface)	\
    ( (This)->lpVtbl -> OnInterfaceArrival(This,newInterface) ) 

#define IMbnInterfaceManagerEvents_OnInterfaceRemoval(This,oldInterface)	\
    ( (This)->lpVtbl -> OnInterfaceRemoval(This,oldInterface) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnInterfaceManagerEvents_INTERFACE_DEFINED__ */


#ifndef __IMbnConnectionManager_INTERFACE_DEFINED__
#define __IMbnConnectionManager_INTERFACE_DEFINED__

/* interface IMbnConnectionManager */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnConnectionManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-201D-4BBB-AAEE-338E368AF6FA")
    IMbnConnectionManager : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetConnection( 
            /* [in] */ __RPC__in LPCWSTR connectionID,
            /* [retval][ref][out] */ __RPC__deref_out_opt IMbnConnection **mbnConnection) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetConnections( 
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *mbnConnections) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnConnectionManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnConnectionManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnConnectionManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnConnectionManager * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetConnection )( 
            __RPC__in IMbnConnectionManager * This,
            /* [in] */ __RPC__in LPCWSTR connectionID,
            /* [retval][ref][out] */ __RPC__deref_out_opt IMbnConnection **mbnConnection);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetConnections )( 
            __RPC__in IMbnConnectionManager * This,
            /* [retval][ref][out] */ __RPC__deref_out_opt SAFEARRAY * *mbnConnections);
        
        END_INTERFACE
    } IMbnConnectionManagerVtbl;

    interface IMbnConnectionManager
    {
        CONST_VTBL struct IMbnConnectionManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnConnectionManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnConnectionManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnConnectionManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnConnectionManager_GetConnection(This,connectionID,mbnConnection)	\
    ( (This)->lpVtbl -> GetConnection(This,connectionID,mbnConnection) ) 

#define IMbnConnectionManager_GetConnections(This,mbnConnections)	\
    ( (This)->lpVtbl -> GetConnections(This,mbnConnections) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnConnectionManager_INTERFACE_DEFINED__ */


#ifndef __IMbnConnectionManagerEvents_INTERFACE_DEFINED__
#define __IMbnConnectionManagerEvents_INTERFACE_DEFINED__

/* interface IMbnConnectionManagerEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnConnectionManagerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-201E-4BBB-AAEE-338E368AF6FA")
    IMbnConnectionManagerEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnConnectionArrival( 
            /* [in] */ __RPC__in_opt IMbnConnection *newConnection) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnConnectionRemoval( 
            /* [in] */ __RPC__in_opt IMbnConnection *oldConnection) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnConnectionManagerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnConnectionManagerEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnConnectionManagerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnConnectionManagerEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnConnectionArrival )( 
            __RPC__in IMbnConnectionManagerEvents * This,
            /* [in] */ __RPC__in_opt IMbnConnection *newConnection);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnConnectionRemoval )( 
            __RPC__in IMbnConnectionManagerEvents * This,
            /* [in] */ __RPC__in_opt IMbnConnection *oldConnection);
        
        END_INTERFACE
    } IMbnConnectionManagerEventsVtbl;

    interface IMbnConnectionManagerEvents
    {
        CONST_VTBL struct IMbnConnectionManagerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnConnectionManagerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnConnectionManagerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnConnectionManagerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnConnectionManagerEvents_OnConnectionArrival(This,newConnection)	\
    ( (This)->lpVtbl -> OnConnectionArrival(This,newConnection) ) 

#define IMbnConnectionManagerEvents_OnConnectionRemoval(This,oldConnection)	\
    ( (This)->lpVtbl -> OnConnectionRemoval(This,oldConnection) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnConnectionManagerEvents_INTERFACE_DEFINED__ */


#ifndef __IMbnConnectionProfileManagerEvents_INTERFACE_DEFINED__
#define __IMbnConnectionProfileManagerEvents_INTERFACE_DEFINED__

/* interface IMbnConnectionProfileManagerEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnConnectionProfileManagerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCBBBAB6-201F-4BBB-AAEE-338E368AF6FA")
    IMbnConnectionProfileManagerEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnConnectionProfileArrival( 
            /* [in] */ __RPC__in_opt IMbnConnectionProfile *newConnectionProfile) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnConnectionProfileRemoval( 
            /* [in] */ __RPC__in_opt IMbnConnectionProfile *oldConnectionProfile) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnConnectionProfileManagerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnConnectionProfileManagerEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnConnectionProfileManagerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnConnectionProfileManagerEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnConnectionProfileArrival )( 
            __RPC__in IMbnConnectionProfileManagerEvents * This,
            /* [in] */ __RPC__in_opt IMbnConnectionProfile *newConnectionProfile);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnConnectionProfileRemoval )( 
            __RPC__in IMbnConnectionProfileManagerEvents * This,
            /* [in] */ __RPC__in_opt IMbnConnectionProfile *oldConnectionProfile);
        
        END_INTERFACE
    } IMbnConnectionProfileManagerEventsVtbl;

    interface IMbnConnectionProfileManagerEvents
    {
        CONST_VTBL struct IMbnConnectionProfileManagerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnConnectionProfileManagerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnConnectionProfileManagerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnConnectionProfileManagerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnConnectionProfileManagerEvents_OnConnectionProfileArrival(This,newConnectionProfile)	\
    ( (This)->lpVtbl -> OnConnectionProfileArrival(This,newConnectionProfile) ) 

#define IMbnConnectionProfileManagerEvents_OnConnectionProfileRemoval(This,oldConnectionProfile)	\
    ( (This)->lpVtbl -> OnConnectionProfileRemoval(This,oldConnectionProfile) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnConnectionProfileManagerEvents_INTERFACE_DEFINED__ */


#ifndef __IMbnRadio_INTERFACE_DEFINED__
#define __IMbnRadio_INTERFACE_DEFINED__

/* interface IMbnRadio */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnRadio;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCCCCAB6-201F-4BBB-AAEE-338E368AF6FA")
    IMbnRadio : public IUnknown
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SoftwareRadioState( 
            /* [retval][ref][out] */ __RPC__out MBN_RADIO *SoftwareRadioState) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HardwareRadioState( 
            /* [retval][ref][out] */ __RPC__out MBN_RADIO *HardwareRadioState) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetSoftwareRadioState( 
            /* [in] */ MBN_RADIO radioState,
            /* [out] */ __RPC__out ULONG *requestID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnRadioVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnRadio * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnRadio * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnRadio * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SoftwareRadioState )( 
            __RPC__in IMbnRadio * This,
            /* [retval][ref][out] */ __RPC__out MBN_RADIO *SoftwareRadioState);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HardwareRadioState )( 
            __RPC__in IMbnRadio * This,
            /* [retval][ref][out] */ __RPC__out MBN_RADIO *HardwareRadioState);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetSoftwareRadioState )( 
            __RPC__in IMbnRadio * This,
            /* [in] */ MBN_RADIO radioState,
            /* [out] */ __RPC__out ULONG *requestID);
        
        END_INTERFACE
    } IMbnRadioVtbl;

    interface IMbnRadio
    {
        CONST_VTBL struct IMbnRadioVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnRadio_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnRadio_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnRadio_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnRadio_get_SoftwareRadioState(This,SoftwareRadioState)	\
    ( (This)->lpVtbl -> get_SoftwareRadioState(This,SoftwareRadioState) ) 

#define IMbnRadio_get_HardwareRadioState(This,HardwareRadioState)	\
    ( (This)->lpVtbl -> get_HardwareRadioState(This,HardwareRadioState) ) 

#define IMbnRadio_SetSoftwareRadioState(This,radioState,requestID)	\
    ( (This)->lpVtbl -> SetSoftwareRadioState(This,radioState,requestID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnRadio_INTERFACE_DEFINED__ */


#ifndef __IMbnRadioEvents_INTERFACE_DEFINED__
#define __IMbnRadioEvents_INTERFACE_DEFINED__

/* interface IMbnRadioEvents */
/* [helpstring][uuid][oleautomation][nonextensible][object] */ 


EXTERN_C const IID IID_IMbnRadioEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCDDDAB6-201F-4BBB-AAEE-338E368AF6FA")
    IMbnRadioEvents : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnRadioStateChange( 
            /* [in] */ __RPC__in_opt IMbnRadio *newInterface) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSetSoftwareRadioStateComplete( 
            /* [in] */ __RPC__in_opt IMbnRadio *newInterface,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMbnRadioEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMbnRadioEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMbnRadioEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMbnRadioEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnRadioStateChange )( 
            __RPC__in IMbnRadioEvents * This,
            /* [in] */ __RPC__in_opt IMbnRadio *newInterface);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSetSoftwareRadioStateComplete )( 
            __RPC__in IMbnRadioEvents * This,
            /* [in] */ __RPC__in_opt IMbnRadio *newInterface,
            /* [in] */ ULONG requestID,
            /* [in] */ HRESULT status);
        
        END_INTERFACE
    } IMbnRadioEventsVtbl;

    interface IMbnRadioEvents
    {
        CONST_VTBL struct IMbnRadioEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMbnRadioEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMbnRadioEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMbnRadioEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMbnRadioEvents_OnRadioStateChange(This,newInterface)	\
    ( (This)->lpVtbl -> OnRadioStateChange(This,newInterface) ) 

#define IMbnRadioEvents_OnSetSoftwareRadioStateComplete(This,newInterface,requestID,status)	\
    ( (This)->lpVtbl -> OnSetSoftwareRadioStateComplete(This,newInterface,requestID,status) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMbnRadioEvents_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_MbnConnectionProfileManager;

#ifdef __cplusplus

class DECLSPEC_UUID("BDFEE05A-4418-11DD-90ED-001C257CCFF1")
MbnConnectionProfileManager;
#endif

EXTERN_C const CLSID CLSID_MbnInterfaceManager;

#ifdef __cplusplus

class DECLSPEC_UUID("BDFEE05B-4418-11DD-90ED-001C257CCFF1")
MbnInterfaceManager;
#endif

EXTERN_C const CLSID CLSID_MbnConnectionManager;

#ifdef __cplusplus

class DECLSPEC_UUID("BDFEE05C-4418-11DD-90ED-001C257CCFF1")
MbnConnectionManager;
#endif
#endif /* __MbnApi_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\Mdmsg.h ===
/**********************************************************************/
/**                       Microsoft Windows NT                       **/
/**                Copyright(c) Microsoft Corp., 1993-1999           **/
/**********************************************************************/

/*
    mdmsg.h

    This file is generated by the MC tool from the MDMSG.MC message
    file.


    FILE HISTORY:
        michth      26-Jun-1996 Created.

*/


#ifndef _MDMSG_H_
#define _MDMSG_H_

//
//  Values are 32 bit values laid out as follows:
//
//   3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
//   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
//  +-+-+-+-+-+---------------------+-------------------------------+
//  |S|R|C|N|r|    Facility         |               Code            |
//  +-+-+-+-+-+---------------------+-------------------------------+
//
//  where
//
//      S - Severity - indicates success/fail
//
//          0 - Success
//          1 - Fail (COERROR)
//
//      R - reserved portion of the facility code, corresponds to NT's
//              second severity bit.
//
//      C - reserved portion of the facility code, corresponds to NT's
//              C field.
//
//      N - reserved portion of the facility code. Used to indicate a
//              mapped NT status value.
//
//      r - reserved portion of the facility code. Reserved for internal
//              use. Used to indicate HRESULT values that are not status
//              values, but are instead message ids for display strings.
//
//      Facility - is the facility code
//
//      Code - is the facility's status code
//
//
// Define the facility codes
//


//
// Define the severity codes
//


//
// MessageId: MD_ERROR_NOT_INITIALIZED
//
// MessageText:
//
// MetaData has not been initialized.
//
#define MD_ERROR_NOT_INITIALIZED         0x800CC800L

//
// MessageId: MD_ERROR_DATA_NOT_FOUND
//
// MessageText:
//
// The specified metadata was not found.
//
#define MD_ERROR_DATA_NOT_FOUND          0x800CC801L

//
// MessageId: MD_ERROR_INVALID_VERSION
//
// MessageText:
//
// The version specified in metadata storage was not recognized.
//
#define MD_ERROR_INVALID_VERSION         0x800CC802L

//
// MessageId: MD_WARNING_PATH_NOT_FOUND
//
// MessageText:
//
// A specified metaobject path was not found. The metaobject and associated metadata was ignored.
//
#define MD_WARNING_PATH_NOT_FOUND        0x000CC803L

//
// MessageId: MD_WARNING_DUP_NAME
//
// MessageText:
//
// A metaobject or metadata was specified more than once. The duplicate ignored.
//
#define MD_WARNING_DUP_NAME              0x000CC804L

//
// MessageId: MD_WARNING_INVALID_DATA
//
// MessageText:
//
// Invalid metadata was specified. The invalid metadata was ignored.
//
#define MD_WARNING_INVALID_DATA          0x000CC805L

//
// MessageId: MD_ERROR_SECURE_CHANNEL_FAILURE
//
// MessageText:
//
// A secure communications channel could not be established with the target server.
//
#define MD_ERROR_SECURE_CHANNEL_FAILURE  0x800CC806L

//
// MessageId: MD_WARNING_PATH_NOT_INSERTED
//
// MessageText:
//
// The path was not inserted into the string as requested. The probable cause is that the data is at an object at a higher level than the handle.
//
#define MD_WARNING_PATH_NOT_INSERTED     0x000CC807L

//
// MessageId: MD_ERROR_CANNOT_REMOVE_SECURE_ATTRIBUTE
//
// MessageText:
//
// The METADATA_SECURE attribute cannot be removed from a data item via the GetData method. Use the DeleteData method to remove the secure data.
//
#define MD_ERROR_CANNOT_REMOVE_SECURE_ATTRIBUTE 0x800CC808L

//
// MessageId: MD_WARNING_SAVE_FAILED
//
// MessageText:
//
// The metadata save prior to backup failed. The previous version of the data was backed up.
//
#define MD_WARNING_SAVE_FAILED           0x000CC809L

//
// MessageId: MD_ERROR_IISAO_INVALID_SCHEMA
//
// MessageText:
//
// The schema information could not be loaded. A required key or property is missing from the metabase.
//
#define MD_ERROR_IISAO_INVALID_SCHEMA    0x800CC810L

//
// MessageId: MD_ERROR_READ_METABASE_FILE
//
// MessageText:
//
// Unable to read the metabase file.  Look at eventlog for further details.
//
#define MD_ERROR_READ_METABASE_FILE      0x800CC819L

//
// MessageId: MD_ERROR_NO_SESSION_KEY
//
// MessageText:
//
// Could not find session key in IIS_Global section of XML file.
//
#define MD_ERROR_NO_SESSION_KEY          0x800CC81DL


#endif  // _MDMSG_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\MDhcp.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0453 */
/* Compiler settings for mdhcp.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mdhcp_h__
#define __mdhcp_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMcastScope_FWD_DEFINED__
#define __IMcastScope_FWD_DEFINED__
typedef interface IMcastScope IMcastScope;
#endif 	/* __IMcastScope_FWD_DEFINED__ */


#ifndef __IMcastLeaseInfo_FWD_DEFINED__
#define __IMcastLeaseInfo_FWD_DEFINED__
typedef interface IMcastLeaseInfo IMcastLeaseInfo;
#endif 	/* __IMcastLeaseInfo_FWD_DEFINED__ */


#ifndef __IEnumMcastScope_FWD_DEFINED__
#define __IEnumMcastScope_FWD_DEFINED__
typedef interface IEnumMcastScope IEnumMcastScope;
#endif 	/* __IEnumMcastScope_FWD_DEFINED__ */


#ifndef __IMcastAddressAllocation_FWD_DEFINED__
#define __IMcastAddressAllocation_FWD_DEFINED__
typedef interface IMcastAddressAllocation IMcastAddressAllocation;
#endif 	/* __IMcastAddressAllocation_FWD_DEFINED__ */


#ifndef __IMcastScope_FWD_DEFINED__
#define __IMcastScope_FWD_DEFINED__
typedef interface IMcastScope IMcastScope;
#endif 	/* __IMcastScope_FWD_DEFINED__ */


#ifndef __IMcastLeaseInfo_FWD_DEFINED__
#define __IMcastLeaseInfo_FWD_DEFINED__
typedef interface IMcastLeaseInfo IMcastLeaseInfo;
#endif 	/* __IMcastLeaseInfo_FWD_DEFINED__ */


#ifndef __IEnumMcastScope_FWD_DEFINED__
#define __IEnumMcastScope_FWD_DEFINED__
typedef interface IEnumMcastScope IEnumMcastScope;
#endif 	/* __IEnumMcastScope_FWD_DEFINED__ */


#ifndef __IMcastAddressAllocation_FWD_DEFINED__
#define __IMcastAddressAllocation_FWD_DEFINED__
typedef interface IMcastAddressAllocation IMcastAddressAllocation;
#endif 	/* __IMcastAddressAllocation_FWD_DEFINED__ */


#ifndef __McastAddressAllocation_FWD_DEFINED__
#define __McastAddressAllocation_FWD_DEFINED__

#ifdef __cplusplus
typedef class McastAddressAllocation McastAddressAllocation;
#else
typedef struct McastAddressAllocation McastAddressAllocation;
#endif /* __cplusplus */

#endif 	/* __McastAddressAllocation_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "tapi3if.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mdhcp_0000_0000 */
/* [local] */ 

/* Copyright (c) Microsoft Corporation. All rights reserved.*/


extern RPC_IF_HANDLE __MIDL_itf_mdhcp_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mdhcp_0000_0000_v0_0_s_ifspec;

#ifndef __IMcastScope_INTERFACE_DEFINED__
#define __IMcastScope_INTERFACE_DEFINED__

/* interface IMcastScope */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMcastScope;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DF0DAEF4-A289-11D1-8697-006008B0E5D2")
    IMcastScope : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ScopeID( 
            /* [retval][out] */ __RPC__out long *pID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerID( 
            /* [retval][out] */ __RPC__out long *pID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_InterfaceID( 
            /* [retval][out] */ __RPC__out long *pID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ScopeDescription( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ppDescription) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TTL( 
            /* [retval][out] */ __RPC__out long *pTTL) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMcastScopeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMcastScope * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMcastScope * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMcastScope * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMcastScope * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMcastScope * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMcastScope * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMcastScope * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScopeID )( 
            IMcastScope * This,
            /* [retval][out] */ __RPC__out long *pID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerID )( 
            IMcastScope * This,
            /* [retval][out] */ __RPC__out long *pID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InterfaceID )( 
            IMcastScope * This,
            /* [retval][out] */ __RPC__out long *pID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScopeDescription )( 
            IMcastScope * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ppDescription);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TTL )( 
            IMcastScope * This,
            /* [retval][out] */ __RPC__out long *pTTL);
        
        END_INTERFACE
    } IMcastScopeVtbl;

    interface IMcastScope
    {
        CONST_VTBL struct IMcastScopeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMcastScope_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMcastScope_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMcastScope_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMcastScope_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMcastScope_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMcastScope_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMcastScope_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMcastScope_get_ScopeID(This,pID)	\
    ( (This)->lpVtbl -> get_ScopeID(This,pID) ) 

#define IMcastScope_get_ServerID(This,pID)	\
    ( (This)->lpVtbl -> get_ServerID(This,pID) ) 

#define IMcastScope_get_InterfaceID(This,pID)	\
    ( (This)->lpVtbl -> get_InterfaceID(This,pID) ) 

#define IMcastScope_get_ScopeDescription(This,ppDescription)	\
    ( (This)->lpVtbl -> get_ScopeDescription(This,ppDescription) ) 

#define IMcastScope_get_TTL(This,pTTL)	\
    ( (This)->lpVtbl -> get_TTL(This,pTTL) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMcastScope_get_ScopeID_Proxy( 
    IMcastScope * This,
    /* [retval][out] */ __RPC__out long *pID);


void __RPC_STUB IMcastScope_get_ScopeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMcastScope_get_ServerID_Proxy( 
    IMcastScope * This,
    /* [retval][out] */ __RPC__out long *pID);


void __RPC_STUB IMcastScope_get_ServerID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMcastScope_get_InterfaceID_Proxy( 
    IMcastScope * This,
    /* [retval][out] */ __RPC__out long *pID);


void __RPC_STUB IMcastScope_get_InterfaceID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMcastScope_get_ScopeDescription_Proxy( 
    IMcastScope * This,
    /* [retval][out] */ __RPC__deref_out_opt BSTR *ppDescription);


void __RPC_STUB IMcastScope_get_ScopeDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMcastScope_get_TTL_Proxy( 
    IMcastScope * This,
    /* [retval][out] */ __RPC__out long *pTTL);


void __RPC_STUB IMcastScope_get_TTL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMcastScope_INTERFACE_DEFINED__ */


#ifndef __IMcastLeaseInfo_INTERFACE_DEFINED__
#define __IMcastLeaseInfo_INTERFACE_DEFINED__

/* interface IMcastLeaseInfo */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMcastLeaseInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DF0DAEFD-A289-11D1-8697-006008B0E5D2")
    IMcastLeaseInfo : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_RequestID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ppRequestID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LeaseStartTime( 
            /* [retval][out] */ __RPC__out DATE *pTime) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_LeaseStartTime( 
            /* [in] */ DATE time) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LeaseStopTime( 
            /* [retval][out] */ __RPC__out DATE *pTime) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_LeaseStopTime( 
            /* [in] */ DATE time) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AddressCount( 
            /* [retval][out] */ __RPC__out long *pCount) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerAddress( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ppAddress) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TTL( 
            /* [retval][out] */ __RPC__out long *pTTL) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Addresses( 
            /* [retval][out] */ __RPC__out VARIANT *pVariant) = 0;
        
        virtual /* [helpstring][hidden][id] */ HRESULT STDMETHODCALLTYPE EnumerateAddresses( 
            /* [retval][out] */ __RPC__deref_out_opt IEnumBstr **ppEnumAddresses) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMcastLeaseInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMcastLeaseInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMcastLeaseInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMcastLeaseInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMcastLeaseInfo * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMcastLeaseInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMcastLeaseInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMcastLeaseInfo * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RequestID )( 
            IMcastLeaseInfo * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ppRequestID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LeaseStartTime )( 
            IMcastLeaseInfo * This,
            /* [retval][out] */ __RPC__out DATE *pTime);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_LeaseStartTime )( 
            IMcastLeaseInfo * This,
            /* [in] */ DATE time);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LeaseStopTime )( 
            IMcastLeaseInfo * This,
            /* [retval][out] */ __RPC__out DATE *pTime);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_LeaseStopTime )( 
            IMcastLeaseInfo * This,
            /* [in] */ DATE time);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AddressCount )( 
            IMcastLeaseInfo * This,
            /* [retval][out] */ __RPC__out long *pCount);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerAddress )( 
            IMcastLeaseInfo * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *ppAddress);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TTL )( 
            IMcastLeaseInfo * This,
            /* [retval][out] */ __RPC__out long *pTTL);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Addresses )( 
            IMcastLeaseInfo * This,
            /* [retval][out] */ __RPC__out VARIANT *pVariant);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *EnumerateAddresses )( 
            IMcastLeaseInfo * This,
            /* [retval][out] */ __RPC__deref_out_opt IEnumBstr **ppEnumAddresses);
        
        END_INTERFACE
    } IMcastLeaseInfoVtbl;

    interface IMcastLeaseInfo
    {
        CONST_VTBL struct IMcastLeaseInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMcastLeaseInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMcastLeaseInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMcastLeaseInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMcastLeaseInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMcastLeaseInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMcastLeaseInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMcastLeaseInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMcastLeaseInfo_get_RequestID(This,ppRequestID)	\
    ( (This)->lpVtbl -> get_RequestID(This,ppRequestID) ) 

#define IMcastLeaseInfo_get_LeaseStartTime(This,pTime)	\
    ( (This)->lpVtbl -> get_LeaseStartTime(This,pTime) ) 

#define IMcastLeaseInfo_put_LeaseStartTime(This,time)	\
    ( (This)->lpVtbl -> put_LeaseStartTime(This,time) ) 

#define IMcastLeaseInfo_get_LeaseStopTime(This,pTime)	\
    ( (This)->lpVtbl -> get_LeaseStopTime(This,pTime) ) 

#define IMcastLeaseInfo_put_LeaseStopTime(This,time)	\
    ( (This)->lpVtbl -> put_LeaseStopTime(This,time) ) 

#define IMcastLeaseInfo_get_AddressCount(This,pCount)	\
    ( (This)->lpVtbl -> get_AddressCount(This,pCount) ) 

#define IMcastLeaseInfo_get_ServerAddress(This,ppAddress)	\
    ( (This)->lpVtbl -> get_ServerAddress(This,ppAddress) ) 

#define IMcastLeaseInfo_get_TTL(This,pTTL)	\
    ( (This)->lpVtbl -> get_TTL(This,pTTL) ) 

#define IMcastLeaseInfo_get_Addresses(This,pVariant)	\
    ( (This)->lpVtbl -> get_Addresses(This,pVariant) ) 

#define IMcastLeaseInfo_EnumerateAddresses(This,ppEnumAddresses)	\
    ( (This)->lpVtbl -> EnumerateAddresses(This,ppEnumAddresses) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMcastLeaseInfo_get_RequestID_Proxy( 
    IMcastLeaseInfo * This,
    /* [retval][out] */ __RPC__deref_out_opt BSTR *ppRequestID);


void __RPC_STUB IMcastLeaseInfo_get_RequestID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMcastLeaseInfo_get_LeaseStartTime_Proxy( 
    IMcastLeaseInfo * This,
    /* [retval][out] */ __RPC__out DATE *pTime);


void __RPC_STUB IMcastLeaseInfo_get_LeaseStartTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMcastLeaseInfo_put_LeaseStartTime_Proxy( 
    IMcastLeaseInfo * This,
    /* [in] */ DATE time);


void __RPC_STUB IMcastLeaseInfo_put_LeaseStartTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMcastLeaseInfo_get_LeaseStopTime_Proxy( 
    IMcastLeaseInfo * This,
    /* [retval][out] */ __RPC__out DATE *pTime);


void __RPC_STUB IMcastLeaseInfo_get_LeaseStopTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE IMcastLeaseInfo_put_LeaseStopTime_Proxy( 
    IMcastLeaseInfo * This,
    /* [in] */ DATE time);


void __RPC_STUB IMcastLeaseInfo_put_LeaseStopTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMcastLeaseInfo_get_AddressCount_Proxy( 
    IMcastLeaseInfo * This,
    /* [retval][out] */ __RPC__out long *pCount);


void __RPC_STUB IMcastLeaseInfo_get_AddressCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMcastLeaseInfo_get_ServerAddress_Proxy( 
    IMcastLeaseInfo * This,
    /* [retval][out] */ __RPC__deref_out_opt BSTR *ppAddress);


void __RPC_STUB IMcastLeaseInfo_get_ServerAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMcastLeaseInfo_get_TTL_Proxy( 
    IMcastLeaseInfo * This,
    /* [retval][out] */ __RPC__out long *pTTL);


void __RPC_STUB IMcastLeaseInfo_get_TTL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMcastLeaseInfo_get_Addresses_Proxy( 
    IMcastLeaseInfo * This,
    /* [retval][out] */ __RPC__out VARIANT *pVariant);


void __RPC_STUB IMcastLeaseInfo_get_Addresses_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][id] */ HRESULT STDMETHODCALLTYPE IMcastLeaseInfo_EnumerateAddresses_Proxy( 
    IMcastLeaseInfo * This,
    /* [retval][out] */ __RPC__deref_out_opt IEnumBstr **ppEnumAddresses);


void __RPC_STUB IMcastLeaseInfo_EnumerateAddresses_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMcastLeaseInfo_INTERFACE_DEFINED__ */


#ifndef __IEnumMcastScope_INTERFACE_DEFINED__
#define __IEnumMcastScope_INTERFACE_DEFINED__

/* interface IEnumMcastScope */
/* [unique][helpstring][hidden][uuid][object] */ 


EXTERN_C const IID IID_IEnumMcastScope;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DF0DAF09-A289-11D1-8697-006008B0E5D2")
    IEnumMcastScope : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [out] */ __RPC__deref_out_opt IMcastScope **ppScopes,
            /* [full][out][in] */ __RPC__inout_opt ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [retval][out] */ __RPC__deref_out_opt IEnumMcastScope **ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumMcastScopeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumMcastScope * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumMcastScope * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumMcastScope * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumMcastScope * This,
            /* [in] */ ULONG celt,
            /* [out] */ __RPC__deref_out_opt IMcastScope **ppScopes,
            /* [full][out][in] */ __RPC__inout_opt ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumMcastScope * This);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumMcastScope * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumMcastScope * This,
            /* [retval][out] */ __RPC__deref_out_opt IEnumMcastScope **ppEnum);
        
        END_INTERFACE
    } IEnumMcastScopeVtbl;

    interface IEnumMcastScope
    {
        CONST_VTBL struct IEnumMcastScopeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumMcastScope_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumMcastScope_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumMcastScope_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumMcastScope_Next(This,celt,ppScopes,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,ppScopes,pceltFetched) ) 

#define IEnumMcastScope_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumMcastScope_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IEnumMcastScope_Clone(This,ppEnum)	\
    ( (This)->lpVtbl -> Clone(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumMcastScope_Next_Proxy( 
    IEnumMcastScope * This,
    /* [in] */ ULONG celt,
    /* [out] */ __RPC__deref_out_opt IMcastScope **ppScopes,
    /* [full][out][in] */ __RPC__inout_opt ULONG *pceltFetched);


void __RPC_STUB IEnumMcastScope_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMcastScope_Reset_Proxy( 
    IEnumMcastScope * This);


void __RPC_STUB IEnumMcastScope_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMcastScope_Skip_Proxy( 
    IEnumMcastScope * This,
    /* [in] */ ULONG celt);


void __RPC_STUB IEnumMcastScope_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMcastScope_Clone_Proxy( 
    IEnumMcastScope * This,
    /* [retval][out] */ __RPC__deref_out_opt IEnumMcastScope **ppEnum);


void __RPC_STUB IEnumMcastScope_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumMcastScope_INTERFACE_DEFINED__ */


#ifndef __IMcastAddressAllocation_INTERFACE_DEFINED__
#define __IMcastAddressAllocation_INTERFACE_DEFINED__

/* interface IMcastAddressAllocation */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IMcastAddressAllocation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DF0DAEF1-A289-11D1-8697-006008B0E5D2")
    IMcastAddressAllocation : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Scopes( 
            /* [retval][out] */ __RPC__out VARIANT *pVariant) = 0;
        
        virtual /* [helpstring][hidden][id] */ HRESULT STDMETHODCALLTYPE EnumerateScopes( 
            /* [out] */ __RPC__deref_out_opt IEnumMcastScope **ppEnumMcastScope) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RequestAddress( 
            /* [in] */ __RPC__in IMcastScope *pScope,
            /* [in] */ DATE LeaseStartTime,
            /* [in] */ DATE LeaseStopTime,
            /* [in] */ long NumAddresses,
            /* [retval][out] */ __RPC__deref_out_opt IMcastLeaseInfo **ppLeaseResponse) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RenewAddress( 
            /* [in] */ long lReserved,
            /* [in] */ __RPC__in IMcastLeaseInfo *pRenewRequest,
            /* [retval][out] */ __RPC__deref_out_opt IMcastLeaseInfo **ppRenewResponse) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ReleaseAddress( 
            /* [in] */ __RPC__in IMcastLeaseInfo *pReleaseRequest) = 0;
        
        virtual /* [helpstring][hidden][id] */ HRESULT STDMETHODCALLTYPE CreateLeaseInfo( 
            /* [in] */ DATE LeaseStartTime,
            /* [in] */ DATE LeaseStopTime,
            /* [in] */ DWORD dwNumAddresses,
            /* [in] */ __RPC__deref_in_opt LPWSTR *ppAddresses,
            /* [in] */ __RPC__in LPWSTR pRequestID,
            /* [in] */ __RPC__in LPWSTR pServerAddress,
            /* [retval][out] */ __RPC__deref_out_opt IMcastLeaseInfo **ppReleaseRequest) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateLeaseInfoFromVariant( 
            /* [in] */ DATE LeaseStartTime,
            /* [in] */ DATE LeaseStopTime,
            /* [in] */ VARIANT vAddresses,
            /* [in] */ __RPC__in BSTR pRequestID,
            /* [in] */ __RPC__in BSTR pServerAddress,
            /* [retval][out] */ __RPC__deref_out_opt IMcastLeaseInfo **ppReleaseRequest) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMcastAddressAllocationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMcastAddressAllocation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMcastAddressAllocation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMcastAddressAllocation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMcastAddressAllocation * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMcastAddressAllocation * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMcastAddressAllocation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMcastAddressAllocation * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Scopes )( 
            IMcastAddressAllocation * This,
            /* [retval][out] */ __RPC__out VARIANT *pVariant);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *EnumerateScopes )( 
            IMcastAddressAllocation * This,
            /* [out] */ __RPC__deref_out_opt IEnumMcastScope **ppEnumMcastScope);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RequestAddress )( 
            IMcastAddressAllocation * This,
            /* [in] */ __RPC__in IMcastScope *pScope,
            /* [in] */ DATE LeaseStartTime,
            /* [in] */ DATE LeaseStopTime,
            /* [in] */ long NumAddresses,
            /* [retval][out] */ __RPC__deref_out_opt IMcastLeaseInfo **ppLeaseResponse);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RenewAddress )( 
            IMcastAddressAllocation * This,
            /* [in] */ long lReserved,
            /* [in] */ __RPC__in IMcastLeaseInfo *pRenewRequest,
            /* [retval][out] */ __RPC__deref_out_opt IMcastLeaseInfo **ppRenewResponse);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReleaseAddress )( 
            IMcastAddressAllocation * This,
            /* [in] */ __RPC__in IMcastLeaseInfo *pReleaseRequest);
        
        /* [helpstring][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *CreateLeaseInfo )( 
            IMcastAddressAllocation * This,
            /* [in] */ DATE LeaseStartTime,
            /* [in] */ DATE LeaseStopTime,
            /* [in] */ DWORD dwNumAddresses,
            /* [in] */ __RPC__deref_in_opt LPWSTR *ppAddresses,
            /* [in] */ __RPC__in LPWSTR pRequestID,
            /* [in] */ __RPC__in LPWSTR pServerAddress,
            /* [retval][out] */ __RPC__deref_out_opt IMcastLeaseInfo **ppReleaseRequest);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CreateLeaseInfoFromVariant )( 
            IMcastAddressAllocation * This,
            /* [in] */ DATE LeaseStartTime,
            /* [in] */ DATE LeaseStopTime,
            /* [in] */ VARIANT vAddresses,
            /* [in] */ __RPC__in BSTR pRequestID,
            /* [in] */ __RPC__in BSTR pServerAddress,
            /* [retval][out] */ __RPC__deref_out_opt IMcastLeaseInfo **ppReleaseRequest);
        
        END_INTERFACE
    } IMcastAddressAllocationVtbl;

    interface IMcastAddressAllocation
    {
        CONST_VTBL struct IMcastAddressAllocationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMcastAddressAllocation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMcastAddressAllocation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMcastAddressAllocation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMcastAddressAllocation_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMcastAddressAllocation_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMcastAddressAllocation_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMcastAddressAllocation_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMcastAddressAllocation_get_Scopes(This,pVariant)	\
    ( (This)->lpVtbl -> get_Scopes(This,pVariant) ) 

#define IMcastAddressAllocation_EnumerateScopes(This,ppEnumMcastScope)	\
    ( (This)->lpVtbl -> EnumerateScopes(This,ppEnumMcastScope) ) 

#define IMcastAddressAllocation_RequestAddress(This,pScope,LeaseStartTime,LeaseStopTime,NumAddresses,ppLeaseResponse)	\
    ( (This)->lpVtbl -> RequestAddress(This,pScope,LeaseStartTime,LeaseStopTime,NumAddresses,ppLeaseResponse) ) 

#define IMcastAddressAllocation_RenewAddress(This,lReserved,pRenewRequest,ppRenewResponse)	\
    ( (This)->lpVtbl -> RenewAddress(This,lReserved,pRenewRequest,ppRenewResponse) ) 

#define IMcastAddressAllocation_ReleaseAddress(This,pReleaseRequest)	\
    ( (This)->lpVtbl -> ReleaseAddress(This,pReleaseRequest) ) 

#define IMcastAddressAllocation_CreateLeaseInfo(This,LeaseStartTime,LeaseStopTime,dwNumAddresses,ppAddresses,pRequestID,pServerAddress,ppReleaseRequest)	\
    ( (This)->lpVtbl -> CreateLeaseInfo(This,LeaseStartTime,LeaseStopTime,dwNumAddresses,ppAddresses,pRequestID,pServerAddress,ppReleaseRequest) ) 

#define IMcastAddressAllocation_CreateLeaseInfoFromVariant(This,LeaseStartTime,LeaseStopTime,vAddresses,pRequestID,pServerAddress,ppReleaseRequest)	\
    ( (This)->lpVtbl -> CreateLeaseInfoFromVariant(This,LeaseStartTime,LeaseStopTime,vAddresses,pRequestID,pServerAddress,ppReleaseRequest) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMcastAddressAllocation_get_Scopes_Proxy( 
    IMcastAddressAllocation * This,
    /* [retval][out] */ __RPC__out VARIANT *pVariant);


void __RPC_STUB IMcastAddressAllocation_get_Scopes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][id] */ HRESULT STDMETHODCALLTYPE IMcastAddressAllocation_EnumerateScopes_Proxy( 
    IMcastAddressAllocation * This,
    /* [out] */ __RPC__deref_out_opt IEnumMcastScope **ppEnumMcastScope);


void __RPC_STUB IMcastAddressAllocation_EnumerateScopes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMcastAddressAllocation_RequestAddress_Proxy( 
    IMcastAddressAllocation * This,
    /* [in] */ __RPC__in IMcastScope *pScope,
    /* [in] */ DATE LeaseStartTime,
    /* [in] */ DATE LeaseStopTime,
    /* [in] */ long NumAddresses,
    /* [retval][out] */ __RPC__deref_out_opt IMcastLeaseInfo **ppLeaseResponse);


void __RPC_STUB IMcastAddressAllocation_RequestAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMcastAddressAllocation_RenewAddress_Proxy( 
    IMcastAddressAllocation * This,
    /* [in] */ long lReserved,
    /* [in] */ __RPC__in IMcastLeaseInfo *pRenewRequest,
    /* [retval][out] */ __RPC__deref_out_opt IMcastLeaseInfo **ppRenewResponse);


void __RPC_STUB IMcastAddressAllocation_RenewAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMcastAddressAllocation_ReleaseAddress_Proxy( 
    IMcastAddressAllocation * This,
    /* [in] */ __RPC__in IMcastLeaseInfo *pReleaseRequest);


void __RPC_STUB IMcastAddressAllocation_ReleaseAddress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][hidden][id] */ HRESULT STDMETHODCALLTYPE IMcastAddressAllocation_CreateLeaseInfo_Proxy( 
    IMcastAddressAllocation * This,
    /* [in] */ DATE LeaseStartTime,
    /* [in] */ DATE LeaseStopTime,
    /* [in] */ DWORD dwNumAddresses,
    /* [in] */ __RPC__deref_in_opt LPWSTR *ppAddresses,
    /* [in] */ __RPC__in LPWSTR pRequestID,
    /* [in] */ __RPC__in LPWSTR pServerAddress,
    /* [retval][out] */ __RPC__deref_out_opt IMcastLeaseInfo **ppReleaseRequest);


void __RPC_STUB IMcastAddressAllocation_CreateLeaseInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMcastAddressAllocation_CreateLeaseInfoFromVariant_Proxy( 
    IMcastAddressAllocation * This,
    /* [in] */ DATE LeaseStartTime,
    /* [in] */ DATE LeaseStopTime,
    /* [in] */ VARIANT vAddresses,
    /* [in] */ __RPC__in BSTR pRequestID,
    /* [in] */ __RPC__in BSTR pServerAddress,
    /* [retval][out] */ __RPC__deref_out_opt IMcastLeaseInfo **ppReleaseRequest);


void __RPC_STUB IMcastAddressAllocation_CreateLeaseInfoFromVariant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMcastAddressAllocation_INTERFACE_DEFINED__ */



#ifndef __McastLib_LIBRARY_DEFINED__
#define __McastLib_LIBRARY_DEFINED__

/* library McastLib */
/* [helpstring][version][uuid] */ 







EXTERN_C const IID LIBID_McastLib;

EXTERN_C const CLSID CLSID_McastAddressAllocation;

#ifdef __cplusplus

class DECLSPEC_UUID("DF0DAEF2-A289-11D1-8697-006008B0E5D2")
McastAddressAllocation;
#endif
#endif /* __McastLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long *, unsigned long            , VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  unsigned long *, unsigned char *, VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(unsigned long *, unsigned char *, VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long *, VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\MethodCo.h ===
//***************************************************************************
//
//  Copyright (c) Microsoft Corporation.  All rights reserved.
//
//  MethodCo.h
//
//  Purpose: declaration of MethodContext class
//
//***************************************************************************

#if _MSC_VER > 1000
#pragma once
#endif

#ifndef _METHOD_CONTEXT_H__
#define _METHOD_CONTEXT_H__

//#include "ThrdBase.h"
//#include "refptrco.h"

#ifdef PROVIDER_INSTRUMENTATION
    #include <stopwatch.h>
#endif

class CInstance;
class Provider;
class MethodContext;
class CWbemProviderGlue;
class InternalMethodContextAsynch;

typedef HRESULT (WINAPI *LPProviderInstanceCallback)(Provider *pProvider, CInstance *pInstance, MethodContext *pContext, void *pUserData);

//////////////////////////////////////////////////////
//
//  STRUCT MethodContext
//
// a little something to make sure we can keep our threads from getting tangled
// idea is that there is one MethodContext for each request from CIMOM or another provider
// pointers are passed around.
//////////////////////////////////////////////////////
class POLARITY MethodContext : public CThreadBase
{
public:
    friend InternalMethodContextAsynch;
    friend CWbemProviderGlue;

    MethodContext(IWbemContext   __RPC_FAR *piContext, CWbemProviderGlue *pGlue);
    ~MethodContext();
    
    virtual HRESULT Commit(CInstance *pInstance) = 0;
    virtual IWbemContext __RPC_FAR *GetIWBEMContext();
    
    LONG AddRef(void);
    LONG Release(void);
    virtual void QueryPostProcess(void);
        
    bool SetStatusObject(IWbemClassObject *pObj);
    IWbemClassObject __RPC_FAR *GetStatusObject();

#ifdef PROVIDER_INSTRUMENTATION
    StopWatch *pStopWatch;
#endif
    
private:
    CWbemProviderGlue* GetProviderGlue();
    CWbemProviderGlue   *m_pGlue;
    IWbemContext        __RPC_FAR *m_pContext;
    IWbemClassObject    __RPC_FAR *m_pStatusObject;

};

// for queries and suchlike that originate in CIMOM
class 
__declspec(uuid("9113D3B4-D114-11d2-B35D-00104BC97924")) 
ExternalMethodContext  : public MethodContext
{
public:
    ExternalMethodContext(IWbemObjectSink __RPC_FAR *pResponseHandler,
                          IWbemContext    __RPC_FAR *pContext,
                          CWbemProviderGlue *pGlue,
                          void                      *pReserved = NULL
                          );
    
    HRESULT Commit(CInstance *pInstance);
    virtual void QueryPostProcess(void);
    
    LONG AddRef(void);
    LONG Release(void);
    
private:
    IWbemObjectSink __RPC_FAR *m_pResponseHandler;
    void                      *m_pReserved;
};

// for queries and suchlike that come from within.
// contains a list of objects returned. 
class 
__declspec(uuid("6AF4B074-D121-11d2-B35D-00104BC97924"))
InternalMethodContext : public MethodContext
{
public:
    InternalMethodContext(TRefPointerCollection<CInstance> *pList ,
                          IWbemContext    __RPC_FAR *pContext,
                          CWbemProviderGlue *pGlue);
    ~InternalMethodContext();
    
    HRESULT Commit(CInstance *pInstance);
    
    LONG AddRef(void);
    LONG Release(void);
    
private:
    TRefPointerCollection<CInstance> *m_pInstances;
};

// for queries and suchlike that come from within.
// "Asynch" is a bit of a misnomer - but it does help support
// asynchronous calls, in that each instance committed is routed
// to a callback function supplied by the requester
class 
__declspec(uuid("D98A82E8-D121-11d2-B35D-00104BC97924"))
InternalMethodContextAsynch : public MethodContext
{
public:
    InternalMethodContextAsynch(Provider *pThat,
                                LPProviderInstanceCallback pCallback,
                                IWbemContext __RPC_FAR *pContext,
                                MethodContext *pUsersContext,
                                void *pUserData);
    ~InternalMethodContextAsynch();
    
    HRESULT Commit(CInstance *pInstance);
    
    LONG AddRef(void);
    LONG Release(void);
    
private:
    Provider *m_pThat;
    LPProviderInstanceCallback m_pCallback;
    void *m_pUserData;
    MethodContext *m_pUsersContext;
};

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\Mddefw.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mddefw.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __mddefw_h__
#define __mddefw_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

/* header files for imported files */
#include "unknwn.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mddefw_0000_0000 */
/* [local] */ 

/*++
                                                                                
Copyright (c) 1997-1999 Microsoft Corporation
                                                                                
Module Name: mddef.h
                                                                                
    Definitions for Admin Objects and Metadata
                                                                                
--*/
#ifndef _MD_DEFW_
#define _MD_DEFW_
#include <mdmsg.h>
#include <mdcommsg.h>
/*                                                                              
    Error Codes                                                                 
                                                                                
        Metadata api's all return HRESULTS. Since internal results are either   
        winerrors or Metadata specific return codes (see mdmsg.h), they are     
        converted to HRESULTS using the RETURNCODETOHRESULT macro (see          
        commsg.h).                                                              
*/                                                                              
                                                                                
/*                                                                              
    Max Name Length                                                             
        The maximum number of characters in the length of a metaobject name,    
        including the terminating NULL. This refers to each node in the tree,   
        not the entire path.                                                    
        eg. strlen("Root") < METADATA_MAX_NAME_LEN                            
*/                                                                              
#define METADATA_MAX_NAME_LEN           256
/*                                                                              
   Access Permissons                                                            
       Permissions associated with handles of type METADATA_HANDLE              
                                                                                
       METADATA_PERMISSION_READ - Allows reading metadata.                      
       METADATA_PERMISSION_WRITE - Allows writing metadata.                     
*/                                                                              
#define METADATA_PERMISSION_READ        0x00000001
#define METADATA_PERMISSION_WRITE       0x00000002
/*                                                                              
    Data Types                                                                  
                                                                                
        ALL_METADATA - Used on Get/Enum/Getall api's (ComMDGetMetaData,         
            ComMDEnumMetaData, and ComMDGetAllMetaData), api's to allow getting 
            all data. Not valid on the Set api.                                 
                                                                                
        DWORD_METADATA - The data is an unsigned 32 bit value.                  
                                                                                
        STRING_METADATA - The data is a null terminated ASCII string.           
                                                                                
        BINARY_METADATA - The data is any binary value.                         
                                                                                
        EXPANDSZ_METADATA - The data is a null terminated ASCII string.         
            Clients are expected to treat this as an expandsz string.           
                                                                                
        MULTISZ_METADATA - A series of NULL terminated ASCII strings. ending    
            with 2 NULL's.                                                      
*/                                                                              

enum METADATATYPES
    {	ALL_METADATA	= 0,
	DWORD_METADATA	= ( ALL_METADATA + 1 ) ,
	STRING_METADATA	= ( DWORD_METADATA + 1 ) ,
	BINARY_METADATA	= ( STRING_METADATA + 1 ) ,
	EXPANDSZ_METADATA	= ( BINARY_METADATA + 1 ) ,
	MULTISZ_METADATA	= ( EXPANDSZ_METADATA + 1 ) ,
	INVALID_END_METADATA	= ( MULTISZ_METADATA + 1 ) 
    } ;
/*                                                                              
    Attributes - The flags for the data.                                        
                                                                                
        METADATA_INHERIT - If set for a data item, the data item can be         
            inherited. If set on input to the Get/Enum/Getall api's,            
            (ComMDGetMetaData, ComMDEnumMetaData, and ComMDGetAllMetaData),     
            inheritable data will be returned. If not set on input to the       
            Get/Enum/Getall, inheritable data will not be returned.             
                                                                                
        METADATA_PARTIAL_PATH - If set on input to Get/Enum/Getall api's, this  
            routine will return ERROR_SUCCESS and the inherited data even if    
            the entire path is not present. Only valid if METADATA_INHERIT is   
            also set. Should not be set for data items on input the the Set api 
            (ComMDSetMetaData).                                                 
                                                                                
        METADATA_SECURE - If set for a data item, the data is stored in a       
            secure fasion. Should not be set on input to Get/Enum api's.        
                                                                                
        METADATA_REFERENCE - If set for a data item, the data item may be       
            gotten by reference. If set on input to Get/Enum/GetAll api's and   
            set on a the data item being returned, the data is returned by      
            reference. A pointer to the metadata server's copy of the data is   
            placed in the Data field of the METADATA_RECORD or                  
            METADATA_GETALL_RECORD, and the DataTag field is set. This data must
            be freed by calling ComMDReleaseReferenceData. The client must not  
            change this data. This flag must not be set on input to             
            Get/Enum/Getall api's from remote clients.                          
                                                                                
        METADATA_VOLATILE - If set for a data item, the data item will not be   
            saved to long term storage.                                         
                                                                                
        METADATA_ISINHERITED - If specified on input to one of the get api's,   
        the flag will be set on return if the data was inherited.               
                                                                                
        METADATA_INSERT_PATH - If specified on input to one of the get api's,   
        and on a string data item, the path relative to handle will replaced the
        string MD_INSERT_PATH_STRING in the string data.                        
                                                                                
        METADATA_LOCAL_MACHINE_ONLY - If set for a data item, the data item
        will not be replicated during web cluster replication.
                                                                                
        METADATA_NON_SECURE_ONLY - When using GetAll api, do not
        retrieve properties which are secure.
                                                                                
*/                                                                              
                                                                                
#define METADATA_NO_ATTRIBUTES          0                                       
#define METADATA_INHERIT                0x00000001                              
#define METADATA_PARTIAL_PATH           0x00000002                              
#define METADATA_SECURE                 0x00000004                              
#define METADATA_REFERENCE              0x00000008                              
#define METADATA_VOLATILE               0x00000010                              
#define METADATA_ISINHERITED            0x00000020                              
#define METADATA_INSERT_PATH            0x00000040                              
#define METADATA_LOCAL_MACHINE_ONLY     0x00000080                              
#define METADATA_NON_SECURE_ONLY        0x00000100                              
#define METADATA_DONT_EXPAND            0x00000200                              
                                                                                
/*                                                                              
    Backup Flags.                                                               
                                                                                
        MD_BACKUP_OVERWRITE - If set, the metabase will be backed up even if    
            a backupe with the same name and version already exists. The        
            existing backup will be overwritten.                                
                                                                                
        MD_BACKUP_SAVE_FIRST - If set backup will save the metabase prior to    
            making the backup. If the save fails, backup behavior is dependent  
            on the value of MD_BACKUP_FORCE_BACKUP.                             
                                                                                
        MD_BACKUP_FORCE_BACKUP - If set backup will proceed even if the save    
            failed. Only valid if MD_BACKUP_SAVE_FIRST is set. If the save      
            but the backup succeeds, a warning will be returned.                
*/                                                                              
                                                                                
#define MD_BACKUP_OVERWRITE             0x00000001                              
#define MD_BACKUP_SAVE_FIRST            0x00000002                              
#define MD_BACKUP_FORCE_BACKUP          0x00000004                              
/*                                                                              
    Backup Version Defines.                                                     
                                                                                
        MD_BACKUP_NEXT_VERSION - For Backup, indicates use the next available   
            backup version of the BackupLocation specified, ie. one higher than 
            the highest existing version.                                       
            Not valid for Restore or DeleteBackup.                              
                                                                                
        MD_BACKUP_HIGHEST_VERSION - For Backup, Restore, and DeleteBackup, will 
            use the highest existing backup version of the BackupLocation       
            specified.                                                          
                                                                                
        MD_BACKUP_MAX_VERSION - The highest allowed backup version number.      
                                                                                
        MD_BACKUP_MAX_LEN - The maximup length, in UNICODE characters, of the   
            BackupLocation.                                                     
*/                                                                              
                                                                                
#define MD_BACKUP_NEXT_VERSION          0xffffffff                              
#define MD_BACKUP_HIGHEST_VERSION       0xfffffffe                              
#define MD_BACKUP_MAX_VERSION           9999                                    
#define MD_BACKUP_MAX_LEN               (100)                                   
                                                                                
/*                                                                              
    Backup Location Defines.                                                    
                                                                                
        MD_DEFAULT_BACKUP_LOCATION - The default location to backup from or     
            restore to if no location is specified.                             
*/                                                                              
                                                                                
#define MD_DEFAULT_BACKUP_LOCATION TEXT("MDBackUp")                           
                                                                                
/*                                                                              
    History Flags.                                                              
                                                                                
        MD_HISTORY_LATEST - The most recent history file by timestamp           
*/                                                                              
                                                                                
#define MD_HISTORY_LATEST               0x00000001                              
                                                                                
/*                                                                              
    Export Flags.                                                               
                                                                                
        MD_EXPORT_INHERITED - If set, inherited properties will be backed up    
            to special section in output file called IIsInheritedProperties.    
            If not set, inherited properties are ignored.                       
                                                                                
        MD_EXPORT_NODE_ONLY - If set, children will not be exported.            
            If not set, children will be exported.                              
*/                                                                              
                                                                                
#define MD_EXPORT_INHERITED             0x00000001                              
#define MD_EXPORT_NODE_ONLY             0x00000002                              
                                                                                
/*                                                                              
    Import Flags.                                                               
                                                                                
        MD_IMPORT_INHERITED - If set, inherited properties will be imported.    
                                                                                
        MD_IMPORT_NODE_ONLY - If set, children will not be imported.            
            If not set, children will be imported.                              
                                                                                
        MD_IMPORT_MERGE - If set, imported settings overwrite existing          
            settings, but entire node is not overwritten.  If not set, entire   
            node is clobbered.                                                  
*/                                                                              
                                                                                
#define MD_IMPORT_INHERITED             0x00000001                              
#define MD_IMPORT_NODE_ONLY             0x00000002                              
#define MD_IMPORT_MERGE                 0x00000004                              
                                                                                
/*                                                                              
    Insert Path Defines.                                                        
*/                                                                              
                                                                                
                                                                                
#define MD_INSERT_PATH_STRINGA      "<%INSERT_PATH%>"                         
#define MD_INSERT_PATH_STRINGW      L##"<%INSERT_PATH%>"                      
#define MD_INSERT_PATH_STRING       TEXT("<%INSERT_PATH%>")                   
                                                                                
/*                                                                              
    Handle Defines.                                                             
*/                                                                              
                                                                                
#define METADATA_MASTER_ROOT_HANDLE     0
                                                                                
/*                                                                              
    METADATA_RECORD is the basic input/output parameter for the set and get     
        metadata api's. The Set api (ComMDSetMetaData) takes all fields as      
        input, except DataTag. The Get/Enum api's (ComMDGetMetadata and         
        ComMDEnumMetaData) take some of the fields as input, and fill in all    
        fields as output.                                                       
                                                                                
    Identifier - The identifier of the data.                                    
                                                                                
    Attributes - The flags for the data.                                        
                                                                                
    UserType - The User Type for the data. This is a user defined field to allow
        users to group data. If set to anything other than ALL_METADATA on input
        to Get/Set apis, only metadata of the specified User Type will be       
        returned.                                                               
                                                                                
        ALL_METADATA                                                            
                                                                                
        User Defined Values                                                     
                                                                                
    DataType - The Type of the data. Must be set to a valid value other than    
        ALL_METADATA for each data item. If set to anything other than          
        ALL_METADATA on input to Get/Set api's, only metadata of the            
        specified Data Type will be returned.                                   
             ALL_METADATA                                                       
             DWORD_METADATA                                                     
             STRING_METADATA                                                    
             BINARY_METADATA                                                    
             EXPANDSZ_METADATA                                                  
                                                                                
    DataLen - On input to the Set api, specifies the length of Data, in         
        bytes. Inprocess clients only need to specify this for binary data.     
        Remote clients need to specify this for all data types. For strings,    
        this must include the trailing '\0', eg. strlen(string) + 1.            
        On input to Get/Enum apis, specifies the size of the buffer pointed to  
        by Data. On successful output from Get/Enum API's, specifies the size of
        Data in bytes.                                                          
                                                                                
    Data - On input to the Set api, points to the data. On input to the         
        Get/Enum api's, points to a buffer to return the data in. On output     
        from the Get/Enum api's, points to the data. If the data is not         
        gotten by reference, the  pointer will be unchanged.                    
                                                                                
    DataTag - A tag for reference data. Not used in the Set api. Not used on    
        input to the Get/Enum api's. On successful return from the Get/Enum     
        api's, this is set to a nonzero tag if the data was gotten by reference,
        and set to 0 if the data was not gotten by reference.                   
*/                                                                              
typedef struct _METADATA_RECORD
    {
    DWORD dwMDIdentifier;
    DWORD dwMDAttributes;
    DWORD dwMDUserType;
    DWORD dwMDDataType;
    DWORD dwMDDataLen;
    unsigned char *pbMDData;
    DWORD dwMDDataTag;
    } 	METADATA_RECORD;

typedef struct _METADATA_RECORD *PMETADATA_RECORD;

/*                                                                              
    METADATA_GETALL_RECORD, is essentially the same as METADATA_RECORD, but is  
        used by MDGetAllMetaData. It is used the same as the corresponding      
        METADATA_RECORD values for the MDGetMetaData, with the following        
        exceptions:                                                             
                                                                                
    MDGetAllMetadata does not take the structure as input, but takes parameters 
        equivalent to Attributes, UserType, and DataType.                       
                                                                                
    On output, MDGetAllMetadata returns an array of METADATA_GETALL_RECORD.     
                                                                                
    DataOffset/Data - If the data is not returned by reference, DataOffset      
        contains the byte offset into the buffer provided. If the data is       
        returned by reference, Data contains a pointer to the data.             
                                                                                
                                                                                
    Because an opaque pointer to an array of _METADATA_GETALL_RECORD's is       
    passed on calls to GetAllData, its size must be the same on x86 and ia64.   
    So, the pbMDData member (not used by the public interface) has been         
    removed and a new structure _METADATA_GETALL_INTERNAL_RECORD has been       
    created for use by the callees of the internal interface                    
*/                                                                              
typedef struct _METADATA_GETALL_RECORD
    {
    DWORD dwMDIdentifier;
    DWORD dwMDAttributes;
    DWORD dwMDUserType;
    DWORD dwMDDataType;
    DWORD dwMDDataLen;
    DWORD dwMDDataOffset;
    DWORD dwMDDataTag;
    } 	METADATA_GETALL_RECORD;

typedef struct _METADATA_GETALL_RECORD *PMETADATA_GETALL_RECORD;

typedef struct _METADATA_GETALL_INTERNAL_RECORD
    {
    DWORD dwMDIdentifier;
    DWORD dwMDAttributes;
    DWORD dwMDUserType;
    DWORD dwMDDataType;
    DWORD dwMDDataLen;
    union 
        {
        DWORD_PTR dwMDDataOffset;
        unsigned char *pbMDData;
        } 	;
    DWORD dwMDDataTag;
    } 	METADATA_GETALL_INTERNAL_RECORD;

typedef struct _METADATA_GETALL_INTERNAL_RECORD *PMETADATA_GETALL_INTERNAL_RECORD;

typedef DWORD METADATA_HANDLE;

typedef DWORD *PMETADATA_HANDLE;

/*                                                                              
Handle Information                                                              
                                                                                
    Permissions - The permissions associated with the handle.                   
        METADATA_PERMISSION_READ                                                
        METADATA_PERMISSION_WRITE                                               
                                                                                
    SystemChangeNumber - The system change number at the time the handle was    
        allocated.                                                              
*/                                                                              
typedef struct _METADATA_HANDLE_INFO
    {
    DWORD dwMDPermissions;
    DWORD dwMDSystemChangeNumber;
    } 	METADATA_HANDLE_INFO;

typedef struct _METADATA_HANDLE_INFO *PMETADATA_HANDLE_INFO;

/*                                                                              
    Change Object - The structure passed to ComMDSinkNotify.                    
                                                                                
        Path - The path of the MetaObject modified.                             
                                                                                
        ChangeType - The types of changes made, from the flags below.           
                                                                                
        NumDataIDs - The number of data id's changed.                           
                                                                                
        DataIDs - An array of the data id's changed.                            
*/                                                                              
                                                                                
#define MD_CHANGE_OBJECT     MD_CHANGE_OBJECT_W                                 
#define PMD_CHANGE_OBJECT    PMD_CHANGE_OBJECT_W                                
typedef struct _MD_CHANGE_OBJECT_W
    {
    LPWSTR pszMDPath;
    DWORD dwMDChangeType;
    DWORD dwMDNumDataIDs;
    DWORD *pdwMDDataIDs;
    } 	MD_CHANGE_OBJECT_W;

typedef struct _MD_CHANGE_OBJECT_W *PMD_CHANGE_OBJECT_W;

/*                                                                              
                                                                                
Change Types                                                                    
                                                                                
    MD_CHANGE_TYPE_DELETE_OBJECT - The Meta Object was deleted.                 
                                                                                
    MD_CHANGE_TYPE_ADD_OBJECT - The Meta Object was added.                      
                                                                                
    MD_CHANGE_TYPE_SET_DATA - A data item was set.                              
                                                                                
    MD_CHANGE_TYPE_DELETE_DATA - A data item was deleted.                       
                                                                                
    MD_CHANGE_TYPE_RENAME_OBJECT - The Meta Object was renamed.                 
                                                                                
    MD_CHANGE_TYPE_RESTORE - The Meta Base was restored.                 
                                                                                
*/                                                                              
#define MD_CHANGE_TYPE_DELETE_OBJECT   0x00000001
#define MD_CHANGE_TYPE_ADD_OBJECT      0x00000002
#define MD_CHANGE_TYPE_SET_DATA        0x00000004
#define MD_CHANGE_TYPE_DELETE_DATA     0x00000008
#define MD_CHANGE_TYPE_RENAME_OBJECT   0x00000010
#define MD_CHANGE_TYPE_RESTORE         0x00000020
/*                                                                              
                                                                                
Max Change Entries - The maximum number of change entries that will be sent on  
    a single call to IMDCOMSINK::ComMDSinkNotify. If more notifications are     
    required, IMDCOMSINK::ComMDSinkNotify will be called multiple times.        
*/                                                                              
#define MD_MAX_CHANGE_ENTRIES          100
#endif


extern RPC_IF_HANDLE __MIDL_itf_mddefw_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mddefw_0000_0000_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\medparam.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for medparam.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __medparam_h__
#define __medparam_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMediaParamInfo_FWD_DEFINED__
#define __IMediaParamInfo_FWD_DEFINED__
typedef interface IMediaParamInfo IMediaParamInfo;
#endif 	/* __IMediaParamInfo_FWD_DEFINED__ */


#ifndef __IMediaParams_FWD_DEFINED__
#define __IMediaParams_FWD_DEFINED__
typedef interface IMediaParams IMediaParams;
#endif 	/* __IMediaParams_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "strmif.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_medparam_0000_0000 */
/* [local] */ 

typedef float MP_DATA;

typedef 
enum _MP_Type
    {	MPT_INT	= 0,
	MPT_FLOAT	= ( MPT_INT + 1 ) ,
	MPT_BOOL	= ( MPT_FLOAT + 1 ) ,
	MPT_ENUM	= ( MPT_BOOL + 1 ) ,
	MPT_MAX	= ( MPT_ENUM + 1 ) 
    } 	MP_TYPE;

#define	MPBOOL_TRUE	( 1 )

#define	MPBOOL_FALSE	( 0 )

typedef 
enum _MP_CURVE_TYPE
    {	MP_CURVE_JUMP	= 0x1,
	MP_CURVE_LINEAR	= 0x2,
	MP_CURVE_SQUARE	= 0x4,
	MP_CURVE_INVSQUARE	= 0x8,
	MP_CURVE_SINE	= 0x10
    } 	MP_CURVE_TYPE;

typedef DWORD MP_CAPS;

#define	MP_CAPS_CURVE_JUMP	( MP_CURVE_JUMP )

#define	MP_CAPS_CURVE_LINEAR	( MP_CURVE_LINEAR )

#define	MP_CAPS_CURVE_SQUARE	( MP_CURVE_SQUARE )

#define	MP_CAPS_CURVE_INVSQUARE	( MP_CURVE_INVSQUARE )

#define	MP_CAPS_CURVE_SINE	( MP_CURVE_SINE )

typedef struct _MP_PARAMINFO
    {
    MP_TYPE mpType;
    MP_CAPS mopCaps;
    MP_DATA mpdMinValue;
    MP_DATA mpdMaxValue;
    MP_DATA mpdNeutralValue;
    WCHAR szUnitText[ 32 ];
    WCHAR szLabel[ 32 ];
    } 	MP_PARAMINFO;

typedef DWORD DWORD;

#define	DWORD_ALLPARAMS	( -1 )

typedef DWORD MP_TIMEDATA;

DEFINE_GUID(GUID_TIME_REFERENCE,
0x93ad712b, 0xdaa0, 0x4ffe, 0xbc, 0x81, 0xb0, 0xce, 0x50, 0xf, 0xcd, 0xd9);
DEFINE_GUID(GUID_TIME_MUSIC,
0x574c49d, 0x5b04, 0x4b15, 0xa5, 0x42, 0xae, 0x28, 0x20, 0x30, 0x11, 0x7b);
DEFINE_GUID(GUID_TIME_SAMPLES,
0xa8593d05, 0xc43, 0x4984, 0x9a, 0x63, 0x97, 0xaf, 0x9e, 0x2, 0xc4, 0xc0);
typedef DWORD MP_FLAGS;

#define	MPF_ENVLP_STANDARD	( 0 )

#define	MPF_ENVLP_BEGIN_CURRENTVAL	( 0x1 )

#define	MPF_ENVLP_BEGIN_NEUTRALVAL	( 0x2 )

typedef struct _MP_ENVELOPE_SEGMENT
    {
    REFERENCE_TIME rtStart;
    REFERENCE_TIME rtEnd;
    MP_DATA valStart;
    MP_DATA valEnd;
    MP_CURVE_TYPE iCurve;
    MP_FLAGS flags;
    } 	MP_ENVELOPE_SEGMENT;

#define	MPF_PUNCHIN_REFTIME	( 0 )

#define	MPF_PUNCHIN_NOW	( 0x1 )

#define	MPF_PUNCHIN_STOPPED	( 0x2 )



extern RPC_IF_HANDLE __MIDL_itf_medparam_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_medparam_0000_0000_v0_0_s_ifspec;

#ifndef __IMediaParamInfo_INTERFACE_DEFINED__
#define __IMediaParamInfo_INTERFACE_DEFINED__

/* interface IMediaParamInfo */
/* [version][uuid][object] */ 


EXTERN_C const IID IID_IMediaParamInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6d6cbb60-a223-44aa-842f-a2f06750be6d")
    IMediaParamInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetParamCount( 
            /* [out] */ __RPC__out DWORD *pdwParams) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetParamInfo( 
            /* [in] */ DWORD dwParamIndex,
            /* [out] */ __RPC__out MP_PARAMINFO *pInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetParamText( 
            /* [in] */ DWORD dwParamIndex,
            /* [out] */ __RPC__deref_out_opt WCHAR **ppwchText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumTimeFormats( 
            /* [out] */ __RPC__out DWORD *pdwNumTimeFormats) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSupportedTimeFormat( 
            /* [in] */ DWORD dwFormatIndex,
            /* [out] */ __RPC__out GUID *pguidTimeFormat) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentTimeFormat( 
            /* [out] */ __RPC__out GUID *pguidTimeFormat,
            /* [out] */ __RPC__out MP_TIMEDATA *pTimeData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMediaParamInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMediaParamInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMediaParamInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMediaParamInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetParamCount )( 
            __RPC__in IMediaParamInfo * This,
            /* [out] */ __RPC__out DWORD *pdwParams);
        
        HRESULT ( STDMETHODCALLTYPE *GetParamInfo )( 
            __RPC__in IMediaParamInfo * This,
            /* [in] */ DWORD dwParamIndex,
            /* [out] */ __RPC__out MP_PARAMINFO *pInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetParamText )( 
            __RPC__in IMediaParamInfo * This,
            /* [in] */ DWORD dwParamIndex,
            /* [out] */ __RPC__deref_out_opt WCHAR **ppwchText);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumTimeFormats )( 
            __RPC__in IMediaParamInfo * This,
            /* [out] */ __RPC__out DWORD *pdwNumTimeFormats);
        
        HRESULT ( STDMETHODCALLTYPE *GetSupportedTimeFormat )( 
            __RPC__in IMediaParamInfo * This,
            /* [in] */ DWORD dwFormatIndex,
            /* [out] */ __RPC__out GUID *pguidTimeFormat);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentTimeFormat )( 
            __RPC__in IMediaParamInfo * This,
            /* [out] */ __RPC__out GUID *pguidTimeFormat,
            /* [out] */ __RPC__out MP_TIMEDATA *pTimeData);
        
        END_INTERFACE
    } IMediaParamInfoVtbl;

    interface IMediaParamInfo
    {
        CONST_VTBL struct IMediaParamInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMediaParamInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMediaParamInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMediaParamInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMediaParamInfo_GetParamCount(This,pdwParams)	\
    ( (This)->lpVtbl -> GetParamCount(This,pdwParams) ) 

#define IMediaParamInfo_GetParamInfo(This,dwParamIndex,pInfo)	\
    ( (This)->lpVtbl -> GetParamInfo(This,dwParamIndex,pInfo) ) 

#define IMediaParamInfo_GetParamText(This,dwParamIndex,ppwchText)	\
    ( (This)->lpVtbl -> GetParamText(This,dwParamIndex,ppwchText) ) 

#define IMediaParamInfo_GetNumTimeFormats(This,pdwNumTimeFormats)	\
    ( (This)->lpVtbl -> GetNumTimeFormats(This,pdwNumTimeFormats) ) 

#define IMediaParamInfo_GetSupportedTimeFormat(This,dwFormatIndex,pguidTimeFormat)	\
    ( (This)->lpVtbl -> GetSupportedTimeFormat(This,dwFormatIndex,pguidTimeFormat) ) 

#define IMediaParamInfo_GetCurrentTimeFormat(This,pguidTimeFormat,pTimeData)	\
    ( (This)->lpVtbl -> GetCurrentTimeFormat(This,pguidTimeFormat,pTimeData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMediaParamInfo_INTERFACE_DEFINED__ */


#ifndef __IMediaParams_INTERFACE_DEFINED__
#define __IMediaParams_INTERFACE_DEFINED__

/* interface IMediaParams */
/* [version][uuid][object] */ 


EXTERN_C const IID IID_IMediaParams;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6d6cbb61-a223-44aa-842f-a2f06750be6e")
    IMediaParams : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetParam( 
            /* [in] */ DWORD dwParamIndex,
            /* [out] */ __RPC__out MP_DATA *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetParam( 
            /* [in] */ DWORD dwParamIndex,
            /* [in] */ MP_DATA value) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddEnvelope( 
            /* [in] */ DWORD dwParamIndex,
            /* [in] */ DWORD cSegments,
            /* [in] */ __RPC__in MP_ENVELOPE_SEGMENT *pEnvelopeSegments) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FlushEnvelope( 
            /* [in] */ DWORD dwParamIndex,
            /* [in] */ REFERENCE_TIME refTimeStart,
            /* [in] */ REFERENCE_TIME refTimeEnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTimeFormat( 
            /* [in] */ GUID guidTimeFormat,
            /* [in] */ MP_TIMEDATA mpTimeData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMediaParamsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMediaParams * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMediaParams * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMediaParams * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetParam )( 
            __RPC__in IMediaParams * This,
            /* [in] */ DWORD dwParamIndex,
            /* [out] */ __RPC__out MP_DATA *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetParam )( 
            __RPC__in IMediaParams * This,
            /* [in] */ DWORD dwParamIndex,
            /* [in] */ MP_DATA value);
        
        HRESULT ( STDMETHODCALLTYPE *AddEnvelope )( 
            __RPC__in IMediaParams * This,
            /* [in] */ DWORD dwParamIndex,
            /* [in] */ DWORD cSegments,
            /* [in] */ __RPC__in MP_ENVELOPE_SEGMENT *pEnvelopeSegments);
        
        HRESULT ( STDMETHODCALLTYPE *FlushEnvelope )( 
            __RPC__in IMediaParams * This,
            /* [in] */ DWORD dwParamIndex,
            /* [in] */ REFERENCE_TIME refTimeStart,
            /* [in] */ REFERENCE_TIME refTimeEnd);
        
        HRESULT ( STDMETHODCALLTYPE *SetTimeFormat )( 
            __RPC__in IMediaParams * This,
            /* [in] */ GUID guidTimeFormat,
            /* [in] */ MP_TIMEDATA mpTimeData);
        
        END_INTERFACE
    } IMediaParamsVtbl;

    interface IMediaParams
    {
        CONST_VTBL struct IMediaParamsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMediaParams_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMediaParams_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMediaParams_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMediaParams_GetParam(This,dwParamIndex,pValue)	\
    ( (This)->lpVtbl -> GetParam(This,dwParamIndex,pValue) ) 

#define IMediaParams_SetParam(This,dwParamIndex,value)	\
    ( (This)->lpVtbl -> SetParam(This,dwParamIndex,value) ) 

#define IMediaParams_AddEnvelope(This,dwParamIndex,cSegments,pEnvelopeSegments)	\
    ( (This)->lpVtbl -> AddEnvelope(This,dwParamIndex,cSegments,pEnvelopeSegments) ) 

#define IMediaParams_FlushEnvelope(This,dwParamIndex,refTimeStart,refTimeEnd)	\
    ( (This)->lpVtbl -> FlushEnvelope(This,dwParamIndex,refTimeStart,refTimeEnd) ) 

#define IMediaParams_SetTimeFormat(This,guidTimeFormat,mpTimeData)	\
    ( (This)->lpVtbl -> SetTimeFormat(This,guidTimeFormat,mpTimeData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMediaParams_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\mediaobj.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mediaobj.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mediaobj_h__
#define __mediaobj_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMediaBuffer_FWD_DEFINED__
#define __IMediaBuffer_FWD_DEFINED__
typedef interface IMediaBuffer IMediaBuffer;
#endif 	/* __IMediaBuffer_FWD_DEFINED__ */


#ifndef __IMediaObject_FWD_DEFINED__
#define __IMediaObject_FWD_DEFINED__
typedef interface IMediaObject IMediaObject;
#endif 	/* __IMediaObject_FWD_DEFINED__ */


#ifndef __IEnumDMO_FWD_DEFINED__
#define __IEnumDMO_FWD_DEFINED__
typedef interface IEnumDMO IEnumDMO;
#endif 	/* __IEnumDMO_FWD_DEFINED__ */


#ifndef __IMediaObjectInPlace_FWD_DEFINED__
#define __IMediaObjectInPlace_FWD_DEFINED__
typedef interface IMediaObjectInPlace IMediaObjectInPlace;
#endif 	/* __IMediaObjectInPlace_FWD_DEFINED__ */


#ifndef __IDMOQualityControl_FWD_DEFINED__
#define __IDMOQualityControl_FWD_DEFINED__
typedef interface IDMOQualityControl IDMOQualityControl;
#endif 	/* __IDMOQualityControl_FWD_DEFINED__ */


#ifndef __IDMOVideoOutputOptimizations_FWD_DEFINED__
#define __IDMOVideoOutputOptimizations_FWD_DEFINED__
typedef interface IDMOVideoOutputOptimizations IDMOVideoOutputOptimizations;
#endif 	/* __IDMOVideoOutputOptimizations_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"
#include "objidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mediaobj_0000_0000 */
/* [local] */ 

#ifdef __strmif_h__
typedef AM_MEDIA_TYPE DMO_MEDIA_TYPE;
#else
typedef struct _DMOMediaType
    {
    GUID majortype;
    GUID subtype;
    BOOL bFixedSizeSamples;
    BOOL bTemporalCompression;
    ULONG lSampleSize;
    GUID formattype;
    IUnknown *pUnk;
    ULONG cbFormat;
    BYTE *pbFormat;
    } 	DMO_MEDIA_TYPE;

typedef LONGLONG REFERENCE_TIME;

#endif

enum _DMO_INPUT_DATA_BUFFER_FLAGS
    {	DMO_INPUT_DATA_BUFFERF_SYNCPOINT	= 0x1,
	DMO_INPUT_DATA_BUFFERF_TIME	= 0x2,
	DMO_INPUT_DATA_BUFFERF_TIMELENGTH	= 0x4
    } ;

enum _DMO_OUTPUT_DATA_BUFFER_FLAGS
    {	DMO_OUTPUT_DATA_BUFFERF_SYNCPOINT	= 0x1,
	DMO_OUTPUT_DATA_BUFFERF_TIME	= 0x2,
	DMO_OUTPUT_DATA_BUFFERF_TIMELENGTH	= 0x4,
	DMO_OUTPUT_DATA_BUFFERF_INCOMPLETE	= 0x1000000
    } ;

enum _DMO_INPUT_STATUS_FLAGS
    {	DMO_INPUT_STATUSF_ACCEPT_DATA	= 0x1
    } ;

enum _DMO_INPUT_STREAM_INFO_FLAGS
    {	DMO_INPUT_STREAMF_WHOLE_SAMPLES	= 0x1,
	DMO_INPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER	= 0x2,
	DMO_INPUT_STREAMF_FIXED_SAMPLE_SIZE	= 0x4,
	DMO_INPUT_STREAMF_HOLDS_BUFFERS	= 0x8
    } ;

enum _DMO_OUTPUT_STREAM_INFO_FLAGS
    {	DMO_OUTPUT_STREAMF_WHOLE_SAMPLES	= 0x1,
	DMO_OUTPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER	= 0x2,
	DMO_OUTPUT_STREAMF_FIXED_SAMPLE_SIZE	= 0x4,
	DMO_OUTPUT_STREAMF_DISCARDABLE	= 0x8,
	DMO_OUTPUT_STREAMF_OPTIONAL	= 0x10
    } ;

enum _DMO_SET_TYPE_FLAGS
    {	DMO_SET_TYPEF_TEST_ONLY	= 0x1,
	DMO_SET_TYPEF_CLEAR	= 0x2
    } ;

enum _DMO_PROCESS_OUTPUT_FLAGS
    {	DMO_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER	= 0x1
    } ;


extern RPC_IF_HANDLE __MIDL_itf_mediaobj_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mediaobj_0000_0000_v0_0_s_ifspec;

#ifndef __IMediaBuffer_INTERFACE_DEFINED__
#define __IMediaBuffer_INTERFACE_DEFINED__

/* interface IMediaBuffer */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMediaBuffer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("59eff8b9-938c-4a26-82f2-95cb84cdc837")
    IMediaBuffer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetLength( 
            DWORD cbLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMaxLength( 
            /* [annotation][out] */ 
            __out  DWORD *pcbMaxLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBufferAndLength( 
            /* [annotation][out] */ 
            __deref_opt_out_bcount(*pcbLength)  BYTE **ppBuffer,
            /* [annotation][out] */ 
            __out_opt  DWORD *pcbLength) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMediaBufferVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMediaBuffer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMediaBuffer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMediaBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetLength )( 
            IMediaBuffer * This,
            DWORD cbLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetMaxLength )( 
            IMediaBuffer * This,
            /* [annotation][out] */ 
            __out  DWORD *pcbMaxLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetBufferAndLength )( 
            IMediaBuffer * This,
            /* [annotation][out] */ 
            __deref_opt_out_bcount(*pcbLength)  BYTE **ppBuffer,
            /* [annotation][out] */ 
            __out_opt  DWORD *pcbLength);
        
        END_INTERFACE
    } IMediaBufferVtbl;

    interface IMediaBuffer
    {
        CONST_VTBL struct IMediaBufferVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMediaBuffer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMediaBuffer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMediaBuffer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMediaBuffer_SetLength(This,cbLength)	\
    ( (This)->lpVtbl -> SetLength(This,cbLength) ) 

#define IMediaBuffer_GetMaxLength(This,pcbMaxLength)	\
    ( (This)->lpVtbl -> GetMaxLength(This,pcbMaxLength) ) 

#define IMediaBuffer_GetBufferAndLength(This,ppBuffer,pcbLength)	\
    ( (This)->lpVtbl -> GetBufferAndLength(This,ppBuffer,pcbLength) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMediaBuffer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mediaobj_0000_0001 */
/* [local] */ 

typedef struct _DMO_OUTPUT_DATA_BUFFER
    {
    IMediaBuffer *pBuffer;
    DWORD dwStatus;
    REFERENCE_TIME rtTimestamp;
    REFERENCE_TIME rtTimelength;
    } 	DMO_OUTPUT_DATA_BUFFER;

typedef struct _DMO_OUTPUT_DATA_BUFFER *PDMO_OUTPUT_DATA_BUFFER;



extern RPC_IF_HANDLE __MIDL_itf_mediaobj_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mediaobj_0000_0001_v0_0_s_ifspec;

#ifndef __IMediaObject_INTERFACE_DEFINED__
#define __IMediaObject_INTERFACE_DEFINED__

/* interface IMediaObject */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMediaObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d8ad0f58-5494-4102-97c5-ec798e59bcf4")
    IMediaObject : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStreamCount( 
            /* [annotation][out] */ 
            __out  DWORD *pcInputStreams,
            /* [annotation][out] */ 
            __out  DWORD *pcOutputStreams) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputStreamInfo( 
            DWORD dwInputStreamIndex,
            /* [annotation][out] */ 
            __out  DWORD *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputStreamInfo( 
            DWORD dwOutputStreamIndex,
            /* [annotation][out] */ 
            __out  DWORD *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputType( 
            DWORD dwInputStreamIndex,
            DWORD dwTypeIndex,
            /* [annotation][out] */ 
            __out_opt  DMO_MEDIA_TYPE *pmt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputType( 
            DWORD dwOutputStreamIndex,
            DWORD dwTypeIndex,
            /* [annotation][out] */ 
            __out_opt  DMO_MEDIA_TYPE *pmt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetInputType( 
            DWORD dwInputStreamIndex,
            /* [annotation][in] */ 
            __in_opt  const DMO_MEDIA_TYPE *pmt,
            DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOutputType( 
            DWORD dwOutputStreamIndex,
            /* [annotation][in] */ 
            __in_opt  const DMO_MEDIA_TYPE *pmt,
            DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputCurrentType( 
            DWORD dwInputStreamIndex,
            /* [annotation][out] */ 
            __out  DMO_MEDIA_TYPE *pmt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputCurrentType( 
            DWORD dwOutputStreamIndex,
            /* [annotation][out] */ 
            __out  DMO_MEDIA_TYPE *pmt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputSizeInfo( 
            DWORD dwInputStreamIndex,
            /* [annotation][out] */ 
            __out  DWORD *pcbSize,
            /* [annotation][out] */ 
            __out  DWORD *pcbMaxLookahead,
            /* [annotation][out] */ 
            __out  DWORD *pcbAlignment) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputSizeInfo( 
            DWORD dwOutputStreamIndex,
            /* [annotation][out] */ 
            __out  DWORD *pcbSize,
            /* [annotation][out] */ 
            __out  DWORD *pcbAlignment) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputMaxLatency( 
            DWORD dwInputStreamIndex,
            /* [annotation][out] */ 
            __out  REFERENCE_TIME *prtMaxLatency) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetInputMaxLatency( 
            DWORD dwInputStreamIndex,
            REFERENCE_TIME rtMaxLatency) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Flush( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Discontinuity( 
            DWORD dwInputStreamIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AllocateStreamingResources( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FreeStreamingResources( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputStatus( 
            DWORD dwInputStreamIndex,
            /* [annotation][out] */ 
            __out  DWORD *dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ProcessInput( 
            DWORD dwInputStreamIndex,
            IMediaBuffer *pBuffer,
            DWORD dwFlags,
            REFERENCE_TIME rtTimestamp,
            REFERENCE_TIME rtTimelength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ProcessOutput( 
            DWORD dwFlags,
            DWORD cOutputBufferCount,
            /* [annotation][size_is][out][in] */ 
            __out_ecount(cOutputBufferCount)  DMO_OUTPUT_DATA_BUFFER *pOutputBuffers,
            /* [annotation][out] */ 
            __out  DWORD *pdwStatus) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Lock( 
            LONG bLock) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMediaObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMediaObject * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMediaObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMediaObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamCount )( 
            IMediaObject * This,
            /* [annotation][out] */ 
            __out  DWORD *pcInputStreams,
            /* [annotation][out] */ 
            __out  DWORD *pcOutputStreams);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputStreamInfo )( 
            IMediaObject * This,
            DWORD dwInputStreamIndex,
            /* [annotation][out] */ 
            __out  DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputStreamInfo )( 
            IMediaObject * This,
            DWORD dwOutputStreamIndex,
            /* [annotation][out] */ 
            __out  DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputType )( 
            IMediaObject * This,
            DWORD dwInputStreamIndex,
            DWORD dwTypeIndex,
            /* [annotation][out] */ 
            __out_opt  DMO_MEDIA_TYPE *pmt);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputType )( 
            IMediaObject * This,
            DWORD dwOutputStreamIndex,
            DWORD dwTypeIndex,
            /* [annotation][out] */ 
            __out_opt  DMO_MEDIA_TYPE *pmt);
        
        HRESULT ( STDMETHODCALLTYPE *SetInputType )( 
            IMediaObject * This,
            DWORD dwInputStreamIndex,
            /* [annotation][in] */ 
            __in_opt  const DMO_MEDIA_TYPE *pmt,
            DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetOutputType )( 
            IMediaObject * This,
            DWORD dwOutputStreamIndex,
            /* [annotation][in] */ 
            __in_opt  const DMO_MEDIA_TYPE *pmt,
            DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputCurrentType )( 
            IMediaObject * This,
            DWORD dwInputStreamIndex,
            /* [annotation][out] */ 
            __out  DMO_MEDIA_TYPE *pmt);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputCurrentType )( 
            IMediaObject * This,
            DWORD dwOutputStreamIndex,
            /* [annotation][out] */ 
            __out  DMO_MEDIA_TYPE *pmt);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputSizeInfo )( 
            IMediaObject * This,
            DWORD dwInputStreamIndex,
            /* [annotation][out] */ 
            __out  DWORD *pcbSize,
            /* [annotation][out] */ 
            __out  DWORD *pcbMaxLookahead,
            /* [annotation][out] */ 
            __out  DWORD *pcbAlignment);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputSizeInfo )( 
            IMediaObject * This,
            DWORD dwOutputStreamIndex,
            /* [annotation][out] */ 
            __out  DWORD *pcbSize,
            /* [annotation][out] */ 
            __out  DWORD *pcbAlignment);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputMaxLatency )( 
            IMediaObject * This,
            DWORD dwInputStreamIndex,
            /* [annotation][out] */ 
            __out  REFERENCE_TIME *prtMaxLatency);
        
        HRESULT ( STDMETHODCALLTYPE *SetInputMaxLatency )( 
            IMediaObject * This,
            DWORD dwInputStreamIndex,
            REFERENCE_TIME rtMaxLatency);
        
        HRESULT ( STDMETHODCALLTYPE *Flush )( 
            IMediaObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *Discontinuity )( 
            IMediaObject * This,
            DWORD dwInputStreamIndex);
        
        HRESULT ( STDMETHODCALLTYPE *AllocateStreamingResources )( 
            IMediaObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *FreeStreamingResources )( 
            IMediaObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputStatus )( 
            IMediaObject * This,
            DWORD dwInputStreamIndex,
            /* [annotation][out] */ 
            __out  DWORD *dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *ProcessInput )( 
            IMediaObject * This,
            DWORD dwInputStreamIndex,
            IMediaBuffer *pBuffer,
            DWORD dwFlags,
            REFERENCE_TIME rtTimestamp,
            REFERENCE_TIME rtTimelength);
        
        HRESULT ( STDMETHODCALLTYPE *ProcessOutput )( 
            IMediaObject * This,
            DWORD dwFlags,
            DWORD cOutputBufferCount,
            /* [annotation][size_is][out][in] */ 
            __out_ecount(cOutputBufferCount)  DMO_OUTPUT_DATA_BUFFER *pOutputBuffers,
            /* [annotation][out] */ 
            __out  DWORD *pdwStatus);
        
        HRESULT ( STDMETHODCALLTYPE *Lock )( 
            IMediaObject * This,
            LONG bLock);
        
        END_INTERFACE
    } IMediaObjectVtbl;

    interface IMediaObject
    {
        CONST_VTBL struct IMediaObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMediaObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMediaObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMediaObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMediaObject_GetStreamCount(This,pcInputStreams,pcOutputStreams)	\
    ( (This)->lpVtbl -> GetStreamCount(This,pcInputStreams,pcOutputStreams) ) 

#define IMediaObject_GetInputStreamInfo(This,dwInputStreamIndex,pdwFlags)	\
    ( (This)->lpVtbl -> GetInputStreamInfo(This,dwInputStreamIndex,pdwFlags) ) 

#define IMediaObject_GetOutputStreamInfo(This,dwOutputStreamIndex,pdwFlags)	\
    ( (This)->lpVtbl -> GetOutputStreamInfo(This,dwOutputStreamIndex,pdwFlags) ) 

#define IMediaObject_GetInputType(This,dwInputStreamIndex,dwTypeIndex,pmt)	\
    ( (This)->lpVtbl -> GetInputType(This,dwInputStreamIndex,dwTypeIndex,pmt) ) 

#define IMediaObject_GetOutputType(This,dwOutputStreamIndex,dwTypeIndex,pmt)	\
    ( (This)->lpVtbl -> GetOutputType(This,dwOutputStreamIndex,dwTypeIndex,pmt) ) 

#define IMediaObject_SetInputType(This,dwInputStreamIndex,pmt,dwFlags)	\
    ( (This)->lpVtbl -> SetInputType(This,dwInputStreamIndex,pmt,dwFlags) ) 

#define IMediaObject_SetOutputType(This,dwOutputStreamIndex,pmt,dwFlags)	\
    ( (This)->lpVtbl -> SetOutputType(This,dwOutputStreamIndex,pmt,dwFlags) ) 

#define IMediaObject_GetInputCurrentType(This,dwInputStreamIndex,pmt)	\
    ( (This)->lpVtbl -> GetInputCurrentType(This,dwInputStreamIndex,pmt) ) 

#define IMediaObject_GetOutputCurrentType(This,dwOutputStreamIndex,pmt)	\
    ( (This)->lpVtbl -> GetOutputCurrentType(This,dwOutputStreamIndex,pmt) ) 

#define IMediaObject_GetInputSizeInfo(This,dwInputStreamIndex,pcbSize,pcbMaxLookahead,pcbAlignment)	\
    ( (This)->lpVtbl -> GetInputSizeInfo(This,dwInputStreamIndex,pcbSize,pcbMaxLookahead,pcbAlignment) ) 

#define IMediaObject_GetOutputSizeInfo(This,dwOutputStreamIndex,pcbSize,pcbAlignment)	\
    ( (This)->lpVtbl -> GetOutputSizeInfo(This,dwOutputStreamIndex,pcbSize,pcbAlignment) ) 

#define IMediaObject_GetInputMaxLatency(This,dwInputStreamIndex,prtMaxLatency)	\
    ( (This)->lpVtbl -> GetInputMaxLatency(This,dwInputStreamIndex,prtMaxLatency) ) 

#define IMediaObject_SetInputMaxLatency(This,dwInputStreamIndex,rtMaxLatency)	\
    ( (This)->lpVtbl -> SetInputMaxLatency(This,dwInputStreamIndex,rtMaxLatency) ) 

#define IMediaObject_Flush(This)	\
    ( (This)->lpVtbl -> Flush(This) ) 

#define IMediaObject_Discontinuity(This,dwInputStreamIndex)	\
    ( (This)->lpVtbl -> Discontinuity(This,dwInputStreamIndex) ) 

#define IMediaObject_AllocateStreamingResources(This)	\
    ( (This)->lpVtbl -> AllocateStreamingResources(This) ) 

#define IMediaObject_FreeStreamingResources(This)	\
    ( (This)->lpVtbl -> FreeStreamingResources(This) ) 

#define IMediaObject_GetInputStatus(This,dwInputStreamIndex,dwFlags)	\
    ( (This)->lpVtbl -> GetInputStatus(This,dwInputStreamIndex,dwFlags) ) 

#define IMediaObject_ProcessInput(This,dwInputStreamIndex,pBuffer,dwFlags,rtTimestamp,rtTimelength)	\
    ( (This)->lpVtbl -> ProcessInput(This,dwInputStreamIndex,pBuffer,dwFlags,rtTimestamp,rtTimelength) ) 

#define IMediaObject_ProcessOutput(This,dwFlags,cOutputBufferCount,pOutputBuffers,pdwStatus)	\
    ( (This)->lpVtbl -> ProcessOutput(This,dwFlags,cOutputBufferCount,pOutputBuffers,pdwStatus) ) 

#define IMediaObject_Lock(This,bLock)	\
    ( (This)->lpVtbl -> Lock(This,bLock) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMediaObject_INTERFACE_DEFINED__ */


#ifndef __IEnumDMO_INTERFACE_DEFINED__
#define __IEnumDMO_INTERFACE_DEFINED__

/* interface IEnumDMO */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IEnumDMO;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2c3cd98a-2bfa-4a53-9c27-5249ba64ba0f")
    IEnumDMO : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            DWORD cItemsToFetch,
            /* [annotation][length_is][size_is][out] */ 
            __out_ecount_part(cItemsToFetch, *pcItemsFetched)  CLSID *pCLSID,
            /* [annotation][string][length_is][size_is][out] */ 
            __out_ecount_part(cItemsToFetch, *pcItemsFetched)  LPWSTR *Names,
            /* [annotation][out] */ 
            __out  DWORD *pcItemsFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            DWORD cItemsToSkip) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [annotation][out] */ 
            __out  IEnumDMO **ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumDMOVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumDMO * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumDMO * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumDMO * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumDMO * This,
            DWORD cItemsToFetch,
            /* [annotation][length_is][size_is][out] */ 
            __out_ecount_part(cItemsToFetch, *pcItemsFetched)  CLSID *pCLSID,
            /* [annotation][string][length_is][size_is][out] */ 
            __out_ecount_part(cItemsToFetch, *pcItemsFetched)  LPWSTR *Names,
            /* [annotation][out] */ 
            __out  DWORD *pcItemsFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumDMO * This,
            DWORD cItemsToSkip);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumDMO * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumDMO * This,
            /* [annotation][out] */ 
            __out  IEnumDMO **ppEnum);
        
        END_INTERFACE
    } IEnumDMOVtbl;

    interface IEnumDMO
    {
        CONST_VTBL struct IEnumDMOVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumDMO_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumDMO_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumDMO_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumDMO_Next(This,cItemsToFetch,pCLSID,Names,pcItemsFetched)	\
    ( (This)->lpVtbl -> Next(This,cItemsToFetch,pCLSID,Names,pcItemsFetched) ) 

#define IEnumDMO_Skip(This,cItemsToSkip)	\
    ( (This)->lpVtbl -> Skip(This,cItemsToSkip) ) 

#define IEnumDMO_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumDMO_Clone(This,ppEnum)	\
    ( (This)->lpVtbl -> Clone(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumDMO_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mediaobj_0000_0003 */
/* [local] */ 


enum _DMO_INPLACE_PROCESS_FLAGS
    {	DMO_INPLACE_NORMAL	= 0,
	DMO_INPLACE_ZERO	= 0x1
    } ;


extern RPC_IF_HANDLE __MIDL_itf_mediaobj_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mediaobj_0000_0003_v0_0_s_ifspec;

#ifndef __IMediaObjectInPlace_INTERFACE_DEFINED__
#define __IMediaObjectInPlace_INTERFACE_DEFINED__

/* interface IMediaObjectInPlace */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMediaObjectInPlace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("651b9ad0-0fc7-4aa9-9538-d89931010741")
    IMediaObjectInPlace : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Process( 
            /* [in] */ ULONG ulSize,
            /* [annotation][size_is][out][in] */ 
            __out_bcount(ulSize)  BYTE *pData,
            /* [in] */ REFERENCE_TIME refTimeStart,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [annotation][out] */ 
            __out  IMediaObjectInPlace **ppMediaObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLatency( 
            /* [annotation][out] */ 
            __out  REFERENCE_TIME *pLatencyTime) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMediaObjectInPlaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMediaObjectInPlace * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMediaObjectInPlace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMediaObjectInPlace * This);
        
        HRESULT ( STDMETHODCALLTYPE *Process )( 
            IMediaObjectInPlace * This,
            /* [in] */ ULONG ulSize,
            /* [annotation][size_is][out][in] */ 
            __out_bcount(ulSize)  BYTE *pData,
            /* [in] */ REFERENCE_TIME refTimeStart,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IMediaObjectInPlace * This,
            /* [annotation][out] */ 
            __out  IMediaObjectInPlace **ppMediaObject);
        
        HRESULT ( STDMETHODCALLTYPE *GetLatency )( 
            IMediaObjectInPlace * This,
            /* [annotation][out] */ 
            __out  REFERENCE_TIME *pLatencyTime);
        
        END_INTERFACE
    } IMediaObjectInPlaceVtbl;

    interface IMediaObjectInPlace
    {
        CONST_VTBL struct IMediaObjectInPlaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMediaObjectInPlace_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMediaObjectInPlace_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMediaObjectInPlace_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMediaObjectInPlace_Process(This,ulSize,pData,refTimeStart,dwFlags)	\
    ( (This)->lpVtbl -> Process(This,ulSize,pData,refTimeStart,dwFlags) ) 

#define IMediaObjectInPlace_Clone(This,ppMediaObject)	\
    ( (This)->lpVtbl -> Clone(This,ppMediaObject) ) 

#define IMediaObjectInPlace_GetLatency(This,pLatencyTime)	\
    ( (This)->lpVtbl -> GetLatency(This,pLatencyTime) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMediaObjectInPlace_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mediaobj_0000_0004 */
/* [local] */ 


enum _DMO_QUALITY_STATUS_FLAGS
    {	DMO_QUALITY_STATUS_ENABLED	= 0x1
    } ;


extern RPC_IF_HANDLE __MIDL_itf_mediaobj_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mediaobj_0000_0004_v0_0_s_ifspec;

#ifndef __IDMOQualityControl_INTERFACE_DEFINED__
#define __IDMOQualityControl_INTERFACE_DEFINED__

/* interface IDMOQualityControl */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IDMOQualityControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("65abea96-cf36-453f-af8a-705e98f16260")
    IDMOQualityControl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetNow( 
            /* [in] */ REFERENCE_TIME rtNow) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStatus( 
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStatus( 
            /* [annotation][out] */ 
            __out  DWORD *pdwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDMOQualityControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDMOQualityControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDMOQualityControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDMOQualityControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetNow )( 
            IDMOQualityControl * This,
            /* [in] */ REFERENCE_TIME rtNow);
        
        HRESULT ( STDMETHODCALLTYPE *SetStatus )( 
            IDMOQualityControl * This,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetStatus )( 
            IDMOQualityControl * This,
            /* [annotation][out] */ 
            __out  DWORD *pdwFlags);
        
        END_INTERFACE
    } IDMOQualityControlVtbl;

    interface IDMOQualityControl
    {
        CONST_VTBL struct IDMOQualityControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDMOQualityControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDMOQualityControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDMOQualityControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDMOQualityControl_SetNow(This,rtNow)	\
    ( (This)->lpVtbl -> SetNow(This,rtNow) ) 

#define IDMOQualityControl_SetStatus(This,dwFlags)	\
    ( (This)->lpVtbl -> SetStatus(This,dwFlags) ) 

#define IDMOQualityControl_GetStatus(This,pdwFlags)	\
    ( (This)->lpVtbl -> GetStatus(This,pdwFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDMOQualityControl_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mediaobj_0000_0005 */
/* [local] */ 


enum _DMO_VIDEO_OUTPUT_STREAM_FLAGS
    {	DMO_VOSF_NEEDS_PREVIOUS_SAMPLE	= 0x1
    } ;


extern RPC_IF_HANDLE __MIDL_itf_mediaobj_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mediaobj_0000_0005_v0_0_s_ifspec;

#ifndef __IDMOVideoOutputOptimizations_INTERFACE_DEFINED__
#define __IDMOVideoOutputOptimizations_INTERFACE_DEFINED__

/* interface IDMOVideoOutputOptimizations */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IDMOVideoOutputOptimizations;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("be8f4f4e-5b16-4d29-b350-7f6b5d9298ac")
    IDMOVideoOutputOptimizations : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE QueryOperationModePreferences( 
            ULONG ulOutputStreamIndex,
            /* [annotation] */ 
            __out  DWORD *pdwRequestedCapabilities) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOperationMode( 
            ULONG ulOutputStreamIndex,
            DWORD dwEnabledFeatures) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentOperationMode( 
            ULONG ulOutputStreamIndex,
            /* [annotation] */ 
            __out  DWORD *pdwEnabledFeatures) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentSampleRequirements( 
            ULONG ulOutputStreamIndex,
            /* [annotation] */ 
            __out  DWORD *pdwRequestedFeatures) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDMOVideoOutputOptimizationsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDMOVideoOutputOptimizations * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDMOVideoOutputOptimizations * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDMOVideoOutputOptimizations * This);
        
        HRESULT ( STDMETHODCALLTYPE *QueryOperationModePreferences )( 
            IDMOVideoOutputOptimizations * This,
            ULONG ulOutputStreamIndex,
            /* [annotation] */ 
            __out  DWORD *pdwRequestedCapabilities);
        
        HRESULT ( STDMETHODCALLTYPE *SetOperationMode )( 
            IDMOVideoOutputOptimizations * This,
            ULONG ulOutputStreamIndex,
            DWORD dwEnabledFeatures);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentOperationMode )( 
            IDMOVideoOutputOptimizations * This,
            ULONG ulOutputStreamIndex,
            /* [annotation] */ 
            __out  DWORD *pdwEnabledFeatures);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentSampleRequirements )( 
            IDMOVideoOutputOptimizations * This,
            ULONG ulOutputStreamIndex,
            /* [annotation] */ 
            __out  DWORD *pdwRequestedFeatures);
        
        END_INTERFACE
    } IDMOVideoOutputOptimizationsVtbl;

    interface IDMOVideoOutputOptimizations
    {
        CONST_VTBL struct IDMOVideoOutputOptimizationsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDMOVideoOutputOptimizations_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDMOVideoOutputOptimizations_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDMOVideoOutputOptimizations_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDMOVideoOutputOptimizations_QueryOperationModePreferences(This,ulOutputStreamIndex,pdwRequestedCapabilities)	\
    ( (This)->lpVtbl -> QueryOperationModePreferences(This,ulOutputStreamIndex,pdwRequestedCapabilities) ) 

#define IDMOVideoOutputOptimizations_SetOperationMode(This,ulOutputStreamIndex,dwEnabledFeatures)	\
    ( (This)->lpVtbl -> SetOperationMode(This,ulOutputStreamIndex,dwEnabledFeatures) ) 

#define IDMOVideoOutputOptimizations_GetCurrentOperationMode(This,ulOutputStreamIndex,pdwEnabledFeatures)	\
    ( (This)->lpVtbl -> GetCurrentOperationMode(This,ulOutputStreamIndex,pdwEnabledFeatures) ) 

#define IDMOVideoOutputOptimizations_GetCurrentSampleRequirements(This,ulOutputStreamIndex,pdwRequestedFeatures)	\
    ( (This)->lpVtbl -> GetCurrentSampleRequirements(This,ulOutputStreamIndex,pdwRequestedFeatures) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDMOVideoOutputOptimizations_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\mfmp2dlna.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mfmp2dlna.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mfmp2dlna_h__
#define __mfmp2dlna_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMFDLNASinkInit_FWD_DEFINED__
#define __IMFDLNASinkInit_FWD_DEFINED__
typedef interface IMFDLNASinkInit IMFDLNASinkInit;
#endif 	/* __IMFDLNASinkInit_FWD_DEFINED__ */


/* header files for imported files */
#include "mfobjects.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mfmp2dlna_0000_0000 */
/* [local] */ 

#if (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfmp2dlna_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfmp2dlna_0000_0000_v0_0_s_ifspec;

#ifndef __IMFDLNASinkInit_INTERFACE_DEFINED__
#define __IMFDLNASinkInit_INTERFACE_DEFINED__

/* interface IMFDLNASinkInit */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFDLNASinkInit;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0c012799-1b61-4c10-bda9-04445be5f561")
    IMFDLNASinkInit : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            IMFByteStream *pByteStream,
            BOOL fPal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFDLNASinkInitVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFDLNASinkInit * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFDLNASinkInit * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFDLNASinkInit * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IMFDLNASinkInit * This,
            IMFByteStream *pByteStream,
            BOOL fPal);
        
        END_INTERFACE
    } IMFDLNASinkInitVtbl;

    interface IMFDLNASinkInit
    {
        CONST_VTBL struct IMFDLNASinkInitVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFDLNASinkInit_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFDLNASinkInit_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFDLNASinkInit_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFDLNASinkInit_Initialize(This,pByteStream,fPal)	\
    ( (This)->lpVtbl -> Initialize(This,pByteStream,fPal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFDLNASinkInit_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfmp2dlna_0000_0001 */
/* [local] */ 

EXTERN_GUID( CLSID_MPEG2DLNASink, 0xfa5fe7c5, 0x6a1d, 0x4b11, 0xb4, 0x1f, 0xf9, 0x59, 0xd6, 0xc7, 0x65, 0x00 );
EXTERN_GUID( MF_MP2DLNA_USE_MMCSS, 0x54f3e2ee, 0xa2a2, 0x497d, 0x98, 0x34, 0x97, 0x3a, 0xfd, 0xe5, 0x21, 0xeb );
EXTERN_GUID( MF_MP2DLNA_VIDEO_BIT_RATE, 0xe88548de, 0x73b4, 0x42d7, 0x9c, 0x75, 0xad, 0xfa, 0xa, 0x2a, 0x6e, 0x4c );
EXTERN_GUID( MF_MP2DLNA_AUDIO_BIT_RATE, 0x2d1c070e, 0x2b5f, 0x4ab3, 0xa7, 0xe6, 0x8d, 0x94, 0x3b, 0xa8, 0xd0, 0x0a);
EXTERN_GUID( MF_MP2DLNA_ENCODE_QUALITY, 0xb52379d7, 0x1d46, 0x4fb6, 0xa3, 0x17, 0xa4, 0xa5, 0xf6, 0x09, 0x59, 0xf8);
EXTERN_GUID( MF_MP2DLNA_STATISTICS, 0x75e488a3, 0xd5ad, 0x4898, 0x85, 0xe0, 0xbc, 0xce, 0x24, 0xa7, 0x22, 0xd7 );
typedef struct _MFMPEG2DLNASINKSTATS         
{                                            
   DWORDLONG  cBytesWritten;                 
   BOOL       fPAL;                          
   DWORD      fccVideo;                      
   DWORD      dwVideoWidth;                  
   DWORD      dwVideoHeight;                 
   DWORDLONG  cVideoFramesReceived;          
   DWORDLONG  cVideoFramesEncoded;           
   DWORDLONG  cVideoFramesSkipped;           
   DWORDLONG  cBlackVideoFramesEncoded;      
   DWORDLONG  cVideoFramesDuplicated;        
   DWORD      cAudioSamplesPerSec;           
   DWORD      cAudioChannels;                
   DWORDLONG  cAudioBytesReceived;           
   DWORDLONG  cAudioFramesEncoded;           
} MFMPEG2DLNASINKSTATS;                      
#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfmp2dlna_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfmp2dlna_0000_0001_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\mergemod.h ===
/*****************************************************************************\
                                                                             
 mergemod.h - - Interface for MergeMod COM object                            
                                                                             
 Version 2.0                                                                 
                                                                             
 NOTES:  All strings are of type BSTR. For [in] strings, LPCWSTR may be      
 safely used instead, the object will not try to free this memory.           
 All [out] BSTR values must be released by the client.                       
                                                                             
 Copyright (c) Microsoft Corp. All rights reserved.          
                                                                             
\*****************************************************************************/

#include "rpc.h"
#include "rpcndr.h"
#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mergemod_h__
#define __mergemod_h__

#ifndef _WIN32_MSM
#define _WIN32_MSM   100
#endif // !_WIN32_MSM

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __IEnumMsmString_FWD_DEFINED__
#define __IEnumMsmString_FWD_DEFINED__
typedef interface IEnumMsmString IEnumMsmString;
#endif 	/* __IEnumMsmString_FWD_DEFINED__ */


#ifndef __IMsmStrings_FWD_DEFINED__
#define __IMsmStrings_FWD_DEFINED__
typedef interface IMsmStrings IMsmStrings;
#endif 	/* __IMsmStrings_FWD_DEFINED__ */


#ifndef __IMsmError_FWD_DEFINED__
#define __IMsmError_FWD_DEFINED__
typedef interface IMsmError IMsmError;
#endif 	/* __IMsmError_FWD_DEFINED__ */


#ifndef __IEnumMsmError_FWD_DEFINED__
#define __IEnumMsmError_FWD_DEFINED__
typedef interface IEnumMsmError IEnumMsmError;
#endif 	/* __IEnumMsmError_FWD_DEFINED__ */


#ifndef __IMsmErrors_FWD_DEFINED__
#define __IMsmErrors_FWD_DEFINED__
typedef interface IMsmErrors IMsmErrors;
#endif 	/* __IMsmErrors_FWD_DEFINED__ */


#ifndef __IMsmDependency_FWD_DEFINED__
#define __IMsmDependency_FWD_DEFINED__
typedef interface IMsmDependency IMsmDependency;
#endif 	/* __IMsmDependency_FWD_DEFINED__ */


#ifndef __IEnumMsmDependency_FWD_DEFINED__
#define __IEnumMsmDependency_FWD_DEFINED__
typedef interface IEnumMsmDependency IEnumMsmDependency;
#endif 	/* __IEnumMsmDependency_FWD_DEFINED__ */


#ifndef __IMsmDependencies_FWD_DEFINED__
#define __IMsmDependencies_FWD_DEFINED__
typedef interface IMsmDependencies IMsmDependencies;
#endif 	/* __IMsmDependencies_FWD_DEFINED__ */


#ifndef __IMsmMerge_FWD_DEFINED__
#define __IMsmMerge_FWD_DEFINED__
typedef interface IMsmMerge IMsmMerge;
#endif 	/* __IMsmMerge_FWD_DEFINED__ */


#ifndef __IMsmGetFiles_FWD_DEFINED__
#define __IMsmGetFiles_FWD_DEFINED__
typedef interface IMsmGetFiles IMsmGetFiles;
#endif 	/* __IMsmGetFiles_FWD_DEFINED__ */


#ifndef __IMsmStrings_FWD_DEFINED__
#define __IMsmStrings_FWD_DEFINED__
typedef interface IMsmStrings IMsmStrings;
#endif 	/* __IMsmStrings_FWD_DEFINED__ */


#ifndef __IMsmError_FWD_DEFINED__
#define __IMsmError_FWD_DEFINED__
typedef interface IMsmError IMsmError;
#endif 	/* __IMsmError_FWD_DEFINED__ */


#ifndef __IMsmErrors_FWD_DEFINED__
#define __IMsmErrors_FWD_DEFINED__
typedef interface IMsmErrors IMsmErrors;
#endif 	/* __IMsmErrors_FWD_DEFINED__ */


#ifndef __IMsmDependency_FWD_DEFINED__
#define __IMsmDependency_FWD_DEFINED__
typedef interface IMsmDependency IMsmDependency;
#endif 	/* __IMsmDependency_FWD_DEFINED__ */


#ifndef __IMsmDependencies_FWD_DEFINED__
#define __IMsmDependencies_FWD_DEFINED__
typedef interface IMsmDependencies IMsmDependencies;
#endif 	/* __IMsmDependencies_FWD_DEFINED__ */


#ifndef __IMsmGetFiles_FWD_DEFINED__
#define __IMsmGetFiles_FWD_DEFINED__
typedef interface IMsmGetFiles IMsmGetFiles;
#endif 	/* __IMsmGetFiles_FWD_DEFINED__ */

#if (_WIN32_MSM >= 150)

#ifndef __IMsmConfigurableItem_FWD_DEFINED__
#define __IMsmConfigurableItem_FWD_DEFINED__
typedef interface IMsmConfigurableItem IMsmConfigurableItem;
#endif 	/* __IMsmConfigurableItem_FWD_DEFINED__ */


#ifndef __IEnumMsmConfigurableItem_FWD_DEFINED__
#define __IEnumMsmConfigurableItem_FWD_DEFINED__
typedef interface IEnumMsmConfigurableItem IEnumMsmConfigurableItem;
#endif 	/* __IEnumMsmConfigurableItem_FWD_DEFINED__ */


#ifndef __IMsmConfigurableItems_FWD_DEFINED__
#define __IMsmConfigurableItems_FWD_DEFINED__
typedef interface IMsmConfigurableItems IMsmConfigurableItems;
#endif 	/* __IMsmConfigurableItems_FWD_DEFINED__ */

#ifndef __IMsmMerge2_FWD_DEFINED__
#define __IMsmMerge2_FWD_DEFINED__
typedef interface IMsmMerge2 IMsmMerge2;
#endif 	/* __IMsmMerge2_FWD_DEFINED__ */

#ifndef __IMsmConfigureModule_FWD_DEFINED__
#define __IMsmConfigureModule_FWD_DEFINED__
typedef interface IMsmConfigureModule IMsmConfigureModule;
#endif 	/* __IMsmConfigureModule_FWD_DEFINED__ */

#ifndef __MsmMerge2_FWD_DEFINED__
#define __MsmMerge2_FWD_DEFINED__

#ifdef __cplusplus
typedef class MsmMerge2 MsmMerge2;
#else
typedef struct MsmMerge2 MsmMerge2;
#endif /* __cplusplus */

#endif 	/* __MsmMerge2_FWD_DEFINED__ */


#endif /* _WIN32_MSM */

#ifndef __MsmMerge_FWD_DEFINED__
#define __MsmMerge_FWD_DEFINED__

#ifdef __cplusplus
typedef class MsmMerge MsmMerge;
#else
typedef struct MsmMerge MsmMerge;
#endif /* __cplusplus */

#endif 	/* __MsmMerge_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 


#ifndef __FORWARD_IID_IMSMMERGETYPELIB
#define __FORWARD_IID_IMSMMERGETYPELIB

// --------------------------------------------------------------------------
// MergeMod error types, returned from IMsmError::get_Type
// --------------------------------------------------------------------------
typedef /* [helpstring][uuid] */ 
enum msmErrorType
    {	
	msmErrorLanguageUnsupported	= 1,
	msmErrorLanguageFailed          = 2,
	msmErrorExclusion               = 3,
	msmErrorTableMerge              = 4,
	msmErrorResequenceMerge	        = 5,
	msmErrorFileCreate              = 6,
	msmErrorDirCreate               = 7,
	msmErrorFeatureRequired	        = 8,

#if (_WIN32_MSM >= 150)
	msmErrorBadNullSubstitution     = 9,
	msmErrorBadSubstitutionType     = 10,
	msmErrorMissingConfigItem       = 11,
	msmErrorBadNullResponse         = 12,
	msmErrorDataRequestFailed       = 13,    
	msmErrorPlatformMismatch        = 14    
#endif
	}	
	msmErrorType;

#if (_WIN32_MSM >= 150)

// --------------------------------------------------------------------------
// MergeMod formats for ModuleConfiguration items.
// --------------------------------------------------------------------------
typedef /* [helpstring][uuid] */ 
enum msmConfigurableItemFormat
    {
	msmConfigurableItemText = 0,
	msmConfigurableItemKey = 1,
	msmConfigurableItemInteger = 2,
	msmConfigurableItemBitfield = 3
    }
    msmConfigurableItemFormat;


// --------------------------------------------------------------------------
// MergeMod options for ModuleConfiguration items.
// --------------------------------------------------------------------------
typedef /* [helpstring][uuid] */   
enum msmConfigurableItemOptions
    {	
	msmConfigurableOptionKeyNoOrphan	= 1,
	msmConfigurableOptionNonNullable	= 2
    } 	
    msmConfigurableItemOptions;


#endif


#endif // __FORWARD_IID_IMSMMERGETYPELIB

extern RPC_IF_HANDLE __MIDL_itf_mergemod_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mergemod_0000_v0_0_s_ifspec;


// --------------------------------------------------------------------------
// IEnumMsmString - enumeration of BSTR
// --------------------------------------------------------------------------

#ifndef __IEnumMsmString_INTERFACE_DEFINED__
#define __IEnumMsmString_INTERFACE_DEFINED__


#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("0ADDA826-2C26-11D2-AD65-00A0C9AF11A6")
    IEnumMsmString : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ unsigned long cFetch,
            /* [out] */ BSTR __RPC_FAR *rgbstrStrings,
            /* [retval][out] */ unsigned long __RPC_FAR *pcFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ unsigned long cSkip) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [retval][out] */ IEnumMsmString __RPC_FAR *__RPC_FAR *pemsmStrings) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumMsmStringVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumMsmString __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumMsmString __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumMsmString __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumMsmString __RPC_FAR * This,
            /* [in] */ unsigned long cFetch,
            /* [out] */ BSTR __RPC_FAR *rgbstrStrings,
            /* [retval][out] */ unsigned long __RPC_FAR *pcFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumMsmString __RPC_FAR * This,
            /* [in] */ unsigned long cSkip);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumMsmString __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumMsmString __RPC_FAR * This,
            /* [retval][out] */ IEnumMsmString __RPC_FAR *__RPC_FAR *pemsmStrings);
        
        END_INTERFACE
    } IEnumMsmStringVtbl;

    interface IEnumMsmString
    {
        CONST_VTBL struct IEnumMsmStringVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumMsmString_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumMsmString_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumMsmString_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumMsmString_Next(This,cFetch,rgbstrStrings,pcFetched)	\
    (This)->lpVtbl -> Next(This,cFetch,rgbstrStrings,pcFetched)

#define IEnumMsmString_Skip(This,cSkip)	\
    (This)->lpVtbl -> Skip(This,cSkip)

#define IEnumMsmString_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumMsmString_Clone(This,pemsmStrings)	\
    (This)->lpVtbl -> Clone(This,pemsmStrings)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumMsmString_Next_Proxy( 
    IEnumMsmString __RPC_FAR * This,
    /* [in] */ unsigned long cFetch,
    /* [out] */ BSTR __RPC_FAR *rgbstrStrings,
    /* [retval][out] */ unsigned long __RPC_FAR *pcFetched);


void __RPC_STUB IEnumMsmString_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMsmString_Skip_Proxy( 
    IEnumMsmString __RPC_FAR * This,
    /* [in] */ unsigned long cSkip);


void __RPC_STUB IEnumMsmString_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMsmString_Reset_Proxy( 
    IEnumMsmString __RPC_FAR * This);


void __RPC_STUB IEnumMsmString_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMsmString_Clone_Proxy( 
    IEnumMsmString __RPC_FAR * This,
    /* [retval][out] */ IEnumMsmString __RPC_FAR *__RPC_FAR *pemsmStrings);


void __RPC_STUB IEnumMsmString_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumMsmString_INTERFACE_DEFINED__ */


// --------------------------------------------------------------------------
// IMsmStrings - a collection of MergeMod BSTR
// --------------------------------------------------------------------------

#ifndef __IMsmStrings_INTERFACE_DEFINED__
#define __IMsmStrings_INTERFACE_DEFINED__


#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("0ADDA827-2C26-11D2-AD65-00A0C9AF11A6")
    IMsmStrings : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long Item,
            /* [retval][out] */ BSTR __RPC_FAR *Return) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *Count) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *NewEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMsmStringsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMsmStrings __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMsmStrings __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMsmStrings __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IMsmStrings __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IMsmStrings __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IMsmStrings __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IMsmStrings __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IMsmStrings __RPC_FAR * This,
            /* [in] */ long Item,
            /* [retval][out] */ BSTR __RPC_FAR *Return);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IMsmStrings __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IMsmStrings __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *NewEnum);
        
        END_INTERFACE
    } IMsmStringsVtbl;

    interface IMsmStrings
    {
        CONST_VTBL struct IMsmStringsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsmStrings_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMsmStrings_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMsmStrings_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMsmStrings_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMsmStrings_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMsmStrings_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMsmStrings_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMsmStrings_get_Item(This,Item,Return)	\
    (This)->lpVtbl -> get_Item(This,Item,Return)

#define IMsmStrings_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IMsmStrings_get__NewEnum(This,NewEnum)	\
    (This)->lpVtbl -> get__NewEnum(This,NewEnum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmStrings_get_Item_Proxy( 
    IMsmStrings __RPC_FAR * This,
    /* [in] */ long Item,
    /* [retval][out] */ BSTR __RPC_FAR *Return);


void __RPC_STUB IMsmStrings_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmStrings_get_Count_Proxy( 
    IMsmStrings __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Count);


void __RPC_STUB IMsmStrings_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmStrings_get__NewEnum_Proxy( 
    IMsmStrings __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *NewEnum);


void __RPC_STUB IMsmStrings_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);

#endif 	/* __IMsmStrings_INTERFACE_DEFINED__ */


// --------------------------------------------------------------------------
// IMsmError - interface for retrieving details on a single merge error
// --------------------------------------------------------------------------

#ifndef __IMsmError_INTERFACE_DEFINED__
#define __IMsmError_INTERFACE_DEFINED__

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("0ADDA828-2C26-11D2-AD65-00A0C9AF11A6")
    IMsmError : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ msmErrorType __RPC_FAR *ErrorType) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [retval][out] */ BSTR __RPC_FAR *ErrorPath) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ short __RPC_FAR *ErrorLanguage) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DatabaseTable( 
            /* [retval][out] */ BSTR __RPC_FAR *ErrorTable) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DatabaseKeys( 
            /* [retval][out] */ IMsmStrings __RPC_FAR *__RPC_FAR *ErrorKeys) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ModuleTable( 
            /* [retval][out] */ BSTR __RPC_FAR *ErrorTable) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ModuleKeys( 
            /* [retval][out] */ IMsmStrings __RPC_FAR *__RPC_FAR *ErrorKeys) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMsmErrorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMsmError __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMsmError __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMsmError __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IMsmError __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IMsmError __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IMsmError __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IMsmError __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Type )( 
            IMsmError __RPC_FAR * This,
            /* [retval][out] */ msmErrorType __RPC_FAR *ErrorType);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Path )( 
            IMsmError __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *ErrorPath);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Language )( 
            IMsmError __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *ErrorLanguage);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DatabaseTable )( 
            IMsmError __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *ErrorTable);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DatabaseKeys )( 
            IMsmError __RPC_FAR * This,
            /* [retval][out] */ IMsmStrings __RPC_FAR *__RPC_FAR *ErrorKeys);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ModuleTable )( 
            IMsmError __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *ErrorTable);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ModuleKeys )( 
            IMsmError __RPC_FAR * This,
            /* [retval][out] */ IMsmStrings __RPC_FAR *__RPC_FAR *ErrorKeys);
        
        END_INTERFACE
    } IMsmErrorVtbl;

    interface IMsmError
    {
        CONST_VTBL struct IMsmErrorVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsmError_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMsmError_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMsmError_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMsmError_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMsmError_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMsmError_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMsmError_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMsmError_get_Type(This,ErrorType)	\
    (This)->lpVtbl -> get_Type(This,ErrorType)

#define IMsmError_get_Path(This,ErrorPath)	\
    (This)->lpVtbl -> get_Path(This,ErrorPath)

#define IMsmError_get_Language(This,ErrorLanguage)	\
    (This)->lpVtbl -> get_Language(This,ErrorLanguage)

#define IMsmError_get_DatabaseTable(This,ErrorTable)	\
    (This)->lpVtbl -> get_DatabaseTable(This,ErrorTable)

#define IMsmError_get_DatabaseKeys(This,ErrorKeys)	\
    (This)->lpVtbl -> get_DatabaseKeys(This,ErrorKeys)

#define IMsmError_get_ModuleTable(This,ErrorTable)	\
    (This)->lpVtbl -> get_ModuleTable(This,ErrorTable)

#define IMsmError_get_ModuleKeys(This,ErrorKeys)	\
    (This)->lpVtbl -> get_ModuleKeys(This,ErrorKeys)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmError_get_Type_Proxy( 
    IMsmError __RPC_FAR * This,
    /* [retval][out] */ msmErrorType __RPC_FAR *ErrorType);


void __RPC_STUB IMsmError_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmError_get_Path_Proxy( 
    IMsmError __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *ErrorPath);


void __RPC_STUB IMsmError_get_Path_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmError_get_Language_Proxy( 
    IMsmError __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *ErrorLanguage);


void __RPC_STUB IMsmError_get_Language_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmError_get_DatabaseTable_Proxy( 
    IMsmError __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *ErrorTable);


void __RPC_STUB IMsmError_get_DatabaseTable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmError_get_DatabaseKeys_Proxy( 
    IMsmError __RPC_FAR * This,
    /* [retval][out] */ IMsmStrings __RPC_FAR *__RPC_FAR *ErrorKeys);


void __RPC_STUB IMsmError_get_DatabaseKeys_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmError_get_ModuleTable_Proxy( 
    IMsmError __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *ErrorTable);


void __RPC_STUB IMsmError_get_ModuleTable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmError_get_ModuleKeys_Proxy( 
    IMsmError __RPC_FAR * This,
    /* [retval][out] */ IMsmStrings __RPC_FAR *__RPC_FAR *ErrorKeys);


void __RPC_STUB IMsmError_get_ModuleKeys_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);

#endif 	/* __IMsmError_INTERFACE_DEFINED__ */


// --------------------------------------------------------------------------
// IEnumMsmError - enumeration of IMsmError interfaces
// --------------------------------------------------------------------------

#ifndef __IEnumMsmError_INTERFACE_DEFINED__
#define __IEnumMsmError_INTERFACE_DEFINED__

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("0ADDA829-2C26-11D2-AD65-00A0C9AF11A6")
    IEnumMsmError : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ unsigned long cFetch,
            /* [out] */ IMsmError __RPC_FAR *__RPC_FAR *rgmsmErrors,
            /* [retval][out] */ unsigned long __RPC_FAR *pcFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ unsigned long cSkip) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [retval][out] */ IEnumMsmError __RPC_FAR *__RPC_FAR *pemsmErrors) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumMsmErrorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumMsmError __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumMsmError __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumMsmError __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumMsmError __RPC_FAR * This,
            /* [in] */ unsigned long cFetch,
            /* [out] */ IMsmError __RPC_FAR *__RPC_FAR *rgmsmErrors,
            /* [retval][out] */ unsigned long __RPC_FAR *pcFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumMsmError __RPC_FAR * This,
            /* [in] */ unsigned long cSkip);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumMsmError __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumMsmError __RPC_FAR * This,
            /* [retval][out] */ IEnumMsmError __RPC_FAR *__RPC_FAR *pemsmErrors);
        
        END_INTERFACE
    } IEnumMsmErrorVtbl;

    interface IEnumMsmError
    {
        CONST_VTBL struct IEnumMsmErrorVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumMsmError_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumMsmError_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumMsmError_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumMsmError_Next(This,cFetch,rgmsmErrors,pcFetched)	\
    (This)->lpVtbl -> Next(This,cFetch,rgmsmErrors,pcFetched)

#define IEnumMsmError_Skip(This,cSkip)	\
    (This)->lpVtbl -> Skip(This,cSkip)

#define IEnumMsmError_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumMsmError_Clone(This,pemsmErrors)	\
    (This)->lpVtbl -> Clone(This,pemsmErrors)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumMsmError_Next_Proxy( 
    IEnumMsmError __RPC_FAR * This,
    /* [in] */ unsigned long cFetch,
    /* [out] */ IMsmError __RPC_FAR *__RPC_FAR *rgmsmErrors,
    /* [retval][out] */ unsigned long __RPC_FAR *pcFetched);


void __RPC_STUB IEnumMsmError_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMsmError_Skip_Proxy( 
    IEnumMsmError __RPC_FAR * This,
    /* [in] */ unsigned long cSkip);


void __RPC_STUB IEnumMsmError_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMsmError_Reset_Proxy( 
    IEnumMsmError __RPC_FAR * This);


void __RPC_STUB IEnumMsmError_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMsmError_Clone_Proxy( 
    IEnumMsmError __RPC_FAR * This,
    /* [retval][out] */ IEnumMsmError __RPC_FAR *__RPC_FAR *pemsmErrors);


void __RPC_STUB IEnumMsmError_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);

#endif 	/* __IEnumMsmError_INTERFACE_DEFINED__ */


// --------------------------------------------------------------------------
// IMsmErrors - collection of IMsmError interfaces
// --------------------------------------------------------------------------

#ifndef __IMsmErrors_INTERFACE_DEFINED__
#define __IMsmErrors_INTERFACE_DEFINED__

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("0ADDA82A-2C26-11D2-AD65-00A0C9AF11A6")
    IMsmErrors : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long Item,
            /* [retval][out] */ IMsmError __RPC_FAR *__RPC_FAR *Return) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *Count) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *NewEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMsmErrorsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMsmErrors __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMsmErrors __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMsmErrors __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IMsmErrors __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IMsmErrors __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IMsmErrors __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IMsmErrors __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IMsmErrors __RPC_FAR * This,
            /* [in] */ long Item,
            /* [retval][out] */ IMsmError __RPC_FAR *__RPC_FAR *Return);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IMsmErrors __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IMsmErrors __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *NewEnum);
        
        END_INTERFACE
    } IMsmErrorsVtbl;

    interface IMsmErrors
    {
        CONST_VTBL struct IMsmErrorsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsmErrors_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMsmErrors_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMsmErrors_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMsmErrors_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMsmErrors_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMsmErrors_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMsmErrors_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMsmErrors_get_Item(This,Item,Return)	\
    (This)->lpVtbl -> get_Item(This,Item,Return)

#define IMsmErrors_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IMsmErrors_get__NewEnum(This,NewEnum)	\
    (This)->lpVtbl -> get__NewEnum(This,NewEnum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmErrors_get_Item_Proxy( 
    IMsmErrors __RPC_FAR * This,
    /* [in] */ long Item,
    /* [retval][out] */ IMsmError __RPC_FAR *__RPC_FAR *Return);


void __RPC_STUB IMsmErrors_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmErrors_get_Count_Proxy( 
    IMsmErrors __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Count);


void __RPC_STUB IMsmErrors_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmErrors_get__NewEnum_Proxy( 
    IMsmErrors __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *NewEnum);


void __RPC_STUB IMsmErrors_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);

#endif 	/* __IMsmErrors_INTERFACE_DEFINED__ */


// --------------------------------------------------------------------------
// IMsmDependency - interface for retrieving details on a single module 
//   dependency.
// --------------------------------------------------------------------------

#ifndef __IMsmDependency_INTERFACE_DEFINED__
#define __IMsmDependency_INTERFACE_DEFINED__

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("0ADDA82B-2C26-11D2-AD65-00A0C9AF11A6")
    IMsmDependency : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Module( 
            /* [retval][out] */ BSTR __RPC_FAR *Module) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ short __RPC_FAR *Language) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ BSTR __RPC_FAR *Version) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMsmDependencyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMsmDependency __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMsmDependency __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMsmDependency __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IMsmDependency __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IMsmDependency __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IMsmDependency __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IMsmDependency __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Module )( 
            IMsmDependency __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Module);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Language )( 
            IMsmDependency __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Language);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Version )( 
            IMsmDependency __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Version);
        
        END_INTERFACE
    } IMsmDependencyVtbl;

    interface IMsmDependency
    {
        CONST_VTBL struct IMsmDependencyVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsmDependency_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMsmDependency_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMsmDependency_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMsmDependency_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMsmDependency_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMsmDependency_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMsmDependency_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMsmDependency_get_Module(This,Module)	\
    (This)->lpVtbl -> get_Module(This,Module)

#define IMsmDependency_get_Language(This,Language)	\
    (This)->lpVtbl -> get_Language(This,Language)

#define IMsmDependency_get_Version(This,Version)	\
    (This)->lpVtbl -> get_Version(This,Version)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmDependency_get_Module_Proxy( 
    IMsmDependency __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Module);


void __RPC_STUB IMsmDependency_get_Module_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmDependency_get_Language_Proxy( 
    IMsmDependency __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Language);


void __RPC_STUB IMsmDependency_get_Language_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmDependency_get_Version_Proxy( 
    IMsmDependency __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Version);


void __RPC_STUB IMsmDependency_get_Version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);

#endif 	/* __IMsmDependency_INTERFACE_DEFINED__ */


// --------------------------------------------------------------------------
// IEnumMsmDependency - enumeration of IMsmDependency interfaces
// --------------------------------------------------------------------------

#ifndef __IEnumMsmDependency_INTERFACE_DEFINED__
#define __IEnumMsmDependency_INTERFACE_DEFINED__

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("0ADDA82C-2C26-11D2-AD65-00A0C9AF11A6")
    IEnumMsmDependency : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ unsigned long cFetch,
            /* [out] */ IMsmDependency __RPC_FAR *__RPC_FAR *rgmsmDependencies,
            /* [retval][out] */ unsigned long __RPC_FAR *pcFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ unsigned long cSkip) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [retval][out] */ IEnumMsmDependency __RPC_FAR *__RPC_FAR *pemsmDependencies) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumMsmDependencyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumMsmDependency __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumMsmDependency __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumMsmDependency __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumMsmDependency __RPC_FAR * This,
            /* [in] */ unsigned long cFetch,
            /* [out] */ IMsmDependency __RPC_FAR *__RPC_FAR *rgmsmDependencies,
            /* [retval][out] */ unsigned long __RPC_FAR *pcFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumMsmDependency __RPC_FAR * This,
            /* [in] */ unsigned long cSkip);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumMsmDependency __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumMsmDependency __RPC_FAR * This,
            /* [retval][out] */ IEnumMsmDependency __RPC_FAR *__RPC_FAR *pemsmDependencies);
        
        END_INTERFACE
    } IEnumMsmDependencyVtbl;

    interface IEnumMsmDependency
    {
        CONST_VTBL struct IEnumMsmDependencyVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumMsmDependency_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumMsmDependency_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumMsmDependency_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumMsmDependency_Next(This,cFetch,rgmsmDependencies,pcFetched)	\
    (This)->lpVtbl -> Next(This,cFetch,rgmsmDependencies,pcFetched)

#define IEnumMsmDependency_Skip(This,cSkip)	\
    (This)->lpVtbl -> Skip(This,cSkip)

#define IEnumMsmDependency_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumMsmDependency_Clone(This,pemsmDependencies)	\
    (This)->lpVtbl -> Clone(This,pemsmDependencies)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumMsmDependency_Next_Proxy( 
    IEnumMsmDependency __RPC_FAR * This,
    /* [in] */ unsigned long cFetch,
    /* [out] */ IMsmDependency __RPC_FAR *__RPC_FAR *rgmsmDependencies,
    /* [retval][out] */ unsigned long __RPC_FAR *pcFetched);


void __RPC_STUB IEnumMsmDependency_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMsmDependency_Skip_Proxy( 
    IEnumMsmDependency __RPC_FAR * This,
    /* [in] */ unsigned long cSkip);


void __RPC_STUB IEnumMsmDependency_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMsmDependency_Reset_Proxy( 
    IEnumMsmDependency __RPC_FAR * This);


void __RPC_STUB IEnumMsmDependency_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMsmDependency_Clone_Proxy( 
    IEnumMsmDependency __RPC_FAR * This,
    /* [retval][out] */ IEnumMsmDependency __RPC_FAR *__RPC_FAR *pemsmDependencies);


void __RPC_STUB IEnumMsmDependency_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);

#endif 	/* __IEnumMsmDependency_INTERFACE_DEFINED__ */


// --------------------------------------------------------------------------
// IMsmDependencies - collection of IMsmDependency interfaces
// --------------------------------------------------------------------------

#ifndef __IMsmDependencies_INTERFACE_DEFINED__
#define __IMsmDependencies_INTERFACE_DEFINED__

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("0ADDA82D-2C26-11D2-AD65-00A0C9AF11A6")
    IMsmDependencies : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long Item,
            /* [retval][out] */ IMsmDependency __RPC_FAR *__RPC_FAR *Return) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *Count) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *NewEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMsmDependenciesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMsmDependencies __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMsmDependencies __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMsmDependencies __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IMsmDependencies __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IMsmDependencies __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IMsmDependencies __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IMsmDependencies __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IMsmDependencies __RPC_FAR * This,
            /* [in] */ long Item,
            /* [retval][out] */ IMsmDependency __RPC_FAR *__RPC_FAR *Return);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IMsmDependencies __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IMsmDependencies __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *NewEnum);
        
        END_INTERFACE
    } IMsmDependenciesVtbl;

    interface IMsmDependencies
    {
        CONST_VTBL struct IMsmDependenciesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsmDependencies_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMsmDependencies_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMsmDependencies_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMsmDependencies_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMsmDependencies_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMsmDependencies_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMsmDependencies_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMsmDependencies_get_Item(This,Item,Return)	\
    (This)->lpVtbl -> get_Item(This,Item,Return)

#define IMsmDependencies_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IMsmDependencies_get__NewEnum(This,NewEnum)	\
    (This)->lpVtbl -> get__NewEnum(This,NewEnum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmDependencies_get_Item_Proxy( 
    IMsmDependencies __RPC_FAR * This,
    /* [in] */ long Item,
    /* [retval][out] */ IMsmDependency __RPC_FAR *__RPC_FAR *Return);


void __RPC_STUB IMsmDependencies_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmDependencies_get_Count_Proxy( 
    IMsmDependencies __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Count);


void __RPC_STUB IMsmDependencies_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmDependencies_get__NewEnum_Proxy( 
    IMsmDependencies __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *NewEnum);


void __RPC_STUB IMsmDependencies_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);

#endif 	/* __IMsmDependencies_INTERFACE_DEFINED__ */


// the following interfaces are available only on MergeMod v1.5 or later
#if (_WIN32_MSM >= 150)

// --------------------------------------------------------------------------
// IMsmConfigurableItem - object describing the properties of a single
// configurable item.
// --------------------------------------------------------------------------


#ifndef __IMsmConfigurableItem_INTERFACE_DEFINED__
#define __IMsmConfigurableItem_INTERFACE_DEFINED__


#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4D6E6284-D21D-401E-84F6-909E00B50F71")
    IMsmConfigurableItem : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *Name) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Format( 
            /* [retval][out] */ msmConfigurableItemFormat __RPC_FAR *Format) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ BSTR __RPC_FAR *Type) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Context( 
            /* [retval][out] */ BSTR __RPC_FAR *Context) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DefaultValue( 
            /* [retval][out] */ BSTR __RPC_FAR *DefaultValue) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ long __RPC_FAR *Attributes) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DisplayName( 
            /* [retval][out] */ BSTR __RPC_FAR *DisplayName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR __RPC_FAR *Description) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HelpLocation( 
            /* [retval][out] */ BSTR __RPC_FAR *HelpLocation) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HelpKeyword( 
            /* [retval][out] */ BSTR __RPC_FAR *HelpKeyword) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMsmConfigurableItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMsmConfigurableItem __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMsmConfigurableItem __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Format )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [retval][out] */ msmConfigurableItemFormat __RPC_FAR *Format);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Type )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Type);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Context )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Context);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DefaultValue )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *DefaultValue);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Attributes )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Attributes);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DisplayName )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *DisplayName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Description);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpLocation )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *HelpLocation);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpKeyword )( 
            IMsmConfigurableItem __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *HelpKeyword);
        
        END_INTERFACE
    } IMsmConfigurableItemVtbl;

    interface IMsmConfigurableItem
    {
        CONST_VTBL struct IMsmConfigurableItemVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsmConfigurableItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMsmConfigurableItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMsmConfigurableItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMsmConfigurableItem_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMsmConfigurableItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMsmConfigurableItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMsmConfigurableItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMsmConfigurableItem_get_Name(This,Name)	\
    (This)->lpVtbl -> get_Name(This,Name)

#define IMsmConfigurableItem_get_Format(This,Format)	\
    (This)->lpVtbl -> get_Format(This,Format)

#define IMsmConfigurableItem_get_Type(This,Type)	\
    (This)->lpVtbl -> get_Type(This,Type)

#define IMsmConfigurableItem_get_Context(This,Context)	\
    (This)->lpVtbl -> get_Context(This,Context)

#define IMsmConfigurableItem_get_DefaultValue(This,DefaultValue)	\
    (This)->lpVtbl -> get_DefaultValue(This,DefaultValue)

#define IMsmConfigurableItem_get_Attributes(This,Attributes)	\
    (This)->lpVtbl -> get_Attributes(This,Attributes)

#define IMsmConfigurableItem_get_DisplayName(This,DisplayName)	\
    (This)->lpVtbl -> get_DisplayName(This,DisplayName)

#define IMsmConfigurableItem_get_Description(This,Description)	\
    (This)->lpVtbl -> get_Description(This,Description)

#define IMsmConfigurableItem_get_HelpLocation(This,HelpLocation)	\
    (This)->lpVtbl -> get_HelpLocation(This,HelpLocation)

#define IMsmConfigurableItem_get_HelpKeyword(This,HelpKeyword)	\
    (This)->lpVtbl -> get_HelpKeyword(This,HelpKeyword)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmConfigurableItem_get_Name_Proxy( 
    IMsmConfigurableItem __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Name);


void __RPC_STUB IMsmConfigurableItem_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmConfigurableItem_get_Format_Proxy( 
    IMsmConfigurableItem __RPC_FAR * This,
    /* [retval][out] */ msmConfigurableItemFormat __RPC_FAR *Format);


void __RPC_STUB IMsmConfigurableItem_get_Format_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmConfigurableItem_get_Type_Proxy( 
    IMsmConfigurableItem __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Type);


void __RPC_STUB IMsmConfigurableItem_get_Type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmConfigurableItem_get_Context_Proxy( 
    IMsmConfigurableItem __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Context);


void __RPC_STUB IMsmConfigurableItem_get_Context_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmConfigurableItem_get_DefaultValue_Proxy( 
    IMsmConfigurableItem __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *DefaultValue);


void __RPC_STUB IMsmConfigurableItem_get_DefaultValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmConfigurableItem_get_Attributes_Proxy( 
    IMsmConfigurableItem __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Attributes);


void __RPC_STUB IMsmConfigurableItem_get_Attributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmConfigurableItem_get_DisplayName_Proxy( 
    IMsmConfigurableItem __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *DisplayName);


void __RPC_STUB IMsmConfigurableItem_get_DisplayName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmConfigurableItem_get_Description_Proxy( 
    IMsmConfigurableItem __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Description);


void __RPC_STUB IMsmConfigurableItem_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmConfigurableItem_get_HelpLocation_Proxy( 
    IMsmConfigurableItem __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *HelpLocation);


void __RPC_STUB IMsmConfigurableItem_get_HelpLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmConfigurableItem_get_HelpKeyword_Proxy( 
    IMsmConfigurableItem __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *HelpKeyword);


void __RPC_STUB IMsmConfigurableItem_get_HelpKeyword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMsmConfigurableItem_INTERFACE_DEFINED__ */


// --------------------------------------------------------------------------
// IEnumMsmConfigurableItem - enumerator for configurable items
// --------------------------------------------------------------------------

#ifndef __IEnumMsmConfigurableItem_INTERFACE_DEFINED__
#define __IEnumMsmConfigurableItem_INTERFACE_DEFINED__


#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("832C6969-4826-4C24-A397-B7002D8196E6")
    IEnumMsmConfigurableItem : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ unsigned long cFetch,
            /* [out] */ IMsmConfigurableItem __RPC_FAR *__RPC_FAR *rgmsmItems,
            /* [retval][out] */ unsigned long __RPC_FAR *pcFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ unsigned long cSkip) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [retval][out] */ IEnumMsmConfigurableItem __RPC_FAR *__RPC_FAR *pemsmConfigurableItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumMsmConfigurableItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IEnumMsmConfigurableItem __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IEnumMsmConfigurableItem __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IEnumMsmConfigurableItem __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Next )( 
            IEnumMsmConfigurableItem __RPC_FAR * This,
            /* [in] */ unsigned long cFetch,
            /* [out] */ IMsmConfigurableItem __RPC_FAR *__RPC_FAR *rgmsmItems,
            /* [retval][out] */ unsigned long __RPC_FAR *pcFetched);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Skip )( 
            IEnumMsmConfigurableItem __RPC_FAR * This,
            /* [in] */ unsigned long cSkip);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Reset )( 
            IEnumMsmConfigurableItem __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Clone )( 
            IEnumMsmConfigurableItem __RPC_FAR * This,
            /* [retval][out] */ IEnumMsmConfigurableItem __RPC_FAR *__RPC_FAR *pemsmConfigurableItem);
        
        END_INTERFACE
    } IEnumMsmConfigurableItemVtbl;

    interface IEnumMsmConfigurableItem
    {
        CONST_VTBL struct IEnumMsmConfigurableItemVtbl __RPC_FAR *lpVtbl;
    };

    
#ifdef COBJMACROS


#define IEnumMsmConfigurableItem_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IEnumMsmConfigurableItem_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IEnumMsmConfigurableItem_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IEnumMsmConfigurableItem_Next(This,cFetch,rgmsmItems,pcFetched)	\
    (This)->lpVtbl -> Next(This,cFetch,rgmsmItems,pcFetched)

#define IEnumMsmConfigurableItem_Skip(This,cSkip)	\
    (This)->lpVtbl -> Skip(This,cSkip)

#define IEnumMsmConfigurableItem_Reset(This)	\
    (This)->lpVtbl -> Reset(This)

#define IEnumMsmConfigurableItem_Clone(This,pemsmConfigurableItem)	\
    (This)->lpVtbl -> Clone(This,pemsmConfigurableItem)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IEnumMsmConfigurableItem_Next_Proxy( 
    IEnumMsmConfigurableItem __RPC_FAR * This,
    /* [in] */ unsigned long cFetch,
    /* [out] */ IMsmConfigurableItem __RPC_FAR *__RPC_FAR *rgmsmItems,
    /* [retval][out] */ unsigned long __RPC_FAR *pcFetched);


void __RPC_STUB IEnumMsmConfigurableItem_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMsmConfigurableItem_Skip_Proxy( 
    IEnumMsmConfigurableItem __RPC_FAR * This,
    /* [in] */ unsigned long cSkip);


void __RPC_STUB IEnumMsmConfigurableItem_Skip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMsmConfigurableItem_Reset_Proxy( 
    IEnumMsmConfigurableItem __RPC_FAR * This);


void __RPC_STUB IEnumMsmConfigurableItem_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumMsmConfigurableItem_Clone_Proxy( 
    IEnumMsmConfigurableItem __RPC_FAR * This,
    /* [retval][out] */ IEnumMsmConfigurableItem __RPC_FAR *__RPC_FAR *pemsmConfigurableItem);


void __RPC_STUB IEnumMsmConfigurableItem_Clone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumMsmConfigurableItem_INTERFACE_DEFINED__ */


// --------------------------------------------------------------------------
// IMsmConfigurableItems - collection of configurable items
// --------------------------------------------------------------------------


#ifndef __IMsmConfigurableItems_INTERFACE_DEFINED__
#define __IMsmConfigurableItems_INTERFACE_DEFINED__

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("55BF723C-9A0D-463E-B42B-B4FBC7BE3C7C")
    IMsmConfigurableItems : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long Item,
            /* [retval][out] */ IMsmConfigurableItem __RPC_FAR *__RPC_FAR *Return) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *Count) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *NewEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMsmConfigurableItemsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMsmConfigurableItems __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMsmConfigurableItems __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMsmConfigurableItems __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IMsmConfigurableItems __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IMsmConfigurableItems __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IMsmConfigurableItems __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IMsmConfigurableItems __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IMsmConfigurableItems __RPC_FAR * This,
            /* [in] */ long Item,
            /* [retval][out] */ IMsmConfigurableItem __RPC_FAR *__RPC_FAR *Return);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IMsmConfigurableItems __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )( 
            IMsmConfigurableItems __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *NewEnum);
        
        END_INTERFACE
    } IMsmConfigurableItemsVtbl;

    interface IMsmConfigurableItems
    {
        CONST_VTBL struct IMsmConfigurableItemsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsmConfigurableItems_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMsmConfigurableItems_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMsmConfigurableItems_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMsmConfigurableItems_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMsmConfigurableItems_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMsmConfigurableItems_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMsmConfigurableItems_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMsmConfigurableItems_get_Item(This,Item,Return)	\
    (This)->lpVtbl -> get_Item(This,Item,Return)

#define IMsmConfigurableItems_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IMsmConfigurableItems_get__NewEnum(This,NewEnum)	\
    (This)->lpVtbl -> get__NewEnum(This,NewEnum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmConfigurableItems_get_Item_Proxy( 
    IMsmConfigurableItems __RPC_FAR * This,
    /* [in] */ long Item,
    /* [retval][out] */ IMsmConfigurableItem __RPC_FAR *__RPC_FAR *Return);


void __RPC_STUB IMsmConfigurableItems_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmConfigurableItems_get_Count_Proxy( 
    IMsmConfigurableItems __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Count);


void __RPC_STUB IMsmConfigurableItems_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmConfigurableItems_get__NewEnum_Proxy( 
    IMsmConfigurableItems __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *NewEnum);


void __RPC_STUB IMsmConfigurableItems_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMsmConfigurableItems_INTERFACE_DEFINED__ */



// --------------------------------------------------------------------------
// IMsmConfigureModule - callback interface called by the MergeMod object. 
// Allows the client to provide merge configuration information during the
// merge process.
// --------------------------------------------------------------------------

#ifndef __IMsmConfigureModule_INTERFACE_DEFINED__
#define __IMsmConfigureModule_INTERFACE_DEFINED__

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AC013209-18A7-4851-8A21-2353443D70A0")
    IMsmConfigureModule : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ProvideTextData( 
            /* [in] */ const BSTR Name,
            /* [retval][out] */ BSTR __RPC_FAR *ConfigData) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ProvideIntegerData( 
            /* [in] */ const BSTR Name,
            /* [retval][out] */ long __RPC_FAR *ConfigData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMsmConfigureModuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMsmConfigureModule __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMsmConfigureModule __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMsmConfigureModule __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IMsmConfigureModule __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IMsmConfigureModule __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IMsmConfigureModule __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IMsmConfigureModule __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ProvideTextData )( 
            IMsmConfigureModule __RPC_FAR * This,
            /* [in] */ const BSTR Name,
            /* [retval][out] */ BSTR __RPC_FAR *ConfigData);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ProvideIntegerData )( 
            IMsmConfigureModule __RPC_FAR * This,
            /* [in] */ const BSTR Name,
            /* [retval][out] */ long __RPC_FAR *ConfigData);
        
        END_INTERFACE
    } IMsmConfigureModuleVtbl;

    interface IMsmConfigureModule
    {
        CONST_VTBL struct IMsmConfigureModuleVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsmConfigureModule_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMsmConfigureModule_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMsmConfigureModule_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMsmConfigureModule_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMsmConfigureModule_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMsmConfigureModule_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMsmConfigureModule_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMsmConfigureModule_ProvideTextData(This,Name,ConfigData)	\
    (This)->lpVtbl -> ProvideTextData(This,Name,ConfigData)

#define IMsmConfigureModule_ProvideIntegerData(This,Name,ConfigData)	\
    (This)->lpVtbl -> ProvideIntegerData(This,Name,ConfigData)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmConfigureModule_ProvideTextData_Proxy( 
    IMsmConfigureModule __RPC_FAR * This,
    /* [in] */ const BSTR Name,
    /* [retval][out] */ BSTR __RPC_FAR *ConfigData);


void __RPC_STUB IMsmConfigureModule_ProvideTextData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmConfigureModule_ProvideIntegerData_Proxy( 
    IMsmConfigureModule __RPC_FAR * This,
    /* [in] */ const BSTR Name,
    /* [retval][out] */ long __RPC_FAR *ConfigData);


void __RPC_STUB IMsmConfigureModule_ProvideIntegerData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMsmConfigureModule_INTERFACE_DEFINED__ */


#endif // _MSM_WIN32 >= 150

// --------------------------------------------------------------------------
// IMsmMerge - primary interface to the MergeMod object. Allows the client
// to open and close databases, perform merges, retrieve the results
// of a merge, control the creation of a debug-level log, and extract the
// files from a module to disk.
// --------------------------------------------------------------------------

#ifndef __IMsmMerge_INTERFACE_DEFINED__
#define __IMsmMerge_INTERFACE_DEFINED__

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("0ADDA82E-2C26-11D2-AD65-00A0C9AF11A6")
    IMsmMerge : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OpenDatabase( 
            /* [in] */ const BSTR Path) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OpenModule( 
            /* [in] */ const BSTR Path,
            /* [in] */ const short Language) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CloseDatabase( 
            /* [in] */ const VARIANT_BOOL Commit) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CloseModule( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OpenLog( 
            /* [in] */ const BSTR Path) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CloseLog( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Log( 
            /* [in] */ const BSTR Message) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Errors( 
            /* [retval][out] */ IMsmErrors __RPC_FAR *__RPC_FAR *Errors) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Dependencies( 
            /* [retval][out] */ IMsmDependencies __RPC_FAR *__RPC_FAR *Dependencies) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Merge( 
            /* [in] */ const BSTR Feature,
            /* [in] */ const BSTR RedirectDir) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Connect( 
            /* [in] */ const BSTR Feature) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExtractCAB( 
            /* [in] */ const BSTR FileName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExtractFiles( 
            /* [in] */ const BSTR Path) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMsmMergeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMsmMerge __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMsmMerge __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMsmMerge __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IMsmMerge __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IMsmMerge __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IMsmMerge __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IMsmMerge __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OpenDatabase )( 
            IMsmMerge __RPC_FAR * This,
            /* [in] */ const BSTR Path);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OpenModule )( 
            IMsmMerge __RPC_FAR * This,
            /* [in] */ const BSTR Path,
            /* [in] */ const short Language);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CloseDatabase )( 
            IMsmMerge __RPC_FAR * This,
            /* [in] */ const VARIANT_BOOL Commit);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CloseModule )( 
            IMsmMerge __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OpenLog )( 
            IMsmMerge __RPC_FAR * This,
            /* [in] */ const BSTR Path);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CloseLog )( 
            IMsmMerge __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Log )( 
            IMsmMerge __RPC_FAR * This,
            /* [in] */ const BSTR Message);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Errors )( 
            IMsmMerge __RPC_FAR * This,
            /* [retval][out] */ IMsmErrors __RPC_FAR *__RPC_FAR *Errors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Dependencies )( 
            IMsmMerge __RPC_FAR * This,
            /* [retval][out] */ IMsmDependencies __RPC_FAR *__RPC_FAR *Dependencies);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Merge )( 
            IMsmMerge __RPC_FAR * This,
            /* [in] */ const BSTR Feature,
            /* [in] */ const BSTR RedirectDir);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Connect )( 
            IMsmMerge __RPC_FAR * This,
            /* [in] */ const BSTR Feature);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ExtractCAB )( 
            IMsmMerge __RPC_FAR * This,
            /* [in] */ const BSTR FileName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ExtractFiles )( 
            IMsmMerge __RPC_FAR * This,
            /* [in] */ const BSTR Path);
        
        END_INTERFACE
    } IMsmMergeVtbl;

    interface IMsmMerge
    {
        CONST_VTBL struct IMsmMergeVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsmMerge_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMsmMerge_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMsmMerge_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMsmMerge_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMsmMerge_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMsmMerge_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMsmMerge_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMsmMerge_OpenDatabase(This,Path)	\
    (This)->lpVtbl -> OpenDatabase(This,Path)

#define IMsmMerge_OpenModule(This,Path,Language)	\
    (This)->lpVtbl -> OpenModule(This,Path,Language)

#define IMsmMerge_CloseDatabase(This,Commit)	\
    (This)->lpVtbl -> CloseDatabase(This,Commit)

#define IMsmMerge_CloseModule(This)	\
    (This)->lpVtbl -> CloseModule(This)

#define IMsmMerge_OpenLog(This,Path)	\
    (This)->lpVtbl -> OpenLog(This,Path)

#define IMsmMerge_CloseLog(This)	\
    (This)->lpVtbl -> CloseLog(This)

#define IMsmMerge_Log(This,Message)	\
    (This)->lpVtbl -> Log(This,Message)

#define IMsmMerge_get_Errors(This,Errors)	\
    (This)->lpVtbl -> get_Errors(This,Errors)

#define IMsmMerge_get_Dependencies(This,Dependencies)	\
    (This)->lpVtbl -> get_Dependencies(This,Dependencies)

#define IMsmMerge_Merge(This,Feature,RedirectDir)	\
    (This)->lpVtbl -> Merge(This,Feature,RedirectDir)

#define IMsmMerge_Connect(This,Feature)	\
    (This)->lpVtbl -> Connect(This,Feature)

#define IMsmMerge_ExtractCAB(This,FileName)	\
    (This)->lpVtbl -> ExtractCAB(This,FileName)

#define IMsmMerge_ExtractFiles(This,Path)	\
    (This)->lpVtbl -> ExtractFiles(This,Path)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge_OpenDatabase_Proxy( 
    IMsmMerge __RPC_FAR * This,
    /* [in] */ const BSTR Path);


void __RPC_STUB IMsmMerge_OpenDatabase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge_OpenModule_Proxy( 
    IMsmMerge __RPC_FAR * This,
    /* [in] */ const BSTR Path,
    /* [in] */ const short Language);


void __RPC_STUB IMsmMerge_OpenModule_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge_CloseDatabase_Proxy( 
    IMsmMerge __RPC_FAR * This,
    /* [in] */ const VARIANT_BOOL Commit);


void __RPC_STUB IMsmMerge_CloseDatabase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge_CloseModule_Proxy( 
    IMsmMerge __RPC_FAR * This);


void __RPC_STUB IMsmMerge_CloseModule_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge_OpenLog_Proxy( 
    IMsmMerge __RPC_FAR * This,
    /* [in] */ const BSTR Path);


void __RPC_STUB IMsmMerge_OpenLog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge_CloseLog_Proxy( 
    IMsmMerge __RPC_FAR * This);


void __RPC_STUB IMsmMerge_CloseLog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge_Log_Proxy( 
    IMsmMerge __RPC_FAR * This,
    /* [in] */ const BSTR Message);


void __RPC_STUB IMsmMerge_Log_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmMerge_get_Errors_Proxy( 
    IMsmMerge __RPC_FAR * This,
    /* [retval][out] */ IMsmErrors __RPC_FAR *__RPC_FAR *Errors);


void __RPC_STUB IMsmMerge_get_Errors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmMerge_get_Dependencies_Proxy( 
    IMsmMerge __RPC_FAR * This,
    /* [retval][out] */ IMsmDependencies __RPC_FAR *__RPC_FAR *Dependencies);


void __RPC_STUB IMsmMerge_get_Dependencies_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge_Merge_Proxy( 
    IMsmMerge __RPC_FAR * This,
    /* [in] */ const BSTR Feature,
    /* [in] */ const BSTR RedirectDir);


void __RPC_STUB IMsmMerge_Merge_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge_Connect_Proxy( 
    IMsmMerge __RPC_FAR * This,
    /* [in] */ const BSTR Feature);


void __RPC_STUB IMsmMerge_Connect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge_ExtractCAB_Proxy( 
    IMsmMerge __RPC_FAR * This,
    /* [in] */ const BSTR FileName);


void __RPC_STUB IMsmMerge_ExtractCAB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge_ExtractFiles_Proxy( 
    IMsmMerge __RPC_FAR * This,
    /* [in] */ const BSTR Path);


void __RPC_STUB IMsmMerge_ExtractFiles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMsmMerge_INTERFACE_DEFINED__ */

// --------------------------------------------------------------------------
// IMsmGetFiles - secondary interface to the MergeMod object, allows
// the client to retrieve the files needed in a particular language of the
// module. Requires certain actions be performed via the IMsmMerge interface
// before some calls on this interface will return valid results.
// --------------------------------------------------------------------------


#ifndef __IMsmGetFiles_INTERFACE_DEFINED__
#define __IMsmGetFiles_INTERFACE_DEFINED__


#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("7041AE26-2D78-11d2-888A-00A0C981B015")
    IMsmGetFiles : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ModuleFiles( 
            /* [retval][out] */ IMsmStrings __RPC_FAR *__RPC_FAR *Files) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMsmGetFilesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMsmGetFiles __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMsmGetFiles __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMsmGetFiles __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IMsmGetFiles __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IMsmGetFiles __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IMsmGetFiles __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IMsmGetFiles __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ModuleFiles )( 
            IMsmGetFiles __RPC_FAR * This,
            /* [retval][out] */ IMsmStrings __RPC_FAR *__RPC_FAR *Files);
        
        END_INTERFACE
    } IMsmGetFilesVtbl;

    interface IMsmGetFiles
    {
        CONST_VTBL struct IMsmGetFilesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsmGetFiles_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMsmGetFiles_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMsmGetFiles_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMsmGetFiles_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMsmGetFiles_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMsmGetFiles_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMsmGetFiles_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMsmGetFiles_get_ModuleFiles(This,Files)	\
    (This)->lpVtbl -> get_ModuleFiles(This,Files)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmGetFiles_get_ModuleFiles_Proxy( 
    IMsmGetFiles __RPC_FAR * This,
    /* [retval][out] */ IMsmStrings __RPC_FAR *__RPC_FAR *Files);


void __RPC_STUB IMsmGetFiles_get_ModuleFiles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);

#endif 	/* __IMsmGetFiles_INTERFACE_DEFINED__ */



// The following interface is available only on MergeMod v1.5 and later
#if (_WIN32_MSM >= 150)

// --------------------------------------------------------------------------
// IMsmMerge2 - primary interface to the MsmMerge2 object. Allows the client
// to open and close databases, perform merges, retrieve the results
// of a merge, control the creation of a debug-level log, and extract the
// files from a module to disk. Extends the original object by adding
// LFN support and configurable module support.
// --------------------------------------------------------------------------

#ifndef __IMsmMerge2_INTERFACE_DEFINED__
#define __IMsmMerge2_INTERFACE_DEFINED__




#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("351A72AB-21CB-47AB-B7AA-C4D7B02EA305")
    IMsmMerge2 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OpenDatabase( 
            /* [in] */ const BSTR Path) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OpenModule( 
            /* [in] */ const BSTR Path,
            /* [in] */ const short Language) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CloseDatabase( 
            /* [in] */ const VARIANT_BOOL Commit) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CloseModule( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OpenLog( 
            /* [in] */ const BSTR Path) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CloseLog( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Log( 
            /* [in] */ const BSTR Message) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Errors( 
            /* [retval][out] */ IMsmErrors __RPC_FAR *__RPC_FAR *Errors) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Dependencies( 
            /* [retval][out] */ IMsmDependencies __RPC_FAR *__RPC_FAR *Dependencies) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Merge( 
            /* [in] */ const BSTR Feature,
            /* [in] */ const BSTR RedirectDir) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Connect( 
            /* [in] */ const BSTR Feature) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExtractCAB( 
            /* [in] */ const BSTR FileName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExtractFiles( 
            /* [in] */ const BSTR Path) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE MergeEx( 
            /* [in] */ const BSTR Feature,
            /* [in] */ const BSTR RedirectDir,
            /* [in] */ IUnknown __RPC_FAR *pConfiguration) = 0;
        
      
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExtractFilesEx( 
            /* [in] */ const BSTR Path,
            /* [in] */ VARIANT_BOOL fLongFileNames,
            /* [out] */ IMsmStrings __RPC_FAR *__RPC_FAR *pFilePaths) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ConfigurableItems( 
            /* [retval][out] */ IMsmConfigurableItems __RPC_FAR *__RPC_FAR *ConfigurableItems) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateSourceImage( 
            /* [in] */ const BSTR Path,
            /* [in] */ VARIANT_BOOL fLongFileNames,
            /* [out] */ IMsmStrings __RPC_FAR *__RPC_FAR *pFilePaths) = 0;

        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ModuleFiles( 
            /* [retval][out] */ IMsmStrings **Files) = 0;        
    };
    
#else 	/* C style interface */

    typedef struct IMsmMerge2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IMsmMerge2 __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IMsmMerge2 __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OpenDatabase )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ const BSTR Path);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OpenModule )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ const BSTR Path,
            /* [in] */ const short Language);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CloseDatabase )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ const VARIANT_BOOL Commit);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CloseModule )( 
            IMsmMerge2 __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OpenLog )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ const BSTR Path);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CloseLog )( 
            IMsmMerge2 __RPC_FAR * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Log )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ const BSTR Message);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Errors )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [retval][out] */ IMsmErrors __RPC_FAR *__RPC_FAR *Errors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Dependencies )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [retval][out] */ IMsmDependencies __RPC_FAR *__RPC_FAR *Dependencies);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Merge )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ const BSTR Feature,
            /* [in] */ const BSTR RedirectDir);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Connect )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ const BSTR Feature);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ExtractCAB )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ const BSTR FileName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ExtractFiles )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ const BSTR Path);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MergeEx )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ const BSTR Feature,
            /* [in] */ const BSTR RedirectDir,
            /* [in] */ IMsmConfigureModule __RPC_FAR *pConfiguration);
   
      /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ExtractFilesEx )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ const BSTR Path,
            /* [in] */ VARIANT_BOOL fLongFileNames,
            /* [out] */ IMsmStrings __RPC_FAR *__RPC_FAR *pFilePaths);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ConfigurableItems )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [retval][out] */ IMsmConfigurableItems __RPC_FAR *__RPC_FAR *ConfigurableItems);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateSourceImage )( 
            IMsmMerge2 __RPC_FAR * This,
            /* [in] */ const BSTR Path,
            /* [in] */ VARIANT_BOOL fLongFileNames,
            /* [out] */ IMsmStrings __RPC_FAR *__RPC_FAR *pFilePaths);

        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ModuleFiles )( 
            IMsmMerge2 * This,
            /* [retval][out] */ IMsmStrings **Files);
        
        END_INTERFACE
    } IMsmMerge2Vtbl;

    interface IMsmMerge2
    {
        CONST_VTBL struct IMsmMerge2Vtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMsmMerge2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IMsmMerge2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IMsmMerge2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IMsmMerge2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IMsmMerge2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IMsmMerge2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IMsmMerge2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IMsmMerge2_OpenDatabase(This,Path)	\
    (This)->lpVtbl -> OpenDatabase(This,Path)

#define IMsmMerge2_OpenModule(This,Path,Language)	\
    (This)->lpVtbl -> OpenModule(This,Path,Language)

#define IMsmMerge2_CloseDatabase(This,Commit)	\
    (This)->lpVtbl -> CloseDatabase(This,Commit)

#define IMsmMerge2_CloseModule(This)	\
    (This)->lpVtbl -> CloseModule(This)

#define IMsmMerge2_OpenLog(This,Path)	\
    (This)->lpVtbl -> OpenLog(This,Path)

#define IMsmMerge2_CloseLog(This)	\
    (This)->lpVtbl -> CloseLog(This)

#define IMsmMerge2_Log(This,Message)	\
    (This)->lpVtbl -> Log(This,Message)

#define IMsmMerge2_get_Errors(This,Errors)	\
    (This)->lpVtbl -> get_Errors(This,Errors)

#define IMsmMerge2_get_Dependencies(This,Dependencies)	\
    (This)->lpVtbl -> get_Dependencies(This,Dependencies)

#define IMsmMerge2_Merge(This,Feature,RedirectDir)	\
    (This)->lpVtbl -> Merge(This,Feature,RedirectDir)

#define IMsmMerge2_Connect(This,Feature)	\
    (This)->lpVtbl -> Connect(This,Feature)

#define IMsmMerge2_ExtractCAB(This,FileName)	\
    (This)->lpVtbl -> ExtractCAB(This,FileName)

#define IMsmMerge2_ExtractFiles(This,Path)	\
    (This)->lpVtbl -> ExtractFiles(This,Path)

#define IMsmMerge2_MergeEx(This,Feature,RedirectDir,pConfiguration)	\
    (This)->lpVtbl -> MergeEx(This,Feature,RedirectDir,pConfiguration)

#define IMsmMerge2_ExtractFilesEx(This,Path,fLongFileNames,pFilePaths)	\
    (This)->lpVtbl -> ExtractFilesEx(This,Path,fLongFileNames,pFilePaths)

#define IMsmMerge2_get_ConfigurableItems(This,ConfigurableItems)	\
    (This)->lpVtbl -> get_ConfigurableItems(This,ConfigurableItems)

#define IMsmMerge2_CreateSourceImage(This,Path,fLongFileNames,pFilePaths)	\
    (This)->lpVtbl -> CreateSourceImage(This,Path,fLongFileNames,pFilePaths)

#define IMsmMerge2_get_ModuleFiles(This,Files)	\
    (This)->lpVtbl -> get_ModuleFiles(This,Files)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_OpenDatabase_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [in] */ const BSTR Path);


void __RPC_STUB IMsmMerge2_OpenDatabase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_OpenModule_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [in] */ const BSTR Path,
    /* [in] */ const short Language);


void __RPC_STUB IMsmMerge2_OpenModule_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_CloseDatabase_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [in] */ const VARIANT_BOOL Commit);


void __RPC_STUB IMsmMerge2_CloseDatabase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_CloseModule_Proxy( 
    IMsmMerge2 __RPC_FAR * This);


void __RPC_STUB IMsmMerge2_CloseModule_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_OpenLog_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [in] */ const BSTR Path);


void __RPC_STUB IMsmMerge2_OpenLog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_CloseLog_Proxy( 
    IMsmMerge2 __RPC_FAR * This);


void __RPC_STUB IMsmMerge2_CloseLog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_Log_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [in] */ const BSTR Message);


void __RPC_STUB IMsmMerge2_Log_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_get_Errors_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [retval][out] */ IMsmErrors __RPC_FAR *__RPC_FAR *Errors);


void __RPC_STUB IMsmMerge2_get_Errors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_get_Dependencies_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [retval][out] */ IMsmDependencies __RPC_FAR *__RPC_FAR *Dependencies);


void __RPC_STUB IMsmMerge2_get_Dependencies_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_Merge_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [in] */ const BSTR Feature,
    /* [in] */ const BSTR RedirectDir);


void __RPC_STUB IMsmMerge2_Merge_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_Connect_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [in] */ const BSTR Feature);


void __RPC_STUB IMsmMerge2_Connect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_ExtractCAB_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [in] */ const BSTR FileName);


void __RPC_STUB IMsmMerge2_ExtractCAB_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_ExtractFiles_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [in] */ const BSTR Path);


void __RPC_STUB IMsmMerge2_ExtractFiles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_MergeEx_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [in] */ const BSTR Feature,
    /* [in] */ const BSTR RedirectDir,
    /* [in] */ IMsmConfigureModule __RPC_FAR *pConfiguration);


void __RPC_STUB IMsmMerge2_MergeEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_ExtractFilesEx_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [in] */ const BSTR Path,
    /* [in] */ VARIANT_BOOL fLongFileNames,
    /* [out] */ IMsmStrings __RPC_FAR *__RPC_FAR *pFilePaths);


void __RPC_STUB IMsmMerge2_ExtractFilesEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_get_ConfigurableItems_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [retval][out] */ IMsmConfigurableItems __RPC_FAR *__RPC_FAR *
ConfigurableItems);


void __RPC_STUB IMsmMerge2_get_ConfigurableItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE 
IMsmMerge2_CreateSourceImage_Proxy( 
    IMsmMerge2 __RPC_FAR * This,
    /* [in] */ const BSTR Path,
    /* [in] */ VARIANT_BOOL fLongFileNames,
    /* [out] */ IMsmStrings __RPC_FAR *__RPC_FAR *pFilePaths);


void __RPC_STUB IMsmMerge2_CreateSourceImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMsmMerge2_get_ModuleFiles_Proxy( 
    IMsmMerge2 * This,
    /* [retval][out] */ IMsmStrings **Files);


void __RPC_STUB IMsmMerge2_get_ModuleFiles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);

#endif 	/* __IMsmMerge2_INTERFACE_DEFINED__ */


#endif // _WIN32_MSM >= 150


// --------------------------------------------------------------------------
// TypeLib definitions
// --------------------------------------------------------------------------

#ifndef __MsmMergeTypeLib_LIBRARY_DEFINED__
#define __MsmMergeTypeLib_LIBRARY_DEFINED__

#ifdef __cplusplus
class DECLSPEC_UUID("0ADDA830-2C26-11D2-AD65-00A0C9AF11A6")
MsmMerge;
#endif

// the following class is available only on MergeMod v1.5 or later
#if (_WIN32_MSM >= 150)

#ifdef __cplusplus

class DECLSPEC_UUID("F94985D5-29F9-4743-9805-99BC3F35B678")
MsmMerge2;
#endif
#endif // _WIN32_MSM >= 150

#endif /* __MsmMergeTypeLib_LIBRARY_DEFINED__ */


// --------------------------------------------------------------------------
// Additional Prototypes for ALL interfaces
// --------------------------------------------------------------------------

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); 


#ifdef __cplusplus
}
#endif

// --------------------------------------------------------------------------
// MergeMod Interface IDs
// --------------------------------------------------------------------------
/* [local] */ 


DEFINE_GUID(IID_IEnumMsmString, 0x0ADDA826,0x2C26,0x11D2, 0xAD,0x65,0x00,0xA0,0xC9,0xAF,0x11,0xA6);
DEFINE_GUID(IID_IMsmStrings, 0x0ADDA827,0x2C26,0x11D2, 0xAD,0x65,0x00,0xA0,0xC9,0xAF,0x11,0xA6);
DEFINE_GUID(IID_IMsmError, 0x0ADDA828,0x2C26,0x11D2, 0xAD,0x65,0x00,0xA0,0xC9,0xAF,0x11,0xA6);
DEFINE_GUID(IID_IEnumMsmError, 0x0ADDA829,0x2C26,0x11D2, 0xAD,0x65,0x00,0xA0,0xC9,0xAF,0x11,0xA6);
DEFINE_GUID(IID_IMsmErrors, 0x0ADDA82A,0x2C26,0x11D2, 0xAD,0x65,0x00,0xA0,0xC9,0xAF,0x11,0xA6);
DEFINE_GUID(IID_IMsmDependency, 0x0ADDA82B,0x2C26,0x11D2, 0xAD,0x65,0x00,0xA0,0xC9,0xAF,0x11,0xA6);
DEFINE_GUID(IID_IEnumMsmDependency, 0x0ADDA82C,0x2C26,0x11D2, 0xAD,0x65,0x00,0xA0,0xC9,0xAF,0x11,0xA6);
DEFINE_GUID(IID_IMsmDependencies, 0x0ADDA82D,0x2C26,0x11D2, 0xAD,0x65,0x00,0xA0,0xC9,0xAF,0x11,0xA6);
DEFINE_GUID(IID_IMsmMerge, 0x0ADDA82E,0x2C26,0x11D2, 0xAD,0x65,0x00,0xA0,0xC9,0xAF,0x11,0xA6);
DEFINE_GUID(IID_IMsmGetFiles, 0x7041ae26, 0x2d78, 0x11d2, 0x88, 0x8a, 0x0, 0xa0, 0xc9, 0x81, 0xb0, 0x15);

DEFINE_GUID(LIBID_MsmMergeTypeLib, 0x0ADDA82F,0x2C26,0x11D2, 0xAD,0x65,0x00,0xA0,0xC9,0xAF,0x11,0xA6);
DEFINE_GUID(CLSID_MsmMerge, 0x0ADDA830,0x2C26,0x11D2, 0xAD,0x65,0x00,0xA0,0xC9,0xAF,0x11,0xA6);

#if (_WIN32_MSM >= 150)
DEFINE_GUID(IID_IMsmMerge2, 0x351A72AB, 0x21CB, 0x47AB, 0xB7, 0xAA, 0xC4, 0xD7, 0xB0, 0x2E, 0xA3, 0x05);
DEFINE_GUID(IID_IMsmConfigurableItem, 0x4D6E6284, 0xD21D, 0x401E, 0x84, 0xF6, 0x90, 0x9E, 0x00, 0xB5, 0x0F, 0x71);
DEFINE_GUID(IID_IEnumMsmConfigurableItem, 0x832C6969, 0x4826, 0x4C24, 0xA3, 0x97, 0xB7, 0x00, 0x2D, 0x81, 0x96, 0xE6);
DEFINE_GUID(IID_IMsmConfigurableItems, 0x55BF723C, 0x9A0D, 0x463E, 0xB4, 0x2B, 0xB4, 0xFB, 0xC7, 0xBE, 0x3C, 0x7C);
DEFINE_GUID(IID_IMsmConfigureModule, 0xAC013209, 0x18A7, 0x4851, 0x8A, 0x21, 0x23, 0x53, 0x44, 0x3D, 0x70, 0xA0);
DEFINE_GUID(CLSID_MsmMerge2, 0xF94985D5,0x29F9,0x4743, 0x98,0x05,0x99,0xBC,0x3F,0x35,0xB6,0x78);
#endif

#endif // __mergemod_h__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\metadatadeviceservice.h ===
/*
 *  MetadataDeviceService.h
 *
 *  Contains definitions of the Device Metadata Service
 *
 *  Copyright (c) Microsoft Corporation, All Rights Reserved.
 *
 */

#ifndef _METADATADEVICESERVICE_H_
#define _METADATADEVICESERVICE_H_

#include <DeviceServices.h>

/*****************************************************************************/
/*  Device Metadata Service Info                                             */
/*****************************************************************************/

DEFINE_DEVSVCGUID(SERVICE_DeviceMetadata,
    0x332ffe6a, 0xaf65, 0x41e1, 0xa0, 0xaf, 0xd3, 0xe2, 0x62, 0x7b, 0xdf, 0x54);

#define NAME_DeviceMetadataSvc              L"Metadata"
#define TYPE_DeviceMetadataSvc              DEVSVCTYPE_DEFAULT


/*****************************************************************************/
/*  Device Metadata Service Object Formats                                   */
/*****************************************************************************/

/*  FORMAT_DeviceMetadataCAB
 *
 *  CAB object format
 */

DEFINE_DEVSVCGUID(FORMAT_DeviceMetadataCAB,
    0xe1809599, 0x4303, 0x4e3b, 0x92, 0x44, 0x99, 0xc6, 0x2c, 0x25, 0x45, 0x51);

#define NAME_DeviceMetadataCAB              L"DeviceMetadataCAB"


/*****************************************************************************/
/*  Device Metadata Service Object Property Keys                             */
/*****************************************************************************/

DEFINE_DEVSVCGUID(NAMESPACE_DeviceMetadataObj,
    0x68bb7eeb, 0x9eef, 0x45bd, 0x8d, 0xe6, 0x3b, 0x92, 0xa5, 0x7c, 0xae, 0x1e);


/*  PKEY_DeviceMetadataObj_ContentID
 *
 *  Contains the GUID that uniquely identifies the object cab contents.
 *
 *  Type: UInt128
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_DeviceMetadataObj_ContentID,
    0x68bb7eeb, 0x9eef, 0x45bd, 0x8d, 0xe6, 0x3b, 0x92, 0xa5, 0x7c, 0xae, 0x1e,
    3);

#define NAME_DeviceMetadataObj_ContentID    L"ContentID"


/*  PKEY_DeviceMetadataObj_DefaultCAB
 *
 *  Indicates whether this object is the default cab.  Each service shall have
 *  only one object marked as default.
 *
 *  Type: UInt8 Boolean
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_DeviceMetadataObj_DefaultCAB,
    0x68bb7eeb, 0x9eef, 0x45bd, 0x8d, 0xe6, 0x3b, 0x92, 0xa5, 0x7c, 0xae, 0x1e,
    4);

#define NAME_DeviceMetadataObj_DefaultCAB   L"DefaultCAB"

#define ENUM_DeviceMetadataObj_DefaultCABFalse  0
#define ENUM_DeviceMetadataObj_DefaultCABTrue   1

#endif  /* _METADATADEVICESERVICE_H_ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\mfapi.h ===
//*@@@+++@@@@******************************************************************
//
// Microsoft Windows Media Foundation
// Copyright (C) Microsoft Corporation. All rights reserved.
//
//*@@@---@@@@******************************************************************
//

//
// MFAPI.h is the header containing the APIs for using the MF platform.
//

#pragma once
#if !defined(__MFAPI_H__)
#define __MFAPI_H__

#pragma pack(push, mfhrds)
#include <mfobjects.h>
#pragma pack(pop, mfhrds)

#include "mmreg.h"

#include <avrt.h>
#ifndef AVRT_DATA
#define AVRT_DATA
#endif
#ifndef AVRT_BSS
#define AVRT_BSS
#endif

#if !defined(MF_VERSION)

#if (WINVER >= _WIN32_WINNT_WIN7)

#define MF_SDK_VERSION 0x0002

#else // Vista

#define MF_SDK_VERSION 0x0001

#endif // (WINVER >= _WIN32_WINNT_WIN7)

#define MF_API_VERSION 0x0070 // This value is unused in the Win7 release and left at its Vista release value
#define MF_VERSION (MF_SDK_VERSION << 16 | MF_API_VERSION)

#endif //!defined(MF_VERSION)


#define MFSTARTUP_NOSOCKET 0x1
#define MFSTARTUP_LITE (MFSTARTUP_NOSOCKET)
#define MFSTARTUP_FULL 0

#if defined(__cplusplus)
extern "C" {
#endif

////////////////////////////////////////////////////////////////////////////////
///////////////////////////////   Startup/Shutdown  ////////////////////////////
////////////////////////////////////////////////////////////////////////////////

//
// Initializes the platform object.
// Must be called before using Media Foundation.
// A matching MFShutdown call must be made when the application is done using
// Media Foundation.
// The "Version" parameter should be set to MF_API_VERSION.
// Application should not call MFStartup / MFShutdown from workqueue threads
//
#if defined(__cplusplus)
STDAPI MFStartup( ULONG Version, DWORD dwFlags = MFSTARTUP_FULL );
#else
STDAPI MFStartup( ULONG Version, DWORD dwFlags );
#endif

//
// Shuts down the platform object.
// Releases all resources including threads.
// Application should call MFShutdown the same number of times as MFStartup
// Application should not call MFStartup / MFShutdown from workqueue threads
//
STDAPI MFShutdown();


////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////    Platform    ///////////////////////////////
////////////////////////////////////////////////////////////////////////////////

//
// These functions can be used to keep the MF platform object in place.
// Every call to MFLockPlatform should have a matching call to MFUnlockPlatform
//
STDAPI MFLockPlatform();
STDAPI MFUnlockPlatform();

///////////////////////////////////////////////////////////////////////////////

//
// MF workitem functions
//
typedef unsigned __int64 MFWORKITEM_KEY;

STDAPI MFPutWorkItem(
            DWORD dwQueue,
            IMFAsyncCallback * pCallback,
            IUnknown * pState);

STDAPI MFPutWorkItemEx(
            DWORD dwQueue,
            IMFAsyncResult * pResult);

STDAPI MFScheduleWorkItem(
            IMFAsyncCallback * pCallback,
            IUnknown * pState,
            INT64 Timeout,
            __out_opt MFWORKITEM_KEY * pKey);

STDAPI MFScheduleWorkItemEx(
            IMFAsyncResult * pResult,
            INT64 Timeout,
            __out_opt MFWORKITEM_KEY * pKey);

//
//   The CancelWorkItem method is used by objects to cancel scheduled operation
//   Due to asynchronous nature of timers, application might still get a
//   timer callback after MFCancelWorkItem has returned.
//
STDAPI MFCancelWorkItem(
            MFWORKITEM_KEY Key);


///////////////////////////////////////////////////////////////////////////////

//
// MF periodic callbacks
//
STDAPI MFGetTimerPeriodicity(
            __out DWORD * Periodicity);

typedef void (*MFPERIODICCALLBACK)(IUnknown* pContext);

STDAPI MFAddPeriodicCallback(
            MFPERIODICCALLBACK Callback,
            IUnknown * pContext,
            __out_opt DWORD * pdwKey);

STDAPI MFRemovePeriodicCallback(
            DWORD dwKey);

///////////////////////////////////////////////////////////////////////////////

//
// MF work queues
//

#if (WINVER >= _WIN32_WINNT_WIN7)
//
// MFASYNC_WORKQUEUE_TYPE: types of work queue used by MFAllocateWorkQueueEx
//
typedef enum
{
    // MF_STANDARD_WORKQUEUE: Work queue in a thread without Window 
    // message loop.
    MF_STANDARD_WORKQUEUE = 0,

    // MF_WINDOW_WORKQUEUE: Work queue in a thread running Window 
    // Message loop that calls PeekMessage() / DispatchMessage()..
    MF_WINDOW_WORKQUEUE = 1,
}   MFASYNC_WORKQUEUE_TYPE;

STDAPI MFAllocateWorkQueueEx(
            __in MFASYNC_WORKQUEUE_TYPE WorkQueueType,
            __out OUT DWORD * pdwWorkQueue);
#endif // (WINVER >= _WIN32_WINNT_WIN7)

//
// Allocate a standard work queue. the behaviour is the same with:
// MFAllocateWorkQueueEx( MF_STANDARD_WORKQUEUE, pdwWorkQueue )
//
STDAPI MFAllocateWorkQueue(
            __out OUT DWORD * pdwWorkQueue);


STDAPI MFLockWorkQueue(
            __in DWORD dwWorkQueue);

STDAPI MFUnlockWorkQueue(
            __in DWORD dwWorkQueue);

STDAPI MFBeginRegisterWorkQueueWithMMCSS(
            DWORD dwWorkQueueId,
            __in LPCWSTR wszClass,
            DWORD dwTaskId,
            __in IMFAsyncCallback * pDoneCallback,
            __in IUnknown * pDoneState );

STDAPI MFEndRegisterWorkQueueWithMMCSS(
            __in IMFAsyncResult * pResult,
            __out DWORD * pdwTaskId );

STDAPI MFBeginUnregisterWorkQueueWithMMCSS(
            DWORD dwWorkQueueId,
            __in IMFAsyncCallback * pDoneCallback,
            __in IUnknown * pDoneState );

STDAPI MFEndUnregisterWorkQueueWithMMCSS(
            __in IMFAsyncResult * pResult );

STDAPI MFGetWorkQueueMMCSSClass(
            DWORD dwWorkQueueId,
            __out_ecount_part_opt(*pcchClass,*pcchClass)  LPWSTR pwszClass,
            __inout  DWORD *pcchClass );

STDAPI MFGetWorkQueueMMCSSTaskId(
            DWORD dwWorkQueueId,
            __out LPDWORD pdwTaskId );

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////////    Async Model //////////////////////////////
///////////////////////////////////////////////////////////////////////////////

//
// Instantiates the MF-provided Async Result implementation
//
STDAPI MFCreateAsyncResult(
    IUnknown * punkObject,
    IMFAsyncCallback * pCallback,
    IUnknown * punkState,
    __out IMFAsyncResult ** ppAsyncResult );

//
// Helper for calling IMFAsyncCallback::Invoke
//
STDAPI MFInvokeCallback(
    IMFAsyncResult * pAsyncResult );


//
// MFASYNCRESULT struct.
// Any implementation of IMFAsyncResult must inherit from this struct;
// the Media Foundation workqueue implementation depends on this.
//
#if defined(__cplusplus) && !defined(CINTERFACE)
typedef struct tagMFASYNCRESULT : public IMFAsyncResult
{
    OVERLAPPED overlapped;
    IMFAsyncCallback * pCallback;
    HRESULT hrStatusResult;
    DWORD dwBytesTransferred;
    HANDLE hEvent;
}   MFASYNCRESULT;
#else /* C style interface */
typedef struct tagMFASYNCRESULT
{
    IMFAsyncResult AsyncResult;
    OVERLAPPED overlapped;
    IMFAsyncCallback * pCallback;
    HRESULT hrStatusResult;
    DWORD dwBytesTransferred;
    HANDLE hEvent;
}   MFASYNCRESULT;
#endif /* C style interface */


///////////////////////////////////////////////////////////////////////////////
/////////////////////////////////    Files       //////////////////////////////
///////////////////////////////////////////////////////////////////////////////

//
// Regardless of the access mode with which the file is opened, the sharing
// permissions will allow shared reading and deleting.
//
STDAPI MFCreateFile(
    MF_FILE_ACCESSMODE  AccessMode,
    MF_FILE_OPENMODE    OpenMode,
    MF_FILE_FLAGS       fFlags,
    LPCWSTR             pwszFileURL,
    __out IMFByteStream       **ppIByteStream );

STDAPI MFCreateTempFile(
    MF_FILE_ACCESSMODE  AccessMode,
    MF_FILE_OPENMODE    OpenMode,
    MF_FILE_FLAGS       fFlags,
    __out IMFByteStream       **ppIByteStream );

STDAPI MFBeginCreateFile(
    MF_FILE_ACCESSMODE  AccessMode,
    MF_FILE_OPENMODE    OpenMode,
    MF_FILE_FLAGS       fFlags,
    LPCWSTR             pwszFilePath,
    IMFAsyncCallback *  pCallback,
    IUnknown *          pState,
    __out IUnknown ** ppCancelCookie);

STDAPI MFEndCreateFile(
    IMFAsyncResult * pResult,
    __out IMFByteStream **ppFile );

STDAPI MFCancelCreateFile(
    IUnknown * pCancelCookie);


///////////////////////////////////////////////////////////////////////////////
/////////////////////////////////    Buffers     //////////////////////////////
///////////////////////////////////////////////////////////////////////////////

//
// Creates an IMFMediaBuffer in memory
//
STDAPI MFCreateMemoryBuffer(
    __in DWORD                      cbMaxLength,
    __out IMFMediaBuffer **         ppBuffer );

//
// Creates an IMFMediaBuffer wrapper at the given offset and length
// within an existing IMFMediaBuffer
//
STDAPI MFCreateMediaBufferWrapper(
    __in IMFMediaBuffer *           pBuffer,
    __in DWORD                      cbOffset,
    __in DWORD                      dwLength,
    __out IMFMediaBuffer **         ppBuffer );

//
// Creates a legacy buffer (IMediaBuffer) wrapper at the given offset within
// an existing IMFMediaBuffer.
// pSample is optional.  It can point to the original IMFSample from which this
// IMFMediaBuffer came.  If provided, then *ppMediaBuffer will succeed
// QueryInterface for IID_IMFSample, from which the original sample's attributes
// can be obtained
//
STDAPI MFCreateLegacyMediaBufferOnMFMediaBuffer(
    __in_opt IMFSample *            pSample,
    __in IMFMediaBuffer *           pMFMediaBuffer,
    __in DWORD                      cbOffset,
    __deref_out IMediaBuffer **     ppMediaBuffer );

//
// Create a DirectX surface buffer
//
STDAPI MFCreateDXSurfaceBuffer(
    __in REFIID                     riid,
    __in IUnknown *                 punkSurface,
    __in BOOL                       fBottomUpWhenLinear,
    __deref_out IMFMediaBuffer **   ppBuffer );


//
// Create an aligned memory buffer.
// The following constants were chosen for parity with the alignment constants
// in ntioapi.h
// 
#define MF_1_BYTE_ALIGNMENT       0x00000000 
#define MF_2_BYTE_ALIGNMENT       0x00000001
#define MF_4_BYTE_ALIGNMENT       0x00000003
#define MF_8_BYTE_ALIGNMENT       0x00000007 
#define MF_16_BYTE_ALIGNMENT      0x0000000f
#define MF_32_BYTE_ALIGNMENT      0x0000001f
#define MF_64_BYTE_ALIGNMENT      0x0000003f
#define MF_128_BYTE_ALIGNMENT     0x0000007f
#define MF_256_BYTE_ALIGNMENT     0x000000ff
#define MF_512_BYTE_ALIGNMENT     0x000001ff

STDAPI MFCreateAlignedMemoryBuffer(
    __in DWORD                      cbMaxLength,
    __in DWORD                      cbAligment, 
    __out IMFMediaBuffer **         ppBuffer );

//
// This GUID is used in IMFGetService::GetService calls to retrieve 
// interfaces from the buffer.  Its value is defined in evr.h
// 
EXTERN_C const GUID MR_BUFFER_SERVICE;

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////////    Events      //////////////////////////////
///////////////////////////////////////////////////////////////////////////////

//
// Instantiates the MF-provided Media Event implementation.
//
STDAPI MFCreateMediaEvent(
    __in MediaEventType met,
    __in REFGUID guidExtendedType,
    __in HRESULT hrStatus,
    __in_opt const PROPVARIANT * pvValue,
    __out IMFMediaEvent ** ppEvent );

//
// Instantiates an object that implements IMFMediaEventQueue.
// Components that provide an IMFMediaEventGenerator can use this object
// internally to do their Media Event Generator work for them.
// IMFMediaEventGenerator calls should be forwarded to the similar call
// on this object's IMFMediaEventQueue interface (e.g. BeginGetEvent,
// EndGetEvent), and the various IMFMediaEventQueue::QueueEventXXX methods
// can be used to queue events that the caller will consume.
//
STDAPI MFCreateEventQueue(
    __out IMFMediaEventQueue **ppMediaEventQueue );

//
// Event attributes
// Some of the common Media Foundation events have associated attributes
// that go in their IMFAttributes stores
//

//
// MESessionCapabilitiesChanged attributes
//

// MF_EVENT_SESSIONCAPS {7E5EBCD0-11B8-4abe-AFAD-10F6599A7F42}
// Type: UINT32
DEFINE_GUID(MF_EVENT_SESSIONCAPS,
0x7e5ebcd0, 0x11b8, 0x4abe, 0xaf, 0xad, 0x10, 0xf6, 0x59, 0x9a, 0x7f, 0x42);

// MF_EVENT_SESSIONCAPS_DELTA {7E5EBCD1-11B8-4abe-AFAD-10F6599A7F42}
// Type: UINT32
DEFINE_GUID(MF_EVENT_SESSIONCAPS_DELTA,
0x7e5ebcd1, 0x11b8, 0x4abe, 0xaf, 0xad, 0x10, 0xf6, 0x59, 0x9a, 0x7f, 0x42);

// Session capabilities bitflags
#define MFSESSIONCAP_START              0x00000001
#define MFSESSIONCAP_SEEK               0x00000002
#define MFSESSIONCAP_PAUSE              0x00000004
#define MFSESSIONCAP_RATE_FORWARD       0x00000010
#define MFSESSIONCAP_RATE_REVERSE       0x00000020

//
// MESessionTopologyStatus attributes
//

// Possible values for MF_EVENT_TOPOLOGY_STATUS attribute.
//
// For a given topology, these status values will arrive via
// MESessionTopologyStatus in the order below.
//
// However, there are no guarantees about how these status values will be
// ordered between two consecutive topologies.  For example,
// MF_TOPOSTATUS_READY could arrive for topology n+1 before
// MF_TOPOSTATUS_ENDED arrives for topology n if the application called
// IMFMediaSession::SetTopology for topology n+1 well enough in advance of the
// end of topology n.  Conversely, if topology n ends before the application
// calls IMFMediaSession::SetTopology for topology n+1, then
// MF_TOPOSTATUS_ENDED will arrive for topology n before MF_TOPOSTATUS_READY
// arrives for topology n+1.
typedef enum
{
    // MF_TOPOSTATUS_INVALID: Invalid value; will not be sent
    MF_TOPOSTATUS_INVALID = 0,

    // MF_TOPOSTATUS_READY: The topology has been put in place and is
    // ready to start.  All GetService calls to the Media Session will use
    // this topology.
    MF_TOPOSTATUS_READY     = 100,

    // MF_TOPOSTATUS_STARTED_SOURCE: The Media Session has started to read
    // and process data from the Media Source(s) in this topology.
    MF_TOPOSTATUS_STARTED_SOURCE = 200,


#if (WINVER >= _WIN32_WINNT_WIN7)
    // MF_TOPOSTATUS_DYNAMIC_CHANGED: The topology has been dynamic changed
    // due to the format change.
    MF_TOPOSTATUS_DYNAMIC_CHANGED = 210,
#endif // (WINVER >= _WIN32_WINNT_WIN7) 

    // MF_TOPOSTATUS_SINK_SWITCHED: The Media Sinks in the pipeline have
    // switched from a previous topology to this topology.
    // Note that this status does not get sent for the first topology;
    // applications can assume that the sinks are playing the first
    // topology when they receive MESessionStarted.
    MF_TOPOSTATUS_SINK_SWITCHED = 300,
    
    // MF_TOPOSTATUS_ENDED: Playback of this topology is complete.
    // Before deleting this topology, however, the application should wait
    // for either MESessionEnded or the MF_TOPOSTATUS_STARTED_SOURCE status
    // on the next topology to ensure that the Media Session is no longer
    // using this topology.
    MF_TOPOSTATUS_ENDED = 400,

}   MF_TOPOSTATUS;

// MF_EVENT_TOPOLOGY_STATUS {30C5018D-9A53-454b-AD9E-6D5F8FA7C43B}
// Type: UINT32 {MF_TOPOLOGY_STATUS}
DEFINE_GUID(MF_EVENT_TOPOLOGY_STATUS,
0x30c5018d, 0x9a53, 0x454b, 0xad, 0x9e, 0x6d, 0x5f, 0x8f, 0xa7, 0xc4, 0x3b);

//
// MESessionNotifyPresentationTime attributes
//

// MF_EVENT_START_PRESENTATION_TIME {5AD914D0-9B45-4a8d-A2C0-81D1E50BFB07}
// Type: UINT64
DEFINE_GUID(MF_EVENT_START_PRESENTATION_TIME,
0x5ad914d0, 0x9b45, 0x4a8d, 0xa2, 0xc0, 0x81, 0xd1, 0xe5, 0xb, 0xfb, 0x7);

// MF_EVENT_PRESENTATION_TIME_OFFSET {5AD914D1-9B45-4a8d-A2C0-81D1E50BFB07}
// Type: UINT64
DEFINE_GUID(MF_EVENT_PRESENTATION_TIME_OFFSET,
0x5ad914d1, 0x9b45, 0x4a8d, 0xa2, 0xc0, 0x81, 0xd1, 0xe5, 0xb, 0xfb, 0x7);

// MF_EVENT_START_PRESENTATION_TIME_AT_OUTPUT {5AD914D2-9B45-4a8d-A2C0-81D1E50BFB07}
// Type: UINT64
DEFINE_GUID(MF_EVENT_START_PRESENTATION_TIME_AT_OUTPUT,
0x5ad914d2, 0x9b45, 0x4a8d, 0xa2, 0xc0, 0x81, 0xd1, 0xe5, 0xb, 0xfb, 0x7);

//

//
// MESourceStarted attributes
//

// MF_EVENT_SOURCE_FAKE_START {a8cc55a7-6b31-419f-845d-ffb351a2434b}
// Type: UINT32
DEFINE_GUID(MF_EVENT_SOURCE_FAKE_START,
0xa8cc55a7, 0x6b31, 0x419f, 0x84, 0x5d, 0xff, 0xb3, 0x51, 0xa2, 0x43, 0x4b);

// MF_EVENT_SOURCE_PROJECTSTART {a8cc55a8-6b31-419f-845d-ffb351a2434b}
// Type: UINT64
DEFINE_GUID(MF_EVENT_SOURCE_PROJECTSTART,
0xa8cc55a8, 0x6b31, 0x419f, 0x84, 0x5d, 0xff, 0xb3, 0x51, 0xa2, 0x43, 0x4b);

// MF_EVENT_SOURCE_ACTUAL_START {a8cc55a9-6b31-419f-845d-ffb351a2434b}
// Type: UINT64
DEFINE_GUID(MF_EVENT_SOURCE_ACTUAL_START,
0xa8cc55a9, 0x6b31, 0x419f, 0x84, 0x5d, 0xff, 0xb3, 0x51, 0xa2, 0x43, 0x4b);

//
// MEEndOfPresentationSegment attributes
//

// MF_EVENT_SOURCE_TOPOLOGY_CANCELED {DB62F650-9A5E-4704-ACF3-563BC6A73364}
// Type: UINT32
DEFINE_GUID(MF_EVENT_SOURCE_TOPOLOGY_CANCELED,
0xdb62f650, 0x9a5e, 0x4704, 0xac, 0xf3, 0x56, 0x3b, 0xc6, 0xa7, 0x33, 0x64);

//
// MESourceCharacteristicsChanged attributes
//

// MF_EVENT_SOURCE_CHARACTERISTICS {47DB8490-8B22-4f52-AFDA-9CE1B2D3CFA8}
// Type: UINT32
DEFINE_GUID(MF_EVENT_SOURCE_CHARACTERISTICS,
0x47db8490, 0x8b22, 0x4f52, 0xaf, 0xda, 0x9c, 0xe1, 0xb2, 0xd3, 0xcf, 0xa8);

// MF_EVENT_SOURCE_CHARACTERISTICS_OLD {47DB8491-8B22-4f52-AFDA-9CE1B2D3CFA8}
// Type: UINT32
DEFINE_GUID(MF_EVENT_SOURCE_CHARACTERISTICS_OLD,
0x47db8491, 0x8b22, 0x4f52, 0xaf, 0xda, 0x9c, 0xe1, 0xb2, 0xd3, 0xcf, 0xa8);

//
// MESourceRateChangeRequested attributes
//

// MF_EVENT_DO_THINNING {321EA6FB-DAD9-46e4-B31D-D2EAE7090E30}
// Type: UINT32
DEFINE_GUID(MF_EVENT_DO_THINNING,
0x321ea6fb, 0xdad9, 0x46e4, 0xb3, 0x1d, 0xd2, 0xea, 0xe7, 0x9, 0xe, 0x30);

//
// MEStreamSinkScrubSampleComplete attributes
//

// MF_EVENT_SCRUBSAMPLE_TIME {9AC712B3-DCB8-44d5-8D0C-37455A2782E3}
// Type: UINT64
DEFINE_GUID(MF_EVENT_SCRUBSAMPLE_TIME,
0x9ac712b3, 0xdcb8, 0x44d5, 0x8d, 0xc, 0x37, 0x45, 0x5a, 0x27, 0x82, 0xe3);

//
// MESinkInvalidated and MESessionStreamSinkFormatChanged attributes
//

// MF_EVENT_OUTPUT_NODE {830f1a8b-c060-46dd-a801-1c95dec9b107}
// Type: UINT64
DEFINE_GUID(MF_EVENT_OUTPUT_NODE,
0x830f1a8b, 0xc060, 0x46dd, 0xa8, 0x01, 0x1c, 0x95, 0xde, 0xc9, 0xb1, 0x07);

#if (WINVER >= _WIN32_WINNT_WIN7)
//
// METransformNeedInput attributes
// 

// MF_EVENT_MFT_INPUT_STREAM_ID {F29C2CCA-7AE6-42d2-B284-BF837CC874E2}
// Type: UINT32
DEFINE_GUID(MF_EVENT_MFT_INPUT_STREAM_ID, 
0xf29c2cca, 0x7ae6, 0x42d2, 0xb2, 0x84, 0xbf, 0x83, 0x7c, 0xc8, 0x74, 0xe2);

//
// METransformDrainComplete and METransformMarker attributes
//

// MF_EVENT_MFT_CONTEXT {B7CD31F1-899E-4b41-80C9-26A896D32977}
// Type: UINT64
DEFINE_GUID(MF_EVENT_MFT_CONTEXT, 
0xb7cd31f1, 0x899e, 0x4b41, 0x80, 0xc9, 0x26, 0xa8, 0x96, 0xd3, 0x29, 0x77);

#endif // (WINVER >= _WIN32_WINNT_WIN7)

////////////////////////////////////////////////////////////////////////////////
///////////////////////////////  Samples  //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

//
// Creates an instance of the Media Foundation implementation of IMFSample
//
STDAPI MFCreateSample( __out IMFSample **ppIMFSample );

//
// Sample attributes
// These are the well-known attributes that can be present on an MF Sample's
// IMFAttributes store
//

// MFSampleExtension_CleanPoint {9cdf01d8-a0f0-43ba-b077-eaa06cbd728a}
// Type: UINT32
// If present and nonzero, indicates that the sample is a clean point (key
// frame), and decoding can begin at this sample.
DEFINE_GUID(MFSampleExtension_CleanPoint,
0x9cdf01d8, 0xa0f0, 0x43ba, 0xb0, 0x77, 0xea, 0xa0, 0x6c, 0xbd, 0x72, 0x8a);

// MFSampleExtension_Discontinuity {9cdf01d9-a0f0-43ba-b077-eaa06cbd728a}
// Type: UINT32
// If present and nonzero, indicates that the sample data represents the first
// sample following a discontinuity (gap) in the stream of samples.
// This can happen, for instance, if the previous sample was lost in
// transmission.
DEFINE_GUID(MFSampleExtension_Discontinuity,
0x9cdf01d9, 0xa0f0, 0x43ba, 0xb0, 0x77, 0xea, 0xa0, 0x6c, 0xbd, 0x72, 0x8a);

// MFSampleExtension_Token {8294da66-f328-4805-b551-00deb4c57a61}
// Type: IUNKNOWN
// When an IMFMediaStream delivers a sample via MEMediaStream, this attribute
// should be set to the IUnknown *pToken argument that was passed with the
// IMFMediaStream::RequestSample call to which this sample corresponds.
DEFINE_GUID(MFSampleExtension_Token,
0x8294da66, 0xf328, 0x4805, 0xb5, 0x51, 0x00, 0xde, 0xb4, 0xc5, 0x7a, 0x61);

//
// The following four sample attributes are used for encrypted samples
//
DEFINE_GUID(MFSampleExtension_DescrambleData,   // UINT64
0x43483be6, 0x4903, 0x4314, 0xb0, 0x32, 0x29, 0x51, 0x36, 0x59, 0x36, 0xfc);
DEFINE_GUID(MFSampleExtension_SampleKeyID,      // UINT32
0x9ed713c8, 0x9b87, 0x4b26, 0x82, 0x97, 0xa9, 0x3b, 0x0c, 0x5a, 0x8a, 0xcc);
DEFINE_GUID(MFSampleExtension_GenKeyFunc,       // UINT64
0x441ca1ee, 0x6b1f, 0x4501, 0x90, 0x3a, 0xde, 0x87, 0xdf, 0x42, 0xf6, 0xed);
DEFINE_GUID(MFSampleExtension_GenKeyCtx,        // UINT64
0x188120cb, 0xd7da, 0x4b59, 0x9b, 0x3e, 0x92, 0x52, 0xfd, 0x37, 0x30, 0x1c);
DEFINE_GUID(MFSampleExtension_PacketCrossOffsets,        // BLOB
0x2789671d, 0x389f, 0x40bb, 0x90, 0xd9, 0xc2, 0x82, 0xf7, 0x7f, 0x9a, 0xbd);

/////////////////////////////////////////////////////////////////////////////
//
// MFSample STANDARD EXTENSION ATTRIBUTE GUIDs
//
/////////////////////////////////////////////////////////////////////////////

// {b1d5830a-deb8-40e3-90fa-389943716461}   MFSampleExtension_Interlaced                {UINT32 (BOOL)}
DEFINE_GUID(MFSampleExtension_Interlaced,
0xb1d5830a, 0xdeb8, 0x40e3, 0x90, 0xfa, 0x38, 0x99, 0x43, 0x71, 0x64, 0x61);

// {941ce0a3-6ae3-4dda-9a08-a64298340617}   MFSampleExtension_BottomFieldFirst          {UINT32 (BOOL)}
DEFINE_GUID(MFSampleExtension_BottomFieldFirst,
0x941ce0a3, 0x6ae3, 0x4dda, 0x9a, 0x08, 0xa6, 0x42, 0x98, 0x34, 0x06, 0x17);

// {304d257c-7493-4fbd-b149-9228de8d9a99}   MFSampleExtension_RepeatFirstField          {UINT32 (BOOL)}
DEFINE_GUID(MFSampleExtension_RepeatFirstField,
0x304d257c, 0x7493, 0x4fbd, 0xb1, 0x49, 0x92, 0x28, 0xde, 0x8d, 0x9a, 0x99);

// {9d85f816-658b-455a-bde0-9fa7e15ab8f9}   MFSampleExtension_SingleField               {UINT32 (BOOL)}
DEFINE_GUID(MFSampleExtension_SingleField,
0x9d85f816, 0x658b, 0x455a, 0xbd, 0xe0, 0x9f, 0xa7, 0xe1, 0x5a, 0xb8, 0xf9);

// {6852465a-ae1c-4553-8e9b-c3420fcb1637}   MFSampleExtension_DerivedFromTopField       {UINT32 (BOOL)}
DEFINE_GUID(MFSampleExtension_DerivedFromTopField,
0x6852465a, 0xae1c, 0x4553, 0x8e, 0x9b, 0xc3, 0x42, 0x0f, 0xcb, 0x16, 0x37);



///////////////////////////////////////////////////////////////////////////////////////////////////////////////  Attributes ////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

STDAPI
MFCreateAttributes(
    __out   IMFAttributes** ppMFAttributes,
    __in    UINT32          cInitialSize
    );

STDAPI
MFInitAttributesFromBlob(
    __in                    IMFAttributes*  pAttributes,
    __in_bcount(cbBufSize)  const UINT8*    pBuf,
    __in                    UINT            cbBufSize
    );

STDAPI
MFGetAttributesAsBlobSize(
    __in    IMFAttributes*  pAttributes,
    __out   UINT32*         pcbBufSize
    );

STDAPI
MFGetAttributesAsBlob(
    __in                    IMFAttributes*  pAttributes,
    __out_bcount(cbBufSize) UINT8*          pBuf,
    __in                    UINT            cbBufSize
    );

///////////////////////////////////////////////////////////////////////////////////////////////////////////////  MFT Register & Enum ////////////////////////////
////////////////////////////////////////////////////////////////////////////////

//
// MFT Registry categories
//

#ifdef MF_INIT_GUIDS
#include <initguid.h>
#endif

// {d6c02d4b-6833-45b4-971a-05a4b04bab91}   MFT_CATEGORY_VIDEO_DECODER
DEFINE_GUID(MFT_CATEGORY_VIDEO_DECODER,
0xd6c02d4b, 0x6833, 0x45b4, 0x97, 0x1a, 0x05, 0xa4, 0xb0, 0x4b, 0xab, 0x91);

// {f79eac7d-e545-4387-bdee-d647d7bde42a}   MFT_CATEGORY_VIDEO_ENCODER
DEFINE_GUID(MFT_CATEGORY_VIDEO_ENCODER,
0xf79eac7d, 0xe545, 0x4387, 0xbd, 0xee, 0xd6, 0x47, 0xd7, 0xbd, 0xe4, 0x2a);

// {12e17c21-532c-4a6e-8a1c-40825a736397}   MFT_CATEGORY_VIDEO_EFFECT
DEFINE_GUID(MFT_CATEGORY_VIDEO_EFFECT,
0x12e17c21, 0x532c, 0x4a6e, 0x8a, 0x1c, 0x40, 0x82, 0x5a, 0x73, 0x63, 0x97);

// {059c561e-05ae-4b61-b69d-55b61ee54a7b}   MFT_CATEGORY_MULTIPLEXER
DEFINE_GUID(MFT_CATEGORY_MULTIPLEXER,
0x059c561e, 0x05ae, 0x4b61, 0xb6, 0x9d, 0x55, 0xb6, 0x1e, 0xe5, 0x4a, 0x7b);

// {a8700a7a-939b-44c5-99d7-76226b23b3f1}   MFT_CATEGORY_DEMULTIPLEXER
DEFINE_GUID(MFT_CATEGORY_DEMULTIPLEXER,
0xa8700a7a, 0x939b, 0x44c5, 0x99, 0xd7, 0x76, 0x22, 0x6b, 0x23, 0xb3, 0xf1);

// {9ea73fb4-ef7a-4559-8d5d-719d8f0426c7}   MFT_CATEGORY_AUDIO_DECODER
DEFINE_GUID(MFT_CATEGORY_AUDIO_DECODER,
0x9ea73fb4, 0xef7a, 0x4559, 0x8d, 0x5d, 0x71, 0x9d, 0x8f, 0x04, 0x26, 0xc7);

// {91c64bd0-f91e-4d8c-9276-db248279d975}   MFT_CATEGORY_AUDIO_ENCODER
DEFINE_GUID(MFT_CATEGORY_AUDIO_ENCODER,
0x91c64bd0, 0xf91e, 0x4d8c, 0x92, 0x76, 0xdb, 0x24, 0x82, 0x79, 0xd9, 0x75);

// {11064c48-3648-4ed0-932e-05ce8ac811b7}   MFT_CATEGORY_AUDIO_EFFECT
DEFINE_GUID(MFT_CATEGORY_AUDIO_EFFECT,
0x11064c48, 0x3648, 0x4ed0, 0x93, 0x2e, 0x05, 0xce, 0x8a, 0xc8, 0x11, 0xb7);

#if (WINVER >= _WIN32_WINNT_WIN7)
// {302EA3FC-AA5F-47f9-9F7A-C2188BB163021}...MFT_CATEGORY_VIDEO_PROCESSOR
DEFINE_GUID(MFT_CATEGORY_VIDEO_PROCESSOR, 
0x302ea3fc, 0xaa5f, 0x47f9, 0x9f, 0x7a, 0xc2, 0x18, 0x8b, 0xb1, 0x63, 0x2);
#endif // (WINVER >= _WIN32_WINNT_WIN7)

// {90175d57-b7ea-4901-aeb3-933a8747756f}   MFT_CATEGORY_OTHER
DEFINE_GUID(MFT_CATEGORY_OTHER,
0x90175d57, 0xb7ea, 0x4901, 0xae, 0xb3, 0x93, 0x3a, 0x87, 0x47, 0x75, 0x6f);

//
// "Flags" is for future expansion - for now must be 0
//
STDAPI
MFTRegister(
    __in                            CLSID                   clsidMFT,
    __in                            GUID                    guidCategory,
    __in                            LPWSTR                  pszName,
    __in                            UINT32                  Flags,
    __in                            UINT32                  cInputTypes,
    __in_ecount_opt(cInputTypes)    MFT_REGISTER_TYPE_INFO* pInputTypes,
    __in                            UINT32                  cOutputTypes,
    __in_ecount_opt(cOutputTypes)   MFT_REGISTER_TYPE_INFO* pOutputTypes,
    __in_opt                        IMFAttributes*          pAttributes
    );

STDAPI
MFTUnregister(
    __in    CLSID   clsidMFT
    );

#if (WINVER >= _WIN32_WINNT_WIN7)
//  Register an MFT class in-process
STDAPI
MFTRegisterLocal(
   __in                        IClassFactory*          pClassFactory,
   __in                        REFGUID                 guidCategory,
   __in                        LPCWSTR                 pszName,
   __in                        UINT32                  Flags,
   __in                        UINT32                  cInputTypes,
   __in_ecount_opt(cInputTypes)const MFT_REGISTER_TYPE_INFO* pInputTypes,
   __in                        UINT32                  cOutputTypes,
   __in_ecount_opt(cOutputTypes)const MFT_REGISTER_TYPE_INFO* pOutputTypes
    );

//  Unregister locally registered MFT
//  If pClassFactory is NULL all local MFTs are unregistered
STDAPI
MFTUnregisterLocal(
    __in_opt    IClassFactory *   pClassFactory
    );

// Register an MFT class in-process, by CLSID
STDAPI
MFTRegisterLocalByCLSID(
   __in                        REFCLSID                clisdMFT,
   __in                        REFGUID                 guidCategory,
   __in                        LPCWSTR                 pszName,
   __in                        UINT32                  Flags,
   __in                        UINT32                  cInputTypes,
   __in_ecount_opt(cInputTypes)const MFT_REGISTER_TYPE_INFO* pInputTypes,
   __in                        UINT32                  cOutputTypes,
   __in_ecount_opt(cOutputTypes)const MFT_REGISTER_TYPE_INFO* pOutputTypes
    );

// Unregister locally registered MFT by CLSID
STDAPI
MFTUnregisterLocalByCLSID(
    __in    CLSID   clsidMFT
    );
#endif // (WINVER >= _WIN32_WINNT_WIN7)

//
// result *ppclsidMFT must be freed with CoTaskMemFree.
//
STDAPI
MFTEnum(
    __in                    GUID                    guidCategory,
    __in                    UINT32                  Flags,
    __in_opt                MFT_REGISTER_TYPE_INFO* pInputType,
    __in_opt                MFT_REGISTER_TYPE_INFO* pOutputType,
    __in_opt                IMFAttributes*          pAttributes,
    __deref_out_ecount(*pcMFTs)   CLSID**           ppclsidMFT, // must be freed with CoTaskMemFree
    __out                   UINT32*                 pcMFTs
    );

#if (WINVER >= _WIN32_WINNT_WIN7)

enum _MFT_ENUM_FLAG
{
    MFT_ENUM_FLAG_SYNCMFT        = 0x00000001,   // Enumerates V1 MFTs. This is default.
    MFT_ENUM_FLAG_ASYNCMFT       = 0x00000002,   // Enumerates only software async MFTs also known as V2 MFTs
    MFT_ENUM_FLAG_HARDWARE       = 0x00000004,   // Enumerates V2 hardware async MFTs
    MFT_ENUM_FLAG_FIELDOFUSE     = 0x00000008,   // Enumerates MFTs that require unlocking
    MFT_ENUM_FLAG_LOCALMFT       = 0x00000010,   // Enumerates Locally (in-process) registered MFTs
    MFT_ENUM_FLAG_TRANSCODE_ONLY = 0x00000020,   // Enumerates decoder MFTs used by transcode only    
    MFT_ENUM_FLAG_SORTANDFILTER  = 0x00000040,   // Apply system local, do not use and preferred sorting and filtering
    MFT_ENUM_FLAG_ALL            = 0x0000003F    // Enumerates all MFTs including SW and HW MFTs and applies filtering
};

//
// result *pppMFTActivate must be freed with CoTaskMemFree. Each IMFActivate pointer inside this
// buffer should be released.
//

STDAPI
MFTEnumEx(
    __in                                GUID                            guidCategory,
    __in                                UINT32                          Flags,
    __in_opt                            const MFT_REGISTER_TYPE_INFO*   pInputType,
    __in_opt                            const MFT_REGISTER_TYPE_INFO*   pOutputType,
    __deref_out_ecount(*pnumMFTActivate) IMFActivate***                 pppMFTActivate,
    __out                               UINT32*                         pnumMFTActivate
);
#endif // (WINVER >= _WIN32_WINNT_WIN7)

//
// results *pszName, *ppInputTypes, and *ppOutputTypes must be freed with CoTaskMemFree.
// *ppAttributes must be released.
//
STDAPI
MFTGetInfo(
    __in                                   CLSID                       clsidMFT,
    __out_opt                              LPWSTR*                     pszName,
    __deref_opt_out_ecount(*pcInputTypes)  MFT_REGISTER_TYPE_INFO**    ppInputTypes,
    __out_opt                              UINT32*                     pcInputTypes,
    __deref_opt_out_ecount(*pcOutputTypes) MFT_REGISTER_TYPE_INFO**    ppOutputTypes,
    __out_opt                              UINT32*                     pcOutputTypes,
    __deref_opt_out_opt                    IMFAttributes**             ppAttributes
    );


#if (WINVER >= _WIN32_WINNT_WIN7)

//
//  Get the plugin control API
//
STDAPI
MFGetPluginControl(
    __out IMFPluginControl **ppPluginControl
    );

//
//  Get MFT's merit - checking that is has a valid certificate
//
STDAPI
MFGetMFTMerit(
    __inout IUnknown *pMFT,
    __in    UINT32   cbVerifier,
    __in_bcount(cbVerifier) const BYTE * verifier,
    __out   DWORD   *merit
    );

#endif // (WINVER >= _WIN32_WINNT_WIN7)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////  MFT  Attributes GUIDs ////////////////////////////
// {53476A11-3F13-49fb-AC42-EE2733C96741} MFT_SUPPORT_DYNAMIC_FORMAT_CHANGE {UINT32 (BOOL)}
DEFINE_GUID(MFT_SUPPORT_DYNAMIC_FORMAT_CHANGE,
0x53476a11, 0x3f13, 0x49fb, 0xac, 0x42, 0xee, 0x27, 0x33, 0xc9, 0x67, 0x41);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////  Media Type GUIDs ////////////////////////////
////////////////////////////////////////////////////////////////////////////////

//
// GUIDs for media types
//

//
// In MF, media types for uncompressed video formats MUST be composed from a FourCC or D3DFORMAT combined with
// the "base GUID" {00000000-0000-0010-8000-00AA00389B71} by replacing the initial 32 bits with the FourCC/D3DFORMAT
//
// Audio media types for types which already have a defined wFormatTag value can be constructed similarly, by
// putting the wFormatTag (zero-extended to 32 bits) into the first 32 bits of the base GUID.
//
// Compressed video or audio can also use any well-known GUID that exists, or can create a new GUID.
//
// GUIDs for common media types are defined below.
//


#ifndef FCC
#define FCC(ch4) ((((DWORD)(ch4) & 0xFF) << 24) |     \
                  (((DWORD)(ch4) & 0xFF00) << 8) |    \
                  (((DWORD)(ch4) & 0xFF0000) >> 8) |  \
                  (((DWORD)(ch4) & 0xFF000000) >> 24))
#endif


//
// this macro creates a media type GUID from a FourCC, D3DFMT, or WAVE_FORMAT
//
#ifndef DEFINE_MEDIATYPE_GUID
#define DEFINE_MEDIATYPE_GUID(name, format) \
    DEFINE_GUID(name,                       \
    format, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);
#endif

//
// video media types
//

//
// If no D3D headers have been included yet, define local versions of D3DFMT constants we use.
// We can't include D3D headers from this header because we need it to be compatible with all versions
// of D3D.
//
#ifndef DIRECT3D_VERSION
#define D3DFMT_R8G8B8       20
#define D3DFMT_A8R8G8B8     21
#define D3DFMT_X8R8G8B8     22
#define D3DFMT_R5G6B5       23
#define D3DFMT_X1R5G5B5     24
#define D3DFMT_P8           41
#define LOCAL_D3DFMT_DEFINES 1
#endif

DEFINE_MEDIATYPE_GUID( MFVideoFormat_Base,      0x00000000 );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_RGB32,     D3DFMT_X8R8G8B8 );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_ARGB32,    D3DFMT_A8R8G8B8 );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_RGB24,     D3DFMT_R8G8B8 );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_RGB555,    D3DFMT_X1R5G5B5 );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_RGB565,    D3DFMT_R5G6B5 );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_RGB8,      D3DFMT_P8 );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_AI44,      FCC('AI44') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_AYUV,      FCC('AYUV') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_YUY2,      FCC('YUY2') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_YVYU,      FCC('YVYU') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_YVU9,      FCC('YVU9') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_UYVY,      FCC('UYVY') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_NV11,      FCC('NV11') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_NV12,      FCC('NV12') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_YV12,      FCC('YV12') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_I420,      FCC('I420') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_IYUV,      FCC('IYUV') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_Y210,      FCC('Y210') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_Y216,      FCC('Y216') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_Y410,      FCC('Y410') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_Y416,      FCC('Y416') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_Y41P,      FCC('Y41P') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_Y41T,      FCC('Y41T') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_Y42T,      FCC('Y42T') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_P210,      FCC('P210') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_P216,      FCC('P216') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_P010,      FCC('P010') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_P016,      FCC('P016') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_v210,      FCC('v210') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_v216,      FCC('v216') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_v410,      FCC('v410') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_MP43,      FCC('MP43') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_MP4S,      FCC('MP4S') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_M4S2,      FCC('M4S2') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_MP4V,      FCC('MP4V') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_WMV1,      FCC('WMV1') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_WMV2,      FCC('WMV2') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_WMV3,      FCC('WMV3') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_WVC1,      FCC('WVC1') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_MSS1,      FCC('MSS1') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_MSS2,      FCC('MSS2') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_MPG1,      FCC('MPG1') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_DVSL,      FCC('dvsl') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_DVSD,      FCC('dvsd') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_DVHD,      FCC('dvhd') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_DV25,      FCC('dv25') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_DV50,      FCC('dv50') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_DVH1,      FCC('dvh1') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_DVC,       FCC('dvc ') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_H264,      FCC('H264') );
DEFINE_MEDIATYPE_GUID( MFVideoFormat_MJPG,      FCC('MJPG') );

//
// undef the local D3DFMT definitions to avoid later clashes with D3D headers
//
#ifdef LOCAL_D3DFMT_DEFINES
#undef D3DFMT_R8G8B8
#undef D3DFMT_A8R8G8B8
#undef D3DFMT_X8R8G8B8
#undef D3DFMT_R5G6B5
#undef D3DFMT_X1R5G5B5
#undef D3DFMT_P8
#undef LOCAL_D3DFMT_DEFINES
#endif

//
// some legacy formats that don't fit the common pattern
//

// {e06d8026-db46-11cf-b4d1-00805f6cbbea}       MFVideoFormat_MPEG2
DEFINE_GUID(MFVideoFormat_MPEG2,
0xe06d8026, 0xdb46, 0x11cf, 0xb4, 0xd1, 0x00, 0x80, 0x5f, 0x6c, 0xbb, 0xea);

#define MFVideoFormat_MPG2 MFVideoFormat_MPEG2

//
// audio media types
//
DEFINE_MEDIATYPE_GUID( MFAudioFormat_Base,              0x00000000 );
DEFINE_MEDIATYPE_GUID( MFAudioFormat_PCM,               WAVE_FORMAT_PCM );
DEFINE_MEDIATYPE_GUID( MFAudioFormat_Float,             WAVE_FORMAT_IEEE_FLOAT );
DEFINE_MEDIATYPE_GUID( MFAudioFormat_DTS,               WAVE_FORMAT_DTS );
DEFINE_MEDIATYPE_GUID( MFAudioFormat_Dolby_AC3_SPDIF,   WAVE_FORMAT_DOLBY_AC3_SPDIF );
DEFINE_MEDIATYPE_GUID( MFAudioFormat_DRM,               WAVE_FORMAT_DRM );
DEFINE_MEDIATYPE_GUID( MFAudioFormat_WMAudioV8,         WAVE_FORMAT_WMAUDIO2 );
DEFINE_MEDIATYPE_GUID( MFAudioFormat_WMAudioV9,         WAVE_FORMAT_WMAUDIO3 );
DEFINE_MEDIATYPE_GUID( MFAudioFormat_WMAudio_Lossless,  WAVE_FORMAT_WMAUDIO_LOSSLESS );
DEFINE_MEDIATYPE_GUID( MFAudioFormat_WMASPDIF,          WAVE_FORMAT_WMASPDIF );
DEFINE_MEDIATYPE_GUID( MFAudioFormat_MSP1,              WAVE_FORMAT_WMAVOICE9 );
DEFINE_MEDIATYPE_GUID( MFAudioFormat_MP3,               WAVE_FORMAT_MPEGLAYER3 );
DEFINE_MEDIATYPE_GUID( MFAudioFormat_MPEG,              WAVE_FORMAT_MPEG );
DEFINE_MEDIATYPE_GUID( MFAudioFormat_AAC,               WAVE_FORMAT_MPEG_HEAAC );
DEFINE_MEDIATYPE_GUID( MFAudioFormat_ADTS,              WAVE_FORMAT_MPEG_ADTS_AAC );

//
// MPEG-4 media types
//

// {00000000-767a-494d-b478-f29d25dc9037}       MFMPEG4Format_Base
DEFINE_GUID(MFMPEG4Format_Base,
0x00000000, 0x767a, 0x494d, 0xb4, 0x78, 0xf2, 0x9d, 0x25, 0xdc, 0x90, 0x37);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////  Media Type Attributes GUIDs ////////////////////////////
////////////////////////////////////////////////////////////////////////////////

//
// GUIDs for IMFMediaType properties - prefix 'MF_MT_' - basic prop type in {},
// with type to cast to in ().
//


//
// core info for all types
//
// {48eba18e-f8c9-4687-bf11-0a74c9f96a8f}   MF_MT_MAJOR_TYPE                {GUID}
DEFINE_GUID(MF_MT_MAJOR_TYPE,
0x48eba18e, 0xf8c9, 0x4687, 0xbf, 0x11, 0x0a, 0x74, 0xc9, 0xf9, 0x6a, 0x8f);

// {f7e34c9a-42e8-4714-b74b-cb29d72c35e5}   MF_MT_SUBTYPE                   {GUID}
DEFINE_GUID(MF_MT_SUBTYPE,
0xf7e34c9a, 0x42e8, 0x4714, 0xb7, 0x4b, 0xcb, 0x29, 0xd7, 0x2c, 0x35, 0xe5);

// {c9173739-5e56-461c-b713-46fb995cb95f}   MF_MT_ALL_SAMPLES_INDEPENDENT   {UINT32 (BOOL)}
DEFINE_GUID(MF_MT_ALL_SAMPLES_INDEPENDENT,
0xc9173739, 0x5e56, 0x461c, 0xb7, 0x13, 0x46, 0xfb, 0x99, 0x5c, 0xb9, 0x5f);

// {b8ebefaf-b718-4e04-b0a9-116775e3321b}   MF_MT_FIXED_SIZE_SAMPLES        {UINT32 (BOOL)}
DEFINE_GUID(MF_MT_FIXED_SIZE_SAMPLES,
0xb8ebefaf, 0xb718, 0x4e04, 0xb0, 0xa9, 0x11, 0x67, 0x75, 0xe3, 0x32, 0x1b);

// {3afd0cee-18f2-4ba5-a110-8bea502e1f92}   MF_MT_COMPRESSED                {UINT32 (BOOL)}
DEFINE_GUID(MF_MT_COMPRESSED,
0x3afd0cee, 0x18f2, 0x4ba5, 0xa1, 0x10, 0x8b, 0xea, 0x50, 0x2e, 0x1f, 0x92);

//
// MF_MT_SAMPLE_SIZE is only valid if MF_MT_FIXED_SIZED_SAMPLES is TRUE
//
// {dad3ab78-1990-408b-bce2-eba673dacc10}   MF_MT_SAMPLE_SIZE               {UINT32}
DEFINE_GUID(MF_MT_SAMPLE_SIZE,
0xdad3ab78, 0x1990, 0x408b, 0xbc, 0xe2, 0xeb, 0xa6, 0x73, 0xda, 0xcc, 0x10);

// 4d3f7b23-d02f-4e6c-9bee-e4bf2c6c695d     MF_MT_WRAPPED_TYPE              {Blob}
DEFINE_GUID(MF_MT_WRAPPED_TYPE,
0x4d3f7b23, 0xd02f, 0x4e6c, 0x9b, 0xee, 0xe4, 0xbf, 0x2c, 0x6c, 0x69, 0x5d);

//
// AUDIO data
//

// {37e48bf5-645e-4c5b-89de-ada9e29b696a}   MF_MT_AUDIO_NUM_CHANNELS            {UINT32}
DEFINE_GUID(MF_MT_AUDIO_NUM_CHANNELS,
0x37e48bf5, 0x645e, 0x4c5b, 0x89, 0xde, 0xad, 0xa9, 0xe2, 0x9b, 0x69, 0x6a);

// {5faeeae7-0290-4c31-9e8a-c534f68d9dba}   MF_MT_AUDIO_SAMPLES_PER_SECOND      {UINT32}
DEFINE_GUID(MF_MT_AUDIO_SAMPLES_PER_SECOND,
0x5faeeae7, 0x0290, 0x4c31, 0x9e, 0x8a, 0xc5, 0x34, 0xf6, 0x8d, 0x9d, 0xba);

// {fb3b724a-cfb5-4319-aefe-6e42b2406132}   MF_MT_AUDIO_FLOAT_SAMPLES_PER_SECOND {double}
DEFINE_GUID(MF_MT_AUDIO_FLOAT_SAMPLES_PER_SECOND,
0xfb3b724a, 0xcfb5, 0x4319, 0xae, 0xfe, 0x6e, 0x42, 0xb2, 0x40, 0x61, 0x32);

// {1aab75c8-cfef-451c-ab95-ac034b8e1731}   MF_MT_AUDIO_AVG_BYTES_PER_SECOND    {UINT32}
DEFINE_GUID(MF_MT_AUDIO_AVG_BYTES_PER_SECOND,
0x1aab75c8, 0xcfef, 0x451c, 0xab, 0x95, 0xac, 0x03, 0x4b, 0x8e, 0x17, 0x31);

// {322de230-9eeb-43bd-ab7a-ff412251541d}   MF_MT_AUDIO_BLOCK_ALIGNMENT         {UINT32}
DEFINE_GUID(MF_MT_AUDIO_BLOCK_ALIGNMENT,
0x322de230, 0x9eeb, 0x43bd, 0xab, 0x7a, 0xff, 0x41, 0x22, 0x51, 0x54, 0x1d);

// {f2deb57f-40fa-4764-aa33-ed4f2d1ff669}   MF_MT_AUDIO_BITS_PER_SAMPLE         {UINT32}
DEFINE_GUID(MF_MT_AUDIO_BITS_PER_SAMPLE,
0xf2deb57f, 0x40fa, 0x4764, 0xaa, 0x33, 0xed, 0x4f, 0x2d, 0x1f, 0xf6, 0x69);

// {d9bf8d6a-9530-4b7c-9ddf-ff6fd58bbd06}   MF_MT_AUDIO_VALID_BITS_PER_SAMPLE   {UINT32}
DEFINE_GUID(MF_MT_AUDIO_VALID_BITS_PER_SAMPLE,
0xd9bf8d6a, 0x9530, 0x4b7c, 0x9d, 0xdf, 0xff, 0x6f, 0xd5, 0x8b, 0xbd, 0x06);

// {aab15aac-e13a-4995-9222-501ea15c6877}   MF_MT_AUDIO_SAMPLES_PER_BLOCK       {UINT32}
DEFINE_GUID(MF_MT_AUDIO_SAMPLES_PER_BLOCK,
0xaab15aac, 0xe13a, 0x4995, 0x92, 0x22, 0x50, 0x1e, 0xa1, 0x5c, 0x68, 0x77);

// {55fb5765-644a-4caf-8479-938983bb1588}`  MF_MT_AUDIO_CHANNEL_MASK            {UINT32}
DEFINE_GUID(MF_MT_AUDIO_CHANNEL_MASK,
0x55fb5765, 0x644a, 0x4caf, 0x84, 0x79, 0x93, 0x89, 0x83, 0xbb, 0x15, 0x88);

//
// MF_MT_AUDIO_FOLDDOWN_MATRIX stores folddown structure from multichannel to stereo
//
typedef struct _MFFOLDDOWN_MATRIX
{
    UINT32 cbSize;
    UINT32 cSrcChannels; // number of source channels
    UINT32 cDstChannels; // number of destination channels
    UINT32 dwChannelMask; // mask
    LONG Coeff[64];
} MFFOLDDOWN_MATRIX;

// {9d62927c-36be-4cf2-b5c4-a3926e3e8711}`  MF_MT_AUDIO_FOLDDOWN_MATRIX         {BLOB, MFFOLDDOWN_MATRIX}
DEFINE_GUID(MF_MT_AUDIO_FOLDDOWN_MATRIX,
0x9d62927c, 0x36be, 0x4cf2, 0xb5, 0xc4, 0xa3, 0x92, 0x6e, 0x3e, 0x87, 0x11);

// {0x9d62927d-36be-4cf2-b5c4-a3926e3e8711}`  MF_MT_AUDIO_WMADRC_PEAKREF         {UINT32}
DEFINE_GUID(MF_MT_AUDIO_WMADRC_PEAKREF,
0x9d62927d, 0x36be, 0x4cf2, 0xb5, 0xc4, 0xa3, 0x92, 0x6e, 0x3e, 0x87, 0x11);

// {0x9d62927e-36be-4cf2-b5c4-a3926e3e8711}`  MF_MT_AUDIO_WMADRC_PEAKTARGET        {UINT32}
DEFINE_GUID(MF_MT_AUDIO_WMADRC_PEAKTARGET,
0x9d62927e, 0x36be, 0x4cf2, 0xb5, 0xc4, 0xa3, 0x92, 0x6e, 0x3e, 0x87, 0x11);


// {0x9d62927f-36be-4cf2-b5c4-a3926e3e8711}`  MF_MT_AUDIO_WMADRC_AVGREF         {UINT32}
DEFINE_GUID(MF_MT_AUDIO_WMADRC_AVGREF,
0x9d62927f, 0x36be, 0x4cf2, 0xb5, 0xc4, 0xa3, 0x92, 0x6e, 0x3e, 0x87, 0x11);

// {0x9d629280-36be-4cf2-b5c4-a3926e3e8711}`  MF_MT_AUDIO_WMADRC_AVGTARGET      {UINT32}
DEFINE_GUID(MF_MT_AUDIO_WMADRC_AVGTARGET,
0x9d629280, 0x36be, 0x4cf2, 0xb5, 0xc4, 0xa3, 0x92, 0x6e, 0x3e, 0x87, 0x11);

//
// MF_MT_AUDIO_PREFER_WAVEFORMATEX tells the converter to prefer a plain WAVEFORMATEX rather than
// a WAVEFORMATEXTENSIBLE when converting to a legacy type. It is set by the WAVEFORMATEX->IMFMediaType
// conversion routines when the original format block is a non-extensible WAVEFORMATEX.
//
// This preference can be overridden and does not guarantee that the type can be correctly expressed
// by a non-extensible type.
//
// {a901aaba-e037-458a-bdf6-545be2074042}   MF_MT_AUDIO_PREFER_WAVEFORMATEX     {UINT32 (BOOL)}
DEFINE_GUID(MF_MT_AUDIO_PREFER_WAVEFORMATEX,
0xa901aaba, 0xe037, 0x458a, 0xbd, 0xf6, 0x54, 0x5b, 0xe2, 0x07, 0x40, 0x42);

#if (WINVER >= _WIN32_WINNT_WIN7)
//
// AUDIO - AAC extra data
//

// {BFBABE79-7434-4d1c-94F0-72A3B9E17188} MF_MT_AAC_PAYLOAD_TYPE       {UINT32}
DEFINE_GUID(MF_MT_AAC_PAYLOAD_TYPE,
0xbfbabe79, 0x7434, 0x4d1c, 0x94, 0xf0, 0x72, 0xa3, 0xb9, 0xe1, 0x71, 0x88);

// {7632F0E6-9538-4d61-ACDA-EA29C8C14456} MF_MT_AAC_AUDIO_PROFILE_LEVEL_INDICATION       {UINT32}
DEFINE_GUID(MF_MT_AAC_AUDIO_PROFILE_LEVEL_INDICATION,
0x7632f0e6, 0x9538, 0x4d61, 0xac, 0xda, 0xea, 0x29, 0xc8, 0xc1, 0x44, 0x56);

#endif // (WINVER >= _WIN32_WINNT_WIN7)

//
// VIDEO core data
//

// {1652c33d-d6b2-4012-b834-72030849a37d}   MF_MT_FRAME_SIZE                {UINT64 (HI32(Width),LO32(Height))}
DEFINE_GUID(MF_MT_FRAME_SIZE,
0x1652c33d, 0xd6b2, 0x4012, 0xb8, 0x34, 0x72, 0x03, 0x08, 0x49, 0xa3, 0x7d);

// {c459a2e8-3d2c-4e44-b132-fee5156c7bb0}   MF_MT_FRAME_RATE                {UINT64 (HI32(Numerator),LO32(Denominator))}
DEFINE_GUID(MF_MT_FRAME_RATE,
0xc459a2e8, 0x3d2c, 0x4e44, 0xb1, 0x32, 0xfe, 0xe5, 0x15, 0x6c, 0x7b, 0xb0);

// {c6376a1e-8d0a-4027-be45-6d9a0ad39bb6}   MF_MT_PIXEL_ASPECT_RATIO        {UINT64 (HI32(Numerator),LO32(Denominator))}
DEFINE_GUID(MF_MT_PIXEL_ASPECT_RATIO,
0xc6376a1e, 0x8d0a, 0x4027, 0xbe, 0x45, 0x6d, 0x9a, 0x0a, 0xd3, 0x9b, 0xb6);

// {8772f323-355a-4cc7-bb78-6d61a048ae82}   MF_MT_DRM_FLAGS                 {UINT32 (anyof MFVideoDRMFlags)}
DEFINE_GUID(MF_MT_DRM_FLAGS,
0x8772f323, 0x355a, 0x4cc7, 0xbb, 0x78, 0x6d, 0x61, 0xa0, 0x48, 0xae, 0x82);

typedef enum _MFVideoDRMFlags {
    MFVideoDRMFlag_None                 = 0,
    MFVideoDRMFlag_AnalogProtected      = 1,
    MFVideoDRMFlag_DigitallyProtected   = 2,
} MFVideoDRMFlags;


// {4d0e73e5-80ea-4354-a9d0-1176ceb028ea}   MF_MT_PAD_CONTROL_FLAGS         {UINT32 (oneof MFVideoPadFlags)}
DEFINE_GUID(MF_MT_PAD_CONTROL_FLAGS,
0x4d0e73e5, 0x80ea, 0x4354, 0xa9, 0xd0, 0x11, 0x76, 0xce, 0xb0, 0x28, 0xea);

typedef enum _MFVideoPadFlags {
    MFVideoPadFlag_PAD_TO_None  = 0,
    MFVideoPadFlag_PAD_TO_4x3   = 1,
    MFVideoPadFlag_PAD_TO_16x9  = 2
} MFVideoPadFlags;

// {68aca3cc-22d0-44e6-85f8-28167197fa38}   MF_MT_SOURCE_CONTENT_HINT       {UINT32 (oneof MFVideoSrcContentHintFlags)}
DEFINE_GUID(MF_MT_SOURCE_CONTENT_HINT,
0x68aca3cc, 0x22d0, 0x44e6, 0x85, 0xf8, 0x28, 0x16, 0x71, 0x97, 0xfa, 0x38);

typedef enum _MFVideoSrcContentHintFlags {
    MFVideoSrcContentHintFlag_None  = 0,
    MFVideoSrcContentHintFlag_16x9  = 1,
    MFVideoSrcContentHintFlag_235_1 = 2
} MFVideoSrcContentHintFlags;

// {65df2370-c773-4c33-aa64-843e068efb0c}   MF_MT_CHROMA_SITING             {UINT32 (anyof MFVideoChromaSubsampling)}
DEFINE_GUID(MF_MT_VIDEO_CHROMA_SITING,
0x65df2370, 0xc773, 0x4c33, 0xaa, 0x64, 0x84, 0x3e, 0x06, 0x8e, 0xfb, 0x0c);

// {e2724bb8-e676-4806-b4b2-a8d6efb44ccd}   MF_MT_INTERLACE_MODE            {UINT32 (oneof MFVideoInterlaceMode)}
DEFINE_GUID(MF_MT_INTERLACE_MODE,
0xe2724bb8, 0xe676, 0x4806, 0xb4, 0xb2, 0xa8, 0xd6, 0xef, 0xb4, 0x4c, 0xcd);

// {5fb0fce9-be5c-4935-a811-ec838f8eed93}   MF_MT_TRANSFER_FUNCTION         {UINT32 (oneof MFVideoTransferFunction)}
DEFINE_GUID(MF_MT_TRANSFER_FUNCTION,
0x5fb0fce9, 0xbe5c, 0x4935, 0xa8, 0x11, 0xec, 0x83, 0x8f, 0x8e, 0xed, 0x93);

// {dbfbe4d7-0740-4ee0-8192-850ab0e21935}   MF_MT_VIDEO_PRIMARIES           {UINT32 (oneof MFVideoPrimaries)}
DEFINE_GUID(MF_MT_VIDEO_PRIMARIES,
0xdbfbe4d7, 0x0740, 0x4ee0, 0x81, 0x92, 0x85, 0x0a, 0xb0, 0xe2, 0x19, 0x35);

// {47537213-8cfb-4722-aa34-fbc9e24d77b8}   MF_MT_CUSTOM_VIDEO_PRIMARIES    {BLOB (MT_CUSTOM_VIDEO_PRIMARIES)}
DEFINE_GUID(MF_MT_CUSTOM_VIDEO_PRIMARIES,
0x47537213, 0x8cfb, 0x4722, 0xaa, 0x34, 0xfb, 0xc9, 0xe2, 0x4d, 0x77, 0xb8);

typedef struct _MT_CUSTOM_VIDEO_PRIMARIES {
    float fRx;
    float fRy;
    float fGx;
    float fGy;
    float fBx;
    float fBy;
    float fWx;
    float fWy;
} MT_CUSTOM_VIDEO_PRIMARIES;

// {3e23d450-2c75-4d25-a00e-b91670d12327}   MF_MT_YUV_MATRIX                {UINT32 (oneof MFVideoTransferMatrix)}
DEFINE_GUID(MF_MT_YUV_MATRIX,
0x3e23d450, 0x2c75, 0x4d25, 0xa0, 0x0e, 0xb9, 0x16, 0x70, 0xd1, 0x23, 0x27);

// {53a0529c-890b-4216-8bf9-599367ad6d20}   MF_MT_VIDEO_LIGHTING            {UINT32 (oneof MFVideoLighting)}
DEFINE_GUID(MF_MT_VIDEO_LIGHTING,
0x53a0529c, 0x890b, 0x4216, 0x8b, 0xf9, 0x59, 0x93, 0x67, 0xad, 0x6d, 0x20);

// {c21b8ee5-b956-4071-8daf-325edf5cab11}   MF_MT_VIDEO_NOMINAL_RANGE       {UINT32 (oneof MFNominalRange)}
DEFINE_GUID(MF_MT_VIDEO_NOMINAL_RANGE,
0xc21b8ee5, 0xb956, 0x4071, 0x8d, 0xaf, 0x32, 0x5e, 0xdf, 0x5c, 0xab, 0x11);

// {66758743-7e5f-400d-980a-aa8596c85696}   MF_MT_GEOMETRIC_APERTURE        {BLOB (MFVideoArea)}
DEFINE_GUID(MF_MT_GEOMETRIC_APERTURE,
0x66758743, 0x7e5f, 0x400d, 0x98, 0x0a, 0xaa, 0x85, 0x96, 0xc8, 0x56, 0x96);

// {d7388766-18fe-48c6-a177-ee894867c8c4}   MF_MT_MINIMUM_DISPLAY_APERTURE  {BLOB (MFVideoArea)}
DEFINE_GUID(MF_MT_MINIMUM_DISPLAY_APERTURE,
0xd7388766, 0x18fe, 0x48c6, 0xa1, 0x77, 0xee, 0x89, 0x48, 0x67, 0xc8, 0xc4);

// {79614dde-9187-48fb-b8c7-4d52689de649}   MF_MT_PAN_SCAN_APERTURE         {BLOB (MFVideoArea)}
DEFINE_GUID(MF_MT_PAN_SCAN_APERTURE,
0x79614dde, 0x9187, 0x48fb, 0xb8, 0xc7, 0x4d, 0x52, 0x68, 0x9d, 0xe6, 0x49);

// {4b7f6bc3-8b13-40b2-a993-abf630b8204e}   MF_MT_PAN_SCAN_ENABLED          {UINT32 (BOOL)}
DEFINE_GUID(MF_MT_PAN_SCAN_ENABLED,
0x4b7f6bc3, 0x8b13, 0x40b2, 0xa9, 0x93, 0xab, 0xf6, 0x30, 0xb8, 0x20, 0x4e);

// {20332624-fb0d-4d9e-bd0d-cbf6786c102e}   MF_MT_AVG_BITRATE               {UINT32}
DEFINE_GUID(MF_MT_AVG_BITRATE,
0x20332624, 0xfb0d, 0x4d9e, 0xbd, 0x0d, 0xcb, 0xf6, 0x78, 0x6c, 0x10, 0x2e);

// {799cabd6-3508-4db4-a3c7-569cd533deb1}   MF_MT_AVG_BIT_ERROR_RATE        {UINT32}
DEFINE_GUID(MF_MT_AVG_BIT_ERROR_RATE,
0x799cabd6, 0x3508, 0x4db4, 0xa3, 0xc7, 0x56, 0x9c, 0xd5, 0x33, 0xde, 0xb1);

// {c16eb52b-73a1-476f-8d62-839d6a020652}   MF_MT_MAX_KEYFRAME_SPACING      {UINT32}
DEFINE_GUID(MF_MT_MAX_KEYFRAME_SPACING,
0xc16eb52b, 0x73a1, 0x476f, 0x8d, 0x62, 0x83, 0x9d, 0x6a, 0x02, 0x06, 0x52);

//
// VIDEO - uncompressed format data
//

// {644b4e48-1e02-4516-b0eb-c01ca9d49ac6}   MF_MT_DEFAULT_STRIDE            {UINT32 (INT32)} // in bytes
DEFINE_GUID(MF_MT_DEFAULT_STRIDE,
0x644b4e48, 0x1e02, 0x4516, 0xb0, 0xeb, 0xc0, 0x1c, 0xa9, 0xd4, 0x9a, 0xc6);

// {6d283f42-9846-4410-afd9-654d503b1a54}   MF_MT_PALETTE                   {BLOB (array of MFPaletteEntry - usually 256)}
DEFINE_GUID(MF_MT_PALETTE,
0x6d283f42, 0x9846, 0x4410, 0xaf, 0xd9, 0x65, 0x4d, 0x50, 0x3b, 0x1a, 0x54);

//
// the following is only used for legacy data that was stuck at the end of the format block when the type
// was converted from a VIDEOINFOHEADER or VIDEOINFOHEADER2 block in an AM_MEDIA_TYPE.
//
// {b6bc765f-4c3b-40a4-bd51-2535b66fe09d}   MF_MT_USER_DATA                 {BLOB}
DEFINE_GUID(MF_MT_USER_DATA,
0xb6bc765f, 0x4c3b, 0x40a4, 0xbd, 0x51, 0x25, 0x35, 0xb6, 0x6f, 0xe0, 0x9d);

// {73d1072d-1870-4174-a063-29ff4ff6c11e}
DEFINE_GUID(MF_MT_AM_FORMAT_TYPE,
0x73d1072d, 0x1870, 0x4174, 0xa0, 0x63, 0x29, 0xff, 0x4f, 0xf6, 0xc1, 0x1e);

//
// VIDEO - MPEG1/2 extra data
//

// {91f67885-4333-4280-97cd-bd5a6c03a06e}   MF_MT_MPEG_START_TIME_CODE      {UINT32}
DEFINE_GUID(MF_MT_MPEG_START_TIME_CODE,
0x91f67885, 0x4333, 0x4280, 0x97, 0xcd, 0xbd, 0x5a, 0x6c, 0x03, 0xa0, 0x6e);

// {ad76a80b-2d5c-4e0b-b375-64e520137036}   MF_MT_MPEG2_PROFILE             {UINT32 (oneof AM_MPEG2Profile)}
DEFINE_GUID(MF_MT_MPEG2_PROFILE,
0xad76a80b, 0x2d5c, 0x4e0b, 0xb3, 0x75, 0x64, 0xe5, 0x20, 0x13, 0x70, 0x36);

// {96f66574-11c5-4015-8666-bff516436da7}   MF_MT_MPEG2_LEVEL               {UINT32 (oneof AM_MPEG2Level)}
DEFINE_GUID(MF_MT_MPEG2_LEVEL,
0x96f66574, 0x11c5, 0x4015, 0x86, 0x66, 0xbf, 0xf5, 0x16, 0x43, 0x6d, 0xa7);

// {31e3991d-f701-4b2f-b426-8ae3bda9e04b}   MF_MT_MPEG2_FLAGS               {UINT32 (anyof AMMPEG2_xxx flags)}
DEFINE_GUID(MF_MT_MPEG2_FLAGS,
0x31e3991d, 0xf701, 0x4b2f, 0xb4, 0x26, 0x8a, 0xe3, 0xbd, 0xa9, 0xe0, 0x4b);

// {3c036de7-3ad0-4c9e-9216-ee6d6ac21cb3}   MF_MT_MPEG_SEQUENCE_HEADER      {BLOB}
DEFINE_GUID(MF_MT_MPEG_SEQUENCE_HEADER,
0x3c036de7, 0x3ad0, 0x4c9e, 0x92, 0x16, 0xee, 0x6d, 0x6a, 0xc2, 0x1c, 0xb3);

//
// INTERLEAVED - DV extra data
//
// {84bd5d88-0fb8-4ac8-be4b-a8848bef98f3}   MF_MT_DV_AAUX_SRC_PACK_0        {UINT32}
DEFINE_GUID(MF_MT_DV_AAUX_SRC_PACK_0,
0x84bd5d88, 0x0fb8, 0x4ac8, 0xbe, 0x4b, 0xa8, 0x84, 0x8b, 0xef, 0x98, 0xf3);

// {f731004e-1dd1-4515-aabe-f0c06aa536ac}   MF_MT_DV_AAUX_CTRL_PACK_0       {UINT32}
DEFINE_GUID(MF_MT_DV_AAUX_CTRL_PACK_0,
0xf731004e, 0x1dd1, 0x4515, 0xaa, 0xbe, 0xf0, 0xc0, 0x6a, 0xa5, 0x36, 0xac);

// {720e6544-0225-4003-a651-0196563a958e}   MF_MT_DV_AAUX_SRC_PACK_1        {UINT32}
DEFINE_GUID(MF_MT_DV_AAUX_SRC_PACK_1,
0x720e6544, 0x0225, 0x4003, 0xa6, 0x51, 0x01, 0x96, 0x56, 0x3a, 0x95, 0x8e);

// {cd1f470d-1f04-4fe0-bfb9-d07ae0386ad8}   MF_MT_DV_AAUX_CTRL_PACK_1       {UINT32}
DEFINE_GUID(MF_MT_DV_AAUX_CTRL_PACK_1,
0xcd1f470d, 0x1f04, 0x4fe0, 0xbf, 0xb9, 0xd0, 0x7a, 0xe0, 0x38, 0x6a, 0xd8);

// {41402d9d-7b57-43c6-b129-2cb997f15009}   MF_MT_DV_VAUX_SRC_PACK          {UINT32}
DEFINE_GUID(MF_MT_DV_VAUX_SRC_PACK,
0x41402d9d, 0x7b57, 0x43c6, 0xb1, 0x29, 0x2c, 0xb9, 0x97, 0xf1, 0x50, 0x09);

// {2f84e1c4-0da1-4788-938e-0dfbfbb34b48}   MF_MT_DV_VAUX_CTRL_PACK         {UINT32}
DEFINE_GUID(MF_MT_DV_VAUX_CTRL_PACK,
0x2f84e1c4, 0x0da1, 0x4788, 0x93, 0x8e, 0x0d, 0xfb, 0xfb, 0xb3, 0x4b, 0x48);


#if (WINVER >= _WIN32_WINNT_WIN7)
//
// ARBITRARY
//

//
// MT_ARBITRARY_HEADER stores information about the format of an arbitrary media type
//
typedef struct _MT_ARBITRARY_HEADER
{
    GUID majortype;
    GUID subtype;
    BOOL bFixedSizeSamples;
    BOOL bTemporalCompression;
    ULONG lSampleSize;
    GUID formattype;
}
MT_ARBITRARY_HEADER;

// {9E6BD6F5-0109-4f95-84AC-9309153A19FC}   MF_MT_ARBITRARY_HEADER          {MT_ARBITRARY_HEADER}
DEFINE_GUID(MF_MT_ARBITRARY_HEADER,
0x9e6bd6f5, 0x109, 0x4f95, 0x84, 0xac, 0x93, 0x9, 0x15, 0x3a, 0x19, 0xfc );

// {5A75B249-0D7D-49a1-A1C3-E0D87F0CADE5}   MF_MT_ARBITRARY_FORMAT          {Blob}
DEFINE_GUID(MF_MT_ARBITRARY_FORMAT,
0x5a75b249, 0xd7d, 0x49a1, 0xa1, 0xc3, 0xe0, 0xd8, 0x7f, 0xc, 0xad, 0xe5);


//
// IMAGE
//
// {ED062CF4-E34E-4922-BE99-934032133D7C}   MF_MT_IMAGE_LOSS_TOLERANT       {UINT32 (BOOL)}
DEFINE_GUID(MF_MT_IMAGE_LOSS_TOLERANT, 
0xed062cf4, 0xe34e, 0x4922, 0xbe, 0x99, 0x93, 0x40, 0x32, 0x13, 0x3d, 0x7c);


//
// MPEG-4 Media Type Attributes
//
// {261E9D83-9529-4B8F-A111-8B9C950A81A9}   MF_MT_MPEG4_SAMPLE_DESCRIPTION   {BLOB}
DEFINE_GUID(MF_MT_MPEG4_SAMPLE_DESCRIPTION,
0x261e9d83, 0x9529, 0x4b8f, 0xa1, 0x11, 0x8b, 0x9c, 0x95, 0x0a, 0x81, 0xa9);

// {9aa7e155-b64a-4c1d-a500-455d600b6560}   MF_MT_MPEG4_CURRENT_SAMPLE_ENTRY {UINT32}
DEFINE_GUID(MF_MT_MPEG4_CURRENT_SAMPLE_ENTRY,
0x9aa7e155, 0xb64a, 0x4c1d, 0xa5, 0x00, 0x45, 0x5d, 0x60, 0x0b, 0x65, 0x60);

//
// Save original format information for AVI and WAV files
//
// {d7be3fe0-2bc7-492d-b843-61a1919b70c3}   MF_MT_ORIGINAL_4CC               (UINT32)
DEFINE_GUID(MF_MT_ORIGINAL_4CC, 
0xd7be3fe0, 0x2bc7, 0x492d, 0xb8, 0x43, 0x61, 0xa1, 0x91, 0x9b, 0x70, 0xc3);

// {8cbbc843-9fd9-49c2-882f-a72586c408ad}   MF_MT_ORIGINAL_WAVE_FORMAT_TAG   (UINT32)
DEFINE_GUID(MF_MT_ORIGINAL_WAVE_FORMAT_TAG,
0x8cbbc843, 0x9fd9, 0x49c2, 0x88, 0x2f, 0xa7, 0x25, 0x86, 0xc4, 0x08, 0xad);


//
// Video Capture Media Type Attributes
//

// {D2E7558C-DC1F-403f-9A72-D28BB1EB3B5E}   MF_MT_FRAME_RATE_RANGE_MIN      {UINT64 (HI32(Numerator),LO32(Denominator))}
DEFINE_GUID(MF_MT_FRAME_RATE_RANGE_MIN, 
0xd2e7558c, 0xdc1f, 0x403f, 0x9a, 0x72, 0xd2, 0x8b, 0xb1, 0xeb, 0x3b, 0x5e);

// {E3371D41-B4CF-4a05-BD4E-20B88BB2C4D6}   MF_MT_FRAME_RATE_RANGE_MAX      {UINT64 (HI32(Numerator),LO32(Denominator))}
DEFINE_GUID(MF_MT_FRAME_RATE_RANGE_MAX, 
0xe3371d41, 0xb4cf, 0x4a05, 0xbd, 0x4e, 0x20, 0xb8, 0x8b, 0xb2, 0xc4, 0xd6);


#endif // (WINVER >= _WIN32_WINNT_WIN7)

////////////////////////////////////////////////////////////////////////////////
///////////////////////////////  Media Type GUIDs //////////////////////////////
////////////////////////////////////////////////////////////////////////////////

//
// Major types
//
DEFINE_GUID(MFMediaType_Default,
0x81A412E6, 0x8103, 0x4B06, 0x85, 0x7F, 0x18, 0x62, 0x78, 0x10, 0x24, 0xAC);
DEFINE_GUID(MFMediaType_Audio,
0x73647561, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xAA, 0x00, 0x38, 0x9B, 0x71);
DEFINE_GUID(MFMediaType_Video,
0x73646976, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xAA, 0x00, 0x38, 0x9B, 0x71);
DEFINE_GUID(MFMediaType_Protected,
0x7b4b6fe6, 0x9d04, 0x4494, 0xbe, 0x14, 0x7e, 0x0b, 0xd0, 0x76, 0xc8, 0xe4);
DEFINE_GUID(MFMediaType_SAMI,
0xe69669a0, 0x3dcd, 0x40cb, 0x9e, 0x2e, 0x37, 0x08, 0x38, 0x7c, 0x06, 0x16);
DEFINE_GUID(MFMediaType_Script,
0x72178C22, 0xE45B, 0x11D5, 0xBC, 0x2A, 0x00, 0xB0, 0xD0, 0xF3, 0xF4, 0xAB);
DEFINE_GUID(MFMediaType_Image,
0x72178C23, 0xE45B, 0x11D5, 0xBC, 0x2A, 0x00, 0xB0, 0xD0, 0xF3, 0xF4, 0xAB);
DEFINE_GUID(MFMediaType_HTML,
0x72178C24, 0xE45B, 0x11D5, 0xBC, 0x2A, 0x00, 0xB0, 0xD0, 0xF3, 0xF4, 0xAB);
DEFINE_GUID(MFMediaType_Binary,
0x72178C25, 0xE45B, 0x11D5, 0xBC, 0x2A, 0x00, 0xB0, 0xD0, 0xF3, 0xF4, 0xAB);
DEFINE_GUID(MFMediaType_FileTransfer,
0x72178C26, 0xE45B, 0x11D5, 0xBC, 0x2A, 0x00, 0xB0, 0xD0, 0xF3, 0xF4, 0xAB);

//
// Representations
//
DEFINE_GUID(AM_MEDIA_TYPE_REPRESENTATION,
0xe2e42ad2, 0x132c, 0x491e, 0xa2, 0x68, 0x3c, 0x7c, 0x2d, 0xca, 0x18, 0x1f);
DEFINE_GUID(FORMAT_MFVideoFormat,
0xaed4ab2d, 0x7326, 0x43cb, 0x94, 0x64, 0xc8, 0x79, 0xca, 0xb9, 0xc4, 0x3d);


///////////////////////////////////////////////////////////////////////////////////////////////////////////////  Media Type functions //////////////////////////
////////////////////////////////////////////////////////////////////////////////

//
// Forward declaration
//
struct tagVIDEOINFOHEADER;
typedef struct tagVIDEOINFOHEADER VIDEOINFOHEADER;
struct tagVIDEOINFOHEADER2;
typedef struct tagVIDEOINFOHEADER2 VIDEOINFOHEADER2;
struct tagMPEG1VIDEOINFO;
typedef struct tagMPEG1VIDEOINFO MPEG1VIDEOINFO;
struct tagMPEG2VIDEOINFO;
typedef struct tagMPEG2VIDEOINFO MPEG2VIDEOINFO;
struct _AMMediaType;
typedef struct _AMMediaType AM_MEDIA_TYPE;

STDAPI
MFValidateMediaTypeSize(
    __in                    GUID    FormatType,
    __in_bcount_opt(cbSize) UINT8*  pBlock,
    __in                    UINT32  cbSize
    );

STDAPI
MFCreateMediaType(
    __deref_out IMFMediaType**  ppMFType
    );

STDAPI
MFCreateMFVideoFormatFromMFMediaType(
    __in        IMFMediaType*           pMFType,
    __out       MFVIDEOFORMAT**         ppMFVF, // must be deleted with CoTaskMemFree
    __out_opt   UINT32*                 pcbSize
    );

typedef enum _MFWaveFormatExConvertFlags {
    MFWaveFormatExConvertFlag_Normal            = 0,
    MFWaveFormatExConvertFlag_ForceExtensible   = 1
} MFWaveFormatExConvertFlags;

#ifdef __cplusplus

//
// declarations with default parameters
//

STDAPI
MFCreateWaveFormatExFromMFMediaType(
    __in        IMFMediaType*   pMFType,
    __out       WAVEFORMATEX**  ppWF,
    __out_opt   UINT32*         pcbSize,
    __in        UINT32          Flags = MFWaveFormatExConvertFlag_Normal
    );

STDAPI
MFInitMediaTypeFromVideoInfoHeader(
    __in                    IMFMediaType*           pMFType,
    __in_bcount(cbBufSize)  const VIDEOINFOHEADER*  pVIH,
    __in                    UINT32                  cbBufSize,
    __in_opt                const GUID*             pSubtype = NULL
    );

STDAPI
MFInitMediaTypeFromVideoInfoHeader2(
    __in                    IMFMediaType*           pMFType,
    __in_bcount(cbBufSize)  const VIDEOINFOHEADER2* pVIH2,
    __in                    UINT32                  cbBufSize,
    __in_opt                const GUID*             pSubtype = NULL
    );

STDAPI
MFInitMediaTypeFromMPEG1VideoInfo(
    __in                    IMFMediaType*           pMFType,
    __in_bcount(cbBufSize)  const MPEG1VIDEOINFO*   pMP1VI,
    __in                    UINT32                  cbBufSize,
    __in_opt                const GUID*             pSubtype = NULL
    );

STDAPI
MFInitMediaTypeFromMPEG2VideoInfo(
    __in                    IMFMediaType*           pMFType,
    __in_bcount(cbBufSize)  const MPEG2VIDEOINFO*   pMP2VI,
    __in                    UINT32                  cbBufSize,
    __in_opt                const GUID*             pSubtype = NULL
    );

STDAPI
MFCalculateBitmapImageSize(
    __in_bcount(cbBufSize)  const BITMAPINFOHEADER* pBMIH,
    __in                    UINT32                  cbBufSize,
    __out                   UINT32*                 pcbImageSize,
    __out_opt               BOOL*                   pbKnown = NULL
    );

#else

//
// same declarations without default parameters
//

STDAPI
MFCreateWaveFormatExFromMFMediaType(
    __in        IMFMediaType*   pMFType,
    __out       WAVEFORMATEX**  ppWF,
    __out_opt   UINT32*         pcbSize,
    __in        UINT32          Flags
    );

STDAPI
MFInitMediaTypeFromVideoInfoHeader(
    __in                    IMFMediaType*           pMFType,
    __in_bcount(cbBufSize)  const VIDEOINFOHEADER*  pVIH,
    __in                    UINT32                  cbBufSize,
    __in_opt                const GUID*             pSubtype
    );

STDAPI
MFInitMediaTypeFromVideoInfoHeader2(
    __in                    IMFMediaType*           pMFType,
    __in_bcount(cbBufSize)  const VIDEOINFOHEADER2* pVIH2,
    __in                    UINT32                  cbBufSize,
    __in_opt                const GUID*             pSubtype
    );

STDAPI
MFInitMediaTypeFromMPEG1VideoInfo(
    __in                    IMFMediaType*           pMFType,
    __in_bcount(cbBufSize)  const MPEG1VIDEOINFO*   pMP1VI,
    __in                    UINT32                  cbBufSize,
    __in_opt                const GUID*             pSubtype
    );

STDAPI
MFInitMediaTypeFromMPEG2VideoInfo(
    __in                    IMFMediaType*           pMFType,
    __in_bcount(cbBufSize)  const MPEG2VIDEOINFO*   pMP2VI,
    __in                    UINT32                  cbBufSize,
    __in_opt                const GUID*             pSubtype
    );

STDAPI
MFCalculateBitmapImageSize(
    __in_bcount(cbBufSize)  const BITMAPINFOHEADER* pBMIH,
    __in                    UINT32                  cbBufSize,
    __out                   UINT32*                 pcbImageSize,
    __out_opt               BOOL*                   pbKnown
    );

#endif

STDAPI
MFCalculateImageSize(
    __in                    REFGUID                 guidSubtype,
    __in                    UINT32                  unWidth,
    __in                    UINT32                  unHeight,
    __out                   UINT32*                 pcbImageSize
    );

STDAPI
MFFrameRateToAverageTimePerFrame(
    __in                    UINT32                  unNumerator,
    __in                    UINT32                  unDenominator,
    __out                   UINT64*                 punAverageTimePerFrame
    );

STDAPI
MFAverageTimePerFrameToFrameRate(
    __in                    UINT64                  unAverageTimePerFrame,
    __out                   UINT32*                 punNumerator,
    __out                   UINT32*                 punDenominator
    );

STDAPI
MFInitMediaTypeFromMFVideoFormat(
    __in                    IMFMediaType*           pMFType,
    __in_bcount(cbBufSize)  const MFVIDEOFORMAT*    pMFVF,
    __in                    UINT32                  cbBufSize
    );

STDAPI
MFInitMediaTypeFromWaveFormatEx(
    __in                    IMFMediaType*           pMFType,
    __in_bcount(cbBufSize)  const WAVEFORMATEX*     pWaveFormat,
    __in                    UINT32                  cbBufSize
    );

STDAPI
MFInitMediaTypeFromAMMediaType(
    __in    IMFMediaType*           pMFType,
    __in    const AM_MEDIA_TYPE*    pAMType
    );

STDAPI
MFInitAMMediaTypeFromMFMediaType(
    __in    IMFMediaType*           pMFType,
    __in    GUID                    guidFormatBlockType,
    __inout AM_MEDIA_TYPE*          pAMType
    );

STDAPI
MFCreateAMMediaTypeFromMFMediaType(
    __in    IMFMediaType*           pMFType,
    __in    GUID                    guidFormatBlockType,
    __inout AM_MEDIA_TYPE**         ppAMType // delete with DeleteMediaType
    );


//
// This function compares a full media type to a partial media type.
//
// A "partial" media type is one that is given out by a component as a possible
// media type it could accept. Many attributes may be unset, which represents
// a "don't care" status for that attribute.
//
// For example, a video effect may report that it supports YV12,
// but not want to specify a particular size. It simply creates a media type and sets
// the major type to MFMediaType_Video and the subtype to MEDIASUBTYPE_YV12.
//
// The comparison function succeeds if the partial type contains at least a major type,
// and all of the attributes in the partial type exist in the full type and are set to
// the same value.
//
STDAPI_(BOOL)
MFCompareFullToPartialMediaType(
    __in    IMFMediaType*   pMFTypeFull,
    __in    IMFMediaType*   pMFTypePartial
    );


STDAPI
MFWrapMediaType(
    __in    IMFMediaType*    pOrig,
    __in    REFGUID          MajorType,
    __in    REFGUID          SubType,
    __out   IMFMediaType **  ppWrap
    );

STDAPI
MFUnwrapMediaType(
    __in    IMFMediaType*    pWrap,
    __out   IMFMediaType **  ppOrig
    );


//
// MFCreateVideoMediaType
//

#ifdef _KSMEDIA_
STDAPI MFCreateVideoMediaTypeFromVideoInfoHeader(
    __in const KS_VIDEOINFOHEADER* pVideoInfoHeader,
    DWORD cbVideoInfoHeader,
    DWORD dwPixelAspectRatioX,
    DWORD dwPixelAspectRatioY,
    MFVideoInterlaceMode InterlaceMode,
    QWORD VideoFlags,
    __in_opt const GUID * pSubtype,
    __out IMFVideoMediaType** ppIVideoMediaType
    );

STDAPI MFCreateVideoMediaTypeFromVideoInfoHeader2(
    __in const KS_VIDEOINFOHEADER2* pVideoInfoHeader,
    DWORD cbVideoInfoHeader,
    QWORD AdditionalVideoFlags,
    __in_opt const GUID * pSubtype,
    __out IMFVideoMediaType** ppIVideoMediaType
    );

#endif

STDAPI MFCreateVideoMediaType(
    __in const MFVIDEOFORMAT* pVideoFormat,
    __out IMFVideoMediaType** ppIVideoMediaType
    );

STDAPI MFCreateVideoMediaTypeFromSubtype(
    __in const GUID * pAMSubtype,
    __out IMFVideoMediaType  **ppIVideoMediaType
    );

STDAPI_(BOOL)
MFIsFormatYUV(
    DWORD Format
    );

//
//  These depend on BITMAPINFOHEADER being defined
//
STDAPI MFCreateVideoMediaTypeFromBitMapInfoHeader(
    __in const BITMAPINFOHEADER* pbmihBitMapInfoHeader,
    DWORD dwPixelAspectRatioX,
    DWORD dwPixelAspectRatioY,
    MFVideoInterlaceMode InterlaceMode,
    QWORD VideoFlags,
    QWORD qwFramesPerSecondNumerator,
    QWORD qwFramesPerSecondDenominator,
    DWORD dwMaxBitRate,
    __out IMFVideoMediaType** ppIVideoMediaType
    );

STDAPI MFGetStrideForBitmapInfoHeader(
    DWORD format,
    DWORD dwWidth,
    __out LONG* pStride
    );

STDAPI MFGetPlaneSize(
    DWORD format,
    DWORD dwWidth,
    DWORD dwHeight,
    __out DWORD* pdwPlaneSize
    );

#if (WINVER >= _WIN32_WINNT_WIN7)
//
// MFCreateVideoMediaTypeFromBitMapInfoHeaderEx
//

STDAPI MFCreateVideoMediaTypeFromBitMapInfoHeaderEx(
    __in_bcount(cbBitMapInfoHeader) const BITMAPINFOHEADER* pbmihBitMapInfoHeader,
    __in    UINT32                  cbBitMapInfoHeader,
    DWORD dwPixelAspectRatioX,
    DWORD dwPixelAspectRatioY,
    MFVideoInterlaceMode InterlaceMode,
    QWORD VideoFlags,
    DWORD dwFramesPerSecondNumerator,
    DWORD dwFramesPerSecondDenominator,
    DWORD dwMaxBitRate,
    __out IMFVideoMediaType** ppIVideoMediaType
    );
#endif // (WINVER >= _WIN32_WINNT_WIN7)

//
// MFCreateMediaTypeFromRepresentation
//

STDAPI MFCreateMediaTypeFromRepresentation(
    GUID guidRepresentation,
    __in LPVOID pvRepresentation,
    __out IMFMediaType** ppIMediaType
    );


//
// MFCreateAudioMediaType
//

STDAPI
MFCreateAudioMediaType(
    __in    const WAVEFORMATEX* pAudioFormat,
    __out   IMFAudioMediaType** ppIAudioMediaType
    );


DWORD
STDMETHODCALLTYPE
MFGetUncompressedVideoFormat(
    __in    const MFVIDEOFORMAT* pVideoFormat
    );

STDAPI 
MFInitVideoFormat(
    __in    MFVIDEOFORMAT*          pVideoFormat,
    __in    MFStandardVideoFormat   type
    );

STDAPI
MFInitVideoFormat_RGB(
    __in    MFVIDEOFORMAT*  pVideoFormat,
    __in    DWORD           dwWidth,
    __in    DWORD           dwHeight,
    __in    DWORD           D3Dfmt /* 0 indicates sRGB */
    );

STDAPI 
MFConvertColorInfoToDXVA(
    __out DWORD* pdwToDXVA,
    __in  const MFVIDEOFORMAT* pFromFormat
    );
STDAPI
MFConvertColorInfoFromDXVA(
    __inout MFVIDEOFORMAT* pToFormat,
    __in    DWORD dwFromDXVA
    );

//
// Optimized stride copy function
//
STDAPI MFCopyImage(
    __out_bcount(abs(lDestStride) *  dwLines) BYTE* pDest,
    LONG    lDestStride,
    __in_bcount(abs(lSrcStride) * dwLines) const BYTE* pSrc,
    LONG    lSrcStride,
    __out_range(<=, min(abs(lSrcStride), abs(lDestStride)))  DWORD dwWidthInBytes,
    DWORD   dwLines
    );

STDAPI MFConvertFromFP16Array(
    __out_ecount(dwCount) float* pDest,
    __in_ecount(dwCount) const WORD* pSrc,
    DWORD dwCount
    );

STDAPI MFConvertToFP16Array(
    __out_ecount(dwCount) WORD* pDest,
    __in_ecount(dwCount) const float* pSrc,
    DWORD dwCount
    );




///////////////////////////////////////////////////////////////////////////////////////////////////////////////  Attributes Utility functions ////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#ifdef __cplusplus

//
// IMFAttributes inline UTILITY FUNCTIONS - used for IMFMediaType as well
//
inline
UINT32
HI32(UINT64 unPacked)
{
    return (UINT32)(unPacked >> 32);
}

inline
UINT32
LO32(UINT64 unPacked)
{
    return (UINT32)unPacked;
}

inline
UINT64
Pack2UINT32AsUINT64(UINT32 unHigh, UINT32 unLow)
{
    return ((UINT64)unHigh << 32) | unLow;
}

inline
void
Unpack2UINT32AsUINT64(UINT64 unPacked, __out UINT32* punHigh, __out UINT32* punLow)
{
    *punHigh = HI32(unPacked);
    *punLow = LO32(unPacked);
}

inline
UINT64
PackSize(UINT32 unWidth, UINT32 unHeight)
{
    return Pack2UINT32AsUINT64(unWidth, unHeight);
}

inline
void
UnpackSize(UINT64 unPacked, __out UINT32* punWidth, __out UINT32* punHeight)
{
    Unpack2UINT32AsUINT64(unPacked, punWidth, punHeight);
}

inline
UINT64
PackRatio(INT32 nNumerator, UINT32 unDenominator)
{
    return Pack2UINT32AsUINT64((UINT32)nNumerator, unDenominator);
}

inline
void
UnpackRatio(UINT64 unPacked, __out INT32* pnNumerator, __out UINT32* punDenominator)
{
    Unpack2UINT32AsUINT64(unPacked, (UINT32*)pnNumerator, punDenominator);
}


//
// "failsafe" inline get methods - return the stored value or return a default
//
inline
UINT32
MFGetAttributeUINT32(
    IMFAttributes*  pAttributes,
    REFGUID         guidKey,
    UINT32          unDefault
    )
{
    UINT32 unRet;
    if (FAILED(pAttributes->GetUINT32(guidKey, &unRet))) {
        unRet = unDefault;
    }
    return unRet;
}

inline
UINT64
MFGetAttributeUINT64(
    IMFAttributes*  pAttributes,
    REFGUID         guidKey,
    UINT64          unDefault
    )
{
    UINT64 unRet;
    if (FAILED(pAttributes->GetUINT64(guidKey, &unRet))) {
        unRet = unDefault;
    }
    return unRet;
}

inline
double
MFGetAttributeDouble(
    IMFAttributes*  pAttributes,
    REFGUID         guidKey,
    double          fDefault
    )
{
    double fRet;
    if (FAILED(pAttributes->GetDouble(guidKey, &fRet))) {
        fRet = fDefault;
    }
    return fRet;
}

//
// helpers for getting/setting ratios and sizes
//

inline
HRESULT
MFGetAttribute2UINT32asUINT64(
    IMFAttributes*  pAttributes,
    REFGUID         guidKey,
    __out UINT32*   punHigh32,
    __out UINT32*   punLow32
    )
{
    UINT64 unPacked;
    HRESULT hr = S_OK;

    hr = pAttributes->GetUINT64(guidKey, &unPacked);
    if (FAILED(hr)) {
        return hr;
    }
    Unpack2UINT32AsUINT64(unPacked, punHigh32, punLow32);

    return hr;
}

inline
HRESULT
MFSetAttribute2UINT32asUINT64(
    IMFAttributes*  pAttributes,
    REFGUID         guidKey,
    UINT32          unHigh32,
    UINT32          unLow32
    )
{
    return pAttributes->SetUINT64(guidKey, Pack2UINT32AsUINT64(unHigh32, unLow32));
}

inline
HRESULT
MFGetAttributeRatio(
    IMFAttributes*  pAttributes,
    REFGUID         guidKey,
    __out UINT32*   punNumerator,
    __out UINT32*   punDenominator
    )
{
    return MFGetAttribute2UINT32asUINT64(pAttributes, guidKey, punNumerator, punDenominator);
}

inline
HRESULT
MFGetAttributeSize(
    IMFAttributes*  pAttributes,
    REFGUID         guidKey,
    __out UINT32*   punWidth,
    __out UINT32*   punHeight
    )
{
    return MFGetAttribute2UINT32asUINT64(pAttributes, guidKey, punWidth, punHeight);
}

inline
HRESULT
MFSetAttributeRatio(
    IMFAttributes*  pAttributes,
    REFGUID         guidKey,
    UINT32          unNumerator,
    UINT32          unDenominator
    )
{
    return MFSetAttribute2UINT32asUINT64(pAttributes, guidKey, unNumerator, unDenominator);
}

inline
HRESULT
MFSetAttributeSize(
    IMFAttributes*  pAttributes,
    REFGUID         guidKey,
    UINT32          unWidth,
    UINT32          unHeight
    )
{
    return MFSetAttribute2UINT32asUINT64(pAttributes, guidKey, unWidth, unHeight);
}
#endif

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////  Memory Management ////////////////////////////
////////////////////////////////////////////////////////////////////////////////

//
// Heap alloc/free
//
typedef enum _EAllocationType
{
    eAllocationTypeDynamic,
    eAllocationTypeRT,
    eAllocationTypePageable,
    eAllocationTypeIgnore
}   EAllocationType;

EXTERN_C void* WINAPI MFHeapAlloc( size_t nSize,
                            ULONG dwFlags,
                            __in_opt char *pszFile,
                            int line,
                            EAllocationType eat);
EXTERN_C void WINAPI MFHeapFree( void * pv );

///////////////////////////////  Collection         ////////////////////////////
////////////////////////////////////////////////////////////////////////////////

//
// Instantiates the MF-provided IMFCollection implementation
//
STDAPI MFCreateCollection(
    __out IMFCollection **ppIMFCollection );


//////////////////////////       SourceResolver     ////////////////////////////
////////////////////////////////////////////////////////////////////////////////
DEFINE_GUID(CLSID_MFSourceResolver,
    0x90eab60f,
    0xe43a,
    0x4188,
    0xbc, 0xc4, 0xe4, 0x7f, 0xdf, 0x04, 0x86, 0x8c);

#if (WINVER >= _WIN32_WINNT_WIN7)
//  Return (a * b + d) / c
//  Returns _I64_MAX or LLONG_MIN on failure or _I64_MAX if mplat.dll is not available
LONGLONG WINAPI MFllMulDiv(LONGLONG a, LONGLONG b, LONGLONG c, LONGLONG d);
#endif // (WINVER >= _WIN32_WINNT_WIN7)

#if defined(__cplusplus)
}
#endif

#endif //#if !defined(__MFAPI_H__)
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\messagedeviceservice.h ===
/*
 *  MessageDeviceService.h
 *
 *  Contains declarations for the Message Device Service
 *
 *  Copyright (c) Microsoft Corporation, All Rights Reserved.
 *
 */

#ifndef _MESSAGEDEVICESERVICE_H_
#define _MESSAGEDEVICESERVICE_H_

#include <DeviceServices.h>

/*****************************************************************************/
/*  Message Service Info                                                     */
/*****************************************************************************/

DEFINE_DEVSVCGUID(SERVICE_Message,
    0x29b43bd0, 0x6b16, 0x49af, 0xb7, 0x2e, 0x85, 0x77, 0x0a, 0xdf, 0xeb, 0xdd);

#define NAME_MessageSvc                 L"Message"
#define TYPE_MessageSvc                 DEVSVCTYPE_DEFAULT


/*****************************************************************************/
/*  Message Service Object Formats                                           */
/*****************************************************************************/

/*  FORMAT_AbstractMessage
 *
 *  MTP Format: Abstract Message (0xBB01)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_AbstractMessage,
    0xBB010000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AbstractMessage            L"AbstractMessage"


/*  FORMAT_AbstractMessageFolder
 *
 *  MTP Format: Abstract Message Folder (0xBA07)
 *  Suggested MIME Type:
 */

DEFINE_DEVSVCGUID(FORMAT_AbstractMessageFolder,
    0xBA070000, 0xAE6C, 0x4804, 0x98, 0xBA, 0xC5, 0x7B, 0x46, 0x96, 0x5F, 0xE7);

#define NAME_AbstractMessageFolder          L"AbstractMessageFolder"


/*****************************************************************************/
/*  Message Service Object Property Keys                                     */
/*****************************************************************************/

DEFINE_DEVSVCGUID(MESSAGESVC_OBJECT_PROPERTIES,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F);


/*  MessageObj.Subject
 *
 *  MTP Property: Subject (0xDCE2)
 *  Type: String/AUInt16
 *  Form: None/LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_Subject,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    2);

#define NAME_MessageObj_Subject             L"Subject"


/*  MessageObj.Body
 *
 *  MTP Property: Body Text (0xDCE1)
 *  Type: AUInt16
 *  Form: LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_Body,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    3);

#define NAME_MessageObj_Body                L"Body"


/*  MessageObj.Priority
 *
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_Priority,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    4);

#define NAME_MessageObj_Priority            L"Priority"

#define ENUM_MessageObj_PriorityHighest     2
#define ENUM_MessageObj_PriorityNormal      1
#define ENUM_MessageObj_PriorityLowest      0


/*  MessageObj.Category
 *
 *  MTP Property:  ()
 *  Type: String/AUInt16
 *  Form: None/LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_Category,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    10);

#define NAME_MessageObj_Category            L"Category"


/*  MessageObj.Sender
 *
 *  MTP Property: Message Sender (0xDD45)
 *  Type: String/AUInt16
 *  Form: None/LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_Sender,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    18);

#define NAME_MessageObj_Sender              L"Sender"


/*  MessageObj.To
 *
 *  MTP Property: Message To (0xDD40)
 *  Type: AUInt16
 *  Form: LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_To,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    20);

#define NAME_MessageObj_To                  L"To"


/*  MessageObj.CC
 *
 *  MTP Property: Message CC (0xDD41)
 *  Type: AUInt16
 *  Form: LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_CC,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    21);

#define NAME_MessageObj_CC                  L"CC"


/*  MessageObj.BCC
 *
 *  MTP Property: Message BCC (0xDD42)
 *  Type: AUInt16
 *  Form: LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_BCC,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    22);

#define NAME_MessageObj_BCC                 L"BCC"


/*  MessageObj.Read
 *
 *  MTP Property: Message Read (0xDD43)
 *  Type: UInt16
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_Read,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    23);

#define NAME_MessageObj_Read                L"Read"

#define ENUM_MessageObj_ReadFalse           0x00
#define ENUM_MessageObj_ReadTrue            0xff


/*  MessageObj.ReceivedTime
 *
 *  MTP Property: Message Received Time (0xDD44)
 *  Type: String
 *  Form: DateTime
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_ReceivedTime,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    24);

#define NAME_MessageObj_ReceivedTime        L"ReceivedTime"


/*  MessageObj.PatternOriginalDateTime
 *
 *  Contains the original UTC time that a recurring item was to take place.
 *
 *  Type: String
 *  Form: DateTime
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_PatternOriginalDateTime,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    26);

#define NAME_MessageObj_PatternOriginalDateTime L"PatternOriginalDateTime"


/*  MessageObj.PatternType
 *
 *  Contains the pattern type of the recurring item.
 *
 *  Type: UInt32
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_PatternType,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    27);

#define NAME_MessageObj_PatternType         L"PatternType"

#define ENUM_MessageObj_PatternTypeDaily    0x00000001
#define ENUM_MessageObj_PatternTypeWeekly   0x00000002
#define ENUM_MessageObj_PatternTypeMonthly  0x00000003
#define ENUM_MessageObj_PatternTypeYearly   0x00000004


/*  MessageObj.PatternValidStartDate
 *
 *  Contains the first date on which the recurrence pattern is valid.  The
 *  first instance of the recurring item is on or after this date.  The date
 *  is in the time reference of the recurring item.
 *
 *  Type: String
 *  Form: ISO 8601 Date
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_PatternValidStartDate,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    28);

#define NAME_MessageObj_PatternValidStartDate   L"PatternValidStartDate"


/*  MessageObj.PatternValidEndDate
 *
 *  Contains the last date on which the recurrence pattern is valid.  The
 *  last instance of the recurring item is on or before this date.  The date
 *  is in the time reference of the recurring item.
 *
 *  Type: String
 *  Form: ISO 8601 Date
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_PatternValidEndDate,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    29);

#define NAME_MessageObj_PatternValidEndDate L"PatternValidEndDate"


/*  MessageObj.PatternPeriod
 *
 *  Contains the period of the repeating recurrence pattern.  The units of this
 *  property are determined by the value of MessageObj.PatternType.
 *
 *  Type: UInt32
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_PatternPeriod,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    31);

#define NAME_MessageObj_PatternPeriod       L"PatternPeriod"


/*  MessageObj.PatternDayOfWeek
 *
 *  Contains the day of week mask for weekly, monthly, and yearly recurrence
 *  patterns.
 *
 *  Type: UInt16
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_PatternDayOfWeek,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    32);

#define NAME_MessageObj_PatternDayOfWeek    L"PatternDayOfWeek"

#define FLAG_MessageObj_DayOfWeekNone       0x0000
#define FLAG_MessageObj_DayOfWeekSunday     0x0001
#define FLAG_MessageObj_DayOfWeekMonday     0x0002
#define FLAG_MessageObj_DayOfWeekTuesday    0x0004
#define FLAG_MessageObj_DayOfWeekWednesday  0x0008
#define FLAG_MessageObj_DayOfWeekThursday   0x0010
#define FLAG_MessageObj_DayOfWeekFriday     0x0020
#define FLAG_MessageObj_DayOfWeekSaturday   0x0040


/*  MessageObj.PatternDayOfMonth
 *
 *  Contains the day of the month for monthly and yearly recurrence patterns.
 *  If day specified is greater than the number of days in the month the
 *  value is interpreted as the last valid day of the month.
 *
 *  Type: UInt8
 *  Form: Range
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_PatternDayOfMonth,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    33);

#define NAME_MessageObj_PatternDayOfMonth   L"PatternDayOfMonth"

#define RANGEMIN_MessageObj_PatternDayOfMonth   1
#define RANGEMAX_MessageObj_PatternDayOfMonth   31
#define RANGESTEP_MessageObj_PatternDayOfMonth  1

/*  MessageObj.PatternMonthOfYear
 *
 *  Contains the month of the year for yearly recurrence patterns.
 *
 *  Type: UInt8
 *  Form: Range
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_PatternMonthOfYear,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    34);

#define NAME_MessageObj_PatternMonthOfYear  L"PatternMonthOfYear"

#define RANGEMIN_MessageObj_PatternMonthOfYear  1
#define RANGEMAX_MessageObj_PatternMonthOfYear  12
#define RANGESTEP_MessageObj_PatternMonthOfYear 1


/*  MessageObj.PatternInstance
 *
 *  Contains the instance of the recurring pattern that is to be matched.
 *
 *  Type: UInt8
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_PatternInstance,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    35);

#define NAME_MessageObj_PatternInstance     L"PatternInstance"

#define ENUM_MessageObj_PatternInstanceNone     0x00
#define ENUM_MessageObj_PatternInstanceFirst    0x01
#define ENUM_MessageObj_PatternInstanceSecond   0x02
#define ENUM_MessageObj_PatternInstanceThird    0x03
#define ENUM_MessageObj_PatternInstanceFourth   0x04
#define ENUM_MessageObj_PatternInstanceLast     0x05


/*  MessageObj.PatternDeleteDates
 *
 *  Contains a semi-colon separated list of the the dates on which instances
 *  of the recurring item have been deleted.  Does not contain the original
 *  dates for items which have been moved.  The date specified is in the
 *  time reference of the recurrence.
 *
 *  Type: AUInt16
 *  Form: LongString
 */

DEFINE_DEVSVCPROPKEY(PKEY_MessageObj_PatternDeleteDates,
    0xB28AE94B, 0x05A4, 0x4E8E, 0xBE, 0x01, 0x72, 0xCC, 0x7E, 0x09, 0x9D, 0x8F,
    36);

#define NAME_MessageObj_PatternDeleteDates  L"PatternDeleteDates"

#endif  /* _MESSAGEDEVICESERVICE_H_ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\MgmtAPI.h ===
/*++

Copyright (c) 1992-1999 Microsoft Corporation

Module Name:

    mgmtapi.h

Abstract:

    Definitions for SNMP Management API Development.

--*/

#ifndef _INC_MGMTAPI
#define _INC_MGMTAPI

#if _MSC_VER > 1000
#pragma once
#endif

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// Additional header files                                                   //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#include <snmp.h>
#include <winsock.h>

#ifdef __cplusplus
extern "C" {
#endif

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// MGMT API error code definitions                                           //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

#define SNMP_MGMTAPI_TIMEOUT                40
#define SNMP_MGMTAPI_SELECT_FDERRORS        41
#define SNMP_MGMTAPI_TRAP_ERRORS            42
#define SNMP_MGMTAPI_TRAP_DUPINIT           43
#define SNMP_MGMTAPI_NOTRAPS                44
#define SNMP_MGMTAPI_AGAIN                  45
#define SNMP_MGMTAPI_INVALID_CTL            46
#define SNMP_MGMTAPI_INVALID_SESSION        47
#define SNMP_MGMTAPI_INVALID_BUFFER         48

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// MGMT API control codes
//                                                                           //
///////////////////////////////////////////////////////////////////////////////
#define MGMCTL_SETAGENTPORT             0x01

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// MGMT API type definitions                                                 //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

typedef PVOID LPSNMP_MGR_SESSION;

///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// MGMT API prototypes                                                       //
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

LPSNMP_MGR_SESSION
SNMP_FUNC_TYPE
SnmpMgrOpen(
    __in_opt LPSTR lpAgentAddress,          // Name/address of target agent
    __in_opt LPSTR lpAgentCommunity,        // Community for target agent
    IN INT   nTimeOut,                      // Comm time-out in milliseconds
    IN INT   nRetries                       // Comm time-out/retry count
    );

BOOL
SNMP_FUNC_TYPE
SnmpMgrCtl(
    LPSNMP_MGR_SESSION session,             // pointer to the MGMTAPI session
    DWORD              dwCtlCode,           // control code for the command requested
    LPVOID             lpvInBuffer,         // buffer with the input parameters for the operation
    DWORD              cbInBuffer,          // size of lpvInBuffer in bytes
    LPVOID             lpvOUTBuffer,        // buffer for all the output parameters of the command
    DWORD              cbOUTBuffer,         // size of lpvOUTBuffer
    LPDWORD            lpcbBytesReturned    // space used from lpvOutBuffer
    );

BOOL
SNMP_FUNC_TYPE
SnmpMgrClose(
    IN LPSNMP_MGR_SESSION session           // SNMP session pointer
    );

SNMPAPI
SNMP_FUNC_TYPE
SnmpMgrRequest(
    IN     LPSNMP_MGR_SESSION session,           // SNMP session pointer
    IN     BYTE               requestType,       // Get, GetNext, or Set
    IN OUT RFC1157VarBindList *variableBindings, // Varible bindings
       OUT AsnInteger         *errorStatus,      // Result error status
       OUT AsnInteger         *errorIndex        // Result error index
    );

BOOL
SNMP_FUNC_TYPE
SnmpMgrStrToOid(
    __in_opt  LPSTR         string,         // OID string to be converted
    OUT AsnObjectIdentifier *oid            // OID internal representation
    );

BOOL
SNMP_FUNC_TYPE
SnmpMgrOidToStr(
    IN  AsnObjectIdentifier *oid,           // OID to be converted
    __deref_opt_out LPSTR   *string         // OID string representation
    );

BOOL
SNMP_FUNC_TYPE
SnmpMgrTrapListen(
    OUT HANDLE *phTrapAvailable             // Event indicating trap available
    );

BOOL
SNMP_FUNC_TYPE
SnmpMgrGetTrap(
    OUT AsnObjectIdentifier *enterprise,         // Generating enterprise
    OUT AsnNetworkAddress   *IPAddress,          // Generating IP address
    OUT AsnInteger          *genericTrap,        // Generic trap type
    OUT AsnInteger          *specificTrap,       // Enterprise specific type
    OUT AsnTimeticks        *timeStamp,          // Time stamp
    OUT RFC1157VarBindList  *variableBindings    // Variable bindings
    );

BOOL
SNMP_FUNC_TYPE
SnmpMgrGetTrapEx(
    OUT AsnObjectIdentifier *enterprise,       // Generating enterprise
    OUT AsnNetworkAddress   *agentAddress,     // Generating agent addr
    OUT AsnNetworkAddress   *sourceAddress,    // Generating network addr
    OUT AsnInteger          *genericTrap,      // Generic trap type
    OUT AsnInteger          *specificTrap,     // Enterprise specific type
    OUT AsnOctetString      *community,        // Generating community
    OUT AsnTimeticks        *timeStamp,        // Time stamp
    OUT RFC1157VarBindList  *variableBindings  // Variable bindings
    );

#ifdef __cplusplus
}
#endif

#endif // _INC_MGMTAPI
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\Mferror.h ===
/*++

  Microsoft Windows Media Foundation
  Copyright (C) Microsoft Corporation. All rights reserved.

Module Name:

    mferror.mc

Abstract:

    Definitions for MediaFoundation events.

Author:


Revision History:

Notes:

    This file is used by the MC tool to generate the mferror.h file

**************************** READ ME ******************************************

 Here are the commented error ranges for the Windows Media Technologies Group


 RANGES

 14000 - 14999 = General Media Foundation errors

 15000 - 15999 = ASF parsing errors

 16000 - 16999 = Media Source errors

 17000 - 17999 = MEDIAFOUNDATION Network Error Events

 18000 - 18999 = MEDIAFOUNDATION WMContainer Error Events

 19000 - 19999 = MEDIAFOUNDATION Media Sink Error Events

 20000 - 20999 = Renderer errors

 21000 - 21999 = Topology Errors

 25000 - 25999 = Timeline Errors

 26000 - 26999 = Unused

 28000 - 28999 = Transform errors

 29000 - 29999 = Content Protection errors
 
 40000 - 40999 = Clock errors
 
 41000 - 41999 = MF Quality Management Errors

 42000 - 42999 = MF Transcode API Errors

**************************** READ ME ******************************************

--*/

#ifndef _MFERROR_H
#define _MFERROR_H


#define STATUS_SEVERITY(hr)  (((hr) >> 30) & 0x3)

#ifdef RC_INVOKED
#define _HRESULT_TYPEDEF_(_sc) _sc
#else // RC_INVOKED
#define _HRESULT_TYPEDEF_(_sc) ((HRESULT)_sc)
#endif // RC_INVOKED


/////////////////////////////////////////////////////////////////////////
//
// MEDIAFOUNDATION Success Events
//
/////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////
//
// MEDIAFOUNDATION Warning Events
//
/////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////
//
// MEDIAFOUNDATION Error Events
//
/////////////////////////////////////////////////////////////////////////

//
//  Values are 32 bit values laid out as follows:
//
//   3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
//   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
//  +---+-+-+-----------------------+-------------------------------+
//  |Sev|C|R|     Facility          |               Code            |
//  +---+-+-+-----------------------+-------------------------------+
//
//  where
//
//      Sev - is the severity code
//
//          00 - Success
//          01 - Informational
//          10 - Warning
//          11 - Error
//
//      C - is the Customer code flag
//
//      R - is a reserved bit
//
//      Facility - is the facility code
//
//      Code - is the facility's status code
//
//
// Define the facility codes
//
#define FACILITY_MF_WIN32                0x7
#define FACILITY_MF                      0xD


//
// Define the severity codes
//
#define STATUS_SEVERITY_WARNING          0x2
#define STATUS_SEVERITY_SUCCESS          0x0
#define STATUS_SEVERITY_INFORMATIONAL    0x1
#define STATUS_SEVERITY_ERROR            0x3


//
// MessageId: MF_E_PLATFORM_NOT_INITIALIZED
//
// MessageText:
//
// Platform not initialized. Please call MFStartup().%0
//
#define MF_E_PLATFORM_NOT_INITIALIZED    _HRESULT_TYPEDEF_(0xC00D36B0L)

//
// MessageId: MF_E_BUFFERTOOSMALL
//
// MessageText:
//
// The buffer was too small to carry out the requested action.%0
//
#define MF_E_BUFFERTOOSMALL              _HRESULT_TYPEDEF_(0xC00D36B1L)

//
// MessageId: MF_E_INVALIDREQUEST
//
// MessageText:
//
// The request is invalid in the current state.%0
//
#define MF_E_INVALIDREQUEST              _HRESULT_TYPEDEF_(0xC00D36B2L)

//
// MessageId: MF_E_INVALIDSTREAMNUMBER
//
// MessageText:
//
// The stream number provided was invalid.%0
//
#define MF_E_INVALIDSTREAMNUMBER         _HRESULT_TYPEDEF_(0xC00D36B3L)

//
// MessageId: MF_E_INVALIDMEDIATYPE
//
// MessageText:
//
// The data specified for the media type is invalid, inconsistent, or not supported by this object.%0
//
#define MF_E_INVALIDMEDIATYPE            _HRESULT_TYPEDEF_(0xC00D36B4L)

//
// MessageId: MF_E_NOTACCEPTING
//
// MessageText:
//
// The callee is currently not accepting further input.%0
//
#define MF_E_NOTACCEPTING                _HRESULT_TYPEDEF_(0xC00D36B5L)

//
// MessageId: MF_E_NOT_INITIALIZED
//
// MessageText:
//
// This object needs to be initialized before the requested operation can be carried out.%0
//
#define MF_E_NOT_INITIALIZED             _HRESULT_TYPEDEF_(0xC00D36B6L)

//
// MessageId: MF_E_UNSUPPORTED_REPRESENTATION
//
// MessageText:
//
// The requested representation is not supported by this object.%0
//
#define MF_E_UNSUPPORTED_REPRESENTATION  _HRESULT_TYPEDEF_(0xC00D36B7L)

//
// MessageId: MF_E_NO_MORE_TYPES
//
// MessageText:
//
// An object ran out of media types to suggest therefore the requested chain of streaming objects cannot be completed.%0
//
#define MF_E_NO_MORE_TYPES               _HRESULT_TYPEDEF_(0xC00D36B9L)

//
// MessageId: MF_E_UNSUPPORTED_SERVICE
//
// MessageText:
//
// The object does not support the specified service.%0
//
#define MF_E_UNSUPPORTED_SERVICE         _HRESULT_TYPEDEF_(0xC00D36BAL)

//
// MessageId: MF_E_UNEXPECTED
//
// MessageText:
//
// An unexpected error has occurred in the operation requested.%0
//
#define MF_E_UNEXPECTED                  _HRESULT_TYPEDEF_(0xC00D36BBL)

//
// MessageId: MF_E_INVALIDNAME
//
// MessageText:
//
// Invalid name.%0
//
#define MF_E_INVALIDNAME                 _HRESULT_TYPEDEF_(0xC00D36BCL)

//
// MessageId: MF_E_INVALIDTYPE
//
// MessageText:
//
// Invalid type.%0
//
#define MF_E_INVALIDTYPE                 _HRESULT_TYPEDEF_(0xC00D36BDL)

//
// MessageId: MF_E_INVALID_FILE_FORMAT
//
// MessageText:
//
// The file does not conform to the relevant file format specification.
//
#define MF_E_INVALID_FILE_FORMAT         _HRESULT_TYPEDEF_(0xC00D36BEL)

//
// MessageId: MF_E_INVALIDINDEX
//
// MessageText:
//
// Invalid index.%0
//
#define MF_E_INVALIDINDEX                _HRESULT_TYPEDEF_(0xC00D36BFL)

//
// MessageId: MF_E_INVALID_TIMESTAMP
//
// MessageText:
//
// An invalid timestamp was given.%0
//
#define MF_E_INVALID_TIMESTAMP           _HRESULT_TYPEDEF_(0xC00D36C0L)

//
// MessageId: MF_E_UNSUPPORTED_SCHEME
//
// MessageText:
//
// The scheme of the given URL is unsupported.%0
//
#define MF_E_UNSUPPORTED_SCHEME          _HRESULT_TYPEDEF_(0xC00D36C3L)

//
// MessageId: MF_E_UNSUPPORTED_BYTESTREAM_TYPE
//
// MessageText:
//
// The byte stream type of the given URL is unsupported.%0
//
#define MF_E_UNSUPPORTED_BYTESTREAM_TYPE _HRESULT_TYPEDEF_(0xC00D36C4L)

//
// MessageId: MF_E_UNSUPPORTED_TIME_FORMAT
//
// MessageText:
//
// The given time format is unsupported.%0
//
#define MF_E_UNSUPPORTED_TIME_FORMAT     _HRESULT_TYPEDEF_(0xC00D36C5L)

//
// MessageId: MF_E_NO_SAMPLE_TIMESTAMP
//
// MessageText:
//
// The Media Sample does not have a timestamp.%0
//
#define MF_E_NO_SAMPLE_TIMESTAMP         _HRESULT_TYPEDEF_(0xC00D36C8L)

//
// MessageId: MF_E_NO_SAMPLE_DURATION
//
// MessageText:
//
// The Media Sample does not have a duration.%0
//
#define MF_E_NO_SAMPLE_DURATION          _HRESULT_TYPEDEF_(0xC00D36C9L)

//
// MessageId: MF_E_INVALID_STREAM_DATA
//
// MessageText:
//
// The request failed because the data in the stream is corrupt.%0\n.
//
#define MF_E_INVALID_STREAM_DATA         _HRESULT_TYPEDEF_(0xC00D36CBL)

//
// MessageId: MF_E_RT_UNAVAILABLE
//
// MessageText:
//
// Real time services are not available.%0
//
#define MF_E_RT_UNAVAILABLE              _HRESULT_TYPEDEF_(0xC00D36CFL)

//
// MessageId: MF_E_UNSUPPORTED_RATE
//
// MessageText:
//
// The specified rate is not supported.%0
//
#define MF_E_UNSUPPORTED_RATE            _HRESULT_TYPEDEF_(0xC00D36D0L)

//
// MessageId: MF_E_THINNING_UNSUPPORTED
//
// MessageText:
//
// This component does not support stream-thinning.%0
//
#define MF_E_THINNING_UNSUPPORTED        _HRESULT_TYPEDEF_(0xC00D36D1L)

//
// MessageId: MF_E_REVERSE_UNSUPPORTED
//
// MessageText:
//
// The call failed because no reverse playback rates are available.%0
//
#define MF_E_REVERSE_UNSUPPORTED         _HRESULT_TYPEDEF_(0xC00D36D2L)

//
// MessageId: MF_E_UNSUPPORTED_RATE_TRANSITION
//
// MessageText:
//
// The requested rate transition cannot occur in the current state.%0
//
#define MF_E_UNSUPPORTED_RATE_TRANSITION _HRESULT_TYPEDEF_(0xC00D36D3L)

//
// MessageId: MF_E_RATE_CHANGE_PREEMPTED
//
// MessageText:
//
// The requested rate change has been pre-empted and will not occur.%0
//
#define MF_E_RATE_CHANGE_PREEMPTED       _HRESULT_TYPEDEF_(0xC00D36D4L)

//
// MessageId: MF_E_NOT_FOUND
//
// MessageText:
//
// The specified object or value does not exist.%0
//
#define MF_E_NOT_FOUND                   _HRESULT_TYPEDEF_(0xC00D36D5L)

//
// MessageId: MF_E_NOT_AVAILABLE
//
// MessageText:
//
// The requested value is not available.%0
//
#define MF_E_NOT_AVAILABLE               _HRESULT_TYPEDEF_(0xC00D36D6L)

//
// MessageId: MF_E_NO_CLOCK
//
// MessageText:
//
// The specified operation requires a clock and no clock is available.%0
//
#define MF_E_NO_CLOCK                    _HRESULT_TYPEDEF_(0xC00D36D7L)

//
// MessageId: MF_S_MULTIPLE_BEGIN
//
// MessageText:
//
// This callback and state had already been passed in to this event generator earlier.%0
//
#define MF_S_MULTIPLE_BEGIN              _HRESULT_TYPEDEF_(0x000D36D8L)

//
// MessageId: MF_E_MULTIPLE_BEGIN
//
// MessageText:
//
// This callback has already been passed in to this event generator.%0
//
#define MF_E_MULTIPLE_BEGIN              _HRESULT_TYPEDEF_(0xC00D36D9L)

//
// MessageId: MF_E_MULTIPLE_SUBSCRIBERS
//
// MessageText:
//
// Some component is already listening to events on this event generator.%0
//
#define MF_E_MULTIPLE_SUBSCRIBERS        _HRESULT_TYPEDEF_(0xC00D36DAL)

//
// MessageId: MF_E_TIMER_ORPHANED
//
// MessageText:
//
// This timer was orphaned before its callback time arrived.%0
//
#define MF_E_TIMER_ORPHANED              _HRESULT_TYPEDEF_(0xC00D36DBL)

//
// MessageId: MF_E_STATE_TRANSITION_PENDING
//
// MessageText:
//
// A state transition is already pending.%0
//
#define MF_E_STATE_TRANSITION_PENDING    _HRESULT_TYPEDEF_(0xC00D36DCL)

//
// MessageId: MF_E_UNSUPPORTED_STATE_TRANSITION
//
// MessageText:
//
// The requested state transition is unsupported.%0
//
#define MF_E_UNSUPPORTED_STATE_TRANSITION _HRESULT_TYPEDEF_(0xC00D36DDL)

//
// MessageId: MF_E_UNRECOVERABLE_ERROR_OCCURRED
//
// MessageText:
//
// An unrecoverable error has occurred.%0
//
#define MF_E_UNRECOVERABLE_ERROR_OCCURRED _HRESULT_TYPEDEF_(0xC00D36DEL)

//
// MessageId: MF_E_SAMPLE_HAS_TOO_MANY_BUFFERS
//
// MessageText:
//
// The provided sample has too many buffers.%0
//
#define MF_E_SAMPLE_HAS_TOO_MANY_BUFFERS _HRESULT_TYPEDEF_(0xC00D36DFL)

//
// MessageId: MF_E_SAMPLE_NOT_WRITABLE
//
// MessageText:
//
// The provided sample is not writable.%0
//
#define MF_E_SAMPLE_NOT_WRITABLE         _HRESULT_TYPEDEF_(0xC00D36E0L)

//
// MessageId: MF_E_INVALID_KEY
//
// MessageText:
//
// The specified key is not valid.
//
#define MF_E_INVALID_KEY                 _HRESULT_TYPEDEF_(0xC00D36E2L)

//
// MessageId: MF_E_BAD_STARTUP_VERSION
//
// MessageText:
//
// You are calling MFStartup with the wrong MF_VERSION. Mismatched bits?
//
#define MF_E_BAD_STARTUP_VERSION         _HRESULT_TYPEDEF_(0xC00D36E3L)

//
// MessageId: MF_E_UNSUPPORTED_CAPTION
//
// MessageText:
//
// The caption of the given URL is unsupported.%0
//
#define MF_E_UNSUPPORTED_CAPTION         _HRESULT_TYPEDEF_(0xC00D36E4L)

//
// MessageId: MF_E_INVALID_POSITION
//
// MessageText:
//
// The operation on the current offset is not permitted.%0
//
#define MF_E_INVALID_POSITION            _HRESULT_TYPEDEF_(0xC00D36E5L)

//
// MessageId: MF_E_ATTRIBUTENOTFOUND
//
// MessageText:
//
// The requested attribute was not found.%0
//
#define MF_E_ATTRIBUTENOTFOUND           _HRESULT_TYPEDEF_(0xC00D36E6L)

//
// MessageId: MF_E_PROPERTY_TYPE_NOT_ALLOWED
//
// MessageText:
//
// The specified property type is not allowed in this context.%0
//
#define MF_E_PROPERTY_TYPE_NOT_ALLOWED   _HRESULT_TYPEDEF_(0xC00D36E7L)

//
// MessageId: MF_E_PROPERTY_TYPE_NOT_SUPPORTED
//
// MessageText:
//
// The specified property type is not supported.%0
//
#define MF_E_PROPERTY_TYPE_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC00D36E8L)

//
// MessageId: MF_E_PROPERTY_EMPTY
//
// MessageText:
//
// The specified property is empty.%0
//
#define MF_E_PROPERTY_EMPTY              _HRESULT_TYPEDEF_(0xC00D36E9L)

//
// MessageId: MF_E_PROPERTY_NOT_EMPTY
//
// MessageText:
//
// The specified property is not empty.%0
//
#define MF_E_PROPERTY_NOT_EMPTY          _HRESULT_TYPEDEF_(0xC00D36EAL)

//
// MessageId: MF_E_PROPERTY_VECTOR_NOT_ALLOWED
//
// MessageText:
//
// The vector property specified is not allowed in this context.%0
//
#define MF_E_PROPERTY_VECTOR_NOT_ALLOWED _HRESULT_TYPEDEF_(0xC00D36EBL)

//
// MessageId: MF_E_PROPERTY_VECTOR_REQUIRED
//
// MessageText:
//
// A vector property is required in this context.%0
//
#define MF_E_PROPERTY_VECTOR_REQUIRED    _HRESULT_TYPEDEF_(0xC00D36ECL)

//
// MessageId: MF_E_OPERATION_CANCELLED
//
// MessageText:
//
// The operation is cancelled.%0
//
#define MF_E_OPERATION_CANCELLED         _HRESULT_TYPEDEF_(0xC00D36EDL)

//
// MessageId: MF_E_BYTESTREAM_NOT_SEEKABLE
//
// MessageText:
//
// The provided bytestream was expected to be seekable and it is not.%0
//
#define MF_E_BYTESTREAM_NOT_SEEKABLE     _HRESULT_TYPEDEF_(0xC00D36EEL)

//
// MessageId: MF_E_DISABLED_IN_SAFEMODE
//
// MessageText:
//
// The Media Foundation platform is disabled when the system is running in Safe Mode.%0
//
#define MF_E_DISABLED_IN_SAFEMODE        _HRESULT_TYPEDEF_(0xC00D36EFL)

//
// MessageId: MF_E_CANNOT_PARSE_BYTESTREAM
//
// MessageText:
//
// The Media Source could not parse the byte stream.%0
//
#define MF_E_CANNOT_PARSE_BYTESTREAM     _HRESULT_TYPEDEF_(0xC00D36F0L)

//
// MessageId: MF_E_SOURCERESOLVER_MUTUALLY_EXCLUSIVE_FLAGS
//
// MessageText:
//
// Mutually exclusive flags have been specified to source resolver. This flag combination is invalid.%0
//
#define MF_E_SOURCERESOLVER_MUTUALLY_EXCLUSIVE_FLAGS _HRESULT_TYPEDEF_(0xC00D36F1L)

//
// MessageId: MF_E_MEDIAPROC_WRONGSTATE
//
// MessageText:
//
// MediaProc is in the wrong state%0
//
#define MF_E_MEDIAPROC_WRONGSTATE        _HRESULT_TYPEDEF_(0xC00D36F2L)

//
// MessageId: MF_E_RT_THROUGHPUT_NOT_AVAILABLE
//
// MessageText:
//
// Real time I/O service can not provide requested throughput.%0
//
#define MF_E_RT_THROUGHPUT_NOT_AVAILABLE _HRESULT_TYPEDEF_(0xC00D36F3L)

//
// MessageId: MF_E_RT_TOO_MANY_CLASSES
//
// MessageText:
//
// The workqueue cannot be registered with more classes.%0
//
#define MF_E_RT_TOO_MANY_CLASSES         _HRESULT_TYPEDEF_(0xC00D36F4L)

//
// MessageId: MF_E_RT_WOULDBLOCK
//
// MessageText:
//
// This operation cannot succeed because another thread owns this object.%0
//
#define MF_E_RT_WOULDBLOCK               _HRESULT_TYPEDEF_(0xC00D36F5L)

//
// MessageId: MF_E_NO_BITPUMP
//
// MessageText:
//
// Internal. Bitpump not found.%0
//
#define MF_E_NO_BITPUMP                  _HRESULT_TYPEDEF_(0xC00D36F6L)

//
// MessageId: MF_E_RT_OUTOFMEMORY
//
// MessageText:
//
// No more RT memory available.%0
//
#define MF_E_RT_OUTOFMEMORY              _HRESULT_TYPEDEF_(0xC00D36F7L)

//
// MessageId: MF_E_RT_WORKQUEUE_CLASS_NOT_SPECIFIED
//
// MessageText:
//
// An MMCSS class has not been set for this work queue.%0
//
#define MF_E_RT_WORKQUEUE_CLASS_NOT_SPECIFIED _HRESULT_TYPEDEF_(0xC00D36F8L)

//
// MessageId: MF_E_INSUFFICIENT_BUFFER
//
// MessageText:
//
// Insufficient memory for response.%0
//
#define MF_E_INSUFFICIENT_BUFFER         _HRESULT_TYPEDEF_(0xC00D7170L)

//
// MessageId: MF_E_CANNOT_CREATE_SINK
//
// MessageText:
//
// Activate failed to create mediasink. Call OutputNode::GetUINT32(MF_TOPONODE_MAJORTYPE) for more information. %0
//
#define MF_E_CANNOT_CREATE_SINK          _HRESULT_TYPEDEF_(0xC00D36FAL)

//
// MessageId: MF_E_BYTESTREAM_UNKNOWN_LENGTH
//
// MessageText:
//
// The length of the provided bytestream is unknown.%0
//
#define MF_E_BYTESTREAM_UNKNOWN_LENGTH   _HRESULT_TYPEDEF_(0xC00D36FBL)

//
// MessageId: MF_E_SESSION_PAUSEWHILESTOPPED
//
// MessageText:
//
// The media session cannot pause from a stopped state.%0
//
#define MF_E_SESSION_PAUSEWHILESTOPPED   _HRESULT_TYPEDEF_(0xC00D36FCL)

//
// MessageId: MF_S_ACTIVATE_REPLACED
//
// MessageText:
//
// The activate could not be created in the remote process for some reason it was replaced with empty one.%0
//
#define MF_S_ACTIVATE_REPLACED           _HRESULT_TYPEDEF_(0x000D36FDL)

//
// MessageId: MF_E_FORMAT_CHANGE_NOT_SUPPORTED
//
// MessageText:
//
// The data specified for the media type is supported, but would require a format change, which is not supported by this object.%0
//
#define MF_E_FORMAT_CHANGE_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC00D36FEL)

//
// MessageId: MF_E_INVALID_WORKQUEUE
//
// MessageText:
//
// The operation failed because an invalid combination of workqueue ID and flags was specified.%0
//
#define MF_E_INVALID_WORKQUEUE           _HRESULT_TYPEDEF_(0xC00D36FFL)

//
// MessageId: MF_E_DRM_UNSUPPORTED
//
// MessageText:
//
// No DRM support is available.%0
//
#define MF_E_DRM_UNSUPPORTED             _HRESULT_TYPEDEF_(0xC00D3700L)

//
// MessageId: MF_E_UNAUTHORIZED
//
// MessageText:
//
// This operation is not authorized.%0
//
#define MF_E_UNAUTHORIZED                _HRESULT_TYPEDEF_(0xC00D3701L)

//
// MessageId: MF_E_OUT_OF_RANGE
//
// MessageText:
//
// The value is not in the specified or valid range.%0
//
#define MF_E_OUT_OF_RANGE                _HRESULT_TYPEDEF_(0xC00D3702L)

//
// MessageId: MF_E_INVALID_CODEC_MERIT
//
// MessageText:
//
// The registered codec merit is not valid.%0
//
#define MF_E_INVALID_CODEC_MERIT         _HRESULT_TYPEDEF_(0xC00D3703L)

//
// MessageId: MF_E_HW_MFT_FAILED_START_STREAMING
//
// MessageText:
//
// Hardware MFT failed to start streaming due to lack of hardware resources.%0
//
#define MF_E_HW_MFT_FAILED_START_STREAMING _HRESULT_TYPEDEF_(0xC00D3704L)


/////////////////////////////////////////////////////////////////////////
//
// MEDIAFOUNDATION ASF Parsing Informational Events
//
/////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_S_ASF_PARSEINPROGRESS
//
// MessageText:
//
// Parsing is still in progress and is not yet complete.%0
//
#define MF_S_ASF_PARSEINPROGRESS         _HRESULT_TYPEDEF_(0x400D3A98L)


/////////////////////////////////////////////////////////////////////////
//
// MEDIAFOUNDATION ASF Parsing Error Events
//
/////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_E_ASF_PARSINGINCOMPLETE
//
// MessageText:
//
// Not enough data have been parsed to carry out the requested action.%0
//
#define MF_E_ASF_PARSINGINCOMPLETE       _HRESULT_TYPEDEF_(0xC00D3A98L)

//
// MessageId: MF_E_ASF_MISSINGDATA
//
// MessageText:
//
// There is a gap in the ASF data provided.%0
//
#define MF_E_ASF_MISSINGDATA             _HRESULT_TYPEDEF_(0xC00D3A99L)

//
// MessageId: MF_E_ASF_INVALIDDATA
//
// MessageText:
//
// The data provided are not valid ASF.%0
//
#define MF_E_ASF_INVALIDDATA             _HRESULT_TYPEDEF_(0xC00D3A9AL)

//
// MessageId: MF_E_ASF_OPAQUEPACKET
//
// MessageText:
//
// The packet is opaque, so the requested information cannot be returned.%0
//
#define MF_E_ASF_OPAQUEPACKET            _HRESULT_TYPEDEF_(0xC00D3A9BL)

//
// MessageId: MF_E_ASF_NOINDEX
//
// MessageText:
//
// The requested operation failed since there is no appropriate ASF index.%0
//
#define MF_E_ASF_NOINDEX                 _HRESULT_TYPEDEF_(0xC00D3A9CL)

//
// MessageId: MF_E_ASF_OUTOFRANGE
//
// MessageText:
//
// The value supplied is out of range for this operation.%0
//
#define MF_E_ASF_OUTOFRANGE              _HRESULT_TYPEDEF_(0xC00D3A9DL)

//
// MessageId: MF_E_ASF_INDEXNOTLOADED
//
// MessageText:
//
// The index entry requested needs to be loaded before it can be available.%0
//
#define MF_E_ASF_INDEXNOTLOADED          _HRESULT_TYPEDEF_(0xC00D3A9EL)    

//
// MessageId: MF_E_ASF_TOO_MANY_PAYLOADS
//
// MessageText:
//
// The packet has reached the maximum number of payloads.%0
//
#define MF_E_ASF_TOO_MANY_PAYLOADS       _HRESULT_TYPEDEF_(0xC00D3A9FL)    

//
// MessageId: MF_E_ASF_UNSUPPORTED_STREAM_TYPE
//
// MessageText:
//
// Stream type is not supported.%0
//
#define MF_E_ASF_UNSUPPORTED_STREAM_TYPE _HRESULT_TYPEDEF_(0xC00D3AA0L)    

//
// MessageId: MF_E_ASF_DROPPED_PACKET
//
// MessageText:
//
// One or more ASF packets were dropped.%0
//
#define MF_E_ASF_DROPPED_PACKET          _HRESULT_TYPEDEF_(0xC00D3AA1L)    


/////////////////////////////////////////////////////////////////////////
//
// MEDIAFOUNDATION Media Source Error Events
//
/////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_E_NO_EVENTS_AVAILABLE
//
// MessageText:
//
// There are no events available in the queue.%0
//
#define MF_E_NO_EVENTS_AVAILABLE         _HRESULT_TYPEDEF_(0xC00D3E80L)

//
// MessageId: MF_E_INVALID_STATE_TRANSITION
//
// MessageText:
//
// A media source cannot go from the stopped state to the paused state.%0
//
#define MF_E_INVALID_STATE_TRANSITION    _HRESULT_TYPEDEF_(0xC00D3E82L)

//
// MessageId: MF_E_END_OF_STREAM
//
// MessageText:
//
// The media stream cannot process any more samples because there are no more samples in the stream.%0
//
#define MF_E_END_OF_STREAM               _HRESULT_TYPEDEF_(0xC00D3E84L)

//
// MessageId: MF_E_SHUTDOWN
//
// MessageText:
//
// The request is invalid because Shutdown() has been called.%0
//
#define MF_E_SHUTDOWN                    _HRESULT_TYPEDEF_(0xC00D3E85L)

//
// MessageId: MF_E_MP3_NOTFOUND
//
// MessageText:
//
// The MP3 object was not found.%0
//
#define MF_E_MP3_NOTFOUND                _HRESULT_TYPEDEF_(0xC00D3E86L)

//
// MessageId: MF_E_MP3_OUTOFDATA
//
// MessageText:
//
// The MP3 parser ran out of data before finding the MP3 object.%0
//
#define MF_E_MP3_OUTOFDATA               _HRESULT_TYPEDEF_(0xC00D3E87L)

//
// MessageId: MF_E_MP3_NOTMP3
//
// MessageText:
//
// The file is not really a MP3 file.%0
//
#define MF_E_MP3_NOTMP3                  _HRESULT_TYPEDEF_(0xC00D3E88L)

//
// MessageId: MF_E_MP3_NOTSUPPORTED
//
// MessageText:
//
// The MP3 file is not supported.%0
//
#define MF_E_MP3_NOTSUPPORTED            _HRESULT_TYPEDEF_(0xC00D3E89L)

//
// MessageId: MF_E_NO_DURATION
//
// MessageText:
//
// The Media stream has no duration.%0
//
#define MF_E_NO_DURATION                 _HRESULT_TYPEDEF_(0xC00D3E8AL)

//
// MessageId: MF_E_INVALID_FORMAT
//
// MessageText:
//
// The Media format is recognized but is invalid.%0
//
#define MF_E_INVALID_FORMAT              _HRESULT_TYPEDEF_(0xC00D3E8CL)

//
// MessageId: MF_E_PROPERTY_NOT_FOUND
//
// MessageText:
//
// The property requested was not found.%0
//
#define MF_E_PROPERTY_NOT_FOUND          _HRESULT_TYPEDEF_(0xC00D3E8DL)

//
// MessageId: MF_E_PROPERTY_READ_ONLY
//
// MessageText:
//
// The property is read only.%0
//
#define MF_E_PROPERTY_READ_ONLY          _HRESULT_TYPEDEF_(0xC00D3E8EL)

//
// MessageId: MF_E_PROPERTY_NOT_ALLOWED
//
// MessageText:
//
// The specified property is not allowed in this context.%0
//
#define MF_E_PROPERTY_NOT_ALLOWED        _HRESULT_TYPEDEF_(0xC00D3E8FL)

//
// MessageId: MF_E_MEDIA_SOURCE_NOT_STARTED
//
// MessageText:
//
// The media source is not started.%0
//
#define MF_E_MEDIA_SOURCE_NOT_STARTED    _HRESULT_TYPEDEF_(0xC00D3E91L)

//
// MessageId: MF_E_UNSUPPORTED_FORMAT
//
// MessageText:
//
// The Media format is recognized but not supported.%0
//
#define MF_E_UNSUPPORTED_FORMAT          _HRESULT_TYPEDEF_(0xC00D3E98L)

//
// MessageId: MF_E_MP3_BAD_CRC
//
// MessageText:
//
// The MPEG frame has bad CRC.%0
//
#define MF_E_MP3_BAD_CRC                 _HRESULT_TYPEDEF_(0xC00D3E99L)

//
// MessageId: MF_E_NOT_PROTECTED
//
// MessageText:
//
// The file is not protected.%0
//
#define MF_E_NOT_PROTECTED               _HRESULT_TYPEDEF_(0xC00D3E9AL)

//
// MessageId: MF_E_MEDIA_SOURCE_WRONGSTATE
//
// MessageText:
//
// The media source is in the wrong state%0
//
#define MF_E_MEDIA_SOURCE_WRONGSTATE     _HRESULT_TYPEDEF_(0xC00D3E9BL)

//
// MessageId: MF_E_MEDIA_SOURCE_NO_STREAMS_SELECTED
//
// MessageText:
//
// No streams are selected in source presentation descriptor.%0
//
#define MF_E_MEDIA_SOURCE_NO_STREAMS_SELECTED _HRESULT_TYPEDEF_(0xC00D3E9CL)

//
// MessageId: MF_E_CANNOT_FIND_KEYFRAME_SAMPLE
//
// MessageText:
//
// No key frame sample was found.%0
//
#define MF_E_CANNOT_FIND_KEYFRAME_SAMPLE _HRESULT_TYPEDEF_(0xC00D3E9DL)


/////////////////////////////////////////////////////////////////////////
//
// MEDIAFOUNDATION Network Error Events
//
/////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_E_NETWORK_RESOURCE_FAILURE
//
// MessageText:
//
// An attempt to acquire a network resource failed.%0
//
#define MF_E_NETWORK_RESOURCE_FAILURE    _HRESULT_TYPEDEF_(0xC00D4268L)

//
// MessageId: MF_E_NET_WRITE
//
// MessageText:
//
// Error writing to the network.%0
//
#define MF_E_NET_WRITE                   _HRESULT_TYPEDEF_(0xC00D4269L)

//
// MessageId: MF_E_NET_READ
//
// MessageText:
//
// Error reading from the network.%0
//
#define MF_E_NET_READ                    _HRESULT_TYPEDEF_(0xC00D426AL)

//
// MessageId: MF_E_NET_REQUIRE_NETWORK
//
// MessageText:
//
// Internal. Entry cannot complete operation without network.%0
//
#define MF_E_NET_REQUIRE_NETWORK         _HRESULT_TYPEDEF_(0xC00D426BL)

//
// MessageId: MF_E_NET_REQUIRE_ASYNC
//
// MessageText:
//
// Internal. Async op is required.%0
//
#define MF_E_NET_REQUIRE_ASYNC           _HRESULT_TYPEDEF_(0xC00D426CL)

//
// MessageId: MF_E_NET_BWLEVEL_NOT_SUPPORTED
//
// MessageText:
//
// Internal. Bandwidth levels are not supported.%0
//
#define MF_E_NET_BWLEVEL_NOT_SUPPORTED   _HRESULT_TYPEDEF_(0xC00D426DL)

//
// MessageId: MF_E_NET_STREAMGROUPS_NOT_SUPPORTED
//
// MessageText:
//
// Internal. Stream groups are not supported.%0
//
#define MF_E_NET_STREAMGROUPS_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC00D426EL)

//
// MessageId: MF_E_NET_MANUALSS_NOT_SUPPORTED
//
// MessageText:
//
// Manual stream selection is not supported.%0
//
#define MF_E_NET_MANUALSS_NOT_SUPPORTED  _HRESULT_TYPEDEF_(0xC00D426FL)

//
// MessageId: MF_E_NET_INVALID_PRESENTATION_DESCRIPTOR
//
// MessageText:
//
// Invalid presentation descriptor.%0
//
#define MF_E_NET_INVALID_PRESENTATION_DESCRIPTOR _HRESULT_TYPEDEF_(0xC00D4270L)

//
// MessageId: MF_E_NET_CACHESTREAM_NOT_FOUND
//
// MessageText:
//
// Cannot find cache stream.%0
//
#define MF_E_NET_CACHESTREAM_NOT_FOUND   _HRESULT_TYPEDEF_(0xC00D4271L)

//
// MessageId: MF_I_MANUAL_PROXY
//
// MessageText:
//
// The proxy setting is manual.%0
//
#define MF_I_MANUAL_PROXY                _HRESULT_TYPEDEF_(0x400D4272L)

//duplicate removed
//MessageId=17011 Severity=Informational Facility=MEDIAFOUNDATION SymbolicName=MF_E_INVALID_REQUEST
//Language=English
//The request is invalid in the current state.%0
//.
//
// MessageId: MF_E_NET_REQUIRE_INPUT
//
// MessageText:
//
// Internal. Entry cannot complete operation without input.%0
//
#define MF_E_NET_REQUIRE_INPUT           _HRESULT_TYPEDEF_(0xC00D4274L)

//
// MessageId: MF_E_NET_REDIRECT
//
// MessageText:
//
// The client redirected to another server.%0
//
#define MF_E_NET_REDIRECT                _HRESULT_TYPEDEF_(0xC00D4275L)

//
// MessageId: MF_E_NET_REDIRECT_TO_PROXY
//
// MessageText:
//
// The client is redirected to a proxy server.%0
//
#define MF_E_NET_REDIRECT_TO_PROXY       _HRESULT_TYPEDEF_(0xC00D4276L)

//
// MessageId: MF_E_NET_TOO_MANY_REDIRECTS
//
// MessageText:
//
// The client reached maximum redirection limit.%0
//
#define MF_E_NET_TOO_MANY_REDIRECTS      _HRESULT_TYPEDEF_(0xC00D4277L)

//
// MessageId: MF_E_NET_TIMEOUT
//
// MessageText:
//
// The server, a computer set up to offer multimedia content to other computers, could not handle your request for multimedia content in a timely manner.  Please try again later.%0
//
#define MF_E_NET_TIMEOUT                 _HRESULT_TYPEDEF_(0xC00D4278L)

//
// MessageId: MF_E_NET_CLIENT_CLOSE
//
// MessageText:
//
// The control socket is closed by the client.%0
//
#define MF_E_NET_CLIENT_CLOSE            _HRESULT_TYPEDEF_(0xC00D4279L)

//
// MessageId: MF_E_NET_BAD_CONTROL_DATA
//
// MessageText:
//
// The server received invalid data from the client on the control connection.%0
//
#define MF_E_NET_BAD_CONTROL_DATA        _HRESULT_TYPEDEF_(0xC00D427AL)

//
// MessageId: MF_E_NET_INCOMPATIBLE_SERVER
//
// MessageText:
//
// The server is not a compatible streaming media server.%0
//
#define MF_E_NET_INCOMPATIBLE_SERVER     _HRESULT_TYPEDEF_(0xC00D427BL)

//
// MessageId: MF_E_NET_UNSAFE_URL
//
// MessageText:
//
// Url.%0
//
#define MF_E_NET_UNSAFE_URL              _HRESULT_TYPEDEF_(0xC00D427CL)

//
// MessageId: MF_E_NET_CACHE_NO_DATA
//
// MessageText:
//
// Data is not available.%0
//
#define MF_E_NET_CACHE_NO_DATA           _HRESULT_TYPEDEF_(0xC00D427DL)

//
// MessageId: MF_E_NET_EOL
//
// MessageText:
//
// End of line.%0
//
#define MF_E_NET_EOL                     _HRESULT_TYPEDEF_(0xC00D427EL)

//
// MessageId: MF_E_NET_BAD_REQUEST
//
// MessageText:
//
// The request could not be understood by the server.%0
//
#define MF_E_NET_BAD_REQUEST             _HRESULT_TYPEDEF_(0xC00D427FL)

//
// MessageId: MF_E_NET_INTERNAL_SERVER_ERROR
//
// MessageText:
//
// The server encountered an unexpected condition which prevented it from fulfilling the request.%0
//
#define MF_E_NET_INTERNAL_SERVER_ERROR   _HRESULT_TYPEDEF_(0xC00D4280L)

//
// MessageId: MF_E_NET_SESSION_NOT_FOUND
//
// MessageText:
//
// Session not found.%0
//
#define MF_E_NET_SESSION_NOT_FOUND       _HRESULT_TYPEDEF_(0xC00D4281L)

//
// MessageId: MF_E_NET_NOCONNECTION
//
// MessageText:
//
// There is no connection established with the Windows Media server. The operation failed.%0
//
#define MF_E_NET_NOCONNECTION            _HRESULT_TYPEDEF_(0xC00D4282L)

//
// MessageId: MF_E_NET_CONNECTION_FAILURE
//
// MessageText:
//
// The network connection has failed.%0
//
#define MF_E_NET_CONNECTION_FAILURE      _HRESULT_TYPEDEF_(0xC00D4283L)

//
// MessageId: MF_E_NET_INCOMPATIBLE_PUSHSERVER
//
// MessageText:
//
// The Server service that received the HTTP push request is not a compatible version of Windows Media Services (WMS).  This error may indicate the push request was received by IIS instead of WMS.  Ensure WMS is started and has the HTTP Server control protocol properly enabled and try again.%0
//
#define MF_E_NET_INCOMPATIBLE_PUSHSERVER _HRESULT_TYPEDEF_(0xC00D4284L)

//
// MessageId: MF_E_NET_SERVER_ACCESSDENIED
//
// MessageText:
//
// The Windows Media server is denying access.  The username and/or password might be incorrect.%0
//
#define MF_E_NET_SERVER_ACCESSDENIED     _HRESULT_TYPEDEF_(0xC00D4285L)

//
// MessageId: MF_E_NET_PROXY_ACCESSDENIED
//
// MessageText:
//
// The proxy server is denying access.  The username and/or password might be incorrect.%0
//
#define MF_E_NET_PROXY_ACCESSDENIED      _HRESULT_TYPEDEF_(0xC00D4286L)

//
// MessageId: MF_E_NET_CANNOTCONNECT
//
// MessageText:
//
// Unable to establish a connection to the server.%0
//
#define MF_E_NET_CANNOTCONNECT           _HRESULT_TYPEDEF_(0xC00D4287L)

//
// MessageId: MF_E_NET_INVALID_PUSH_TEMPLATE
//
// MessageText:
//
// The specified push template is invalid.%0
//
#define MF_E_NET_INVALID_PUSH_TEMPLATE   _HRESULT_TYPEDEF_(0xC00D4288L)

//
// MessageId: MF_E_NET_INVALID_PUSH_PUBLISHING_POINT
//
// MessageText:
//
// The specified push publishing point is invalid.%0
//
#define MF_E_NET_INVALID_PUSH_PUBLISHING_POINT _HRESULT_TYPEDEF_(0xC00D4289L)

//
// MessageId: MF_E_NET_BUSY
//
// MessageText:
//
// The requested resource is in use.%0
//
#define MF_E_NET_BUSY                    _HRESULT_TYPEDEF_(0xC00D428AL)

//
// MessageId: MF_E_NET_RESOURCE_GONE
//
// MessageText:
//
// The Publishing Point or file on the Windows Media Server is no longer available.%0
//
#define MF_E_NET_RESOURCE_GONE           _HRESULT_TYPEDEF_(0xC00D428BL)

//
// MessageId: MF_E_NET_ERROR_FROM_PROXY
//
// MessageText:
//
// The proxy experienced an error while attempting to contact the media server.%0
//
#define MF_E_NET_ERROR_FROM_PROXY        _HRESULT_TYPEDEF_(0xC00D428CL)

//
// MessageId: MF_E_NET_PROXY_TIMEOUT
//
// MessageText:
//
// The proxy did not receive a timely response while attempting to contact the media server.%0
//
#define MF_E_NET_PROXY_TIMEOUT           _HRESULT_TYPEDEF_(0xC00D428DL)

//
// MessageId: MF_E_NET_SERVER_UNAVAILABLE
//
// MessageText:
//
// The server is currently unable to handle the request due to a temporary overloading or maintenance of the server.%0
//
#define MF_E_NET_SERVER_UNAVAILABLE      _HRESULT_TYPEDEF_(0xC00D428EL)

//
// MessageId: MF_E_NET_TOO_MUCH_DATA
//
// MessageText:
//
// The encoding process was unable to keep up with the amount of supplied data.%0
//
#define MF_E_NET_TOO_MUCH_DATA           _HRESULT_TYPEDEF_(0xC00D428FL)

//
// MessageId: MF_E_NET_SESSION_INVALID
//
// MessageText:
//
// Session not found.%0
//
#define MF_E_NET_SESSION_INVALID         _HRESULT_TYPEDEF_(0xC00D4290L)

//
// MessageId: MF_E_OFFLINE_MODE
//
// MessageText:
//
// The requested URL is not available in offline mode.%0
//
#define MF_E_OFFLINE_MODE                _HRESULT_TYPEDEF_(0xC00D4291L)

//
// MessageId: MF_E_NET_UDP_BLOCKED
//
// MessageText:
//
// A device in the network is blocking UDP traffic.%0
//
#define MF_E_NET_UDP_BLOCKED             _HRESULT_TYPEDEF_(0xC00D4292L)

//
// MessageId: MF_E_NET_UNSUPPORTED_CONFIGURATION
//
// MessageText:
//
// The specified configuration value is not supported.%0
//
#define MF_E_NET_UNSUPPORTED_CONFIGURATION _HRESULT_TYPEDEF_(0xC00D4293L)

//
// MessageId: MF_E_NET_PROTOCOL_DISABLED
//
// MessageText:
//
// The networking protocol is disabled.%0
//
#define MF_E_NET_PROTOCOL_DISABLED       _HRESULT_TYPEDEF_(0xC00D4294L)


/////////////////////////////////////////////////////////////////////////
//
// MEDIAFOUNDATION WMContainer Error Events
//
/////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_E_ALREADY_INITIALIZED
//
// MessageText:
//
// This object has already been initialized and cannot be re-initialized at this time.%0
//
#define MF_E_ALREADY_INITIALIZED         _HRESULT_TYPEDEF_(0xC00D4650L)

//
// MessageId: MF_E_BANDWIDTH_OVERRUN
//
// MessageText:
//
// The amount of data passed in exceeds the given bitrate and buffer window.%0
//
#define MF_E_BANDWIDTH_OVERRUN           _HRESULT_TYPEDEF_(0xC00D4651L)

//
// MessageId: MF_E_LATE_SAMPLE
//
// MessageText:
//
// The sample was passed in too late to be correctly processed.%0
//
#define MF_E_LATE_SAMPLE                 _HRESULT_TYPEDEF_(0xC00D4652L)

//
// MessageId: MF_E_FLUSH_NEEDED
//
// MessageText:
//
// The requested action cannot be carried out until the object is flushed and the queue is emptied.%0
//
#define MF_E_FLUSH_NEEDED                _HRESULT_TYPEDEF_(0xC00D4653L)

//
// MessageId: MF_E_INVALID_PROFILE
//
// MessageText:
//
// The profile is invalid.%0
//
#define MF_E_INVALID_PROFILE             _HRESULT_TYPEDEF_(0xC00D4654L)

//
// MessageId: MF_E_INDEX_NOT_COMMITTED
//
// MessageText:
//
// The index that is being generated needs to be committed before the requested action can be carried out.%0
//
#define MF_E_INDEX_NOT_COMMITTED         _HRESULT_TYPEDEF_(0xC00D4655L)

//
// MessageId: MF_E_NO_INDEX
//
// MessageText:
//
// The index that is necessary for the requested action is not found.%0
//
#define MF_E_NO_INDEX                    _HRESULT_TYPEDEF_(0xC00D4656L)

//
// MessageId: MF_E_CANNOT_INDEX_IN_PLACE
//
// MessageText:
//
// The requested index cannot be added in-place to the specified ASF content.%0
//
#define MF_E_CANNOT_INDEX_IN_PLACE       _HRESULT_TYPEDEF_(0xC00D4657L)

//
// MessageId: MF_E_MISSING_ASF_LEAKYBUCKET
//
// MessageText:
//
// The ASF leaky bucket parameters must be specified in order to carry out this request.%0
//
#define MF_E_MISSING_ASF_LEAKYBUCKET     _HRESULT_TYPEDEF_(0xC00D4658L)

//
// MessageId: MF_E_INVALID_ASF_STREAMID
//
// MessageText:
//
// The stream id is invalid. The valid range for ASF stream id is from 1 to 127.%0
//
#define MF_E_INVALID_ASF_STREAMID        _HRESULT_TYPEDEF_(0xC00D4659L)


/////////////////////////////////////////////////////////////////////////
//
// MEDIAFOUNDATION Media Sink Error Events
//
/////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_E_STREAMSINK_REMOVED
//
// MessageText:
//
// The requested Stream Sink has been removed and cannot be used.%0
//
#define MF_E_STREAMSINK_REMOVED          _HRESULT_TYPEDEF_(0xC00D4A38L)

//
// MessageId: MF_E_STREAMSINKS_OUT_OF_SYNC
//
// MessageText:
//
// The various Stream Sinks in this Media Sink are too far out of sync for the requested action to take place.%0
//
#define MF_E_STREAMSINKS_OUT_OF_SYNC     _HRESULT_TYPEDEF_(0xC00D4A3AL)

//
// MessageId: MF_E_STREAMSINKS_FIXED
//
// MessageText:
//
// Stream Sinks cannot be added to or removed from this Media Sink because its set of streams is fixed.%0
//
#define MF_E_STREAMSINKS_FIXED           _HRESULT_TYPEDEF_(0xC00D4A3BL)

//
// MessageId: MF_E_STREAMSINK_EXISTS
//
// MessageText:
//
// The given Stream Sink already exists.%0
//
#define MF_E_STREAMSINK_EXISTS           _HRESULT_TYPEDEF_(0xC00D4A3CL)

//
// MessageId: MF_E_SAMPLEALLOCATOR_CANCELED
//
// MessageText:
//
// Sample allocations have been canceled.%0
//
#define MF_E_SAMPLEALLOCATOR_CANCELED    _HRESULT_TYPEDEF_(0xC00D4A3DL)

//
// MessageId: MF_E_SAMPLEALLOCATOR_EMPTY
//
// MessageText:
//
// The sample allocator is currently empty, due to outstanding requests.%0
//
#define MF_E_SAMPLEALLOCATOR_EMPTY       _HRESULT_TYPEDEF_(0xC00D4A3EL)

//
// MessageId: MF_E_SINK_ALREADYSTOPPED
//
// MessageText:
//
// When we try to sopt a stream sink, it is already stopped %0
//
#define MF_E_SINK_ALREADYSTOPPED         _HRESULT_TYPEDEF_(0xC00D4A3FL)

//
// MessageId: MF_E_ASF_FILESINK_BITRATE_UNKNOWN
//
// MessageText:
//
// The ASF file sink could not reserve AVIO because the bitrate is unknown.%0
//
#define MF_E_ASF_FILESINK_BITRATE_UNKNOWN _HRESULT_TYPEDEF_(0xC00D4A40L)

//
// MessageId: MF_E_SINK_NO_STREAMS
//
// MessageText:
//
// No streams are selected in sink presentation descriptor.%0
//
#define MF_E_SINK_NO_STREAMS             _HRESULT_TYPEDEF_(0xC00D4A41L)

//
// MessageId: MF_S_SINK_NOT_FINALIZED
//
// MessageText:
//
// The sink has not been finalized before shut down. This may cause sink generate a corrupted content.%0
//
#define MF_S_SINK_NOT_FINALIZED          _HRESULT_TYPEDEF_(0x000D4A42L)

//
// MessageId: MF_E_METADATA_TOO_LONG
//
// MessageText:
//
// A metadata item was too long to write to the output container.%0
//
#define MF_E_METADATA_TOO_LONG           _HRESULT_TYPEDEF_(0xC00D4A43L)

//
// MessageId: MF_E_SINK_NO_SAMPLES_PROCESSED
//
// MessageText:
//
// The operation failed because no samples were processed by the sink.%0
//
#define MF_E_SINK_NO_SAMPLES_PROCESSED   _HRESULT_TYPEDEF_(0xC00D4A44L)


/////////////////////////////////////////////////////////////////////////
//
// MEDIAFOUNDATION Renderer Error Events
//
/////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_E_VIDEO_REN_NO_PROCAMP_HW
//
// MessageText:
//
// There is no available procamp hardware with which to perform color correction.%0
//
#define MF_E_VIDEO_REN_NO_PROCAMP_HW     _HRESULT_TYPEDEF_(0xC00D4E20L)

//
// MessageId: MF_E_VIDEO_REN_NO_DEINTERLACE_HW
//
// MessageText:
//
// There is no available deinterlacing hardware with which to deinterlace the video stream.%0
//
#define MF_E_VIDEO_REN_NO_DEINTERLACE_HW _HRESULT_TYPEDEF_(0xC00D4E21L)

//
// MessageId: MF_E_VIDEO_REN_COPYPROT_FAILED
//
// MessageText:
//
// A video stream requires copy protection to be enabled, but there was a failure in attempting to enable copy protection.%0
//
#define MF_E_VIDEO_REN_COPYPROT_FAILED   _HRESULT_TYPEDEF_(0xC00D4E22L)

//
// MessageId: MF_E_VIDEO_REN_SURFACE_NOT_SHARED
//
// MessageText:
//
// A component is attempting to access a surface for sharing that is not shared.%0
//
#define MF_E_VIDEO_REN_SURFACE_NOT_SHARED _HRESULT_TYPEDEF_(0xC00D4E23L)

//
// MessageId: MF_E_VIDEO_DEVICE_LOCKED
//
// MessageText:
//
// A component is attempting to access a shared device that is already locked by another component.%0
//
#define MF_E_VIDEO_DEVICE_LOCKED         _HRESULT_TYPEDEF_(0xC00D4E24L)

//
// MessageId: MF_E_NEW_VIDEO_DEVICE
//
// MessageText:
//
// The device is no longer available. The handle should be closed and a new one opened.%0
//
#define MF_E_NEW_VIDEO_DEVICE            _HRESULT_TYPEDEF_(0xC00D4E25L)

//
// MessageId: MF_E_NO_VIDEO_SAMPLE_AVAILABLE
//
// MessageText:
//
// A video sample is not currently queued on a stream that is required for mixing.%0
//
#define MF_E_NO_VIDEO_SAMPLE_AVAILABLE   _HRESULT_TYPEDEF_(0xC00D4E26L)

//
// MessageId: MF_E_NO_AUDIO_PLAYBACK_DEVICE
//
// MessageText:
//
// No audio playback device was found.%0
//
#define MF_E_NO_AUDIO_PLAYBACK_DEVICE    _HRESULT_TYPEDEF_(0xC00D4E84L)

//
// MessageId: MF_E_AUDIO_PLAYBACK_DEVICE_IN_USE
//
// MessageText:
//
// The requested audio playback device is currently in use.%0
//
#define MF_E_AUDIO_PLAYBACK_DEVICE_IN_USE _HRESULT_TYPEDEF_(0xC00D4E85L)

//
// MessageId: MF_E_AUDIO_PLAYBACK_DEVICE_INVALIDATED
//
// MessageText:
//
// The audio playback device is no longer present.%0
//
#define MF_E_AUDIO_PLAYBACK_DEVICE_INVALIDATED _HRESULT_TYPEDEF_(0xC00D4E86L)

//
// MessageId: MF_E_AUDIO_SERVICE_NOT_RUNNING
//
// MessageText:
//
// The audio service is not running.%0
//
#define MF_E_AUDIO_SERVICE_NOT_RUNNING   _HRESULT_TYPEDEF_(0xC00D4E87L)


/////////////////////////////////////////////////////////////////////////
//
// MEDIAFOUNDATION Topology Error Events
//
/////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_E_TOPO_INVALID_OPTIONAL_NODE
//
// MessageText:
//
// The topology contains an invalid optional node.  Possible reasons are incorrect number of outputs and inputs or optional node is at the beginning or end of a segment. %0
//
#define MF_E_TOPO_INVALID_OPTIONAL_NODE  _HRESULT_TYPEDEF_(0xC00D520EL)

//
// MessageId: MF_E_TOPO_CANNOT_FIND_DECRYPTOR
//
// MessageText:
//
// No suitable transform was found to decrypt the content. %0
//
#define MF_E_TOPO_CANNOT_FIND_DECRYPTOR  _HRESULT_TYPEDEF_(0xC00D5211L)

//
// MessageId: MF_E_TOPO_CODEC_NOT_FOUND
//
// MessageText:
//
// No suitable transform was found to encode or decode the content. %0
//
#define MF_E_TOPO_CODEC_NOT_FOUND        _HRESULT_TYPEDEF_(0xC00D5212L)

//
// MessageId: MF_E_TOPO_CANNOT_CONNECT
//
// MessageText:
//
// Unable to find a way to connect nodes%0
//
#define MF_E_TOPO_CANNOT_CONNECT         _HRESULT_TYPEDEF_(0xC00D5213L)

//
// MessageId: MF_E_TOPO_UNSUPPORTED
//
// MessageText:
//
// Unsupported operations in topoloader%0
//
#define MF_E_TOPO_UNSUPPORTED            _HRESULT_TYPEDEF_(0xC00D5214L)

//
// MessageId: MF_E_TOPO_INVALID_TIME_ATTRIBUTES
//
// MessageText:
//
// The topology or its nodes contain incorrectly set time attributes%0
//
#define MF_E_TOPO_INVALID_TIME_ATTRIBUTES _HRESULT_TYPEDEF_(0xC00D5215L)

//
// MessageId: MF_E_TOPO_LOOPS_IN_TOPOLOGY
//
// MessageText:
//
// The topology contains loops, which are unsupported in media foundation topologies%0
//
#define MF_E_TOPO_LOOPS_IN_TOPOLOGY      _HRESULT_TYPEDEF_(0xC00D5216L)

//
// MessageId: MF_E_TOPO_MISSING_PRESENTATION_DESCRIPTOR
//
// MessageText:
//
// A source stream node in the topology does not have a presentation descriptor%0
//
#define MF_E_TOPO_MISSING_PRESENTATION_DESCRIPTOR _HRESULT_TYPEDEF_(0xC00D5217L)

//
// MessageId: MF_E_TOPO_MISSING_STREAM_DESCRIPTOR
//
// MessageText:
//
// A source stream node in the topology does not have a stream descriptor%0
//
#define MF_E_TOPO_MISSING_STREAM_DESCRIPTOR _HRESULT_TYPEDEF_(0xC00D5218L)

//
// MessageId: MF_E_TOPO_STREAM_DESCRIPTOR_NOT_SELECTED
//
// MessageText:
//
// A stream descriptor was set on a source stream node but it was not selected on the presentation descriptor%0
//
#define MF_E_TOPO_STREAM_DESCRIPTOR_NOT_SELECTED _HRESULT_TYPEDEF_(0xC00D5219L)

//
// MessageId: MF_E_TOPO_MISSING_SOURCE
//
// MessageText:
//
// A source stream node in the topology does not have a source%0
//
#define MF_E_TOPO_MISSING_SOURCE         _HRESULT_TYPEDEF_(0xC00D521AL)

//
// MessageId: MF_E_TOPO_SINK_ACTIVATES_UNSUPPORTED
//
// MessageText:
//
// The topology loader does not support sink activates on output nodes.%0
//
#define MF_E_TOPO_SINK_ACTIVATES_UNSUPPORTED _HRESULT_TYPEDEF_(0xC00D521BL)


/////////////////////////////////////////////////////////////////////////
//
// MEDIAFOUNDATION Timeline Error Events
//
/////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_E_SEQUENCER_UNKNOWN_SEGMENT_ID
//
// MessageText:
//
// The sequencer cannot find a segment with the given ID.%0\n.
//
#define MF_E_SEQUENCER_UNKNOWN_SEGMENT_ID _HRESULT_TYPEDEF_(0xC00D61ACL)

//
// MessageId: MF_S_SEQUENCER_CONTEXT_CANCELED
//
// MessageText:
//
// The context was canceled.%0\n.
//
#define MF_S_SEQUENCER_CONTEXT_CANCELED  _HRESULT_TYPEDEF_(0x000D61ADL)

//
// MessageId: MF_E_NO_SOURCE_IN_CACHE
//
// MessageText:
//
// Cannot find source in source cache.%0\n.
//
#define MF_E_NO_SOURCE_IN_CACHE          _HRESULT_TYPEDEF_(0xC00D61AEL)

//
// MessageId: MF_S_SEQUENCER_SEGMENT_AT_END_OF_STREAM
//
// MessageText:
//
// Cannot update topology flags.%0\n.
//
#define MF_S_SEQUENCER_SEGMENT_AT_END_OF_STREAM _HRESULT_TYPEDEF_(0x000D61AFL)


//////////////////////////////////////////////////////////////////////////////
//
// Transform errors
//
//////////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_E_TRANSFORM_TYPE_NOT_SET
//
// MessageText:
//
// A valid type has not been set for this stream or a stream that it depends on.%0
//
#define MF_E_TRANSFORM_TYPE_NOT_SET      _HRESULT_TYPEDEF_(0xC00D6D60L)

//
// MessageId: MF_E_TRANSFORM_STREAM_CHANGE
//
// MessageText:
//
// A stream change has occurred. Output cannot be produced until the streams have been renegotiated.%0
//
#define MF_E_TRANSFORM_STREAM_CHANGE     _HRESULT_TYPEDEF_(0xC00D6D61L)

//
// MessageId: MF_E_TRANSFORM_INPUT_REMAINING
//
// MessageText:
//
// The transform cannot take the requested action until all of the input data it currently holds is processed or flushed.%0
//
#define MF_E_TRANSFORM_INPUT_REMAINING   _HRESULT_TYPEDEF_(0xC00D6D62L)

//
// MessageId: MF_E_TRANSFORM_PROFILE_MISSING
//
// MessageText:
//
// The transform requires a profile but no profile was supplied or found.%0
//
#define MF_E_TRANSFORM_PROFILE_MISSING   _HRESULT_TYPEDEF_(0xC00D6D63L)

//
// MessageId: MF_E_TRANSFORM_PROFILE_INVALID_OR_CORRUPT
//
// MessageText:
//
// The transform requires a profile but the supplied profile was invalid or corrupt.%0
//
#define MF_E_TRANSFORM_PROFILE_INVALID_OR_CORRUPT _HRESULT_TYPEDEF_(0xC00D6D64L)

//
// MessageId: MF_E_TRANSFORM_PROFILE_TRUNCATED
//
// MessageText:
//
// The transform requires a profile but the supplied profile ended unexpectedly while parsing.%0
//
#define MF_E_TRANSFORM_PROFILE_TRUNCATED _HRESULT_TYPEDEF_(0xC00D6D65L)

//
// MessageId: MF_E_TRANSFORM_PROPERTY_PID_NOT_RECOGNIZED
//
// MessageText:
//
// The property ID does not match any property supported by the transform.%0
//
#define MF_E_TRANSFORM_PROPERTY_PID_NOT_RECOGNIZED _HRESULT_TYPEDEF_(0xC00D6D66L)

//
// MessageId: MF_E_TRANSFORM_PROPERTY_VARIANT_TYPE_WRONG
//
// MessageText:
//
// The variant does not have the type expected for this property ID.%0
//
#define MF_E_TRANSFORM_PROPERTY_VARIANT_TYPE_WRONG _HRESULT_TYPEDEF_(0xC00D6D67L)

//
// MessageId: MF_E_TRANSFORM_PROPERTY_NOT_WRITEABLE
//
// MessageText:
//
// An attempt was made to set the value on a read-only property.%0
//
#define MF_E_TRANSFORM_PROPERTY_NOT_WRITEABLE _HRESULT_TYPEDEF_(0xC00D6D68L)

//
// MessageId: MF_E_TRANSFORM_PROPERTY_ARRAY_VALUE_WRONG_NUM_DIM
//
// MessageText:
//
// The array property value has an unexpected number of dimensions.%0
//
#define MF_E_TRANSFORM_PROPERTY_ARRAY_VALUE_WRONG_NUM_DIM _HRESULT_TYPEDEF_(0xC00D6D69L)

//
// MessageId: MF_E_TRANSFORM_PROPERTY_VALUE_SIZE_WRONG
//
// MessageText:
//
// The array or blob property value has an unexpected size.%0
//
#define MF_E_TRANSFORM_PROPERTY_VALUE_SIZE_WRONG _HRESULT_TYPEDEF_(0xC00D6D6AL)

//
// MessageId: MF_E_TRANSFORM_PROPERTY_VALUE_OUT_OF_RANGE
//
// MessageText:
//
// The property value is out of range for this transform.%0
//
#define MF_E_TRANSFORM_PROPERTY_VALUE_OUT_OF_RANGE _HRESULT_TYPEDEF_(0xC00D6D6BL)

//
// MessageId: MF_E_TRANSFORM_PROPERTY_VALUE_INCOMPATIBLE
//
// MessageText:
//
// The property value is incompatible with some other property or mediatype set on the transform.%0
//
#define MF_E_TRANSFORM_PROPERTY_VALUE_INCOMPATIBLE _HRESULT_TYPEDEF_(0xC00D6D6CL)

//
// MessageId: MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_OUTPUT_MEDIATYPE
//
// MessageText:
//
// The requested operation is not supported for the currently set output mediatype.%0
//
#define MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_OUTPUT_MEDIATYPE _HRESULT_TYPEDEF_(0xC00D6D6DL)

//
// MessageId: MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_INPUT_MEDIATYPE
//
// MessageText:
//
// The requested operation is not supported for the currently set input mediatype.%0
//
#define MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_INPUT_MEDIATYPE _HRESULT_TYPEDEF_(0xC00D6D6EL)

//
// MessageId: MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_MEDIATYPE_COMBINATION
//
// MessageText:
//
// The requested operation is not supported for the currently set combination of mediatypes.%0
//
#define MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_MEDIATYPE_COMBINATION _HRESULT_TYPEDEF_(0xC00D6D6FL)

//
// MessageId: MF_E_TRANSFORM_CONFLICTS_WITH_OTHER_CURRENTLY_ENABLED_FEATURES
//
// MessageText:
//
// The requested feature is not supported in combination with some other currently enabled feature.%0
//
#define MF_E_TRANSFORM_CONFLICTS_WITH_OTHER_CURRENTLY_ENABLED_FEATURES _HRESULT_TYPEDEF_(0xC00D6D70L)

//
// MessageId: MF_E_TRANSFORM_NEED_MORE_INPUT
//
// MessageText:
//
// The transform cannot produce output until it gets more input samples.%0
//
#define MF_E_TRANSFORM_NEED_MORE_INPUT   _HRESULT_TYPEDEF_(0xC00D6D72L)

//
// MessageId: MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_SPKR_CONFIG
//
// MessageText:
//
// The requested operation is not supported for the current speaker configuration.%0
//
#define MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_SPKR_CONFIG _HRESULT_TYPEDEF_(0xC00D6D73L)

//
// MessageId: MF_E_TRANSFORM_CANNOT_CHANGE_MEDIATYPE_WHILE_PROCESSING
//
// MessageText:
//
// The transform cannot accept mediatype changes in the middle of processing.%0
//
#define MF_E_TRANSFORM_CANNOT_CHANGE_MEDIATYPE_WHILE_PROCESSING _HRESULT_TYPEDEF_(0xC00D6D74L)

//
// MessageId: MF_S_TRANSFORM_DO_NOT_PROPAGATE_EVENT
//
// MessageText:
//
// The caller should not propagate this event to downstream components.%0
//
#define MF_S_TRANSFORM_DO_NOT_PROPAGATE_EVENT _HRESULT_TYPEDEF_(0x000D6D75L)

//
// MessageId: MF_E_UNSUPPORTED_D3D_TYPE
//
// MessageText:
//
// The input type is not supported for D3D device.%0
//
#define MF_E_UNSUPPORTED_D3D_TYPE        _HRESULT_TYPEDEF_(0xC00D6D76L)

//
// MessageId: MF_E_TRANSFORM_ASYNC_LOCKED
//
// MessageText:
//
// The caller does not appear to support this transform's asynchronous capabilities.%0
//
#define MF_E_TRANSFORM_ASYNC_LOCKED      _HRESULT_TYPEDEF_(0xC00D6D77L)

//
// MessageId: MF_E_TRANSFORM_CANNOT_INITIALIZE_ACM_DRIVER
//
// MessageText:
//
// An audio compression manager driver could not be initialized by the transform.%0
//
#define MF_E_TRANSFORM_CANNOT_INITIALIZE_ACM_DRIVER _HRESULT_TYPEDEF_(0xC00D6D78L)


//////////////////////////////////////////////////////////////////////////////
//
// Content Protection errors
//
//////////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_E_LICENSE_INCORRECT_RIGHTS
//
// MessageText:
//
// You are not allowed to open this file. Contact the content provider for further assistance.%0
//
#define MF_E_LICENSE_INCORRECT_RIGHTS    _HRESULT_TYPEDEF_(0xC00D7148L)

//
// MessageId: MF_E_LICENSE_OUTOFDATE
//
// MessageText:
//
// The license for this media file has expired. Get a new license or contact the content provider for further assistance.%0
//
#define MF_E_LICENSE_OUTOFDATE           _HRESULT_TYPEDEF_(0xC00D7149L)

//
// MessageId: MF_E_LICENSE_REQUIRED
//
// MessageText:
//
// You need a license to perform the requested operation on this media file.%0
//
#define MF_E_LICENSE_REQUIRED            _HRESULT_TYPEDEF_(0xC00D714AL)

//
// MessageId: MF_E_DRM_HARDWARE_INCONSISTENT
//
// MessageText:
//
// The licenses for your media files are corrupted. Contact Microsoft product support.%0
//
#define MF_E_DRM_HARDWARE_INCONSISTENT   _HRESULT_TYPEDEF_(0xC00D714BL)

//
// MessageId: MF_E_NO_CONTENT_PROTECTION_MANAGER
//
// MessageText:
//
// The APP needs to provide IMFContentProtectionManager callback to access the protected media file.%0
//
#define MF_E_NO_CONTENT_PROTECTION_MANAGER _HRESULT_TYPEDEF_(0xC00D714CL)

//
// MessageId: MF_E_LICENSE_RESTORE_NO_RIGHTS
//
// MessageText:
//
// Client does not have rights to restore licenses.%0
//
#define MF_E_LICENSE_RESTORE_NO_RIGHTS   _HRESULT_TYPEDEF_(0xC00D714DL)

//
// MessageId: MF_E_BACKUP_RESTRICTED_LICENSE
//
// MessageText:
//
// Licenses are restricted and hence can not be backed up.%0
//
#define MF_E_BACKUP_RESTRICTED_LICENSE   _HRESULT_TYPEDEF_(0xC00D714EL)

//
// MessageId: MF_E_LICENSE_RESTORE_NEEDS_INDIVIDUALIZATION
//
// MessageText:
//
// License restore requires machine to be individualized.%0
//
#define MF_E_LICENSE_RESTORE_NEEDS_INDIVIDUALIZATION _HRESULT_TYPEDEF_(0xC00D714FL)

//
// MessageId: MF_S_PROTECTION_NOT_REQUIRED
//
// MessageText:
//
// Protection for stream is not required.%0
//
#define MF_S_PROTECTION_NOT_REQUIRED     _HRESULT_TYPEDEF_(0x000D7150L)

//
// MessageId: MF_E_COMPONENT_REVOKED
//
// MessageText:
//
// Component is revoked.%0
//
#define MF_E_COMPONENT_REVOKED           _HRESULT_TYPEDEF_(0xC00D7151L)

//
// MessageId: MF_E_TRUST_DISABLED
//
// MessageText:
//
// Trusted functionality is currently disabled on this component.%0
//
#define MF_E_TRUST_DISABLED              _HRESULT_TYPEDEF_(0xC00D7152L)

//
// MessageId: MF_E_WMDRMOTA_NO_ACTION
//
// MessageText:
//
// No Action is set on WMDRM Output Trust Authority.%0
//
#define MF_E_WMDRMOTA_NO_ACTION          _HRESULT_TYPEDEF_(0xC00D7153L)

//
// MessageId: MF_E_WMDRMOTA_ACTION_ALREADY_SET
//
// MessageText:
//
// Action is already set on WMDRM Output Trust Authority.%0
//
#define MF_E_WMDRMOTA_ACTION_ALREADY_SET _HRESULT_TYPEDEF_(0xC00D7154L)

//
// MessageId: MF_E_WMDRMOTA_DRM_HEADER_NOT_AVAILABLE
//
// MessageText:
//
// DRM Heaader is not available.%0
//
#define MF_E_WMDRMOTA_DRM_HEADER_NOT_AVAILABLE _HRESULT_TYPEDEF_(0xC00D7155L)

//
// MessageId: MF_E_WMDRMOTA_DRM_ENCRYPTION_SCHEME_NOT_SUPPORTED
//
// MessageText:
//
// Current encryption scheme is not supported.%0
//
#define MF_E_WMDRMOTA_DRM_ENCRYPTION_SCHEME_NOT_SUPPORTED _HRESULT_TYPEDEF_(0xC00D7156L)

//
// MessageId: MF_E_WMDRMOTA_ACTION_MISMATCH
//
// MessageText:
//
// Action does not match with current configuration.%0
//
#define MF_E_WMDRMOTA_ACTION_MISMATCH    _HRESULT_TYPEDEF_(0xC00D7157L)

//
// MessageId: MF_E_WMDRMOTA_INVALID_POLICY
//
// MessageText:
//
// Invalid policy for WMDRM Output Trust Authority.%0
//
#define MF_E_WMDRMOTA_INVALID_POLICY     _HRESULT_TYPEDEF_(0xC00D7158L)

//
// MessageId: MF_E_POLICY_UNSUPPORTED
//
// MessageText:
//
// The policies that the Input Trust Authority requires to be enforced are unsupported by the outputs.%0
//
#define MF_E_POLICY_UNSUPPORTED          _HRESULT_TYPEDEF_(0xC00D7159L)

//
// MessageId: MF_E_OPL_NOT_SUPPORTED
//
// MessageText:
//
// The OPL that the license requires to be enforced are not supported by the Input Trust Authority.%0
//
#define MF_E_OPL_NOT_SUPPORTED           _HRESULT_TYPEDEF_(0xC00D715AL)

//
// MessageId: MF_E_TOPOLOGY_VERIFICATION_FAILED
//
// MessageText:
//
// The topology could not be successfully verified.%0
//
#define MF_E_TOPOLOGY_VERIFICATION_FAILED _HRESULT_TYPEDEF_(0xC00D715BL)

//
// MessageId: MF_E_SIGNATURE_VERIFICATION_FAILED
//
// MessageText:
//
// Signature verification could not be completed successfully for this component.%0
//
#define MF_E_SIGNATURE_VERIFICATION_FAILED _HRESULT_TYPEDEF_(0xC00D715CL)

//
// MessageId: MF_E_DEBUGGING_NOT_ALLOWED
//
// MessageText:
//
// Running this process under a debugger while using protected content is not allowed.%0
//
#define MF_E_DEBUGGING_NOT_ALLOWED       _HRESULT_TYPEDEF_(0xC00D715DL)

//
// MessageId: MF_E_CODE_EXPIRED
//
// MessageText:
//
// MF component has expired.%0
//
#define MF_E_CODE_EXPIRED                _HRESULT_TYPEDEF_(0xC00D715EL)

//
// MessageId: MF_E_GRL_VERSION_TOO_LOW
//
// MessageText:
//
// The current GRL on the machine does not meet the minimum version requirements.%0
//
#define MF_E_GRL_VERSION_TOO_LOW         _HRESULT_TYPEDEF_(0xC00D715FL)

//
// MessageId: MF_E_GRL_RENEWAL_NOT_FOUND
//
// MessageText:
//
// The current GRL on the machine does not contain any renewal entries for the specified revocation.%0
//
#define MF_E_GRL_RENEWAL_NOT_FOUND       _HRESULT_TYPEDEF_(0xC00D7160L)

//
// MessageId: MF_E_GRL_EXTENSIBLE_ENTRY_NOT_FOUND
//
// MessageText:
//
// The current GRL on the machine does not contain any extensible entries for the specified extension GUID.%0
//
#define MF_E_GRL_EXTENSIBLE_ENTRY_NOT_FOUND _HRESULT_TYPEDEF_(0xC00D7161L)

//
// MessageId: MF_E_KERNEL_UNTRUSTED
//
// MessageText:
//
// The kernel isn't secure for high security level content.%0
//
#define MF_E_KERNEL_UNTRUSTED            _HRESULT_TYPEDEF_(0xC00D7162L)

//
// MessageId: MF_E_PEAUTH_UNTRUSTED
//
// MessageText:
//
// The response from protected environment driver isn't valid.%0
//
#define MF_E_PEAUTH_UNTRUSTED            _HRESULT_TYPEDEF_(0xC00D7163L)

//
// MessageId: MF_E_NON_PE_PROCESS
//
// MessageText:
//
// A non-PE process tried to talk to PEAuth.%0
//
#define MF_E_NON_PE_PROCESS              _HRESULT_TYPEDEF_(0xC00D7165L)

//
// MessageId: MF_E_REBOOT_REQUIRED
//
// MessageText:
//
// We need to reboot the machine.%0
//
#define MF_E_REBOOT_REQUIRED             _HRESULT_TYPEDEF_(0xC00D7167L)

//
// MessageId: MF_S_WAIT_FOR_POLICY_SET
//
// MessageText:
//
// Protection for this stream is not guaranteed to be enforced until the MEPolicySet event is fired.%0
//
#define MF_S_WAIT_FOR_POLICY_SET         _HRESULT_TYPEDEF_(0x000D7168L)

//
// MessageId: MF_S_VIDEO_DISABLED_WITH_UNKNOWN_SOFTWARE_OUTPUT
//
// MessageText:
//
// This video stream is disabled because it is being sent to an unknown software output.%0
//
#define MF_S_VIDEO_DISABLED_WITH_UNKNOWN_SOFTWARE_OUTPUT _HRESULT_TYPEDEF_(0x000D7169L)

//
// MessageId: MF_E_GRL_INVALID_FORMAT
//
// MessageText:
//
// The GRL file is not correctly formed, it may have been corrupted or overwritten.%0
//
#define MF_E_GRL_INVALID_FORMAT          _HRESULT_TYPEDEF_(0xC00D716AL)

//
// MessageId: MF_E_GRL_UNRECOGNIZED_FORMAT
//
// MessageText:
//
// The GRL file is in a format newer than those recognized by this GRL Reader.%0
//
#define MF_E_GRL_UNRECOGNIZED_FORMAT     _HRESULT_TYPEDEF_(0xC00D716BL)

//
// MessageId: MF_E_ALL_PROCESS_RESTART_REQUIRED
//
// MessageText:
//
// The GRL was reloaded and required all processes that can run protected media to restart.%0
//
#define MF_E_ALL_PROCESS_RESTART_REQUIRED _HRESULT_TYPEDEF_(0xC00D716CL)

//
// MessageId: MF_E_PROCESS_RESTART_REQUIRED
//
// MessageText:
//
// The GRL was reloaded and the current process needs to restart.%0
//
#define MF_E_PROCESS_RESTART_REQUIRED    _HRESULT_TYPEDEF_(0xC00D716DL)

//
// MessageId: MF_E_USERMODE_UNTRUSTED
//
// MessageText:
//
// The user space is untrusted for protected content play.%0
//
#define MF_E_USERMODE_UNTRUSTED          _HRESULT_TYPEDEF_(0xC00D716EL)

//
// MessageId: MF_E_PEAUTH_SESSION_NOT_STARTED
//
// MessageText:
//
// PEAuth communication session hasn't been started.%0
//
#define MF_E_PEAUTH_SESSION_NOT_STARTED  _HRESULT_TYPEDEF_(0xC00D716FL)

//
// MessageId: MF_E_PEAUTH_PUBLICKEY_REVOKED
//
// MessageText:
//
// PEAuth's public key is revoked.%0
//
#define MF_E_PEAUTH_PUBLICKEY_REVOKED    _HRESULT_TYPEDEF_(0xC00D7171L)

//
// MessageId: MF_E_GRL_ABSENT
//
// MessageText:
//
// The GRL is absent.%0
//
#define MF_E_GRL_ABSENT                  _HRESULT_TYPEDEF_(0xC00D7172L)

//
// MessageId: MF_S_PE_TRUSTED
//
// MessageText:
//
// The Protected Environment is trusted.%0
//
#define MF_S_PE_TRUSTED                  _HRESULT_TYPEDEF_(0x000D7173L)

//
// MessageId: MF_E_PE_UNTRUSTED
//
// MessageText:
//
// The Protected Environment is untrusted.%0
//
#define MF_E_PE_UNTRUSTED                _HRESULT_TYPEDEF_(0xC00D7174L)

//
// MessageId: MF_E_PEAUTH_NOT_STARTED
//
// MessageText:
//
// The Protected Environment Authorization service (PEAUTH) has not been started.%0
//
#define MF_E_PEAUTH_NOT_STARTED          _HRESULT_TYPEDEF_(0xC00D7175L)

//
// MessageId: MF_E_INCOMPATIBLE_SAMPLE_PROTECTION
//
// MessageText:
//
// The sample protection algorithms supported by components are not compatible.%0
//
#define MF_E_INCOMPATIBLE_SAMPLE_PROTECTION _HRESULT_TYPEDEF_(0xC00D7176L)

//
// MessageId: MF_E_PE_SESSIONS_MAXED
//
// MessageText:
//
// No more protected environment sessions can be supported.%0
//
#define MF_E_PE_SESSIONS_MAXED           _HRESULT_TYPEDEF_(0xC00D7177L)

//
// MessageId: MF_E_HIGH_SECURITY_LEVEL_CONTENT_NOT_ALLOWED
//
// MessageText:
//
// WMDRM ITA does not allow protected content with high security level for this release.%0
//
#define MF_E_HIGH_SECURITY_LEVEL_CONTENT_NOT_ALLOWED _HRESULT_TYPEDEF_(0xC00D7178L)

//
// MessageId: MF_E_TEST_SIGNED_COMPONENTS_NOT_ALLOWED
//
// MessageText:
//
// WMDRM ITA cannot allow the requested action for the content as one or more components is not properly signed.%0
//
#define MF_E_TEST_SIGNED_COMPONENTS_NOT_ALLOWED _HRESULT_TYPEDEF_(0xC00D7179L)

//
// MessageId: MF_E_ITA_UNSUPPORTED_ACTION
//
// MessageText:
//
// WMDRM ITA does not support the requested action.%0
//
#define MF_E_ITA_UNSUPPORTED_ACTION      _HRESULT_TYPEDEF_(0xC00D717AL)

//
// MessageId: MF_E_ITA_ERROR_PARSING_SAP_PARAMETERS
//
// MessageText:
//
// WMDRM ITA encountered an error in parsing the Secure Audio Path parameters.%0
//
#define MF_E_ITA_ERROR_PARSING_SAP_PARAMETERS _HRESULT_TYPEDEF_(0xC00D717BL)

//
// MessageId: MF_E_POLICY_MGR_ACTION_OUTOFBOUNDS
//
// MessageText:
//
// The Policy Manager action passed in is invalid.%0
//
#define MF_E_POLICY_MGR_ACTION_OUTOFBOUNDS _HRESULT_TYPEDEF_(0xC00D717CL)

//
// MessageId: MF_E_BAD_OPL_STRUCTURE_FORMAT
//
// MessageText:
//
// The structure specifying Output Protection Level is not the correct format.%0
//
#define MF_E_BAD_OPL_STRUCTURE_FORMAT    _HRESULT_TYPEDEF_(0xC00D717DL)

//
// MessageId: MF_E_ITA_UNRECOGNIZED_ANALOG_VIDEO_PROTECTION_GUID
//
// MessageText:
//
// WMDRM ITA does not recognize the Explicite Analog Video Output Protection guid specified in the license.%0
//
#define MF_E_ITA_UNRECOGNIZED_ANALOG_VIDEO_PROTECTION_GUID _HRESULT_TYPEDEF_(0xC00D717EL)

//
// MessageId: MF_E_NO_PMP_HOST
//
// MessageText:
//
// IMFPMPHost object not available.%0
//
#define MF_E_NO_PMP_HOST                 _HRESULT_TYPEDEF_(0xC00D717FL)

//
// MessageId: MF_E_ITA_OPL_DATA_NOT_INITIALIZED
//
// MessageText:
//
// WMDRM ITA could not initialize the Output Protection Level data.%0
//
#define MF_E_ITA_OPL_DATA_NOT_INITIALIZED _HRESULT_TYPEDEF_(0xC00D7180L)

//
// MessageId: MF_E_ITA_UNRECOGNIZED_ANALOG_VIDEO_OUTPUT
//
// MessageText:
//
// WMDRM ITA does not recognize the Analog Video Output specified by the OTA.%0
//
#define MF_E_ITA_UNRECOGNIZED_ANALOG_VIDEO_OUTPUT _HRESULT_TYPEDEF_(0xC00D7181L)

//
// MessageId: MF_E_ITA_UNRECOGNIZED_DIGITAL_VIDEO_OUTPUT
//
// MessageText:
//
// WMDRM ITA does not recognize the Digital Video Output specified by the OTA.%0
//
#define MF_E_ITA_UNRECOGNIZED_DIGITAL_VIDEO_OUTPUT _HRESULT_TYPEDEF_(0xC00D7182L)


//////////////////////////////////////////////////////////////////////////////
//
// Clock errors
//
//////////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_E_CLOCK_INVALID_CONTINUITY_KEY
//
// MessageText:
//
// The continuity key supplied is not currently valid.%0
//
#define MF_E_CLOCK_INVALID_CONTINUITY_KEY _HRESULT_TYPEDEF_(0xC00D9C40L)

//
// MessageId: MF_E_CLOCK_NO_TIME_SOURCE
//
// MessageText:
//
// No Presentation Time Source has been specified.%0
//
#define MF_E_CLOCK_NO_TIME_SOURCE        _HRESULT_TYPEDEF_(0xC00D9C41L)

//
// MessageId: MF_E_CLOCK_STATE_ALREADY_SET
//
// MessageText:
//
// The clock is already in the requested state.%0
//
#define MF_E_CLOCK_STATE_ALREADY_SET     _HRESULT_TYPEDEF_(0xC00D9C42L)

//
// MessageId: MF_E_CLOCK_NOT_SIMPLE
//
// MessageText:
//
// The clock has too many advanced features to carry out the request.%0
//
#define MF_E_CLOCK_NOT_SIMPLE            _HRESULT_TYPEDEF_(0xC00D9C43L)

//
// MessageId: MF_S_CLOCK_STOPPED
//
// MessageText:
//
// Timer::SetTimer returns this success code if called happened while timer is stopped. Timer is not going to be dispatched until clock is running%0
//
#define MF_S_CLOCK_STOPPED               _HRESULT_TYPEDEF_(0x000D9C44L)


//////////////////////////////////////////////////////////////////////////////
//
// MF Quality Management errors
//
//////////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_E_NO_MORE_DROP_MODES
//
// MessageText:
//
// The component does not support any more drop modes.%0
//
#define MF_E_NO_MORE_DROP_MODES          _HRESULT_TYPEDEF_(0xC00DA028L)

//
// MessageId: MF_E_NO_MORE_QUALITY_LEVELS
//
// MessageText:
//
// The component does not support any more quality levels.%0
//
#define MF_E_NO_MORE_QUALITY_LEVELS      _HRESULT_TYPEDEF_(0xC00DA029L)

//
// MessageId: MF_E_DROPTIME_NOT_SUPPORTED
//
// MessageText:
//
// The component does not support drop time functionality.%0
//
#define MF_E_DROPTIME_NOT_SUPPORTED      _HRESULT_TYPEDEF_(0xC00DA02AL)

//
// MessageId: MF_E_QUALITYKNOB_WAIT_LONGER
//
// MessageText:
//
// Quality Manager needs to wait longer before bumping the Quality Level up.%0
//
#define MF_E_QUALITYKNOB_WAIT_LONGER     _HRESULT_TYPEDEF_(0xC00DA02BL)

//
// MessageId: MF_E_QM_INVALIDSTATE
//
// MessageText:
//
// Quality Manager is in an invalid state. Quality Management is off at this moment.%0
//
#define MF_E_QM_INVALIDSTATE             _HRESULT_TYPEDEF_(0xC00DA02CL)


//////////////////////////////////////////////////////////////////////////////
//
// MF Transcode errors
//
//////////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_E_TRANSCODE_NO_CONTAINERTYPE
//
// MessageText:
//
// No transcode output container type is specified.%0
//
#define MF_E_TRANSCODE_NO_CONTAINERTYPE  _HRESULT_TYPEDEF_(0xC00DA410L)

//
// MessageId: MF_E_TRANSCODE_PROFILE_NO_MATCHING_STREAMS
//
// MessageText:
//
// The profile does not have a media type configuration for any selected source streams.%0
//
#define MF_E_TRANSCODE_PROFILE_NO_MATCHING_STREAMS _HRESULT_TYPEDEF_(0xC00DA411L)

//
// MessageId: MF_E_TRANSCODE_NO_MATCHING_ENCODER
//
// MessageText:
//
// Cannot find an encoder MFT that accepts the user preferred output type.%0
//
#define MF_E_TRANSCODE_NO_MATCHING_ENCODER _HRESULT_TYPEDEF_(0xC00DA412L)


//////////////////////////////////////////////////////////////////////////////
//
// MF HW Device Proxy errors
//
//////////////////////////////////////////////////////////////////////////////

//
// MessageId: MF_E_ALLOCATOR_NOT_INITIALIZED
//
// MessageText:
//
// Memory allocator is not initialized.%0
//
#define MF_E_ALLOCATOR_NOT_INITIALIZED   _HRESULT_TYPEDEF_(0xC00DA7F8L)

//
// MessageId: MF_E_ALLOCATOR_NOT_COMMITED
//
// MessageText:
//
// Memory allocator is not committed yet.%0
//
#define MF_E_ALLOCATOR_NOT_COMMITED      _HRESULT_TYPEDEF_(0xC00DA7F9L)

//
// MessageId: MF_E_ALLOCATOR_ALREADY_COMMITED
//
// MessageText:
//
// Memory allocator has already been committed.%0
//
#define MF_E_ALLOCATOR_ALREADY_COMMITED  _HRESULT_TYPEDEF_(0xC00DA7FAL)

//
// MessageId: MF_E_STREAM_ERROR
//
// MessageText:
//
// An error occurred in media stream.%0
//
#define MF_E_STREAM_ERROR                _HRESULT_TYPEDEF_(0xC00DA7FBL)

//
// MessageId: MF_E_INVALID_STREAM_STATE
//
// MessageText:
//
// Stream is not in a state to handle the request.%0
//
#define MF_E_INVALID_STREAM_STATE        _HRESULT_TYPEDEF_(0xC00DA7FCL)

//
// MessageId: MF_E_HW_STREAM_NOT_CONNECTED
//
// MessageText:
//
// Hardware stream is not connected yet.%0
//
#define MF_E_HW_STREAM_NOT_CONNECTED     _HRESULT_TYPEDEF_(0xC00DA7FDL)

#endif // _MFERROR_H
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\mfobjects.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mfobjects.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mfobjects_h__
#define __mfobjects_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMFAttributes_FWD_DEFINED__
#define __IMFAttributes_FWD_DEFINED__
typedef interface IMFAttributes IMFAttributes;
#endif 	/* __IMFAttributes_FWD_DEFINED__ */


#ifndef __IMFMediaBuffer_FWD_DEFINED__
#define __IMFMediaBuffer_FWD_DEFINED__
typedef interface IMFMediaBuffer IMFMediaBuffer;
#endif 	/* __IMFMediaBuffer_FWD_DEFINED__ */


#ifndef __IMFSample_FWD_DEFINED__
#define __IMFSample_FWD_DEFINED__
typedef interface IMFSample IMFSample;
#endif 	/* __IMFSample_FWD_DEFINED__ */


#ifndef __IMF2DBuffer_FWD_DEFINED__
#define __IMF2DBuffer_FWD_DEFINED__
typedef interface IMF2DBuffer IMF2DBuffer;
#endif 	/* __IMF2DBuffer_FWD_DEFINED__ */


#ifndef __IMFMediaType_FWD_DEFINED__
#define __IMFMediaType_FWD_DEFINED__
typedef interface IMFMediaType IMFMediaType;
#endif 	/* __IMFMediaType_FWD_DEFINED__ */


#ifndef __IMFAudioMediaType_FWD_DEFINED__
#define __IMFAudioMediaType_FWD_DEFINED__
typedef interface IMFAudioMediaType IMFAudioMediaType;
#endif 	/* __IMFAudioMediaType_FWD_DEFINED__ */


#ifndef __IMFVideoMediaType_FWD_DEFINED__
#define __IMFVideoMediaType_FWD_DEFINED__
typedef interface IMFVideoMediaType IMFVideoMediaType;
#endif 	/* __IMFVideoMediaType_FWD_DEFINED__ */


#ifndef __IMFAsyncResult_FWD_DEFINED__
#define __IMFAsyncResult_FWD_DEFINED__
typedef interface IMFAsyncResult IMFAsyncResult;
#endif 	/* __IMFAsyncResult_FWD_DEFINED__ */


#ifndef __IMFAsyncCallback_FWD_DEFINED__
#define __IMFAsyncCallback_FWD_DEFINED__
typedef interface IMFAsyncCallback IMFAsyncCallback;
#endif 	/* __IMFAsyncCallback_FWD_DEFINED__ */


#ifndef __IMFMediaEvent_FWD_DEFINED__
#define __IMFMediaEvent_FWD_DEFINED__
typedef interface IMFMediaEvent IMFMediaEvent;
#endif 	/* __IMFMediaEvent_FWD_DEFINED__ */


#ifndef __IMFMediaEventGenerator_FWD_DEFINED__
#define __IMFMediaEventGenerator_FWD_DEFINED__
typedef interface IMFMediaEventGenerator IMFMediaEventGenerator;
#endif 	/* __IMFMediaEventGenerator_FWD_DEFINED__ */


#ifndef __IMFRemoteAsyncCallback_FWD_DEFINED__
#define __IMFRemoteAsyncCallback_FWD_DEFINED__
typedef interface IMFRemoteAsyncCallback IMFRemoteAsyncCallback;
#endif 	/* __IMFRemoteAsyncCallback_FWD_DEFINED__ */


#ifndef __IMFByteStream_FWD_DEFINED__
#define __IMFByteStream_FWD_DEFINED__
typedef interface IMFByteStream IMFByteStream;
#endif 	/* __IMFByteStream_FWD_DEFINED__ */


#ifndef __IMFCollection_FWD_DEFINED__
#define __IMFCollection_FWD_DEFINED__
typedef interface IMFCollection IMFCollection;
#endif 	/* __IMFCollection_FWD_DEFINED__ */


#ifndef __IMFMediaEventQueue_FWD_DEFINED__
#define __IMFMediaEventQueue_FWD_DEFINED__
typedef interface IMFMediaEventQueue IMFMediaEventQueue;
#endif 	/* __IMFMediaEventQueue_FWD_DEFINED__ */


#ifndef __IMFActivate_FWD_DEFINED__
#define __IMFActivate_FWD_DEFINED__
typedef interface IMFActivate IMFActivate;
#endif 	/* __IMFActivate_FWD_DEFINED__ */


#ifndef __IMFPluginControl_FWD_DEFINED__
#define __IMFPluginControl_FWD_DEFINED__
typedef interface IMFPluginControl IMFPluginControl;
#endif 	/* __IMFPluginControl_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"
#include "propsys.h"
#include "mediaobj.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mfobjects_0000_0000 */
/* [local] */ 

typedef ULONGLONG QWORD;

#include <mmreg.h>
#if 0

#pragma pack(push, 1)
typedef struct tWAVEFORMATEX
    {
    WORD wFormatTag;
    WORD nChannels;
    DWORD nSamplesPerSec;
    DWORD nAvgBytesPerSec;
    WORD nBlockAlign;
    WORD wBitsPerSample;
    WORD cbSize;
    BYTE pExtraBytes[ 1 ];
    } 	WAVEFORMATEX;

typedef struct tWAVEFORMATEX *PWAVEFORMATEX;

typedef struct tWAVEFORMATEX *NPWAVEFORMATEX;

typedef struct tWAVEFORMATEX *LPWAVEFORMATEX;

typedef /* [public] */ struct __MIDL___MIDL_itf_mfobjects_0000_0000_0001
    {
    WORD wFormatTag;
    WORD nChannels;
    DWORD nSamplesPerSec;
    DWORD nAvgBytesPerSec;
    WORD nBlockAlign;
    WORD wBitsPerSample;
    WORD cbSize;
    WORD wValidBitsPerSample;
    DWORD dwChannelMask;
    GUID SubFormat;
    } 	WAVEFORMATEXTENSIBLE;

typedef struct __MIDL___MIDL_itf_mfobjects_0000_0000_0001 *PWAVEFORMATEXTENSIBLE;


#pragma pack(pop)
#endif /* 0 */
typedef 
enum _MF_ATTRIBUTE_TYPE
    {	MF_ATTRIBUTE_UINT32	= VT_UI4,
	MF_ATTRIBUTE_UINT64	= VT_UI8,
	MF_ATTRIBUTE_DOUBLE	= VT_R8,
	MF_ATTRIBUTE_GUID	= VT_CLSID,
	MF_ATTRIBUTE_STRING	= VT_LPWSTR,
	MF_ATTRIBUTE_BLOB	= ( VT_VECTOR | VT_UI1 ) ,
	MF_ATTRIBUTE_IUNKNOWN	= VT_UNKNOWN
    } 	MF_ATTRIBUTE_TYPE;

typedef 
enum _MF_ATTRIBUTES_MATCH_TYPE
    {	MF_ATTRIBUTES_MATCH_OUR_ITEMS	= 0,
	MF_ATTRIBUTES_MATCH_THEIR_ITEMS	= 1,
	MF_ATTRIBUTES_MATCH_ALL_ITEMS	= 2,
	MF_ATTRIBUTES_MATCH_INTERSECTION	= 3,
	MF_ATTRIBUTES_MATCH_SMALLER	= 4
    } 	MF_ATTRIBUTES_MATCH_TYPE;



extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0000_v0_0_s_ifspec;

#ifndef __IMFAttributes_INTERFACE_DEFINED__
#define __IMFAttributes_INTERFACE_DEFINED__

/* interface IMFAttributes */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFAttributes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2cd2d921-c447-44a7-a13c-4adabfc247e3")
    IMFAttributes : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetItem( 
            __RPC__in REFGUID guidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemType( 
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out MF_ATTRIBUTE_TYPE *pType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CompareItem( 
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value,
            /* [out] */ __RPC__out BOOL *pbResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Compare( 
            __RPC__in_opt IMFAttributes *pTheirs,
            MF_ATTRIBUTES_MATCH_TYPE MatchType,
            /* [out] */ __RPC__out BOOL *pbResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUINT32( 
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *punValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUINT64( 
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT64 *punValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDouble( 
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out double *pfValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGUID( 
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out GUID *pguidValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStringLength( 
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcchLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetString( 
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,
            UINT32 cchBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcchLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAllocatedString( 
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,
            /* [out] */ __RPC__out UINT32 *pcchLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBlobSize( 
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcbBlobSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBlob( 
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,
            UINT32 cbBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcbBlobSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAllocatedBlob( 
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,
            /* [out] */ __RPC__out UINT32 *pcbSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUnknown( 
            __RPC__in REFGUID guidKey,
            __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt LPVOID *ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetItem( 
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteItem( 
            __RPC__in REFGUID guidKey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteAllItems( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetUINT32( 
            __RPC__in REFGUID guidKey,
            UINT32 unValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetUINT64( 
            __RPC__in REFGUID guidKey,
            UINT64 unValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDouble( 
            __RPC__in REFGUID guidKey,
            double fValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetGUID( 
            __RPC__in REFGUID guidKey,
            __RPC__in REFGUID guidValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetString( 
            __RPC__in REFGUID guidKey,
            /* [string][in] */ __RPC__in_string LPCWSTR wszValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBlob( 
            __RPC__in REFGUID guidKey,
            /* [size_is][in] */ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,
            UINT32 cbBufSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetUnknown( 
            __RPC__in REFGUID guidKey,
            /* [in] */ __RPC__in_opt IUnknown *pUnknown) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LockStore( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnlockStore( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ __RPC__out UINT32 *pcItems) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemByIndex( 
            UINT32 unIndex,
            /* [out] */ __RPC__out GUID *pguidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CopyAllItems( 
            /* [in] */ __RPC__in_opt IMFAttributes *pDest) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFAttributesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFAttributes * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFAttributes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFAttributes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemType )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out MF_ATTRIBUTE_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *CompareItem )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value,
            /* [out] */ __RPC__out BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *Compare )( 
            __RPC__in IMFAttributes * This,
            __RPC__in_opt IMFAttributes *pTheirs,
            MF_ATTRIBUTES_MATCH_TYPE MatchType,
            /* [out] */ __RPC__out BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT64 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetDouble )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out double *pfValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetGUID )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out GUID *pguidValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetString )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,
            UINT32 cchBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,
            /* [out] */ __RPC__out UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlob )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,
            UINT32 cbBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,
            /* [out] */ __RPC__out UINT32 *pcbSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt LPVOID *ppv);
        
        HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( 
            __RPC__in IMFAttributes * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            UINT32 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            UINT64 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetDouble )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            double fValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetGUID )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFGUID guidValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetString )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [string][in] */ __RPC__in_string LPCWSTR wszValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetBlob )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][in] */ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,
            UINT32 cbBufSize);
        
        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( 
            __RPC__in IMFAttributes * This,
            __RPC__in REFGUID guidKey,
            /* [in] */ __RPC__in_opt IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *LockStore )( 
            __RPC__in IMFAttributes * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( 
            __RPC__in IMFAttributes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            __RPC__in IMFAttributes * This,
            /* [out] */ __RPC__out UINT32 *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( 
            __RPC__in IMFAttributes * This,
            UINT32 unIndex,
            /* [out] */ __RPC__out GUID *pguidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( 
            __RPC__in IMFAttributes * This,
            /* [in] */ __RPC__in_opt IMFAttributes *pDest);
        
        END_INTERFACE
    } IMFAttributesVtbl;

    interface IMFAttributes
    {
        CONST_VTBL struct IMFAttributesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFAttributes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFAttributes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFAttributes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFAttributes_GetItem(This,guidKey,pValue)	\
    ( (This)->lpVtbl -> GetItem(This,guidKey,pValue) ) 

#define IMFAttributes_GetItemType(This,guidKey,pType)	\
    ( (This)->lpVtbl -> GetItemType(This,guidKey,pType) ) 

#define IMFAttributes_CompareItem(This,guidKey,Value,pbResult)	\
    ( (This)->lpVtbl -> CompareItem(This,guidKey,Value,pbResult) ) 

#define IMFAttributes_Compare(This,pTheirs,MatchType,pbResult)	\
    ( (This)->lpVtbl -> Compare(This,pTheirs,MatchType,pbResult) ) 

#define IMFAttributes_GetUINT32(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT32(This,guidKey,punValue) ) 

#define IMFAttributes_GetUINT64(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT64(This,guidKey,punValue) ) 

#define IMFAttributes_GetDouble(This,guidKey,pfValue)	\
    ( (This)->lpVtbl -> GetDouble(This,guidKey,pfValue) ) 

#define IMFAttributes_GetGUID(This,guidKey,pguidValue)	\
    ( (This)->lpVtbl -> GetGUID(This,guidKey,pguidValue) ) 

#define IMFAttributes_GetStringLength(This,guidKey,pcchLength)	\
    ( (This)->lpVtbl -> GetStringLength(This,guidKey,pcchLength) ) 

#define IMFAttributes_GetString(This,guidKey,pwszValue,cchBufSize,pcchLength)	\
    ( (This)->lpVtbl -> GetString(This,guidKey,pwszValue,cchBufSize,pcchLength) ) 

#define IMFAttributes_GetAllocatedString(This,guidKey,ppwszValue,pcchLength)	\
    ( (This)->lpVtbl -> GetAllocatedString(This,guidKey,ppwszValue,pcchLength) ) 

#define IMFAttributes_GetBlobSize(This,guidKey,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlobSize(This,guidKey,pcbBlobSize) ) 

#define IMFAttributes_GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize) ) 

#define IMFAttributes_GetAllocatedBlob(This,guidKey,ppBuf,pcbSize)	\
    ( (This)->lpVtbl -> GetAllocatedBlob(This,guidKey,ppBuf,pcbSize) ) 

#define IMFAttributes_GetUnknown(This,guidKey,riid,ppv)	\
    ( (This)->lpVtbl -> GetUnknown(This,guidKey,riid,ppv) ) 

#define IMFAttributes_SetItem(This,guidKey,Value)	\
    ( (This)->lpVtbl -> SetItem(This,guidKey,Value) ) 

#define IMFAttributes_DeleteItem(This,guidKey)	\
    ( (This)->lpVtbl -> DeleteItem(This,guidKey) ) 

#define IMFAttributes_DeleteAllItems(This)	\
    ( (This)->lpVtbl -> DeleteAllItems(This) ) 

#define IMFAttributes_SetUINT32(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT32(This,guidKey,unValue) ) 

#define IMFAttributes_SetUINT64(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT64(This,guidKey,unValue) ) 

#define IMFAttributes_SetDouble(This,guidKey,fValue)	\
    ( (This)->lpVtbl -> SetDouble(This,guidKey,fValue) ) 

#define IMFAttributes_SetGUID(This,guidKey,guidValue)	\
    ( (This)->lpVtbl -> SetGUID(This,guidKey,guidValue) ) 

#define IMFAttributes_SetString(This,guidKey,wszValue)	\
    ( (This)->lpVtbl -> SetString(This,guidKey,wszValue) ) 

#define IMFAttributes_SetBlob(This,guidKey,pBuf,cbBufSize)	\
    ( (This)->lpVtbl -> SetBlob(This,guidKey,pBuf,cbBufSize) ) 

#define IMFAttributes_SetUnknown(This,guidKey,pUnknown)	\
    ( (This)->lpVtbl -> SetUnknown(This,guidKey,pUnknown) ) 

#define IMFAttributes_LockStore(This)	\
    ( (This)->lpVtbl -> LockStore(This) ) 

#define IMFAttributes_UnlockStore(This)	\
    ( (This)->lpVtbl -> UnlockStore(This) ) 

#define IMFAttributes_GetCount(This,pcItems)	\
    ( (This)->lpVtbl -> GetCount(This,pcItems) ) 

#define IMFAttributes_GetItemByIndex(This,unIndex,pguidKey,pValue)	\
    ( (This)->lpVtbl -> GetItemByIndex(This,unIndex,pguidKey,pValue) ) 

#define IMFAttributes_CopyAllItems(This,pDest)	\
    ( (This)->lpVtbl -> CopyAllItems(This,pDest) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFAttributes_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfobjects_0000_0001 */
/* [local] */ 


enum MF_ATTRIBUTE_SERIALIZE_OPTIONS
    {	MF_ATTRIBUTE_SERIALIZE_UNKNOWN_BYREF	= 0x1
    } ;
STDAPI MFSerializeAttributesToStream(
  IMFAttributes * pAttr, 
  DWORD dwOptions, 
  IStream * pStm);
STDAPI MFDeserializeAttributesFromStream(
  IMFAttributes * pAttr, 
  DWORD dwOptions, 
  IStream * pStm);


extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0001_v0_0_s_ifspec;

#ifndef __IMFMediaBuffer_INTERFACE_DEFINED__
#define __IMFMediaBuffer_INTERFACE_DEFINED__

/* interface IMFMediaBuffer */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFMediaBuffer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("045FA593-8799-42b8-BC8D-8968C6453507")
    IMFMediaBuffer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Lock( 
            /* [annotation][out] */ 
            __deref_out_bcount_part(*pcbMaxLength, *pcbCurrentLength)  BYTE **ppbBuffer,
            /* [annotation][out] */ 
            __out_opt  DWORD *pcbMaxLength,
            /* [annotation][out] */ 
            __out_opt  DWORD *pcbCurrentLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unlock( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentLength( 
            /* [annotation][out] */ 
            __out  DWORD *pcbCurrentLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCurrentLength( 
            /* [in] */ DWORD cbCurrentLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMaxLength( 
            /* [annotation][out] */ 
            __out  DWORD *pcbMaxLength) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMediaBufferVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFMediaBuffer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFMediaBuffer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFMediaBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Lock )( 
            IMFMediaBuffer * This,
            /* [annotation][out] */ 
            __deref_out_bcount_part(*pcbMaxLength, *pcbCurrentLength)  BYTE **ppbBuffer,
            /* [annotation][out] */ 
            __out_opt  DWORD *pcbMaxLength,
            /* [annotation][out] */ 
            __out_opt  DWORD *pcbCurrentLength);
        
        HRESULT ( STDMETHODCALLTYPE *Unlock )( 
            IMFMediaBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentLength )( 
            IMFMediaBuffer * This,
            /* [annotation][out] */ 
            __out  DWORD *pcbCurrentLength);
        
        HRESULT ( STDMETHODCALLTYPE *SetCurrentLength )( 
            IMFMediaBuffer * This,
            /* [in] */ DWORD cbCurrentLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetMaxLength )( 
            IMFMediaBuffer * This,
            /* [annotation][out] */ 
            __out  DWORD *pcbMaxLength);
        
        END_INTERFACE
    } IMFMediaBufferVtbl;

    interface IMFMediaBuffer
    {
        CONST_VTBL struct IMFMediaBufferVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMediaBuffer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMediaBuffer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMediaBuffer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMediaBuffer_Lock(This,ppbBuffer,pcbMaxLength,pcbCurrentLength)	\
    ( (This)->lpVtbl -> Lock(This,ppbBuffer,pcbMaxLength,pcbCurrentLength) ) 

#define IMFMediaBuffer_Unlock(This)	\
    ( (This)->lpVtbl -> Unlock(This) ) 

#define IMFMediaBuffer_GetCurrentLength(This,pcbCurrentLength)	\
    ( (This)->lpVtbl -> GetCurrentLength(This,pcbCurrentLength) ) 

#define IMFMediaBuffer_SetCurrentLength(This,cbCurrentLength)	\
    ( (This)->lpVtbl -> SetCurrentLength(This,cbCurrentLength) ) 

#define IMFMediaBuffer_GetMaxLength(This,pcbMaxLength)	\
    ( (This)->lpVtbl -> GetMaxLength(This,pcbMaxLength) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFMediaBuffer_INTERFACE_DEFINED__ */


#ifndef __IMFSample_INTERFACE_DEFINED__
#define __IMFSample_INTERFACE_DEFINED__

/* interface IMFSample */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFSample;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c40a00f2-b93a-4d80-ae8c-5a1c634f58e4")
    IMFSample : public IMFAttributes
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSampleFlags( 
            /* [annotation][out] */ 
            __out  DWORD *pdwSampleFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSampleFlags( 
            /* [in] */ DWORD dwSampleFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSampleTime( 
            /* [annotation][out] */ 
            __out  LONGLONG *phnsSampleTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSampleTime( 
            /* [in] */ LONGLONG hnsSampleTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSampleDuration( 
            /* [annotation][out] */ 
            __out  LONGLONG *phnsSampleDuration) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSampleDuration( 
            /* [in] */ LONGLONG hnsSampleDuration) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBufferCount( 
            /* [annotation][out] */ 
            __out  DWORD *pdwBufferCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBufferByIndex( 
            /* [in] */ DWORD dwIndex,
            /* [annotation][out] */ 
            __out  IMFMediaBuffer **ppBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConvertToContiguousBuffer( 
            /* [annotation][out] */ 
            __out  IMFMediaBuffer **ppBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddBuffer( 
            /* [in] */ IMFMediaBuffer *pBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveBufferByIndex( 
            /* [in] */ DWORD dwIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAllBuffers( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTotalLength( 
            /* [annotation][out] */ 
            __out  DWORD *pcbTotalLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CopyToBuffer( 
            /* [in] */ IMFMediaBuffer *pBuffer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSampleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFSample * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFSample * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [full][out][in] */ PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemType )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [out] */ MF_ATTRIBUTE_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *CompareItem )( 
            IMFSample * This,
            REFGUID guidKey,
            REFPROPVARIANT Value,
            /* [out] */ BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *Compare )( 
            IMFSample * This,
            IMFAttributes *pTheirs,
            MF_ATTRIBUTES_MATCH_TYPE MatchType,
            /* [out] */ BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [out] */ UINT64 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetDouble )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [out] */ double *pfValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetGUID )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [out] */ GUID *pguidValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetString )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [size_is][out] */ LPWSTR pwszValue,
            UINT32 cchBufSize,
            /* [full][out][in] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [size_is][size_is][out] */ LPWSTR *ppwszValue,
            /* [out] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlob )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [size_is][out] */ UINT8 *pBuf,
            UINT32 cbBufSize,
            /* [full][out][in] */ UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [size_is][size_is][out] */ UINT8 **ppBuf,
            /* [out] */ UINT32 *pcbSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( 
            IMFSample * This,
            REFGUID guidKey,
            REFIID riid,
            /* [iid_is][out] */ LPVOID *ppv);
        
        HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            IMFSample * This,
            REFGUID guidKey,
            REFPROPVARIANT Value);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            IMFSample * This,
            REFGUID guidKey);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( 
            IMFSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( 
            IMFSample * This,
            REFGUID guidKey,
            UINT32 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( 
            IMFSample * This,
            REFGUID guidKey,
            UINT64 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetDouble )( 
            IMFSample * This,
            REFGUID guidKey,
            double fValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetGUID )( 
            IMFSample * This,
            REFGUID guidKey,
            REFGUID guidValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetString )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [string][in] */ LPCWSTR wszValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetBlob )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [size_is][in] */ const UINT8 *pBuf,
            UINT32 cbBufSize);
        
        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( 
            IMFSample * This,
            REFGUID guidKey,
            /* [in] */ IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *LockStore )( 
            IMFSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( 
            IMFSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IMFSample * This,
            /* [out] */ UINT32 *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( 
            IMFSample * This,
            UINT32 unIndex,
            /* [out] */ GUID *pguidKey,
            /* [full][out][in] */ PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( 
            IMFSample * This,
            /* [in] */ IMFAttributes *pDest);
        
        HRESULT ( STDMETHODCALLTYPE *GetSampleFlags )( 
            IMFSample * This,
            /* [annotation][out] */ 
            __out  DWORD *pdwSampleFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetSampleFlags )( 
            IMFSample * This,
            /* [in] */ DWORD dwSampleFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetSampleTime )( 
            IMFSample * This,
            /* [annotation][out] */ 
            __out  LONGLONG *phnsSampleTime);
        
        HRESULT ( STDMETHODCALLTYPE *SetSampleTime )( 
            IMFSample * This,
            /* [in] */ LONGLONG hnsSampleTime);
        
        HRESULT ( STDMETHODCALLTYPE *GetSampleDuration )( 
            IMFSample * This,
            /* [annotation][out] */ 
            __out  LONGLONG *phnsSampleDuration);
        
        HRESULT ( STDMETHODCALLTYPE *SetSampleDuration )( 
            IMFSample * This,
            /* [in] */ LONGLONG hnsSampleDuration);
        
        HRESULT ( STDMETHODCALLTYPE *GetBufferCount )( 
            IMFSample * This,
            /* [annotation][out] */ 
            __out  DWORD *pdwBufferCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetBufferByIndex )( 
            IMFSample * This,
            /* [in] */ DWORD dwIndex,
            /* [annotation][out] */ 
            __out  IMFMediaBuffer **ppBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertToContiguousBuffer )( 
            IMFSample * This,
            /* [annotation][out] */ 
            __out  IMFMediaBuffer **ppBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *AddBuffer )( 
            IMFSample * This,
            /* [in] */ IMFMediaBuffer *pBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveBufferByIndex )( 
            IMFSample * This,
            /* [in] */ DWORD dwIndex);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAllBuffers )( 
            IMFSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTotalLength )( 
            IMFSample * This,
            /* [annotation][out] */ 
            __out  DWORD *pcbTotalLength);
        
        HRESULT ( STDMETHODCALLTYPE *CopyToBuffer )( 
            IMFSample * This,
            /* [in] */ IMFMediaBuffer *pBuffer);
        
        END_INTERFACE
    } IMFSampleVtbl;

    interface IMFSample
    {
        CONST_VTBL struct IMFSampleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSample_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSample_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSample_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSample_GetItem(This,guidKey,pValue)	\
    ( (This)->lpVtbl -> GetItem(This,guidKey,pValue) ) 

#define IMFSample_GetItemType(This,guidKey,pType)	\
    ( (This)->lpVtbl -> GetItemType(This,guidKey,pType) ) 

#define IMFSample_CompareItem(This,guidKey,Value,pbResult)	\
    ( (This)->lpVtbl -> CompareItem(This,guidKey,Value,pbResult) ) 

#define IMFSample_Compare(This,pTheirs,MatchType,pbResult)	\
    ( (This)->lpVtbl -> Compare(This,pTheirs,MatchType,pbResult) ) 

#define IMFSample_GetUINT32(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT32(This,guidKey,punValue) ) 

#define IMFSample_GetUINT64(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT64(This,guidKey,punValue) ) 

#define IMFSample_GetDouble(This,guidKey,pfValue)	\
    ( (This)->lpVtbl -> GetDouble(This,guidKey,pfValue) ) 

#define IMFSample_GetGUID(This,guidKey,pguidValue)	\
    ( (This)->lpVtbl -> GetGUID(This,guidKey,pguidValue) ) 

#define IMFSample_GetStringLength(This,guidKey,pcchLength)	\
    ( (This)->lpVtbl -> GetStringLength(This,guidKey,pcchLength) ) 

#define IMFSample_GetString(This,guidKey,pwszValue,cchBufSize,pcchLength)	\
    ( (This)->lpVtbl -> GetString(This,guidKey,pwszValue,cchBufSize,pcchLength) ) 

#define IMFSample_GetAllocatedString(This,guidKey,ppwszValue,pcchLength)	\
    ( (This)->lpVtbl -> GetAllocatedString(This,guidKey,ppwszValue,pcchLength) ) 

#define IMFSample_GetBlobSize(This,guidKey,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlobSize(This,guidKey,pcbBlobSize) ) 

#define IMFSample_GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize) ) 

#define IMFSample_GetAllocatedBlob(This,guidKey,ppBuf,pcbSize)	\
    ( (This)->lpVtbl -> GetAllocatedBlob(This,guidKey,ppBuf,pcbSize) ) 

#define IMFSample_GetUnknown(This,guidKey,riid,ppv)	\
    ( (This)->lpVtbl -> GetUnknown(This,guidKey,riid,ppv) ) 

#define IMFSample_SetItem(This,guidKey,Value)	\
    ( (This)->lpVtbl -> SetItem(This,guidKey,Value) ) 

#define IMFSample_DeleteItem(This,guidKey)	\
    ( (This)->lpVtbl -> DeleteItem(This,guidKey) ) 

#define IMFSample_DeleteAllItems(This)	\
    ( (This)->lpVtbl -> DeleteAllItems(This) ) 

#define IMFSample_SetUINT32(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT32(This,guidKey,unValue) ) 

#define IMFSample_SetUINT64(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT64(This,guidKey,unValue) ) 

#define IMFSample_SetDouble(This,guidKey,fValue)	\
    ( (This)->lpVtbl -> SetDouble(This,guidKey,fValue) ) 

#define IMFSample_SetGUID(This,guidKey,guidValue)	\
    ( (This)->lpVtbl -> SetGUID(This,guidKey,guidValue) ) 

#define IMFSample_SetString(This,guidKey,wszValue)	\
    ( (This)->lpVtbl -> SetString(This,guidKey,wszValue) ) 

#define IMFSample_SetBlob(This,guidKey,pBuf,cbBufSize)	\
    ( (This)->lpVtbl -> SetBlob(This,guidKey,pBuf,cbBufSize) ) 

#define IMFSample_SetUnknown(This,guidKey,pUnknown)	\
    ( (This)->lpVtbl -> SetUnknown(This,guidKey,pUnknown) ) 

#define IMFSample_LockStore(This)	\
    ( (This)->lpVtbl -> LockStore(This) ) 

#define IMFSample_UnlockStore(This)	\
    ( (This)->lpVtbl -> UnlockStore(This) ) 

#define IMFSample_GetCount(This,pcItems)	\
    ( (This)->lpVtbl -> GetCount(This,pcItems) ) 

#define IMFSample_GetItemByIndex(This,unIndex,pguidKey,pValue)	\
    ( (This)->lpVtbl -> GetItemByIndex(This,unIndex,pguidKey,pValue) ) 

#define IMFSample_CopyAllItems(This,pDest)	\
    ( (This)->lpVtbl -> CopyAllItems(This,pDest) ) 


#define IMFSample_GetSampleFlags(This,pdwSampleFlags)	\
    ( (This)->lpVtbl -> GetSampleFlags(This,pdwSampleFlags) ) 

#define IMFSample_SetSampleFlags(This,dwSampleFlags)	\
    ( (This)->lpVtbl -> SetSampleFlags(This,dwSampleFlags) ) 

#define IMFSample_GetSampleTime(This,phnsSampleTime)	\
    ( (This)->lpVtbl -> GetSampleTime(This,phnsSampleTime) ) 

#define IMFSample_SetSampleTime(This,hnsSampleTime)	\
    ( (This)->lpVtbl -> SetSampleTime(This,hnsSampleTime) ) 

#define IMFSample_GetSampleDuration(This,phnsSampleDuration)	\
    ( (This)->lpVtbl -> GetSampleDuration(This,phnsSampleDuration) ) 

#define IMFSample_SetSampleDuration(This,hnsSampleDuration)	\
    ( (This)->lpVtbl -> SetSampleDuration(This,hnsSampleDuration) ) 

#define IMFSample_GetBufferCount(This,pdwBufferCount)	\
    ( (This)->lpVtbl -> GetBufferCount(This,pdwBufferCount) ) 

#define IMFSample_GetBufferByIndex(This,dwIndex,ppBuffer)	\
    ( (This)->lpVtbl -> GetBufferByIndex(This,dwIndex,ppBuffer) ) 

#define IMFSample_ConvertToContiguousBuffer(This,ppBuffer)	\
    ( (This)->lpVtbl -> ConvertToContiguousBuffer(This,ppBuffer) ) 

#define IMFSample_AddBuffer(This,pBuffer)	\
    ( (This)->lpVtbl -> AddBuffer(This,pBuffer) ) 

#define IMFSample_RemoveBufferByIndex(This,dwIndex)	\
    ( (This)->lpVtbl -> RemoveBufferByIndex(This,dwIndex) ) 

#define IMFSample_RemoveAllBuffers(This)	\
    ( (This)->lpVtbl -> RemoveAllBuffers(This) ) 

#define IMFSample_GetTotalLength(This,pcbTotalLength)	\
    ( (This)->lpVtbl -> GetTotalLength(This,pcbTotalLength) ) 

#define IMFSample_CopyToBuffer(This,pBuffer)	\
    ( (This)->lpVtbl -> CopyToBuffer(This,pBuffer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSample_INTERFACE_DEFINED__ */


#ifndef __IMF2DBuffer_INTERFACE_DEFINED__
#define __IMF2DBuffer_INTERFACE_DEFINED__

/* interface IMF2DBuffer */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMF2DBuffer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7DC9D5F9-9ED9-44ec-9BBF-0600BB589FBB")
    IMF2DBuffer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Lock2D( 
            /* [annotation][out] */ 
            __out  BYTE **pbScanline0,
            /* [out] */ LONG *plPitch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unlock2D( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetScanline0AndPitch( 
            /* [annotation][out] */ 
            __out  BYTE **pbScanline0,
            /* [annotation][out] */ 
            __out  LONG *plPitch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsContiguousFormat( 
            /* [annotation][out] */ 
            __out  BOOL *pfIsContiguous) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContiguousLength( 
            /* [annotation][out] */ 
            __out  DWORD *pcbLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ContiguousCopyTo( 
            /* [annotation][size_is][out] */ 
            __out_bcount(cbDestBuffer)  BYTE *pbDestBuffer,
            /* [in] */ DWORD cbDestBuffer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ContiguousCopyFrom( 
            /* [annotation][size_is][in] */ 
            __in_bcount(cbSrcBuffer)  const BYTE *pbSrcBuffer,
            /* [in] */ DWORD cbSrcBuffer) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMF2DBufferVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMF2DBuffer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMF2DBuffer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMF2DBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Lock2D )( 
            IMF2DBuffer * This,
            /* [annotation][out] */ 
            __out  BYTE **pbScanline0,
            /* [out] */ LONG *plPitch);
        
        HRESULT ( STDMETHODCALLTYPE *Unlock2D )( 
            IMF2DBuffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetScanline0AndPitch )( 
            IMF2DBuffer * This,
            /* [annotation][out] */ 
            __out  BYTE **pbScanline0,
            /* [annotation][out] */ 
            __out  LONG *plPitch);
        
        HRESULT ( STDMETHODCALLTYPE *IsContiguousFormat )( 
            IMF2DBuffer * This,
            /* [annotation][out] */ 
            __out  BOOL *pfIsContiguous);
        
        HRESULT ( STDMETHODCALLTYPE *GetContiguousLength )( 
            IMF2DBuffer * This,
            /* [annotation][out] */ 
            __out  DWORD *pcbLength);
        
        HRESULT ( STDMETHODCALLTYPE *ContiguousCopyTo )( 
            IMF2DBuffer * This,
            /* [annotation][size_is][out] */ 
            __out_bcount(cbDestBuffer)  BYTE *pbDestBuffer,
            /* [in] */ DWORD cbDestBuffer);
        
        HRESULT ( STDMETHODCALLTYPE *ContiguousCopyFrom )( 
            IMF2DBuffer * This,
            /* [annotation][size_is][in] */ 
            __in_bcount(cbSrcBuffer)  const BYTE *pbSrcBuffer,
            /* [in] */ DWORD cbSrcBuffer);
        
        END_INTERFACE
    } IMF2DBufferVtbl;

    interface IMF2DBuffer
    {
        CONST_VTBL struct IMF2DBufferVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMF2DBuffer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMF2DBuffer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMF2DBuffer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMF2DBuffer_Lock2D(This,pbScanline0,plPitch)	\
    ( (This)->lpVtbl -> Lock2D(This,pbScanline0,plPitch) ) 

#define IMF2DBuffer_Unlock2D(This)	\
    ( (This)->lpVtbl -> Unlock2D(This) ) 

#define IMF2DBuffer_GetScanline0AndPitch(This,pbScanline0,plPitch)	\
    ( (This)->lpVtbl -> GetScanline0AndPitch(This,pbScanline0,plPitch) ) 

#define IMF2DBuffer_IsContiguousFormat(This,pfIsContiguous)	\
    ( (This)->lpVtbl -> IsContiguousFormat(This,pfIsContiguous) ) 

#define IMF2DBuffer_GetContiguousLength(This,pcbLength)	\
    ( (This)->lpVtbl -> GetContiguousLength(This,pcbLength) ) 

#define IMF2DBuffer_ContiguousCopyTo(This,pbDestBuffer,cbDestBuffer)	\
    ( (This)->lpVtbl -> ContiguousCopyTo(This,pbDestBuffer,cbDestBuffer) ) 

#define IMF2DBuffer_ContiguousCopyFrom(This,pbSrcBuffer,cbSrcBuffer)	\
    ( (This)->lpVtbl -> ContiguousCopyFrom(This,pbSrcBuffer,cbSrcBuffer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMF2DBuffer_INTERFACE_DEFINED__ */


#ifndef __IMFMediaType_INTERFACE_DEFINED__
#define __IMFMediaType_INTERFACE_DEFINED__

/* interface IMFMediaType */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFMediaType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("44ae0fa8-ea31-4109-8d2e-4cae4997c555")
    IMFMediaType : public IMFAttributes
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMajorType( 
            /* [annotation][out] */ 
            __out  GUID *pguidMajorType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsCompressedFormat( 
            /* [annotation][out] */ 
            __out  BOOL *pfCompressed) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsEqual( 
            /* [in] */ IMFMediaType *pIMediaType,
            /* [annotation][out] */ 
            __out  DWORD *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRepresentation( 
            /* [in] */ GUID guidRepresentation,
            /* [annotation][out] */ 
            __out  LPVOID *ppvRepresentation) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FreeRepresentation( 
            /* [in] */ GUID guidRepresentation,
            /* [in] */ LPVOID pvRepresentation) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMediaTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFMediaType * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFMediaType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFMediaType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [full][out][in] */ PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemType )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [out] */ MF_ATTRIBUTE_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *CompareItem )( 
            IMFMediaType * This,
            REFGUID guidKey,
            REFPROPVARIANT Value,
            /* [out] */ BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *Compare )( 
            IMFMediaType * This,
            IMFAttributes *pTheirs,
            MF_ATTRIBUTES_MATCH_TYPE MatchType,
            /* [out] */ BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [out] */ UINT64 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetDouble )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [out] */ double *pfValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetGUID )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [out] */ GUID *pguidValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetString )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [size_is][out] */ LPWSTR pwszValue,
            UINT32 cchBufSize,
            /* [full][out][in] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [size_is][size_is][out] */ LPWSTR *ppwszValue,
            /* [out] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlob )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [size_is][out] */ UINT8 *pBuf,
            UINT32 cbBufSize,
            /* [full][out][in] */ UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [size_is][size_is][out] */ UINT8 **ppBuf,
            /* [out] */ UINT32 *pcbSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( 
            IMFMediaType * This,
            REFGUID guidKey,
            REFIID riid,
            /* [iid_is][out] */ LPVOID *ppv);
        
        HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            IMFMediaType * This,
            REFGUID guidKey,
            REFPROPVARIANT Value);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            IMFMediaType * This,
            REFGUID guidKey);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( 
            IMFMediaType * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( 
            IMFMediaType * This,
            REFGUID guidKey,
            UINT32 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( 
            IMFMediaType * This,
            REFGUID guidKey,
            UINT64 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetDouble )( 
            IMFMediaType * This,
            REFGUID guidKey,
            double fValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetGUID )( 
            IMFMediaType * This,
            REFGUID guidKey,
            REFGUID guidValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetString )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [string][in] */ LPCWSTR wszValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetBlob )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [size_is][in] */ const UINT8 *pBuf,
            UINT32 cbBufSize);
        
        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( 
            IMFMediaType * This,
            REFGUID guidKey,
            /* [in] */ IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *LockStore )( 
            IMFMediaType * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( 
            IMFMediaType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IMFMediaType * This,
            /* [out] */ UINT32 *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( 
            IMFMediaType * This,
            UINT32 unIndex,
            /* [out] */ GUID *pguidKey,
            /* [full][out][in] */ PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( 
            IMFMediaType * This,
            /* [in] */ IMFAttributes *pDest);
        
        HRESULT ( STDMETHODCALLTYPE *GetMajorType )( 
            IMFMediaType * This,
            /* [annotation][out] */ 
            __out  GUID *pguidMajorType);
        
        HRESULT ( STDMETHODCALLTYPE *IsCompressedFormat )( 
            IMFMediaType * This,
            /* [annotation][out] */ 
            __out  BOOL *pfCompressed);
        
        HRESULT ( STDMETHODCALLTYPE *IsEqual )( 
            IMFMediaType * This,
            /* [in] */ IMFMediaType *pIMediaType,
            /* [annotation][out] */ 
            __out  DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetRepresentation )( 
            IMFMediaType * This,
            /* [in] */ GUID guidRepresentation,
            /* [annotation][out] */ 
            __out  LPVOID *ppvRepresentation);
        
        HRESULT ( STDMETHODCALLTYPE *FreeRepresentation )( 
            IMFMediaType * This,
            /* [in] */ GUID guidRepresentation,
            /* [in] */ LPVOID pvRepresentation);
        
        END_INTERFACE
    } IMFMediaTypeVtbl;

    interface IMFMediaType
    {
        CONST_VTBL struct IMFMediaTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMediaType_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMediaType_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMediaType_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMediaType_GetItem(This,guidKey,pValue)	\
    ( (This)->lpVtbl -> GetItem(This,guidKey,pValue) ) 

#define IMFMediaType_GetItemType(This,guidKey,pType)	\
    ( (This)->lpVtbl -> GetItemType(This,guidKey,pType) ) 

#define IMFMediaType_CompareItem(This,guidKey,Value,pbResult)	\
    ( (This)->lpVtbl -> CompareItem(This,guidKey,Value,pbResult) ) 

#define IMFMediaType_Compare(This,pTheirs,MatchType,pbResult)	\
    ( (This)->lpVtbl -> Compare(This,pTheirs,MatchType,pbResult) ) 

#define IMFMediaType_GetUINT32(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT32(This,guidKey,punValue) ) 

#define IMFMediaType_GetUINT64(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT64(This,guidKey,punValue) ) 

#define IMFMediaType_GetDouble(This,guidKey,pfValue)	\
    ( (This)->lpVtbl -> GetDouble(This,guidKey,pfValue) ) 

#define IMFMediaType_GetGUID(This,guidKey,pguidValue)	\
    ( (This)->lpVtbl -> GetGUID(This,guidKey,pguidValue) ) 

#define IMFMediaType_GetStringLength(This,guidKey,pcchLength)	\
    ( (This)->lpVtbl -> GetStringLength(This,guidKey,pcchLength) ) 

#define IMFMediaType_GetString(This,guidKey,pwszValue,cchBufSize,pcchLength)	\
    ( (This)->lpVtbl -> GetString(This,guidKey,pwszValue,cchBufSize,pcchLength) ) 

#define IMFMediaType_GetAllocatedString(This,guidKey,ppwszValue,pcchLength)	\
    ( (This)->lpVtbl -> GetAllocatedString(This,guidKey,ppwszValue,pcchLength) ) 

#define IMFMediaType_GetBlobSize(This,guidKey,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlobSize(This,guidKey,pcbBlobSize) ) 

#define IMFMediaType_GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize) ) 

#define IMFMediaType_GetAllocatedBlob(This,guidKey,ppBuf,pcbSize)	\
    ( (This)->lpVtbl -> GetAllocatedBlob(This,guidKey,ppBuf,pcbSize) ) 

#define IMFMediaType_GetUnknown(This,guidKey,riid,ppv)	\
    ( (This)->lpVtbl -> GetUnknown(This,guidKey,riid,ppv) ) 

#define IMFMediaType_SetItem(This,guidKey,Value)	\
    ( (This)->lpVtbl -> SetItem(This,guidKey,Value) ) 

#define IMFMediaType_DeleteItem(This,guidKey)	\
    ( (This)->lpVtbl -> DeleteItem(This,guidKey) ) 

#define IMFMediaType_DeleteAllItems(This)	\
    ( (This)->lpVtbl -> DeleteAllItems(This) ) 

#define IMFMediaType_SetUINT32(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT32(This,guidKey,unValue) ) 

#define IMFMediaType_SetUINT64(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT64(This,guidKey,unValue) ) 

#define IMFMediaType_SetDouble(This,guidKey,fValue)	\
    ( (This)->lpVtbl -> SetDouble(This,guidKey,fValue) ) 

#define IMFMediaType_SetGUID(This,guidKey,guidValue)	\
    ( (This)->lpVtbl -> SetGUID(This,guidKey,guidValue) ) 

#define IMFMediaType_SetString(This,guidKey,wszValue)	\
    ( (This)->lpVtbl -> SetString(This,guidKey,wszValue) ) 

#define IMFMediaType_SetBlob(This,guidKey,pBuf,cbBufSize)	\
    ( (This)->lpVtbl -> SetBlob(This,guidKey,pBuf,cbBufSize) ) 

#define IMFMediaType_SetUnknown(This,guidKey,pUnknown)	\
    ( (This)->lpVtbl -> SetUnknown(This,guidKey,pUnknown) ) 

#define IMFMediaType_LockStore(This)	\
    ( (This)->lpVtbl -> LockStore(This) ) 

#define IMFMediaType_UnlockStore(This)	\
    ( (This)->lpVtbl -> UnlockStore(This) ) 

#define IMFMediaType_GetCount(This,pcItems)	\
    ( (This)->lpVtbl -> GetCount(This,pcItems) ) 

#define IMFMediaType_GetItemByIndex(This,unIndex,pguidKey,pValue)	\
    ( (This)->lpVtbl -> GetItemByIndex(This,unIndex,pguidKey,pValue) ) 

#define IMFMediaType_CopyAllItems(This,pDest)	\
    ( (This)->lpVtbl -> CopyAllItems(This,pDest) ) 


#define IMFMediaType_GetMajorType(This,pguidMajorType)	\
    ( (This)->lpVtbl -> GetMajorType(This,pguidMajorType) ) 

#define IMFMediaType_IsCompressedFormat(This,pfCompressed)	\
    ( (This)->lpVtbl -> IsCompressedFormat(This,pfCompressed) ) 

#define IMFMediaType_IsEqual(This,pIMediaType,pdwFlags)	\
    ( (This)->lpVtbl -> IsEqual(This,pIMediaType,pdwFlags) ) 

#define IMFMediaType_GetRepresentation(This,guidRepresentation,ppvRepresentation)	\
    ( (This)->lpVtbl -> GetRepresentation(This,guidRepresentation,ppvRepresentation) ) 

#define IMFMediaType_FreeRepresentation(This,guidRepresentation,pvRepresentation)	\
    ( (This)->lpVtbl -> FreeRepresentation(This,guidRepresentation,pvRepresentation) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFMediaType_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfobjects_0000_0005 */
/* [local] */ 

#define MF_MEDIATYPE_EQUAL_MAJOR_TYPES  0x00000001
#define MF_MEDIATYPE_EQUAL_FORMAT_TYPES 0x00000002
#define MF_MEDIATYPE_EQUAL_FORMAT_DATA  0x00000004
#define MF_MEDIATYPE_EQUAL_FORMAT_USER_DATA  0x00000008



extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0005_v0_0_s_ifspec;

#ifndef __IMFAudioMediaType_INTERFACE_DEFINED__
#define __IMFAudioMediaType_INTERFACE_DEFINED__

/* interface IMFAudioMediaType */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFAudioMediaType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("26a0adc3-ce26-4672-9304-69552edd3faf")
    IMFAudioMediaType : public IMFMediaType
    {
    public:
        virtual const WAVEFORMATEX *STDMETHODCALLTYPE GetAudioFormat( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFAudioMediaTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFAudioMediaType * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFAudioMediaType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFAudioMediaType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [full][out][in] */ PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemType )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [out] */ MF_ATTRIBUTE_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *CompareItem )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            REFPROPVARIANT Value,
            /* [out] */ BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *Compare )( 
            IMFAudioMediaType * This,
            IMFAttributes *pTheirs,
            MF_ATTRIBUTES_MATCH_TYPE MatchType,
            /* [out] */ BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [out] */ UINT64 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetDouble )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [out] */ double *pfValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetGUID )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [out] */ GUID *pguidValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetString )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [size_is][out] */ LPWSTR pwszValue,
            UINT32 cchBufSize,
            /* [full][out][in] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [size_is][size_is][out] */ LPWSTR *ppwszValue,
            /* [out] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlob )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [size_is][out] */ UINT8 *pBuf,
            UINT32 cbBufSize,
            /* [full][out][in] */ UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [size_is][size_is][out] */ UINT8 **ppBuf,
            /* [out] */ UINT32 *pcbSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            REFIID riid,
            /* [iid_is][out] */ LPVOID *ppv);
        
        HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            REFPROPVARIANT Value);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            IMFAudioMediaType * This,
            REFGUID guidKey);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( 
            IMFAudioMediaType * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            UINT32 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            UINT64 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetDouble )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            double fValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetGUID )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            REFGUID guidValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetString )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [string][in] */ LPCWSTR wszValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetBlob )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [size_is][in] */ const UINT8 *pBuf,
            UINT32 cbBufSize);
        
        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( 
            IMFAudioMediaType * This,
            REFGUID guidKey,
            /* [in] */ IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *LockStore )( 
            IMFAudioMediaType * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( 
            IMFAudioMediaType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IMFAudioMediaType * This,
            /* [out] */ UINT32 *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( 
            IMFAudioMediaType * This,
            UINT32 unIndex,
            /* [out] */ GUID *pguidKey,
            /* [full][out][in] */ PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( 
            IMFAudioMediaType * This,
            /* [in] */ IMFAttributes *pDest);
        
        HRESULT ( STDMETHODCALLTYPE *GetMajorType )( 
            IMFAudioMediaType * This,
            /* [annotation][out] */ 
            __out  GUID *pguidMajorType);
        
        HRESULT ( STDMETHODCALLTYPE *IsCompressedFormat )( 
            IMFAudioMediaType * This,
            /* [annotation][out] */ 
            __out  BOOL *pfCompressed);
        
        HRESULT ( STDMETHODCALLTYPE *IsEqual )( 
            IMFAudioMediaType * This,
            /* [in] */ IMFMediaType *pIMediaType,
            /* [annotation][out] */ 
            __out  DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetRepresentation )( 
            IMFAudioMediaType * This,
            /* [in] */ GUID guidRepresentation,
            /* [annotation][out] */ 
            __out  LPVOID *ppvRepresentation);
        
        HRESULT ( STDMETHODCALLTYPE *FreeRepresentation )( 
            IMFAudioMediaType * This,
            /* [in] */ GUID guidRepresentation,
            /* [in] */ LPVOID pvRepresentation);
        
        const WAVEFORMATEX *( STDMETHODCALLTYPE *GetAudioFormat )( 
            IMFAudioMediaType * This);
        
        END_INTERFACE
    } IMFAudioMediaTypeVtbl;

    interface IMFAudioMediaType
    {
        CONST_VTBL struct IMFAudioMediaTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFAudioMediaType_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFAudioMediaType_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFAudioMediaType_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFAudioMediaType_GetItem(This,guidKey,pValue)	\
    ( (This)->lpVtbl -> GetItem(This,guidKey,pValue) ) 

#define IMFAudioMediaType_GetItemType(This,guidKey,pType)	\
    ( (This)->lpVtbl -> GetItemType(This,guidKey,pType) ) 

#define IMFAudioMediaType_CompareItem(This,guidKey,Value,pbResult)	\
    ( (This)->lpVtbl -> CompareItem(This,guidKey,Value,pbResult) ) 

#define IMFAudioMediaType_Compare(This,pTheirs,MatchType,pbResult)	\
    ( (This)->lpVtbl -> Compare(This,pTheirs,MatchType,pbResult) ) 

#define IMFAudioMediaType_GetUINT32(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT32(This,guidKey,punValue) ) 

#define IMFAudioMediaType_GetUINT64(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT64(This,guidKey,punValue) ) 

#define IMFAudioMediaType_GetDouble(This,guidKey,pfValue)	\
    ( (This)->lpVtbl -> GetDouble(This,guidKey,pfValue) ) 

#define IMFAudioMediaType_GetGUID(This,guidKey,pguidValue)	\
    ( (This)->lpVtbl -> GetGUID(This,guidKey,pguidValue) ) 

#define IMFAudioMediaType_GetStringLength(This,guidKey,pcchLength)	\
    ( (This)->lpVtbl -> GetStringLength(This,guidKey,pcchLength) ) 

#define IMFAudioMediaType_GetString(This,guidKey,pwszValue,cchBufSize,pcchLength)	\
    ( (This)->lpVtbl -> GetString(This,guidKey,pwszValue,cchBufSize,pcchLength) ) 

#define IMFAudioMediaType_GetAllocatedString(This,guidKey,ppwszValue,pcchLength)	\
    ( (This)->lpVtbl -> GetAllocatedString(This,guidKey,ppwszValue,pcchLength) ) 

#define IMFAudioMediaType_GetBlobSize(This,guidKey,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlobSize(This,guidKey,pcbBlobSize) ) 

#define IMFAudioMediaType_GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize) ) 

#define IMFAudioMediaType_GetAllocatedBlob(This,guidKey,ppBuf,pcbSize)	\
    ( (This)->lpVtbl -> GetAllocatedBlob(This,guidKey,ppBuf,pcbSize) ) 

#define IMFAudioMediaType_GetUnknown(This,guidKey,riid,ppv)	\
    ( (This)->lpVtbl -> GetUnknown(This,guidKey,riid,ppv) ) 

#define IMFAudioMediaType_SetItem(This,guidKey,Value)	\
    ( (This)->lpVtbl -> SetItem(This,guidKey,Value) ) 

#define IMFAudioMediaType_DeleteItem(This,guidKey)	\
    ( (This)->lpVtbl -> DeleteItem(This,guidKey) ) 

#define IMFAudioMediaType_DeleteAllItems(This)	\
    ( (This)->lpVtbl -> DeleteAllItems(This) ) 

#define IMFAudioMediaType_SetUINT32(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT32(This,guidKey,unValue) ) 

#define IMFAudioMediaType_SetUINT64(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT64(This,guidKey,unValue) ) 

#define IMFAudioMediaType_SetDouble(This,guidKey,fValue)	\
    ( (This)->lpVtbl -> SetDouble(This,guidKey,fValue) ) 

#define IMFAudioMediaType_SetGUID(This,guidKey,guidValue)	\
    ( (This)->lpVtbl -> SetGUID(This,guidKey,guidValue) ) 

#define IMFAudioMediaType_SetString(This,guidKey,wszValue)	\
    ( (This)->lpVtbl -> SetString(This,guidKey,wszValue) ) 

#define IMFAudioMediaType_SetBlob(This,guidKey,pBuf,cbBufSize)	\
    ( (This)->lpVtbl -> SetBlob(This,guidKey,pBuf,cbBufSize) ) 

#define IMFAudioMediaType_SetUnknown(This,guidKey,pUnknown)	\
    ( (This)->lpVtbl -> SetUnknown(This,guidKey,pUnknown) ) 

#define IMFAudioMediaType_LockStore(This)	\
    ( (This)->lpVtbl -> LockStore(This) ) 

#define IMFAudioMediaType_UnlockStore(This)	\
    ( (This)->lpVtbl -> UnlockStore(This) ) 

#define IMFAudioMediaType_GetCount(This,pcItems)	\
    ( (This)->lpVtbl -> GetCount(This,pcItems) ) 

#define IMFAudioMediaType_GetItemByIndex(This,unIndex,pguidKey,pValue)	\
    ( (This)->lpVtbl -> GetItemByIndex(This,unIndex,pguidKey,pValue) ) 

#define IMFAudioMediaType_CopyAllItems(This,pDest)	\
    ( (This)->lpVtbl -> CopyAllItems(This,pDest) ) 


#define IMFAudioMediaType_GetMajorType(This,pguidMajorType)	\
    ( (This)->lpVtbl -> GetMajorType(This,pguidMajorType) ) 

#define IMFAudioMediaType_IsCompressedFormat(This,pfCompressed)	\
    ( (This)->lpVtbl -> IsCompressedFormat(This,pfCompressed) ) 

#define IMFAudioMediaType_IsEqual(This,pIMediaType,pdwFlags)	\
    ( (This)->lpVtbl -> IsEqual(This,pIMediaType,pdwFlags) ) 

#define IMFAudioMediaType_GetRepresentation(This,guidRepresentation,ppvRepresentation)	\
    ( (This)->lpVtbl -> GetRepresentation(This,guidRepresentation,ppvRepresentation) ) 

#define IMFAudioMediaType_FreeRepresentation(This,guidRepresentation,pvRepresentation)	\
    ( (This)->lpVtbl -> FreeRepresentation(This,guidRepresentation,pvRepresentation) ) 


#define IMFAudioMediaType_GetAudioFormat(This)	\
    ( (This)->lpVtbl -> GetAudioFormat(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFAudioMediaType_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfobjects_0000_0006 */
/* [local] */ 

#ifndef _WINGDI_
typedef DWORD RGBQUAD;

typedef /* [public][public] */ struct __MIDL___MIDL_itf_mfobjects_0000_0006_0001
    {
    DWORD biSize;
    LONG biWidth;
    LONG biHeight;
    WORD biPlanes;
    WORD biBitCount;
    DWORD biCompression;
    DWORD biSizeImage;
    LONG biXPelsPerMeter;
    LONG biYPelsPerMeter;
    DWORD biClrUsed;
    DWORD biClrImportant;
    } 	BITMAPINFOHEADER;

typedef /* [public] */ struct __MIDL___MIDL_itf_mfobjects_0000_0006_0002
    {
    BITMAPINFOHEADER bmiHeader;
    RGBQUAD bmiColors[ 1 ];
    } 	BITMAPINFO;

#endif

typedef /* [public] */ struct __MIDL___MIDL_itf_mfobjects_0000_0006_0003
    {
    GUID guidMajorType;
    GUID guidSubtype;
    } 	MFT_REGISTER_TYPE_INFO;

#if !defined( _MFVIDEOFORMAT_ )
#define _MFVIDEOFORMAT_
typedef 
enum _MFVideoInterlaceMode
    {	MFVideoInterlace_Unknown	= 0,
	MFVideoInterlace_Progressive	= 2,
	MFVideoInterlace_FieldInterleavedUpperFirst	= 3,
	MFVideoInterlace_FieldInterleavedLowerFirst	= 4,
	MFVideoInterlace_FieldSingleUpper	= 5,
	MFVideoInterlace_FieldSingleLower	= 6,
	MFVideoInterlace_MixedInterlaceOrProgressive	= 7,
	MFVideoInterlace_Last	= ( MFVideoInterlace_MixedInterlaceOrProgressive + 1 ) ,
	MFVideoInterlace_ForceDWORD	= 0x7fffffff
    } 	MFVideoInterlaceMode;

#define MFVideoInterlace_FieldSingleUpperFirst MFVideoInterlace_FieldSingleUpper
#define MFVideoInterlace_FieldSingleLowerFirst MFVideoInterlace_FieldSingleLower
typedef 
enum _MFVideoTransferFunction
    {	MFVideoTransFunc_Unknown	= 0,
	MFVideoTransFunc_10	= 1,
	MFVideoTransFunc_18	= 2,
	MFVideoTransFunc_20	= 3,
	MFVideoTransFunc_22	= 4,
	MFVideoTransFunc_709	= 5,
	MFVideoTransFunc_240M	= 6,
	MFVideoTransFunc_sRGB	= 7,
	MFVideoTransFunc_28	= 8,
	MFVideoTransFunc_Log_100	= 9,
	MFVideoTransFunc_Log_316	= 10,
	MFVideoTransFunc_709_sym	= 11,
	MFVideoTransFunc_Last	= ( MFVideoTransFunc_709_sym + 1 ) ,
	MFVideoTransFunc_ForceDWORD	= 0x7fffffff
    } 	MFVideoTransferFunction;

typedef 
enum _MFVideoPrimaries
    {	MFVideoPrimaries_Unknown	= 0,
	MFVideoPrimaries_reserved	= 1,
	MFVideoPrimaries_BT709	= 2,
	MFVideoPrimaries_BT470_2_SysM	= 3,
	MFVideoPrimaries_BT470_2_SysBG	= 4,
	MFVideoPrimaries_SMPTE170M	= 5,
	MFVideoPrimaries_SMPTE240M	= 6,
	MFVideoPrimaries_EBU3213	= 7,
	MFVideoPrimaries_SMPTE_C	= 8,
	MFVideoPrimaries_Last	= ( MFVideoPrimaries_SMPTE_C + 1 ) ,
	MFVideoPrimaries_ForceDWORD	= 0x7fffffff
    } 	MFVideoPrimaries;

typedef 
enum _MFVideoLighting
    {	MFVideoLighting_Unknown	= 0,
	MFVideoLighting_bright	= 1,
	MFVideoLighting_office	= 2,
	MFVideoLighting_dim	= 3,
	MFVideoLighting_dark	= 4,
	MFVideoLighting_Last	= ( MFVideoLighting_dark + 1 ) ,
	MFVideoLighting_ForceDWORD	= 0x7fffffff
    } 	MFVideoLighting;

typedef 
enum _MFVideoTransferMatrix
    {	MFVideoTransferMatrix_Unknown	= 0,
	MFVideoTransferMatrix_BT709	= 1,
	MFVideoTransferMatrix_BT601	= 2,
	MFVideoTransferMatrix_SMPTE240M	= 3,
	MFVideoTransferMatrix_Last	= ( MFVideoTransferMatrix_SMPTE240M + 1 ) ,
	MFVideoTransferMatrix_ForceDWORD	= 0x7fffffff
    } 	MFVideoTransferMatrix;

typedef 
enum _MFVideoChromaSubsampling
    {	MFVideoChromaSubsampling_Unknown	= 0,
	MFVideoChromaSubsampling_ProgressiveChroma	= 0x8,
	MFVideoChromaSubsampling_Horizontally_Cosited	= 0x4,
	MFVideoChromaSubsampling_Vertically_Cosited	= 0x2,
	MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes	= 0x1,
	MFVideoChromaSubsampling_MPEG2	= ( MFVideoChromaSubsampling_Horizontally_Cosited | MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes ) ,
	MFVideoChromaSubsampling_MPEG1	= MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes,
	MFVideoChromaSubsampling_DV_PAL	= ( MFVideoChromaSubsampling_Horizontally_Cosited | MFVideoChromaSubsampling_Vertically_Cosited ) ,
	MFVideoChromaSubsampling_Cosited	= ( ( MFVideoChromaSubsampling_Horizontally_Cosited | MFVideoChromaSubsampling_Vertically_Cosited )  | MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes ) ,
	MFVideoChromaSubsampling_Last	= ( MFVideoChromaSubsampling_Cosited + 1 ) ,
	MFVideoChromaSubsampling_ForceDWORD	= 0x7fffffff
    } 	MFVideoChromaSubsampling;

typedef 
enum _MFNominalRange
    {	MFNominalRange_Unknown	= 0,
	MFNominalRange_Normal	= 1,
	MFNominalRange_Wide	= 2,
	MFNominalRange_0_255	= 1,
	MFNominalRange_16_235	= 2,
	MFNominalRange_48_208	= 3,
	MFNominalRange_64_127	= 4,
	MFNominalRange_Last	= ( MFNominalRange_64_127 + 1 ) ,
	MFNominalRange_ForceDWORD	= 0x7fffffff
    } 	MFNominalRange;

typedef 
enum _MFVideoFlags
    {	MFVideoFlag_PAD_TO_Mask	= ( 0x1 | 0x2 ) ,
	MFVideoFlag_PAD_TO_None	= ( 0 * 0x1 ) ,
	MFVideoFlag_PAD_TO_4x3	= ( 1 * 0x1 ) ,
	MFVideoFlag_PAD_TO_16x9	= ( 2 * 0x1 ) ,
	MFVideoFlag_SrcContentHintMask	= ( ( 0x4 | 0x8 )  | 0x10 ) ,
	MFVideoFlag_SrcContentHintNone	= ( 0 * 0x4 ) ,
	MFVideoFlag_SrcContentHint16x9	= ( 1 * 0x4 ) ,
	MFVideoFlag_SrcContentHint235_1	= ( 2 * 0x4 ) ,
	MFVideoFlag_AnalogProtected	= 0x20,
	MFVideoFlag_DigitallyProtected	= 0x40,
	MFVideoFlag_ProgressiveContent	= 0x80,
	MFVideoFlag_FieldRepeatCountMask	= ( ( 0x100 | 0x200 )  | 0x400 ) ,
	MFVideoFlag_FieldRepeatCountShift	= 8,
	MFVideoFlag_ProgressiveSeqReset	= 0x800,
	MFVideoFlag_PanScanEnabled	= 0x20000,
	MFVideoFlag_LowerFieldFirst	= 0x40000,
	MFVideoFlag_BottomUpLinearRep	= 0x80000,
	MFVideoFlags_DXVASurface	= 0x100000,
	MFVideoFlags_RenderTargetSurface	= 0x400000,
	MFVideoFlags_ForceQWORD	= 0x7fffffff
    } 	MFVideoFlags;

typedef struct _MFRatio
    {
    DWORD Numerator;
    DWORD Denominator;
    } 	MFRatio;

typedef struct _MFOffset
    {
    WORD fract;
    short value;
    } 	MFOffset;

typedef struct _MFVideoArea
    {
    MFOffset OffsetX;
    MFOffset OffsetY;
    SIZE Area;
    } 	MFVideoArea;

typedef struct _MFVideoInfo
    {
    DWORD dwWidth;
    DWORD dwHeight;
    MFRatio PixelAspectRatio;
    MFVideoChromaSubsampling SourceChromaSubsampling;
    MFVideoInterlaceMode InterlaceMode;
    MFVideoTransferFunction TransferFunction;
    MFVideoPrimaries ColorPrimaries;
    MFVideoTransferMatrix TransferMatrix;
    MFVideoLighting SourceLighting;
    MFRatio FramesPerSecond;
    MFNominalRange NominalRange;
    MFVideoArea GeometricAperture;
    MFVideoArea MinimumDisplayAperture;
    MFVideoArea PanScanAperture;
    unsigned __int64 VideoFlags;
    } 	MFVideoInfo;

typedef struct __MFAYUVSample
    {
    BYTE bCrValue;
    BYTE bCbValue;
    BYTE bYValue;
    BYTE bSampleAlpha8;
    } 	MFAYUVSample;

typedef struct _MFARGB
    {
    BYTE rgbBlue;
    BYTE rgbGreen;
    BYTE rgbRed;
    BYTE rgbAlpha;
    } 	MFARGB;

typedef union _MFPaletteEntry
    {
    MFARGB ARGB;
    MFAYUVSample AYCbCr;
    } 	MFPaletteEntry;

typedef struct _MFVideoSurfaceInfo
    {
    DWORD Format;
    DWORD PaletteEntries;
    MFPaletteEntry Palette[ 1 ];
    } 	MFVideoSurfaceInfo;

typedef struct _MFVideoCompressedInfo
    {
    LONGLONG AvgBitrate;
    LONGLONG AvgBitErrorRate;
    DWORD MaxKeyFrameSpacing;
    } 	MFVideoCompressedInfo;

typedef struct _MFVIDEOFORMAT
    {
    DWORD dwSize;
    MFVideoInfo videoInfo;
    GUID guidFormat;
    MFVideoCompressedInfo compressedInfo;
    MFVideoSurfaceInfo surfaceInfo;
    } 	MFVIDEOFORMAT;

typedef 
enum _MFStandardVideoFormat
    {	MFStdVideoFormat_reserved	= 0,
	MFStdVideoFormat_NTSC	= ( MFStdVideoFormat_reserved + 1 ) ,
	MFStdVideoFormat_PAL	= ( MFStdVideoFormat_NTSC + 1 ) ,
	MFStdVideoFormat_DVD_NTSC	= ( MFStdVideoFormat_PAL + 1 ) ,
	MFStdVideoFormat_DVD_PAL	= ( MFStdVideoFormat_DVD_NTSC + 1 ) ,
	MFStdVideoFormat_DV_PAL	= ( MFStdVideoFormat_DVD_PAL + 1 ) ,
	MFStdVideoFormat_DV_NTSC	= ( MFStdVideoFormat_DV_PAL + 1 ) ,
	MFStdVideoFormat_ATSC_SD480i	= ( MFStdVideoFormat_DV_NTSC + 1 ) ,
	MFStdVideoFormat_ATSC_HD1080i	= ( MFStdVideoFormat_ATSC_SD480i + 1 ) ,
	MFStdVideoFormat_ATSC_HD720p	= ( MFStdVideoFormat_ATSC_HD1080i + 1 ) 
    } 	MFStandardVideoFormat;

#endif



extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0006_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0006_v0_0_s_ifspec;

#ifndef __IMFVideoMediaType_INTERFACE_DEFINED__
#define __IMFVideoMediaType_INTERFACE_DEFINED__

/* interface IMFVideoMediaType */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFVideoMediaType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b99f381f-a8f9-47a2-a5af-ca3a225a3890")
    IMFVideoMediaType : public IMFMediaType
    {
    public:
        virtual const MFVIDEOFORMAT *STDMETHODCALLTYPE GetVideoFormat( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVideoRepresentation( 
            /* [in] */ GUID guidRepresentation,
            /* [annotation][out] */ 
            __out  LPVOID *ppvRepresentation,
            /* [in] */ LONG lStride) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFVideoMediaTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFVideoMediaType * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFVideoMediaType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFVideoMediaType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [full][out][in] */ PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemType )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [out] */ MF_ATTRIBUTE_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *CompareItem )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            REFPROPVARIANT Value,
            /* [out] */ BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *Compare )( 
            IMFVideoMediaType * This,
            IMFAttributes *pTheirs,
            MF_ATTRIBUTES_MATCH_TYPE MatchType,
            /* [out] */ BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [out] */ UINT64 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetDouble )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [out] */ double *pfValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetGUID )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [out] */ GUID *pguidValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetString )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [size_is][out] */ LPWSTR pwszValue,
            UINT32 cchBufSize,
            /* [full][out][in] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [size_is][size_is][out] */ LPWSTR *ppwszValue,
            /* [out] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlob )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [size_is][out] */ UINT8 *pBuf,
            UINT32 cbBufSize,
            /* [full][out][in] */ UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [size_is][size_is][out] */ UINT8 **ppBuf,
            /* [out] */ UINT32 *pcbSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            REFIID riid,
            /* [iid_is][out] */ LPVOID *ppv);
        
        HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            REFPROPVARIANT Value);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            IMFVideoMediaType * This,
            REFGUID guidKey);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( 
            IMFVideoMediaType * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            UINT32 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            UINT64 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetDouble )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            double fValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetGUID )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            REFGUID guidValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetString )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [string][in] */ LPCWSTR wszValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetBlob )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [size_is][in] */ const UINT8 *pBuf,
            UINT32 cbBufSize);
        
        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( 
            IMFVideoMediaType * This,
            REFGUID guidKey,
            /* [in] */ IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *LockStore )( 
            IMFVideoMediaType * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( 
            IMFVideoMediaType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IMFVideoMediaType * This,
            /* [out] */ UINT32 *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( 
            IMFVideoMediaType * This,
            UINT32 unIndex,
            /* [out] */ GUID *pguidKey,
            /* [full][out][in] */ PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( 
            IMFVideoMediaType * This,
            /* [in] */ IMFAttributes *pDest);
        
        HRESULT ( STDMETHODCALLTYPE *GetMajorType )( 
            IMFVideoMediaType * This,
            /* [annotation][out] */ 
            __out  GUID *pguidMajorType);
        
        HRESULT ( STDMETHODCALLTYPE *IsCompressedFormat )( 
            IMFVideoMediaType * This,
            /* [annotation][out] */ 
            __out  BOOL *pfCompressed);
        
        HRESULT ( STDMETHODCALLTYPE *IsEqual )( 
            IMFVideoMediaType * This,
            /* [in] */ IMFMediaType *pIMediaType,
            /* [annotation][out] */ 
            __out  DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetRepresentation )( 
            IMFVideoMediaType * This,
            /* [in] */ GUID guidRepresentation,
            /* [annotation][out] */ 
            __out  LPVOID *ppvRepresentation);
        
        HRESULT ( STDMETHODCALLTYPE *FreeRepresentation )( 
            IMFVideoMediaType * This,
            /* [in] */ GUID guidRepresentation,
            /* [in] */ LPVOID pvRepresentation);
        
        const MFVIDEOFORMAT *( STDMETHODCALLTYPE *GetVideoFormat )( 
            IMFVideoMediaType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetVideoRepresentation )( 
            IMFVideoMediaType * This,
            /* [in] */ GUID guidRepresentation,
            /* [annotation][out] */ 
            __out  LPVOID *ppvRepresentation,
            /* [in] */ LONG lStride);
        
        END_INTERFACE
    } IMFVideoMediaTypeVtbl;

    interface IMFVideoMediaType
    {
        CONST_VTBL struct IMFVideoMediaTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFVideoMediaType_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFVideoMediaType_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFVideoMediaType_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFVideoMediaType_GetItem(This,guidKey,pValue)	\
    ( (This)->lpVtbl -> GetItem(This,guidKey,pValue) ) 

#define IMFVideoMediaType_GetItemType(This,guidKey,pType)	\
    ( (This)->lpVtbl -> GetItemType(This,guidKey,pType) ) 

#define IMFVideoMediaType_CompareItem(This,guidKey,Value,pbResult)	\
    ( (This)->lpVtbl -> CompareItem(This,guidKey,Value,pbResult) ) 

#define IMFVideoMediaType_Compare(This,pTheirs,MatchType,pbResult)	\
    ( (This)->lpVtbl -> Compare(This,pTheirs,MatchType,pbResult) ) 

#define IMFVideoMediaType_GetUINT32(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT32(This,guidKey,punValue) ) 

#define IMFVideoMediaType_GetUINT64(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT64(This,guidKey,punValue) ) 

#define IMFVideoMediaType_GetDouble(This,guidKey,pfValue)	\
    ( (This)->lpVtbl -> GetDouble(This,guidKey,pfValue) ) 

#define IMFVideoMediaType_GetGUID(This,guidKey,pguidValue)	\
    ( (This)->lpVtbl -> GetGUID(This,guidKey,pguidValue) ) 

#define IMFVideoMediaType_GetStringLength(This,guidKey,pcchLength)	\
    ( (This)->lpVtbl -> GetStringLength(This,guidKey,pcchLength) ) 

#define IMFVideoMediaType_GetString(This,guidKey,pwszValue,cchBufSize,pcchLength)	\
    ( (This)->lpVtbl -> GetString(This,guidKey,pwszValue,cchBufSize,pcchLength) ) 

#define IMFVideoMediaType_GetAllocatedString(This,guidKey,ppwszValue,pcchLength)	\
    ( (This)->lpVtbl -> GetAllocatedString(This,guidKey,ppwszValue,pcchLength) ) 

#define IMFVideoMediaType_GetBlobSize(This,guidKey,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlobSize(This,guidKey,pcbBlobSize) ) 

#define IMFVideoMediaType_GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize) ) 

#define IMFVideoMediaType_GetAllocatedBlob(This,guidKey,ppBuf,pcbSize)	\
    ( (This)->lpVtbl -> GetAllocatedBlob(This,guidKey,ppBuf,pcbSize) ) 

#define IMFVideoMediaType_GetUnknown(This,guidKey,riid,ppv)	\
    ( (This)->lpVtbl -> GetUnknown(This,guidKey,riid,ppv) ) 

#define IMFVideoMediaType_SetItem(This,guidKey,Value)	\
    ( (This)->lpVtbl -> SetItem(This,guidKey,Value) ) 

#define IMFVideoMediaType_DeleteItem(This,guidKey)	\
    ( (This)->lpVtbl -> DeleteItem(This,guidKey) ) 

#define IMFVideoMediaType_DeleteAllItems(This)	\
    ( (This)->lpVtbl -> DeleteAllItems(This) ) 

#define IMFVideoMediaType_SetUINT32(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT32(This,guidKey,unValue) ) 

#define IMFVideoMediaType_SetUINT64(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT64(This,guidKey,unValue) ) 

#define IMFVideoMediaType_SetDouble(This,guidKey,fValue)	\
    ( (This)->lpVtbl -> SetDouble(This,guidKey,fValue) ) 

#define IMFVideoMediaType_SetGUID(This,guidKey,guidValue)	\
    ( (This)->lpVtbl -> SetGUID(This,guidKey,guidValue) ) 

#define IMFVideoMediaType_SetString(This,guidKey,wszValue)	\
    ( (This)->lpVtbl -> SetString(This,guidKey,wszValue) ) 

#define IMFVideoMediaType_SetBlob(This,guidKey,pBuf,cbBufSize)	\
    ( (This)->lpVtbl -> SetBlob(This,guidKey,pBuf,cbBufSize) ) 

#define IMFVideoMediaType_SetUnknown(This,guidKey,pUnknown)	\
    ( (This)->lpVtbl -> SetUnknown(This,guidKey,pUnknown) ) 

#define IMFVideoMediaType_LockStore(This)	\
    ( (This)->lpVtbl -> LockStore(This) ) 

#define IMFVideoMediaType_UnlockStore(This)	\
    ( (This)->lpVtbl -> UnlockStore(This) ) 

#define IMFVideoMediaType_GetCount(This,pcItems)	\
    ( (This)->lpVtbl -> GetCount(This,pcItems) ) 

#define IMFVideoMediaType_GetItemByIndex(This,unIndex,pguidKey,pValue)	\
    ( (This)->lpVtbl -> GetItemByIndex(This,unIndex,pguidKey,pValue) ) 

#define IMFVideoMediaType_CopyAllItems(This,pDest)	\
    ( (This)->lpVtbl -> CopyAllItems(This,pDest) ) 


#define IMFVideoMediaType_GetMajorType(This,pguidMajorType)	\
    ( (This)->lpVtbl -> GetMajorType(This,pguidMajorType) ) 

#define IMFVideoMediaType_IsCompressedFormat(This,pfCompressed)	\
    ( (This)->lpVtbl -> IsCompressedFormat(This,pfCompressed) ) 

#define IMFVideoMediaType_IsEqual(This,pIMediaType,pdwFlags)	\
    ( (This)->lpVtbl -> IsEqual(This,pIMediaType,pdwFlags) ) 

#define IMFVideoMediaType_GetRepresentation(This,guidRepresentation,ppvRepresentation)	\
    ( (This)->lpVtbl -> GetRepresentation(This,guidRepresentation,ppvRepresentation) ) 

#define IMFVideoMediaType_FreeRepresentation(This,guidRepresentation,pvRepresentation)	\
    ( (This)->lpVtbl -> FreeRepresentation(This,guidRepresentation,pvRepresentation) ) 


#define IMFVideoMediaType_GetVideoFormat(This)	\
    ( (This)->lpVtbl -> GetVideoFormat(This) ) 

#define IMFVideoMediaType_GetVideoRepresentation(This,guidRepresentation,ppvRepresentation,lStride)	\
    ( (This)->lpVtbl -> GetVideoRepresentation(This,guidRepresentation,ppvRepresentation,lStride) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFVideoMediaType_INTERFACE_DEFINED__ */


#ifndef __IMFAsyncResult_INTERFACE_DEFINED__
#define __IMFAsyncResult_INTERFACE_DEFINED__

/* interface IMFAsyncResult */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFAsyncResult;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ac6b7889-0740-4d51-8619-905994a55cc6")
    IMFAsyncResult : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetState( 
            /* [out] */ __RPC__deref_out_opt IUnknown **ppunkState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStatus( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStatus( 
            /* [in] */ HRESULT hrStatus) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetObject( 
            /* [out] */ __RPC__deref_out_opt IUnknown **ppObject) = 0;
        
        virtual /* [local] */ IUnknown *STDMETHODCALLTYPE GetStateNoAddRef( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFAsyncResultVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFAsyncResult * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFAsyncResult * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFAsyncResult * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            __RPC__in IMFAsyncResult * This,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppunkState);
        
        HRESULT ( STDMETHODCALLTYPE *GetStatus )( 
            __RPC__in IMFAsyncResult * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetStatus )( 
            __RPC__in IMFAsyncResult * This,
            /* [in] */ HRESULT hrStatus);
        
        HRESULT ( STDMETHODCALLTYPE *GetObject )( 
            __RPC__in IMFAsyncResult * This,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppObject);
        
        /* [local] */ IUnknown *( STDMETHODCALLTYPE *GetStateNoAddRef )( 
            IMFAsyncResult * This);
        
        END_INTERFACE
    } IMFAsyncResultVtbl;

    interface IMFAsyncResult
    {
        CONST_VTBL struct IMFAsyncResultVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFAsyncResult_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFAsyncResult_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFAsyncResult_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFAsyncResult_GetState(This,ppunkState)	\
    ( (This)->lpVtbl -> GetState(This,ppunkState) ) 

#define IMFAsyncResult_GetStatus(This)	\
    ( (This)->lpVtbl -> GetStatus(This) ) 

#define IMFAsyncResult_SetStatus(This,hrStatus)	\
    ( (This)->lpVtbl -> SetStatus(This,hrStatus) ) 

#define IMFAsyncResult_GetObject(This,ppObject)	\
    ( (This)->lpVtbl -> GetObject(This,ppObject) ) 

#define IMFAsyncResult_GetStateNoAddRef(This)	\
    ( (This)->lpVtbl -> GetStateNoAddRef(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFAsyncResult_INTERFACE_DEFINED__ */


#ifndef __IMFAsyncCallback_INTERFACE_DEFINED__
#define __IMFAsyncCallback_INTERFACE_DEFINED__

/* interface IMFAsyncCallback */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFAsyncCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a27003cf-2354-4f2a-8d6a-ab7cff15437e")
    IMFAsyncCallback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetParameters( 
            /* [out] */ __RPC__out DWORD *pdwFlags,
            /* [out] */ __RPC__out DWORD *pdwQueue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt IMFAsyncResult *pAsyncResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFAsyncCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFAsyncCallback * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFAsyncCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFAsyncCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetParameters )( 
            __RPC__in IMFAsyncCallback * This,
            /* [out] */ __RPC__out DWORD *pdwFlags,
            /* [out] */ __RPC__out DWORD *pdwQueue);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in IMFAsyncCallback * This,
            /* [in] */ __RPC__in_opt IMFAsyncResult *pAsyncResult);
        
        END_INTERFACE
    } IMFAsyncCallbackVtbl;

    interface IMFAsyncCallback
    {
        CONST_VTBL struct IMFAsyncCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFAsyncCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFAsyncCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFAsyncCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFAsyncCallback_GetParameters(This,pdwFlags,pdwQueue)	\
    ( (This)->lpVtbl -> GetParameters(This,pdwFlags,pdwQueue) ) 

#define IMFAsyncCallback_Invoke(This,pAsyncResult)	\
    ( (This)->lpVtbl -> Invoke(This,pAsyncResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFAsyncCallback_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfobjects_0000_0009 */
/* [local] */ 

#define MFASYNC_FAST_IO_PROCESSING_CALLBACK 0x00000001
#define MFASYNC_SIGNAL_CALLBACK 0x00000002
#define MFASYNC_CALLBACK_QUEUE_UNDEFINED              0x00000000
#define MFASYNC_CALLBACK_QUEUE_STANDARD               0x00000001
#define MFASYNC_CALLBACK_QUEUE_RT                     0x00000002
#define MFASYNC_CALLBACK_QUEUE_IO                     0x00000003
#define MFASYNC_CALLBACK_QUEUE_TIMER                  0x00000004
#define MFASYNC_CALLBACK_QUEUE_LONG_FUNCTION          0x00000007
#define MFASYNC_CALLBACK_QUEUE_PRIVATE_MASK           0xFFFF0000
#define MFASYNC_CALLBACK_QUEUE_ALL                    0xFFFFFFFF

enum __MIDL___MIDL_itf_mfobjects_0000_0009_0001
    {	MEUnknown	= 0,
	MEError	= 1,
	MEExtendedType	= 2,
	MENonFatalError	= 3,
	MEGenericV1Anchor	= MENonFatalError,
	MESessionUnknown	= 100,
	MESessionTopologySet	= 101,
	MESessionTopologiesCleared	= 102,
	MESessionStarted	= 103,
	MESessionPaused	= 104,
	MESessionStopped	= 105,
	MESessionClosed	= 106,
	MESessionEnded	= 107,
	MESessionRateChanged	= 108,
	MESessionScrubSampleComplete	= 109,
	MESessionCapabilitiesChanged	= 110,
	MESessionTopologyStatus	= 111,
	MESessionNotifyPresentationTime	= 112,
	MENewPresentation	= 113,
	MELicenseAcquisitionStart	= 114,
	MELicenseAcquisitionCompleted	= 115,
	MEIndividualizationStart	= 116,
	MEIndividualizationCompleted	= 117,
	MEEnablerProgress	= 118,
	MEEnablerCompleted	= 119,
	MEPolicyError	= 120,
	MEPolicyReport	= 121,
	MEBufferingStarted	= 122,
	MEBufferingStopped	= 123,
	MEConnectStart	= 124,
	MEConnectEnd	= 125,
	MEReconnectStart	= 126,
	MEReconnectEnd	= 127,
	MERendererEvent	= 128,
	MESessionStreamSinkFormatChanged	= 129,
	MESessionV1Anchor	= MESessionStreamSinkFormatChanged,
	MESourceUnknown	= 200,
	MESourceStarted	= 201,
	MEStreamStarted	= 202,
	MESourceSeeked	= 203,
	MEStreamSeeked	= 204,
	MENewStream	= 205,
	MEUpdatedStream	= 206,
	MESourceStopped	= 207,
	MEStreamStopped	= 208,
	MESourcePaused	= 209,
	MEStreamPaused	= 210,
	MEEndOfPresentation	= 211,
	MEEndOfStream	= 212,
	MEMediaSample	= 213,
	MEStreamTick	= 214,
	MEStreamThinMode	= 215,
	MEStreamFormatChanged	= 216,
	MESourceRateChanged	= 217,
	MEEndOfPresentationSegment	= 218,
	MESourceCharacteristicsChanged	= 219,
	MESourceRateChangeRequested	= 220,
	MESourceMetadataChanged	= 221,
	MESequencerSourceTopologyUpdated	= 222,
	MESourceV1Anchor	= MESequencerSourceTopologyUpdated,
	MESinkUnknown	= 300,
	MEStreamSinkStarted	= 301,
	MEStreamSinkStopped	= 302,
	MEStreamSinkPaused	= 303,
	MEStreamSinkRateChanged	= 304,
	MEStreamSinkRequestSample	= 305,
	MEStreamSinkMarker	= 306,
	MEStreamSinkPrerolled	= 307,
	MEStreamSinkScrubSampleComplete	= 308,
	MEStreamSinkFormatChanged	= 309,
	MEStreamSinkDeviceChanged	= 310,
	MEQualityNotify	= 311,
	MESinkInvalidated	= 312,
	MEAudioSessionNameChanged	= 313,
	MEAudioSessionVolumeChanged	= 314,
	MEAudioSessionDeviceRemoved	= 315,
	MEAudioSessionServerShutdown	= 316,
	MEAudioSessionGroupingParamChanged	= 317,
	MEAudioSessionIconChanged	= 318,
	MEAudioSessionFormatChanged	= 319,
	MEAudioSessionDisconnected	= 320,
	MEAudioSessionExclusiveModeOverride	= 321,
	MESinkV1Anchor	= MEAudioSessionExclusiveModeOverride,
	METrustUnknown	= 400,
	MEPolicyChanged	= 401,
	MEContentProtectionMessage	= 402,
	MEPolicySet	= 403,
	METrustV1Anchor	= MEPolicySet,
	MEWMDRMLicenseBackupCompleted	= 500,
	MEWMDRMLicenseBackupProgress	= 501,
	MEWMDRMLicenseRestoreCompleted	= 502,
	MEWMDRMLicenseRestoreProgress	= 503,
	MEWMDRMLicenseAcquisitionCompleted	= 506,
	MEWMDRMIndividualizationCompleted	= 508,
	MEWMDRMIndividualizationProgress	= 513,
	MEWMDRMProximityCompleted	= 514,
	MEWMDRMLicenseStoreCleaned	= 515,
	MEWMDRMRevocationDownloadCompleted	= 516,
	MEWMDRMV1Anchor	= MEWMDRMRevocationDownloadCompleted,
	METransformUnknown	= 600,
	METransformNeedInput	= ( METransformUnknown + 1 ) ,
	METransformHaveOutput	= ( METransformNeedInput + 1 ) ,
	METransformDrainComplete	= ( METransformHaveOutput + 1 ) ,
	METransformMarker	= ( METransformDrainComplete + 1 ) ,
	MEReservedMax	= 10000
    } ;
typedef DWORD MediaEventType;



extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0009_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0009_v0_0_s_ifspec;

#ifndef __IMFMediaEvent_INTERFACE_DEFINED__
#define __IMFMediaEvent_INTERFACE_DEFINED__

/* interface IMFMediaEvent */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFMediaEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DF598932-F10C-4E39-BBA2-C308F101DAA3")
    IMFMediaEvent : public IMFAttributes
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetType( 
            /* [out] */ __RPC__out MediaEventType *pmet) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExtendedType( 
            /* [out] */ __RPC__out GUID *pguidExtendedType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStatus( 
            /* [out] */ __RPC__out HRESULT *phrStatus) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetValue( 
            /* [out] */ __RPC__out PROPVARIANT *pvValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMediaEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFMediaEvent * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFMediaEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFMediaEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemType )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out MF_ATTRIBUTE_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *CompareItem )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value,
            /* [out] */ __RPC__out BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *Compare )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in_opt IMFAttributes *pTheirs,
            MF_ATTRIBUTES_MATCH_TYPE MatchType,
            /* [out] */ __RPC__out BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT64 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetDouble )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out double *pfValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetGUID )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out GUID *pguidValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetString )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,
            UINT32 cchBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,
            /* [out] */ __RPC__out UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlob )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,
            UINT32 cbBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,
            /* [out] */ __RPC__out UINT32 *pcbSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt LPVOID *ppv);
        
        HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( 
            __RPC__in IMFMediaEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            UINT32 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            UINT64 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetDouble )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            double fValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetGUID )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFGUID guidValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetString )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [string][in] */ __RPC__in_string LPCWSTR wszValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetBlob )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][in] */ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,
            UINT32 cbBufSize);
        
        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( 
            __RPC__in IMFMediaEvent * This,
            __RPC__in REFGUID guidKey,
            /* [in] */ __RPC__in_opt IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *LockStore )( 
            __RPC__in IMFMediaEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( 
            __RPC__in IMFMediaEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            __RPC__in IMFMediaEvent * This,
            /* [out] */ __RPC__out UINT32 *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( 
            __RPC__in IMFMediaEvent * This,
            UINT32 unIndex,
            /* [out] */ __RPC__out GUID *pguidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( 
            __RPC__in IMFMediaEvent * This,
            /* [in] */ __RPC__in_opt IMFAttributes *pDest);
        
        HRESULT ( STDMETHODCALLTYPE *GetType )( 
            __RPC__in IMFMediaEvent * This,
            /* [out] */ __RPC__out MediaEventType *pmet);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedType )( 
            __RPC__in IMFMediaEvent * This,
            /* [out] */ __RPC__out GUID *pguidExtendedType);
        
        HRESULT ( STDMETHODCALLTYPE *GetStatus )( 
            __RPC__in IMFMediaEvent * This,
            /* [out] */ __RPC__out HRESULT *phrStatus);
        
        HRESULT ( STDMETHODCALLTYPE *GetValue )( 
            __RPC__in IMFMediaEvent * This,
            /* [out] */ __RPC__out PROPVARIANT *pvValue);
        
        END_INTERFACE
    } IMFMediaEventVtbl;

    interface IMFMediaEvent
    {
        CONST_VTBL struct IMFMediaEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMediaEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMediaEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMediaEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMediaEvent_GetItem(This,guidKey,pValue)	\
    ( (This)->lpVtbl -> GetItem(This,guidKey,pValue) ) 

#define IMFMediaEvent_GetItemType(This,guidKey,pType)	\
    ( (This)->lpVtbl -> GetItemType(This,guidKey,pType) ) 

#define IMFMediaEvent_CompareItem(This,guidKey,Value,pbResult)	\
    ( (This)->lpVtbl -> CompareItem(This,guidKey,Value,pbResult) ) 

#define IMFMediaEvent_Compare(This,pTheirs,MatchType,pbResult)	\
    ( (This)->lpVtbl -> Compare(This,pTheirs,MatchType,pbResult) ) 

#define IMFMediaEvent_GetUINT32(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT32(This,guidKey,punValue) ) 

#define IMFMediaEvent_GetUINT64(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT64(This,guidKey,punValue) ) 

#define IMFMediaEvent_GetDouble(This,guidKey,pfValue)	\
    ( (This)->lpVtbl -> GetDouble(This,guidKey,pfValue) ) 

#define IMFMediaEvent_GetGUID(This,guidKey,pguidValue)	\
    ( (This)->lpVtbl -> GetGUID(This,guidKey,pguidValue) ) 

#define IMFMediaEvent_GetStringLength(This,guidKey,pcchLength)	\
    ( (This)->lpVtbl -> GetStringLength(This,guidKey,pcchLength) ) 

#define IMFMediaEvent_GetString(This,guidKey,pwszValue,cchBufSize,pcchLength)	\
    ( (This)->lpVtbl -> GetString(This,guidKey,pwszValue,cchBufSize,pcchLength) ) 

#define IMFMediaEvent_GetAllocatedString(This,guidKey,ppwszValue,pcchLength)	\
    ( (This)->lpVtbl -> GetAllocatedString(This,guidKey,ppwszValue,pcchLength) ) 

#define IMFMediaEvent_GetBlobSize(This,guidKey,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlobSize(This,guidKey,pcbBlobSize) ) 

#define IMFMediaEvent_GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize) ) 

#define IMFMediaEvent_GetAllocatedBlob(This,guidKey,ppBuf,pcbSize)	\
    ( (This)->lpVtbl -> GetAllocatedBlob(This,guidKey,ppBuf,pcbSize) ) 

#define IMFMediaEvent_GetUnknown(This,guidKey,riid,ppv)	\
    ( (This)->lpVtbl -> GetUnknown(This,guidKey,riid,ppv) ) 

#define IMFMediaEvent_SetItem(This,guidKey,Value)	\
    ( (This)->lpVtbl -> SetItem(This,guidKey,Value) ) 

#define IMFMediaEvent_DeleteItem(This,guidKey)	\
    ( (This)->lpVtbl -> DeleteItem(This,guidKey) ) 

#define IMFMediaEvent_DeleteAllItems(This)	\
    ( (This)->lpVtbl -> DeleteAllItems(This) ) 

#define IMFMediaEvent_SetUINT32(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT32(This,guidKey,unValue) ) 

#define IMFMediaEvent_SetUINT64(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT64(This,guidKey,unValue) ) 

#define IMFMediaEvent_SetDouble(This,guidKey,fValue)	\
    ( (This)->lpVtbl -> SetDouble(This,guidKey,fValue) ) 

#define IMFMediaEvent_SetGUID(This,guidKey,guidValue)	\
    ( (This)->lpVtbl -> SetGUID(This,guidKey,guidValue) ) 

#define IMFMediaEvent_SetString(This,guidKey,wszValue)	\
    ( (This)->lpVtbl -> SetString(This,guidKey,wszValue) ) 

#define IMFMediaEvent_SetBlob(This,guidKey,pBuf,cbBufSize)	\
    ( (This)->lpVtbl -> SetBlob(This,guidKey,pBuf,cbBufSize) ) 

#define IMFMediaEvent_SetUnknown(This,guidKey,pUnknown)	\
    ( (This)->lpVtbl -> SetUnknown(This,guidKey,pUnknown) ) 

#define IMFMediaEvent_LockStore(This)	\
    ( (This)->lpVtbl -> LockStore(This) ) 

#define IMFMediaEvent_UnlockStore(This)	\
    ( (This)->lpVtbl -> UnlockStore(This) ) 

#define IMFMediaEvent_GetCount(This,pcItems)	\
    ( (This)->lpVtbl -> GetCount(This,pcItems) ) 

#define IMFMediaEvent_GetItemByIndex(This,unIndex,pguidKey,pValue)	\
    ( (This)->lpVtbl -> GetItemByIndex(This,unIndex,pguidKey,pValue) ) 

#define IMFMediaEvent_CopyAllItems(This,pDest)	\
    ( (This)->lpVtbl -> CopyAllItems(This,pDest) ) 


#define IMFMediaEvent_GetType(This,pmet)	\
    ( (This)->lpVtbl -> GetType(This,pmet) ) 

#define IMFMediaEvent_GetExtendedType(This,pguidExtendedType)	\
    ( (This)->lpVtbl -> GetExtendedType(This,pguidExtendedType) ) 

#define IMFMediaEvent_GetStatus(This,phrStatus)	\
    ( (This)->lpVtbl -> GetStatus(This,phrStatus) ) 

#define IMFMediaEvent_GetValue(This,pvValue)	\
    ( (This)->lpVtbl -> GetValue(This,pvValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFMediaEvent_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfobjects_0000_0010 */
/* [local] */ 

#define MF_EVENT_FLAG_NO_WAIT 0x00000001



extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0010_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0010_v0_0_s_ifspec;

#ifndef __IMFMediaEventGenerator_INTERFACE_DEFINED__
#define __IMFMediaEventGenerator_INTERFACE_DEFINED__

/* interface IMFMediaEventGenerator */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFMediaEventGenerator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2CD0BD52-BCD5-4B89-B62C-EADC0C031E7D")
    IMFMediaEventGenerator : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEvent( 
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IMFMediaEvent **ppEvent) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE BeginGetEvent( 
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE EndGetEvent( 
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  IMFMediaEvent **ppEvent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueueEvent( 
            /* [in] */ MediaEventType met,
            /* [in] */ __RPC__in REFGUID guidExtendedType,
            /* [in] */ HRESULT hrStatus,
            /* [unique][in] */ __RPC__in_opt const PROPVARIANT *pvValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMediaEventGeneratorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFMediaEventGenerator * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFMediaEventGenerator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFMediaEventGenerator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEvent )( 
            __RPC__in IMFMediaEventGenerator * This,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IMFMediaEvent **ppEvent);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( 
            IMFMediaEventGenerator * This,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( 
            IMFMediaEventGenerator * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  IMFMediaEvent **ppEvent);
        
        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( 
            __RPC__in IMFMediaEventGenerator * This,
            /* [in] */ MediaEventType met,
            /* [in] */ __RPC__in REFGUID guidExtendedType,
            /* [in] */ HRESULT hrStatus,
            /* [unique][in] */ __RPC__in_opt const PROPVARIANT *pvValue);
        
        END_INTERFACE
    } IMFMediaEventGeneratorVtbl;

    interface IMFMediaEventGenerator
    {
        CONST_VTBL struct IMFMediaEventGeneratorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMediaEventGenerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMediaEventGenerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMediaEventGenerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMediaEventGenerator_GetEvent(This,dwFlags,ppEvent)	\
    ( (This)->lpVtbl -> GetEvent(This,dwFlags,ppEvent) ) 

#define IMFMediaEventGenerator_BeginGetEvent(This,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginGetEvent(This,pCallback,punkState) ) 

#define IMFMediaEventGenerator_EndGetEvent(This,pResult,ppEvent)	\
    ( (This)->lpVtbl -> EndGetEvent(This,pResult,ppEvent) ) 

#define IMFMediaEventGenerator_QueueEvent(This,met,guidExtendedType,hrStatus,pvValue)	\
    ( (This)->lpVtbl -> QueueEvent(This,met,guidExtendedType,hrStatus,pvValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFMediaEventGenerator_RemoteBeginGetEvent_Proxy( 
    __RPC__in IMFMediaEventGenerator * This,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);


void __RPC_STUB IMFMediaEventGenerator_RemoteBeginGetEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFMediaEventGenerator_RemoteEndGetEvent_Proxy( 
    __RPC__in IMFMediaEventGenerator * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult,
    /* [out] */ __RPC__out DWORD *pcbEvent,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbEvent) BYTE **ppbEvent);


void __RPC_STUB IMFMediaEventGenerator_RemoteEndGetEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMFMediaEventGenerator_INTERFACE_DEFINED__ */


#ifndef __IMFRemoteAsyncCallback_INTERFACE_DEFINED__
#define __IMFRemoteAsyncCallback_INTERFACE_DEFINED__

/* interface IMFRemoteAsyncCallback */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFRemoteAsyncCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a27003d0-2354-4f2a-8d6a-ab7cff15437e")
    IMFRemoteAsyncCallback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ HRESULT hr,
            /* [in] */ __RPC__in_opt IUnknown *pRemoteResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFRemoteAsyncCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFRemoteAsyncCallback * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFRemoteAsyncCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFRemoteAsyncCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in IMFRemoteAsyncCallback * This,
            /* [in] */ HRESULT hr,
            /* [in] */ __RPC__in_opt IUnknown *pRemoteResult);
        
        END_INTERFACE
    } IMFRemoteAsyncCallbackVtbl;

    interface IMFRemoteAsyncCallback
    {
        CONST_VTBL struct IMFRemoteAsyncCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFRemoteAsyncCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFRemoteAsyncCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFRemoteAsyncCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFRemoteAsyncCallback_Invoke(This,hr,pRemoteResult)	\
    ( (This)->lpVtbl -> Invoke(This,hr,pRemoteResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFRemoteAsyncCallback_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfobjects_0000_0012 */
/* [local] */ 

typedef 
enum _MFBYTESTREAM_SEEK_ORIGIN
    {	msoBegin	= 0,
	msoCurrent	= ( msoBegin + 1 ) 
    } 	MFBYTESTREAM_SEEK_ORIGIN;



extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0012_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0012_v0_0_s_ifspec;

#ifndef __IMFByteStream_INTERFACE_DEFINED__
#define __IMFByteStream_INTERFACE_DEFINED__

/* interface IMFByteStream */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFByteStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ad4c1b00-4bf7-422f-9175-756693d9130d")
    IMFByteStream : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCapabilities( 
            /* [out] */ __RPC__out DWORD *pdwCapabilities) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLength( 
            /* [out] */ __RPC__out QWORD *pqwLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetLength( 
            /* [in] */ QWORD qwLength) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentPosition( 
            /* [out] */ __RPC__out QWORD *pqwPosition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCurrentPosition( 
            /* [in] */ QWORD qwPosition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsEndOfStream( 
            /* [out] */ __RPC__out BOOL *pfEndOfStream) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE Read( 
            /* [annotation][in] */ 
            __out_bcount_part(cb, *pcbRead)  BYTE *pb,
            /* [in] */ ULONG cb,
            /* [annotation][out] */ 
            __out  ULONG *pcbRead) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE BeginRead( 
            /* [annotation][in] */ 
            __out_bcount(cb)  BYTE *pb,
            /* [in] */ ULONG cb,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE EndRead( 
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  ULONG *pcbRead) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE Write( 
            /* [annotation][in] */ 
            __in_bcount(cb)  const BYTE *pb,
            /* [in] */ ULONG cb,
            /* [annotation][out] */ 
            __out __deref_out_range(<=, cb)  ULONG *pcbWritten) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE BeginWrite( 
            /* [annotation][in] */ 
            __in_bcount(cb)  const BYTE *pb,
            /* [in] */ ULONG cb,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE EndWrite( 
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  ULONG *pcbWritten) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE Seek( 
            /* [in] */ MFBYTESTREAM_SEEK_ORIGIN SeekOrigin,
            /* [in] */ LONGLONG llSeekOffset,
            /* [in] */ DWORD dwSeekFlags,
            /* [annotation][out] */ 
            __out_opt  QWORD *pqwCurrentPosition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Flush( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFByteStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFByteStream * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFByteStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFByteStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCapabilities )( 
            __RPC__in IMFByteStream * This,
            /* [out] */ __RPC__out DWORD *pdwCapabilities);
        
        HRESULT ( STDMETHODCALLTYPE *GetLength )( 
            __RPC__in IMFByteStream * This,
            /* [out] */ __RPC__out QWORD *pqwLength);
        
        HRESULT ( STDMETHODCALLTYPE *SetLength )( 
            __RPC__in IMFByteStream * This,
            /* [in] */ QWORD qwLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentPosition )( 
            __RPC__in IMFByteStream * This,
            /* [out] */ __RPC__out QWORD *pqwPosition);
        
        HRESULT ( STDMETHODCALLTYPE *SetCurrentPosition )( 
            __RPC__in IMFByteStream * This,
            /* [in] */ QWORD qwPosition);
        
        HRESULT ( STDMETHODCALLTYPE *IsEndOfStream )( 
            __RPC__in IMFByteStream * This,
            /* [out] */ __RPC__out BOOL *pfEndOfStream);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Read )( 
            IMFByteStream * This,
            /* [annotation][in] */ 
            __out_bcount_part(cb, *pcbRead)  BYTE *pb,
            /* [in] */ ULONG cb,
            /* [annotation][out] */ 
            __out  ULONG *pcbRead);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BeginRead )( 
            IMFByteStream * This,
            /* [annotation][in] */ 
            __out_bcount(cb)  BYTE *pb,
            /* [in] */ ULONG cb,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *EndRead )( 
            IMFByteStream * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  ULONG *pcbRead);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Write )( 
            IMFByteStream * This,
            /* [annotation][in] */ 
            __in_bcount(cb)  const BYTE *pb,
            /* [in] */ ULONG cb,
            /* [annotation][out] */ 
            __out __deref_out_range(<=, cb)  ULONG *pcbWritten);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BeginWrite )( 
            IMFByteStream * This,
            /* [annotation][in] */ 
            __in_bcount(cb)  const BYTE *pb,
            /* [in] */ ULONG cb,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *EndWrite )( 
            IMFByteStream * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  ULONG *pcbWritten);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Seek )( 
            IMFByteStream * This,
            /* [in] */ MFBYTESTREAM_SEEK_ORIGIN SeekOrigin,
            /* [in] */ LONGLONG llSeekOffset,
            /* [in] */ DWORD dwSeekFlags,
            /* [annotation][out] */ 
            __out_opt  QWORD *pqwCurrentPosition);
        
        HRESULT ( STDMETHODCALLTYPE *Flush )( 
            __RPC__in IMFByteStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *Close )( 
            __RPC__in IMFByteStream * This);
        
        END_INTERFACE
    } IMFByteStreamVtbl;

    interface IMFByteStream
    {
        CONST_VTBL struct IMFByteStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFByteStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFByteStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFByteStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFByteStream_GetCapabilities(This,pdwCapabilities)	\
    ( (This)->lpVtbl -> GetCapabilities(This,pdwCapabilities) ) 

#define IMFByteStream_GetLength(This,pqwLength)	\
    ( (This)->lpVtbl -> GetLength(This,pqwLength) ) 

#define IMFByteStream_SetLength(This,qwLength)	\
    ( (This)->lpVtbl -> SetLength(This,qwLength) ) 

#define IMFByteStream_GetCurrentPosition(This,pqwPosition)	\
    ( (This)->lpVtbl -> GetCurrentPosition(This,pqwPosition) ) 

#define IMFByteStream_SetCurrentPosition(This,qwPosition)	\
    ( (This)->lpVtbl -> SetCurrentPosition(This,qwPosition) ) 

#define IMFByteStream_IsEndOfStream(This,pfEndOfStream)	\
    ( (This)->lpVtbl -> IsEndOfStream(This,pfEndOfStream) ) 

#define IMFByteStream_Read(This,pb,cb,pcbRead)	\
    ( (This)->lpVtbl -> Read(This,pb,cb,pcbRead) ) 

#define IMFByteStream_BeginRead(This,pb,cb,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginRead(This,pb,cb,pCallback,punkState) ) 

#define IMFByteStream_EndRead(This,pResult,pcbRead)	\
    ( (This)->lpVtbl -> EndRead(This,pResult,pcbRead) ) 

#define IMFByteStream_Write(This,pb,cb,pcbWritten)	\
    ( (This)->lpVtbl -> Write(This,pb,cb,pcbWritten) ) 

#define IMFByteStream_BeginWrite(This,pb,cb,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginWrite(This,pb,cb,pCallback,punkState) ) 

#define IMFByteStream_EndWrite(This,pResult,pcbWritten)	\
    ( (This)->lpVtbl -> EndWrite(This,pResult,pcbWritten) ) 

#define IMFByteStream_Seek(This,SeekOrigin,llSeekOffset,dwSeekFlags,pqwCurrentPosition)	\
    ( (This)->lpVtbl -> Seek(This,SeekOrigin,llSeekOffset,dwSeekFlags,pqwCurrentPosition) ) 

#define IMFByteStream_Flush(This)	\
    ( (This)->lpVtbl -> Flush(This) ) 

#define IMFByteStream_Close(This)	\
    ( (This)->lpVtbl -> Close(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFByteStream_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfobjects_0000_0013 */
/* [local] */ 

#define MFBYTESTREAM_IS_READABLE                0x00000001
#define MFBYTESTREAM_IS_WRITABLE                0x00000002
#define MFBYTESTREAM_IS_SEEKABLE                0x00000004
#define MFBYTESTREAM_IS_REMOTE                  0x00000008
#define MFBYTESTREAM_IS_DIRECTORY               0x00000080
#define MFBYTESTREAM_HAS_SLOW_SEEK              0x00000100
#define MFBYTESTREAM_IS_PARTIALLY_DOWNLOADED    0x00000200
#if (WINVER >= _WIN32_WINNT_WIN7) 
#define MFBYTESTREAM_SHARE_WRITE                0x00000400
#endif // (WINVER >= _WIN32_WINNT_WIN7) 
#define MFBYTESTREAM_SEEK_FLAG_CANCEL_PENDING_IO 0x00000001
EXTERN_GUID( MF_BYTESTREAM_ORIGIN_NAME, 0xfc358288, 0x3cb6, 0x460c, 0xa4, 0x24, 0xb6, 0x68, 0x12, 0x60, 0x37, 0x5a);
EXTERN_GUID( MF_BYTESTREAM_CONTENT_TYPE, 0xfc358289, 0x3cb6, 0x460c, 0xa4, 0x24, 0xb6, 0x68, 0x12, 0x60, 0x37, 0x5a);
EXTERN_GUID( MF_BYTESTREAM_DURATION, 0xfc35828a, 0x3cb6, 0x460c, 0xa4, 0x24, 0xb6, 0x68, 0x12, 0x60, 0x37, 0x5a);
EXTERN_GUID( MF_BYTESTREAM_LAST_MODIFIED_TIME, 0xfc35828b, 0x3cb6, 0x460c, 0xa4, 0x24, 0xb6, 0x68, 0x12, 0x60, 0x37, 0x5a);
#if (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_GUID( MF_BYTESTREAM_IFO_FILE_URI, 0xfc35828c, 0x3cb6, 0x460c, 0xa4, 0x24, 0xb6, 0x68, 0x12, 0x60, 0x37, 0x5a);
EXTERN_GUID( MF_BYTESTREAM_DLNA_PROFILE_ID, 0xfc35828d, 0x3cb6, 0x460c, 0xa4, 0x24, 0xb6, 0x68, 0x12, 0x60, 0x37, 0x5a);
#endif // (WINVER >= _WIN32_WINNT_WIN7) 
typedef /* [public] */ 
enum __MIDL___MIDL_itf_mfobjects_0000_0013_0001
    {	MF_ACCESSMODE_READ	= 1,
	MF_ACCESSMODE_WRITE	= 2,
	MF_ACCESSMODE_READWRITE	= 3
    } 	MF_FILE_ACCESSMODE;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_mfobjects_0000_0013_0002
    {	MF_OPENMODE_FAIL_IF_NOT_EXIST	= 0,
	MF_OPENMODE_FAIL_IF_EXIST	= 1,
	MF_OPENMODE_RESET_IF_EXIST	= 2,
	MF_OPENMODE_APPEND_IF_EXIST	= 3,
	MF_OPENMODE_DELETE_IF_EXIST	= 4
    } 	MF_FILE_OPENMODE;

typedef /* [public] */ 
enum __MIDL___MIDL_itf_mfobjects_0000_0013_0003
    {	MF_FILEFLAGS_NONE	= 0,
	MF_FILEFLAGS_NOBUFFERING	= 0x1,
	MF_FILEFLAGS_ALLOW_WRITE_SHARING	= 0x2
    } 	MF_FILE_FLAGS;



extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0013_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0013_v0_0_s_ifspec;

#ifndef __IMFCollection_INTERFACE_DEFINED__
#define __IMFCollection_INTERFACE_DEFINED__

/* interface IMFCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5BC8A76B-869A-46a3-9B03-FA218A66AEBE")
    IMFCollection : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetElementCount( 
            /* [out] */ __RPC__out DWORD *pcElements) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElement( 
            /* [in] */ DWORD dwElementIndex,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppUnkElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddElement( 
            /* [in] */ __RPC__in_opt IUnknown *pUnkElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveElement( 
            /* [in] */ DWORD dwElementIndex,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppUnkElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertElementAt( 
            /* [in] */ DWORD dwIndex,
            /* [in] */ __RPC__in_opt IUnknown *pUnknown) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAllElements( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetElementCount )( 
            __RPC__in IMFCollection * This,
            /* [out] */ __RPC__out DWORD *pcElements);
        
        HRESULT ( STDMETHODCALLTYPE *GetElement )( 
            __RPC__in IMFCollection * This,
            /* [in] */ DWORD dwElementIndex,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppUnkElement);
        
        HRESULT ( STDMETHODCALLTYPE *AddElement )( 
            __RPC__in IMFCollection * This,
            /* [in] */ __RPC__in_opt IUnknown *pUnkElement);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveElement )( 
            __RPC__in IMFCollection * This,
            /* [in] */ DWORD dwElementIndex,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppUnkElement);
        
        HRESULT ( STDMETHODCALLTYPE *InsertElementAt )( 
            __RPC__in IMFCollection * This,
            /* [in] */ DWORD dwIndex,
            /* [in] */ __RPC__in_opt IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAllElements )( 
            __RPC__in IMFCollection * This);
        
        END_INTERFACE
    } IMFCollectionVtbl;

    interface IMFCollection
    {
        CONST_VTBL struct IMFCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFCollection_GetElementCount(This,pcElements)	\
    ( (This)->lpVtbl -> GetElementCount(This,pcElements) ) 

#define IMFCollection_GetElement(This,dwElementIndex,ppUnkElement)	\
    ( (This)->lpVtbl -> GetElement(This,dwElementIndex,ppUnkElement) ) 

#define IMFCollection_AddElement(This,pUnkElement)	\
    ( (This)->lpVtbl -> AddElement(This,pUnkElement) ) 

#define IMFCollection_RemoveElement(This,dwElementIndex,ppUnkElement)	\
    ( (This)->lpVtbl -> RemoveElement(This,dwElementIndex,ppUnkElement) ) 

#define IMFCollection_InsertElementAt(This,dwIndex,pUnknown)	\
    ( (This)->lpVtbl -> InsertElementAt(This,dwIndex,pUnknown) ) 

#define IMFCollection_RemoveAllElements(This)	\
    ( (This)->lpVtbl -> RemoveAllElements(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFCollection_INTERFACE_DEFINED__ */


#ifndef __IMFMediaEventQueue_INTERFACE_DEFINED__
#define __IMFMediaEventQueue_INTERFACE_DEFINED__

/* interface IMFMediaEventQueue */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFMediaEventQueue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("36f846fc-2256-48b6-b58e-e2b638316581")
    IMFMediaEventQueue : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEvent( 
            /* [in] */ DWORD dwFlags,
            /* [annotation][out] */ 
            __out  IMFMediaEvent **ppEvent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BeginGetEvent( 
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndGetEvent( 
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  IMFMediaEvent **ppEvent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueueEvent( 
            /* [in] */ IMFMediaEvent *pEvent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueueEventParamVar( 
            /* [in] */ MediaEventType met,
            /* [in] */ REFGUID guidExtendedType,
            /* [in] */ HRESULT hrStatus,
            /* [unique][in] */ const PROPVARIANT *pvValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueueEventParamUnk( 
            /* [in] */ MediaEventType met,
            /* [in] */ REFGUID guidExtendedType,
            /* [in] */ HRESULT hrStatus,
            /* [unique][in] */ IUnknown *pUnk) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Shutdown( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMediaEventQueueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFMediaEventQueue * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFMediaEventQueue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFMediaEventQueue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEvent )( 
            IMFMediaEventQueue * This,
            /* [in] */ DWORD dwFlags,
            /* [annotation][out] */ 
            __out  IMFMediaEvent **ppEvent);
        
        HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( 
            IMFMediaEventQueue * This,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( 
            IMFMediaEventQueue * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  IMFMediaEvent **ppEvent);
        
        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( 
            IMFMediaEventQueue * This,
            /* [in] */ IMFMediaEvent *pEvent);
        
        HRESULT ( STDMETHODCALLTYPE *QueueEventParamVar )( 
            IMFMediaEventQueue * This,
            /* [in] */ MediaEventType met,
            /* [in] */ REFGUID guidExtendedType,
            /* [in] */ HRESULT hrStatus,
            /* [unique][in] */ const PROPVARIANT *pvValue);
        
        HRESULT ( STDMETHODCALLTYPE *QueueEventParamUnk )( 
            IMFMediaEventQueue * This,
            /* [in] */ MediaEventType met,
            /* [in] */ REFGUID guidExtendedType,
            /* [in] */ HRESULT hrStatus,
            /* [unique][in] */ IUnknown *pUnk);
        
        HRESULT ( STDMETHODCALLTYPE *Shutdown )( 
            IMFMediaEventQueue * This);
        
        END_INTERFACE
    } IMFMediaEventQueueVtbl;

    interface IMFMediaEventQueue
    {
        CONST_VTBL struct IMFMediaEventQueueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMediaEventQueue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMediaEventQueue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMediaEventQueue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMediaEventQueue_GetEvent(This,dwFlags,ppEvent)	\
    ( (This)->lpVtbl -> GetEvent(This,dwFlags,ppEvent) ) 

#define IMFMediaEventQueue_BeginGetEvent(This,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginGetEvent(This,pCallback,punkState) ) 

#define IMFMediaEventQueue_EndGetEvent(This,pResult,ppEvent)	\
    ( (This)->lpVtbl -> EndGetEvent(This,pResult,ppEvent) ) 

#define IMFMediaEventQueue_QueueEvent(This,pEvent)	\
    ( (This)->lpVtbl -> QueueEvent(This,pEvent) ) 

#define IMFMediaEventQueue_QueueEventParamVar(This,met,guidExtendedType,hrStatus,pvValue)	\
    ( (This)->lpVtbl -> QueueEventParamVar(This,met,guidExtendedType,hrStatus,pvValue) ) 

#define IMFMediaEventQueue_QueueEventParamUnk(This,met,guidExtendedType,hrStatus,pUnk)	\
    ( (This)->lpVtbl -> QueueEventParamUnk(This,met,guidExtendedType,hrStatus,pUnk) ) 

#define IMFMediaEventQueue_Shutdown(This)	\
    ( (This)->lpVtbl -> Shutdown(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFMediaEventQueue_INTERFACE_DEFINED__ */


#ifndef __IMFActivate_INTERFACE_DEFINED__
#define __IMFActivate_INTERFACE_DEFINED__

/* interface IMFActivate */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMFActivate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7FEE9E9A-4A89-47a6-899C-B6A53A70FB67")
    IMFActivate : public IMFAttributes
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ActivateObject( 
            /* [in] */ __RPC__in REFIID riid,
            /* [retval][iid_is][out] */ __RPC__deref_out_opt void **ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ShutdownObject( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DetachObject( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFActivateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFActivate * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFActivate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFActivate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemType )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out MF_ATTRIBUTE_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *CompareItem )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value,
            /* [out] */ __RPC__out BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *Compare )( 
            __RPC__in IMFActivate * This,
            __RPC__in_opt IMFAttributes *pTheirs,
            MF_ATTRIBUTES_MATCH_TYPE MatchType,
            /* [out] */ __RPC__out BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT64 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetDouble )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out double *pfValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetGUID )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out GUID *pguidValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetString )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,
            UINT32 cchBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,
            /* [out] */ __RPC__out UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlob )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,
            UINT32 cbBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,
            /* [out] */ __RPC__out UINT32 *pcbSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt LPVOID *ppv);
        
        HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( 
            __RPC__in IMFActivate * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            UINT32 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            UINT64 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetDouble )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            double fValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetGUID )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFGUID guidValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetString )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [string][in] */ __RPC__in_string LPCWSTR wszValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetBlob )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][in] */ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,
            UINT32 cbBufSize);
        
        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( 
            __RPC__in IMFActivate * This,
            __RPC__in REFGUID guidKey,
            /* [in] */ __RPC__in_opt IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *LockStore )( 
            __RPC__in IMFActivate * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( 
            __RPC__in IMFActivate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            __RPC__in IMFActivate * This,
            /* [out] */ __RPC__out UINT32 *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( 
            __RPC__in IMFActivate * This,
            UINT32 unIndex,
            /* [out] */ __RPC__out GUID *pguidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( 
            __RPC__in IMFActivate * This,
            /* [in] */ __RPC__in_opt IMFAttributes *pDest);
        
        HRESULT ( STDMETHODCALLTYPE *ActivateObject )( 
            __RPC__in IMFActivate * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [retval][iid_is][out] */ __RPC__deref_out_opt void **ppv);
        
        HRESULT ( STDMETHODCALLTYPE *ShutdownObject )( 
            __RPC__in IMFActivate * This);
        
        HRESULT ( STDMETHODCALLTYPE *DetachObject )( 
            __RPC__in IMFActivate * This);
        
        END_INTERFACE
    } IMFActivateVtbl;

    interface IMFActivate
    {
        CONST_VTBL struct IMFActivateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFActivate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFActivate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFActivate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFActivate_GetItem(This,guidKey,pValue)	\
    ( (This)->lpVtbl -> GetItem(This,guidKey,pValue) ) 

#define IMFActivate_GetItemType(This,guidKey,pType)	\
    ( (This)->lpVtbl -> GetItemType(This,guidKey,pType) ) 

#define IMFActivate_CompareItem(This,guidKey,Value,pbResult)	\
    ( (This)->lpVtbl -> CompareItem(This,guidKey,Value,pbResult) ) 

#define IMFActivate_Compare(This,pTheirs,MatchType,pbResult)	\
    ( (This)->lpVtbl -> Compare(This,pTheirs,MatchType,pbResult) ) 

#define IMFActivate_GetUINT32(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT32(This,guidKey,punValue) ) 

#define IMFActivate_GetUINT64(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT64(This,guidKey,punValue) ) 

#define IMFActivate_GetDouble(This,guidKey,pfValue)	\
    ( (This)->lpVtbl -> GetDouble(This,guidKey,pfValue) ) 

#define IMFActivate_GetGUID(This,guidKey,pguidValue)	\
    ( (This)->lpVtbl -> GetGUID(This,guidKey,pguidValue) ) 

#define IMFActivate_GetStringLength(This,guidKey,pcchLength)	\
    ( (This)->lpVtbl -> GetStringLength(This,guidKey,pcchLength) ) 

#define IMFActivate_GetString(This,guidKey,pwszValue,cchBufSize,pcchLength)	\
    ( (This)->lpVtbl -> GetString(This,guidKey,pwszValue,cchBufSize,pcchLength) ) 

#define IMFActivate_GetAllocatedString(This,guidKey,ppwszValue,pcchLength)	\
    ( (This)->lpVtbl -> GetAllocatedString(This,guidKey,ppwszValue,pcchLength) ) 

#define IMFActivate_GetBlobSize(This,guidKey,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlobSize(This,guidKey,pcbBlobSize) ) 

#define IMFActivate_GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize) ) 

#define IMFActivate_GetAllocatedBlob(This,guidKey,ppBuf,pcbSize)	\
    ( (This)->lpVtbl -> GetAllocatedBlob(This,guidKey,ppBuf,pcbSize) ) 

#define IMFActivate_GetUnknown(This,guidKey,riid,ppv)	\
    ( (This)->lpVtbl -> GetUnknown(This,guidKey,riid,ppv) ) 

#define IMFActivate_SetItem(This,guidKey,Value)	\
    ( (This)->lpVtbl -> SetItem(This,guidKey,Value) ) 

#define IMFActivate_DeleteItem(This,guidKey)	\
    ( (This)->lpVtbl -> DeleteItem(This,guidKey) ) 

#define IMFActivate_DeleteAllItems(This)	\
    ( (This)->lpVtbl -> DeleteAllItems(This) ) 

#define IMFActivate_SetUINT32(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT32(This,guidKey,unValue) ) 

#define IMFActivate_SetUINT64(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT64(This,guidKey,unValue) ) 

#define IMFActivate_SetDouble(This,guidKey,fValue)	\
    ( (This)->lpVtbl -> SetDouble(This,guidKey,fValue) ) 

#define IMFActivate_SetGUID(This,guidKey,guidValue)	\
    ( (This)->lpVtbl -> SetGUID(This,guidKey,guidValue) ) 

#define IMFActivate_SetString(This,guidKey,wszValue)	\
    ( (This)->lpVtbl -> SetString(This,guidKey,wszValue) ) 

#define IMFActivate_SetBlob(This,guidKey,pBuf,cbBufSize)	\
    ( (This)->lpVtbl -> SetBlob(This,guidKey,pBuf,cbBufSize) ) 

#define IMFActivate_SetUnknown(This,guidKey,pUnknown)	\
    ( (This)->lpVtbl -> SetUnknown(This,guidKey,pUnknown) ) 

#define IMFActivate_LockStore(This)	\
    ( (This)->lpVtbl -> LockStore(This) ) 

#define IMFActivate_UnlockStore(This)	\
    ( (This)->lpVtbl -> UnlockStore(This) ) 

#define IMFActivate_GetCount(This,pcItems)	\
    ( (This)->lpVtbl -> GetCount(This,pcItems) ) 

#define IMFActivate_GetItemByIndex(This,unIndex,pguidKey,pValue)	\
    ( (This)->lpVtbl -> GetItemByIndex(This,unIndex,pguidKey,pValue) ) 

#define IMFActivate_CopyAllItems(This,pDest)	\
    ( (This)->lpVtbl -> CopyAllItems(This,pDest) ) 


#define IMFActivate_ActivateObject(This,riid,ppv)	\
    ( (This)->lpVtbl -> ActivateObject(This,riid,ppv) ) 

#define IMFActivate_ShutdownObject(This)	\
    ( (This)->lpVtbl -> ShutdownObject(This) ) 

#define IMFActivate_DetachObject(This)	\
    ( (This)->lpVtbl -> DetachObject(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFActivate_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfobjects_0000_0016 */
/* [local] */ 

#if (WINVER >= _WIN32_WINNT_WIN7) 
typedef 
enum _MF_Plugin_Type
    {	MF_Plugin_Type_MFT	= 0,
	MF_Plugin_Type_MediaSource	= 1
    } 	MF_Plugin_Type;



extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0016_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0016_v0_0_s_ifspec;

#ifndef __IMFPluginControl_INTERFACE_DEFINED__
#define __IMFPluginControl_INTERFACE_DEFINED__

/* interface IMFPluginControl */
/* [unique][helpstring][uuid][local][object] */ 


EXTERN_C const IID IID_IMFPluginControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5c6c44bf-1db6-435b-9249-e8cd10fdec96")
    IMFPluginControl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPreferredClsid( 
            DWORD pluginType,
            /* [annotation] */ 
            __in  LPCWSTR selector,
            /* [annotation] */ 
            __out  CLSID *clsid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPreferredClsidByIndex( 
            DWORD pluginType,
            DWORD index,
            /* [annotation] */ 
            __out  LPWSTR *selector,
            /* [annotation] */ 
            __out  CLSID *clsid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPreferredClsid( 
            DWORD pluginType,
            /* [annotation] */ 
            __in  LPCWSTR selector,
            /* [annotation] */ 
            __in_opt  const CLSID *clsid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsDisabled( 
            DWORD pluginType,
            REFCLSID clsid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisabledByIndex( 
            DWORD pluginType,
            DWORD index,
            /* [annotation] */ 
            __out  CLSID *clsid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDisabled( 
            DWORD pluginType,
            REFCLSID clsid,
            BOOL disabled) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFPluginControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFPluginControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFPluginControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFPluginControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetPreferredClsid )( 
            IMFPluginControl * This,
            DWORD pluginType,
            /* [annotation] */ 
            __in  LPCWSTR selector,
            /* [annotation] */ 
            __out  CLSID *clsid);
        
        HRESULT ( STDMETHODCALLTYPE *GetPreferredClsidByIndex )( 
            IMFPluginControl * This,
            DWORD pluginType,
            DWORD index,
            /* [annotation] */ 
            __out  LPWSTR *selector,
            /* [annotation] */ 
            __out  CLSID *clsid);
        
        HRESULT ( STDMETHODCALLTYPE *SetPreferredClsid )( 
            IMFPluginControl * This,
            DWORD pluginType,
            /* [annotation] */ 
            __in  LPCWSTR selector,
            /* [annotation] */ 
            __in_opt  const CLSID *clsid);
        
        HRESULT ( STDMETHODCALLTYPE *IsDisabled )( 
            IMFPluginControl * This,
            DWORD pluginType,
            REFCLSID clsid);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisabledByIndex )( 
            IMFPluginControl * This,
            DWORD pluginType,
            DWORD index,
            /* [annotation] */ 
            __out  CLSID *clsid);
        
        HRESULT ( STDMETHODCALLTYPE *SetDisabled )( 
            IMFPluginControl * This,
            DWORD pluginType,
            REFCLSID clsid,
            BOOL disabled);
        
        END_INTERFACE
    } IMFPluginControlVtbl;

    interface IMFPluginControl
    {
        CONST_VTBL struct IMFPluginControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFPluginControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFPluginControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFPluginControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFPluginControl_GetPreferredClsid(This,pluginType,selector,clsid)	\
    ( (This)->lpVtbl -> GetPreferredClsid(This,pluginType,selector,clsid) ) 

#define IMFPluginControl_GetPreferredClsidByIndex(This,pluginType,index,selector,clsid)	\
    ( (This)->lpVtbl -> GetPreferredClsidByIndex(This,pluginType,index,selector,clsid) ) 

#define IMFPluginControl_SetPreferredClsid(This,pluginType,selector,clsid)	\
    ( (This)->lpVtbl -> SetPreferredClsid(This,pluginType,selector,clsid) ) 

#define IMFPluginControl_IsDisabled(This,pluginType,clsid)	\
    ( (This)->lpVtbl -> IsDisabled(This,pluginType,clsid) ) 

#define IMFPluginControl_GetDisabledByIndex(This,pluginType,index,clsid)	\
    ( (This)->lpVtbl -> GetDisabledByIndex(This,pluginType,index,clsid) ) 

#define IMFPluginControl_SetDisabled(This,pluginType,clsid,disabled)	\
    ( (This)->lpVtbl -> SetDisabled(This,pluginType,clsid,disabled) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFPluginControl_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfobjects_0000_0017 */
/* [local] */ 

#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0017_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfobjects_0000_0017_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  LPSAFEARRAY_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in LPSAFEARRAY * ); 
unsigned char * __RPC_USER  LPSAFEARRAY_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in LPSAFEARRAY * ); 
unsigned char * __RPC_USER  LPSAFEARRAY_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out LPSAFEARRAY * ); 
void                      __RPC_USER  LPSAFEARRAY_UserFree(     __RPC__in unsigned long *, __RPC__in LPSAFEARRAY * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  LPSAFEARRAY_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in LPSAFEARRAY * ); 
unsigned char * __RPC_USER  LPSAFEARRAY_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in LPSAFEARRAY * ); 
unsigned char * __RPC_USER  LPSAFEARRAY_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out LPSAFEARRAY * ); 
void                      __RPC_USER  LPSAFEARRAY_UserFree64(     __RPC__in unsigned long *, __RPC__in LPSAFEARRAY * ); 

/* [local] */ HRESULT STDMETHODCALLTYPE IMFMediaEventGenerator_BeginGetEvent_Proxy( 
    IMFMediaEventGenerator * This,
    /* [in] */ IMFAsyncCallback *pCallback,
    /* [in] */ IUnknown *punkState);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFMediaEventGenerator_BeginGetEvent_Stub( 
    __RPC__in IMFMediaEventGenerator * This,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFMediaEventGenerator_EndGetEvent_Proxy( 
    IMFMediaEventGenerator * This,
    /* [in] */ IMFAsyncResult *pResult,
    /* [annotation][out] */ 
    __out  IMFMediaEvent **ppEvent);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFMediaEventGenerator_EndGetEvent_Stub( 
    __RPC__in IMFMediaEventGenerator * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult,
    /* [out] */ __RPC__out DWORD *pcbEvent,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbEvent) BYTE **ppbEvent);



/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\Midles.h ===
/*++

Copyright (c) Microsoft Corporation. All rights reserved.

Module Name:

    midles.h

Abstract:

    This module contains definitions needed for encoding/decoding
    support (serializing/deserializing a.k.a. pickling).

--*/

#ifndef __MIDLES_H__
#define __MIDLES_H__

#if _MSC_VER > 1000
#pragma once
#endif

#include <rpcndr.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 *  Pickling support
 */
typedef enum
{
    MES_ENCODE,
    MES_DECODE,
    MES_ENCODE_NDR64  
} MIDL_ES_CODE;

typedef enum
{
    MES_INCREMENTAL_HANDLE,
    MES_FIXED_BUFFER_HANDLE,
    MES_DYNAMIC_BUFFER_HANDLE
} MIDL_ES_HANDLE_STYLE;


typedef void (__RPC_USER *  MIDL_ES_ALLOC )
                ( IN OUT  void  *   state,
                  OUT     char  **  pbuffer,
                  IN OUT  unsigned int * psize );

typedef void (__RPC_USER *  MIDL_ES_WRITE)
                ( IN OUT  void    * state,
                  IN      char    * buffer,
                  IN      unsigned int  size );

typedef void (__RPC_USER *  MIDL_ES_READ)
                ( IN OUT  void  *   state,
                  OUT     char  **  pbuffer,
                  IN OUT  unsigned int * psize );

typedef handle_t    MIDL_ES_HANDLE;

typedef struct _MIDL_TYPE_PICKLING_INFO
{
    unsigned long   Version;
    unsigned long   Flags;    
    UINT_PTR        Reserved[3];
} MIDL_TYPE_PICKLING_INFO,  * PMIDL_TYPE_PICKLING_INFO;


RPC_STATUS  RPC_ENTRY
MesEncodeIncrementalHandleCreate(
    void          * UserState,
    MIDL_ES_ALLOC   AllocFn,
    MIDL_ES_WRITE   WriteFn,
    handle_t      * pHandle );

RPC_STATUS  RPC_ENTRY
MesDecodeIncrementalHandleCreate(
    void         *  UserState,
    MIDL_ES_READ    ReadFn,
    handle_t     *  pHandle );


RPC_STATUS  RPC_ENTRY
MesIncrementalHandleReset(
    handle_t        Handle,
    void     *      UserState,
    MIDL_ES_ALLOC   AllocFn,
    MIDL_ES_WRITE   WriteFn,
    MIDL_ES_READ    ReadFn,
    MIDL_ES_CODE    Operation );


RPC_STATUS  RPC_ENTRY
MesEncodeFixedBufferHandleCreate(
    __out_bcount(BufferSize) char *pBuffer,
    __in unsigned long BufferSize,
    __out unsigned long *pEncodedSize,
    __out handle_t *pHandle
    );

RPC_STATUS  RPC_ENTRY
MesEncodeDynBufferHandleCreate(
    __deref_out_bcount(*pEncodedSize) char **pBuffer,
    __out unsigned long *pEncodedSize,
    __out handle_t *pHandle
    );

RPC_STATUS  RPC_ENTRY
MesDecodeBufferHandleCreate(
    __bcount(BufferSize) char *pBuffer,
    __out unsigned long BufferSize,
    __out handle_t *pHandle
    );


RPC_STATUS  RPC_ENTRY
MesBufferHandleReset(
    __in handle_t Handle,
    __in unsigned long HandleStyle,
    __in MIDL_ES_CODE Operation,
    __deref_in_bcount_opt(BufferSize) char **pBuffer,
    __in unsigned long BufferSize,
    __out unsigned long *pEncodedSize
    );


RPC_STATUS  RPC_ENTRY
MesHandleFree( handle_t  Handle );

RPC_STATUS  RPC_ENTRY
MesInqProcEncodingId(
    handle_t                    Handle,
    PRPC_SYNTAX_IDENTIFIER      pInterfaceId,
    unsigned long  *   pProcNum );


size_t  RPC_ENTRY
NdrMesSimpleTypeAlignSize ( handle_t );

void  RPC_ENTRY
NdrMesSimpleTypeDecode(
    handle_t            Handle,
    void            *   pObject,
    short               Size );

void  RPC_ENTRY
NdrMesSimpleTypeEncode(
    handle_t                Handle,
    const MIDL_STUB_DESC *  pStubDesc,
    const void           *  pObject,
    short                   Size );


size_t  RPC_ENTRY
NdrMesTypeAlignSize(
    handle_t                Handle,
    const MIDL_STUB_DESC *  pStubDesc,
    PFORMAT_STRING          pFormatString,
    const void           *  pObject );

void  RPC_ENTRY
NdrMesTypeEncode(
    handle_t                Handle,
    const MIDL_STUB_DESC *  pStubDesc,
    PFORMAT_STRING          pFormatString,
    const void           *  pObject );

void  RPC_ENTRY
NdrMesTypeDecode(
    handle_t                Handle,
    const MIDL_STUB_DESC *  pStubDesc,
    PFORMAT_STRING          pFormatString,
    void                 *  pObject );

size_t  RPC_ENTRY
NdrMesTypeAlignSize2(
    handle_t                        Handle,
    const MIDL_TYPE_PICKLING_INFO * pPicklingInfo,
    const MIDL_STUB_DESC *          pStubDesc,
    PFORMAT_STRING                  pFormatString,
    const void           *          pObject );

void  RPC_ENTRY
NdrMesTypeEncode2(
    handle_t                        Handle,
    const MIDL_TYPE_PICKLING_INFO * pPicklingInfo,    
    const MIDL_STUB_DESC *          pStubDesc,
    PFORMAT_STRING                  pFormatString,
    const void           *          pObject );

void  RPC_ENTRY
NdrMesTypeDecode2(
    handle_t                        Handle,
    const MIDL_TYPE_PICKLING_INFO * pPicklingInfo,    
    const MIDL_STUB_DESC *          pStubDesc,
    PFORMAT_STRING                  pFormatString,
    void                 *          pObject );

void RPC_ENTRY
NdrMesTypeFree2(
    handle_t                        Handle,
    const MIDL_TYPE_PICKLING_INFO * pPicklingInfo,
    const MIDL_STUB_DESC          * pStubDesc,
    PFORMAT_STRING                  pFormatString,
    void                 *          pObject );

void  RPC_VAR_ENTRY
NdrMesProcEncodeDecode(
    handle_t                Handle,
    const MIDL_STUB_DESC *  pStubDesc,
    PFORMAT_STRING          pFormatString,
    ... );

CLIENT_CALL_RETURN  RPC_VAR_ENTRY
NdrMesProcEncodeDecode2(
    handle_t                Handle,
    const MIDL_STUB_DESC *  pStubDesc,
    PFORMAT_STRING          pFormatString,
    ...
    );


// ndr64 entries.
size_t  RPC_ENTRY
NdrMesTypeAlignSize3(
    handle_t                        Handle,
    const MIDL_TYPE_PICKLING_INFO * pPicklingInfo,
    const MIDL_STUBLESS_PROXY_INFO* pProxyInfo,
    const unsigned long *          ArrTypeOffset[],
    unsigned long                   nTypeIndex,
    const void          *           pObject );

void  RPC_ENTRY
NdrMesTypeEncode3(
    handle_t                        Handle,
    const MIDL_TYPE_PICKLING_INFO * pPicklingInfo,    
    const MIDL_STUBLESS_PROXY_INFO* pProxyInfo,
    const unsigned long *          ArrTypeOffset[],
    unsigned long                   nTypeIndex,
    const void          *           pObject );

void  RPC_ENTRY
NdrMesTypeDecode3(
    handle_t                        Handle,
    const MIDL_TYPE_PICKLING_INFO * pPicklingInfo,    
    const MIDL_STUBLESS_PROXY_INFO* pProxyInfo,
    const unsigned long *          ArrTypeOffset[],
    unsigned long                   nTypeIndex,
    void                *           pObject );

void  RPC_ENTRY
NdrMesTypeFree3(
    handle_t                        Handle,
    const MIDL_TYPE_PICKLING_INFO * pPicklingInfo,    
    const MIDL_STUBLESS_PROXY_INFO* pProxyInfo,
    const unsigned long *          ArrTypeOffset[],
    unsigned long                   nTypeIndex,
    void                *           pObject );


CLIENT_CALL_RETURN RPC_VAR_ENTRY
NdrMesProcEncodeDecode3(
    handle_t                        Handle,
    const MIDL_STUBLESS_PROXY_INFO* pProxyInfo,
    unsigned long                   nProcNum,
    void                           *pReturnValue,    
    ... );

void  RPC_ENTRY
NdrMesSimpleTypeDecodeAll(
    handle_t                        Handle,
    const MIDL_STUBLESS_PROXY_INFO* pProxyInfo,
    void                *           pObject,
    short                           Size );

void  RPC_ENTRY
NdrMesSimpleTypeEncodeAll(
    handle_t                        Handle,
    const MIDL_STUBLESS_PROXY_INFO* pProxyInfo,
    const void          *           pObject,
    short                           Size );

size_t  RPC_ENTRY
NdrMesSimpleTypeAlignSizeAll ( handle_t Handle,
                               const MIDL_STUBLESS_PROXY_INFO*  pProxyInfo );


#ifdef __cplusplus
}
#endif

#endif /* __MIDLES_H__ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\Mgm.h ===
//============================================================================
// Copyright (c) Microsoft Corporation. All rights reserved.
//
// File: Mgm.h
//
// History:
//      V Raman    June-25-1997  Created.
//
// Data structures and entry points into MGM.
//============================================================================


#ifndef _MGM_H_
#define _MGM_H_

#if _MSC_VER > 1000
#pragma once
#endif

//----------------------------------------------------------------------------
//
// typedefs for callback interface
//
//----------------------------------------------------------------------------


//
// MGM_IF_ENTRY
//
// structure used in MGM_CREATION_ALERT_CALLBACK.  In the process of
// creating an MFE the routing protocol needs to enable/disable
// multicast forwarding on each interface
//

typedef struct _MGM_IF_ENTRY {

    DWORD               dwIfIndex;
    DWORD               dwIfNextHopAddr;
    BOOL                bIGMP;
    BOOL                bIsEnabled;
        
} MGM_IF_ENTRY, *PMGM_IF_ENTRY;



//----------------------------------------------------------------------------
//
// Callbacks into routing protocols
//
//----------------------------------------------------------------------------

//
// call into a routing protocol to perform RPF check.
//
// Invoked in the context of MgmNewPacketReceived into protocol component
// owning the incoming interface.
//

typedef DWORD
(*PMGM_RPF_CALLBACK)(
    IN              DWORD           dwSourceAddr,
    IN              DWORD           dwSourceMask,
    IN              DWORD           dwGroupAddr,
    IN              DWORD           dwGroupMask,
    IN  OUT         PDWORD          pdwInIfIndex,
    IN  OUT         PDWORD          pdwInIfNextHopAddr,
    IN  OUT         PDWORD          pdwUpStreamNbr,
    IN              DWORD           dwHdrSize,
    IN              PBYTE           pbPacketHdr,
    IN  OUT         PBYTE           pbRoute
);


//
// call into a routing protocol to determine the subset of interfaces
// (owned by the routing protocol) on which a multicast packet from a
// "new" source should be forwarded.
//
// Invoked in the context of MgmNewPacketReceived into all
// routing protocols that have outgoing interfaces for this source.
//

typedef
DWORD (*PMGM_CREATION_ALERT_CALLBACK)(
    IN              DWORD           dwSourceAddr,
    IN              DWORD           dwSourceMask,
    IN              DWORD           dwGroupAddr,
    IN              DWORD           dwGroupMask,
    IN              DWORD           dwInIfIndex,
    IN              DWORD           dwInIfNextHopAddr,
    IN              DWORD           dwIfCount,
    IN  OUT         PMGM_IF_ENTRY   pmieOutIfList
);


//
// call into routing protocol to notify protocol that an interface has
// been deleted from the outgoing interface list of a group entry / MFE
//
// invoked in the context of MgmDeleteMembershipEntry()
//

typedef
DWORD (*PMGM_PRUNE_ALERT_CALLBACK)(
    IN              DWORD           dwSourceAddr,
    IN              DWORD           dwSourceMask,
    IN              DWORD           dwGroupAddr,
    IN              DWORD           dwGroupMask,
    IN              DWORD           dwIfIndex,
    IN              DWORD           dwIfNextHopAddr,
    IN              BOOL            bMemberDelete,
    IN  OUT         PDWORD          pdwTimeout
);


//
// call into routing protocol to notify protocol that an interface has
// been added to the outgoing interface list of a group entry / MFE
//
// invoked in the context of MgmAddMembershipEntry()
//

typedef
DWORD (*PMGM_JOIN_ALERT_CALLBACK)(
    IN              DWORD           dwSourceAddr,
    IN              DWORD           dwSourceMask,
    IN              DWORD           dwGroupAddr,
    IN              DWORD           dwGroupMask,
    IN              BOOL            bMemberUpdate
);


//
// call into routing protocol to notify protocol that a packet
// has been received from a (source, group) on a wrong interface
//

typedef
DWORD (*PMGM_WRONG_IF_CALLBACK)(
    IN              DWORD           dwSourceAddr,
    IN              DWORD           dwGroupAddr,
    IN              DWORD           dwIfIndex,
    IN              DWORD           dwIfNextHopAddr,
    IN              DWORD           dwHdrSize,
    IN              PBYTE           pbPacketHdr
);


//
// call into routing protocol to notify protocol that IGMP needs to add
// an interface to the outgoing interface list of a group entry / MFE
//
// invoked in the context of MgmLocalGroupJoin()
//

typedef DWORD
(*PMGM_LOCAL_JOIN_CALLBACK) (
    IN              DWORD           dwSourceAddr,
    IN              DWORD           dwSourceMask,
    IN              DWORD           dwGroupAddr,
    IN              DWORD           dwGroupMask,
    IN              DWORD           dwIfIndex,
    IN              DWORD           dwIfNextHopAddr
);


//
// call into routing protocol to notify protocol that IGMP needs to
// delete an interface to the outgoing interface list of a group
// entry / MFE
//
// invoked in the context of MgmLocalGroupJoin()
//

typedef DWORD
(*PMGM_LOCAL_LEAVE_CALLBACK) (
    IN              DWORD           dwSourceAddr,
    IN              DWORD           dwSourceMask,
    IN              DWORD           dwGroupAddr,
    IN              DWORD           dwGroupMask,
    IN              DWORD           dwIfIndex,
    IN              DWORD           dwIfNextHopAddr
);


//
// call into IGMP to notify it that a protocol is taking or
// releasing ownership of an interface that has IGMP enabled on it.
//
// When this callback is invoked IGMP should stop adding/deleting
// group memberships on the specified interface.
//

typedef DWORD
(*PMGM_DISABLE_IGMP_CALLBACK) (
    IN              DWORD           dwIfIndex,
    IN              DWORD           dwIfNextHopAddr
);


//
// call into IGMP to notify it that a protocol has finished taking
// or releasing ownership of an interface.
//
// When this callback is invoked IGMP should add all its group memberships
// on the interface.
//

typedef DWORD
(*PMGM_ENABLE_IGMP_CALLBACK) (
    IN              DWORD           dwIfIndex,
    IN              DWORD           dwIfNextHopAddr
);


//----------------------------------------------------------------------------
//
// typedefs for MGM API interface
//
//----------------------------------------------------------------------------


//
// ROUTING_PROTOCOL_CONFIG
//
// routing protocol configuration that is passed to MGM at registration.
//
//
// Callbacks into routing protocols
//

typedef struct _ROUTING_PROTOCOL_CONFIG {

    DWORD                           dwCallbackFlags;

    PMGM_RPF_CALLBACK               pfnRpfCallback;

    PMGM_CREATION_ALERT_CALLBACK    pfnCreationAlertCallback;

    PMGM_PRUNE_ALERT_CALLBACK       pfnPruneAlertCallback;

    PMGM_JOIN_ALERT_CALLBACK        pfnJoinAlertCallback;

    PMGM_WRONG_IF_CALLBACK          pfnWrongIfCallback;


    //
    // callbacks into Routing protocols
    //

    PMGM_LOCAL_JOIN_CALLBACK         pfnLocalJoinCallback;

    PMGM_LOCAL_LEAVE_CALLBACK        pfnLocalLeaveCallback;


    //
    // callbacks into IGMP
    //

    PMGM_DISABLE_IGMP_CALLBACK      pfnDisableIgmpCallback;

    PMGM_ENABLE_IGMP_CALLBACK       pfnEnableIgmpCallback;

} ROUTING_PROTOCOL_CONFIG, *PROUTING_PROTOCOL_CONFIG;


//
// MGM_ENUM_TYPES
//
// Enumeration types to be specified when the
//

typedef enum _MGM_ENUM_TYPES
{
    ANY_SOURCE = 0,                 // enumerate group entries with
                                    // atleast one source

    ALL_SOURCES                     // enumerate all source entries
                                    // for a group entry
} MGM_ENUM_TYPES;


//
// SOURCE_GROUP_ENTRY
//
// (S, G) entry that is returned by the group entry enumeration API.
//

typedef struct _SOURCE_GROUP_ENTRY {

    DWORD                           dwSourceAddr;

    DWORD                           dwSourceMask;

    DWORD                           dwGroupAddr;

    DWORD                           dwGroupMask;

} SOURCE_GROUP_ENTRY, *PSOURCE_GROUP_ENTRY;



//----------------------------------------------------------------------------
//
// Entry points into MGM.
//
//----------------------------------------------------------------------------

//============================================================================
// Routing protocol registration / de-registration API
//============================================================================

DWORD
MgmRegisterMProtocol(
    IN          PROUTING_PROTOCOL_CONFIG    prpiInfo,
    IN          DWORD                       dwProtocolId,
    IN          DWORD                       dwComponentId,
    OUT         HANDLE  *                   phProtocol
);

DWORD
MgmDeRegisterMProtocol(
    IN          HANDLE                      hProtocol
);


//============================================================================
// Interface ownership API
//============================================================================

DWORD
MgmTakeInterfaceOwnership(
    IN          HANDLE                      hProtocol,
    IN          DWORD                       dwIfIndex,
    IN          DWORD                       dwIfNextHopAddr
);


DWORD
MgmReleaseInterfaceOwnership(
    IN          HANDLE                      hProtocol,
    IN          DWORD                       dwIfIndex,
    IN          DWORD                       dwIfNextHopAddr
);

DWORD
MgmGetProtocolOnInterface(
    IN          DWORD                       dwIfIndex,
    IN          DWORD                       dwIfNextHopAddr,
    IN  OUT     PDWORD                      pdwIfProtocolId,
    IN  OUT     PDWORD                      pdwIfComponentId
);


//============================================================================
// Group membership manipulation API. (addition / deletion )
//============================================================================

#define         MGM_JOIN_STATE_FLAG         0x00000001
#define         MGM_FORWARD_STATE_FLAG      0x00000002

DWORD
MgmAddGroupMembershipEntry(
    IN              HANDLE                  hProtocol,
    IN              DWORD                   dwSourceAddr,
    IN              DWORD                   dwSourceMask,
    IN              DWORD                   dwGroupAddr,
    IN              DWORD                   dwGroupMask,
    IN              DWORD                   dwIfIndex,
    IN              DWORD                   dwIfNextHopIPAddr,
    IN              DWORD                   dwFlags
);

DWORD
MgmDeleteGroupMembershipEntry(
    IN              HANDLE                  hProtocol,
    IN              DWORD                   dwSourceAddr,
    IN              DWORD                   dwSourceMask,
    IN              DWORD                   dwGroupAddr,
    IN              DWORD                   dwGroupMask,
    IN              DWORD                   dwIfIndex,
    IN              DWORD                   dwIfNextHopIPAddr,
    IN              DWORD                   dwFlags
);

//============================================================================
//
// Enumeration API
//
//============================================================================


//----------------------------------------------------------------------------
// MFE enumeration API
//----------------------------------------------------------------------------

DWORD
MgmGetMfe(
    IN              PMIB_IPMCAST_MFE        pimm,
    IN  OUT         PDWORD                  pdwBufferSize,
    IN  OUT         PBYTE                   pbBuffer
);

DWORD
MgmGetFirstMfe(
    IN  OUT         PDWORD                  pdwBufferSize,
    IN  OUT         PBYTE                   pbBuffer,
    IN  OUT         PDWORD                  pdwNumEntries
);


DWORD
MgmGetNextMfe(
    IN              PMIB_IPMCAST_MFE        pimmStart,
    IN  OUT         PDWORD                  pdwBufferSize,
    IN  OUT         PBYTE                   pbBuffer,
    IN  OUT         PDWORD                  pdwNumEntries
);


//
// Include statistics corresponding to MIB_IPMCAST_MFE_STATS
//

#define         MGM_MFE_STATS_0             0x00000001

//
// Include statistics corresponding to MIB_IPMCAST_MFE_STATS_EX
//

#define         MGM_MFE_STATS_1             0x00000002


DWORD
MgmGetMfeStats(
    IN              PMIB_IPMCAST_MFE        pimm,
    IN  OUT         PDWORD                  pdwBufferSize,
    IN  OUT         PBYTE                   pbBuffer,
    IN              DWORD                   dwFlags
);

DWORD
MgmGetFirstMfeStats(
    IN  OUT         PDWORD                  pdwBufferSize,
    IN  OUT         PBYTE                   pbBuffer,
    IN  OUT         PDWORD                  pdwNumEntries,
    IN              DWORD                   dwFlags
);


DWORD
MgmGetNextMfeStats(
    IN              PMIB_IPMCAST_MFE        pimmStart,
    IN  OUT         PDWORD                  pdwBufferSize,
    IN  OUT         PBYTE                   pbBuffer,
    IN  OUT         PDWORD                  pdwNumEntries,
    IN              DWORD                   dwFlags
);

//----------------------------------------------------------------------------
// Group menbership entry enumeration API
//----------------------------------------------------------------------------

DWORD
MgmGroupEnumerationStart(
    IN              HANDLE                  hProtocol,
    IN              MGM_ENUM_TYPES          metEnumType,
    OUT             HANDLE *                phEnumHandle
);

DWORD
MgmGroupEnumerationGetNext(
    IN              HANDLE                  hEnum,
    IN  OUT         PDWORD                  pdwBufferSize,
    IN  OUT         PBYTE                   pbBuffer,
    IN  OUT         PDWORD                  pdwNumEntries
);

DWORD
MgmGroupEnumerationEnd(
    IN              HANDLE                  hEnum
);



//-----------------------------------------------------------------
// Mgm MFE Update API.
//
//-----------------------------------------------------------------

DWORD
MgmSetMfe(
    IN              HANDLE                  hProtocol,
    IN              PMIB_IPMCAST_MFE        pmimm
);


#endif //_MGM_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\mfidl.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mfidl.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mfidl_h__
#define __mfidl_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMFMediaSession_FWD_DEFINED__
#define __IMFMediaSession_FWD_DEFINED__
typedef interface IMFMediaSession IMFMediaSession;
#endif 	/* __IMFMediaSession_FWD_DEFINED__ */


#ifndef __IMFSourceResolver_FWD_DEFINED__
#define __IMFSourceResolver_FWD_DEFINED__
typedef interface IMFSourceResolver IMFSourceResolver;
#endif 	/* __IMFSourceResolver_FWD_DEFINED__ */


#ifndef __IMFMediaSource_FWD_DEFINED__
#define __IMFMediaSource_FWD_DEFINED__
typedef interface IMFMediaSource IMFMediaSource;
#endif 	/* __IMFMediaSource_FWD_DEFINED__ */


#ifndef __IMFMediaStream_FWD_DEFINED__
#define __IMFMediaStream_FWD_DEFINED__
typedef interface IMFMediaStream IMFMediaStream;
#endif 	/* __IMFMediaStream_FWD_DEFINED__ */


#ifndef __IMFMediaSink_FWD_DEFINED__
#define __IMFMediaSink_FWD_DEFINED__
typedef interface IMFMediaSink IMFMediaSink;
#endif 	/* __IMFMediaSink_FWD_DEFINED__ */


#ifndef __IMFStreamSink_FWD_DEFINED__
#define __IMFStreamSink_FWD_DEFINED__
typedef interface IMFStreamSink IMFStreamSink;
#endif 	/* __IMFStreamSink_FWD_DEFINED__ */


#ifndef __IMFVideoSampleAllocator_FWD_DEFINED__
#define __IMFVideoSampleAllocator_FWD_DEFINED__
typedef interface IMFVideoSampleAllocator IMFVideoSampleAllocator;
#endif 	/* __IMFVideoSampleAllocator_FWD_DEFINED__ */


#ifndef __IMFVideoSampleAllocatorNotify_FWD_DEFINED__
#define __IMFVideoSampleAllocatorNotify_FWD_DEFINED__
typedef interface IMFVideoSampleAllocatorNotify IMFVideoSampleAllocatorNotify;
#endif 	/* __IMFVideoSampleAllocatorNotify_FWD_DEFINED__ */


#ifndef __IMFVideoSampleAllocatorCallback_FWD_DEFINED__
#define __IMFVideoSampleAllocatorCallback_FWD_DEFINED__
typedef interface IMFVideoSampleAllocatorCallback IMFVideoSampleAllocatorCallback;
#endif 	/* __IMFVideoSampleAllocatorCallback_FWD_DEFINED__ */


#ifndef __IMFTopology_FWD_DEFINED__
#define __IMFTopology_FWD_DEFINED__
typedef interface IMFTopology IMFTopology;
#endif 	/* __IMFTopology_FWD_DEFINED__ */


#ifndef __IMFTopologyNode_FWD_DEFINED__
#define __IMFTopologyNode_FWD_DEFINED__
typedef interface IMFTopologyNode IMFTopologyNode;
#endif 	/* __IMFTopologyNode_FWD_DEFINED__ */


#ifndef __IMFGetService_FWD_DEFINED__
#define __IMFGetService_FWD_DEFINED__
typedef interface IMFGetService IMFGetService;
#endif 	/* __IMFGetService_FWD_DEFINED__ */


#ifndef __IMFClock_FWD_DEFINED__
#define __IMFClock_FWD_DEFINED__
typedef interface IMFClock IMFClock;
#endif 	/* __IMFClock_FWD_DEFINED__ */


#ifndef __IMFPresentationClock_FWD_DEFINED__
#define __IMFPresentationClock_FWD_DEFINED__
typedef interface IMFPresentationClock IMFPresentationClock;
#endif 	/* __IMFPresentationClock_FWD_DEFINED__ */


#ifndef __IMFPresentationTimeSource_FWD_DEFINED__
#define __IMFPresentationTimeSource_FWD_DEFINED__
typedef interface IMFPresentationTimeSource IMFPresentationTimeSource;
#endif 	/* __IMFPresentationTimeSource_FWD_DEFINED__ */


#ifndef __IMFClockStateSink_FWD_DEFINED__
#define __IMFClockStateSink_FWD_DEFINED__
typedef interface IMFClockStateSink IMFClockStateSink;
#endif 	/* __IMFClockStateSink_FWD_DEFINED__ */


#ifndef __IMFPresentationDescriptor_FWD_DEFINED__
#define __IMFPresentationDescriptor_FWD_DEFINED__
typedef interface IMFPresentationDescriptor IMFPresentationDescriptor;
#endif 	/* __IMFPresentationDescriptor_FWD_DEFINED__ */


#ifndef __IMFStreamDescriptor_FWD_DEFINED__
#define __IMFStreamDescriptor_FWD_DEFINED__
typedef interface IMFStreamDescriptor IMFStreamDescriptor;
#endif 	/* __IMFStreamDescriptor_FWD_DEFINED__ */


#ifndef __IMFMediaTypeHandler_FWD_DEFINED__
#define __IMFMediaTypeHandler_FWD_DEFINED__
typedef interface IMFMediaTypeHandler IMFMediaTypeHandler;
#endif 	/* __IMFMediaTypeHandler_FWD_DEFINED__ */


#ifndef __IMFTimer_FWD_DEFINED__
#define __IMFTimer_FWD_DEFINED__
typedef interface IMFTimer IMFTimer;
#endif 	/* __IMFTimer_FWD_DEFINED__ */


#ifndef __IMFShutdown_FWD_DEFINED__
#define __IMFShutdown_FWD_DEFINED__
typedef interface IMFShutdown IMFShutdown;
#endif 	/* __IMFShutdown_FWD_DEFINED__ */


#ifndef __IMFTopoLoader_FWD_DEFINED__
#define __IMFTopoLoader_FWD_DEFINED__
typedef interface IMFTopoLoader IMFTopoLoader;
#endif 	/* __IMFTopoLoader_FWD_DEFINED__ */


#ifndef __IMFContentProtectionManager_FWD_DEFINED__
#define __IMFContentProtectionManager_FWD_DEFINED__
typedef interface IMFContentProtectionManager IMFContentProtectionManager;
#endif 	/* __IMFContentProtectionManager_FWD_DEFINED__ */


#ifndef __IMFContentEnabler_FWD_DEFINED__
#define __IMFContentEnabler_FWD_DEFINED__
typedef interface IMFContentEnabler IMFContentEnabler;
#endif 	/* __IMFContentEnabler_FWD_DEFINED__ */


#ifndef __IMFMetadata_FWD_DEFINED__
#define __IMFMetadata_FWD_DEFINED__
typedef interface IMFMetadata IMFMetadata;
#endif 	/* __IMFMetadata_FWD_DEFINED__ */


#ifndef __IMFMetadataProvider_FWD_DEFINED__
#define __IMFMetadataProvider_FWD_DEFINED__
typedef interface IMFMetadataProvider IMFMetadataProvider;
#endif 	/* __IMFMetadataProvider_FWD_DEFINED__ */


#ifndef __IMFRateSupport_FWD_DEFINED__
#define __IMFRateSupport_FWD_DEFINED__
typedef interface IMFRateSupport IMFRateSupport;
#endif 	/* __IMFRateSupport_FWD_DEFINED__ */


#ifndef __IMFRateControl_FWD_DEFINED__
#define __IMFRateControl_FWD_DEFINED__
typedef interface IMFRateControl IMFRateControl;
#endif 	/* __IMFRateControl_FWD_DEFINED__ */


#ifndef __IMFTimecodeTranslate_FWD_DEFINED__
#define __IMFTimecodeTranslate_FWD_DEFINED__
typedef interface IMFTimecodeTranslate IMFTimecodeTranslate;
#endif 	/* __IMFTimecodeTranslate_FWD_DEFINED__ */


#ifndef __IMFSimpleAudioVolume_FWD_DEFINED__
#define __IMFSimpleAudioVolume_FWD_DEFINED__
typedef interface IMFSimpleAudioVolume IMFSimpleAudioVolume;
#endif 	/* __IMFSimpleAudioVolume_FWD_DEFINED__ */


#ifndef __IMFAudioStreamVolume_FWD_DEFINED__
#define __IMFAudioStreamVolume_FWD_DEFINED__
typedef interface IMFAudioStreamVolume IMFAudioStreamVolume;
#endif 	/* __IMFAudioStreamVolume_FWD_DEFINED__ */


#ifndef __IMFAudioPolicy_FWD_DEFINED__
#define __IMFAudioPolicy_FWD_DEFINED__
typedef interface IMFAudioPolicy IMFAudioPolicy;
#endif 	/* __IMFAudioPolicy_FWD_DEFINED__ */


#ifndef __IMFSampleGrabberSinkCallback_FWD_DEFINED__
#define __IMFSampleGrabberSinkCallback_FWD_DEFINED__
typedef interface IMFSampleGrabberSinkCallback IMFSampleGrabberSinkCallback;
#endif 	/* __IMFSampleGrabberSinkCallback_FWD_DEFINED__ */


#ifndef __IMFSampleGrabberSinkCallback2_FWD_DEFINED__
#define __IMFSampleGrabberSinkCallback2_FWD_DEFINED__
typedef interface IMFSampleGrabberSinkCallback2 IMFSampleGrabberSinkCallback2;
#endif 	/* __IMFSampleGrabberSinkCallback2_FWD_DEFINED__ */


#ifndef __IMFWorkQueueServices_FWD_DEFINED__
#define __IMFWorkQueueServices_FWD_DEFINED__
typedef interface IMFWorkQueueServices IMFWorkQueueServices;
#endif 	/* __IMFWorkQueueServices_FWD_DEFINED__ */


#ifndef __IMFQualityManager_FWD_DEFINED__
#define __IMFQualityManager_FWD_DEFINED__
typedef interface IMFQualityManager IMFQualityManager;
#endif 	/* __IMFQualityManager_FWD_DEFINED__ */


#ifndef __IMFQualityAdvise_FWD_DEFINED__
#define __IMFQualityAdvise_FWD_DEFINED__
typedef interface IMFQualityAdvise IMFQualityAdvise;
#endif 	/* __IMFQualityAdvise_FWD_DEFINED__ */


#ifndef __IMFQualityAdvise2_FWD_DEFINED__
#define __IMFQualityAdvise2_FWD_DEFINED__
typedef interface IMFQualityAdvise2 IMFQualityAdvise2;
#endif 	/* __IMFQualityAdvise2_FWD_DEFINED__ */


#ifndef __IMFQualityAdviseLimits_FWD_DEFINED__
#define __IMFQualityAdviseLimits_FWD_DEFINED__
typedef interface IMFQualityAdviseLimits IMFQualityAdviseLimits;
#endif 	/* __IMFQualityAdviseLimits_FWD_DEFINED__ */


#ifndef __IMFRealTimeClient_FWD_DEFINED__
#define __IMFRealTimeClient_FWD_DEFINED__
typedef interface IMFRealTimeClient IMFRealTimeClient;
#endif 	/* __IMFRealTimeClient_FWD_DEFINED__ */


#ifndef __IMFSequencerSource_FWD_DEFINED__
#define __IMFSequencerSource_FWD_DEFINED__
typedef interface IMFSequencerSource IMFSequencerSource;
#endif 	/* __IMFSequencerSource_FWD_DEFINED__ */


#ifndef __IMFMediaSourceTopologyProvider_FWD_DEFINED__
#define __IMFMediaSourceTopologyProvider_FWD_DEFINED__
typedef interface IMFMediaSourceTopologyProvider IMFMediaSourceTopologyProvider;
#endif 	/* __IMFMediaSourceTopologyProvider_FWD_DEFINED__ */


#ifndef __IMFMediaSourcePresentationProvider_FWD_DEFINED__
#define __IMFMediaSourcePresentationProvider_FWD_DEFINED__
typedef interface IMFMediaSourcePresentationProvider IMFMediaSourcePresentationProvider;
#endif 	/* __IMFMediaSourcePresentationProvider_FWD_DEFINED__ */


#ifndef __IMFTopologyNodeAttributeEditor_FWD_DEFINED__
#define __IMFTopologyNodeAttributeEditor_FWD_DEFINED__
typedef interface IMFTopologyNodeAttributeEditor IMFTopologyNodeAttributeEditor;
#endif 	/* __IMFTopologyNodeAttributeEditor_FWD_DEFINED__ */


#ifndef __IMFByteStreamBuffering_FWD_DEFINED__
#define __IMFByteStreamBuffering_FWD_DEFINED__
typedef interface IMFByteStreamBuffering IMFByteStreamBuffering;
#endif 	/* __IMFByteStreamBuffering_FWD_DEFINED__ */


#ifndef __IMFByteStreamCacheControl_FWD_DEFINED__
#define __IMFByteStreamCacheControl_FWD_DEFINED__
typedef interface IMFByteStreamCacheControl IMFByteStreamCacheControl;
#endif 	/* __IMFByteStreamCacheControl_FWD_DEFINED__ */


#ifndef __IMFNetCredential_FWD_DEFINED__
#define __IMFNetCredential_FWD_DEFINED__
typedef interface IMFNetCredential IMFNetCredential;
#endif 	/* __IMFNetCredential_FWD_DEFINED__ */


#ifndef __IMFNetCredentialManager_FWD_DEFINED__
#define __IMFNetCredentialManager_FWD_DEFINED__
typedef interface IMFNetCredentialManager IMFNetCredentialManager;
#endif 	/* __IMFNetCredentialManager_FWD_DEFINED__ */


#ifndef __IMFNetCredentialCache_FWD_DEFINED__
#define __IMFNetCredentialCache_FWD_DEFINED__
typedef interface IMFNetCredentialCache IMFNetCredentialCache;
#endif 	/* __IMFNetCredentialCache_FWD_DEFINED__ */


#ifndef __IMFSSLCertificateManager_FWD_DEFINED__
#define __IMFSSLCertificateManager_FWD_DEFINED__
typedef interface IMFSSLCertificateManager IMFSSLCertificateManager;
#endif 	/* __IMFSSLCertificateManager_FWD_DEFINED__ */


#ifndef __IMFSourceOpenMonitor_FWD_DEFINED__
#define __IMFSourceOpenMonitor_FWD_DEFINED__
typedef interface IMFSourceOpenMonitor IMFSourceOpenMonitor;
#endif 	/* __IMFSourceOpenMonitor_FWD_DEFINED__ */


#ifndef __IMFNetProxyLocator_FWD_DEFINED__
#define __IMFNetProxyLocator_FWD_DEFINED__
typedef interface IMFNetProxyLocator IMFNetProxyLocator;
#endif 	/* __IMFNetProxyLocator_FWD_DEFINED__ */


#ifndef __IMFNetProxyLocatorFactory_FWD_DEFINED__
#define __IMFNetProxyLocatorFactory_FWD_DEFINED__
typedef interface IMFNetProxyLocatorFactory IMFNetProxyLocatorFactory;
#endif 	/* __IMFNetProxyLocatorFactory_FWD_DEFINED__ */


#ifndef __IMFSaveJob_FWD_DEFINED__
#define __IMFSaveJob_FWD_DEFINED__
typedef interface IMFSaveJob IMFSaveJob;
#endif 	/* __IMFSaveJob_FWD_DEFINED__ */


#ifndef __IMFNetSchemeHandlerConfig_FWD_DEFINED__
#define __IMFNetSchemeHandlerConfig_FWD_DEFINED__
typedef interface IMFNetSchemeHandlerConfig IMFNetSchemeHandlerConfig;
#endif 	/* __IMFNetSchemeHandlerConfig_FWD_DEFINED__ */


#ifndef __IMFSchemeHandler_FWD_DEFINED__
#define __IMFSchemeHandler_FWD_DEFINED__
typedef interface IMFSchemeHandler IMFSchemeHandler;
#endif 	/* __IMFSchemeHandler_FWD_DEFINED__ */


#ifndef __IMFByteStreamHandler_FWD_DEFINED__
#define __IMFByteStreamHandler_FWD_DEFINED__
typedef interface IMFByteStreamHandler IMFByteStreamHandler;
#endif 	/* __IMFByteStreamHandler_FWD_DEFINED__ */


#ifndef __IMFTrustedInput_FWD_DEFINED__
#define __IMFTrustedInput_FWD_DEFINED__
typedef interface IMFTrustedInput IMFTrustedInput;
#endif 	/* __IMFTrustedInput_FWD_DEFINED__ */


#ifndef __IMFInputTrustAuthority_FWD_DEFINED__
#define __IMFInputTrustAuthority_FWD_DEFINED__
typedef interface IMFInputTrustAuthority IMFInputTrustAuthority;
#endif 	/* __IMFInputTrustAuthority_FWD_DEFINED__ */


#ifndef __IMFTrustedOutput_FWD_DEFINED__
#define __IMFTrustedOutput_FWD_DEFINED__
typedef interface IMFTrustedOutput IMFTrustedOutput;
#endif 	/* __IMFTrustedOutput_FWD_DEFINED__ */


#ifndef __IMFOutputTrustAuthority_FWD_DEFINED__
#define __IMFOutputTrustAuthority_FWD_DEFINED__
typedef interface IMFOutputTrustAuthority IMFOutputTrustAuthority;
#endif 	/* __IMFOutputTrustAuthority_FWD_DEFINED__ */


#ifndef __IMFOutputPolicy_FWD_DEFINED__
#define __IMFOutputPolicy_FWD_DEFINED__
typedef interface IMFOutputPolicy IMFOutputPolicy;
#endif 	/* __IMFOutputPolicy_FWD_DEFINED__ */


#ifndef __IMFOutputSchema_FWD_DEFINED__
#define __IMFOutputSchema_FWD_DEFINED__
typedef interface IMFOutputSchema IMFOutputSchema;
#endif 	/* __IMFOutputSchema_FWD_DEFINED__ */


#ifndef __IMFSecureChannel_FWD_DEFINED__
#define __IMFSecureChannel_FWD_DEFINED__
typedef interface IMFSecureChannel IMFSecureChannel;
#endif 	/* __IMFSecureChannel_FWD_DEFINED__ */


#ifndef __IMFSampleProtection_FWD_DEFINED__
#define __IMFSampleProtection_FWD_DEFINED__
typedef interface IMFSampleProtection IMFSampleProtection;
#endif 	/* __IMFSampleProtection_FWD_DEFINED__ */


#ifndef __IMFMediaSinkPreroll_FWD_DEFINED__
#define __IMFMediaSinkPreroll_FWD_DEFINED__
typedef interface IMFMediaSinkPreroll IMFMediaSinkPreroll;
#endif 	/* __IMFMediaSinkPreroll_FWD_DEFINED__ */


#ifndef __IMFFinalizableMediaSink_FWD_DEFINED__
#define __IMFFinalizableMediaSink_FWD_DEFINED__
typedef interface IMFFinalizableMediaSink IMFFinalizableMediaSink;
#endif 	/* __IMFFinalizableMediaSink_FWD_DEFINED__ */


#ifndef __IMFStreamingSinkConfig_FWD_DEFINED__
#define __IMFStreamingSinkConfig_FWD_DEFINED__
typedef interface IMFStreamingSinkConfig IMFStreamingSinkConfig;
#endif 	/* __IMFStreamingSinkConfig_FWD_DEFINED__ */


#ifndef __IMFRemoteProxy_FWD_DEFINED__
#define __IMFRemoteProxy_FWD_DEFINED__
typedef interface IMFRemoteProxy IMFRemoteProxy;
#endif 	/* __IMFRemoteProxy_FWD_DEFINED__ */


#ifndef __IMFObjectReferenceStream_FWD_DEFINED__
#define __IMFObjectReferenceStream_FWD_DEFINED__
typedef interface IMFObjectReferenceStream IMFObjectReferenceStream;
#endif 	/* __IMFObjectReferenceStream_FWD_DEFINED__ */


#ifndef __IMFPMPHost_FWD_DEFINED__
#define __IMFPMPHost_FWD_DEFINED__
typedef interface IMFPMPHost IMFPMPHost;
#endif 	/* __IMFPMPHost_FWD_DEFINED__ */


#ifndef __IMFPMPClient_FWD_DEFINED__
#define __IMFPMPClient_FWD_DEFINED__
typedef interface IMFPMPClient IMFPMPClient;
#endif 	/* __IMFPMPClient_FWD_DEFINED__ */


#ifndef __IMFPMPServer_FWD_DEFINED__
#define __IMFPMPServer_FWD_DEFINED__
typedef interface IMFPMPServer IMFPMPServer;
#endif 	/* __IMFPMPServer_FWD_DEFINED__ */


#ifndef __IMFRemoteDesktopPlugin_FWD_DEFINED__
#define __IMFRemoteDesktopPlugin_FWD_DEFINED__
typedef interface IMFRemoteDesktopPlugin IMFRemoteDesktopPlugin;
#endif 	/* __IMFRemoteDesktopPlugin_FWD_DEFINED__ */


#ifndef __IMFSAMIStyle_FWD_DEFINED__
#define __IMFSAMIStyle_FWD_DEFINED__
typedef interface IMFSAMIStyle IMFSAMIStyle;
#endif 	/* __IMFSAMIStyle_FWD_DEFINED__ */


#ifndef __IMFTranscodeProfile_FWD_DEFINED__
#define __IMFTranscodeProfile_FWD_DEFINED__
typedef interface IMFTranscodeProfile IMFTranscodeProfile;
#endif 	/* __IMFTranscodeProfile_FWD_DEFINED__ */


#ifndef __IMFTranscodeSinkInfoProvider_FWD_DEFINED__
#define __IMFTranscodeSinkInfoProvider_FWD_DEFINED__
typedef interface IMFTranscodeSinkInfoProvider IMFTranscodeSinkInfoProvider;
#endif 	/* __IMFTranscodeSinkInfoProvider_FWD_DEFINED__ */


#ifndef __IMFFieldOfUseMFTUnlock_FWD_DEFINED__
#define __IMFFieldOfUseMFTUnlock_FWD_DEFINED__
typedef interface IMFFieldOfUseMFTUnlock IMFFieldOfUseMFTUnlock;
#endif 	/* __IMFFieldOfUseMFTUnlock_FWD_DEFINED__ */


#ifndef __IMFLocalMFTRegistration_FWD_DEFINED__
#define __IMFLocalMFTRegistration_FWD_DEFINED__
typedef interface IMFLocalMFTRegistration IMFLocalMFTRegistration;
#endif 	/* __IMFLocalMFTRegistration_FWD_DEFINED__ */


/* header files for imported files */
#include "mfobjects.h"
#include "mftransform.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mfidl_0000_0000 */
/* [local] */ 

#include <windef.h>
typedef 
enum MFSESSION_SETTOPOLOGY_FLAGS
    {	MFSESSION_SETTOPOLOGY_IMMEDIATE	= 0x1,
	MFSESSION_SETTOPOLOGY_NORESOLUTION	= 0x2,
	MFSESSION_SETTOPOLOGY_CLEAR_CURRENT	= 0x4
    } 	MFSESSION_SETTOPOLOGY_FLAGS;

typedef 
enum MFSESSION_GETFULLTOPOLOGY_FLAGS
    {	MFSESSION_GETFULLTOPOLOGY_CURRENT	= 0x1
    } 	MFSESSION_GETFULLTOPOLOGY_FLAGS;

typedef 
enum MFPMPSESSION_CREATION_FLAGS
    {	MFPMPSESSION_UNPROTECTED_PROCESS	= 0x1
    } 	MFPMPSESSION_CREATION_FLAGS;

typedef unsigned __int64 TOPOID;






extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0000_v0_0_s_ifspec;

#ifndef __IMFMediaSession_INTERFACE_DEFINED__
#define __IMFMediaSession_INTERFACE_DEFINED__

/* interface IMFMediaSession */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFMediaSession;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("90377834-21D0-4dee-8214-BA2E3E6C1127")
    IMFMediaSession : public IMFMediaEventGenerator
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetTopology( 
            /* [in] */ DWORD dwSetTopologyFlags,
            /* [in] */ __RPC__in_opt IMFTopology *pTopology) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ClearTopologies( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Start( 
            /* [unique][in] */ __RPC__in_opt const GUID *pguidTimeFormat,
            /* [unique][in] */ __RPC__in_opt const PROPVARIANT *pvarStartPosition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Pause( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Shutdown( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetClock( 
            /* [out] */ __RPC__deref_out_opt IMFClock **ppClock) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSessionCapabilities( 
            /* [out] */ __RPC__out DWORD *pdwCaps) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFullTopology( 
            /* [in] */ DWORD dwGetFullTopologyFlags,
            /* [in] */ TOPOID TopoId,
            /* [out] */ __RPC__deref_out_opt IMFTopology **ppFullTopology) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMediaSessionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFMediaSession * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFMediaSession * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFMediaSession * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEvent )( 
            __RPC__in IMFMediaSession * This,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IMFMediaEvent **ppEvent);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( 
            IMFMediaSession * This,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( 
            IMFMediaSession * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  IMFMediaEvent **ppEvent);
        
        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( 
            __RPC__in IMFMediaSession * This,
            /* [in] */ MediaEventType met,
            /* [in] */ __RPC__in REFGUID guidExtendedType,
            /* [in] */ HRESULT hrStatus,
            /* [unique][in] */ __RPC__in_opt const PROPVARIANT *pvValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetTopology )( 
            __RPC__in IMFMediaSession * This,
            /* [in] */ DWORD dwSetTopologyFlags,
            /* [in] */ __RPC__in_opt IMFTopology *pTopology);
        
        HRESULT ( STDMETHODCALLTYPE *ClearTopologies )( 
            __RPC__in IMFMediaSession * This);
        
        HRESULT ( STDMETHODCALLTYPE *Start )( 
            __RPC__in IMFMediaSession * This,
            /* [unique][in] */ __RPC__in_opt const GUID *pguidTimeFormat,
            /* [unique][in] */ __RPC__in_opt const PROPVARIANT *pvarStartPosition);
        
        HRESULT ( STDMETHODCALLTYPE *Pause )( 
            __RPC__in IMFMediaSession * This);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            __RPC__in IMFMediaSession * This);
        
        HRESULT ( STDMETHODCALLTYPE *Close )( 
            __RPC__in IMFMediaSession * This);
        
        HRESULT ( STDMETHODCALLTYPE *Shutdown )( 
            __RPC__in IMFMediaSession * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetClock )( 
            __RPC__in IMFMediaSession * This,
            /* [out] */ __RPC__deref_out_opt IMFClock **ppClock);
        
        HRESULT ( STDMETHODCALLTYPE *GetSessionCapabilities )( 
            __RPC__in IMFMediaSession * This,
            /* [out] */ __RPC__out DWORD *pdwCaps);
        
        HRESULT ( STDMETHODCALLTYPE *GetFullTopology )( 
            __RPC__in IMFMediaSession * This,
            /* [in] */ DWORD dwGetFullTopologyFlags,
            /* [in] */ TOPOID TopoId,
            /* [out] */ __RPC__deref_out_opt IMFTopology **ppFullTopology);
        
        END_INTERFACE
    } IMFMediaSessionVtbl;

    interface IMFMediaSession
    {
        CONST_VTBL struct IMFMediaSessionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMediaSession_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMediaSession_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMediaSession_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMediaSession_GetEvent(This,dwFlags,ppEvent)	\
    ( (This)->lpVtbl -> GetEvent(This,dwFlags,ppEvent) ) 

#define IMFMediaSession_BeginGetEvent(This,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginGetEvent(This,pCallback,punkState) ) 

#define IMFMediaSession_EndGetEvent(This,pResult,ppEvent)	\
    ( (This)->lpVtbl -> EndGetEvent(This,pResult,ppEvent) ) 

#define IMFMediaSession_QueueEvent(This,met,guidExtendedType,hrStatus,pvValue)	\
    ( (This)->lpVtbl -> QueueEvent(This,met,guidExtendedType,hrStatus,pvValue) ) 


#define IMFMediaSession_SetTopology(This,dwSetTopologyFlags,pTopology)	\
    ( (This)->lpVtbl -> SetTopology(This,dwSetTopologyFlags,pTopology) ) 

#define IMFMediaSession_ClearTopologies(This)	\
    ( (This)->lpVtbl -> ClearTopologies(This) ) 

#define IMFMediaSession_Start(This,pguidTimeFormat,pvarStartPosition)	\
    ( (This)->lpVtbl -> Start(This,pguidTimeFormat,pvarStartPosition) ) 

#define IMFMediaSession_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IMFMediaSession_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IMFMediaSession_Close(This)	\
    ( (This)->lpVtbl -> Close(This) ) 

#define IMFMediaSession_Shutdown(This)	\
    ( (This)->lpVtbl -> Shutdown(This) ) 

#define IMFMediaSession_GetClock(This,ppClock)	\
    ( (This)->lpVtbl -> GetClock(This,ppClock) ) 

#define IMFMediaSession_GetSessionCapabilities(This,pdwCaps)	\
    ( (This)->lpVtbl -> GetSessionCapabilities(This,pdwCaps) ) 

#define IMFMediaSession_GetFullTopology(This,dwGetFullTopologyFlags,TopoId,ppFullTopology)	\
    ( (This)->lpVtbl -> GetFullTopology(This,dwGetFullTopologyFlags,TopoId,ppFullTopology) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFMediaSession_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0001 */
/* [local] */ 

EXTERN_GUID( MF_SESSION_TOPOLOADER, 0x1e83d482, 0x1f1c, 0x4571, 0x84, 0x5, 0x88, 0xf4, 0xb2, 0x18, 0x1f, 0x71);
EXTERN_GUID( MF_SESSION_GLOBAL_TIME, 0x1e83d482, 0x1f1c, 0x4571, 0x84, 0x5, 0x88, 0xf4, 0xb2, 0x18, 0x1f, 0x72);
EXTERN_GUID( MF_SESSION_QUALITY_MANAGER, 0x1e83d482, 0x1f1c, 0x4571, 0x84, 0x5, 0x88, 0xf4, 0xb2, 0x18, 0x1f, 0x73);
EXTERN_GUID( MF_SESSION_CONTENT_PROTECTION_MANAGER, 0x1e83d482, 0x1f1c, 0x4571, 0x84, 0x5, 0x88, 0xf4, 0xb2, 0x18, 0x1f, 0x74);
EXTERN_GUID( MF_SESSION_SERVER_CONTEXT, 0xafe5b291, 0x50fa, 0x46e8, 0xb9, 0xbe, 0xc, 0xc, 0x3c, 0xe4, 0xb3, 0xa5);
EXTERN_GUID( MF_SESSION_REMOTE_SOURCE_MODE, 0xf4033ef4, 0x9bb3, 0x4378, 0x94, 0x1f, 0x85, 0xa0, 0x85, 0x6b, 0xc2, 0x44);
EXTERN_GUID( MF_SESSION_APPROX_EVENT_OCCURRENCE_TIME, 0x190e852f, 0x6238, 0x42d1, 0xb5, 0xaf, 0x69, 0xea, 0x33, 0x8e, 0xf8, 0x50);
EXTERN_GUID( MF_PMP_SERVER_CONTEXT, 0x2f00c910, 0xd2cf, 0x4278, 0x8b, 0x6a, 0xd0, 0x77, 0xfa, 0xc3, 0xa2, 0x5f);
STDAPI MFCreateMediaSession(
    IMFAttributes* pConfiguration,
    __out IMFMediaSession** ppMediaSession
    );
STDAPI MFCreatePMPMediaSession(
    DWORD dwCreationFlags,
    IMFAttributes *pConfiguration,
    __out IMFMediaSession** ppMediaSession,
    __out_opt IMFActivate **ppEnablerActivate
    );
typedef 
enum MF_OBJECT_TYPE
    {	MF_OBJECT_MEDIASOURCE	= 0,
	MF_OBJECT_BYTESTREAM	= ( MF_OBJECT_MEDIASOURCE + 1 ) ,
	MF_OBJECT_INVALID	= ( MF_OBJECT_BYTESTREAM + 1 ) 
    } 	MF_OBJECT_TYPE;


enum __MIDL___MIDL_itf_mfidl_0000_0001_0001
    {	MF_RESOLUTION_MEDIASOURCE	= 0x1,
	MF_RESOLUTION_BYTESTREAM	= 0x2,
	MF_RESOLUTION_CONTENT_DOES_NOT_HAVE_TO_MATCH_EXTENSION_OR_MIME_TYPE	= 0x10,
	MF_RESOLUTION_KEEP_BYTE_STREAM_ALIVE_ON_FAIL	= 0x20,
	MF_RESOLUTION_READ	= 0x10000,
	MF_RESOLUTION_WRITE	= 0x20000
    } ;
typedef 
enum _MF_CONNECT_METHOD
    {	MF_CONNECT_DIRECT	= 0,
	MF_CONNECT_ALLOW_CONVERTER	= 0x1,
	MF_CONNECT_ALLOW_DECODER	= 0x3,
	MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES	= 0x4,
	MF_CONNECT_AS_OPTIONAL	= 0x10000,
	MF_CONNECT_AS_OPTIONAL_BRANCH	= 0x20000
    } 	MF_CONNECT_METHOD;

typedef 
enum _MF_TOPOLOGY_RESOLUTION_STATUS_FLAGS
    {	MF_TOPOLOGY_RESOLUTION_SUCCEEDED	= 0,
	MF_OPTIONAL_NODE_REJECTED_MEDIA_TYPE	= 0x1,
	MF_OPTIONAL_NODE_REJECTED_PROTECTED_PROCESS	= 0x2
    } 	MF_TOPOLOGY_RESOLUTION_STATUS_FLAGS;




extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0001_v0_0_s_ifspec;

#ifndef __IMFSourceResolver_INTERFACE_DEFINED__
#define __IMFSourceResolver_INTERFACE_DEFINED__

/* interface IMFSourceResolver */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFSourceResolver;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FBE5A32D-A497-4b61-BB85-97B1A848A6E3")
    IMFSourceResolver : public IUnknown
    {
    public:
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE CreateObjectFromURL( 
            /* [in] */ LPCWSTR pwszURL,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IPropertyStore *pProps,
            /* [annotation][out] */ 
            __out  MF_OBJECT_TYPE *pObjectType,
            /* [annotation][out] */ 
            __out  IUnknown **ppObject) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE CreateObjectFromByteStream( 
            /* [in] */ IMFByteStream *pByteStream,
            /* [in] */ LPCWSTR pwszURL,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IPropertyStore *pProps,
            /* [annotation][out] */ 
            __out  MF_OBJECT_TYPE *pObjectType,
            /* [annotation][out] */ 
            __out  IUnknown **ppObject) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE BeginCreateObjectFromURL( 
            /* [in] */ LPCWSTR pwszURL,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IPropertyStore *pProps,
            /* [annotation][out] */ 
            __out_opt  IUnknown **ppIUnknownCancelCookie,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE EndCreateObjectFromURL( 
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  MF_OBJECT_TYPE *pObjectType,
            /* [annotation][out] */ 
            __out  IUnknown **ppObject) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE BeginCreateObjectFromByteStream( 
            /* [in] */ IMFByteStream *pByteStream,
            /* [in] */ LPCWSTR pwszURL,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IPropertyStore *pProps,
            /* [annotation][out] */ 
            __out_opt  IUnknown **ppIUnknownCancelCookie,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE EndCreateObjectFromByteStream( 
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  MF_OBJECT_TYPE *pObjectType,
            /* [annotation][out] */ 
            __out  IUnknown **ppObject) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE CancelObjectCreation( 
            /* [in] */ IUnknown *pIUnknownCancelCookie) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSourceResolverVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFSourceResolver * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFSourceResolver * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFSourceResolver * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *CreateObjectFromURL )( 
            IMFSourceResolver * This,
            /* [in] */ LPCWSTR pwszURL,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IPropertyStore *pProps,
            /* [annotation][out] */ 
            __out  MF_OBJECT_TYPE *pObjectType,
            /* [annotation][out] */ 
            __out  IUnknown **ppObject);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *CreateObjectFromByteStream )( 
            IMFSourceResolver * This,
            /* [in] */ IMFByteStream *pByteStream,
            /* [in] */ LPCWSTR pwszURL,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IPropertyStore *pProps,
            /* [annotation][out] */ 
            __out  MF_OBJECT_TYPE *pObjectType,
            /* [annotation][out] */ 
            __out  IUnknown **ppObject);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BeginCreateObjectFromURL )( 
            IMFSourceResolver * This,
            /* [in] */ LPCWSTR pwszURL,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IPropertyStore *pProps,
            /* [annotation][out] */ 
            __out_opt  IUnknown **ppIUnknownCancelCookie,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *EndCreateObjectFromURL )( 
            IMFSourceResolver * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  MF_OBJECT_TYPE *pObjectType,
            /* [annotation][out] */ 
            __out  IUnknown **ppObject);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BeginCreateObjectFromByteStream )( 
            IMFSourceResolver * This,
            /* [in] */ IMFByteStream *pByteStream,
            /* [in] */ LPCWSTR pwszURL,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IPropertyStore *pProps,
            /* [annotation][out] */ 
            __out_opt  IUnknown **ppIUnknownCancelCookie,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *EndCreateObjectFromByteStream )( 
            IMFSourceResolver * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  MF_OBJECT_TYPE *pObjectType,
            /* [annotation][out] */ 
            __out  IUnknown **ppObject);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *CancelObjectCreation )( 
            IMFSourceResolver * This,
            /* [in] */ IUnknown *pIUnknownCancelCookie);
        
        END_INTERFACE
    } IMFSourceResolverVtbl;

    interface IMFSourceResolver
    {
        CONST_VTBL struct IMFSourceResolverVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSourceResolver_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSourceResolver_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSourceResolver_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSourceResolver_CreateObjectFromURL(This,pwszURL,dwFlags,pProps,pObjectType,ppObject)	\
    ( (This)->lpVtbl -> CreateObjectFromURL(This,pwszURL,dwFlags,pProps,pObjectType,ppObject) ) 

#define IMFSourceResolver_CreateObjectFromByteStream(This,pByteStream,pwszURL,dwFlags,pProps,pObjectType,ppObject)	\
    ( (This)->lpVtbl -> CreateObjectFromByteStream(This,pByteStream,pwszURL,dwFlags,pProps,pObjectType,ppObject) ) 

#define IMFSourceResolver_BeginCreateObjectFromURL(This,pwszURL,dwFlags,pProps,ppIUnknownCancelCookie,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginCreateObjectFromURL(This,pwszURL,dwFlags,pProps,ppIUnknownCancelCookie,pCallback,punkState) ) 

#define IMFSourceResolver_EndCreateObjectFromURL(This,pResult,pObjectType,ppObject)	\
    ( (This)->lpVtbl -> EndCreateObjectFromURL(This,pResult,pObjectType,ppObject) ) 

#define IMFSourceResolver_BeginCreateObjectFromByteStream(This,pByteStream,pwszURL,dwFlags,pProps,ppIUnknownCancelCookie,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginCreateObjectFromByteStream(This,pByteStream,pwszURL,dwFlags,pProps,ppIUnknownCancelCookie,pCallback,punkState) ) 

#define IMFSourceResolver_EndCreateObjectFromByteStream(This,pResult,pObjectType,ppObject)	\
    ( (This)->lpVtbl -> EndCreateObjectFromByteStream(This,pResult,pObjectType,ppObject) ) 

#define IMFSourceResolver_CancelObjectCreation(This,pIUnknownCancelCookie)	\
    ( (This)->lpVtbl -> CancelObjectCreation(This,pIUnknownCancelCookie) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFSourceResolver_RemoteBeginCreateObjectFromURL_Proxy( 
    __RPC__in IMFSourceResolver * This,
    /* [string][in] */ __RPC__in_string LPCWSTR pwszURL,
    /* [in] */ DWORD dwFlags,
    /* [in] */ __RPC__in_opt IPropertyStore *pProps,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);


void __RPC_STUB IMFSourceResolver_RemoteBeginCreateObjectFromURL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFSourceResolver_RemoteEndCreateObjectFromURL_Proxy( 
    __RPC__in IMFSourceResolver * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult,
    /* [out] */ __RPC__out MF_OBJECT_TYPE *pObjectType,
    /* [out] */ __RPC__deref_out_opt IUnknown **ppObject);


void __RPC_STUB IMFSourceResolver_RemoteEndCreateObjectFromURL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFSourceResolver_RemoteBeginCreateObjectFromByteStream_Proxy( 
    __RPC__in IMFSourceResolver * This,
    /* [in] */ __RPC__in_opt IMFByteStream *pByteStream,
    /* [in] */ __RPC__in LPCWSTR pwszURL,
    /* [in] */ DWORD dwFlags,
    /* [in] */ __RPC__in_opt IPropertyStore *pProps,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);


void __RPC_STUB IMFSourceResolver_RemoteBeginCreateObjectFromByteStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFSourceResolver_RemoteEndCreateObjectFromByteStream_Proxy( 
    __RPC__in IMFSourceResolver * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult,
    /* [out] */ __RPC__out MF_OBJECT_TYPE *pObjectType,
    /* [out] */ __RPC__deref_out_opt IUnknown **ppObject);


void __RPC_STUB IMFSourceResolver_RemoteEndCreateObjectFromByteStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMFSourceResolver_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0002 */
/* [local] */ 

STDAPI MFCreateSourceResolver( 
        /* out */     __out IMFSourceResolver     **ppISourceResolver);
STDAPI CreatePropertyStore( 
        /* out */     __out IPropertyStore        **ppStore);
STDAPI MFGetSupportedSchemes(                      
       __out PROPVARIANT* pPropVarSchemeArray  );  
STDAPI MFGetSupportedMimeTypes(                      
       __out PROPVARIANT* pPropVarMimeTypeArray  );  
EXTERN_C const DECLSPEC_SELECTANY PROPERTYKEY MFPKEY_SourceOpenMonitor = { { 0x074d4637, 0xb5ae, 0x465d, 0xaf, 0x17, 0x1a, 0x53, 0x8d, 0x28, 0x59, 0xdd}, 0x02 }; 
EXTERN_C const DECLSPEC_SELECTANY PROPERTYKEY MFPKEY_ASFMediaSource_ApproxSeek = { { 0xb4cd270f, 0x244d, 0x4969, 0xbb, 0x92, 0x3f, 0x0f, 0xb8, 0x31, 0x6f, 0x10}, 0x01 }; 
#if (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_C const DECLSPEC_SELECTANY PROPERTYKEY MFPKEY_ASFMediaSource_IterativeSeekIfNoIndex = { { 0x170b65dc, 0x4a4e, 0x407a, 0xac, 0x22, 0x57, 0x7f, 0x50, 0xe4, 0xa3, 0x7c }, 0x01 }; 
EXTERN_C const DECLSPEC_SELECTANY PROPERTYKEY MFPKEY_ASFMediaSource_IterativeSeek_Max_Count = { { 0x170b65dc, 0x4a4e, 0x407a, 0xac, 0x22, 0x57, 0x7f, 0x50, 0xe4, 0xa3, 0x7c }, 0x02 }; 
EXTERN_C const DECLSPEC_SELECTANY PROPERTYKEY MFPKEY_ASFMediaSource_IterativeSeek_Tolerance_In_MilliSecond = { { 0x170b65dc, 0x4a4e, 0x407a, 0xac, 0x22, 0x57, 0x7f, 0x50, 0xe4, 0xa3, 0x7c }, 0x03 }; 
EXTERN_C const DECLSPEC_SELECTANY PROPERTYKEY MFPKEY_Content_DLNA_Profile_ID = { { 0xcfa31b45, 0x525d, 0x4998, 0xbb, 0x44, 0x3f, 0x7d, 0x81, 0x54, 0x2f, 0xa4 }, 0x01 }; 
EXTERN_C const DECLSPEC_SELECTANY PROPERTYKEY MFPKEY_MediaSource_DisableReadAhead = { { 0x26366c14, 0xc5bf, 0x4c76, 0x88, 0x7b, 0x9f, 0x17, 0x54, 0xdb, 0x5f, 0x9}, 0x01 }; 
#endif // (WINVER >= _WIN32_WINNT_WIN7) 
typedef 
enum _MFMEDIASOURCE_CHARACTERISTICS
    {	MFMEDIASOURCE_IS_LIVE	= 0x1,
	MFMEDIASOURCE_CAN_SEEK	= 0x2,
	MFMEDIASOURCE_CAN_PAUSE	= 0x4,
	MFMEDIASOURCE_HAS_SLOW_SEEK	= 0x8,
	MFMEDIASOURCE_HAS_MULTIPLE_PRESENTATIONS	= 0x10,
	MFMEDIASOURCE_CAN_SKIPFORWARD	= 0x20,
	MFMEDIASOURCE_CAN_SKIPBACKWARD	= 0x40
    } 	MFMEDIASOURCE_CHARACTERISTICS;

#if (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_GUID( MF_TIME_FORMAT_ENTRY_RELATIVE, 0x4399f178, 0x46d3, 0x4504, 0xaf, 0xda, 0x20, 0xd3, 0x2e, 0x9b, 0xa3, 0x60 );
#endif // (WINVER >= _WIN32_WINNT_WIN7) 




extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0002_v0_0_s_ifspec;

#ifndef __IMFMediaSource_INTERFACE_DEFINED__
#define __IMFMediaSource_INTERFACE_DEFINED__

/* interface IMFMediaSource */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFMediaSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("279a808d-aec7-40c8-9c6b-a6b492c78a66")
    IMFMediaSource : public IMFMediaEventGenerator
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCharacteristics( 
            /* [out] */ __RPC__out DWORD *pdwCharacteristics) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE CreatePresentationDescriptor( 
            /* [annotation][out] */ 
            __out  IMFPresentationDescriptor **ppPresentationDescriptor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Start( 
            /* [in] */ __RPC__in_opt IMFPresentationDescriptor *pPresentationDescriptor,
            /* [unique][in] */ __RPC__in_opt const GUID *pguidTimeFormat,
            /* [unique][in] */ __RPC__in_opt const PROPVARIANT *pvarStartPosition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Pause( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Shutdown( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMediaSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFMediaSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFMediaSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFMediaSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEvent )( 
            __RPC__in IMFMediaSource * This,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IMFMediaEvent **ppEvent);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( 
            IMFMediaSource * This,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( 
            IMFMediaSource * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  IMFMediaEvent **ppEvent);
        
        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( 
            __RPC__in IMFMediaSource * This,
            /* [in] */ MediaEventType met,
            /* [in] */ __RPC__in REFGUID guidExtendedType,
            /* [in] */ HRESULT hrStatus,
            /* [unique][in] */ __RPC__in_opt const PROPVARIANT *pvValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetCharacteristics )( 
            __RPC__in IMFMediaSource * This,
            /* [out] */ __RPC__out DWORD *pdwCharacteristics);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *CreatePresentationDescriptor )( 
            IMFMediaSource * This,
            /* [annotation][out] */ 
            __out  IMFPresentationDescriptor **ppPresentationDescriptor);
        
        HRESULT ( STDMETHODCALLTYPE *Start )( 
            __RPC__in IMFMediaSource * This,
            /* [in] */ __RPC__in_opt IMFPresentationDescriptor *pPresentationDescriptor,
            /* [unique][in] */ __RPC__in_opt const GUID *pguidTimeFormat,
            /* [unique][in] */ __RPC__in_opt const PROPVARIANT *pvarStartPosition);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            __RPC__in IMFMediaSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *Pause )( 
            __RPC__in IMFMediaSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *Shutdown )( 
            __RPC__in IMFMediaSource * This);
        
        END_INTERFACE
    } IMFMediaSourceVtbl;

    interface IMFMediaSource
    {
        CONST_VTBL struct IMFMediaSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMediaSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMediaSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMediaSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMediaSource_GetEvent(This,dwFlags,ppEvent)	\
    ( (This)->lpVtbl -> GetEvent(This,dwFlags,ppEvent) ) 

#define IMFMediaSource_BeginGetEvent(This,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginGetEvent(This,pCallback,punkState) ) 

#define IMFMediaSource_EndGetEvent(This,pResult,ppEvent)	\
    ( (This)->lpVtbl -> EndGetEvent(This,pResult,ppEvent) ) 

#define IMFMediaSource_QueueEvent(This,met,guidExtendedType,hrStatus,pvValue)	\
    ( (This)->lpVtbl -> QueueEvent(This,met,guidExtendedType,hrStatus,pvValue) ) 


#define IMFMediaSource_GetCharacteristics(This,pdwCharacteristics)	\
    ( (This)->lpVtbl -> GetCharacteristics(This,pdwCharacteristics) ) 

#define IMFMediaSource_CreatePresentationDescriptor(This,ppPresentationDescriptor)	\
    ( (This)->lpVtbl -> CreatePresentationDescriptor(This,ppPresentationDescriptor) ) 

#define IMFMediaSource_Start(This,pPresentationDescriptor,pguidTimeFormat,pvarStartPosition)	\
    ( (This)->lpVtbl -> Start(This,pPresentationDescriptor,pguidTimeFormat,pvarStartPosition) ) 

#define IMFMediaSource_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IMFMediaSource_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IMFMediaSource_Shutdown(This)	\
    ( (This)->lpVtbl -> Shutdown(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFMediaSource_RemoteCreatePresentationDescriptor_Proxy( 
    __RPC__in IMFMediaSource * This,
    /* [out] */ __RPC__out DWORD *pcbPD,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbPD) BYTE **pbPD,
    /* [out] */ __RPC__deref_out_opt IMFPresentationDescriptor **ppRemotePD);


void __RPC_STUB IMFMediaSource_RemoteCreatePresentationDescriptor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMFMediaSource_INTERFACE_DEFINED__ */


#ifndef __IMFMediaStream_INTERFACE_DEFINED__
#define __IMFMediaStream_INTERFACE_DEFINED__

/* interface IMFMediaStream */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFMediaStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D182108F-4EC6-443f-AA42-A71106EC825F")
    IMFMediaStream : public IMFMediaEventGenerator
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMediaSource( 
            /* [out] */ __RPC__deref_out_opt IMFMediaSource **ppMediaSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStreamDescriptor( 
            /* [out] */ __RPC__deref_out_opt IMFStreamDescriptor **ppStreamDescriptor) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE RequestSample( 
            /* [in] */ IUnknown *pToken) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMediaStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFMediaStream * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFMediaStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFMediaStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEvent )( 
            __RPC__in IMFMediaStream * This,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IMFMediaEvent **ppEvent);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( 
            IMFMediaStream * This,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( 
            IMFMediaStream * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  IMFMediaEvent **ppEvent);
        
        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( 
            __RPC__in IMFMediaStream * This,
            /* [in] */ MediaEventType met,
            /* [in] */ __RPC__in REFGUID guidExtendedType,
            /* [in] */ HRESULT hrStatus,
            /* [unique][in] */ __RPC__in_opt const PROPVARIANT *pvValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaSource )( 
            __RPC__in IMFMediaStream * This,
            /* [out] */ __RPC__deref_out_opt IMFMediaSource **ppMediaSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamDescriptor )( 
            __RPC__in IMFMediaStream * This,
            /* [out] */ __RPC__deref_out_opt IMFStreamDescriptor **ppStreamDescriptor);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *RequestSample )( 
            IMFMediaStream * This,
            /* [in] */ IUnknown *pToken);
        
        END_INTERFACE
    } IMFMediaStreamVtbl;

    interface IMFMediaStream
    {
        CONST_VTBL struct IMFMediaStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMediaStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMediaStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMediaStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMediaStream_GetEvent(This,dwFlags,ppEvent)	\
    ( (This)->lpVtbl -> GetEvent(This,dwFlags,ppEvent) ) 

#define IMFMediaStream_BeginGetEvent(This,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginGetEvent(This,pCallback,punkState) ) 

#define IMFMediaStream_EndGetEvent(This,pResult,ppEvent)	\
    ( (This)->lpVtbl -> EndGetEvent(This,pResult,ppEvent) ) 

#define IMFMediaStream_QueueEvent(This,met,guidExtendedType,hrStatus,pvValue)	\
    ( (This)->lpVtbl -> QueueEvent(This,met,guidExtendedType,hrStatus,pvValue) ) 


#define IMFMediaStream_GetMediaSource(This,ppMediaSource)	\
    ( (This)->lpVtbl -> GetMediaSource(This,ppMediaSource) ) 

#define IMFMediaStream_GetStreamDescriptor(This,ppStreamDescriptor)	\
    ( (This)->lpVtbl -> GetStreamDescriptor(This,ppStreamDescriptor) ) 

#define IMFMediaStream_RequestSample(This,pToken)	\
    ( (This)->lpVtbl -> RequestSample(This,pToken) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFMediaStream_RemoteRequestSample_Proxy( 
    __RPC__in IMFMediaStream * This);


void __RPC_STUB IMFMediaStream_RemoteRequestSample_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMFMediaStream_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0004 */
/* [local] */ 

#define MEDIASINK_FIXED_STREAMS         0x00000001
#define MEDIASINK_CANNOT_MATCH_CLOCK    0x00000002
#define MEDIASINK_RATELESS              0x00000004
#define MEDIASINK_CLOCK_REQUIRED        0x00000008
#define MEDIASINK_CAN_PREROLL           0x00000010
#define MEDIASINK_REQUIRE_REFERENCE_MEDIATYPE 0x00000020




extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0004_v0_0_s_ifspec;

#ifndef __IMFMediaSink_INTERFACE_DEFINED__
#define __IMFMediaSink_INTERFACE_DEFINED__

/* interface IMFMediaSink */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFMediaSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6ef2a660-47c0-4666-b13d-cbb717f2fa2c")
    IMFMediaSink : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCharacteristics( 
            /* [out] */ __RPC__out DWORD *pdwCharacteristics) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddStreamSink( 
            /* [in] */ DWORD dwStreamSinkIdentifier,
            /* [in] */ __RPC__in_opt IMFMediaType *pMediaType,
            /* [out] */ __RPC__deref_out_opt IMFStreamSink **ppStreamSink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveStreamSink( 
            /* [in] */ DWORD dwStreamSinkIdentifier) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStreamSinkCount( 
            /* [out] */ __RPC__out DWORD *pcStreamSinkCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStreamSinkByIndex( 
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IMFStreamSink **ppStreamSink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStreamSinkById( 
            /* [in] */ DWORD dwStreamSinkIdentifier,
            /* [out] */ __RPC__deref_out_opt IMFStreamSink **ppStreamSink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPresentationClock( 
            /* [in] */ __RPC__in_opt IMFPresentationClock *pPresentationClock) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPresentationClock( 
            /* [out] */ __RPC__deref_out_opt IMFPresentationClock **ppPresentationClock) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Shutdown( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMediaSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFMediaSink * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFMediaSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFMediaSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCharacteristics )( 
            __RPC__in IMFMediaSink * This,
            /* [out] */ __RPC__out DWORD *pdwCharacteristics);
        
        HRESULT ( STDMETHODCALLTYPE *AddStreamSink )( 
            __RPC__in IMFMediaSink * This,
            /* [in] */ DWORD dwStreamSinkIdentifier,
            /* [in] */ __RPC__in_opt IMFMediaType *pMediaType,
            /* [out] */ __RPC__deref_out_opt IMFStreamSink **ppStreamSink);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveStreamSink )( 
            __RPC__in IMFMediaSink * This,
            /* [in] */ DWORD dwStreamSinkIdentifier);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamSinkCount )( 
            __RPC__in IMFMediaSink * This,
            /* [out] */ __RPC__out DWORD *pcStreamSinkCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamSinkByIndex )( 
            __RPC__in IMFMediaSink * This,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IMFStreamSink **ppStreamSink);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamSinkById )( 
            __RPC__in IMFMediaSink * This,
            /* [in] */ DWORD dwStreamSinkIdentifier,
            /* [out] */ __RPC__deref_out_opt IMFStreamSink **ppStreamSink);
        
        HRESULT ( STDMETHODCALLTYPE *SetPresentationClock )( 
            __RPC__in IMFMediaSink * This,
            /* [in] */ __RPC__in_opt IMFPresentationClock *pPresentationClock);
        
        HRESULT ( STDMETHODCALLTYPE *GetPresentationClock )( 
            __RPC__in IMFMediaSink * This,
            /* [out] */ __RPC__deref_out_opt IMFPresentationClock **ppPresentationClock);
        
        HRESULT ( STDMETHODCALLTYPE *Shutdown )( 
            __RPC__in IMFMediaSink * This);
        
        END_INTERFACE
    } IMFMediaSinkVtbl;

    interface IMFMediaSink
    {
        CONST_VTBL struct IMFMediaSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMediaSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMediaSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMediaSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMediaSink_GetCharacteristics(This,pdwCharacteristics)	\
    ( (This)->lpVtbl -> GetCharacteristics(This,pdwCharacteristics) ) 

#define IMFMediaSink_AddStreamSink(This,dwStreamSinkIdentifier,pMediaType,ppStreamSink)	\
    ( (This)->lpVtbl -> AddStreamSink(This,dwStreamSinkIdentifier,pMediaType,ppStreamSink) ) 

#define IMFMediaSink_RemoveStreamSink(This,dwStreamSinkIdentifier)	\
    ( (This)->lpVtbl -> RemoveStreamSink(This,dwStreamSinkIdentifier) ) 

#define IMFMediaSink_GetStreamSinkCount(This,pcStreamSinkCount)	\
    ( (This)->lpVtbl -> GetStreamSinkCount(This,pcStreamSinkCount) ) 

#define IMFMediaSink_GetStreamSinkByIndex(This,dwIndex,ppStreamSink)	\
    ( (This)->lpVtbl -> GetStreamSinkByIndex(This,dwIndex,ppStreamSink) ) 

#define IMFMediaSink_GetStreamSinkById(This,dwStreamSinkIdentifier,ppStreamSink)	\
    ( (This)->lpVtbl -> GetStreamSinkById(This,dwStreamSinkIdentifier,ppStreamSink) ) 

#define IMFMediaSink_SetPresentationClock(This,pPresentationClock)	\
    ( (This)->lpVtbl -> SetPresentationClock(This,pPresentationClock) ) 

#define IMFMediaSink_GetPresentationClock(This,ppPresentationClock)	\
    ( (This)->lpVtbl -> GetPresentationClock(This,ppPresentationClock) ) 

#define IMFMediaSink_Shutdown(This)	\
    ( (This)->lpVtbl -> Shutdown(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFMediaSink_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0005 */
/* [local] */ 

typedef 
enum _MFSTREAMSINK_MARKER_TYPE
    {	MFSTREAMSINK_MARKER_DEFAULT	= 0,
	MFSTREAMSINK_MARKER_ENDOFSEGMENT	= ( MFSTREAMSINK_MARKER_DEFAULT + 1 ) ,
	MFSTREAMSINK_MARKER_TICK	= ( MFSTREAMSINK_MARKER_ENDOFSEGMENT + 1 ) ,
	MFSTREAMSINK_MARKER_EVENT	= ( MFSTREAMSINK_MARKER_TICK + 1 ) 
    } 	MFSTREAMSINK_MARKER_TYPE;




extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0005_v0_0_s_ifspec;

#ifndef __IMFStreamSink_INTERFACE_DEFINED__
#define __IMFStreamSink_INTERFACE_DEFINED__

/* interface IMFStreamSink */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFStreamSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0A97B3CF-8E7C-4a3d-8F8C-0C843DC247FB")
    IMFStreamSink : public IMFMediaEventGenerator
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMediaSink( 
            /* [out] */ __RPC__deref_out_opt IMFMediaSink **ppMediaSink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIdentifier( 
            /* [out] */ __RPC__out DWORD *pdwIdentifier) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMediaTypeHandler( 
            /* [out] */ __RPC__deref_out_opt IMFMediaTypeHandler **ppHandler) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ProcessSample( 
            /* [in] */ __RPC__in_opt IMFSample *pSample) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PlaceMarker( 
            /* [in] */ MFSTREAMSINK_MARKER_TYPE eMarkerType,
            /* [in] */ __RPC__in const PROPVARIANT *pvarMarkerValue,
            /* [in] */ __RPC__in const PROPVARIANT *pvarContextValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Flush( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFStreamSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFStreamSink * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFStreamSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFStreamSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEvent )( 
            __RPC__in IMFStreamSink * This,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IMFMediaEvent **ppEvent);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BeginGetEvent )( 
            IMFStreamSink * This,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *EndGetEvent )( 
            IMFStreamSink * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  IMFMediaEvent **ppEvent);
        
        HRESULT ( STDMETHODCALLTYPE *QueueEvent )( 
            __RPC__in IMFStreamSink * This,
            /* [in] */ MediaEventType met,
            /* [in] */ __RPC__in REFGUID guidExtendedType,
            /* [in] */ HRESULT hrStatus,
            /* [unique][in] */ __RPC__in_opt const PROPVARIANT *pvValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaSink )( 
            __RPC__in IMFStreamSink * This,
            /* [out] */ __RPC__deref_out_opt IMFMediaSink **ppMediaSink);
        
        HRESULT ( STDMETHODCALLTYPE *GetIdentifier )( 
            __RPC__in IMFStreamSink * This,
            /* [out] */ __RPC__out DWORD *pdwIdentifier);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaTypeHandler )( 
            __RPC__in IMFStreamSink * This,
            /* [out] */ __RPC__deref_out_opt IMFMediaTypeHandler **ppHandler);
        
        HRESULT ( STDMETHODCALLTYPE *ProcessSample )( 
            __RPC__in IMFStreamSink * This,
            /* [in] */ __RPC__in_opt IMFSample *pSample);
        
        HRESULT ( STDMETHODCALLTYPE *PlaceMarker )( 
            __RPC__in IMFStreamSink * This,
            /* [in] */ MFSTREAMSINK_MARKER_TYPE eMarkerType,
            /* [in] */ __RPC__in const PROPVARIANT *pvarMarkerValue,
            /* [in] */ __RPC__in const PROPVARIANT *pvarContextValue);
        
        HRESULT ( STDMETHODCALLTYPE *Flush )( 
            __RPC__in IMFStreamSink * This);
        
        END_INTERFACE
    } IMFStreamSinkVtbl;

    interface IMFStreamSink
    {
        CONST_VTBL struct IMFStreamSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFStreamSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFStreamSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFStreamSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFStreamSink_GetEvent(This,dwFlags,ppEvent)	\
    ( (This)->lpVtbl -> GetEvent(This,dwFlags,ppEvent) ) 

#define IMFStreamSink_BeginGetEvent(This,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginGetEvent(This,pCallback,punkState) ) 

#define IMFStreamSink_EndGetEvent(This,pResult,ppEvent)	\
    ( (This)->lpVtbl -> EndGetEvent(This,pResult,ppEvent) ) 

#define IMFStreamSink_QueueEvent(This,met,guidExtendedType,hrStatus,pvValue)	\
    ( (This)->lpVtbl -> QueueEvent(This,met,guidExtendedType,hrStatus,pvValue) ) 


#define IMFStreamSink_GetMediaSink(This,ppMediaSink)	\
    ( (This)->lpVtbl -> GetMediaSink(This,ppMediaSink) ) 

#define IMFStreamSink_GetIdentifier(This,pdwIdentifier)	\
    ( (This)->lpVtbl -> GetIdentifier(This,pdwIdentifier) ) 

#define IMFStreamSink_GetMediaTypeHandler(This,ppHandler)	\
    ( (This)->lpVtbl -> GetMediaTypeHandler(This,ppHandler) ) 

#define IMFStreamSink_ProcessSample(This,pSample)	\
    ( (This)->lpVtbl -> ProcessSample(This,pSample) ) 

#define IMFStreamSink_PlaceMarker(This,eMarkerType,pvarMarkerValue,pvarContextValue)	\
    ( (This)->lpVtbl -> PlaceMarker(This,eMarkerType,pvarMarkerValue,pvarContextValue) ) 

#define IMFStreamSink_Flush(This)	\
    ( (This)->lpVtbl -> Flush(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFStreamSink_INTERFACE_DEFINED__ */


#ifndef __IMFVideoSampleAllocator_INTERFACE_DEFINED__
#define __IMFVideoSampleAllocator_INTERFACE_DEFINED__

/* interface IMFVideoSampleAllocator */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFVideoSampleAllocator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("86cbc910-e533-4751-8e3b-f19b5b806a03")
    IMFVideoSampleAllocator : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetDirectXManager( 
            /* [unique][in] */ IUnknown *pManager) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UninitializeSampleAllocator( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InitializeSampleAllocator( 
            /* [in] */ DWORD cRequestedFrames,
            /* [in] */ IMFMediaType *pMediaType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AllocateSample( 
            /* [out] */ IMFSample **ppSample) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFVideoSampleAllocatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFVideoSampleAllocator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFVideoSampleAllocator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFVideoSampleAllocator * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetDirectXManager )( 
            IMFVideoSampleAllocator * This,
            /* [unique][in] */ IUnknown *pManager);
        
        HRESULT ( STDMETHODCALLTYPE *UninitializeSampleAllocator )( 
            IMFVideoSampleAllocator * This);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeSampleAllocator )( 
            IMFVideoSampleAllocator * This,
            /* [in] */ DWORD cRequestedFrames,
            /* [in] */ IMFMediaType *pMediaType);
        
        HRESULT ( STDMETHODCALLTYPE *AllocateSample )( 
            IMFVideoSampleAllocator * This,
            /* [out] */ IMFSample **ppSample);
        
        END_INTERFACE
    } IMFVideoSampleAllocatorVtbl;

    interface IMFVideoSampleAllocator
    {
        CONST_VTBL struct IMFVideoSampleAllocatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFVideoSampleAllocator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFVideoSampleAllocator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFVideoSampleAllocator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFVideoSampleAllocator_SetDirectXManager(This,pManager)	\
    ( (This)->lpVtbl -> SetDirectXManager(This,pManager) ) 

#define IMFVideoSampleAllocator_UninitializeSampleAllocator(This)	\
    ( (This)->lpVtbl -> UninitializeSampleAllocator(This) ) 

#define IMFVideoSampleAllocator_InitializeSampleAllocator(This,cRequestedFrames,pMediaType)	\
    ( (This)->lpVtbl -> InitializeSampleAllocator(This,cRequestedFrames,pMediaType) ) 

#define IMFVideoSampleAllocator_AllocateSample(This,ppSample)	\
    ( (This)->lpVtbl -> AllocateSample(This,ppSample) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFVideoSampleAllocator_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0007 */
/* [local] */ 

#if (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0007_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0007_v0_0_s_ifspec;

#ifndef __IMFVideoSampleAllocatorNotify_INTERFACE_DEFINED__
#define __IMFVideoSampleAllocatorNotify_INTERFACE_DEFINED__

/* interface IMFVideoSampleAllocatorNotify */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFVideoSampleAllocatorNotify;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A792CDBE-C374-4e89-8335-278E7B9956A4")
    IMFVideoSampleAllocatorNotify : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE NotifyRelease( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFVideoSampleAllocatorNotifyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFVideoSampleAllocatorNotify * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFVideoSampleAllocatorNotify * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFVideoSampleAllocatorNotify * This);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyRelease )( 
            IMFVideoSampleAllocatorNotify * This);
        
        END_INTERFACE
    } IMFVideoSampleAllocatorNotifyVtbl;

    interface IMFVideoSampleAllocatorNotify
    {
        CONST_VTBL struct IMFVideoSampleAllocatorNotifyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFVideoSampleAllocatorNotify_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFVideoSampleAllocatorNotify_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFVideoSampleAllocatorNotify_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFVideoSampleAllocatorNotify_NotifyRelease(This)	\
    ( (This)->lpVtbl -> NotifyRelease(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFVideoSampleAllocatorNotify_INTERFACE_DEFINED__ */


#ifndef __IMFVideoSampleAllocatorCallback_INTERFACE_DEFINED__
#define __IMFVideoSampleAllocatorCallback_INTERFACE_DEFINED__

/* interface IMFVideoSampleAllocatorCallback */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFVideoSampleAllocatorCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("992388B4-3372-4f67-8B6F-C84C071F4751")
    IMFVideoSampleAllocatorCallback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetCallback( 
            /* [unique][in] */ IMFVideoSampleAllocatorNotify *pNotify) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFreeSampleCount( 
            /* [out] */ LONG *plSamples) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFVideoSampleAllocatorCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFVideoSampleAllocatorCallback * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFVideoSampleAllocatorCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFVideoSampleAllocatorCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetCallback )( 
            IMFVideoSampleAllocatorCallback * This,
            /* [unique][in] */ IMFVideoSampleAllocatorNotify *pNotify);
        
        HRESULT ( STDMETHODCALLTYPE *GetFreeSampleCount )( 
            IMFVideoSampleAllocatorCallback * This,
            /* [out] */ LONG *plSamples);
        
        END_INTERFACE
    } IMFVideoSampleAllocatorCallbackVtbl;

    interface IMFVideoSampleAllocatorCallback
    {
        CONST_VTBL struct IMFVideoSampleAllocatorCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFVideoSampleAllocatorCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFVideoSampleAllocatorCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFVideoSampleAllocatorCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFVideoSampleAllocatorCallback_SetCallback(This,pNotify)	\
    ( (This)->lpVtbl -> SetCallback(This,pNotify) ) 

#define IMFVideoSampleAllocatorCallback_GetFreeSampleCount(This,plSamples)	\
    ( (This)->lpVtbl -> GetFreeSampleCount(This,plSamples) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFVideoSampleAllocatorCallback_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0009 */
/* [local] */ 

#endif // (WINVER >= _WIN32_WINNT_WIN7) 



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0009_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0009_v0_0_s_ifspec;

#ifndef __IMFTopology_INTERFACE_DEFINED__
#define __IMFTopology_INTERFACE_DEFINED__

/* interface IMFTopology */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFTopology;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83CF873A-F6DA-4bc8-823F-BACFD55DC433")
    IMFTopology : public IMFAttributes
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTopologyID( 
            /* [out] */ __RPC__out TOPOID *pID) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE AddNode( 
            /* [in] */ IMFTopologyNode *pNode) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE RemoveNode( 
            /* [in] */ IMFTopologyNode *pNode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNodeCount( 
            /* [out] */ __RPC__out WORD *pwNodes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNode( 
            /* [in] */ WORD wIndex,
            /* [out] */ __RPC__deref_out_opt IMFTopologyNode **ppNode) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloneFrom( 
            /* [in] */ __RPC__in_opt IMFTopology *pTopology) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNodeByID( 
            /* [in] */ TOPOID qwTopoNodeID,
            /* [out] */ __RPC__deref_out_opt IMFTopologyNode **ppNode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSourceNodeCollection( 
            /* [out] */ __RPC__deref_out_opt IMFCollection **ppCollection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputNodeCollection( 
            /* [out] */ __RPC__deref_out_opt IMFCollection **ppCollection) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFTopologyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFTopology * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFTopology * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFTopology * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemType )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out MF_ATTRIBUTE_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *CompareItem )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value,
            /* [out] */ __RPC__out BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *Compare )( 
            __RPC__in IMFTopology * This,
            __RPC__in_opt IMFAttributes *pTheirs,
            MF_ATTRIBUTES_MATCH_TYPE MatchType,
            /* [out] */ __RPC__out BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT64 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetDouble )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out double *pfValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetGUID )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out GUID *pguidValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetString )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,
            UINT32 cchBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,
            /* [out] */ __RPC__out UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlob )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,
            UINT32 cbBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,
            /* [out] */ __RPC__out UINT32 *pcbSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt LPVOID *ppv);
        
        HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( 
            __RPC__in IMFTopology * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            UINT32 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            UINT64 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetDouble )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            double fValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetGUID )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFGUID guidValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetString )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [string][in] */ __RPC__in_string LPCWSTR wszValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetBlob )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][in] */ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,
            UINT32 cbBufSize);
        
        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( 
            __RPC__in IMFTopology * This,
            __RPC__in REFGUID guidKey,
            /* [in] */ __RPC__in_opt IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *LockStore )( 
            __RPC__in IMFTopology * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( 
            __RPC__in IMFTopology * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            __RPC__in IMFTopology * This,
            /* [out] */ __RPC__out UINT32 *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( 
            __RPC__in IMFTopology * This,
            UINT32 unIndex,
            /* [out] */ __RPC__out GUID *pguidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( 
            __RPC__in IMFTopology * This,
            /* [in] */ __RPC__in_opt IMFAttributes *pDest);
        
        HRESULT ( STDMETHODCALLTYPE *GetTopologyID )( 
            __RPC__in IMFTopology * This,
            /* [out] */ __RPC__out TOPOID *pID);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *AddNode )( 
            IMFTopology * This,
            /* [in] */ IMFTopologyNode *pNode);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *RemoveNode )( 
            IMFTopology * This,
            /* [in] */ IMFTopologyNode *pNode);
        
        HRESULT ( STDMETHODCALLTYPE *GetNodeCount )( 
            __RPC__in IMFTopology * This,
            /* [out] */ __RPC__out WORD *pwNodes);
        
        HRESULT ( STDMETHODCALLTYPE *GetNode )( 
            __RPC__in IMFTopology * This,
            /* [in] */ WORD wIndex,
            /* [out] */ __RPC__deref_out_opt IMFTopologyNode **ppNode);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            IMFTopology * This);
        
        HRESULT ( STDMETHODCALLTYPE *CloneFrom )( 
            __RPC__in IMFTopology * This,
            /* [in] */ __RPC__in_opt IMFTopology *pTopology);
        
        HRESULT ( STDMETHODCALLTYPE *GetNodeByID )( 
            __RPC__in IMFTopology * This,
            /* [in] */ TOPOID qwTopoNodeID,
            /* [out] */ __RPC__deref_out_opt IMFTopologyNode **ppNode);
        
        HRESULT ( STDMETHODCALLTYPE *GetSourceNodeCollection )( 
            __RPC__in IMFTopology * This,
            /* [out] */ __RPC__deref_out_opt IMFCollection **ppCollection);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputNodeCollection )( 
            __RPC__in IMFTopology * This,
            /* [out] */ __RPC__deref_out_opt IMFCollection **ppCollection);
        
        END_INTERFACE
    } IMFTopologyVtbl;

    interface IMFTopology
    {
        CONST_VTBL struct IMFTopologyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFTopology_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFTopology_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFTopology_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFTopology_GetItem(This,guidKey,pValue)	\
    ( (This)->lpVtbl -> GetItem(This,guidKey,pValue) ) 

#define IMFTopology_GetItemType(This,guidKey,pType)	\
    ( (This)->lpVtbl -> GetItemType(This,guidKey,pType) ) 

#define IMFTopology_CompareItem(This,guidKey,Value,pbResult)	\
    ( (This)->lpVtbl -> CompareItem(This,guidKey,Value,pbResult) ) 

#define IMFTopology_Compare(This,pTheirs,MatchType,pbResult)	\
    ( (This)->lpVtbl -> Compare(This,pTheirs,MatchType,pbResult) ) 

#define IMFTopology_GetUINT32(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT32(This,guidKey,punValue) ) 

#define IMFTopology_GetUINT64(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT64(This,guidKey,punValue) ) 

#define IMFTopology_GetDouble(This,guidKey,pfValue)	\
    ( (This)->lpVtbl -> GetDouble(This,guidKey,pfValue) ) 

#define IMFTopology_GetGUID(This,guidKey,pguidValue)	\
    ( (This)->lpVtbl -> GetGUID(This,guidKey,pguidValue) ) 

#define IMFTopology_GetStringLength(This,guidKey,pcchLength)	\
    ( (This)->lpVtbl -> GetStringLength(This,guidKey,pcchLength) ) 

#define IMFTopology_GetString(This,guidKey,pwszValue,cchBufSize,pcchLength)	\
    ( (This)->lpVtbl -> GetString(This,guidKey,pwszValue,cchBufSize,pcchLength) ) 

#define IMFTopology_GetAllocatedString(This,guidKey,ppwszValue,pcchLength)	\
    ( (This)->lpVtbl -> GetAllocatedString(This,guidKey,ppwszValue,pcchLength) ) 

#define IMFTopology_GetBlobSize(This,guidKey,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlobSize(This,guidKey,pcbBlobSize) ) 

#define IMFTopology_GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize) ) 

#define IMFTopology_GetAllocatedBlob(This,guidKey,ppBuf,pcbSize)	\
    ( (This)->lpVtbl -> GetAllocatedBlob(This,guidKey,ppBuf,pcbSize) ) 

#define IMFTopology_GetUnknown(This,guidKey,riid,ppv)	\
    ( (This)->lpVtbl -> GetUnknown(This,guidKey,riid,ppv) ) 

#define IMFTopology_SetItem(This,guidKey,Value)	\
    ( (This)->lpVtbl -> SetItem(This,guidKey,Value) ) 

#define IMFTopology_DeleteItem(This,guidKey)	\
    ( (This)->lpVtbl -> DeleteItem(This,guidKey) ) 

#define IMFTopology_DeleteAllItems(This)	\
    ( (This)->lpVtbl -> DeleteAllItems(This) ) 

#define IMFTopology_SetUINT32(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT32(This,guidKey,unValue) ) 

#define IMFTopology_SetUINT64(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT64(This,guidKey,unValue) ) 

#define IMFTopology_SetDouble(This,guidKey,fValue)	\
    ( (This)->lpVtbl -> SetDouble(This,guidKey,fValue) ) 

#define IMFTopology_SetGUID(This,guidKey,guidValue)	\
    ( (This)->lpVtbl -> SetGUID(This,guidKey,guidValue) ) 

#define IMFTopology_SetString(This,guidKey,wszValue)	\
    ( (This)->lpVtbl -> SetString(This,guidKey,wszValue) ) 

#define IMFTopology_SetBlob(This,guidKey,pBuf,cbBufSize)	\
    ( (This)->lpVtbl -> SetBlob(This,guidKey,pBuf,cbBufSize) ) 

#define IMFTopology_SetUnknown(This,guidKey,pUnknown)	\
    ( (This)->lpVtbl -> SetUnknown(This,guidKey,pUnknown) ) 

#define IMFTopology_LockStore(This)	\
    ( (This)->lpVtbl -> LockStore(This) ) 

#define IMFTopology_UnlockStore(This)	\
    ( (This)->lpVtbl -> UnlockStore(This) ) 

#define IMFTopology_GetCount(This,pcItems)	\
    ( (This)->lpVtbl -> GetCount(This,pcItems) ) 

#define IMFTopology_GetItemByIndex(This,unIndex,pguidKey,pValue)	\
    ( (This)->lpVtbl -> GetItemByIndex(This,unIndex,pguidKey,pValue) ) 

#define IMFTopology_CopyAllItems(This,pDest)	\
    ( (This)->lpVtbl -> CopyAllItems(This,pDest) ) 


#define IMFTopology_GetTopologyID(This,pID)	\
    ( (This)->lpVtbl -> GetTopologyID(This,pID) ) 

#define IMFTopology_AddNode(This,pNode)	\
    ( (This)->lpVtbl -> AddNode(This,pNode) ) 

#define IMFTopology_RemoveNode(This,pNode)	\
    ( (This)->lpVtbl -> RemoveNode(This,pNode) ) 

#define IMFTopology_GetNodeCount(This,pwNodes)	\
    ( (This)->lpVtbl -> GetNodeCount(This,pwNodes) ) 

#define IMFTopology_GetNode(This,wIndex,ppNode)	\
    ( (This)->lpVtbl -> GetNode(This,wIndex,ppNode) ) 

#define IMFTopology_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define IMFTopology_CloneFrom(This,pTopology)	\
    ( (This)->lpVtbl -> CloneFrom(This,pTopology) ) 

#define IMFTopology_GetNodeByID(This,qwTopoNodeID,ppNode)	\
    ( (This)->lpVtbl -> GetNodeByID(This,qwTopoNodeID,ppNode) ) 

#define IMFTopology_GetSourceNodeCollection(This,ppCollection)	\
    ( (This)->lpVtbl -> GetSourceNodeCollection(This,ppCollection) ) 

#define IMFTopology_GetOutputNodeCollection(This,ppCollection)	\
    ( (This)->lpVtbl -> GetOutputNodeCollection(This,ppCollection) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFTopology_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0010 */
/* [local] */ 

EXTERN_GUID( MF_TOPOLOGY_PROJECTSTART, 0x7ed3f802, 0x86bb, 0x4b3f, 0xb7, 0xe4, 0x7c, 0xb4, 0x3a, 0xfd, 0x4b, 0x80);
EXTERN_GUID( MF_TOPOLOGY_PROJECTSTOP, 0x7ed3f803, 0x86bb, 0x4b3f, 0xb7, 0xe4, 0x7c, 0xb4, 0x3a, 0xfd, 0x4b, 0x80);
EXTERN_GUID( MF_TOPOLOGY_NO_MARKIN_MARKOUT, 0x7ed3f804, 0x86bb, 0x4b3f, 0xb7, 0xe4, 0x7c, 0xb4, 0x3a, 0xfd, 0x4b, 0x80);
#if (WINVER >= _WIN32_WINNT_WIN7) 
typedef 
enum MFTOPOLOGY_DXVA_MODE
    {	MFTOPOLOGY_DXVA_DEFAULT	= 0,
	MFTOPOLOGY_DXVA_NONE	= 1,
	MFTOPOLOGY_DXVA_FULL	= 2
    } 	MFTOPOLOGY_DXVA_MODE;

EXTERN_GUID(MF_TOPOLOGY_DXVA_MODE, 0x1e8d34f6, 0xf5ab, 0x4e23, 0xbb, 0x88, 0x87, 0x4a, 0xa3, 0xa1, 0xa7, 0x4d);
EXTERN_GUID(MF_TOPOLOGY_STATIC_PLAYBACK_OPTIMIZATIONS, 0xb86cac42, 0x41a6, 0x4b79, 0x89, 0x7a, 0x1a, 0xb0, 0xe5, 0x2b, 0x4a, 0x1b);
EXTERN_GUID(MF_TOPOLOGY_PLAYBACK_MAX_DIMS,  0x5715cf19, 0x5768, 0x44aa, 0xad, 0x6e, 0x87, 0x21, 0xf1, 0xb0, 0xf9, 0xbb);
typedef 
enum MFTOPOLOGY_HARDWARE_MODE
    {	MFTOPOLOGY_HWMODE_SOFTWARE_ONLY	= 0,
	MFTOPOLOGY_HWMODE_USE_HARDWARE	= 1
    } 	MFTOPOLOGY_HARDWARE_MODE;

EXTERN_GUID(MF_TOPOLOGY_HARDWARE_MODE, 0xd2d362fd, 0x4e4f, 0x4191, 0xa5, 0x79, 0xc6, 0x18, 0xb6, 0x67, 0x6, 0xaf);
EXTERN_GUID(MF_TOPOLOGY_PLAYBACK_FRAMERATE, 0xc164737a, 0xc2b1, 0x4553, 0x83, 0xbb, 0x5a, 0x52, 0x60, 0x72, 0x44, 0x8f);
EXTERN_GUID(MF_TOPOLOGY_DYNAMIC_CHANGE_NOT_ALLOWED, 0xd529950b, 0xd484, 0x4527, 0xa9, 0xcd, 0xb1, 0x90, 0x95, 0x32, 0xb5, 0xb0);
EXTERN_GUID(MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES, 0x6248c36d, 0x5d0b, 0x4f40, 0xa0, 0xbb, 0xb0, 0xb3, 0x05, 0xf7, 0x76, 0x98);
EXTERN_GUID( MF_TOPOLOGY_START_TIME_ON_PRESENTATION_SWITCH, 0xc8cc113f, 0x7951, 0x4548, 0xaa, 0xd6, 0x9e, 0xd6, 0x20, 0x2e, 0x62, 0xb3);
#endif // (WINVER >= _WIN32_WINNT_WIN7) 
STDAPI MFCreateTopology(
    __out IMFTopology ** ppTopo );
typedef 
enum MF_TOPOLOGY_TYPE
    {	MF_TOPOLOGY_OUTPUT_NODE	= 0,
	MF_TOPOLOGY_SOURCESTREAM_NODE	= ( MF_TOPOLOGY_OUTPUT_NODE + 1 ) ,
	MF_TOPOLOGY_TRANSFORM_NODE	= ( MF_TOPOLOGY_SOURCESTREAM_NODE + 1 ) ,
	MF_TOPOLOGY_TEE_NODE	= ( MF_TOPOLOGY_TRANSFORM_NODE + 1 ) ,
	MF_TOPOLOGY_MAX	= 0xffffffff
    } 	MF_TOPOLOGY_TYPE;



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0010_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0010_v0_0_s_ifspec;

#ifndef __IMFTopologyNode_INTERFACE_DEFINED__
#define __IMFTopologyNode_INTERFACE_DEFINED__

/* interface IMFTopologyNode */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFTopologyNode;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83CF873A-F6DA-4bc8-823F-BACFD55DC430")
    IMFTopologyNode : public IMFAttributes
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetObject( 
            /* [in] */ __RPC__in_opt IUnknown *pObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetObject( 
            /* [out] */ __RPC__deref_out_opt IUnknown **ppObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNodeType( 
            /* [out] */ __RPC__out MF_TOPOLOGY_TYPE *pType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTopoNodeID( 
            /* [out] */ __RPC__out TOPOID *pID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTopoNodeID( 
            /* [in] */ TOPOID ullTopoID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputCount( 
            /* [out] */ __RPC__out DWORD *pcInputs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputCount( 
            /* [out] */ __RPC__out DWORD *pcOutputs) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE ConnectOutput( 
            /* [in] */ DWORD dwOutputIndex,
            /* [in] */ IMFTopologyNode *pDownstreamNode,
            /* [in] */ DWORD dwInputIndexOnDownstreamNode) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE DisconnectOutput( 
            /* [in] */ DWORD dwOutputIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInput( 
            /* [in] */ DWORD dwInputIndex,
            /* [out] */ __RPC__deref_out_opt IMFTopologyNode **ppUpstreamNode,
            /* [out] */ __RPC__out DWORD *pdwOutputIndexOnUpstreamNode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutput( 
            /* [in] */ DWORD dwOutputIndex,
            /* [out] */ __RPC__deref_out_opt IMFTopologyNode **ppDownstreamNode,
            /* [out] */ __RPC__out DWORD *pdwInputIndexOnDownstreamNode) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE SetOutputPrefType( 
            /* [in] */ DWORD dwOutputIndex,
            /* [in] */ IMFMediaType *pType) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE GetOutputPrefType( 
            /* [in] */ DWORD dwOutputIndex,
            /* [annotation][out] */ 
            __out  IMFMediaType **ppType) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE SetInputPrefType( 
            /* [in] */ DWORD dwInputIndex,
            /* [in] */ IMFMediaType *pType) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE GetInputPrefType( 
            /* [in] */ DWORD dwInputIndex,
            /* [annotation][out] */ 
            __out  IMFMediaType **ppType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloneFrom( 
            /* [in] */ __RPC__in_opt IMFTopologyNode *pNode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFTopologyNodeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFTopologyNode * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFTopologyNode * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFTopologyNode * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemType )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out MF_ATTRIBUTE_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *CompareItem )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value,
            /* [out] */ __RPC__out BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *Compare )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in_opt IMFAttributes *pTheirs,
            MF_ATTRIBUTES_MATCH_TYPE MatchType,
            /* [out] */ __RPC__out BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT64 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetDouble )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out double *pfValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetGUID )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out GUID *pguidValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetString )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,
            UINT32 cchBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,
            /* [out] */ __RPC__out UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlob )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,
            UINT32 cbBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,
            /* [out] */ __RPC__out UINT32 *pcbSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt LPVOID *ppv);
        
        HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( 
            __RPC__in IMFTopologyNode * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            UINT32 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            UINT64 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetDouble )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            double fValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetGUID )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFGUID guidValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetString )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [string][in] */ __RPC__in_string LPCWSTR wszValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetBlob )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][in] */ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,
            UINT32 cbBufSize);
        
        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( 
            __RPC__in IMFTopologyNode * This,
            __RPC__in REFGUID guidKey,
            /* [in] */ __RPC__in_opt IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *LockStore )( 
            __RPC__in IMFTopologyNode * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( 
            __RPC__in IMFTopologyNode * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            __RPC__in IMFTopologyNode * This,
            /* [out] */ __RPC__out UINT32 *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( 
            __RPC__in IMFTopologyNode * This,
            UINT32 unIndex,
            /* [out] */ __RPC__out GUID *pguidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( 
            __RPC__in IMFTopologyNode * This,
            /* [in] */ __RPC__in_opt IMFAttributes *pDest);
        
        HRESULT ( STDMETHODCALLTYPE *SetObject )( 
            __RPC__in IMFTopologyNode * This,
            /* [in] */ __RPC__in_opt IUnknown *pObject);
        
        HRESULT ( STDMETHODCALLTYPE *GetObject )( 
            __RPC__in IMFTopologyNode * This,
            /* [out] */ __RPC__deref_out_opt IUnknown **ppObject);
        
        HRESULT ( STDMETHODCALLTYPE *GetNodeType )( 
            __RPC__in IMFTopologyNode * This,
            /* [out] */ __RPC__out MF_TOPOLOGY_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *GetTopoNodeID )( 
            __RPC__in IMFTopologyNode * This,
            /* [out] */ __RPC__out TOPOID *pID);
        
        HRESULT ( STDMETHODCALLTYPE *SetTopoNodeID )( 
            __RPC__in IMFTopologyNode * This,
            /* [in] */ TOPOID ullTopoID);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputCount )( 
            __RPC__in IMFTopologyNode * This,
            /* [out] */ __RPC__out DWORD *pcInputs);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputCount )( 
            __RPC__in IMFTopologyNode * This,
            /* [out] */ __RPC__out DWORD *pcOutputs);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *ConnectOutput )( 
            IMFTopologyNode * This,
            /* [in] */ DWORD dwOutputIndex,
            /* [in] */ IMFTopologyNode *pDownstreamNode,
            /* [in] */ DWORD dwInputIndexOnDownstreamNode);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *DisconnectOutput )( 
            IMFTopologyNode * This,
            /* [in] */ DWORD dwOutputIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetInput )( 
            __RPC__in IMFTopologyNode * This,
            /* [in] */ DWORD dwInputIndex,
            /* [out] */ __RPC__deref_out_opt IMFTopologyNode **ppUpstreamNode,
            /* [out] */ __RPC__out DWORD *pdwOutputIndexOnUpstreamNode);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutput )( 
            __RPC__in IMFTopologyNode * This,
            /* [in] */ DWORD dwOutputIndex,
            /* [out] */ __RPC__deref_out_opt IMFTopologyNode **ppDownstreamNode,
            /* [out] */ __RPC__out DWORD *pdwInputIndexOnDownstreamNode);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *SetOutputPrefType )( 
            IMFTopologyNode * This,
            /* [in] */ DWORD dwOutputIndex,
            /* [in] */ IMFMediaType *pType);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *GetOutputPrefType )( 
            IMFTopologyNode * This,
            /* [in] */ DWORD dwOutputIndex,
            /* [annotation][out] */ 
            __out  IMFMediaType **ppType);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *SetInputPrefType )( 
            IMFTopologyNode * This,
            /* [in] */ DWORD dwInputIndex,
            /* [in] */ IMFMediaType *pType);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *GetInputPrefType )( 
            IMFTopologyNode * This,
            /* [in] */ DWORD dwInputIndex,
            /* [annotation][out] */ 
            __out  IMFMediaType **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *CloneFrom )( 
            __RPC__in IMFTopologyNode * This,
            /* [in] */ __RPC__in_opt IMFTopologyNode *pNode);
        
        END_INTERFACE
    } IMFTopologyNodeVtbl;

    interface IMFTopologyNode
    {
        CONST_VTBL struct IMFTopologyNodeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFTopologyNode_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFTopologyNode_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFTopologyNode_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFTopologyNode_GetItem(This,guidKey,pValue)	\
    ( (This)->lpVtbl -> GetItem(This,guidKey,pValue) ) 

#define IMFTopologyNode_GetItemType(This,guidKey,pType)	\
    ( (This)->lpVtbl -> GetItemType(This,guidKey,pType) ) 

#define IMFTopologyNode_CompareItem(This,guidKey,Value,pbResult)	\
    ( (This)->lpVtbl -> CompareItem(This,guidKey,Value,pbResult) ) 

#define IMFTopologyNode_Compare(This,pTheirs,MatchType,pbResult)	\
    ( (This)->lpVtbl -> Compare(This,pTheirs,MatchType,pbResult) ) 

#define IMFTopologyNode_GetUINT32(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT32(This,guidKey,punValue) ) 

#define IMFTopologyNode_GetUINT64(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT64(This,guidKey,punValue) ) 

#define IMFTopologyNode_GetDouble(This,guidKey,pfValue)	\
    ( (This)->lpVtbl -> GetDouble(This,guidKey,pfValue) ) 

#define IMFTopologyNode_GetGUID(This,guidKey,pguidValue)	\
    ( (This)->lpVtbl -> GetGUID(This,guidKey,pguidValue) ) 

#define IMFTopologyNode_GetStringLength(This,guidKey,pcchLength)	\
    ( (This)->lpVtbl -> GetStringLength(This,guidKey,pcchLength) ) 

#define IMFTopologyNode_GetString(This,guidKey,pwszValue,cchBufSize,pcchLength)	\
    ( (This)->lpVtbl -> GetString(This,guidKey,pwszValue,cchBufSize,pcchLength) ) 

#define IMFTopologyNode_GetAllocatedString(This,guidKey,ppwszValue,pcchLength)	\
    ( (This)->lpVtbl -> GetAllocatedString(This,guidKey,ppwszValue,pcchLength) ) 

#define IMFTopologyNode_GetBlobSize(This,guidKey,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlobSize(This,guidKey,pcbBlobSize) ) 

#define IMFTopologyNode_GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize) ) 

#define IMFTopologyNode_GetAllocatedBlob(This,guidKey,ppBuf,pcbSize)	\
    ( (This)->lpVtbl -> GetAllocatedBlob(This,guidKey,ppBuf,pcbSize) ) 

#define IMFTopologyNode_GetUnknown(This,guidKey,riid,ppv)	\
    ( (This)->lpVtbl -> GetUnknown(This,guidKey,riid,ppv) ) 

#define IMFTopologyNode_SetItem(This,guidKey,Value)	\
    ( (This)->lpVtbl -> SetItem(This,guidKey,Value) ) 

#define IMFTopologyNode_DeleteItem(This,guidKey)	\
    ( (This)->lpVtbl -> DeleteItem(This,guidKey) ) 

#define IMFTopologyNode_DeleteAllItems(This)	\
    ( (This)->lpVtbl -> DeleteAllItems(This) ) 

#define IMFTopologyNode_SetUINT32(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT32(This,guidKey,unValue) ) 

#define IMFTopologyNode_SetUINT64(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT64(This,guidKey,unValue) ) 

#define IMFTopologyNode_SetDouble(This,guidKey,fValue)	\
    ( (This)->lpVtbl -> SetDouble(This,guidKey,fValue) ) 

#define IMFTopologyNode_SetGUID(This,guidKey,guidValue)	\
    ( (This)->lpVtbl -> SetGUID(This,guidKey,guidValue) ) 

#define IMFTopologyNode_SetString(This,guidKey,wszValue)	\
    ( (This)->lpVtbl -> SetString(This,guidKey,wszValue) ) 

#define IMFTopologyNode_SetBlob(This,guidKey,pBuf,cbBufSize)	\
    ( (This)->lpVtbl -> SetBlob(This,guidKey,pBuf,cbBufSize) ) 

#define IMFTopologyNode_SetUnknown(This,guidKey,pUnknown)	\
    ( (This)->lpVtbl -> SetUnknown(This,guidKey,pUnknown) ) 

#define IMFTopologyNode_LockStore(This)	\
    ( (This)->lpVtbl -> LockStore(This) ) 

#define IMFTopologyNode_UnlockStore(This)	\
    ( (This)->lpVtbl -> UnlockStore(This) ) 

#define IMFTopologyNode_GetCount(This,pcItems)	\
    ( (This)->lpVtbl -> GetCount(This,pcItems) ) 

#define IMFTopologyNode_GetItemByIndex(This,unIndex,pguidKey,pValue)	\
    ( (This)->lpVtbl -> GetItemByIndex(This,unIndex,pguidKey,pValue) ) 

#define IMFTopologyNode_CopyAllItems(This,pDest)	\
    ( (This)->lpVtbl -> CopyAllItems(This,pDest) ) 


#define IMFTopologyNode_SetObject(This,pObject)	\
    ( (This)->lpVtbl -> SetObject(This,pObject) ) 

#define IMFTopologyNode_GetObject(This,ppObject)	\
    ( (This)->lpVtbl -> GetObject(This,ppObject) ) 

#define IMFTopologyNode_GetNodeType(This,pType)	\
    ( (This)->lpVtbl -> GetNodeType(This,pType) ) 

#define IMFTopologyNode_GetTopoNodeID(This,pID)	\
    ( (This)->lpVtbl -> GetTopoNodeID(This,pID) ) 

#define IMFTopologyNode_SetTopoNodeID(This,ullTopoID)	\
    ( (This)->lpVtbl -> SetTopoNodeID(This,ullTopoID) ) 

#define IMFTopologyNode_GetInputCount(This,pcInputs)	\
    ( (This)->lpVtbl -> GetInputCount(This,pcInputs) ) 

#define IMFTopologyNode_GetOutputCount(This,pcOutputs)	\
    ( (This)->lpVtbl -> GetOutputCount(This,pcOutputs) ) 

#define IMFTopologyNode_ConnectOutput(This,dwOutputIndex,pDownstreamNode,dwInputIndexOnDownstreamNode)	\
    ( (This)->lpVtbl -> ConnectOutput(This,dwOutputIndex,pDownstreamNode,dwInputIndexOnDownstreamNode) ) 

#define IMFTopologyNode_DisconnectOutput(This,dwOutputIndex)	\
    ( (This)->lpVtbl -> DisconnectOutput(This,dwOutputIndex) ) 

#define IMFTopologyNode_GetInput(This,dwInputIndex,ppUpstreamNode,pdwOutputIndexOnUpstreamNode)	\
    ( (This)->lpVtbl -> GetInput(This,dwInputIndex,ppUpstreamNode,pdwOutputIndexOnUpstreamNode) ) 

#define IMFTopologyNode_GetOutput(This,dwOutputIndex,ppDownstreamNode,pdwInputIndexOnDownstreamNode)	\
    ( (This)->lpVtbl -> GetOutput(This,dwOutputIndex,ppDownstreamNode,pdwInputIndexOnDownstreamNode) ) 

#define IMFTopologyNode_SetOutputPrefType(This,dwOutputIndex,pType)	\
    ( (This)->lpVtbl -> SetOutputPrefType(This,dwOutputIndex,pType) ) 

#define IMFTopologyNode_GetOutputPrefType(This,dwOutputIndex,ppType)	\
    ( (This)->lpVtbl -> GetOutputPrefType(This,dwOutputIndex,ppType) ) 

#define IMFTopologyNode_SetInputPrefType(This,dwInputIndex,pType)	\
    ( (This)->lpVtbl -> SetInputPrefType(This,dwInputIndex,pType) ) 

#define IMFTopologyNode_GetInputPrefType(This,dwInputIndex,ppType)	\
    ( (This)->lpVtbl -> GetInputPrefType(This,dwInputIndex,ppType) ) 

#define IMFTopologyNode_CloneFrom(This,pNode)	\
    ( (This)->lpVtbl -> CloneFrom(This,pNode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFTopologyNode_RemoteGetOutputPrefType_Proxy( 
    __RPC__in IMFTopologyNode * This,
    /* [in] */ DWORD dwOutputIndex,
    /* [out] */ __RPC__out DWORD *pcbData,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbData) BYTE **ppbData);


void __RPC_STUB IMFTopologyNode_RemoteGetOutputPrefType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFTopologyNode_RemoteGetInputPrefType_Proxy( 
    __RPC__in IMFTopologyNode * This,
    /* [in] */ DWORD dwInputIndex,
    /* [out] */ __RPC__out DWORD *pcbData,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbData) BYTE **ppbData);


void __RPC_STUB IMFTopologyNode_RemoteGetInputPrefType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMFTopologyNode_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0011 */
/* [local] */ 

typedef 
enum _MF_TOPONODE_FLUSH_MODE
    {	MF_TOPONODE_FLUSH_ALWAYS	= 0,
	MF_TOPONODE_FLUSH_SEEK	= ( MF_TOPONODE_FLUSH_ALWAYS + 1 ) ,
	MF_TOPONODE_FLUSH_NEVER	= ( MF_TOPONODE_FLUSH_SEEK + 1 ) 
    } 	MF_TOPONODE_FLUSH_MODE;

EXTERN_GUID( MF_TOPONODE_FLUSH, 0x494bbce8, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
typedef 
enum _MF_TOPONODE_DRAIN_MODE
    {	MF_TOPONODE_DRAIN_DEFAULT	= 0,
	MF_TOPONODE_DRAIN_ALWAYS	= ( MF_TOPONODE_DRAIN_DEFAULT + 1 ) ,
	MF_TOPONODE_DRAIN_NEVER	= ( MF_TOPONODE_DRAIN_ALWAYS + 1 ) 
    } 	MF_TOPONODE_DRAIN_MODE;

EXTERN_GUID( MF_TOPONODE_DRAIN, 0x494bbce9, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_D3DAWARE, 0x494bbced, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPOLOGY_RESOLUTION_STATUS, 0x494bbcde, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_ERRORCODE, 0x494bbcee, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_CONNECT_METHOD, 0x494bbcf1, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_LOCKED, 0x494bbcf7, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_WORKQUEUE_ID, 0x494bbcf8, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_WORKQUEUE_MMCSS_CLASS, 0x494bbcf9, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_DECRYPTOR, 0x494bbcfa, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_DISCARDABLE, 0x494bbcfb, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_ERROR_MAJORTYPE, 0x494bbcfd, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_ERROR_SUBTYPE, 0x494bbcfe, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_WORKQUEUE_MMCSS_TASKID, 0x494bbcff, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_MARKIN_HERE, 0x494bbd00, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_MARKOUT_HERE, 0x494bbd01, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_DECODER, 0x494bbd02, 0xb031,  0x4e38,  0x97, 0xc4, 0xd5, 0x42, 0x2d, 0xd6, 0x18, 0xdc);
EXTERN_GUID( MF_TOPONODE_MEDIASTART, 0x835c58ea, 0xe075, 0x4bc7, 0xbc, 0xba, 0x4d, 0xe0, 0x00, 0xdf, 0x9a, 0xe6);
EXTERN_GUID( MF_TOPONODE_MEDIASTOP, 0x835c58eb, 0xe075, 0x4bc7, 0xbc, 0xba, 0x4d, 0xe0, 0x00, 0xdf, 0x9a, 0xe6);
EXTERN_GUID( MF_TOPONODE_SOURCE, 0x835c58ec, 0xe075, 0x4bc7, 0xbc, 0xba, 0x4d, 0xe0, 0x00, 0xdf, 0x9a, 0xe6);
EXTERN_GUID( MF_TOPONODE_PRESENTATION_DESCRIPTOR, 0x835c58ed, 0xe075, 0x4bc7, 0xbc, 0xba, 0x4d, 0xe0, 0x00, 0xdf, 0x9a, 0xe6);
EXTERN_GUID( MF_TOPONODE_STREAM_DESCRIPTOR, 0x835c58ee, 0xe075, 0x4bc7, 0xbc, 0xba, 0x4d, 0xe0, 0x00, 0xdf, 0x9a, 0xe6);
EXTERN_GUID( MF_TOPONODE_SEQUENCE_ELEMENTID, 0x835c58ef, 0xe075, 0x4bc7, 0xbc, 0xba, 0x4d, 0xe0, 0x00, 0xdf, 0x9a, 0xe6);
EXTERN_GUID( MF_TOPONODE_TRANSFORM_OBJECTID, 0x88dcc0c9, 0x293e, 0x4e8b, 0x9a, 0xeb, 0xa, 0xd6, 0x4c, 0xc0, 0x16, 0xb0);
EXTERN_GUID( MF_TOPONODE_STREAMID, 0x14932f9b, 0x9087, 0x4bb4, 0x84, 0x12, 0x51, 0x67, 0x14, 0x5c, 0xbe, 0x04);
EXTERN_GUID( MF_TOPONODE_NOSHUTDOWN_ON_REMOVE, 0x14932f9c, 0x9087, 0x4bb4, 0x84, 0x12, 0x51, 0x67, 0x14, 0x5c, 0xbe, 0x04);
EXTERN_GUID( MF_TOPONODE_RATELESS, 0x14932f9d, 0x9087, 0x4bb4, 0x84, 0x12, 0x51, 0x67, 0x14, 0x5c, 0xbe, 0x04);
EXTERN_GUID( MF_TOPONODE_DISABLE_PREROLL, 0x14932f9e, 0x9087, 0x4bb4, 0x84, 0x12, 0x51, 0x67, 0x14, 0x5c, 0xbe, 0x04);
EXTERN_GUID( MF_TOPONODE_PRIMARYOUTPUT, 0x6304ef99, 0x16b2, 0x4ebe, 0x9d, 0x67, 0xe4, 0xc5, 0x39, 0xb3, 0xa2, 0x59);
STDAPI MFCreateTopologyNode(
    MF_TOPOLOGY_TYPE NodeType,
    __out IMFTopologyNode ** ppNode );
#if (WINVER >= _WIN32_WINNT_WIN7) 
STDAPI MFGetTopoNodeCurrentType(
    IMFTopologyNode* pNode,
    DWORD dwStreamIndex,
    BOOL fOutput,
    __deref_out IMFMediaType** ppType);
#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0011_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0011_v0_0_s_ifspec;

#ifndef __IMFGetService_INTERFACE_DEFINED__
#define __IMFGetService_INTERFACE_DEFINED__

/* interface IMFGetService */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFGetService;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fa993888-4383-415a-a930-dd472a8cf6f7")
    IMFGetService : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetService( 
            /* [in] */ __RPC__in REFGUID guidService,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt LPVOID *ppvObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFGetServiceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFGetService * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFGetService * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFGetService * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetService )( 
            __RPC__in IMFGetService * This,
            /* [in] */ __RPC__in REFGUID guidService,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt LPVOID *ppvObject);
        
        END_INTERFACE
    } IMFGetServiceVtbl;

    interface IMFGetService
    {
        CONST_VTBL struct IMFGetServiceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFGetService_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFGetService_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFGetService_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFGetService_GetService(This,guidService,riid,ppvObject)	\
    ( (This)->lpVtbl -> GetService(This,guidService,riid,ppvObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFGetService_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0012 */
/* [local] */ 

STDAPI MFGetService(
    IUnknown* punkObject,
    REFGUID guidService,
    REFIID riid,
    __out LPVOID* ppvObject
    );
typedef LONGLONG MFTIME;

typedef 
enum _MFCLOCK_CHARACTERISTICS_FLAGS
    {	MFCLOCK_CHARACTERISTICS_FLAG_FREQUENCY_10MHZ	= 0x2,
	MFCLOCK_CHARACTERISTICS_FLAG_ALWAYS_RUNNING	= 0x4,
	MFCLOCK_CHARACTERISTICS_FLAG_IS_SYSTEM_CLOCK	= 0x8
    } 	MFCLOCK_CHARACTERISTICS_FLAGS;

typedef 
enum _MFCLOCK_STATE
    {	MFCLOCK_STATE_INVALID	= 0,
	MFCLOCK_STATE_RUNNING	= ( MFCLOCK_STATE_INVALID + 1 ) ,
	MFCLOCK_STATE_STOPPED	= ( MFCLOCK_STATE_RUNNING + 1 ) ,
	MFCLOCK_STATE_PAUSED	= ( MFCLOCK_STATE_STOPPED + 1 ) 
    } 	MFCLOCK_STATE;

typedef 
enum _MFCLOCK_RELATIONAL_FLAGS
    {	MFCLOCK_RELATIONAL_FLAG_JITTER_NEVER_AHEAD	= 0x1
    } 	MFCLOCK_RELATIONAL_FLAGS;

typedef struct _MFCLOCK_PROPERTIES
    {
    unsigned __int64 qwCorrelationRate;
    GUID guidClockId;
    DWORD dwClockFlags;
    unsigned __int64 qwClockFrequency;
    DWORD dwClockTolerance;
    DWORD dwClockJitter;
    } 	MFCLOCK_PROPERTIES;

#define MFCLOCK_FREQUENCY_HNS       10000000
#define MFCLOCK_TOLERANCE_UNKNOWN   50000
#define MFCLOCK_JITTER_ISR          1000
#define MFCLOCK_JITTER_DPC          4000
#define MFCLOCK_JITTER_PASSIVE      10000


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0012_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0012_v0_0_s_ifspec;

#ifndef __IMFClock_INTERFACE_DEFINED__
#define __IMFClock_INTERFACE_DEFINED__

/* interface IMFClock */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFClock;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2eb1e945-18b8-4139-9b1a-d5d584818530")
    IMFClock : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetClockCharacteristics( 
            /* [out] */ __RPC__out DWORD *pdwCharacteristics) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCorrelatedTime( 
            /* [in] */ DWORD dwReserved,
            /* [out] */ __RPC__out LONGLONG *pllClockTime,
            /* [out] */ __RPC__out MFTIME *phnsSystemTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContinuityKey( 
            /* [out] */ __RPC__out DWORD *pdwContinuityKey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetState( 
            /* [in] */ DWORD dwReserved,
            /* [out] */ __RPC__out MFCLOCK_STATE *peClockState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperties( 
            /* [out] */ __RPC__out MFCLOCK_PROPERTIES *pClockProperties) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFClockVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFClock * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFClock * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFClock * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetClockCharacteristics )( 
            __RPC__in IMFClock * This,
            /* [out] */ __RPC__out DWORD *pdwCharacteristics);
        
        HRESULT ( STDMETHODCALLTYPE *GetCorrelatedTime )( 
            __RPC__in IMFClock * This,
            /* [in] */ DWORD dwReserved,
            /* [out] */ __RPC__out LONGLONG *pllClockTime,
            /* [out] */ __RPC__out MFTIME *phnsSystemTime);
        
        HRESULT ( STDMETHODCALLTYPE *GetContinuityKey )( 
            __RPC__in IMFClock * This,
            /* [out] */ __RPC__out DWORD *pdwContinuityKey);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            __RPC__in IMFClock * This,
            /* [in] */ DWORD dwReserved,
            /* [out] */ __RPC__out MFCLOCK_STATE *peClockState);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperties )( 
            __RPC__in IMFClock * This,
            /* [out] */ __RPC__out MFCLOCK_PROPERTIES *pClockProperties);
        
        END_INTERFACE
    } IMFClockVtbl;

    interface IMFClock
    {
        CONST_VTBL struct IMFClockVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFClock_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFClock_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFClock_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFClock_GetClockCharacteristics(This,pdwCharacteristics)	\
    ( (This)->lpVtbl -> GetClockCharacteristics(This,pdwCharacteristics) ) 

#define IMFClock_GetCorrelatedTime(This,dwReserved,pllClockTime,phnsSystemTime)	\
    ( (This)->lpVtbl -> GetCorrelatedTime(This,dwReserved,pllClockTime,phnsSystemTime) ) 

#define IMFClock_GetContinuityKey(This,pdwContinuityKey)	\
    ( (This)->lpVtbl -> GetContinuityKey(This,pdwContinuityKey) ) 

#define IMFClock_GetState(This,dwReserved,peClockState)	\
    ( (This)->lpVtbl -> GetState(This,dwReserved,peClockState) ) 

#define IMFClock_GetProperties(This,pClockProperties)	\
    ( (This)->lpVtbl -> GetProperties(This,pClockProperties) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFClock_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0013 */
/* [local] */ 

STDAPI_(MFTIME) 
MFGetSystemTime(
    );
#define PRESENTATION_CURRENT_POSITION   0x7fffffffffffffff




extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0013_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0013_v0_0_s_ifspec;

#ifndef __IMFPresentationClock_INTERFACE_DEFINED__
#define __IMFPresentationClock_INTERFACE_DEFINED__

/* interface IMFPresentationClock */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFPresentationClock;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("868CE85C-8EA9-4f55-AB82-B009A910A805")
    IMFPresentationClock : public IMFClock
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetTimeSource( 
            /* [in] */ __RPC__in_opt IMFPresentationTimeSource *pTimeSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTimeSource( 
            /* [out] */ __RPC__deref_out_opt IMFPresentationTimeSource **ppTimeSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTime( 
            /* [out] */ __RPC__out MFTIME *phnsClockTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddClockStateSink( 
            /* [in] */ __RPC__in_opt IMFClockStateSink *pStateSink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveClockStateSink( 
            /* [in] */ __RPC__in_opt IMFClockStateSink *pStateSink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Start( 
            /* [in] */ LONGLONG llClockStartOffset) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Pause( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFPresentationClockVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFPresentationClock * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFPresentationClock * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFPresentationClock * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetClockCharacteristics )( 
            __RPC__in IMFPresentationClock * This,
            /* [out] */ __RPC__out DWORD *pdwCharacteristics);
        
        HRESULT ( STDMETHODCALLTYPE *GetCorrelatedTime )( 
            __RPC__in IMFPresentationClock * This,
            /* [in] */ DWORD dwReserved,
            /* [out] */ __RPC__out LONGLONG *pllClockTime,
            /* [out] */ __RPC__out MFTIME *phnsSystemTime);
        
        HRESULT ( STDMETHODCALLTYPE *GetContinuityKey )( 
            __RPC__in IMFPresentationClock * This,
            /* [out] */ __RPC__out DWORD *pdwContinuityKey);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            __RPC__in IMFPresentationClock * This,
            /* [in] */ DWORD dwReserved,
            /* [out] */ __RPC__out MFCLOCK_STATE *peClockState);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperties )( 
            __RPC__in IMFPresentationClock * This,
            /* [out] */ __RPC__out MFCLOCK_PROPERTIES *pClockProperties);
        
        HRESULT ( STDMETHODCALLTYPE *SetTimeSource )( 
            __RPC__in IMFPresentationClock * This,
            /* [in] */ __RPC__in_opt IMFPresentationTimeSource *pTimeSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetTimeSource )( 
            __RPC__in IMFPresentationClock * This,
            /* [out] */ __RPC__deref_out_opt IMFPresentationTimeSource **ppTimeSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetTime )( 
            __RPC__in IMFPresentationClock * This,
            /* [out] */ __RPC__out MFTIME *phnsClockTime);
        
        HRESULT ( STDMETHODCALLTYPE *AddClockStateSink )( 
            __RPC__in IMFPresentationClock * This,
            /* [in] */ __RPC__in_opt IMFClockStateSink *pStateSink);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveClockStateSink )( 
            __RPC__in IMFPresentationClock * This,
            /* [in] */ __RPC__in_opt IMFClockStateSink *pStateSink);
        
        HRESULT ( STDMETHODCALLTYPE *Start )( 
            __RPC__in IMFPresentationClock * This,
            /* [in] */ LONGLONG llClockStartOffset);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            __RPC__in IMFPresentationClock * This);
        
        HRESULT ( STDMETHODCALLTYPE *Pause )( 
            __RPC__in IMFPresentationClock * This);
        
        END_INTERFACE
    } IMFPresentationClockVtbl;

    interface IMFPresentationClock
    {
        CONST_VTBL struct IMFPresentationClockVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFPresentationClock_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFPresentationClock_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFPresentationClock_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFPresentationClock_GetClockCharacteristics(This,pdwCharacteristics)	\
    ( (This)->lpVtbl -> GetClockCharacteristics(This,pdwCharacteristics) ) 

#define IMFPresentationClock_GetCorrelatedTime(This,dwReserved,pllClockTime,phnsSystemTime)	\
    ( (This)->lpVtbl -> GetCorrelatedTime(This,dwReserved,pllClockTime,phnsSystemTime) ) 

#define IMFPresentationClock_GetContinuityKey(This,pdwContinuityKey)	\
    ( (This)->lpVtbl -> GetContinuityKey(This,pdwContinuityKey) ) 

#define IMFPresentationClock_GetState(This,dwReserved,peClockState)	\
    ( (This)->lpVtbl -> GetState(This,dwReserved,peClockState) ) 

#define IMFPresentationClock_GetProperties(This,pClockProperties)	\
    ( (This)->lpVtbl -> GetProperties(This,pClockProperties) ) 


#define IMFPresentationClock_SetTimeSource(This,pTimeSource)	\
    ( (This)->lpVtbl -> SetTimeSource(This,pTimeSource) ) 

#define IMFPresentationClock_GetTimeSource(This,ppTimeSource)	\
    ( (This)->lpVtbl -> GetTimeSource(This,ppTimeSource) ) 

#define IMFPresentationClock_GetTime(This,phnsClockTime)	\
    ( (This)->lpVtbl -> GetTime(This,phnsClockTime) ) 

#define IMFPresentationClock_AddClockStateSink(This,pStateSink)	\
    ( (This)->lpVtbl -> AddClockStateSink(This,pStateSink) ) 

#define IMFPresentationClock_RemoveClockStateSink(This,pStateSink)	\
    ( (This)->lpVtbl -> RemoveClockStateSink(This,pStateSink) ) 

#define IMFPresentationClock_Start(This,llClockStartOffset)	\
    ( (This)->lpVtbl -> Start(This,llClockStartOffset) ) 

#define IMFPresentationClock_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IMFPresentationClock_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFPresentationClock_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0014 */
/* [local] */ 

STDAPI MFCreatePresentationClock(
    __out IMFPresentationClock** ppPresentationClock
    );


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0014_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0014_v0_0_s_ifspec;

#ifndef __IMFPresentationTimeSource_INTERFACE_DEFINED__
#define __IMFPresentationTimeSource_INTERFACE_DEFINED__

/* interface IMFPresentationTimeSource */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFPresentationTimeSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7FF12CCE-F76F-41c2-863B-1666C8E5E139")
    IMFPresentationTimeSource : public IMFClock
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetUnderlyingClock( 
            /* [out] */ __RPC__deref_out_opt IMFClock **ppClock) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFPresentationTimeSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFPresentationTimeSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFPresentationTimeSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFPresentationTimeSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetClockCharacteristics )( 
            __RPC__in IMFPresentationTimeSource * This,
            /* [out] */ __RPC__out DWORD *pdwCharacteristics);
        
        HRESULT ( STDMETHODCALLTYPE *GetCorrelatedTime )( 
            __RPC__in IMFPresentationTimeSource * This,
            /* [in] */ DWORD dwReserved,
            /* [out] */ __RPC__out LONGLONG *pllClockTime,
            /* [out] */ __RPC__out MFTIME *phnsSystemTime);
        
        HRESULT ( STDMETHODCALLTYPE *GetContinuityKey )( 
            __RPC__in IMFPresentationTimeSource * This,
            /* [out] */ __RPC__out DWORD *pdwContinuityKey);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            __RPC__in IMFPresentationTimeSource * This,
            /* [in] */ DWORD dwReserved,
            /* [out] */ __RPC__out MFCLOCK_STATE *peClockState);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperties )( 
            __RPC__in IMFPresentationTimeSource * This,
            /* [out] */ __RPC__out MFCLOCK_PROPERTIES *pClockProperties);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnderlyingClock )( 
            __RPC__in IMFPresentationTimeSource * This,
            /* [out] */ __RPC__deref_out_opt IMFClock **ppClock);
        
        END_INTERFACE
    } IMFPresentationTimeSourceVtbl;

    interface IMFPresentationTimeSource
    {
        CONST_VTBL struct IMFPresentationTimeSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFPresentationTimeSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFPresentationTimeSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFPresentationTimeSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFPresentationTimeSource_GetClockCharacteristics(This,pdwCharacteristics)	\
    ( (This)->lpVtbl -> GetClockCharacteristics(This,pdwCharacteristics) ) 

#define IMFPresentationTimeSource_GetCorrelatedTime(This,dwReserved,pllClockTime,phnsSystemTime)	\
    ( (This)->lpVtbl -> GetCorrelatedTime(This,dwReserved,pllClockTime,phnsSystemTime) ) 

#define IMFPresentationTimeSource_GetContinuityKey(This,pdwContinuityKey)	\
    ( (This)->lpVtbl -> GetContinuityKey(This,pdwContinuityKey) ) 

#define IMFPresentationTimeSource_GetState(This,dwReserved,peClockState)	\
    ( (This)->lpVtbl -> GetState(This,dwReserved,peClockState) ) 

#define IMFPresentationTimeSource_GetProperties(This,pClockProperties)	\
    ( (This)->lpVtbl -> GetProperties(This,pClockProperties) ) 


#define IMFPresentationTimeSource_GetUnderlyingClock(This,ppClock)	\
    ( (This)->lpVtbl -> GetUnderlyingClock(This,ppClock) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFPresentationTimeSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0015 */
/* [local] */ 

STDAPI
MFCreateSystemTimeSource(
    __out IMFPresentationTimeSource** ppSystemTimeSource
    );


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0015_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0015_v0_0_s_ifspec;

#ifndef __IMFClockStateSink_INTERFACE_DEFINED__
#define __IMFClockStateSink_INTERFACE_DEFINED__

/* interface IMFClockStateSink */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFClockStateSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F6696E82-74F7-4f3d-A178-8A5E09C3659F")
    IMFClockStateSink : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnClockStart( 
            /* [in] */ MFTIME hnsSystemTime,
            /* [in] */ LONGLONG llClockStartOffset) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnClockStop( 
            /* [in] */ MFTIME hnsSystemTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnClockPause( 
            /* [in] */ MFTIME hnsSystemTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnClockRestart( 
            /* [in] */ MFTIME hnsSystemTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnClockSetRate( 
            /* [in] */ MFTIME hnsSystemTime,
            /* [in] */ float flRate) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFClockStateSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFClockStateSink * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFClockStateSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFClockStateSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockStart )( 
            __RPC__in IMFClockStateSink * This,
            /* [in] */ MFTIME hnsSystemTime,
            /* [in] */ LONGLONG llClockStartOffset);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockStop )( 
            __RPC__in IMFClockStateSink * This,
            /* [in] */ MFTIME hnsSystemTime);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockPause )( 
            __RPC__in IMFClockStateSink * This,
            /* [in] */ MFTIME hnsSystemTime);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockRestart )( 
            __RPC__in IMFClockStateSink * This,
            /* [in] */ MFTIME hnsSystemTime);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockSetRate )( 
            __RPC__in IMFClockStateSink * This,
            /* [in] */ MFTIME hnsSystemTime,
            /* [in] */ float flRate);
        
        END_INTERFACE
    } IMFClockStateSinkVtbl;

    interface IMFClockStateSink
    {
        CONST_VTBL struct IMFClockStateSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFClockStateSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFClockStateSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFClockStateSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFClockStateSink_OnClockStart(This,hnsSystemTime,llClockStartOffset)	\
    ( (This)->lpVtbl -> OnClockStart(This,hnsSystemTime,llClockStartOffset) ) 

#define IMFClockStateSink_OnClockStop(This,hnsSystemTime)	\
    ( (This)->lpVtbl -> OnClockStop(This,hnsSystemTime) ) 

#define IMFClockStateSink_OnClockPause(This,hnsSystemTime)	\
    ( (This)->lpVtbl -> OnClockPause(This,hnsSystemTime) ) 

#define IMFClockStateSink_OnClockRestart(This,hnsSystemTime)	\
    ( (This)->lpVtbl -> OnClockRestart(This,hnsSystemTime) ) 

#define IMFClockStateSink_OnClockSetRate(This,hnsSystemTime,flRate)	\
    ( (This)->lpVtbl -> OnClockSetRate(This,hnsSystemTime,flRate) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFClockStateSink_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0016 */
/* [local] */ 

EXTERN_GUID( MF_PD_PMPHOST_CONTEXT, 0x6c990d31, 0xbb8e, 0x477a, 0x85, 0x98, 0xd, 0x5d, 0x96, 0xfc, 0xd8, 0x8a );
EXTERN_GUID( MF_PD_APP_CONTEXT, 0x6c990d32, 0xbb8e, 0x477a, 0x85, 0x98, 0xd, 0x5d, 0x96, 0xfc, 0xd8, 0x8a );
EXTERN_GUID( MF_PD_DURATION, 0x6c990d33, 0xbb8e, 0x477a, 0x85, 0x98, 0xd, 0x5d, 0x96, 0xfc, 0xd8, 0x8a );
EXTERN_GUID( MF_PD_TOTAL_FILE_SIZE, 0x6c990d34, 0xbb8e, 0x477a, 0x85, 0x98, 0xd, 0x5d, 0x96, 0xfc, 0xd8, 0x8a );
EXTERN_GUID( MF_PD_AUDIO_ENCODING_BITRATE, 0x6c990d35, 0xbb8e, 0x477a, 0x85, 0x98, 0xd, 0x5d, 0x96, 0xfc, 0xd8, 0x8a );
EXTERN_GUID( MF_PD_VIDEO_ENCODING_BITRATE, 0x6c990d36, 0xbb8e, 0x477a, 0x85, 0x98, 0xd, 0x5d, 0x96, 0xfc, 0xd8, 0x8a );
EXTERN_GUID( MF_PD_MIME_TYPE, 0x6c990d37, 0xbb8e, 0x477a, 0x85, 0x98, 0xd, 0x5d, 0x96, 0xfc, 0xd8, 0x8a );
EXTERN_GUID(MF_PD_LAST_MODIFIED_TIME, 0x6c990d38, 0xbb8e, 0x477a, 0x85, 0x98, 0xd, 0x5d, 0x96, 0xfc, 0xd8, 0x8a );
#if (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_GUID(MF_PD_PLAYBACK_ELEMENT_ID, 0x6c990d39, 0xbb8e, 0x477a, 0x85, 0x98, 0xd, 0x5d, 0x96, 0xfc, 0xd8, 0x8a );
EXTERN_GUID( MF_PD_PREFERRED_LANGUAGE, 0x6c990d3A, 0xbb8e, 0x477a, 0x85, 0x98, 0xd, 0x5d, 0x96, 0xfc, 0xd8, 0x8a );
EXTERN_GUID(MF_PD_PLAYBACK_BOUNDARY_TIME, 0x6c990d3b, 0xbb8e, 0x477a, 0x85, 0x98, 0xd, 0x5d, 0x96, 0xfc, 0xd8, 0x8a );
EXTERN_GUID( MF_PD_AUDIO_ISVARIABLEBITRATE, 0x33026ee0, 0xe387, 0x4582, 0xae, 0x0a, 0x34, 0xa2, 0xad, 0x3b, 0xaa, 0x18 );
#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0016_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0016_v0_0_s_ifspec;

#ifndef __IMFPresentationDescriptor_INTERFACE_DEFINED__
#define __IMFPresentationDescriptor_INTERFACE_DEFINED__

/* interface IMFPresentationDescriptor */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFPresentationDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("03cb2711-24d7-4db6-a17f-f3a7a479a536")
    IMFPresentationDescriptor : public IMFAttributes
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStreamDescriptorCount( 
            /* [out] */ __RPC__out DWORD *pdwDescriptorCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStreamDescriptorByIndex( 
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__out BOOL *pfSelected,
            /* [out] */ __RPC__deref_out_opt IMFStreamDescriptor **ppDescriptor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SelectStream( 
            /* [in] */ DWORD dwDescriptorIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeselectStream( 
            /* [in] */ DWORD dwDescriptorIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IMFPresentationDescriptor **ppPresentationDescriptor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFPresentationDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFPresentationDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFPresentationDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFPresentationDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemType )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out MF_ATTRIBUTE_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *CompareItem )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value,
            /* [out] */ __RPC__out BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *Compare )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in_opt IMFAttributes *pTheirs,
            MF_ATTRIBUTES_MATCH_TYPE MatchType,
            /* [out] */ __RPC__out BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT64 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetDouble )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out double *pfValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetGUID )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out GUID *pguidValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetString )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,
            UINT32 cchBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,
            /* [out] */ __RPC__out UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlob )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,
            UINT32 cbBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,
            /* [out] */ __RPC__out UINT32 *pcbSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt LPVOID *ppv);
        
        HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( 
            __RPC__in IMFPresentationDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            UINT32 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            UINT64 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetDouble )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            double fValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetGUID )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFGUID guidValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetString )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [string][in] */ __RPC__in_string LPCWSTR wszValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetBlob )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][in] */ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,
            UINT32 cbBufSize);
        
        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( 
            __RPC__in IMFPresentationDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [in] */ __RPC__in_opt IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *LockStore )( 
            __RPC__in IMFPresentationDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( 
            __RPC__in IMFPresentationDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            __RPC__in IMFPresentationDescriptor * This,
            /* [out] */ __RPC__out UINT32 *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( 
            __RPC__in IMFPresentationDescriptor * This,
            UINT32 unIndex,
            /* [out] */ __RPC__out GUID *pguidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( 
            __RPC__in IMFPresentationDescriptor * This,
            /* [in] */ __RPC__in_opt IMFAttributes *pDest);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamDescriptorCount )( 
            __RPC__in IMFPresentationDescriptor * This,
            /* [out] */ __RPC__out DWORD *pdwDescriptorCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamDescriptorByIndex )( 
            __RPC__in IMFPresentationDescriptor * This,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__out BOOL *pfSelected,
            /* [out] */ __RPC__deref_out_opt IMFStreamDescriptor **ppDescriptor);
        
        HRESULT ( STDMETHODCALLTYPE *SelectStream )( 
            __RPC__in IMFPresentationDescriptor * This,
            /* [in] */ DWORD dwDescriptorIndex);
        
        HRESULT ( STDMETHODCALLTYPE *DeselectStream )( 
            __RPC__in IMFPresentationDescriptor * This,
            /* [in] */ DWORD dwDescriptorIndex);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            __RPC__in IMFPresentationDescriptor * This,
            /* [out] */ __RPC__deref_out_opt IMFPresentationDescriptor **ppPresentationDescriptor);
        
        END_INTERFACE
    } IMFPresentationDescriptorVtbl;

    interface IMFPresentationDescriptor
    {
        CONST_VTBL struct IMFPresentationDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFPresentationDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFPresentationDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFPresentationDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFPresentationDescriptor_GetItem(This,guidKey,pValue)	\
    ( (This)->lpVtbl -> GetItem(This,guidKey,pValue) ) 

#define IMFPresentationDescriptor_GetItemType(This,guidKey,pType)	\
    ( (This)->lpVtbl -> GetItemType(This,guidKey,pType) ) 

#define IMFPresentationDescriptor_CompareItem(This,guidKey,Value,pbResult)	\
    ( (This)->lpVtbl -> CompareItem(This,guidKey,Value,pbResult) ) 

#define IMFPresentationDescriptor_Compare(This,pTheirs,MatchType,pbResult)	\
    ( (This)->lpVtbl -> Compare(This,pTheirs,MatchType,pbResult) ) 

#define IMFPresentationDescriptor_GetUINT32(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT32(This,guidKey,punValue) ) 

#define IMFPresentationDescriptor_GetUINT64(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT64(This,guidKey,punValue) ) 

#define IMFPresentationDescriptor_GetDouble(This,guidKey,pfValue)	\
    ( (This)->lpVtbl -> GetDouble(This,guidKey,pfValue) ) 

#define IMFPresentationDescriptor_GetGUID(This,guidKey,pguidValue)	\
    ( (This)->lpVtbl -> GetGUID(This,guidKey,pguidValue) ) 

#define IMFPresentationDescriptor_GetStringLength(This,guidKey,pcchLength)	\
    ( (This)->lpVtbl -> GetStringLength(This,guidKey,pcchLength) ) 

#define IMFPresentationDescriptor_GetString(This,guidKey,pwszValue,cchBufSize,pcchLength)	\
    ( (This)->lpVtbl -> GetString(This,guidKey,pwszValue,cchBufSize,pcchLength) ) 

#define IMFPresentationDescriptor_GetAllocatedString(This,guidKey,ppwszValue,pcchLength)	\
    ( (This)->lpVtbl -> GetAllocatedString(This,guidKey,ppwszValue,pcchLength) ) 

#define IMFPresentationDescriptor_GetBlobSize(This,guidKey,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlobSize(This,guidKey,pcbBlobSize) ) 

#define IMFPresentationDescriptor_GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize) ) 

#define IMFPresentationDescriptor_GetAllocatedBlob(This,guidKey,ppBuf,pcbSize)	\
    ( (This)->lpVtbl -> GetAllocatedBlob(This,guidKey,ppBuf,pcbSize) ) 

#define IMFPresentationDescriptor_GetUnknown(This,guidKey,riid,ppv)	\
    ( (This)->lpVtbl -> GetUnknown(This,guidKey,riid,ppv) ) 

#define IMFPresentationDescriptor_SetItem(This,guidKey,Value)	\
    ( (This)->lpVtbl -> SetItem(This,guidKey,Value) ) 

#define IMFPresentationDescriptor_DeleteItem(This,guidKey)	\
    ( (This)->lpVtbl -> DeleteItem(This,guidKey) ) 

#define IMFPresentationDescriptor_DeleteAllItems(This)	\
    ( (This)->lpVtbl -> DeleteAllItems(This) ) 

#define IMFPresentationDescriptor_SetUINT32(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT32(This,guidKey,unValue) ) 

#define IMFPresentationDescriptor_SetUINT64(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT64(This,guidKey,unValue) ) 

#define IMFPresentationDescriptor_SetDouble(This,guidKey,fValue)	\
    ( (This)->lpVtbl -> SetDouble(This,guidKey,fValue) ) 

#define IMFPresentationDescriptor_SetGUID(This,guidKey,guidValue)	\
    ( (This)->lpVtbl -> SetGUID(This,guidKey,guidValue) ) 

#define IMFPresentationDescriptor_SetString(This,guidKey,wszValue)	\
    ( (This)->lpVtbl -> SetString(This,guidKey,wszValue) ) 

#define IMFPresentationDescriptor_SetBlob(This,guidKey,pBuf,cbBufSize)	\
    ( (This)->lpVtbl -> SetBlob(This,guidKey,pBuf,cbBufSize) ) 

#define IMFPresentationDescriptor_SetUnknown(This,guidKey,pUnknown)	\
    ( (This)->lpVtbl -> SetUnknown(This,guidKey,pUnknown) ) 

#define IMFPresentationDescriptor_LockStore(This)	\
    ( (This)->lpVtbl -> LockStore(This) ) 

#define IMFPresentationDescriptor_UnlockStore(This)	\
    ( (This)->lpVtbl -> UnlockStore(This) ) 

#define IMFPresentationDescriptor_GetCount(This,pcItems)	\
    ( (This)->lpVtbl -> GetCount(This,pcItems) ) 

#define IMFPresentationDescriptor_GetItemByIndex(This,unIndex,pguidKey,pValue)	\
    ( (This)->lpVtbl -> GetItemByIndex(This,unIndex,pguidKey,pValue) ) 

#define IMFPresentationDescriptor_CopyAllItems(This,pDest)	\
    ( (This)->lpVtbl -> CopyAllItems(This,pDest) ) 


#define IMFPresentationDescriptor_GetStreamDescriptorCount(This,pdwDescriptorCount)	\
    ( (This)->lpVtbl -> GetStreamDescriptorCount(This,pdwDescriptorCount) ) 

#define IMFPresentationDescriptor_GetStreamDescriptorByIndex(This,dwIndex,pfSelected,ppDescriptor)	\
    ( (This)->lpVtbl -> GetStreamDescriptorByIndex(This,dwIndex,pfSelected,ppDescriptor) ) 

#define IMFPresentationDescriptor_SelectStream(This,dwDescriptorIndex)	\
    ( (This)->lpVtbl -> SelectStream(This,dwDescriptorIndex) ) 

#define IMFPresentationDescriptor_DeselectStream(This,dwDescriptorIndex)	\
    ( (This)->lpVtbl -> DeselectStream(This,dwDescriptorIndex) ) 

#define IMFPresentationDescriptor_Clone(This,ppPresentationDescriptor)	\
    ( (This)->lpVtbl -> Clone(This,ppPresentationDescriptor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFPresentationDescriptor_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0017 */
/* [local] */ 

STDAPI MFCreatePresentationDescriptor(
    DWORD cStreamDescriptors,
    __in_ecount_opt( cStreamDescriptors ) IMFStreamDescriptor** apStreamDescriptors,
    __deref_out IMFPresentationDescriptor** ppPresentationDescriptor
    );

STDAPI MFRequireProtectedEnvironment(
     __in IMFPresentationDescriptor* pPresentationDescriptor
     );

STDAPI MFSerializePresentationDescriptor(
    __in IMFPresentationDescriptor * pPD,
    __out DWORD * pcbData,
    __deref_out_bcount_full(*pcbData) BYTE ** ppbData);

STDAPI MFDeserializePresentationDescriptor(
    __in DWORD cbData,
    __in_ecount( cbData ) BYTE * pbData,
    __deref_out IMFPresentationDescriptor ** ppPD);

EXTERN_GUID(MF_SD_LANGUAGE, 0xaf2180, 0xbdc2, 0x423c, 0xab, 0xca, 0xf5, 0x3, 0x59, 0x3b, 0xc1, 0x21);
EXTERN_GUID(MF_SD_PROTECTED, 0xaf2181, 0xbdc2, 0x423c, 0xab, 0xca, 0xf5, 0x3, 0x59, 0x3b, 0xc1, 0x21);
EXTERN_GUID(MF_SD_STREAM_NAME, 0x4f1b099d, 0xd314, 0x41e5, 0xa7, 0x81, 0x7f, 0xef, 0xaa, 0x4c, 0x50, 0x1f);
EXTERN_GUID(MF_SD_MUTUALLY_EXCLUSIVE, 0x23ef79c, 0x388d, 0x487f, 0xac, 0x17, 0x69, 0x6c, 0xd6, 0xe3, 0xc6, 0xf5);


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0017_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0017_v0_0_s_ifspec;

#ifndef __IMFStreamDescriptor_INTERFACE_DEFINED__
#define __IMFStreamDescriptor_INTERFACE_DEFINED__

/* interface IMFStreamDescriptor */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFStreamDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("56c03d9c-9dbb-45f5-ab4b-d80f47c05938")
    IMFStreamDescriptor : public IMFAttributes
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStreamIdentifier( 
            /* [out] */ __RPC__out DWORD *pdwStreamIdentifier) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMediaTypeHandler( 
            /* [out] */ __RPC__deref_out_opt IMFMediaTypeHandler **ppMediaTypeHandler) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFStreamDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFStreamDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFStreamDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemType )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out MF_ATTRIBUTE_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *CompareItem )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value,
            /* [out] */ __RPC__out BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *Compare )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in_opt IMFAttributes *pTheirs,
            MF_ATTRIBUTES_MATCH_TYPE MatchType,
            /* [out] */ __RPC__out BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT64 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetDouble )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out double *pfValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetGUID )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out GUID *pguidValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetString )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cchBufSize) LPWSTR pwszValue,
            UINT32 cchBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(( *pcchLength + 1 ) ) LPWSTR *ppwszValue,
            /* [out] */ __RPC__out UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [out] */ __RPC__out UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlob )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][out] */ __RPC__out_ecount_full(cbBufSize) UINT8 *pBuf,
            UINT32 cbBufSize,
            /* [full][out][in] */ __RPC__inout_opt UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbSize) UINT8 **ppBuf,
            /* [out] */ __RPC__out UINT32 *pcbSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt LPVOID *ppv);
        
        HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFPROPVARIANT Value);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( 
            __RPC__in IMFStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            UINT32 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            UINT64 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetDouble )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            double fValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetGUID )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            __RPC__in REFGUID guidValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetString )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [string][in] */ __RPC__in_string LPCWSTR wszValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetBlob )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [size_is][in] */ __RPC__in_ecount_full(cbBufSize) const UINT8 *pBuf,
            UINT32 cbBufSize);
        
        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( 
            __RPC__in IMFStreamDescriptor * This,
            __RPC__in REFGUID guidKey,
            /* [in] */ __RPC__in_opt IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *LockStore )( 
            __RPC__in IMFStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( 
            __RPC__in IMFStreamDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            __RPC__in IMFStreamDescriptor * This,
            /* [out] */ __RPC__out UINT32 *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( 
            __RPC__in IMFStreamDescriptor * This,
            UINT32 unIndex,
            /* [out] */ __RPC__out GUID *pguidKey,
            /* [full][out][in] */ __RPC__inout_opt PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( 
            __RPC__in IMFStreamDescriptor * This,
            /* [in] */ __RPC__in_opt IMFAttributes *pDest);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamIdentifier )( 
            __RPC__in IMFStreamDescriptor * This,
            /* [out] */ __RPC__out DWORD *pdwStreamIdentifier);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaTypeHandler )( 
            __RPC__in IMFStreamDescriptor * This,
            /* [out] */ __RPC__deref_out_opt IMFMediaTypeHandler **ppMediaTypeHandler);
        
        END_INTERFACE
    } IMFStreamDescriptorVtbl;

    interface IMFStreamDescriptor
    {
        CONST_VTBL struct IMFStreamDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFStreamDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFStreamDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFStreamDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFStreamDescriptor_GetItem(This,guidKey,pValue)	\
    ( (This)->lpVtbl -> GetItem(This,guidKey,pValue) ) 

#define IMFStreamDescriptor_GetItemType(This,guidKey,pType)	\
    ( (This)->lpVtbl -> GetItemType(This,guidKey,pType) ) 

#define IMFStreamDescriptor_CompareItem(This,guidKey,Value,pbResult)	\
    ( (This)->lpVtbl -> CompareItem(This,guidKey,Value,pbResult) ) 

#define IMFStreamDescriptor_Compare(This,pTheirs,MatchType,pbResult)	\
    ( (This)->lpVtbl -> Compare(This,pTheirs,MatchType,pbResult) ) 

#define IMFStreamDescriptor_GetUINT32(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT32(This,guidKey,punValue) ) 

#define IMFStreamDescriptor_GetUINT64(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT64(This,guidKey,punValue) ) 

#define IMFStreamDescriptor_GetDouble(This,guidKey,pfValue)	\
    ( (This)->lpVtbl -> GetDouble(This,guidKey,pfValue) ) 

#define IMFStreamDescriptor_GetGUID(This,guidKey,pguidValue)	\
    ( (This)->lpVtbl -> GetGUID(This,guidKey,pguidValue) ) 

#define IMFStreamDescriptor_GetStringLength(This,guidKey,pcchLength)	\
    ( (This)->lpVtbl -> GetStringLength(This,guidKey,pcchLength) ) 

#define IMFStreamDescriptor_GetString(This,guidKey,pwszValue,cchBufSize,pcchLength)	\
    ( (This)->lpVtbl -> GetString(This,guidKey,pwszValue,cchBufSize,pcchLength) ) 

#define IMFStreamDescriptor_GetAllocatedString(This,guidKey,ppwszValue,pcchLength)	\
    ( (This)->lpVtbl -> GetAllocatedString(This,guidKey,ppwszValue,pcchLength) ) 

#define IMFStreamDescriptor_GetBlobSize(This,guidKey,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlobSize(This,guidKey,pcbBlobSize) ) 

#define IMFStreamDescriptor_GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize) ) 

#define IMFStreamDescriptor_GetAllocatedBlob(This,guidKey,ppBuf,pcbSize)	\
    ( (This)->lpVtbl -> GetAllocatedBlob(This,guidKey,ppBuf,pcbSize) ) 

#define IMFStreamDescriptor_GetUnknown(This,guidKey,riid,ppv)	\
    ( (This)->lpVtbl -> GetUnknown(This,guidKey,riid,ppv) ) 

#define IMFStreamDescriptor_SetItem(This,guidKey,Value)	\
    ( (This)->lpVtbl -> SetItem(This,guidKey,Value) ) 

#define IMFStreamDescriptor_DeleteItem(This,guidKey)	\
    ( (This)->lpVtbl -> DeleteItem(This,guidKey) ) 

#define IMFStreamDescriptor_DeleteAllItems(This)	\
    ( (This)->lpVtbl -> DeleteAllItems(This) ) 

#define IMFStreamDescriptor_SetUINT32(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT32(This,guidKey,unValue) ) 

#define IMFStreamDescriptor_SetUINT64(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT64(This,guidKey,unValue) ) 

#define IMFStreamDescriptor_SetDouble(This,guidKey,fValue)	\
    ( (This)->lpVtbl -> SetDouble(This,guidKey,fValue) ) 

#define IMFStreamDescriptor_SetGUID(This,guidKey,guidValue)	\
    ( (This)->lpVtbl -> SetGUID(This,guidKey,guidValue) ) 

#define IMFStreamDescriptor_SetString(This,guidKey,wszValue)	\
    ( (This)->lpVtbl -> SetString(This,guidKey,wszValue) ) 

#define IMFStreamDescriptor_SetBlob(This,guidKey,pBuf,cbBufSize)	\
    ( (This)->lpVtbl -> SetBlob(This,guidKey,pBuf,cbBufSize) ) 

#define IMFStreamDescriptor_SetUnknown(This,guidKey,pUnknown)	\
    ( (This)->lpVtbl -> SetUnknown(This,guidKey,pUnknown) ) 

#define IMFStreamDescriptor_LockStore(This)	\
    ( (This)->lpVtbl -> LockStore(This) ) 

#define IMFStreamDescriptor_UnlockStore(This)	\
    ( (This)->lpVtbl -> UnlockStore(This) ) 

#define IMFStreamDescriptor_GetCount(This,pcItems)	\
    ( (This)->lpVtbl -> GetCount(This,pcItems) ) 

#define IMFStreamDescriptor_GetItemByIndex(This,unIndex,pguidKey,pValue)	\
    ( (This)->lpVtbl -> GetItemByIndex(This,unIndex,pguidKey,pValue) ) 

#define IMFStreamDescriptor_CopyAllItems(This,pDest)	\
    ( (This)->lpVtbl -> CopyAllItems(This,pDest) ) 


#define IMFStreamDescriptor_GetStreamIdentifier(This,pdwStreamIdentifier)	\
    ( (This)->lpVtbl -> GetStreamIdentifier(This,pdwStreamIdentifier) ) 

#define IMFStreamDescriptor_GetMediaTypeHandler(This,ppMediaTypeHandler)	\
    ( (This)->lpVtbl -> GetMediaTypeHandler(This,ppMediaTypeHandler) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFStreamDescriptor_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0018 */
/* [local] */ 

STDAPI MFCreateStreamDescriptor(
    DWORD dwStreamIdentifier,
    DWORD cMediaTypes,
    __in_ecount(cMediaTypes) IMFMediaType** apMediaTypes,
    __out IMFStreamDescriptor** ppDescriptor
    );



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0018_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0018_v0_0_s_ifspec;

#ifndef __IMFMediaTypeHandler_INTERFACE_DEFINED__
#define __IMFMediaTypeHandler_INTERFACE_DEFINED__

/* interface IMFMediaTypeHandler */
/* [uuid][object] */ 






EXTERN_C const IID IID_IMFMediaTypeHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e93dcf6c-4b07-4e1e-8123-aa16ed6eadf5")
    IMFMediaTypeHandler : public IUnknown
    {
    public:
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE IsMediaTypeSupported( 
            /* [in] */ IMFMediaType *pMediaType,
            /* [annotation][out] */ 
            __out  IMFMediaType **ppMediaType) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE GetMediaTypeCount( 
            /* [annotation][out] */ 
            __out  DWORD *pdwTypeCount) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE GetMediaTypeByIndex( 
            /* [in] */ DWORD dwIndex,
            /* [annotation][out] */ 
            __out  IMFMediaType **ppType) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE SetCurrentMediaType( 
            /* [in] */ IMFMediaType *pMediaType) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE GetCurrentMediaType( 
            /* [annotation][out] */ 
            __out  IMFMediaType **ppMediaType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMajorType( 
            /* [annotation][out] */ 
            __out  GUID *pguidMajorType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMediaTypeHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFMediaTypeHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFMediaTypeHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFMediaTypeHandler * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *IsMediaTypeSupported )( 
            IMFMediaTypeHandler * This,
            /* [in] */ IMFMediaType *pMediaType,
            /* [annotation][out] */ 
            __out  IMFMediaType **ppMediaType);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *GetMediaTypeCount )( 
            IMFMediaTypeHandler * This,
            /* [annotation][out] */ 
            __out  DWORD *pdwTypeCount);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *GetMediaTypeByIndex )( 
            IMFMediaTypeHandler * This,
            /* [in] */ DWORD dwIndex,
            /* [annotation][out] */ 
            __out  IMFMediaType **ppType);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *SetCurrentMediaType )( 
            IMFMediaTypeHandler * This,
            /* [in] */ IMFMediaType *pMediaType);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *GetCurrentMediaType )( 
            IMFMediaTypeHandler * This,
            /* [annotation][out] */ 
            __out  IMFMediaType **ppMediaType);
        
        HRESULT ( STDMETHODCALLTYPE *GetMajorType )( 
            __RPC__in IMFMediaTypeHandler * This,
            /* [annotation][out] */ 
            __out  GUID *pguidMajorType);
        
        END_INTERFACE
    } IMFMediaTypeHandlerVtbl;

    interface IMFMediaTypeHandler
    {
        CONST_VTBL struct IMFMediaTypeHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMediaTypeHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMediaTypeHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMediaTypeHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMediaTypeHandler_IsMediaTypeSupported(This,pMediaType,ppMediaType)	\
    ( (This)->lpVtbl -> IsMediaTypeSupported(This,pMediaType,ppMediaType) ) 

#define IMFMediaTypeHandler_GetMediaTypeCount(This,pdwTypeCount)	\
    ( (This)->lpVtbl -> GetMediaTypeCount(This,pdwTypeCount) ) 

#define IMFMediaTypeHandler_GetMediaTypeByIndex(This,dwIndex,ppType)	\
    ( (This)->lpVtbl -> GetMediaTypeByIndex(This,dwIndex,ppType) ) 

#define IMFMediaTypeHandler_SetCurrentMediaType(This,pMediaType)	\
    ( (This)->lpVtbl -> SetCurrentMediaType(This,pMediaType) ) 

#define IMFMediaTypeHandler_GetCurrentMediaType(This,ppMediaType)	\
    ( (This)->lpVtbl -> GetCurrentMediaType(This,ppMediaType) ) 

#define IMFMediaTypeHandler_GetMajorType(This,pguidMajorType)	\
    ( (This)->lpVtbl -> GetMajorType(This,pguidMajorType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFMediaTypeHandler_RemoteGetCurrentMediaType_Proxy( 
    __RPC__in IMFMediaTypeHandler * This,
    /* [size_is][size_is][annotation][out] */ 
    __out  BYTE **ppbData,
    /* [out] */ __RPC__out DWORD *pcbData);


void __RPC_STUB IMFMediaTypeHandler_RemoteGetCurrentMediaType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMFMediaTypeHandler_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0019 */
/* [local] */ 

STDAPI MFCreateSimpleTypeHandler(
    __out IMFMediaTypeHandler ** ppHandler );
typedef 
enum MFTIMER_FLAGS
    {	MFTIMER_RELATIVE	= 0x1
    } 	MFTIMER_FLAGS;



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0019_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0019_v0_0_s_ifspec;

#ifndef __IMFTimer_INTERFACE_DEFINED__
#define __IMFTimer_INTERFACE_DEFINED__

/* interface IMFTimer */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFTimer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e56e4cbd-8f70-49d8-a0f8-edb3d6ab9bf2")
    IMFTimer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetTimer( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ LONGLONG llClockTime,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState,
            /* [out] */ IUnknown **ppunkKey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CancelTimer( 
            /* [in] */ IUnknown *punkKey) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFTimerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFTimer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFTimer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFTimer * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetTimer )( 
            IMFTimer * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ LONGLONG llClockTime,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState,
            /* [out] */ IUnknown **ppunkKey);
        
        HRESULT ( STDMETHODCALLTYPE *CancelTimer )( 
            IMFTimer * This,
            /* [in] */ IUnknown *punkKey);
        
        END_INTERFACE
    } IMFTimerVtbl;

    interface IMFTimer
    {
        CONST_VTBL struct IMFTimerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFTimer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFTimer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFTimer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFTimer_SetTimer(This,dwFlags,llClockTime,pCallback,punkState,ppunkKey)	\
    ( (This)->lpVtbl -> SetTimer(This,dwFlags,llClockTime,pCallback,punkState,ppunkKey) ) 

#define IMFTimer_CancelTimer(This,punkKey)	\
    ( (This)->lpVtbl -> CancelTimer(This,punkKey) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFTimer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0020 */
/* [local] */ 

EXTERN_GUID( MF_ACTIVATE_CUSTOM_VIDEO_MIXER_CLSID,          0xba491360, 0xbe50, 0x451e, 0x95, 0xab, 0x6d, 0x4a, 0xcc, 0xc7, 0xda, 0xd8 );
EXTERN_GUID( MF_ACTIVATE_CUSTOM_VIDEO_MIXER_ACTIVATE,       0xba491361, 0xbe50, 0x451e, 0x95, 0xab, 0x6d, 0x4a, 0xcc, 0xc7, 0xda, 0xd8 );
EXTERN_GUID( MF_ACTIVATE_CUSTOM_VIDEO_MIXER_FLAGS,          0xba491362, 0xbe50, 0x451e, 0x95, 0xab, 0x6d, 0x4a, 0xcc, 0xc7, 0xda, 0xd8 );
EXTERN_GUID( MF_ACTIVATE_CUSTOM_VIDEO_PRESENTER_CLSID,      0xba491364, 0xbe50, 0x451e, 0x95, 0xab, 0x6d, 0x4a, 0xcc, 0xc7, 0xda, 0xd8 );
EXTERN_GUID( MF_ACTIVATE_CUSTOM_VIDEO_PRESENTER_ACTIVATE,   0xba491365, 0xbe50, 0x451e, 0x95, 0xab, 0x6d, 0x4a, 0xcc, 0xc7, 0xda, 0xd8 );
EXTERN_GUID( MF_ACTIVATE_CUSTOM_VIDEO_PRESENTER_FLAGS,      0xba491366, 0xbe50, 0x451e, 0x95, 0xab, 0x6d, 0x4a, 0xcc, 0xc7, 0xda, 0xd8 );

enum __MIDL___MIDL_itf_mfidl_0000_0020_0001
    {	MF_ACTIVATE_CUSTOM_MIXER_ALLOWFAIL	= 0x1
    } ;

enum __MIDL___MIDL_itf_mfidl_0000_0020_0002
    {	MF_ACTIVATE_CUSTOM_PRESENTER_ALLOWFAIL	= 0x1
    } ;
EXTERN_GUID( MF_ACTIVATE_MFT_LOCKED,  0xc1f6093c, 0x7f65, 0x4fbd, 0x9e, 0x39, 0x5f, 0xae, 0xc3, 0xc4, 0xfb, 0xd7 );
EXTERN_GUID( MF_ACTIVATE_VIDEO_WINDOW, 0x9a2dbbdd, 0xf57e, 0x4162, 0x82, 0xb9, 0x68, 0x31, 0x37, 0x76, 0x82, 0xd3 );
typedef 
enum _MFSHUTDOWN_STATUS
    {	MFSHUTDOWN_INITIATED	= 0,
	MFSHUTDOWN_COMPLETED	= ( MFSHUTDOWN_INITIATED + 1 ) 
    } 	MFSHUTDOWN_STATUS;



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0020_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0020_v0_0_s_ifspec;

#ifndef __IMFShutdown_INTERFACE_DEFINED__
#define __IMFShutdown_INTERFACE_DEFINED__

/* interface IMFShutdown */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFShutdown;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("97ec2ea4-0e42-4937-97ac-9d6d328824e1")
    IMFShutdown : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Shutdown( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetShutdownStatus( 
            /* [out] */ __RPC__out MFSHUTDOWN_STATUS *pStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFShutdownVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFShutdown * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFShutdown * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFShutdown * This);
        
        HRESULT ( STDMETHODCALLTYPE *Shutdown )( 
            __RPC__in IMFShutdown * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetShutdownStatus )( 
            __RPC__in IMFShutdown * This,
            /* [out] */ __RPC__out MFSHUTDOWN_STATUS *pStatus);
        
        END_INTERFACE
    } IMFShutdownVtbl;

    interface IMFShutdown
    {
        CONST_VTBL struct IMFShutdownVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFShutdown_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFShutdown_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFShutdown_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFShutdown_Shutdown(This)	\
    ( (This)->lpVtbl -> Shutdown(This) ) 

#define IMFShutdown_GetShutdownStatus(This,pStatus)	\
    ( (This)->lpVtbl -> GetShutdownStatus(This,pStatus) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFShutdown_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0021 */
/* [local] */ 

STDAPI 
MFShutdownObject(
    IUnknown * pUnk );
STDAPI
MFCreateAudioRenderer(
    IMFAttributes* pAudioAttributes,
    __out IMFMediaSink** ppSink
    );
STDAPI
MFCreateAudioRendererActivate( 
    __out IMFActivate ** ppActivate 
    );
EXTERN_GUID( MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS, 0xede4b5e0, 0xf805, 0x4d6c, 0x99, 0xb3, 0xdb, 0x01, 0xbf, 0x95, 0xdf, 0xab);
#define    MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS_CROSSPROCESS          0x00000001
#define    MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS_NOPERSIST          0x00000002
#if (WINVER >= _WIN32_WINNT_WIN7) 
#define    MF_AUDIO_RENDERER_ATTRIBUTE_FLAGS_DONT_ALLOW_FORMAT_CHANGES          0x00000004
#endif // (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_GUID( MF_AUDIO_RENDERER_ATTRIBUTE_SESSION_ID, 0xede4b5e3, 0xf805, 0x4d6c, 0x99, 0xb3, 0xdb, 0x01, 0xbf, 0x95, 0xdf, 0xab);
EXTERN_GUID( MF_AUDIO_RENDERER_ATTRIBUTE_ENDPOINT_ID, 0xb10aaec3, 0xef71, 0x4cc3, 0xb8, 0x73, 0x5, 0xa9, 0xa0, 0x8b, 0x9f, 0x8e);
EXTERN_GUID( MF_AUDIO_RENDERER_ATTRIBUTE_ENDPOINT_ROLE, 0x6ba644ff, 0x27c5, 0x4d02, 0x98, 0x87, 0xc2, 0x86, 0x19, 0xfd, 0xb9, 0x1b);
STDAPI
MFCreateVideoRendererActivate(
    __in HWND hwndVideo, 
    __out IMFActivate ** ppActivate 
    );
#if (WINVER >= _WIN32_WINNT_WIN7) 
STDAPI
MFCreateMPEG4MediaSink(
    __in IMFByteStream* pIByteStream, 
    __in_opt IMFMediaType* pVideoMediaType, 
    __in_opt IMFMediaType* pAudioMediaType, 
    __out IMFMediaSink** ppIMediaSink 
    );
STDAPI
MFCreate3GPMediaSink(
    __in IMFByteStream* pIByteStream, 
    __in_opt IMFMediaType* pVideoMediaType, 
    __in_opt IMFMediaType* pAudioMediaType, 
    __out IMFMediaSink** ppIMediaSink 
    );
STDAPI
MFCreateMP3MediaSink(
    __in IMFByteStream* pTargetByteStream, 
     __deref_out IMFMediaSink** ppMediaSink 
    );
#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0021_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0021_v0_0_s_ifspec;

#ifndef __IMFTopoLoader_INTERFACE_DEFINED__
#define __IMFTopoLoader_INTERFACE_DEFINED__

/* interface IMFTopoLoader */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFTopoLoader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DE9A6157-F660-4643-B56A-DF9F7998C7CD")
    IMFTopoLoader : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ IMFTopology *pInputTopo,
            /* [annotation][out] */ 
            __out  IMFTopology **ppOutputTopo,
            /* [in] */ IMFTopology *pCurrentTopo) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFTopoLoaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFTopoLoader * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFTopoLoader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFTopoLoader * This);
        
        HRESULT ( STDMETHODCALLTYPE *Load )( 
            IMFTopoLoader * This,
            /* [in] */ IMFTopology *pInputTopo,
            /* [annotation][out] */ 
            __out  IMFTopology **ppOutputTopo,
            /* [in] */ IMFTopology *pCurrentTopo);
        
        END_INTERFACE
    } IMFTopoLoaderVtbl;

    interface IMFTopoLoader
    {
        CONST_VTBL struct IMFTopoLoaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFTopoLoader_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFTopoLoader_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFTopoLoader_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFTopoLoader_Load(This,pInputTopo,ppOutputTopo,pCurrentTopo)	\
    ( (This)->lpVtbl -> Load(This,pInputTopo,ppOutputTopo,pCurrentTopo) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFTopoLoader_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0022 */
/* [local] */ 

STDAPI MFCreateTopoLoader(
    __out IMFTopoLoader ** ppObj );


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0022_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0022_v0_0_s_ifspec;

#ifndef __IMFContentProtectionManager_INTERFACE_DEFINED__
#define __IMFContentProtectionManager_INTERFACE_DEFINED__

/* interface IMFContentProtectionManager */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMFContentProtectionManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ACF92459-6A61-42bd-B57C-B43E51203CB0")
    IMFContentProtectionManager : public IUnknown
    {
    public:
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE BeginEnableContent( 
            /* [in] */ IMFActivate *pEnablerActivate,
            /* [in] */ IMFTopology *pTopo,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE EndEnableContent( 
            /* [in] */ IMFAsyncResult *pResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFContentProtectionManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFContentProtectionManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFContentProtectionManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFContentProtectionManager * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BeginEnableContent )( 
            IMFContentProtectionManager * This,
            /* [in] */ IMFActivate *pEnablerActivate,
            /* [in] */ IMFTopology *pTopo,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *EndEnableContent )( 
            IMFContentProtectionManager * This,
            /* [in] */ IMFAsyncResult *pResult);
        
        END_INTERFACE
    } IMFContentProtectionManagerVtbl;

    interface IMFContentProtectionManager
    {
        CONST_VTBL struct IMFContentProtectionManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFContentProtectionManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFContentProtectionManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFContentProtectionManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFContentProtectionManager_BeginEnableContent(This,pEnablerActivate,pTopo,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginEnableContent(This,pEnablerActivate,pTopo,pCallback,punkState) ) 

#define IMFContentProtectionManager_EndEnableContent(This,pResult)	\
    ( (This)->lpVtbl -> EndEnableContent(This,pResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFContentProtectionManager_RemoteBeginEnableContent_Proxy( 
    __RPC__in IMFContentProtectionManager * This,
    /* [in] */ __RPC__in REFCLSID clsidType,
    /* [size_is][in] */ __RPC__in_ecount_full(cbData) BYTE *pbData,
    /* [in] */ DWORD cbData,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);


void __RPC_STUB IMFContentProtectionManager_RemoteBeginEnableContent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFContentProtectionManager_RemoteEndEnableContent_Proxy( 
    __RPC__in IMFContentProtectionManager * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult);


void __RPC_STUB IMFContentProtectionManager_RemoteEndEnableContent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMFContentProtectionManager_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0023 */
/* [local] */ 

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_mfidl_0000_0023_0001
    {	MF_LICENSE_URL_UNTRUSTED	= 0,
	MF_LICENSE_URL_TRUSTED	= ( MF_LICENSE_URL_UNTRUSTED + 1 ) ,
	MF_LICENSE_URL_TAMPERED	= ( MF_LICENSE_URL_TRUSTED + 1 ) 
    } 	MF_URL_TRUST_STATUS;



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0023_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0023_v0_0_s_ifspec;

#ifndef __IMFContentEnabler_INTERFACE_DEFINED__
#define __IMFContentEnabler_INTERFACE_DEFINED__

/* interface IMFContentEnabler */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMFContentEnabler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D3C4EF59-49CE-4381-9071-D5BCD044C770")
    IMFContentEnabler : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEnableType( 
            /* [out] */ __RPC__out GUID *pType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnableURL( 
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcchURL) LPWSTR *ppwszURL,
            /* [out] */ __RPC__out DWORD *pcchURL,
            /* [unique][out][in] */ __RPC__inout_opt MF_URL_TRUST_STATUS *pTrustStatus) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnableData( 
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbData) BYTE **ppbData,
            /* [out] */ __RPC__out DWORD *pcbData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsAutomaticSupported( 
            /* [out] */ __RPC__out BOOL *pfAutomatic) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AutomaticEnable( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MonitorEnable( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Cancel( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFContentEnablerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFContentEnabler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFContentEnabler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFContentEnabler * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnableType )( 
            __RPC__in IMFContentEnabler * This,
            /* [out] */ __RPC__out GUID *pType);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnableURL )( 
            __RPC__in IMFContentEnabler * This,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcchURL) LPWSTR *ppwszURL,
            /* [out] */ __RPC__out DWORD *pcchURL,
            /* [unique][out][in] */ __RPC__inout_opt MF_URL_TRUST_STATUS *pTrustStatus);
        
        HRESULT ( STDMETHODCALLTYPE *GetEnableData )( 
            __RPC__in IMFContentEnabler * This,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbData) BYTE **ppbData,
            /* [out] */ __RPC__out DWORD *pcbData);
        
        HRESULT ( STDMETHODCALLTYPE *IsAutomaticSupported )( 
            __RPC__in IMFContentEnabler * This,
            /* [out] */ __RPC__out BOOL *pfAutomatic);
        
        HRESULT ( STDMETHODCALLTYPE *AutomaticEnable )( 
            __RPC__in IMFContentEnabler * This);
        
        HRESULT ( STDMETHODCALLTYPE *MonitorEnable )( 
            __RPC__in IMFContentEnabler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            __RPC__in IMFContentEnabler * This);
        
        END_INTERFACE
    } IMFContentEnablerVtbl;

    interface IMFContentEnabler
    {
        CONST_VTBL struct IMFContentEnablerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFContentEnabler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFContentEnabler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFContentEnabler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFContentEnabler_GetEnableType(This,pType)	\
    ( (This)->lpVtbl -> GetEnableType(This,pType) ) 

#define IMFContentEnabler_GetEnableURL(This,ppwszURL,pcchURL,pTrustStatus)	\
    ( (This)->lpVtbl -> GetEnableURL(This,ppwszURL,pcchURL,pTrustStatus) ) 

#define IMFContentEnabler_GetEnableData(This,ppbData,pcbData)	\
    ( (This)->lpVtbl -> GetEnableData(This,ppbData,pcbData) ) 

#define IMFContentEnabler_IsAutomaticSupported(This,pfAutomatic)	\
    ( (This)->lpVtbl -> IsAutomaticSupported(This,pfAutomatic) ) 

#define IMFContentEnabler_AutomaticEnable(This)	\
    ( (This)->lpVtbl -> AutomaticEnable(This) ) 

#define IMFContentEnabler_MonitorEnable(This)	\
    ( (This)->lpVtbl -> MonitorEnable(This) ) 

#define IMFContentEnabler_Cancel(This)	\
    ( (This)->lpVtbl -> Cancel(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFContentEnabler_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0024 */
/* [local] */ 


EXTERN_GUID( MFENABLETYPE_WMDRMV1_LicenseAcquisition, 0x4ff6eeaf, 0xb43, 0x4797, 0x9b, 0x85, 0xab, 0xf3, 0x18, 0x15, 0xe7, 0xb0);
EXTERN_GUID( MFENABLETYPE_WMDRMV7_LicenseAcquisition, 0x3306df, 0x4a06, 0x4884,0xa0, 0x97, 0xef, 0x6d, 0x22, 0xec, 0x84, 0xa3);
EXTERN_GUID( MFENABLETYPE_WMDRMV7_Individualization, 0xacd2c84a, 0xb303, 0x4f65, 0xbc, 0x2c, 0x2c, 0x84, 0x8d, 0x1, 0xa9, 0x89);
EXTERN_GUID( MFENABLETYPE_MF_UpdateRevocationInformation, 0xe558b0b5, 0xb3c4, 0x44a0, 0x92, 0x4c, 0x50, 0xd1, 0x78, 0x93, 0x23, 0x85);
EXTERN_GUID( MFENABLETYPE_MF_UpdateUntrustedComponent, 0x9879f3d6, 0xcee2, 0x48e6, 0xb5, 0x73, 0x97, 0x67, 0xab, 0x17, 0x2f, 0x16);
EXTERN_GUID( MFENABLETYPE_MF_RebootRequired, 0x6d4d3d4b, 0x0ece, 0x4652, 0x8b, 0x3a, 0xf2, 0xd2, 0x42, 0x60, 0xd8, 0x87);
// 
// Structs that contain information about revoked or unsigned binaries, 
// returned by the IMFContentEnabler::GetEnableData() method of  
// the Revocation content enabler 
// 
#ifndef MFRR_INFO_VERSION
#define MFRR_INFO_VERSION 0
#endif
// 
// The values for MFRR_COMPONENT_HASH_INFO.ulReason 
// 
#define MF_USER_MODE_COMPONENT_LOAD        0x00000001
#define MF_KERNEL_MODE_COMPONENT_LOAD      0x00000002
#define MF_GRL_LOAD_FAILED                 0x00000010
#define MF_INVALID_GRL_SIGNATURE           0x00000020
#define MF_GRL_ABSENT                      0x00001000
#define MF_COMPONENT_REVOKED               0x00002000
#define MF_COMPONENT_INVALID_EKU           0x00004000
#define MF_COMPONENT_CERT_REVOKED          0x00008000
#define MF_COMPONENT_INVALID_ROOT          0x00010000
#define MF_COMPONENT_HS_CERT_REVOKED       0x00020000
#define MF_COMPONENT_LS_CERT_REVOKED       0x00040000
#define MF_BOOT_DRIVER_VERIFICATION_FAILED 0x00100000
#define MF_TEST_SIGNED_COMPONENT_LOADING   0x01000000
#define MF_MINCRYPT_FAILURE                0x10000000
// 
// STR_HASH_LEN: Number of characters required to represent a SHA-1 hash  
// (RTL_MAX_HASH_LEN_V1) as a string of the form "0x5a3b53463b672a4f..." 
// Each byte of a SHA-1 hash takes two characters to represent, and 
// we add in two leading characters "0x" as well as the NULL terminator 
// 
#define SHA_HASH_LEN   20 
#define STR_HASH_LEN   (SHA_HASH_LEN*2 + 3) 
typedef struct _MFRR_COMPONENT_HASH_INFO 
{ 
    // Reason for failure (revoked or unsigned or badly signed).   
    DWORD ulReason; 
 
    // Header hash of the component 
    WCHAR rgHeaderHash[STR_HASH_LEN];  
 
    // Hash of public key if one of the certificates  
    // in the signing certificate chain is revoked 
    WCHAR rgPublicKeyHash[STR_HASH_LEN];  
 
    // Component name (full path name) 
    WCHAR wszName[MAX_PATH];     
 
}   MFRR_COMPONENT_HASH_INFO, *PMFRR_COMPONENT_HASH_INFO; 
typedef struct _MFRR_COMPONENTS 
{ 
 
    // Version number  
    DWORD dwRRInfoVersion; 
 
    // Number of components in list 
    DWORD dwRRComponents; 
 
    // points to the end of this structure that has  
    // allocated memory for the array of component info structures 
    PMFRR_COMPONENT_HASH_INFO pRRComponents;  
 
}   MFRR_COMPONENTS, *PMFRR_COMPONENTS; 
#pragma pack ( push ) 
#pragma pack ( 1 ) 
typedef struct _ASFFlatPicture 
{ 
    // 
    // Direct mapped fields 
    // 
    BYTE bPictureType; 
    DWORD dwDataLen; 
}   ASF_FLAT_PICTURE; 
#pragma pack ( pop ) 
#pragma pack ( push ) 
#pragma pack ( 1 ) 
typedef struct _ASFFlatSynchronisedLyrics 
{ 
    // 
    // Direct mapped fields 
    // 
    BYTE bTimeStampFormat; 
    BYTE bContentType; 
    DWORD dwLyricsLen; 
}   ASF_FLAT_SYNCHRONISED_LYRICS; 
#pragma pack ( pop ) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0024_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0024_v0_0_s_ifspec;

#ifndef __IMFMetadata_INTERFACE_DEFINED__
#define __IMFMetadata_INTERFACE_DEFINED__

/* interface IMFMetadata */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFMetadata;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F88CFB8C-EF16-4991-B450-CB8C69E51704")
    IMFMetadata : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetLanguage( 
            /* [in] */ __RPC__in LPCWSTR pwszRFC1766) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLanguage( 
            /* [out] */ __RPC__deref_out_opt LPWSTR *ppwszRFC1766) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAllLanguages( 
            /* [out] */ __RPC__out PROPVARIANT *ppvLanguages) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProperty( 
            /* [in] */ __RPC__in LPCWSTR pwszName,
            /* [in] */ __RPC__in const PROPVARIANT *ppvValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ __RPC__in LPCWSTR pwszName,
            /* [out] */ __RPC__out PROPVARIANT *ppvValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteProperty( 
            /* [in] */ __RPC__in LPCWSTR pwszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAllPropertyNames( 
            /* [out] */ __RPC__out PROPVARIANT *ppvNames) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMetadataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFMetadata * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFMetadata * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFMetadata * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetLanguage )( 
            __RPC__in IMFMetadata * This,
            /* [in] */ __RPC__in LPCWSTR pwszRFC1766);
        
        HRESULT ( STDMETHODCALLTYPE *GetLanguage )( 
            __RPC__in IMFMetadata * This,
            /* [out] */ __RPC__deref_out_opt LPWSTR *ppwszRFC1766);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllLanguages )( 
            __RPC__in IMFMetadata * This,
            /* [out] */ __RPC__out PROPVARIANT *ppvLanguages);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IMFMetadata * This,
            /* [in] */ __RPC__in LPCWSTR pwszName,
            /* [in] */ __RPC__in const PROPVARIANT *ppvValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IMFMetadata * This,
            /* [in] */ __RPC__in LPCWSTR pwszName,
            /* [out] */ __RPC__out PROPVARIANT *ppvValue);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteProperty )( 
            __RPC__in IMFMetadata * This,
            /* [in] */ __RPC__in LPCWSTR pwszName);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllPropertyNames )( 
            __RPC__in IMFMetadata * This,
            /* [out] */ __RPC__out PROPVARIANT *ppvNames);
        
        END_INTERFACE
    } IMFMetadataVtbl;

    interface IMFMetadata
    {
        CONST_VTBL struct IMFMetadataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMetadata_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMetadata_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMetadata_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMetadata_SetLanguage(This,pwszRFC1766)	\
    ( (This)->lpVtbl -> SetLanguage(This,pwszRFC1766) ) 

#define IMFMetadata_GetLanguage(This,ppwszRFC1766)	\
    ( (This)->lpVtbl -> GetLanguage(This,ppwszRFC1766) ) 

#define IMFMetadata_GetAllLanguages(This,ppvLanguages)	\
    ( (This)->lpVtbl -> GetAllLanguages(This,ppvLanguages) ) 

#define IMFMetadata_SetProperty(This,pwszName,ppvValue)	\
    ( (This)->lpVtbl -> SetProperty(This,pwszName,ppvValue) ) 

#define IMFMetadata_GetProperty(This,pwszName,ppvValue)	\
    ( (This)->lpVtbl -> GetProperty(This,pwszName,ppvValue) ) 

#define IMFMetadata_DeleteProperty(This,pwszName)	\
    ( (This)->lpVtbl -> DeleteProperty(This,pwszName) ) 

#define IMFMetadata_GetAllPropertyNames(This,ppvNames)	\
    ( (This)->lpVtbl -> GetAllPropertyNames(This,ppvNames) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFMetadata_INTERFACE_DEFINED__ */


#ifndef __IMFMetadataProvider_INTERFACE_DEFINED__
#define __IMFMetadataProvider_INTERFACE_DEFINED__

/* interface IMFMetadataProvider */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFMetadataProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("56181D2D-E221-4adb-B1C8-3CEE6A53F76F")
    IMFMetadataProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMFMetadata( 
            /* [in] */ __RPC__in_opt IMFPresentationDescriptor *pPresentationDescriptor,
            /* [in] */ DWORD dwStreamIdentifier,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IMFMetadata **ppMFMetadata) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMetadataProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFMetadataProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFMetadataProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFMetadataProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMFMetadata )( 
            __RPC__in IMFMetadataProvider * This,
            /* [in] */ __RPC__in_opt IMFPresentationDescriptor *pPresentationDescriptor,
            /* [in] */ DWORD dwStreamIdentifier,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IMFMetadata **ppMFMetadata);
        
        END_INTERFACE
    } IMFMetadataProviderVtbl;

    interface IMFMetadataProvider
    {
        CONST_VTBL struct IMFMetadataProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMetadataProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMetadataProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMetadataProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMetadataProvider_GetMFMetadata(This,pPresentationDescriptor,dwStreamIdentifier,dwFlags,ppMFMetadata)	\
    ( (This)->lpVtbl -> GetMFMetadata(This,pPresentationDescriptor,dwStreamIdentifier,dwFlags,ppMFMetadata) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFMetadataProvider_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0026 */
/* [local] */ 

EXTERN_GUID( MF_METADATA_PROVIDER_SERVICE, 0xdb214084, 0x58a4, 0x4d2e, 0xb8, 0x4f, 0x6f, 0x75, 0x5b, 0x2f, 0x7a, 0xd);
#if (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_GUID( MF_PROPERTY_HANDLER_SERVICE, 0xa3face02, 0x32b8, 0x41dd, 0x90, 0xe7, 0x5f, 0xef, 0x7c, 0x89, 0x91, 0xb5);
#endif // (WINVER >= _WIN32_WINNT_WIN7) 
typedef 
enum _MFRATE_DIRECTION
    {	MFRATE_FORWARD	= 0,
	MFRATE_REVERSE	= ( MFRATE_FORWARD + 1 ) 
    } 	MFRATE_DIRECTION;



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0026_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0026_v0_0_s_ifspec;

#ifndef __IMFRateSupport_INTERFACE_DEFINED__
#define __IMFRateSupport_INTERFACE_DEFINED__

/* interface IMFRateSupport */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IMFRateSupport;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0a9ccdbc-d797-4563-9667-94ec5d79292d")
    IMFRateSupport : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSlowestRate( 
            /* [in] */ MFRATE_DIRECTION eDirection,
            /* [in] */ BOOL fThin,
            /* [out] */ __RPC__out float *pflRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFastestRate( 
            /* [in] */ MFRATE_DIRECTION eDirection,
            /* [in] */ BOOL fThin,
            /* [out] */ __RPC__out float *pflRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsRateSupported( 
            /* [in] */ BOOL fThin,
            /* [in] */ float flRate,
            /* [unique][out][in] */ __RPC__inout_opt float *pflNearestSupportedRate) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFRateSupportVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFRateSupport * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFRateSupport * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFRateSupport * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetSlowestRate )( 
            __RPC__in IMFRateSupport * This,
            /* [in] */ MFRATE_DIRECTION eDirection,
            /* [in] */ BOOL fThin,
            /* [out] */ __RPC__out float *pflRate);
        
        HRESULT ( STDMETHODCALLTYPE *GetFastestRate )( 
            __RPC__in IMFRateSupport * This,
            /* [in] */ MFRATE_DIRECTION eDirection,
            /* [in] */ BOOL fThin,
            /* [out] */ __RPC__out float *pflRate);
        
        HRESULT ( STDMETHODCALLTYPE *IsRateSupported )( 
            __RPC__in IMFRateSupport * This,
            /* [in] */ BOOL fThin,
            /* [in] */ float flRate,
            /* [unique][out][in] */ __RPC__inout_opt float *pflNearestSupportedRate);
        
        END_INTERFACE
    } IMFRateSupportVtbl;

    interface IMFRateSupport
    {
        CONST_VTBL struct IMFRateSupportVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFRateSupport_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFRateSupport_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFRateSupport_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFRateSupport_GetSlowestRate(This,eDirection,fThin,pflRate)	\
    ( (This)->lpVtbl -> GetSlowestRate(This,eDirection,fThin,pflRate) ) 

#define IMFRateSupport_GetFastestRate(This,eDirection,fThin,pflRate)	\
    ( (This)->lpVtbl -> GetFastestRate(This,eDirection,fThin,pflRate) ) 

#define IMFRateSupport_IsRateSupported(This,fThin,flRate,pflNearestSupportedRate)	\
    ( (This)->lpVtbl -> IsRateSupported(This,fThin,flRate,pflNearestSupportedRate) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFRateSupport_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0027 */
/* [local] */ 

EXTERN_GUID( MF_RATE_CONTROL_SERVICE, 0x866fa297, 0xb802, 0x4bf8, 0x9d, 0xc9, 0x5e, 0x3b, 0x6a, 0x9f, 0x53, 0xc9);


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0027_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0027_v0_0_s_ifspec;

#ifndef __IMFRateControl_INTERFACE_DEFINED__
#define __IMFRateControl_INTERFACE_DEFINED__

/* interface IMFRateControl */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IMFRateControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("88ddcd21-03c3-4275-91ed-55ee3929328f")
    IMFRateControl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetRate( 
            /* [in] */ BOOL fThin,
            /* [in] */ float flRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRate( 
            /* [unique][out][in] */ __RPC__inout_opt BOOL *pfThin,
            /* [unique][out][in] */ __RPC__inout_opt float *pflRate) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFRateControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFRateControl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFRateControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFRateControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetRate )( 
            __RPC__in IMFRateControl * This,
            /* [in] */ BOOL fThin,
            /* [in] */ float flRate);
        
        HRESULT ( STDMETHODCALLTYPE *GetRate )( 
            __RPC__in IMFRateControl * This,
            /* [unique][out][in] */ __RPC__inout_opt BOOL *pfThin,
            /* [unique][out][in] */ __RPC__inout_opt float *pflRate);
        
        END_INTERFACE
    } IMFRateControlVtbl;

    interface IMFRateControl
    {
        CONST_VTBL struct IMFRateControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFRateControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFRateControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFRateControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFRateControl_SetRate(This,fThin,flRate)	\
    ( (This)->lpVtbl -> SetRate(This,fThin,flRate) ) 

#define IMFRateControl_GetRate(This,pfThin,pflRate)	\
    ( (This)->lpVtbl -> GetRate(This,pfThin,pflRate) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFRateControl_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0028 */
/* [local] */ 

#if (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0028_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0028_v0_0_s_ifspec;

#ifndef __IMFTimecodeTranslate_INTERFACE_DEFINED__
#define __IMFTimecodeTranslate_INTERFACE_DEFINED__

/* interface IMFTimecodeTranslate */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFTimecodeTranslate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ab9d8661-f7e8-4ef4-9861-89f334f94e74")
    IMFTimecodeTranslate : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BeginConvertTimecodeToHNS( 
            /* [in] */ const PROPVARIANT *pPropVarTimecode,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndConvertTimecodeToHNS( 
            /* [in] */ IMFAsyncResult *pResult,
            /* [out] */ MFTIME *phnsTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BeginConvertHNSToTimecode( 
            /* [in] */ MFTIME hnsTime,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndConvertHNSToTimecode( 
            /* [in] */ IMFAsyncResult *pResult,
            /* [out] */ PROPVARIANT *pPropVarTimecode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFTimecodeTranslateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFTimecodeTranslate * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFTimecodeTranslate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFTimecodeTranslate * This);
        
        HRESULT ( STDMETHODCALLTYPE *BeginConvertTimecodeToHNS )( 
            IMFTimecodeTranslate * This,
            /* [in] */ const PROPVARIANT *pPropVarTimecode,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        HRESULT ( STDMETHODCALLTYPE *EndConvertTimecodeToHNS )( 
            IMFTimecodeTranslate * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [out] */ MFTIME *phnsTime);
        
        HRESULT ( STDMETHODCALLTYPE *BeginConvertHNSToTimecode )( 
            IMFTimecodeTranslate * This,
            /* [in] */ MFTIME hnsTime,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        HRESULT ( STDMETHODCALLTYPE *EndConvertHNSToTimecode )( 
            IMFTimecodeTranslate * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [out] */ PROPVARIANT *pPropVarTimecode);
        
        END_INTERFACE
    } IMFTimecodeTranslateVtbl;

    interface IMFTimecodeTranslate
    {
        CONST_VTBL struct IMFTimecodeTranslateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFTimecodeTranslate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFTimecodeTranslate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFTimecodeTranslate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFTimecodeTranslate_BeginConvertTimecodeToHNS(This,pPropVarTimecode,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginConvertTimecodeToHNS(This,pPropVarTimecode,pCallback,punkState) ) 

#define IMFTimecodeTranslate_EndConvertTimecodeToHNS(This,pResult,phnsTime)	\
    ( (This)->lpVtbl -> EndConvertTimecodeToHNS(This,pResult,phnsTime) ) 

#define IMFTimecodeTranslate_BeginConvertHNSToTimecode(This,hnsTime,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginConvertHNSToTimecode(This,hnsTime,pCallback,punkState) ) 

#define IMFTimecodeTranslate_EndConvertHNSToTimecode(This,pResult,pPropVarTimecode)	\
    ( (This)->lpVtbl -> EndConvertHNSToTimecode(This,pResult,pPropVarTimecode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFTimecodeTranslate_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0029 */
/* [local] */ 

EXTERN_GUID( MF_TIMECODE_SERVICE, 0xa0d502a7, 0x0eb3, 0x4885, 0xb1, 0xb9, 0x9f, 0xeb, 0x0d, 0x08, 0x34, 0x54 );
#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0029_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0029_v0_0_s_ifspec;

#ifndef __IMFSimpleAudioVolume_INTERFACE_DEFINED__
#define __IMFSimpleAudioVolume_INTERFACE_DEFINED__

/* interface IMFSimpleAudioVolume */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFSimpleAudioVolume;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("089EDF13-CF71-4338-8D13-9E569DBDC319")
    IMFSimpleAudioVolume : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetMasterVolume( 
            /* [in] */ float fLevel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMasterVolume( 
            /* [out] */ __RPC__out float *pfLevel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMute( 
            /* [in] */ const BOOL bMute) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMute( 
            /* [out] */ __RPC__out BOOL *pbMute) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSimpleAudioVolumeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFSimpleAudioVolume * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFSimpleAudioVolume * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFSimpleAudioVolume * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetMasterVolume )( 
            __RPC__in IMFSimpleAudioVolume * This,
            /* [in] */ float fLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetMasterVolume )( 
            __RPC__in IMFSimpleAudioVolume * This,
            /* [out] */ __RPC__out float *pfLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SetMute )( 
            __RPC__in IMFSimpleAudioVolume * This,
            /* [in] */ const BOOL bMute);
        
        HRESULT ( STDMETHODCALLTYPE *GetMute )( 
            __RPC__in IMFSimpleAudioVolume * This,
            /* [out] */ __RPC__out BOOL *pbMute);
        
        END_INTERFACE
    } IMFSimpleAudioVolumeVtbl;

    interface IMFSimpleAudioVolume
    {
        CONST_VTBL struct IMFSimpleAudioVolumeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSimpleAudioVolume_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSimpleAudioVolume_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSimpleAudioVolume_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSimpleAudioVolume_SetMasterVolume(This,fLevel)	\
    ( (This)->lpVtbl -> SetMasterVolume(This,fLevel) ) 

#define IMFSimpleAudioVolume_GetMasterVolume(This,pfLevel)	\
    ( (This)->lpVtbl -> GetMasterVolume(This,pfLevel) ) 

#define IMFSimpleAudioVolume_SetMute(This,bMute)	\
    ( (This)->lpVtbl -> SetMute(This,bMute) ) 

#define IMFSimpleAudioVolume_GetMute(This,pbMute)	\
    ( (This)->lpVtbl -> GetMute(This,pbMute) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSimpleAudioVolume_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0030 */
/* [local] */ 

EXTERN_GUID( MR_POLICY_VOLUME_SERVICE, 0x1abaa2ac, 0x9d3b, 0x47c6, 0xab, 0x48, 0xc5, 0x95, 0x6, 0xde, 0x78, 0x4d);


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0030_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0030_v0_0_s_ifspec;

#ifndef __IMFAudioStreamVolume_INTERFACE_DEFINED__
#define __IMFAudioStreamVolume_INTERFACE_DEFINED__

/* interface IMFAudioStreamVolume */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFAudioStreamVolume;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("76B1BBDB-4EC8-4f36-B106-70A9316DF593")
    IMFAudioStreamVolume : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetChannelCount( 
            /* [out] */ __RPC__out UINT32 *pdwCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetChannelVolume( 
            /* [in] */ UINT32 dwIndex,
            /* [in] */ const float fLevel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetChannelVolume( 
            /* [in] */ UINT32 dwIndex,
            /* [out] */ __RPC__out float *pfLevel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAllVolumes( 
            /* [in] */ UINT32 dwCount,
            /* [size_is][in] */ __RPC__in_ecount_full(dwCount) const float *pfVolumes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAllVolumes( 
            /* [in] */ UINT32 dwCount,
            /* [size_is][out] */ __RPC__out_ecount_full(dwCount) float *pfVolumes) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFAudioStreamVolumeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFAudioStreamVolume * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFAudioStreamVolume * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFAudioStreamVolume * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetChannelCount )( 
            __RPC__in IMFAudioStreamVolume * This,
            /* [out] */ __RPC__out UINT32 *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE *SetChannelVolume )( 
            __RPC__in IMFAudioStreamVolume * This,
            /* [in] */ UINT32 dwIndex,
            /* [in] */ const float fLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetChannelVolume )( 
            __RPC__in IMFAudioStreamVolume * This,
            /* [in] */ UINT32 dwIndex,
            /* [out] */ __RPC__out float *pfLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SetAllVolumes )( 
            __RPC__in IMFAudioStreamVolume * This,
            /* [in] */ UINT32 dwCount,
            /* [size_is][in] */ __RPC__in_ecount_full(dwCount) const float *pfVolumes);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllVolumes )( 
            __RPC__in IMFAudioStreamVolume * This,
            /* [in] */ UINT32 dwCount,
            /* [size_is][out] */ __RPC__out_ecount_full(dwCount) float *pfVolumes);
        
        END_INTERFACE
    } IMFAudioStreamVolumeVtbl;

    interface IMFAudioStreamVolume
    {
        CONST_VTBL struct IMFAudioStreamVolumeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFAudioStreamVolume_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFAudioStreamVolume_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFAudioStreamVolume_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFAudioStreamVolume_GetChannelCount(This,pdwCount)	\
    ( (This)->lpVtbl -> GetChannelCount(This,pdwCount) ) 

#define IMFAudioStreamVolume_SetChannelVolume(This,dwIndex,fLevel)	\
    ( (This)->lpVtbl -> SetChannelVolume(This,dwIndex,fLevel) ) 

#define IMFAudioStreamVolume_GetChannelVolume(This,dwIndex,pfLevel)	\
    ( (This)->lpVtbl -> GetChannelVolume(This,dwIndex,pfLevel) ) 

#define IMFAudioStreamVolume_SetAllVolumes(This,dwCount,pfVolumes)	\
    ( (This)->lpVtbl -> SetAllVolumes(This,dwCount,pfVolumes) ) 

#define IMFAudioStreamVolume_GetAllVolumes(This,dwCount,pfVolumes)	\
    ( (This)->lpVtbl -> GetAllVolumes(This,dwCount,pfVolumes) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFAudioStreamVolume_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0031 */
/* [local] */ 

EXTERN_GUID( MR_STREAM_VOLUME_SERVICE, 0xf8b5fa2f, 0x32ef, 0x46f5, 0xb1, 0x72, 0x13, 0x21, 0x21, 0x2f, 0xb2, 0xc4);


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0031_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0031_v0_0_s_ifspec;

#ifndef __IMFAudioPolicy_INTERFACE_DEFINED__
#define __IMFAudioPolicy_INTERFACE_DEFINED__

/* interface IMFAudioPolicy */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFAudioPolicy;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a0638c2b-6465-4395-9ae7-a321a9fd2856")
    IMFAudioPolicy : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetGroupingParam( 
            /* [in] */ REFGUID rguidClass) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGroupingParam( 
            /* [annotation][out] */ 
            __out  GUID *pguidClass) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDisplayName( 
            /* [in] */ LPCWSTR pszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayName( 
            /* [annotation][out] */ 
            __deref_out  LPWSTR *pszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIconPath( 
            /* [in] */ LPCWSTR pszPath) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIconPath( 
            /* [annotation][out] */ 
            __deref_out  LPWSTR *pszPath) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFAudioPolicyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFAudioPolicy * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFAudioPolicy * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFAudioPolicy * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetGroupingParam )( 
            IMFAudioPolicy * This,
            /* [in] */ REFGUID rguidClass);
        
        HRESULT ( STDMETHODCALLTYPE *GetGroupingParam )( 
            IMFAudioPolicy * This,
            /* [annotation][out] */ 
            __out  GUID *pguidClass);
        
        HRESULT ( STDMETHODCALLTYPE *SetDisplayName )( 
            IMFAudioPolicy * This,
            /* [in] */ LPCWSTR pszName);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
            IMFAudioPolicy * This,
            /* [annotation][out] */ 
            __deref_out  LPWSTR *pszName);
        
        HRESULT ( STDMETHODCALLTYPE *SetIconPath )( 
            IMFAudioPolicy * This,
            /* [in] */ LPCWSTR pszPath);
        
        HRESULT ( STDMETHODCALLTYPE *GetIconPath )( 
            IMFAudioPolicy * This,
            /* [annotation][out] */ 
            __deref_out  LPWSTR *pszPath);
        
        END_INTERFACE
    } IMFAudioPolicyVtbl;

    interface IMFAudioPolicy
    {
        CONST_VTBL struct IMFAudioPolicyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFAudioPolicy_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFAudioPolicy_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFAudioPolicy_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFAudioPolicy_SetGroupingParam(This,rguidClass)	\
    ( (This)->lpVtbl -> SetGroupingParam(This,rguidClass) ) 

#define IMFAudioPolicy_GetGroupingParam(This,pguidClass)	\
    ( (This)->lpVtbl -> GetGroupingParam(This,pguidClass) ) 

#define IMFAudioPolicy_SetDisplayName(This,pszName)	\
    ( (This)->lpVtbl -> SetDisplayName(This,pszName) ) 

#define IMFAudioPolicy_GetDisplayName(This,pszName)	\
    ( (This)->lpVtbl -> GetDisplayName(This,pszName) ) 

#define IMFAudioPolicy_SetIconPath(This,pszPath)	\
    ( (This)->lpVtbl -> SetIconPath(This,pszPath) ) 

#define IMFAudioPolicy_GetIconPath(This,pszPath)	\
    ( (This)->lpVtbl -> GetIconPath(This,pszPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFAudioPolicy_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0032 */
/* [local] */ 

EXTERN_GUID( MR_AUDIO_POLICY_SERVICE, 0x911fd737, 0x6775, 0x4ab0, 0xa6, 0x14, 0x29, 0x78, 0x62, 0xfd, 0xac, 0x88);


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0032_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0032_v0_0_s_ifspec;

#ifndef __IMFSampleGrabberSinkCallback_INTERFACE_DEFINED__
#define __IMFSampleGrabberSinkCallback_INTERFACE_DEFINED__

/* interface IMFSampleGrabberSinkCallback */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFSampleGrabberSinkCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8C7B80BF-EE42-4b59-B1DF-55668E1BDCA8")
    IMFSampleGrabberSinkCallback : public IMFClockStateSink
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnSetPresentationClock( 
            /* [in] */ IMFPresentationClock *pPresentationClock) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnProcessSample( 
            /* [in] */ REFGUID guidMajorMediaType,
            /* [in] */ DWORD dwSampleFlags,
            /* [in] */ LONGLONG llSampleTime,
            /* [in] */ LONGLONG llSampleDuration,
            /* [annotation][in] */ 
            __in_bcount(dwSampleSize)  const BYTE *pSampleBuffer,
            /* [in] */ DWORD dwSampleSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnShutdown( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSampleGrabberSinkCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFSampleGrabberSinkCallback * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFSampleGrabberSinkCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFSampleGrabberSinkCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockStart )( 
            IMFSampleGrabberSinkCallback * This,
            /* [in] */ MFTIME hnsSystemTime,
            /* [in] */ LONGLONG llClockStartOffset);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockStop )( 
            IMFSampleGrabberSinkCallback * This,
            /* [in] */ MFTIME hnsSystemTime);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockPause )( 
            IMFSampleGrabberSinkCallback * This,
            /* [in] */ MFTIME hnsSystemTime);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockRestart )( 
            IMFSampleGrabberSinkCallback * This,
            /* [in] */ MFTIME hnsSystemTime);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockSetRate )( 
            IMFSampleGrabberSinkCallback * This,
            /* [in] */ MFTIME hnsSystemTime,
            /* [in] */ float flRate);
        
        HRESULT ( STDMETHODCALLTYPE *OnSetPresentationClock )( 
            IMFSampleGrabberSinkCallback * This,
            /* [in] */ IMFPresentationClock *pPresentationClock);
        
        HRESULT ( STDMETHODCALLTYPE *OnProcessSample )( 
            IMFSampleGrabberSinkCallback * This,
            /* [in] */ REFGUID guidMajorMediaType,
            /* [in] */ DWORD dwSampleFlags,
            /* [in] */ LONGLONG llSampleTime,
            /* [in] */ LONGLONG llSampleDuration,
            /* [annotation][in] */ 
            __in_bcount(dwSampleSize)  const BYTE *pSampleBuffer,
            /* [in] */ DWORD dwSampleSize);
        
        HRESULT ( STDMETHODCALLTYPE *OnShutdown )( 
            IMFSampleGrabberSinkCallback * This);
        
        END_INTERFACE
    } IMFSampleGrabberSinkCallbackVtbl;

    interface IMFSampleGrabberSinkCallback
    {
        CONST_VTBL struct IMFSampleGrabberSinkCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSampleGrabberSinkCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSampleGrabberSinkCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSampleGrabberSinkCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSampleGrabberSinkCallback_OnClockStart(This,hnsSystemTime,llClockStartOffset)	\
    ( (This)->lpVtbl -> OnClockStart(This,hnsSystemTime,llClockStartOffset) ) 

#define IMFSampleGrabberSinkCallback_OnClockStop(This,hnsSystemTime)	\
    ( (This)->lpVtbl -> OnClockStop(This,hnsSystemTime) ) 

#define IMFSampleGrabberSinkCallback_OnClockPause(This,hnsSystemTime)	\
    ( (This)->lpVtbl -> OnClockPause(This,hnsSystemTime) ) 

#define IMFSampleGrabberSinkCallback_OnClockRestart(This,hnsSystemTime)	\
    ( (This)->lpVtbl -> OnClockRestart(This,hnsSystemTime) ) 

#define IMFSampleGrabberSinkCallback_OnClockSetRate(This,hnsSystemTime,flRate)	\
    ( (This)->lpVtbl -> OnClockSetRate(This,hnsSystemTime,flRate) ) 


#define IMFSampleGrabberSinkCallback_OnSetPresentationClock(This,pPresentationClock)	\
    ( (This)->lpVtbl -> OnSetPresentationClock(This,pPresentationClock) ) 

#define IMFSampleGrabberSinkCallback_OnProcessSample(This,guidMajorMediaType,dwSampleFlags,llSampleTime,llSampleDuration,pSampleBuffer,dwSampleSize)	\
    ( (This)->lpVtbl -> OnProcessSample(This,guidMajorMediaType,dwSampleFlags,llSampleTime,llSampleDuration,pSampleBuffer,dwSampleSize) ) 

#define IMFSampleGrabberSinkCallback_OnShutdown(This)	\
    ( (This)->lpVtbl -> OnShutdown(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSampleGrabberSinkCallback_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0033 */
/* [local] */ 

STDAPI
MFCreateSampleGrabberSinkActivate(
    IMFMediaType *pIMFMediaType,
    IMFSampleGrabberSinkCallback* pIMFSampleGrabberSinkCallback,
    __out IMFActivate** ppIActivate
    );
EXTERN_GUID( MF_SAMPLEGRABBERSINK_SAMPLE_TIME_OFFSET, 0x62e3d776, 0x8100, 0x4e03, 0xa6, 0xe8, 0xbd, 0x38, 0x57, 0xac, 0x9c, 0x47);
#if (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_GUID( MF_SAMPLEGRABBERSINK_IGNORE_CLOCK, 0x0efda2c0, 0x2b69, 0x4e2e, 0xab, 0x8d, 0x46, 0xdc, 0xbf, 0xf7, 0xd2, 0x5d);


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0033_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0033_v0_0_s_ifspec;

#ifndef __IMFSampleGrabberSinkCallback2_INTERFACE_DEFINED__
#define __IMFSampleGrabberSinkCallback2_INTERFACE_DEFINED__

/* interface IMFSampleGrabberSinkCallback2 */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFSampleGrabberSinkCallback2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ca86aa50-c46e-429e-ab27-16d6ac6844cb")
    IMFSampleGrabberSinkCallback2 : public IMFSampleGrabberSinkCallback
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnProcessSampleEx( 
            /* [in] */ REFGUID guidMajorMediaType,
            /* [in] */ DWORD dwSampleFlags,
            /* [in] */ LONGLONG llSampleTime,
            /* [in] */ LONGLONG llSampleDuration,
            /* [annotation][in] */ 
            __in_bcount(dwSampleSize)  const BYTE *pSampleBuffer,
            /* [in] */ DWORD dwSampleSize,
            /* [annotation][in] */ 
            __in  IMFAttributes *pAttributes) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSampleGrabberSinkCallback2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFSampleGrabberSinkCallback2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFSampleGrabberSinkCallback2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFSampleGrabberSinkCallback2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockStart )( 
            IMFSampleGrabberSinkCallback2 * This,
            /* [in] */ MFTIME hnsSystemTime,
            /* [in] */ LONGLONG llClockStartOffset);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockStop )( 
            IMFSampleGrabberSinkCallback2 * This,
            /* [in] */ MFTIME hnsSystemTime);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockPause )( 
            IMFSampleGrabberSinkCallback2 * This,
            /* [in] */ MFTIME hnsSystemTime);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockRestart )( 
            IMFSampleGrabberSinkCallback2 * This,
            /* [in] */ MFTIME hnsSystemTime);
        
        HRESULT ( STDMETHODCALLTYPE *OnClockSetRate )( 
            IMFSampleGrabberSinkCallback2 * This,
            /* [in] */ MFTIME hnsSystemTime,
            /* [in] */ float flRate);
        
        HRESULT ( STDMETHODCALLTYPE *OnSetPresentationClock )( 
            IMFSampleGrabberSinkCallback2 * This,
            /* [in] */ IMFPresentationClock *pPresentationClock);
        
        HRESULT ( STDMETHODCALLTYPE *OnProcessSample )( 
            IMFSampleGrabberSinkCallback2 * This,
            /* [in] */ REFGUID guidMajorMediaType,
            /* [in] */ DWORD dwSampleFlags,
            /* [in] */ LONGLONG llSampleTime,
            /* [in] */ LONGLONG llSampleDuration,
            /* [annotation][in] */ 
            __in_bcount(dwSampleSize)  const BYTE *pSampleBuffer,
            /* [in] */ DWORD dwSampleSize);
        
        HRESULT ( STDMETHODCALLTYPE *OnShutdown )( 
            IMFSampleGrabberSinkCallback2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnProcessSampleEx )( 
            IMFSampleGrabberSinkCallback2 * This,
            /* [in] */ REFGUID guidMajorMediaType,
            /* [in] */ DWORD dwSampleFlags,
            /* [in] */ LONGLONG llSampleTime,
            /* [in] */ LONGLONG llSampleDuration,
            /* [annotation][in] */ 
            __in_bcount(dwSampleSize)  const BYTE *pSampleBuffer,
            /* [in] */ DWORD dwSampleSize,
            /* [annotation][in] */ 
            __in  IMFAttributes *pAttributes);
        
        END_INTERFACE
    } IMFSampleGrabberSinkCallback2Vtbl;

    interface IMFSampleGrabberSinkCallback2
    {
        CONST_VTBL struct IMFSampleGrabberSinkCallback2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSampleGrabberSinkCallback2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSampleGrabberSinkCallback2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSampleGrabberSinkCallback2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSampleGrabberSinkCallback2_OnClockStart(This,hnsSystemTime,llClockStartOffset)	\
    ( (This)->lpVtbl -> OnClockStart(This,hnsSystemTime,llClockStartOffset) ) 

#define IMFSampleGrabberSinkCallback2_OnClockStop(This,hnsSystemTime)	\
    ( (This)->lpVtbl -> OnClockStop(This,hnsSystemTime) ) 

#define IMFSampleGrabberSinkCallback2_OnClockPause(This,hnsSystemTime)	\
    ( (This)->lpVtbl -> OnClockPause(This,hnsSystemTime) ) 

#define IMFSampleGrabberSinkCallback2_OnClockRestart(This,hnsSystemTime)	\
    ( (This)->lpVtbl -> OnClockRestart(This,hnsSystemTime) ) 

#define IMFSampleGrabberSinkCallback2_OnClockSetRate(This,hnsSystemTime,flRate)	\
    ( (This)->lpVtbl -> OnClockSetRate(This,hnsSystemTime,flRate) ) 


#define IMFSampleGrabberSinkCallback2_OnSetPresentationClock(This,pPresentationClock)	\
    ( (This)->lpVtbl -> OnSetPresentationClock(This,pPresentationClock) ) 

#define IMFSampleGrabberSinkCallback2_OnProcessSample(This,guidMajorMediaType,dwSampleFlags,llSampleTime,llSampleDuration,pSampleBuffer,dwSampleSize)	\
    ( (This)->lpVtbl -> OnProcessSample(This,guidMajorMediaType,dwSampleFlags,llSampleTime,llSampleDuration,pSampleBuffer,dwSampleSize) ) 

#define IMFSampleGrabberSinkCallback2_OnShutdown(This)	\
    ( (This)->lpVtbl -> OnShutdown(This) ) 


#define IMFSampleGrabberSinkCallback2_OnProcessSampleEx(This,guidMajorMediaType,dwSampleFlags,llSampleTime,llSampleDuration,pSampleBuffer,dwSampleSize,pAttributes)	\
    ( (This)->lpVtbl -> OnProcessSampleEx(This,guidMajorMediaType,dwSampleFlags,llSampleTime,llSampleDuration,pSampleBuffer,dwSampleSize,pAttributes) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSampleGrabberSinkCallback2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0034 */
/* [local] */ 

#endif // (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_GUID( MF_QUALITY_SERVICES, 0xb7e2be11, 0x2f96, 0x4640, 0xb5, 0x2c, 0x28, 0x23, 0x65, 0xbd, 0xf1, 0x6c);


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0034_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0034_v0_0_s_ifspec;

#ifndef __IMFWorkQueueServices_INTERFACE_DEFINED__
#define __IMFWorkQueueServices_INTERFACE_DEFINED__

/* interface IMFWorkQueueServices */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFWorkQueueServices;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("35FE1BB8-A3A9-40fe-BBEC-EB569C9CCCA3")
    IMFWorkQueueServices : public IUnknown
    {
    public:
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE BeginRegisterTopologyWorkQueuesWithMMCSS( 
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *pState) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE EndRegisterTopologyWorkQueuesWithMMCSS( 
            /* [in] */ IMFAsyncResult *pResult) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE BeginUnregisterTopologyWorkQueuesWithMMCSS( 
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *pState) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE EndUnregisterTopologyWorkQueuesWithMMCSS( 
            /* [in] */ IMFAsyncResult *pResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTopologyWorkQueueMMCSSClass( 
            /* [in] */ DWORD dwTopologyWorkQueueId,
            /* [size_is][out] */ __RPC__out_ecount_full(*pcchClass) LPWSTR pwszClass,
            /* [out][in] */ __RPC__inout DWORD *pcchClass) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTopologyWorkQueueMMCSSTaskId( 
            /* [in] */ DWORD dwTopologyWorkQueueId,
            /* [out] */ __RPC__out DWORD *pdwTaskId) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE BeginRegisterPlatformWorkQueueWithMMCSS( 
            /* [in] */ DWORD dwPlatformWorkQueue,
            /* [in] */ LPCWSTR wszClass,
            /* [in] */ DWORD dwTaskId,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *pState) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE EndRegisterPlatformWorkQueueWithMMCSS( 
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  DWORD *pdwTaskId) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE BeginUnregisterPlatformWorkQueueWithMMCSS( 
            /* [in] */ DWORD dwPlatformWorkQueue,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *pState) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE EndUnregisterPlatformWorkQueueWithMMCSS( 
            /* [in] */ IMFAsyncResult *pResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPlaftormWorkQueueMMCSSClass( 
            /* [in] */ DWORD dwPlatformWorkQueueId,
            /* [size_is][out] */ __RPC__out_ecount_full(*pcchClass) LPWSTR pwszClass,
            /* [out][in] */ __RPC__inout DWORD *pcchClass) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPlatformWorkQueueMMCSSTaskId( 
            /* [in] */ DWORD dwPlatformWorkQueueId,
            /* [out] */ __RPC__out DWORD *pdwTaskId) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFWorkQueueServicesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFWorkQueueServices * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFWorkQueueServices * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFWorkQueueServices * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BeginRegisterTopologyWorkQueuesWithMMCSS )( 
            IMFWorkQueueServices * This,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *pState);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *EndRegisterTopologyWorkQueuesWithMMCSS )( 
            IMFWorkQueueServices * This,
            /* [in] */ IMFAsyncResult *pResult);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BeginUnregisterTopologyWorkQueuesWithMMCSS )( 
            IMFWorkQueueServices * This,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *pState);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *EndUnregisterTopologyWorkQueuesWithMMCSS )( 
            IMFWorkQueueServices * This,
            /* [in] */ IMFAsyncResult *pResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetTopologyWorkQueueMMCSSClass )( 
            __RPC__in IMFWorkQueueServices * This,
            /* [in] */ DWORD dwTopologyWorkQueueId,
            /* [size_is][out] */ __RPC__out_ecount_full(*pcchClass) LPWSTR pwszClass,
            /* [out][in] */ __RPC__inout DWORD *pcchClass);
        
        HRESULT ( STDMETHODCALLTYPE *GetTopologyWorkQueueMMCSSTaskId )( 
            __RPC__in IMFWorkQueueServices * This,
            /* [in] */ DWORD dwTopologyWorkQueueId,
            /* [out] */ __RPC__out DWORD *pdwTaskId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BeginRegisterPlatformWorkQueueWithMMCSS )( 
            IMFWorkQueueServices * This,
            /* [in] */ DWORD dwPlatformWorkQueue,
            /* [in] */ LPCWSTR wszClass,
            /* [in] */ DWORD dwTaskId,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *pState);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *EndRegisterPlatformWorkQueueWithMMCSS )( 
            IMFWorkQueueServices * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  DWORD *pdwTaskId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BeginUnregisterPlatformWorkQueueWithMMCSS )( 
            IMFWorkQueueServices * This,
            /* [in] */ DWORD dwPlatformWorkQueue,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *pState);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *EndUnregisterPlatformWorkQueueWithMMCSS )( 
            IMFWorkQueueServices * This,
            /* [in] */ IMFAsyncResult *pResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetPlaftormWorkQueueMMCSSClass )( 
            __RPC__in IMFWorkQueueServices * This,
            /* [in] */ DWORD dwPlatformWorkQueueId,
            /* [size_is][out] */ __RPC__out_ecount_full(*pcchClass) LPWSTR pwszClass,
            /* [out][in] */ __RPC__inout DWORD *pcchClass);
        
        HRESULT ( STDMETHODCALLTYPE *GetPlatformWorkQueueMMCSSTaskId )( 
            __RPC__in IMFWorkQueueServices * This,
            /* [in] */ DWORD dwPlatformWorkQueueId,
            /* [out] */ __RPC__out DWORD *pdwTaskId);
        
        END_INTERFACE
    } IMFWorkQueueServicesVtbl;

    interface IMFWorkQueueServices
    {
        CONST_VTBL struct IMFWorkQueueServicesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFWorkQueueServices_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFWorkQueueServices_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFWorkQueueServices_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFWorkQueueServices_BeginRegisterTopologyWorkQueuesWithMMCSS(This,pCallback,pState)	\
    ( (This)->lpVtbl -> BeginRegisterTopologyWorkQueuesWithMMCSS(This,pCallback,pState) ) 

#define IMFWorkQueueServices_EndRegisterTopologyWorkQueuesWithMMCSS(This,pResult)	\
    ( (This)->lpVtbl -> EndRegisterTopologyWorkQueuesWithMMCSS(This,pResult) ) 

#define IMFWorkQueueServices_BeginUnregisterTopologyWorkQueuesWithMMCSS(This,pCallback,pState)	\
    ( (This)->lpVtbl -> BeginUnregisterTopologyWorkQueuesWithMMCSS(This,pCallback,pState) ) 

#define IMFWorkQueueServices_EndUnregisterTopologyWorkQueuesWithMMCSS(This,pResult)	\
    ( (This)->lpVtbl -> EndUnregisterTopologyWorkQueuesWithMMCSS(This,pResult) ) 

#define IMFWorkQueueServices_GetTopologyWorkQueueMMCSSClass(This,dwTopologyWorkQueueId,pwszClass,pcchClass)	\
    ( (This)->lpVtbl -> GetTopologyWorkQueueMMCSSClass(This,dwTopologyWorkQueueId,pwszClass,pcchClass) ) 

#define IMFWorkQueueServices_GetTopologyWorkQueueMMCSSTaskId(This,dwTopologyWorkQueueId,pdwTaskId)	\
    ( (This)->lpVtbl -> GetTopologyWorkQueueMMCSSTaskId(This,dwTopologyWorkQueueId,pdwTaskId) ) 

#define IMFWorkQueueServices_BeginRegisterPlatformWorkQueueWithMMCSS(This,dwPlatformWorkQueue,wszClass,dwTaskId,pCallback,pState)	\
    ( (This)->lpVtbl -> BeginRegisterPlatformWorkQueueWithMMCSS(This,dwPlatformWorkQueue,wszClass,dwTaskId,pCallback,pState) ) 

#define IMFWorkQueueServices_EndRegisterPlatformWorkQueueWithMMCSS(This,pResult,pdwTaskId)	\
    ( (This)->lpVtbl -> EndRegisterPlatformWorkQueueWithMMCSS(This,pResult,pdwTaskId) ) 

#define IMFWorkQueueServices_BeginUnregisterPlatformWorkQueueWithMMCSS(This,dwPlatformWorkQueue,pCallback,pState)	\
    ( (This)->lpVtbl -> BeginUnregisterPlatformWorkQueueWithMMCSS(This,dwPlatformWorkQueue,pCallback,pState) ) 

#define IMFWorkQueueServices_EndUnregisterPlatformWorkQueueWithMMCSS(This,pResult)	\
    ( (This)->lpVtbl -> EndUnregisterPlatformWorkQueueWithMMCSS(This,pResult) ) 

#define IMFWorkQueueServices_GetPlaftormWorkQueueMMCSSClass(This,dwPlatformWorkQueueId,pwszClass,pcchClass)	\
    ( (This)->lpVtbl -> GetPlaftormWorkQueueMMCSSClass(This,dwPlatformWorkQueueId,pwszClass,pcchClass) ) 

#define IMFWorkQueueServices_GetPlatformWorkQueueMMCSSTaskId(This,dwPlatformWorkQueueId,pdwTaskId)	\
    ( (This)->lpVtbl -> GetPlatformWorkQueueMMCSSTaskId(This,dwPlatformWorkQueueId,pdwTaskId) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_RemoteBeginRegisterTopologyWorkQueuesWithMMCSS_Proxy( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);


void __RPC_STUB IMFWorkQueueServices_RemoteBeginRegisterTopologyWorkQueuesWithMMCSS_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_RemoteEndRegisterTopologyWorkQueuesWithMMCSS_Proxy( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult);


void __RPC_STUB IMFWorkQueueServices_RemoteEndRegisterTopologyWorkQueuesWithMMCSS_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_RemoteBeginUnregisterTopologyWorkQueuesWithMMCSS_Proxy( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);


void __RPC_STUB IMFWorkQueueServices_RemoteBeginUnregisterTopologyWorkQueuesWithMMCSS_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_RemoteEndUnregisterTopologyWorkQueuesWithMMCSS_Proxy( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult);


void __RPC_STUB IMFWorkQueueServices_RemoteEndUnregisterTopologyWorkQueuesWithMMCSS_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_RemoteBeginRegisterPlatformWorkQueueWithMMCSS_Proxy( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ DWORD dwPlatformWorkQueue,
    /* [in] */ __RPC__in LPCWSTR wszClass,
    /* [in] */ DWORD dwTaskId,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);


void __RPC_STUB IMFWorkQueueServices_RemoteBeginRegisterPlatformWorkQueueWithMMCSS_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_RemoteEndRegisterPlatformWorkQueueWithMMCSS_Proxy( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult,
    /* [out] */ __RPC__out DWORD *pdwTaskId);


void __RPC_STUB IMFWorkQueueServices_RemoteEndRegisterPlatformWorkQueueWithMMCSS_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_RemoteBeginUnregisterPlatformWorkQueueWithMMCSS_Proxy( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ DWORD dwPlatformWorkQueue,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);


void __RPC_STUB IMFWorkQueueServices_RemoteBeginUnregisterPlatformWorkQueueWithMMCSS_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_RemoteEndUnregisterPlatformWorkQueueWithMMCSS_Proxy( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult);


void __RPC_STUB IMFWorkQueueServices_RemoteEndUnregisterPlatformWorkQueueWithMMCSS_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMFWorkQueueServices_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0035 */
/* [local] */ 

EXTERN_GUID( MF_WORKQUEUE_SERVICES, 0x8e37d489, 0x41e0, 0x413a, 0x90, 0x68, 0x28, 0x7c, 0x88, 0x6d, 0x8d, 0xda);
typedef 
enum _MF_QUALITY_DROP_MODE
    {	MF_DROP_MODE_NONE	= 0,
	MF_DROP_MODE_1	= 0x1,
	MF_DROP_MODE_2	= 0x2,
	MF_DROP_MODE_3	= 0x3,
	MF_DROP_MODE_4	= 0x4,
	MF_DROP_MODE_5	= 0x5,
	MF_NUM_DROP_MODES	= 0x6
    } 	MF_QUALITY_DROP_MODE;

typedef 
enum _MF_QUALITY_LEVEL
    {	MF_QUALITY_NORMAL	= 0,
	MF_QUALITY_NORMAL_MINUS_1	= 0x1,
	MF_QUALITY_NORMAL_MINUS_2	= 0x2,
	MF_QUALITY_NORMAL_MINUS_3	= 0x3,
	MF_QUALITY_NORMAL_MINUS_4	= 0x4,
	MF_QUALITY_NORMAL_MINUS_5	= 0x5,
	MF_NUM_QUALITY_LEVELS	= 0x6
    } 	MF_QUALITY_LEVEL;

#if (WINVER >= _WIN32_WINNT_WIN7) 
typedef 
enum _MF_QUALITY_ADVISE_FLAGS
    {	MF_QUALITY_CANNOT_KEEP_UP	= 0x1
    } 	MF_QUALITY_ADVISE_FLAGS;

#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0035_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0035_v0_0_s_ifspec;

#ifndef __IMFQualityManager_INTERFACE_DEFINED__
#define __IMFQualityManager_INTERFACE_DEFINED__

/* interface IMFQualityManager */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFQualityManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8D009D86-5B9F-4115-B1FC-9F80D52AB8AB")
    IMFQualityManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE NotifyTopology( 
            /* [in] */ IMFTopology *pTopology) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NotifyPresentationClock( 
            /* [in] */ IMFPresentationClock *pClock) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NotifyProcessInput( 
            /* [in] */ IMFTopologyNode *pNode,
            /* [in] */ long lInputIndex,
            /* [in] */ IMFSample *pSample) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NotifyProcessOutput( 
            /* [in] */ IMFTopologyNode *pNode,
            /* [in] */ long lOutputIndex,
            /* [in] */ IMFSample *pSample) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NotifyQualityEvent( 
            /* [in] */ IUnknown *pObject,
            /* [in] */ IMFMediaEvent *pEvent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Shutdown( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFQualityManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFQualityManager * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFQualityManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFQualityManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyTopology )( 
            IMFQualityManager * This,
            /* [in] */ IMFTopology *pTopology);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyPresentationClock )( 
            IMFQualityManager * This,
            /* [in] */ IMFPresentationClock *pClock);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyProcessInput )( 
            IMFQualityManager * This,
            /* [in] */ IMFTopologyNode *pNode,
            /* [in] */ long lInputIndex,
            /* [in] */ IMFSample *pSample);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyProcessOutput )( 
            IMFQualityManager * This,
            /* [in] */ IMFTopologyNode *pNode,
            /* [in] */ long lOutputIndex,
            /* [in] */ IMFSample *pSample);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyQualityEvent )( 
            IMFQualityManager * This,
            /* [in] */ IUnknown *pObject,
            /* [in] */ IMFMediaEvent *pEvent);
        
        HRESULT ( STDMETHODCALLTYPE *Shutdown )( 
            IMFQualityManager * This);
        
        END_INTERFACE
    } IMFQualityManagerVtbl;

    interface IMFQualityManager
    {
        CONST_VTBL struct IMFQualityManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFQualityManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFQualityManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFQualityManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFQualityManager_NotifyTopology(This,pTopology)	\
    ( (This)->lpVtbl -> NotifyTopology(This,pTopology) ) 

#define IMFQualityManager_NotifyPresentationClock(This,pClock)	\
    ( (This)->lpVtbl -> NotifyPresentationClock(This,pClock) ) 

#define IMFQualityManager_NotifyProcessInput(This,pNode,lInputIndex,pSample)	\
    ( (This)->lpVtbl -> NotifyProcessInput(This,pNode,lInputIndex,pSample) ) 

#define IMFQualityManager_NotifyProcessOutput(This,pNode,lOutputIndex,pSample)	\
    ( (This)->lpVtbl -> NotifyProcessOutput(This,pNode,lOutputIndex,pSample) ) 

#define IMFQualityManager_NotifyQualityEvent(This,pObject,pEvent)	\
    ( (This)->lpVtbl -> NotifyQualityEvent(This,pObject,pEvent) ) 

#define IMFQualityManager_Shutdown(This)	\
    ( (This)->lpVtbl -> Shutdown(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFQualityManager_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0036 */
/* [local] */ 

STDAPI MFCreateStandardQualityManager(
    __out IMFQualityManager **ppQualityManager );
EXTERN_GUID( MF_QUALITY_NOTIFY_PROCESSING_LATENCY, 0xf6b44af8, 0x604d, 0x46fe, 0xa9, 0x5d, 0x45, 0x47, 0x9b, 0x10, 0xc9, 0xbc );
EXTERN_GUID( MF_QUALITY_NOTIFY_SAMPLE_LAG, 0x30d15206, 0xed2a, 0x4760, 0xbe, 0x17, 0xeb, 0x4a, 0x9f, 0x12, 0x29, 0x5c );


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0036_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0036_v0_0_s_ifspec;

#ifndef __IMFQualityAdvise_INTERFACE_DEFINED__
#define __IMFQualityAdvise_INTERFACE_DEFINED__

/* interface IMFQualityAdvise */
/* [uuid][object] */ 






EXTERN_C const IID IID_IMFQualityAdvise;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EC15E2E9-E36B-4f7c-8758-77D452EF4CE7")
    IMFQualityAdvise : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetDropMode( 
            /* [in] */ MF_QUALITY_DROP_MODE eDropMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetQualityLevel( 
            /* [in] */ MF_QUALITY_LEVEL eQualityLevel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDropMode( 
            /* [annotation][out] */ 
            __out  MF_QUALITY_DROP_MODE *peDropMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetQualityLevel( 
            /* [annotation][out] */ 
            __out  MF_QUALITY_LEVEL *peQualityLevel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DropTime( 
            /* [in] */ LONGLONG hnsAmountToDrop) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFQualityAdviseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFQualityAdvise * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFQualityAdvise * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFQualityAdvise * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetDropMode )( 
            __RPC__in IMFQualityAdvise * This,
            /* [in] */ MF_QUALITY_DROP_MODE eDropMode);
        
        HRESULT ( STDMETHODCALLTYPE *SetQualityLevel )( 
            __RPC__in IMFQualityAdvise * This,
            /* [in] */ MF_QUALITY_LEVEL eQualityLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetDropMode )( 
            __RPC__in IMFQualityAdvise * This,
            /* [annotation][out] */ 
            __out  MF_QUALITY_DROP_MODE *peDropMode);
        
        HRESULT ( STDMETHODCALLTYPE *GetQualityLevel )( 
            __RPC__in IMFQualityAdvise * This,
            /* [annotation][out] */ 
            __out  MF_QUALITY_LEVEL *peQualityLevel);
        
        HRESULT ( STDMETHODCALLTYPE *DropTime )( 
            __RPC__in IMFQualityAdvise * This,
            /* [in] */ LONGLONG hnsAmountToDrop);
        
        END_INTERFACE
    } IMFQualityAdviseVtbl;

    interface IMFQualityAdvise
    {
        CONST_VTBL struct IMFQualityAdviseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFQualityAdvise_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFQualityAdvise_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFQualityAdvise_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFQualityAdvise_SetDropMode(This,eDropMode)	\
    ( (This)->lpVtbl -> SetDropMode(This,eDropMode) ) 

#define IMFQualityAdvise_SetQualityLevel(This,eQualityLevel)	\
    ( (This)->lpVtbl -> SetQualityLevel(This,eQualityLevel) ) 

#define IMFQualityAdvise_GetDropMode(This,peDropMode)	\
    ( (This)->lpVtbl -> GetDropMode(This,peDropMode) ) 

#define IMFQualityAdvise_GetQualityLevel(This,peQualityLevel)	\
    ( (This)->lpVtbl -> GetQualityLevel(This,peQualityLevel) ) 

#define IMFQualityAdvise_DropTime(This,hnsAmountToDrop)	\
    ( (This)->lpVtbl -> DropTime(This,hnsAmountToDrop) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFQualityAdvise_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0037 */
/* [local] */ 

#if (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0037_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0037_v0_0_s_ifspec;

#ifndef __IMFQualityAdvise2_INTERFACE_DEFINED__
#define __IMFQualityAdvise2_INTERFACE_DEFINED__

/* interface IMFQualityAdvise2 */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFQualityAdvise2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F3706F0D-8EA2-4886-8000-7155E9EC2EAE")
    IMFQualityAdvise2 : public IMFQualityAdvise
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE NotifyQualityEvent( 
            /* [in] */ __RPC__in_opt IMFMediaEvent *pEvent,
            /* [out] */ __RPC__out DWORD *pdwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFQualityAdvise2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFQualityAdvise2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFQualityAdvise2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFQualityAdvise2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetDropMode )( 
            __RPC__in IMFQualityAdvise2 * This,
            /* [in] */ MF_QUALITY_DROP_MODE eDropMode);
        
        HRESULT ( STDMETHODCALLTYPE *SetQualityLevel )( 
            __RPC__in IMFQualityAdvise2 * This,
            /* [in] */ MF_QUALITY_LEVEL eQualityLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetDropMode )( 
            __RPC__in IMFQualityAdvise2 * This,
            /* [annotation][out] */ 
            __out  MF_QUALITY_DROP_MODE *peDropMode);
        
        HRESULT ( STDMETHODCALLTYPE *GetQualityLevel )( 
            __RPC__in IMFQualityAdvise2 * This,
            /* [annotation][out] */ 
            __out  MF_QUALITY_LEVEL *peQualityLevel);
        
        HRESULT ( STDMETHODCALLTYPE *DropTime )( 
            __RPC__in IMFQualityAdvise2 * This,
            /* [in] */ LONGLONG hnsAmountToDrop);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyQualityEvent )( 
            __RPC__in IMFQualityAdvise2 * This,
            /* [in] */ __RPC__in_opt IMFMediaEvent *pEvent,
            /* [out] */ __RPC__out DWORD *pdwFlags);
        
        END_INTERFACE
    } IMFQualityAdvise2Vtbl;

    interface IMFQualityAdvise2
    {
        CONST_VTBL struct IMFQualityAdvise2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFQualityAdvise2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFQualityAdvise2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFQualityAdvise2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFQualityAdvise2_SetDropMode(This,eDropMode)	\
    ( (This)->lpVtbl -> SetDropMode(This,eDropMode) ) 

#define IMFQualityAdvise2_SetQualityLevel(This,eQualityLevel)	\
    ( (This)->lpVtbl -> SetQualityLevel(This,eQualityLevel) ) 

#define IMFQualityAdvise2_GetDropMode(This,peDropMode)	\
    ( (This)->lpVtbl -> GetDropMode(This,peDropMode) ) 

#define IMFQualityAdvise2_GetQualityLevel(This,peQualityLevel)	\
    ( (This)->lpVtbl -> GetQualityLevel(This,peQualityLevel) ) 

#define IMFQualityAdvise2_DropTime(This,hnsAmountToDrop)	\
    ( (This)->lpVtbl -> DropTime(This,hnsAmountToDrop) ) 


#define IMFQualityAdvise2_NotifyQualityEvent(This,pEvent,pdwFlags)	\
    ( (This)->lpVtbl -> NotifyQualityEvent(This,pEvent,pdwFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFQualityAdvise2_INTERFACE_DEFINED__ */


#ifndef __IMFQualityAdviseLimits_INTERFACE_DEFINED__
#define __IMFQualityAdviseLimits_INTERFACE_DEFINED__

/* interface IMFQualityAdviseLimits */
/* [uuid][object] */ 






EXTERN_C const IID IID_IMFQualityAdviseLimits;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("dfcd8e4d-30b5-4567-acaa-8eb5b7853dc9")
    IMFQualityAdviseLimits : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMaximumDropMode( 
            /* [annotation][out] */ 
            __out  MF_QUALITY_DROP_MODE *peDropMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMinimumQualityLevel( 
            /* [annotation][out] */ 
            __out  MF_QUALITY_LEVEL *peQualityLevel) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFQualityAdviseLimitsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFQualityAdviseLimits * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFQualityAdviseLimits * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFQualityAdviseLimits * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMaximumDropMode )( 
            __RPC__in IMFQualityAdviseLimits * This,
            /* [annotation][out] */ 
            __out  MF_QUALITY_DROP_MODE *peDropMode);
        
        HRESULT ( STDMETHODCALLTYPE *GetMinimumQualityLevel )( 
            __RPC__in IMFQualityAdviseLimits * This,
            /* [annotation][out] */ 
            __out  MF_QUALITY_LEVEL *peQualityLevel);
        
        END_INTERFACE
    } IMFQualityAdviseLimitsVtbl;

    interface IMFQualityAdviseLimits
    {
        CONST_VTBL struct IMFQualityAdviseLimitsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFQualityAdviseLimits_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFQualityAdviseLimits_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFQualityAdviseLimits_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFQualityAdviseLimits_GetMaximumDropMode(This,peDropMode)	\
    ( (This)->lpVtbl -> GetMaximumDropMode(This,peDropMode) ) 

#define IMFQualityAdviseLimits_GetMinimumQualityLevel(This,peQualityLevel)	\
    ( (This)->lpVtbl -> GetMinimumQualityLevel(This,peQualityLevel) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFQualityAdviseLimits_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0039 */
/* [local] */ 

#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0039_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0039_v0_0_s_ifspec;

#ifndef __IMFRealTimeClient_INTERFACE_DEFINED__
#define __IMFRealTimeClient_INTERFACE_DEFINED__

/* interface IMFRealTimeClient */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFRealTimeClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2347D60B-3FB5-480c-8803-8DF3ADCD3EF0")
    IMFRealTimeClient : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RegisterThreads( 
            /* [in] */ DWORD dwTaskIndex,
            /* [in] */ LPCWSTR wszClass) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnregisterThreads( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetWorkQueue( 
            /* [in] */ DWORD dwWorkQueueId) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFRealTimeClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFRealTimeClient * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFRealTimeClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFRealTimeClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterThreads )( 
            IMFRealTimeClient * This,
            /* [in] */ DWORD dwTaskIndex,
            /* [in] */ LPCWSTR wszClass);
        
        HRESULT ( STDMETHODCALLTYPE *UnregisterThreads )( 
            IMFRealTimeClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetWorkQueue )( 
            IMFRealTimeClient * This,
            /* [in] */ DWORD dwWorkQueueId);
        
        END_INTERFACE
    } IMFRealTimeClientVtbl;

    interface IMFRealTimeClient
    {
        CONST_VTBL struct IMFRealTimeClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFRealTimeClient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFRealTimeClient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFRealTimeClient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFRealTimeClient_RegisterThreads(This,dwTaskIndex,wszClass)	\
    ( (This)->lpVtbl -> RegisterThreads(This,dwTaskIndex,wszClass) ) 

#define IMFRealTimeClient_UnregisterThreads(This)	\
    ( (This)->lpVtbl -> UnregisterThreads(This) ) 

#define IMFRealTimeClient_SetWorkQueue(This,dwWorkQueueId)	\
    ( (This)->lpVtbl -> SetWorkQueue(This,dwWorkQueueId) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFRealTimeClient_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0040 */
/* [local] */ 

typedef DWORD MFSequencerElementId;

#define	MFSEQUENCER_INVALID_ELEMENT_ID	( 0xffffffff )

typedef 
enum _MFSequencerTopologyFlags
    {	SequencerTopologyFlags_Last	= 0x1
    } 	MFSequencerTopologyFlags;



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0040_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0040_v0_0_s_ifspec;

#ifndef __IMFSequencerSource_INTERFACE_DEFINED__
#define __IMFSequencerSource_INTERFACE_DEFINED__

/* interface IMFSequencerSource */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFSequencerSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("197CD219-19CB-4de1-A64C-ACF2EDCBE59E")
    IMFSequencerSource : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AppendTopology( 
            /* [in] */ IMFTopology *pTopology,
            /* [in] */ DWORD dwFlags,
            /* [annotation][out] */ 
            __out  MFSequencerElementId *pdwId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteTopology( 
            /* [in] */ MFSequencerElementId dwId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPresentationContext( 
            /* [in] */ IMFPresentationDescriptor *pPD,
            /* [annotation][optional][out] */ 
            __out_opt  MFSequencerElementId *pId,
            /* [annotation][optional][out] */ 
            __out_opt  IMFTopology **ppTopology) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateTopology( 
            /* [in] */ MFSequencerElementId dwId,
            /* [in] */ IMFTopology *pTopology) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateTopologyFlags( 
            /* [in] */ MFSequencerElementId dwId,
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSequencerSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFSequencerSource * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFSequencerSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFSequencerSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *AppendTopology )( 
            IMFSequencerSource * This,
            /* [in] */ IMFTopology *pTopology,
            /* [in] */ DWORD dwFlags,
            /* [annotation][out] */ 
            __out  MFSequencerElementId *pdwId);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteTopology )( 
            IMFSequencerSource * This,
            /* [in] */ MFSequencerElementId dwId);
        
        HRESULT ( STDMETHODCALLTYPE *GetPresentationContext )( 
            IMFSequencerSource * This,
            /* [in] */ IMFPresentationDescriptor *pPD,
            /* [annotation][optional][out] */ 
            __out_opt  MFSequencerElementId *pId,
            /* [annotation][optional][out] */ 
            __out_opt  IMFTopology **ppTopology);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateTopology )( 
            IMFSequencerSource * This,
            /* [in] */ MFSequencerElementId dwId,
            /* [in] */ IMFTopology *pTopology);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateTopologyFlags )( 
            IMFSequencerSource * This,
            /* [in] */ MFSequencerElementId dwId,
            /* [in] */ DWORD dwFlags);
        
        END_INTERFACE
    } IMFSequencerSourceVtbl;

    interface IMFSequencerSource
    {
        CONST_VTBL struct IMFSequencerSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSequencerSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSequencerSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSequencerSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSequencerSource_AppendTopology(This,pTopology,dwFlags,pdwId)	\
    ( (This)->lpVtbl -> AppendTopology(This,pTopology,dwFlags,pdwId) ) 

#define IMFSequencerSource_DeleteTopology(This,dwId)	\
    ( (This)->lpVtbl -> DeleteTopology(This,dwId) ) 

#define IMFSequencerSource_GetPresentationContext(This,pPD,pId,ppTopology)	\
    ( (This)->lpVtbl -> GetPresentationContext(This,pPD,pId,ppTopology) ) 

#define IMFSequencerSource_UpdateTopology(This,dwId,pTopology)	\
    ( (This)->lpVtbl -> UpdateTopology(This,dwId,pTopology) ) 

#define IMFSequencerSource_UpdateTopologyFlags(This,dwId,dwFlags)	\
    ( (This)->lpVtbl -> UpdateTopologyFlags(This,dwId,dwFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSequencerSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0041 */
/* [local] */ 

EXTERN_GUID( MF_TIME_FORMAT_SEGMENT_OFFSET, 0xc8b8be77, 0x869c, 0x431d, 0x81, 0x2e, 0x16, 0x96, 0x93, 0xf6, 0x5a, 0x39 );
STDAPI MFCreateSequencerSource(
    IUnknown *pReserved,
    __out IMFSequencerSource **ppSequencerSource
    );
STDAPI MFCreateSequencerSegmentOffset(
    MFSequencerElementId dwId,
    MFTIME hnsOffset,
    __out PROPVARIANT *pvarSegmentOffset
    );
#if (WINVER >= _WIN32_WINNT_WIN7) 
STDAPI MFCreateAggregateSource(
    __in IMFCollection *pSourceCollection,
    __deref_out IMFMediaSource **ppAggSource
    );
#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0041_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0041_v0_0_s_ifspec;

#ifndef __IMFMediaSourceTopologyProvider_INTERFACE_DEFINED__
#define __IMFMediaSourceTopologyProvider_INTERFACE_DEFINED__

/* interface IMFMediaSourceTopologyProvider */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFMediaSourceTopologyProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E1D6009-C9F3-442d-8C51-A42D2D49452F")
    IMFMediaSourceTopologyProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMediaSourceTopology( 
            /* [in] */ __RPC__in_opt IMFPresentationDescriptor *pPresentationDescriptor,
            /* [out] */ __RPC__deref_out_opt IMFTopology **ppTopology) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMediaSourceTopologyProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFMediaSourceTopologyProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFMediaSourceTopologyProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFMediaSourceTopologyProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaSourceTopology )( 
            __RPC__in IMFMediaSourceTopologyProvider * This,
            /* [in] */ __RPC__in_opt IMFPresentationDescriptor *pPresentationDescriptor,
            /* [out] */ __RPC__deref_out_opt IMFTopology **ppTopology);
        
        END_INTERFACE
    } IMFMediaSourceTopologyProviderVtbl;

    interface IMFMediaSourceTopologyProvider
    {
        CONST_VTBL struct IMFMediaSourceTopologyProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMediaSourceTopologyProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMediaSourceTopologyProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMediaSourceTopologyProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMediaSourceTopologyProvider_GetMediaSourceTopology(This,pPresentationDescriptor,ppTopology)	\
    ( (This)->lpVtbl -> GetMediaSourceTopology(This,pPresentationDescriptor,ppTopology) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFMediaSourceTopologyProvider_INTERFACE_DEFINED__ */


#ifndef __IMFMediaSourcePresentationProvider_INTERFACE_DEFINED__
#define __IMFMediaSourcePresentationProvider_INTERFACE_DEFINED__

/* interface IMFMediaSourcePresentationProvider */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFMediaSourcePresentationProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E1D600a-C9F3-442d-8C51-A42D2D49452F")
    IMFMediaSourcePresentationProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ForceEndOfPresentation( 
            /* [in] */ __RPC__in_opt IMFPresentationDescriptor *pPresentationDescriptor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMediaSourcePresentationProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFMediaSourcePresentationProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFMediaSourcePresentationProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFMediaSourcePresentationProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *ForceEndOfPresentation )( 
            __RPC__in IMFMediaSourcePresentationProvider * This,
            /* [in] */ __RPC__in_opt IMFPresentationDescriptor *pPresentationDescriptor);
        
        END_INTERFACE
    } IMFMediaSourcePresentationProviderVtbl;

    interface IMFMediaSourcePresentationProvider
    {
        CONST_VTBL struct IMFMediaSourcePresentationProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMediaSourcePresentationProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMediaSourcePresentationProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMediaSourcePresentationProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMediaSourcePresentationProvider_ForceEndOfPresentation(This,pPresentationDescriptor)	\
    ( (This)->lpVtbl -> ForceEndOfPresentation(This,pPresentationDescriptor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFMediaSourcePresentationProvider_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0043 */
/* [local] */ 

EXTERN_GUID( MF_SOURCE_PRESENTATION_PROVIDER_SERVICE, 0xe002aadc, 0xf4af, 0x4ee5, 0x98, 0x47, 0x05, 0x3e, 0xdf, 0x84, 0x04, 0x26 );
typedef struct _MFTOPONODE_ATTRIBUTE_UPDATE
    {
    TOPOID NodeId;
    GUID guidAttributeKey;
    MF_ATTRIBUTE_TYPE attrType;
    union 
        {
        UINT32 u32;
        UINT64 u64;
        double d;
         /* Empty union arm */ 
        } 	;
    } 	MFTOPONODE_ATTRIBUTE_UPDATE;



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0043_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0043_v0_0_s_ifspec;

#ifndef __IMFTopologyNodeAttributeEditor_INTERFACE_DEFINED__
#define __IMFTopologyNodeAttributeEditor_INTERFACE_DEFINED__

/* interface IMFTopologyNodeAttributeEditor */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFTopologyNodeAttributeEditor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("676aa6dd-238a-410d-bb99-65668d01605a")
    IMFTopologyNodeAttributeEditor : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE UpdateNodeAttributes( 
            /* [in] */ TOPOID TopoId,
            /* [in] */ DWORD cUpdates,
            /* [size_is][in] */ __RPC__in_ecount_full(cUpdates) MFTOPONODE_ATTRIBUTE_UPDATE *pUpdates) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFTopologyNodeAttributeEditorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFTopologyNodeAttributeEditor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFTopologyNodeAttributeEditor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFTopologyNodeAttributeEditor * This);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateNodeAttributes )( 
            __RPC__in IMFTopologyNodeAttributeEditor * This,
            /* [in] */ TOPOID TopoId,
            /* [in] */ DWORD cUpdates,
            /* [size_is][in] */ __RPC__in_ecount_full(cUpdates) MFTOPONODE_ATTRIBUTE_UPDATE *pUpdates);
        
        END_INTERFACE
    } IMFTopologyNodeAttributeEditorVtbl;

    interface IMFTopologyNodeAttributeEditor
    {
        CONST_VTBL struct IMFTopologyNodeAttributeEditorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFTopologyNodeAttributeEditor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFTopologyNodeAttributeEditor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFTopologyNodeAttributeEditor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFTopologyNodeAttributeEditor_UpdateNodeAttributes(This,TopoId,cUpdates,pUpdates)	\
    ( (This)->lpVtbl -> UpdateNodeAttributes(This,TopoId,cUpdates,pUpdates) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFTopologyNodeAttributeEditor_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0044 */
/* [local] */ 

EXTERN_GUID( MF_TOPONODE_ATTRIBUTE_EDITOR_SERVICE, 0x65656e1a, 0x077f, 0x4472, 0x83, 0xef, 0x31, 0x6f, 0x11, 0xd5, 0x08, 0x7a );
typedef /* [public] */ struct _MF_LEAKY_BUCKET_PAIR
    {
    DWORD dwBitrate;
    DWORD msBufferWindow;
    } 	MF_LEAKY_BUCKET_PAIR;

typedef /* [public] */ struct _MFBYTESTREAM_BUFFERING_PARAMS
    {
    QWORD cbTotalFileSize;
    QWORD cbPlayableDataSize;
    MF_LEAKY_BUCKET_PAIR *prgBuckets;
    DWORD cBuckets;
    QWORD qwNetBufferingTime;
    QWORD qwExtraBufferingTimeDuringSeek;
    QWORD qwPlayDuration;
    float dRate;
    } 	MFBYTESTREAM_BUFFERING_PARAMS;



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0044_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0044_v0_0_s_ifspec;

#ifndef __IMFByteStreamBuffering_INTERFACE_DEFINED__
#define __IMFByteStreamBuffering_INTERFACE_DEFINED__

/* interface IMFByteStreamBuffering */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFByteStreamBuffering;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6d66d782-1d4f-4db7-8c63-cb8c77f1ef5e")
    IMFByteStreamBuffering : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetBufferingParams( 
            /* [annotation][in] */ 
            __in  MFBYTESTREAM_BUFFERING_PARAMS *pParams) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnableBuffering( 
            /* [in] */ BOOL fEnable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StopBuffering( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFByteStreamBufferingVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFByteStreamBuffering * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFByteStreamBuffering * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFByteStreamBuffering * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetBufferingParams )( 
            IMFByteStreamBuffering * This,
            /* [annotation][in] */ 
            __in  MFBYTESTREAM_BUFFERING_PARAMS *pParams);
        
        HRESULT ( STDMETHODCALLTYPE *EnableBuffering )( 
            IMFByteStreamBuffering * This,
            /* [in] */ BOOL fEnable);
        
        HRESULT ( STDMETHODCALLTYPE *StopBuffering )( 
            IMFByteStreamBuffering * This);
        
        END_INTERFACE
    } IMFByteStreamBufferingVtbl;

    interface IMFByteStreamBuffering
    {
        CONST_VTBL struct IMFByteStreamBufferingVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFByteStreamBuffering_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFByteStreamBuffering_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFByteStreamBuffering_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFByteStreamBuffering_SetBufferingParams(This,pParams)	\
    ( (This)->lpVtbl -> SetBufferingParams(This,pParams) ) 

#define IMFByteStreamBuffering_EnableBuffering(This,fEnable)	\
    ( (This)->lpVtbl -> EnableBuffering(This,fEnable) ) 

#define IMFByteStreamBuffering_StopBuffering(This)	\
    ( (This)->lpVtbl -> StopBuffering(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFByteStreamBuffering_INTERFACE_DEFINED__ */


#ifndef __IMFByteStreamCacheControl_INTERFACE_DEFINED__
#define __IMFByteStreamCacheControl_INTERFACE_DEFINED__

/* interface IMFByteStreamCacheControl */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFByteStreamCacheControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5042EA4-7A96-4a75-AA7B-2BE1EF7F88D5")
    IMFByteStreamCacheControl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE StopBackgroundTransfer( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFByteStreamCacheControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFByteStreamCacheControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFByteStreamCacheControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFByteStreamCacheControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *StopBackgroundTransfer )( 
            IMFByteStreamCacheControl * This);
        
        END_INTERFACE
    } IMFByteStreamCacheControlVtbl;

    interface IMFByteStreamCacheControl
    {
        CONST_VTBL struct IMFByteStreamCacheControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFByteStreamCacheControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFByteStreamCacheControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFByteStreamCacheControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFByteStreamCacheControl_StopBackgroundTransfer(This)	\
    ( (This)->lpVtbl -> StopBackgroundTransfer(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFByteStreamCacheControl_INTERFACE_DEFINED__ */


#ifndef __IMFNetCredential_INTERFACE_DEFINED__
#define __IMFNetCredential_INTERFACE_DEFINED__

/* interface IMFNetCredential */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFNetCredential;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5b87ef6a-7ed8-434f-ba0e-184fac1628d1")
    IMFNetCredential : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetUser( 
            /* [annotation][size_is][in] */ 
            __in_bcount(cbData)  BYTE *pbData,
            /* [in] */ DWORD cbData,
            /* [in] */ BOOL fDataIsEncrypted) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPassword( 
            /* [annotation][size_is][in] */ 
            __in_bcount(cbData)  BYTE *pbData,
            /* [in] */ DWORD cbData,
            /* [in] */ BOOL fDataIsEncrypted) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUser( 
            /* [annotation][size_is][out] */ 
            __out_ecount_part_opt(*pcbData,*pcbData)  BYTE *pbData,
            /* [annotation][out][in] */ 
            __inout  DWORD *pcbData,
            /* [in] */ BOOL fEncryptData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPassword( 
            /* [annotation][size_is][out] */ 
            __out_ecount_part_opt(*pcbData,*pcbData)  BYTE *pbData,
            /* [annotation][out][in] */ 
            __inout  DWORD *pcbData,
            /* [in] */ BOOL fEncryptData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LoggedOnUser( 
            /* [annotation][out] */ 
            __out  BOOL *pfLoggedOnUser) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFNetCredentialVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFNetCredential * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFNetCredential * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFNetCredential * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUser )( 
            IMFNetCredential * This,
            /* [annotation][size_is][in] */ 
            __in_bcount(cbData)  BYTE *pbData,
            /* [in] */ DWORD cbData,
            /* [in] */ BOOL fDataIsEncrypted);
        
        HRESULT ( STDMETHODCALLTYPE *SetPassword )( 
            IMFNetCredential * This,
            /* [annotation][size_is][in] */ 
            __in_bcount(cbData)  BYTE *pbData,
            /* [in] */ DWORD cbData,
            /* [in] */ BOOL fDataIsEncrypted);
        
        HRESULT ( STDMETHODCALLTYPE *GetUser )( 
            IMFNetCredential * This,
            /* [annotation][size_is][out] */ 
            __out_ecount_part_opt(*pcbData,*pcbData)  BYTE *pbData,
            /* [annotation][out][in] */ 
            __inout  DWORD *pcbData,
            /* [in] */ BOOL fEncryptData);
        
        HRESULT ( STDMETHODCALLTYPE *GetPassword )( 
            IMFNetCredential * This,
            /* [annotation][size_is][out] */ 
            __out_ecount_part_opt(*pcbData,*pcbData)  BYTE *pbData,
            /* [annotation][out][in] */ 
            __inout  DWORD *pcbData,
            /* [in] */ BOOL fEncryptData);
        
        HRESULT ( STDMETHODCALLTYPE *LoggedOnUser )( 
            IMFNetCredential * This,
            /* [annotation][out] */ 
            __out  BOOL *pfLoggedOnUser);
        
        END_INTERFACE
    } IMFNetCredentialVtbl;

    interface IMFNetCredential
    {
        CONST_VTBL struct IMFNetCredentialVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFNetCredential_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFNetCredential_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFNetCredential_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFNetCredential_SetUser(This,pbData,cbData,fDataIsEncrypted)	\
    ( (This)->lpVtbl -> SetUser(This,pbData,cbData,fDataIsEncrypted) ) 

#define IMFNetCredential_SetPassword(This,pbData,cbData,fDataIsEncrypted)	\
    ( (This)->lpVtbl -> SetPassword(This,pbData,cbData,fDataIsEncrypted) ) 

#define IMFNetCredential_GetUser(This,pbData,pcbData,fEncryptData)	\
    ( (This)->lpVtbl -> GetUser(This,pbData,pcbData,fEncryptData) ) 

#define IMFNetCredential_GetPassword(This,pbData,pcbData,fEncryptData)	\
    ( (This)->lpVtbl -> GetPassword(This,pbData,pcbData,fEncryptData) ) 

#define IMFNetCredential_LoggedOnUser(This,pfLoggedOnUser)	\
    ( (This)->lpVtbl -> LoggedOnUser(This,pfLoggedOnUser) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFNetCredential_INTERFACE_DEFINED__ */


#ifndef __IMFNetCredentialManager_INTERFACE_DEFINED__
#define __IMFNetCredentialManager_INTERFACE_DEFINED__

/* interface IMFNetCredentialManager */
/* [local][uuid][object] */ 

typedef struct _MFNetCredentialManagerGetParam
    {
    HRESULT hrOp;
    BOOL fAllowLoggedOnUser;
    BOOL fClearTextPackage;
    LPCWSTR pszUrl;
    LPCWSTR pszSite;
    LPCWSTR pszRealm;
    LPCWSTR pszPackage;
    LONG nRetries;
    } 	MFNetCredentialManagerGetParam;


EXTERN_C const IID IID_IMFNetCredentialManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5b87ef6b-7ed8-434f-ba0e-184fac1628d1")
    IMFNetCredentialManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BeginGetCredentials( 
            /* [in] */ MFNetCredentialManagerGetParam *pParam,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *pState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndGetCredentials( 
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  IMFNetCredential **ppCred) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetGood( 
            /* [in] */ IMFNetCredential *pCred,
            /* [in] */ BOOL fGood) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFNetCredentialManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFNetCredentialManager * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFNetCredentialManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFNetCredentialManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *BeginGetCredentials )( 
            IMFNetCredentialManager * This,
            /* [in] */ MFNetCredentialManagerGetParam *pParam,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *pState);
        
        HRESULT ( STDMETHODCALLTYPE *EndGetCredentials )( 
            IMFNetCredentialManager * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  IMFNetCredential **ppCred);
        
        HRESULT ( STDMETHODCALLTYPE *SetGood )( 
            IMFNetCredentialManager * This,
            /* [in] */ IMFNetCredential *pCred,
            /* [in] */ BOOL fGood);
        
        END_INTERFACE
    } IMFNetCredentialManagerVtbl;

    interface IMFNetCredentialManager
    {
        CONST_VTBL struct IMFNetCredentialManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFNetCredentialManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFNetCredentialManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFNetCredentialManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFNetCredentialManager_BeginGetCredentials(This,pParam,pCallback,pState)	\
    ( (This)->lpVtbl -> BeginGetCredentials(This,pParam,pCallback,pState) ) 

#define IMFNetCredentialManager_EndGetCredentials(This,pResult,ppCred)	\
    ( (This)->lpVtbl -> EndGetCredentials(This,pResult,ppCred) ) 

#define IMFNetCredentialManager_SetGood(This,pCred,fGood)	\
    ( (This)->lpVtbl -> SetGood(This,pCred,fGood) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFNetCredentialManager_INTERFACE_DEFINED__ */


#ifndef __IMFNetCredentialCache_INTERFACE_DEFINED__
#define __IMFNetCredentialCache_INTERFACE_DEFINED__

/* interface IMFNetCredentialCache */
/* [local][uuid][object] */ 

typedef 
enum _MFNetCredentialRequirements
    {	REQUIRE_PROMPT	= 0x1,
	REQUIRE_SAVE_SELECTED	= 0x2
    } 	MFNetCredentialRequirements;

typedef 
enum _MFNetCredentialOptions
    {	MFNET_CREDENTIAL_SAVE	= 0x1,
	MFNET_CREDENTIAL_DONT_CACHE	= 0x2,
	MFNET_CREDENTIAL_ALLOW_CLEAR_TEXT	= 0x4
    } 	MFNetCredentialOptions;

typedef 
enum _MFNetAuthenticationFlags
    {	MFNET_AUTHENTICATION_PROXY	= 0x1,
	MFNET_AUTHENTICATION_CLEAR_TEXT	= 0x2,
	MFNET_AUTHENTICATION_LOGGED_ON_USER	= 0x4
    } 	MFNetAuthenticationFlags;


EXTERN_C const IID IID_IMFNetCredentialCache;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5b87ef6c-7ed8-434f-ba0e-184fac1628d1")
    IMFNetCredentialCache : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCredential( 
            /* [in] */ LPCWSTR pszUrl,
            /* [in] */ LPCWSTR pszRealm,
            /* [in] */ DWORD dwAuthenticationFlags,
            /* [annotation][out] */ 
            __out  IMFNetCredential **ppCred,
            /* [annotation][out] */ 
            __out  DWORD *pdwRequirementsFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetGood( 
            /* [in] */ IMFNetCredential *pCred,
            /* [in] */ BOOL fGood) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetUserOptions( 
            /* [in] */ IMFNetCredential *pCred,
            /* [in] */ DWORD dwOptionsFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFNetCredentialCacheVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFNetCredentialCache * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFNetCredentialCache * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFNetCredentialCache * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCredential )( 
            IMFNetCredentialCache * This,
            /* [in] */ LPCWSTR pszUrl,
            /* [in] */ LPCWSTR pszRealm,
            /* [in] */ DWORD dwAuthenticationFlags,
            /* [annotation][out] */ 
            __out  IMFNetCredential **ppCred,
            /* [annotation][out] */ 
            __out  DWORD *pdwRequirementsFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetGood )( 
            IMFNetCredentialCache * This,
            /* [in] */ IMFNetCredential *pCred,
            /* [in] */ BOOL fGood);
        
        HRESULT ( STDMETHODCALLTYPE *SetUserOptions )( 
            IMFNetCredentialCache * This,
            /* [in] */ IMFNetCredential *pCred,
            /* [in] */ DWORD dwOptionsFlags);
        
        END_INTERFACE
    } IMFNetCredentialCacheVtbl;

    interface IMFNetCredentialCache
    {
        CONST_VTBL struct IMFNetCredentialCacheVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFNetCredentialCache_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFNetCredentialCache_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFNetCredentialCache_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFNetCredentialCache_GetCredential(This,pszUrl,pszRealm,dwAuthenticationFlags,ppCred,pdwRequirementsFlags)	\
    ( (This)->lpVtbl -> GetCredential(This,pszUrl,pszRealm,dwAuthenticationFlags,ppCred,pdwRequirementsFlags) ) 

#define IMFNetCredentialCache_SetGood(This,pCred,fGood)	\
    ( (This)->lpVtbl -> SetGood(This,pCred,fGood) ) 

#define IMFNetCredentialCache_SetUserOptions(This,pCred,dwOptionsFlags)	\
    ( (This)->lpVtbl -> SetUserOptions(This,pCred,dwOptionsFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFNetCredentialCache_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0049 */
/* [local] */ 

STDAPI 
MFCreateCredentialCache(
    __out IMFNetCredentialCache ** ppCache);
#if (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0049_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0049_v0_0_s_ifspec;

#ifndef __IMFSSLCertificateManager_INTERFACE_DEFINED__
#define __IMFSSLCertificateManager_INTERFACE_DEFINED__

/* interface IMFSSLCertificateManager */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFSSLCertificateManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("61f7d887-1230-4a8b-aeba-8ad434d1a64d")
    IMFSSLCertificateManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetClientCertificate( 
            /* [in] */ LPCWSTR pszURL,
            /* [annotation][size_is][size_is][out] */ 
            __deref_out_bcount(*pcbData)  BYTE **ppbData,
            /* [annotation][out] */ 
            __out  DWORD *pcbData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BeginGetClientCertificate( 
            /* [in] */ LPCWSTR pszURL,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *pState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndGetClientCertificate( 
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][size_is][size_is][out] */ 
            __deref_out_bcount(*pcbData)  BYTE **ppbData,
            /* [annotation][out] */ 
            __out  DWORD *pcbData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCertificatePolicy( 
            /* [in] */ LPCWSTR pszURL,
            /* [out] */ BOOL *pfOverrideAutomaticCheck,
            /* [out] */ BOOL *pfClientCertificateAvailable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnServerCertificate( 
            /* [in] */ LPCWSTR pszURL,
            /* [annotation][size_is][in] */ 
            __in_bcount(cbData)  BYTE *pbData,
            /* [in] */ DWORD cbData,
            /* [out] */ BOOL *pfIsGood) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSSLCertificateManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFSSLCertificateManager * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFSSLCertificateManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFSSLCertificateManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetClientCertificate )( 
            IMFSSLCertificateManager * This,
            /* [in] */ LPCWSTR pszURL,
            /* [annotation][size_is][size_is][out] */ 
            __deref_out_bcount(*pcbData)  BYTE **ppbData,
            /* [annotation][out] */ 
            __out  DWORD *pcbData);
        
        HRESULT ( STDMETHODCALLTYPE *BeginGetClientCertificate )( 
            IMFSSLCertificateManager * This,
            /* [in] */ LPCWSTR pszURL,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *pState);
        
        HRESULT ( STDMETHODCALLTYPE *EndGetClientCertificate )( 
            IMFSSLCertificateManager * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][size_is][size_is][out] */ 
            __deref_out_bcount(*pcbData)  BYTE **ppbData,
            /* [annotation][out] */ 
            __out  DWORD *pcbData);
        
        HRESULT ( STDMETHODCALLTYPE *GetCertificatePolicy )( 
            IMFSSLCertificateManager * This,
            /* [in] */ LPCWSTR pszURL,
            /* [out] */ BOOL *pfOverrideAutomaticCheck,
            /* [out] */ BOOL *pfClientCertificateAvailable);
        
        HRESULT ( STDMETHODCALLTYPE *OnServerCertificate )( 
            IMFSSLCertificateManager * This,
            /* [in] */ LPCWSTR pszURL,
            /* [annotation][size_is][in] */ 
            __in_bcount(cbData)  BYTE *pbData,
            /* [in] */ DWORD cbData,
            /* [out] */ BOOL *pfIsGood);
        
        END_INTERFACE
    } IMFSSLCertificateManagerVtbl;

    interface IMFSSLCertificateManager
    {
        CONST_VTBL struct IMFSSLCertificateManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSSLCertificateManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSSLCertificateManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSSLCertificateManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSSLCertificateManager_GetClientCertificate(This,pszURL,ppbData,pcbData)	\
    ( (This)->lpVtbl -> GetClientCertificate(This,pszURL,ppbData,pcbData) ) 

#define IMFSSLCertificateManager_BeginGetClientCertificate(This,pszURL,pCallback,pState)	\
    ( (This)->lpVtbl -> BeginGetClientCertificate(This,pszURL,pCallback,pState) ) 

#define IMFSSLCertificateManager_EndGetClientCertificate(This,pResult,ppbData,pcbData)	\
    ( (This)->lpVtbl -> EndGetClientCertificate(This,pResult,ppbData,pcbData) ) 

#define IMFSSLCertificateManager_GetCertificatePolicy(This,pszURL,pfOverrideAutomaticCheck,pfClientCertificateAvailable)	\
    ( (This)->lpVtbl -> GetCertificatePolicy(This,pszURL,pfOverrideAutomaticCheck,pfClientCertificateAvailable) ) 

#define IMFSSLCertificateManager_OnServerCertificate(This,pszURL,pbData,cbData,pfIsGood)	\
    ( (This)->lpVtbl -> OnServerCertificate(This,pszURL,pbData,cbData,pfIsGood) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSSLCertificateManager_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0050 */
/* [local] */ 

EXTERN_GUID( MFNETSOURCE_SSLCERTIFICATE_MANAGER, 0x55e6cb27, 0xe69b, 0x4267, 0x94, 0x0c, 0x2d, 0x7e, 0xc5, 0xbb, 0x8a, 0x0f );
#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0050_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0050_v0_0_s_ifspec;

#ifndef __IMFSourceOpenMonitor_INTERFACE_DEFINED__
#define __IMFSourceOpenMonitor_INTERFACE_DEFINED__

/* interface IMFSourceOpenMonitor */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFSourceOpenMonitor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("059054B3-027C-494C-A27D-9113291CF87F")
    IMFSourceOpenMonitor : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnSourceEvent( 
            /* [in] */ __RPC__in_opt IMFMediaEvent *pEvent) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSourceOpenMonitorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFSourceOpenMonitor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFSourceOpenMonitor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFSourceOpenMonitor * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnSourceEvent )( 
            __RPC__in IMFSourceOpenMonitor * This,
            /* [in] */ __RPC__in_opt IMFMediaEvent *pEvent);
        
        END_INTERFACE
    } IMFSourceOpenMonitorVtbl;

    interface IMFSourceOpenMonitor
    {
        CONST_VTBL struct IMFSourceOpenMonitorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSourceOpenMonitor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSourceOpenMonitor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSourceOpenMonitor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSourceOpenMonitor_OnSourceEvent(This,pEvent)	\
    ( (This)->lpVtbl -> OnSourceEvent(This,pEvent) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSourceOpenMonitor_INTERFACE_DEFINED__ */


#ifndef __IMFNetProxyLocator_INTERFACE_DEFINED__
#define __IMFNetProxyLocator_INTERFACE_DEFINED__

/* interface IMFNetProxyLocator */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFNetProxyLocator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e9cd0383-a268-4bb4-82de-658d53574d41")
    IMFNetProxyLocator : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE FindFirstProxy( 
            /* [in] */ LPCWSTR pszHost,
            /* [in] */ LPCWSTR pszUrl,
            /* [in] */ BOOL fReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FindNextProxy( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterProxyResult( 
            /* [in] */ HRESULT hrOp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentProxy( 
            /* [annotation][size_is][out] */ 
            __out_ecount_opt(*pcchStr)  LPWSTR pszStr,
            /* [out][in] */ DWORD *pcchStr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IMFNetProxyLocator **ppProxyLocator) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFNetProxyLocatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFNetProxyLocator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFNetProxyLocator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFNetProxyLocator * This);
        
        HRESULT ( STDMETHODCALLTYPE *FindFirstProxy )( 
            IMFNetProxyLocator * This,
            /* [in] */ LPCWSTR pszHost,
            /* [in] */ LPCWSTR pszUrl,
            /* [in] */ BOOL fReserved);
        
        HRESULT ( STDMETHODCALLTYPE *FindNextProxy )( 
            IMFNetProxyLocator * This);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterProxyResult )( 
            IMFNetProxyLocator * This,
            /* [in] */ HRESULT hrOp);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentProxy )( 
            IMFNetProxyLocator * This,
            /* [annotation][size_is][out] */ 
            __out_ecount_opt(*pcchStr)  LPWSTR pszStr,
            /* [out][in] */ DWORD *pcchStr);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IMFNetProxyLocator * This,
            /* [out] */ IMFNetProxyLocator **ppProxyLocator);
        
        END_INTERFACE
    } IMFNetProxyLocatorVtbl;

    interface IMFNetProxyLocator
    {
        CONST_VTBL struct IMFNetProxyLocatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFNetProxyLocator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFNetProxyLocator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFNetProxyLocator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFNetProxyLocator_FindFirstProxy(This,pszHost,pszUrl,fReserved)	\
    ( (This)->lpVtbl -> FindFirstProxy(This,pszHost,pszUrl,fReserved) ) 

#define IMFNetProxyLocator_FindNextProxy(This)	\
    ( (This)->lpVtbl -> FindNextProxy(This) ) 

#define IMFNetProxyLocator_RegisterProxyResult(This,hrOp)	\
    ( (This)->lpVtbl -> RegisterProxyResult(This,hrOp) ) 

#define IMFNetProxyLocator_GetCurrentProxy(This,pszStr,pcchStr)	\
    ( (This)->lpVtbl -> GetCurrentProxy(This,pszStr,pcchStr) ) 

#define IMFNetProxyLocator_Clone(This,ppProxyLocator)	\
    ( (This)->lpVtbl -> Clone(This,ppProxyLocator) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFNetProxyLocator_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0052 */
/* [local] */ 

STDAPI MFCreateProxyLocator(
    LPCWSTR pszProtocol,
    IPropertyStore* pProxyConfig, 
    __out IMFNetProxyLocator** ppProxyLocator );


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0052_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0052_v0_0_s_ifspec;

#ifndef __IMFNetProxyLocatorFactory_INTERFACE_DEFINED__
#define __IMFNetProxyLocatorFactory_INTERFACE_DEFINED__

/* interface IMFNetProxyLocatorFactory */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFNetProxyLocatorFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e9cd0384-a268-4bb4-82de-658d53574d41")
    IMFNetProxyLocatorFactory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateProxyLocator( 
            /* [in] */ LPCWSTR pszProtocol,
            /* [annotation][out] */ 
            __out  IMFNetProxyLocator **ppProxyLocator) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFNetProxyLocatorFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFNetProxyLocatorFactory * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFNetProxyLocatorFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFNetProxyLocatorFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateProxyLocator )( 
            IMFNetProxyLocatorFactory * This,
            /* [in] */ LPCWSTR pszProtocol,
            /* [annotation][out] */ 
            __out  IMFNetProxyLocator **ppProxyLocator);
        
        END_INTERFACE
    } IMFNetProxyLocatorFactoryVtbl;

    interface IMFNetProxyLocatorFactory
    {
        CONST_VTBL struct IMFNetProxyLocatorFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFNetProxyLocatorFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFNetProxyLocatorFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFNetProxyLocatorFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFNetProxyLocatorFactory_CreateProxyLocator(This,pszProtocol,ppProxyLocator)	\
    ( (This)->lpVtbl -> CreateProxyLocator(This,pszProtocol,ppProxyLocator) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFNetProxyLocatorFactory_INTERFACE_DEFINED__ */


#ifndef __IMFSaveJob_INTERFACE_DEFINED__
#define __IMFSaveJob_INTERFACE_DEFINED__

/* interface IMFSaveJob */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFSaveJob;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e9931663-80bf-4c6e-98af-5dcf58747d1f")
    IMFSaveJob : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BeginSave( 
            /* [in] */ IMFByteStream *pStream,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *pState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndSave( 
            /* [in] */ IMFAsyncResult *pResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CancelSave( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProgress( 
            /* [annotation][out] */ 
            __out  DWORD *pdwPercentComplete) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSaveJobVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFSaveJob * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFSaveJob * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFSaveJob * This);
        
        HRESULT ( STDMETHODCALLTYPE *BeginSave )( 
            IMFSaveJob * This,
            /* [in] */ IMFByteStream *pStream,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *pState);
        
        HRESULT ( STDMETHODCALLTYPE *EndSave )( 
            IMFSaveJob * This,
            /* [in] */ IMFAsyncResult *pResult);
        
        HRESULT ( STDMETHODCALLTYPE *CancelSave )( 
            IMFSaveJob * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetProgress )( 
            IMFSaveJob * This,
            /* [annotation][out] */ 
            __out  DWORD *pdwPercentComplete);
        
        END_INTERFACE
    } IMFSaveJobVtbl;

    interface IMFSaveJob
    {
        CONST_VTBL struct IMFSaveJobVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSaveJob_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSaveJob_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSaveJob_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSaveJob_BeginSave(This,pStream,pCallback,pState)	\
    ( (This)->lpVtbl -> BeginSave(This,pStream,pCallback,pState) ) 

#define IMFSaveJob_EndSave(This,pResult)	\
    ( (This)->lpVtbl -> EndSave(This,pResult) ) 

#define IMFSaveJob_CancelSave(This)	\
    ( (This)->lpVtbl -> CancelSave(This) ) 

#define IMFSaveJob_GetProgress(This,pdwPercentComplete)	\
    ( (This)->lpVtbl -> GetProgress(This,pdwPercentComplete) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSaveJob_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0054 */
/* [local] */ 

EXTERN_GUID( MFNET_SAVEJOB_SERVICE, 0xb85a587f, 0x3d02, 0x4e52, 0x95, 0x65, 0x55, 0xd3, 0xec, 0x1e, 0x7f, 0xf7 );
typedef 
enum _MFNETSOURCE_PROTOCOL_TYPE
    {	MFNETSOURCE_UNDEFINED	= 0,
	MFNETSOURCE_HTTP	= 0x1,
	MFNETSOURCE_RTSP	= 0x2,
	MFNETSOURCE_FILE	= 0x3,
	MFNETSOURCE_MULTICAST	= 0x4
    } 	MFNETSOURCE_PROTOCOL_TYPE;



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0054_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0054_v0_0_s_ifspec;

#ifndef __IMFNetSchemeHandlerConfig_INTERFACE_DEFINED__
#define __IMFNetSchemeHandlerConfig_INTERFACE_DEFINED__

/* interface IMFNetSchemeHandlerConfig */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFNetSchemeHandlerConfig;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7BE19E73-C9BF-468a-AC5A-A5E8653BEC87")
    IMFNetSchemeHandlerConfig : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetNumberOfSupportedProtocols( 
            /* [annotation][out] */ 
            __out  ULONG *pcProtocols) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSupportedProtocolType( 
            /* [in] */ ULONG nProtocolIndex,
            /* [annotation][out] */ 
            __out  MFNETSOURCE_PROTOCOL_TYPE *pnProtocolType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ResetProtocolRolloverSettings( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFNetSchemeHandlerConfigVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFNetSchemeHandlerConfig * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFNetSchemeHandlerConfig * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFNetSchemeHandlerConfig * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberOfSupportedProtocols )( 
            IMFNetSchemeHandlerConfig * This,
            /* [annotation][out] */ 
            __out  ULONG *pcProtocols);
        
        HRESULT ( STDMETHODCALLTYPE *GetSupportedProtocolType )( 
            IMFNetSchemeHandlerConfig * This,
            /* [in] */ ULONG nProtocolIndex,
            /* [annotation][out] */ 
            __out  MFNETSOURCE_PROTOCOL_TYPE *pnProtocolType);
        
        HRESULT ( STDMETHODCALLTYPE *ResetProtocolRolloverSettings )( 
            IMFNetSchemeHandlerConfig * This);
        
        END_INTERFACE
    } IMFNetSchemeHandlerConfigVtbl;

    interface IMFNetSchemeHandlerConfig
    {
        CONST_VTBL struct IMFNetSchemeHandlerConfigVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFNetSchemeHandlerConfig_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFNetSchemeHandlerConfig_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFNetSchemeHandlerConfig_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFNetSchemeHandlerConfig_GetNumberOfSupportedProtocols(This,pcProtocols)	\
    ( (This)->lpVtbl -> GetNumberOfSupportedProtocols(This,pcProtocols) ) 

#define IMFNetSchemeHandlerConfig_GetSupportedProtocolType(This,nProtocolIndex,pnProtocolType)	\
    ( (This)->lpVtbl -> GetSupportedProtocolType(This,nProtocolIndex,pnProtocolType) ) 

#define IMFNetSchemeHandlerConfig_ResetProtocolRolloverSettings(This)	\
    ( (This)->lpVtbl -> ResetProtocolRolloverSettings(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFNetSchemeHandlerConfig_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0055 */
/* [local] */ 

STDAPI MFCreateNetSchemePlugin(
    REFIID riid, 
    LPVOID *ppvHandler );
typedef 
enum _MFNETSOURCE_TRANSPORT_TYPE
    {	MFNETSOURCE_UDP	= 0,
	MFNETSOURCE_TCP	= ( MFNETSOURCE_UDP + 1 ) 
    } 	MFNETSOURCE_TRANSPORT_TYPE;

typedef 
enum _MFNETSOURCE_CACHE_STATE
    {	MFNETSOURCE_CACHE_UNAVAILABLE	= 0,
	MFNETSOURCE_CACHE_ACTIVE_WRITING	= ( MFNETSOURCE_CACHE_UNAVAILABLE + 1 ) ,
	MFNETSOURCE_CACHE_ACTIVE_COMPLETE	= ( MFNETSOURCE_CACHE_ACTIVE_WRITING + 1 ) 
    } 	MFNETSOURCE_CACHE_STATE;

typedef 
enum _MFNETSOURCE_STATISTICS_IDS
    {	MFNETSOURCE_RECVPACKETS_ID	= 0,
	MFNETSOURCE_LOSTPACKETS_ID	= ( MFNETSOURCE_RECVPACKETS_ID + 1 ) ,
	MFNETSOURCE_RESENDSREQUESTED_ID	= ( MFNETSOURCE_LOSTPACKETS_ID + 1 ) ,
	MFNETSOURCE_RESENDSRECEIVED_ID	= ( MFNETSOURCE_RESENDSREQUESTED_ID + 1 ) ,
	MFNETSOURCE_RECOVEREDBYECCPACKETS_ID	= ( MFNETSOURCE_RESENDSRECEIVED_ID + 1 ) ,
	MFNETSOURCE_RECOVEREDBYRTXPACKETS_ID	= ( MFNETSOURCE_RECOVEREDBYECCPACKETS_ID + 1 ) ,
	MFNETSOURCE_OUTPACKETS_ID	= ( MFNETSOURCE_RECOVEREDBYRTXPACKETS_ID + 1 ) ,
	MFNETSOURCE_RECVRATE_ID	= ( MFNETSOURCE_OUTPACKETS_ID + 1 ) ,
	MFNETSOURCE_AVGBANDWIDTHBPS_ID	= ( MFNETSOURCE_RECVRATE_ID + 1 ) ,
	MFNETSOURCE_BYTESRECEIVED_ID	= ( MFNETSOURCE_AVGBANDWIDTHBPS_ID + 1 ) ,
	MFNETSOURCE_PROTOCOL_ID	= ( MFNETSOURCE_BYTESRECEIVED_ID + 1 ) ,
	MFNETSOURCE_TRANSPORT_ID	= ( MFNETSOURCE_PROTOCOL_ID + 1 ) ,
	MFNETSOURCE_CACHE_STATE_ID	= ( MFNETSOURCE_TRANSPORT_ID + 1 ) ,
	MFNETSOURCE_LINKBANDWIDTH_ID	= ( MFNETSOURCE_CACHE_STATE_ID + 1 ) ,
	MFNETSOURCE_CONTENTBITRATE_ID	= ( MFNETSOURCE_LINKBANDWIDTH_ID + 1 ) ,
	MFNETSOURCE_SPEEDFACTOR_ID	= ( MFNETSOURCE_CONTENTBITRATE_ID + 1 ) ,
	MFNETSOURCE_BUFFERSIZE_ID	= ( MFNETSOURCE_SPEEDFACTOR_ID + 1 ) ,
	MFNETSOURCE_BUFFERPROGRESS_ID	= ( MFNETSOURCE_BUFFERSIZE_ID + 1 ) ,
	MFNETSOURCE_LASTBWSWITCHTS_ID	= ( MFNETSOURCE_BUFFERPROGRESS_ID + 1 ) ,
	MFNETSOURCE_SEEKRANGESTART_ID	= ( MFNETSOURCE_LASTBWSWITCHTS_ID + 1 ) ,
	MFNETSOURCE_SEEKRANGEEND_ID	= ( MFNETSOURCE_SEEKRANGESTART_ID + 1 ) ,
	MFNETSOURCE_BUFFERINGCOUNT_ID	= ( MFNETSOURCE_SEEKRANGEEND_ID + 1 ) ,
	MFNETSOURCE_INCORRECTLYSIGNEDPACKETS_ID	= ( MFNETSOURCE_BUFFERINGCOUNT_ID + 1 ) ,
	MFNETSOURCE_SIGNEDSESSION_ID	= ( MFNETSOURCE_INCORRECTLYSIGNEDPACKETS_ID + 1 ) ,
	MFNETSOURCE_MAXBITRATE_ID	= ( MFNETSOURCE_SIGNEDSESSION_ID + 1 ) ,
	MFNETSOURCE_RECEPTION_QUALITY_ID	= ( MFNETSOURCE_MAXBITRATE_ID + 1 ) ,
	MFNETSOURCE_RECOVEREDPACKETS_ID	= ( MFNETSOURCE_RECEPTION_QUALITY_ID + 1 ) ,
	MFNETSOURCE_VBR_ID	= ( MFNETSOURCE_RECOVEREDPACKETS_ID + 1 ) ,
	MFNETSOURCE_DOWNLOADPROGRESS_ID	= ( MFNETSOURCE_VBR_ID + 1 ) ,
	MFNETSOURCE_UNPREDEFINEDPROTOCOLNAME_ID	= ( MFNETSOURCE_DOWNLOADPROGRESS_ID + 1 ) 
    } 	MFNETSOURCE_STATISTICS_IDS;

EXTERN_GUID( MFNETSOURCE_STATISTICS_SERVICE, 0x3cb1f275, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_STATISTICS, 0x3cb1f274, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_BUFFERINGTIME, 0x3cb1f276, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_ACCELERATEDSTREAMINGDURATION, 0x3cb1f277, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_MAXUDPACCELERATEDSTREAMINGDURATION, 0x4aab2879, 0xbbe1, 0x4994, 0x9f, 0xf0, 0x54, 0x95, 0xbd, 0x25, 0x1, 0x29 );
EXTERN_GUID( MFNETSOURCE_MAXBUFFERTIMEMS, 0x408b24e6, 0x4038, 0x4401, 0xb5, 0xb2, 0xfe, 0x70, 0x1a, 0x9e, 0xbf, 0x10 );
EXTERN_GUID( MFNETSOURCE_CONNECTIONBANDWIDTH, 0x3cb1f278, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_CACHEENABLED, 0x3cb1f279, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_AUTORECONNECTLIMIT, 0x3cb1f27a, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_RESENDSENABLED, 0x3cb1f27b, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_THINNINGENABLED, 0x3cb1f27c, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_PROTOCOL, 0x3cb1f27d, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_TRANSPORT, 0x3cb1f27e, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
#if (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_GUID( MFNETSOURCE_PREVIEWMODEENABLED, 0x3cb1f27f, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
#endif // (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_GUID( MFNETSOURCE_CREDENTIAL_MANAGER, 0x3cb1f280, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_PPBANDWIDTH, 0x3cb1f281, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_AUTORECONNECTPROGRESS, 0x3cb1f282, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_PROXYLOCATORFACTORY, 0x3cb1f283, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_BROWSERUSERAGENT, 0x3cb1f28b, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_BROWSERWEBPAGE, 0x3cb1f28c, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_PLAYERVERSION, 0x3cb1f28d, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_PLAYERID, 0x3cb1f28e, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_HOSTEXE, 0x3cb1f28f, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_HOSTVERSION, 0x3cb1f291, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_PLAYERUSERAGENT, 0x3cb1f292, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
#if (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_GUID( MFNETSOURCE_CLIENTGUID, 0x60a2c4a6, 0xf197, 0x4c14, 0xa5, 0xbf, 0x88, 0x83, 0xd, 0x24, 0x58, 0xaf );
#endif // (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_GUID( MFNETSOURCE_LOGURL, 0x3cb1f293, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_ENABLE_UDP, 0x3cb1f294, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_ENABLE_TCP, 0x3cb1f295, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_ENABLE_MSB, 0x3cb1f296, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_ENABLE_RTSP, 0x3cb1f298, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_ENABLE_HTTP, 0x3cb1f299, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_ENABLE_STREAMING, 0x3cb1f29c, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_ENABLE_DOWNLOAD, 0x3cb1f29d, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_UDP_PORT_RANGE, 0x3cb1f29a, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_PROXYINFO, 0x3cb1f29b, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_DRMNET_LICENSE_REPRESENTATION, 0x47eae1bd, 0xbdfe, 0x42e2, 0x82, 0xf3, 0x54, 0xa4, 0x8c, 0x17, 0x96, 0x2d );
EXTERN_GUID( MFNETSOURCE_PROXYSETTINGS, 0x3cb1f287, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_PROXYHOSTNAME, 0x3cb1f284, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_PROXYPORT, 0x3cb1f288, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_PROXYEXCEPTIONLIST, 0x3cb1f285, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_PROXYBYPASSFORLOCAL, 0x3cb1f286, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
EXTERN_GUID( MFNETSOURCE_PROXYRERUNAUTODETECTION, 0x3cb1f289, 0x0505, 0x4c5d, 0xae, 0x71, 0x0a, 0x55, 0x63, 0x44, 0xef, 0xa1 );
#if (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_GUID( MFNETSOURCE_STREAM_LANGUAGE, 0x9ab44318, 0xf7cd, 0x4f2d, 0x8d, 0x6d, 0xfa, 0x35, 0xb4, 0x92, 0xce, 0xcb );
EXTERN_GUID( MFNETSOURCE_LOGPARAMS, 0x64936ae8, 0x9418, 0x453a, 0x8c, 0xda, 0x3e, 0xa, 0x66, 0x8b, 0x35, 0x3b );
#endif // (WINVER >= _WIN32_WINNT_WIN7) 
typedef 
enum _MFNET_PROXYSETTINGS
    {	MFNET_PROXYSETTING_NONE	= 0,
	MFNET_PROXYSETTING_MANUAL	= 1,
	MFNET_PROXYSETTING_AUTO	= 2,
	MFNET_PROXYSETTING_BROWSER	= 3
    } 	MFNET_PROXYSETTINGS;



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0055_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0055_v0_0_s_ifspec;

#ifndef __IMFSchemeHandler_INTERFACE_DEFINED__
#define __IMFSchemeHandler_INTERFACE_DEFINED__

/* interface IMFSchemeHandler */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFSchemeHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6D4C7B74-52A0-4bb7-B0DB-55F29F47A668")
    IMFSchemeHandler : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BeginCreateObject( 
            /* [in] */ LPCWSTR pwszURL,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IPropertyStore *pProps,
            /* [annotation][out] */ 
            __out_opt  IUnknown **ppIUnknownCancelCookie,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndCreateObject( 
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  MF_OBJECT_TYPE *pObjectType,
            /* [annotation][out] */ 
            __out  IUnknown **ppObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CancelObjectCreation( 
            /* [in] */ IUnknown *pIUnknownCancelCookie) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSchemeHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFSchemeHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFSchemeHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFSchemeHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *BeginCreateObject )( 
            IMFSchemeHandler * This,
            /* [in] */ LPCWSTR pwszURL,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IPropertyStore *pProps,
            /* [annotation][out] */ 
            __out_opt  IUnknown **ppIUnknownCancelCookie,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        HRESULT ( STDMETHODCALLTYPE *EndCreateObject )( 
            IMFSchemeHandler * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  MF_OBJECT_TYPE *pObjectType,
            /* [annotation][out] */ 
            __out  IUnknown **ppObject);
        
        HRESULT ( STDMETHODCALLTYPE *CancelObjectCreation )( 
            IMFSchemeHandler * This,
            /* [in] */ IUnknown *pIUnknownCancelCookie);
        
        END_INTERFACE
    } IMFSchemeHandlerVtbl;

    interface IMFSchemeHandler
    {
        CONST_VTBL struct IMFSchemeHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSchemeHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSchemeHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSchemeHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSchemeHandler_BeginCreateObject(This,pwszURL,dwFlags,pProps,ppIUnknownCancelCookie,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginCreateObject(This,pwszURL,dwFlags,pProps,ppIUnknownCancelCookie,pCallback,punkState) ) 

#define IMFSchemeHandler_EndCreateObject(This,pResult,pObjectType,ppObject)	\
    ( (This)->lpVtbl -> EndCreateObject(This,pResult,pObjectType,ppObject) ) 

#define IMFSchemeHandler_CancelObjectCreation(This,pIUnknownCancelCookie)	\
    ( (This)->lpVtbl -> CancelObjectCreation(This,pIUnknownCancelCookie) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSchemeHandler_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0056 */
/* [local] */ 

#if (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_GUID(MF_BYTESTREAMHANDLER_ACCEPTS_SHARE_WRITE, 0xa6e1f733, 0x3001, 0x4915, 0x81, 0x50, 0x15, 0x58, 0xa2, 0x18, 0xe, 0xc8);
#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0056_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0056_v0_0_s_ifspec;

#ifndef __IMFByteStreamHandler_INTERFACE_DEFINED__
#define __IMFByteStreamHandler_INTERFACE_DEFINED__

/* interface IMFByteStreamHandler */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFByteStreamHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BB420AA4-765B-4a1f-91FE-D6A8A143924C")
    IMFByteStreamHandler : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BeginCreateObject( 
            /* [in] */ IMFByteStream *pByteStream,
            /* [in] */ LPCWSTR pwszURL,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IPropertyStore *pProps,
            /* [annotation][out] */ 
            __out_opt  IUnknown **ppIUnknownCancelCookie,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndCreateObject( 
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  MF_OBJECT_TYPE *pObjectType,
            /* [annotation][out] */ 
            __out  IUnknown **ppObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CancelObjectCreation( 
            /* [in] */ IUnknown *pIUnknownCancelCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMaxNumberOfBytesRequiredForResolution( 
            /* [annotation][out] */ 
            __out  QWORD *pqwBytes) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFByteStreamHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFByteStreamHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFByteStreamHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFByteStreamHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *BeginCreateObject )( 
            IMFByteStreamHandler * This,
            /* [in] */ IMFByteStream *pByteStream,
            /* [in] */ LPCWSTR pwszURL,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IPropertyStore *pProps,
            /* [annotation][out] */ 
            __out_opt  IUnknown **ppIUnknownCancelCookie,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        HRESULT ( STDMETHODCALLTYPE *EndCreateObject )( 
            IMFByteStreamHandler * This,
            /* [in] */ IMFAsyncResult *pResult,
            /* [annotation][out] */ 
            __out  MF_OBJECT_TYPE *pObjectType,
            /* [annotation][out] */ 
            __out  IUnknown **ppObject);
        
        HRESULT ( STDMETHODCALLTYPE *CancelObjectCreation )( 
            IMFByteStreamHandler * This,
            /* [in] */ IUnknown *pIUnknownCancelCookie);
        
        HRESULT ( STDMETHODCALLTYPE *GetMaxNumberOfBytesRequiredForResolution )( 
            IMFByteStreamHandler * This,
            /* [annotation][out] */ 
            __out  QWORD *pqwBytes);
        
        END_INTERFACE
    } IMFByteStreamHandlerVtbl;

    interface IMFByteStreamHandler
    {
        CONST_VTBL struct IMFByteStreamHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFByteStreamHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFByteStreamHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFByteStreamHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFByteStreamHandler_BeginCreateObject(This,pByteStream,pwszURL,dwFlags,pProps,ppIUnknownCancelCookie,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginCreateObject(This,pByteStream,pwszURL,dwFlags,pProps,ppIUnknownCancelCookie,pCallback,punkState) ) 

#define IMFByteStreamHandler_EndCreateObject(This,pResult,pObjectType,ppObject)	\
    ( (This)->lpVtbl -> EndCreateObject(This,pResult,pObjectType,ppObject) ) 

#define IMFByteStreamHandler_CancelObjectCreation(This,pIUnknownCancelCookie)	\
    ( (This)->lpVtbl -> CancelObjectCreation(This,pIUnknownCancelCookie) ) 

#define IMFByteStreamHandler_GetMaxNumberOfBytesRequiredForResolution(This,pqwBytes)	\
    ( (This)->lpVtbl -> GetMaxNumberOfBytesRequiredForResolution(This,pqwBytes) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFByteStreamHandler_INTERFACE_DEFINED__ */


#ifndef __IMFTrustedInput_INTERFACE_DEFINED__
#define __IMFTrustedInput_INTERFACE_DEFINED__

/* interface IMFTrustedInput */
/* [helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMFTrustedInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("542612C4-A1B8-4632-B521-DE11EA64A0B0")
    IMFTrustedInput : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetInputTrustAuthority( 
            /* [in] */ DWORD dwStreamID,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt IUnknown **ppunkObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFTrustedInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFTrustedInput * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFTrustedInput * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFTrustedInput * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputTrustAuthority )( 
            __RPC__in IMFTrustedInput * This,
            /* [in] */ DWORD dwStreamID,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt IUnknown **ppunkObject);
        
        END_INTERFACE
    } IMFTrustedInputVtbl;

    interface IMFTrustedInput
    {
        CONST_VTBL struct IMFTrustedInputVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFTrustedInput_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFTrustedInput_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFTrustedInput_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFTrustedInput_GetInputTrustAuthority(This,dwStreamID,riid,ppunkObject)	\
    ( (This)->lpVtbl -> GetInputTrustAuthority(This,dwStreamID,riid,ppunkObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFTrustedInput_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0058 */
/* [local] */ 

typedef 
enum _MFPOLICYMANAGER_ACTION
    {	PEACTION_NO	= 0,
	PEACTION_PLAY	= 1,
	PEACTION_COPY	= 2,
	PEACTION_EXPORT	= 3,
	PEACTION_EXTRACT	= 4,
	PEACTION_RESERVED1	= 5,
	PEACTION_RESERVED2	= 6,
	PEACTION_RESERVED3	= 7,
	PEACTION_LAST	= 7
    } 	MFPOLICYMANAGER_ACTION;

typedef struct _MFINPUTTRUSTAUTHORITY_ACTION
    {
    MFPOLICYMANAGER_ACTION Action;
    BYTE *pbTicket;
    DWORD cbTicket;
    } 	MFINPUTTRUSTAUTHORITY_ACCESS_ACTION;

typedef struct _MFINPUTTRUSTAUTHORITY_ACCESS_PARAMS
    {
    DWORD dwSize;
    DWORD dwVer;
    DWORD cbSignatureOffset;
    DWORD cbSignatureSize;
    DWORD cbExtensionOffset;
    DWORD cbExtensionSize;
    DWORD cActions;
    MFINPUTTRUSTAUTHORITY_ACCESS_ACTION rgOutputActions[ 1 ];
    } 	MFINPUTTRUSTAUTHORITY_ACCESS_PARAMS;




extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0058_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0058_v0_0_s_ifspec;

#ifndef __IMFInputTrustAuthority_INTERFACE_DEFINED__
#define __IMFInputTrustAuthority_INTERFACE_DEFINED__

/* interface IMFInputTrustAuthority */
/* [helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMFInputTrustAuthority;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D19F8E98-B126-4446-890C-5DCB7AD71453")
    IMFInputTrustAuthority : public IUnknown
    {
    public:
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE GetDecrypter( 
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __out  void **ppv) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE RequestAccess( 
            /* [in] */ MFPOLICYMANAGER_ACTION Action,
            /* [annotation][out] */ 
            __out  IMFActivate **ppContentEnablerActivate) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE GetPolicy( 
            /* [in] */ MFPOLICYMANAGER_ACTION Action,
            /* [annotation][out] */ 
            __out  IMFOutputPolicy **ppPolicy) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE BindAccess( 
            /* [annotation][in] */ 
            __in  MFINPUTTRUSTAUTHORITY_ACCESS_PARAMS *pParam) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE UpdateAccess( 
            /* [annotation][in] */ 
            __in  MFINPUTTRUSTAUTHORITY_ACCESS_PARAMS *pParam) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFInputTrustAuthorityVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFInputTrustAuthority * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFInputTrustAuthority * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFInputTrustAuthority * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *GetDecrypter )( 
            IMFInputTrustAuthority * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __out  void **ppv);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *RequestAccess )( 
            IMFInputTrustAuthority * This,
            /* [in] */ MFPOLICYMANAGER_ACTION Action,
            /* [annotation][out] */ 
            __out  IMFActivate **ppContentEnablerActivate);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *GetPolicy )( 
            IMFInputTrustAuthority * This,
            /* [in] */ MFPOLICYMANAGER_ACTION Action,
            /* [annotation][out] */ 
            __out  IMFOutputPolicy **ppPolicy);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *BindAccess )( 
            IMFInputTrustAuthority * This,
            /* [annotation][in] */ 
            __in  MFINPUTTRUSTAUTHORITY_ACCESS_PARAMS *pParam);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *UpdateAccess )( 
            IMFInputTrustAuthority * This,
            /* [annotation][in] */ 
            __in  MFINPUTTRUSTAUTHORITY_ACCESS_PARAMS *pParam);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in IMFInputTrustAuthority * This);
        
        END_INTERFACE
    } IMFInputTrustAuthorityVtbl;

    interface IMFInputTrustAuthority
    {
        CONST_VTBL struct IMFInputTrustAuthorityVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFInputTrustAuthority_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFInputTrustAuthority_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFInputTrustAuthority_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFInputTrustAuthority_GetDecrypter(This,riid,ppv)	\
    ( (This)->lpVtbl -> GetDecrypter(This,riid,ppv) ) 

#define IMFInputTrustAuthority_RequestAccess(This,Action,ppContentEnablerActivate)	\
    ( (This)->lpVtbl -> RequestAccess(This,Action,ppContentEnablerActivate) ) 

#define IMFInputTrustAuthority_GetPolicy(This,Action,ppPolicy)	\
    ( (This)->lpVtbl -> GetPolicy(This,Action,ppPolicy) ) 

#define IMFInputTrustAuthority_BindAccess(This,pParam)	\
    ( (This)->lpVtbl -> BindAccess(This,pParam) ) 

#define IMFInputTrustAuthority_UpdateAccess(This,pParam)	\
    ( (This)->lpVtbl -> UpdateAccess(This,pParam) ) 

#define IMFInputTrustAuthority_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFInputTrustAuthority_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0059 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0059_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0059_v0_0_s_ifspec;

#ifndef __IMFTrustedOutput_INTERFACE_DEFINED__
#define __IMFTrustedOutput_INTERFACE_DEFINED__

/* interface IMFTrustedOutput */
/* [local][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMFTrustedOutput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D19F8E95-B126-4446-890C-5DCB7AD71453")
    IMFTrustedOutput : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetOutputTrustAuthorityCount( 
            /* [annotation][out] */ 
            __out  DWORD *pcOutputTrustAuthorities) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputTrustAuthorityByIndex( 
            /* [in] */ DWORD dwIndex,
            /* [annotation][out] */ 
            __out  IMFOutputTrustAuthority **ppauthority) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsFinal( 
            /* [annotation][out] */ 
            __out  BOOL *pfIsFinal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFTrustedOutputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFTrustedOutput * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFTrustedOutput * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFTrustedOutput * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputTrustAuthorityCount )( 
            IMFTrustedOutput * This,
            /* [annotation][out] */ 
            __out  DWORD *pcOutputTrustAuthorities);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputTrustAuthorityByIndex )( 
            IMFTrustedOutput * This,
            /* [in] */ DWORD dwIndex,
            /* [annotation][out] */ 
            __out  IMFOutputTrustAuthority **ppauthority);
        
        HRESULT ( STDMETHODCALLTYPE *IsFinal )( 
            IMFTrustedOutput * This,
            /* [annotation][out] */ 
            __out  BOOL *pfIsFinal);
        
        END_INTERFACE
    } IMFTrustedOutputVtbl;

    interface IMFTrustedOutput
    {
        CONST_VTBL struct IMFTrustedOutputVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFTrustedOutput_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFTrustedOutput_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFTrustedOutput_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFTrustedOutput_GetOutputTrustAuthorityCount(This,pcOutputTrustAuthorities)	\
    ( (This)->lpVtbl -> GetOutputTrustAuthorityCount(This,pcOutputTrustAuthorities) ) 

#define IMFTrustedOutput_GetOutputTrustAuthorityByIndex(This,dwIndex,ppauthority)	\
    ( (This)->lpVtbl -> GetOutputTrustAuthorityByIndex(This,dwIndex,ppauthority) ) 

#define IMFTrustedOutput_IsFinal(This,pfIsFinal)	\
    ( (This)->lpVtbl -> IsFinal(This,pfIsFinal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFTrustedOutput_INTERFACE_DEFINED__ */


#ifndef __IMFOutputTrustAuthority_INTERFACE_DEFINED__
#define __IMFOutputTrustAuthority_INTERFACE_DEFINED__

/* interface IMFOutputTrustAuthority */
/* [local][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMFOutputTrustAuthority;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D19F8E94-B126-4446-890C-5DCB7AD71453")
    IMFOutputTrustAuthority : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAction( 
            /* [annotation][out] */ 
            __out  MFPOLICYMANAGER_ACTION *pAction) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPolicy( 
            /* [annotation][in] */ 
            __in_ecount_opt(nPolicy)  IMFOutputPolicy **ppPolicy,
            /* [in] */ DWORD nPolicy,
            /* [annotation][size_is][size_is][unique][out] */ 
            __deref_opt_out_bcount(*pcbTicket)  BYTE **ppbTicket,
            /* [annotation][out] */ 
            __out_opt  DWORD *pcbTicket) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFOutputTrustAuthorityVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFOutputTrustAuthority * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFOutputTrustAuthority * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFOutputTrustAuthority * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetAction )( 
            IMFOutputTrustAuthority * This,
            /* [annotation][out] */ 
            __out  MFPOLICYMANAGER_ACTION *pAction);
        
        HRESULT ( STDMETHODCALLTYPE *SetPolicy )( 
            IMFOutputTrustAuthority * This,
            /* [annotation][in] */ 
            __in_ecount_opt(nPolicy)  IMFOutputPolicy **ppPolicy,
            /* [in] */ DWORD nPolicy,
            /* [annotation][size_is][size_is][unique][out] */ 
            __deref_opt_out_bcount(*pcbTicket)  BYTE **ppbTicket,
            /* [annotation][out] */ 
            __out_opt  DWORD *pcbTicket);
        
        END_INTERFACE
    } IMFOutputTrustAuthorityVtbl;

    interface IMFOutputTrustAuthority
    {
        CONST_VTBL struct IMFOutputTrustAuthorityVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFOutputTrustAuthority_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFOutputTrustAuthority_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFOutputTrustAuthority_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFOutputTrustAuthority_GetAction(This,pAction)	\
    ( (This)->lpVtbl -> GetAction(This,pAction) ) 

#define IMFOutputTrustAuthority_SetPolicy(This,ppPolicy,nPolicy,ppbTicket,pcbTicket)	\
    ( (This)->lpVtbl -> SetPolicy(This,ppPolicy,nPolicy,ppbTicket,pcbTicket) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFOutputTrustAuthority_INTERFACE_DEFINED__ */


#ifndef __IMFOutputPolicy_INTERFACE_DEFINED__
#define __IMFOutputPolicy_INTERFACE_DEFINED__

/* interface IMFOutputPolicy */
/* [local][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMFOutputPolicy;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7F00F10A-DAED-41AF-AB26-5FDFA4DFBA3C")
    IMFOutputPolicy : public IMFAttributes
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GenerateRequiredSchemas( 
            /* [in] */ DWORD dwAttributes,
            /* [in] */ GUID guidOutputSubType,
            /* [in] */ GUID *rgGuidProtectionSchemasSupported,
            /* [in] */ DWORD cProtectionSchemasSupported,
            /* [annotation][out] */ 
            __out  IMFCollection **ppRequiredProtectionSchemas) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOriginatorID( 
            /* [annotation][out] */ 
            __out  GUID *pguidOriginatorID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMinimumGRLVersion( 
            /* [annotation][out] */ 
            __out  DWORD *pdwMinimumGRLVersion) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFOutputPolicyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFOutputPolicy * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFOutputPolicy * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFOutputPolicy * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [full][out][in] */ PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemType )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [out] */ MF_ATTRIBUTE_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *CompareItem )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            REFPROPVARIANT Value,
            /* [out] */ BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *Compare )( 
            IMFOutputPolicy * This,
            IMFAttributes *pTheirs,
            MF_ATTRIBUTES_MATCH_TYPE MatchType,
            /* [out] */ BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [out] */ UINT64 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetDouble )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [out] */ double *pfValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetGUID )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [out] */ GUID *pguidValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetString )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [size_is][out] */ LPWSTR pwszValue,
            UINT32 cchBufSize,
            /* [full][out][in] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [size_is][size_is][out] */ LPWSTR *ppwszValue,
            /* [out] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlob )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [size_is][out] */ UINT8 *pBuf,
            UINT32 cbBufSize,
            /* [full][out][in] */ UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [size_is][size_is][out] */ UINT8 **ppBuf,
            /* [out] */ UINT32 *pcbSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            REFIID riid,
            /* [iid_is][out] */ LPVOID *ppv);
        
        HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            REFPROPVARIANT Value);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            IMFOutputPolicy * This,
            REFGUID guidKey);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( 
            IMFOutputPolicy * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            UINT32 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            UINT64 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetDouble )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            double fValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetGUID )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            REFGUID guidValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetString )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [string][in] */ LPCWSTR wszValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetBlob )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [size_is][in] */ const UINT8 *pBuf,
            UINT32 cbBufSize);
        
        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( 
            IMFOutputPolicy * This,
            REFGUID guidKey,
            /* [in] */ IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *LockStore )( 
            IMFOutputPolicy * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( 
            IMFOutputPolicy * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IMFOutputPolicy * This,
            /* [out] */ UINT32 *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( 
            IMFOutputPolicy * This,
            UINT32 unIndex,
            /* [out] */ GUID *pguidKey,
            /* [full][out][in] */ PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( 
            IMFOutputPolicy * This,
            /* [in] */ IMFAttributes *pDest);
        
        HRESULT ( STDMETHODCALLTYPE *GenerateRequiredSchemas )( 
            IMFOutputPolicy * This,
            /* [in] */ DWORD dwAttributes,
            /* [in] */ GUID guidOutputSubType,
            /* [in] */ GUID *rgGuidProtectionSchemasSupported,
            /* [in] */ DWORD cProtectionSchemasSupported,
            /* [annotation][out] */ 
            __out  IMFCollection **ppRequiredProtectionSchemas);
        
        HRESULT ( STDMETHODCALLTYPE *GetOriginatorID )( 
            IMFOutputPolicy * This,
            /* [annotation][out] */ 
            __out  GUID *pguidOriginatorID);
        
        HRESULT ( STDMETHODCALLTYPE *GetMinimumGRLVersion )( 
            IMFOutputPolicy * This,
            /* [annotation][out] */ 
            __out  DWORD *pdwMinimumGRLVersion);
        
        END_INTERFACE
    } IMFOutputPolicyVtbl;

    interface IMFOutputPolicy
    {
        CONST_VTBL struct IMFOutputPolicyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFOutputPolicy_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFOutputPolicy_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFOutputPolicy_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFOutputPolicy_GetItem(This,guidKey,pValue)	\
    ( (This)->lpVtbl -> GetItem(This,guidKey,pValue) ) 

#define IMFOutputPolicy_GetItemType(This,guidKey,pType)	\
    ( (This)->lpVtbl -> GetItemType(This,guidKey,pType) ) 

#define IMFOutputPolicy_CompareItem(This,guidKey,Value,pbResult)	\
    ( (This)->lpVtbl -> CompareItem(This,guidKey,Value,pbResult) ) 

#define IMFOutputPolicy_Compare(This,pTheirs,MatchType,pbResult)	\
    ( (This)->lpVtbl -> Compare(This,pTheirs,MatchType,pbResult) ) 

#define IMFOutputPolicy_GetUINT32(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT32(This,guidKey,punValue) ) 

#define IMFOutputPolicy_GetUINT64(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT64(This,guidKey,punValue) ) 

#define IMFOutputPolicy_GetDouble(This,guidKey,pfValue)	\
    ( (This)->lpVtbl -> GetDouble(This,guidKey,pfValue) ) 

#define IMFOutputPolicy_GetGUID(This,guidKey,pguidValue)	\
    ( (This)->lpVtbl -> GetGUID(This,guidKey,pguidValue) ) 

#define IMFOutputPolicy_GetStringLength(This,guidKey,pcchLength)	\
    ( (This)->lpVtbl -> GetStringLength(This,guidKey,pcchLength) ) 

#define IMFOutputPolicy_GetString(This,guidKey,pwszValue,cchBufSize,pcchLength)	\
    ( (This)->lpVtbl -> GetString(This,guidKey,pwszValue,cchBufSize,pcchLength) ) 

#define IMFOutputPolicy_GetAllocatedString(This,guidKey,ppwszValue,pcchLength)	\
    ( (This)->lpVtbl -> GetAllocatedString(This,guidKey,ppwszValue,pcchLength) ) 

#define IMFOutputPolicy_GetBlobSize(This,guidKey,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlobSize(This,guidKey,pcbBlobSize) ) 

#define IMFOutputPolicy_GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize) ) 

#define IMFOutputPolicy_GetAllocatedBlob(This,guidKey,ppBuf,pcbSize)	\
    ( (This)->lpVtbl -> GetAllocatedBlob(This,guidKey,ppBuf,pcbSize) ) 

#define IMFOutputPolicy_GetUnknown(This,guidKey,riid,ppv)	\
    ( (This)->lpVtbl -> GetUnknown(This,guidKey,riid,ppv) ) 

#define IMFOutputPolicy_SetItem(This,guidKey,Value)	\
    ( (This)->lpVtbl -> SetItem(This,guidKey,Value) ) 

#define IMFOutputPolicy_DeleteItem(This,guidKey)	\
    ( (This)->lpVtbl -> DeleteItem(This,guidKey) ) 

#define IMFOutputPolicy_DeleteAllItems(This)	\
    ( (This)->lpVtbl -> DeleteAllItems(This) ) 

#define IMFOutputPolicy_SetUINT32(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT32(This,guidKey,unValue) ) 

#define IMFOutputPolicy_SetUINT64(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT64(This,guidKey,unValue) ) 

#define IMFOutputPolicy_SetDouble(This,guidKey,fValue)	\
    ( (This)->lpVtbl -> SetDouble(This,guidKey,fValue) ) 

#define IMFOutputPolicy_SetGUID(This,guidKey,guidValue)	\
    ( (This)->lpVtbl -> SetGUID(This,guidKey,guidValue) ) 

#define IMFOutputPolicy_SetString(This,guidKey,wszValue)	\
    ( (This)->lpVtbl -> SetString(This,guidKey,wszValue) ) 

#define IMFOutputPolicy_SetBlob(This,guidKey,pBuf,cbBufSize)	\
    ( (This)->lpVtbl -> SetBlob(This,guidKey,pBuf,cbBufSize) ) 

#define IMFOutputPolicy_SetUnknown(This,guidKey,pUnknown)	\
    ( (This)->lpVtbl -> SetUnknown(This,guidKey,pUnknown) ) 

#define IMFOutputPolicy_LockStore(This)	\
    ( (This)->lpVtbl -> LockStore(This) ) 

#define IMFOutputPolicy_UnlockStore(This)	\
    ( (This)->lpVtbl -> UnlockStore(This) ) 

#define IMFOutputPolicy_GetCount(This,pcItems)	\
    ( (This)->lpVtbl -> GetCount(This,pcItems) ) 

#define IMFOutputPolicy_GetItemByIndex(This,unIndex,pguidKey,pValue)	\
    ( (This)->lpVtbl -> GetItemByIndex(This,unIndex,pguidKey,pValue) ) 

#define IMFOutputPolicy_CopyAllItems(This,pDest)	\
    ( (This)->lpVtbl -> CopyAllItems(This,pDest) ) 


#define IMFOutputPolicy_GenerateRequiredSchemas(This,dwAttributes,guidOutputSubType,rgGuidProtectionSchemasSupported,cProtectionSchemasSupported,ppRequiredProtectionSchemas)	\
    ( (This)->lpVtbl -> GenerateRequiredSchemas(This,dwAttributes,guidOutputSubType,rgGuidProtectionSchemasSupported,cProtectionSchemasSupported,ppRequiredProtectionSchemas) ) 

#define IMFOutputPolicy_GetOriginatorID(This,pguidOriginatorID)	\
    ( (This)->lpVtbl -> GetOriginatorID(This,pguidOriginatorID) ) 

#define IMFOutputPolicy_GetMinimumGRLVersion(This,pdwMinimumGRLVersion)	\
    ( (This)->lpVtbl -> GetMinimumGRLVersion(This,pdwMinimumGRLVersion) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFOutputPolicy_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0062 */
/* [local] */ 

#define MFOUTPUTATTRIBUTE_DIGITAL               ((DWORD) 0x00000001)
#define MFOUTPUTATTRIBUTE_NONSTANDARDIMPLEMENTATION ((DWORD) 0x00000002)
#define MFOUTPUTATTRIBUTE_VIDEO                 ((DWORD) 0x00000004)
#define MFOUTPUTATTRIBUTE_COMPRESSED            ((DWORD) 0x00000008)
#define MFOUTPUTATTRIBUTE_SOFTWARE              ((DWORD) 0x00000010)
#define MFOUTPUTATTRIBUTE_BUS                   ((DWORD) 0x00000020)
#define MFOUTPUTATTRIBUTE_BUSIMPLEMENTATION     ((DWORD) 0x0000FF00)
EXTERN_GUID( MFCONNECTOR_SPDIF, 0xb94a712, 0xad3e, 0x4cee, 0x83, 0xce, 0xce, 0x32, 0xe3, 0xdb, 0x65, 0x22);

EXTERN_GUID( MFCONNECTOR_UNKNOWN, 0xac3aef5c, 0xce43, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_PCI,  0xac3aef5d, 0xce43, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_PCIX, 0xac3aef5e, 0xce43, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_PCI_Express, 0xac3aef5f, 0xce43, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_AGP, 0xac3aef60, 0xce43, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);


EXTERN_GUID( MFCONNECTOR_VGA, 0x57cd5968, 0xce47, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_SVIDEO, 0x57cd5969, 0xce47, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_COMPOSITE, 0x57cd596a, 0xce47, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_COMPONENT, 0x57cd596b, 0xce47, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_DVI, 0x57cd596c, 0xce47, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_HDMI, 0x57cd596d, 0xce47, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_LVDS, 0x57cd596e, 0xce47, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_D_JPN, 0x57cd5970, 0xce47, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_SDI, 0x57cd5971, 0xce47, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_DISPLAYPORT_EXTERNAL, 0x57cd5972, 0xce47, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_DISPLAYPORT_EMBEDDED, 0x57cd5973, 0xce47, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_UDI_EXTERNAL, 0x57cd5974, 0xce47, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);
EXTERN_GUID( MFCONNECTOR_UDI_EMBEDDED, 0x57cd5975, 0xce47, 0x11d9, 0x92, 0xdb, 0x00, 0x0b, 0xdb, 0x28, 0xff, 0x98);



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0062_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0062_v0_0_s_ifspec;

#ifndef __IMFOutputSchema_INTERFACE_DEFINED__
#define __IMFOutputSchema_INTERFACE_DEFINED__

/* interface IMFOutputSchema */
/* [local][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMFOutputSchema;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7BE0FC5B-ABD9-44FB-A5C8-F50136E71599")
    IMFOutputSchema : public IMFAttributes
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSchemaType( 
            /* [annotation][out] */ 
            __out  GUID *pguidSchemaType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConfigurationData( 
            /* [annotation][out] */ 
            __out  DWORD *pdwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOriginatorID( 
            /* [annotation][out] */ 
            __out  GUID *pguidOriginatorID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFOutputSchemaVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFOutputSchema * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFOutputSchema * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFOutputSchema * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [full][out][in] */ PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemType )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [out] */ MF_ATTRIBUTE_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *CompareItem )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            REFPROPVARIANT Value,
            /* [out] */ BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *Compare )( 
            IMFOutputSchema * This,
            IMFAttributes *pTheirs,
            MF_ATTRIBUTES_MATCH_TYPE MatchType,
            /* [out] */ BOOL *pbResult);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT32 )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetUINT64 )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [out] */ UINT64 *punValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetDouble )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [out] */ double *pfValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetGUID )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [out] */ GUID *pguidValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetStringLength )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetString )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [size_is][out] */ LPWSTR pwszValue,
            UINT32 cchBufSize,
            /* [full][out][in] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedString )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [size_is][size_is][out] */ LPWSTR *ppwszValue,
            /* [out] */ UINT32 *pcchLength);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlobSize )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [out] */ UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetBlob )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [size_is][out] */ UINT8 *pBuf,
            UINT32 cbBufSize,
            /* [full][out][in] */ UINT32 *pcbBlobSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllocatedBlob )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [size_is][size_is][out] */ UINT8 **ppBuf,
            /* [out] */ UINT32 *pcbSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetUnknown )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            REFIID riid,
            /* [iid_is][out] */ LPVOID *ppv);
        
        HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            REFPROPVARIANT Value);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            IMFOutputSchema * This,
            REFGUID guidKey);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteAllItems )( 
            IMFOutputSchema * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT32 )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            UINT32 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetUINT64 )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            UINT64 unValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetDouble )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            double fValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetGUID )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            REFGUID guidValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetString )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [string][in] */ LPCWSTR wszValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetBlob )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [size_is][in] */ const UINT8 *pBuf,
            UINT32 cbBufSize);
        
        HRESULT ( STDMETHODCALLTYPE *SetUnknown )( 
            IMFOutputSchema * This,
            REFGUID guidKey,
            /* [in] */ IUnknown *pUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *LockStore )( 
            IMFOutputSchema * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockStore )( 
            IMFOutputSchema * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IMFOutputSchema * This,
            /* [out] */ UINT32 *pcItems);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemByIndex )( 
            IMFOutputSchema * This,
            UINT32 unIndex,
            /* [out] */ GUID *pguidKey,
            /* [full][out][in] */ PROPVARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *CopyAllItems )( 
            IMFOutputSchema * This,
            /* [in] */ IMFAttributes *pDest);
        
        HRESULT ( STDMETHODCALLTYPE *GetSchemaType )( 
            IMFOutputSchema * This,
            /* [annotation][out] */ 
            __out  GUID *pguidSchemaType);
        
        HRESULT ( STDMETHODCALLTYPE *GetConfigurationData )( 
            IMFOutputSchema * This,
            /* [annotation][out] */ 
            __out  DWORD *pdwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetOriginatorID )( 
            IMFOutputSchema * This,
            /* [annotation][out] */ 
            __out  GUID *pguidOriginatorID);
        
        END_INTERFACE
    } IMFOutputSchemaVtbl;

    interface IMFOutputSchema
    {
        CONST_VTBL struct IMFOutputSchemaVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFOutputSchema_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFOutputSchema_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFOutputSchema_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFOutputSchema_GetItem(This,guidKey,pValue)	\
    ( (This)->lpVtbl -> GetItem(This,guidKey,pValue) ) 

#define IMFOutputSchema_GetItemType(This,guidKey,pType)	\
    ( (This)->lpVtbl -> GetItemType(This,guidKey,pType) ) 

#define IMFOutputSchema_CompareItem(This,guidKey,Value,pbResult)	\
    ( (This)->lpVtbl -> CompareItem(This,guidKey,Value,pbResult) ) 

#define IMFOutputSchema_Compare(This,pTheirs,MatchType,pbResult)	\
    ( (This)->lpVtbl -> Compare(This,pTheirs,MatchType,pbResult) ) 

#define IMFOutputSchema_GetUINT32(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT32(This,guidKey,punValue) ) 

#define IMFOutputSchema_GetUINT64(This,guidKey,punValue)	\
    ( (This)->lpVtbl -> GetUINT64(This,guidKey,punValue) ) 

#define IMFOutputSchema_GetDouble(This,guidKey,pfValue)	\
    ( (This)->lpVtbl -> GetDouble(This,guidKey,pfValue) ) 

#define IMFOutputSchema_GetGUID(This,guidKey,pguidValue)	\
    ( (This)->lpVtbl -> GetGUID(This,guidKey,pguidValue) ) 

#define IMFOutputSchema_GetStringLength(This,guidKey,pcchLength)	\
    ( (This)->lpVtbl -> GetStringLength(This,guidKey,pcchLength) ) 

#define IMFOutputSchema_GetString(This,guidKey,pwszValue,cchBufSize,pcchLength)	\
    ( (This)->lpVtbl -> GetString(This,guidKey,pwszValue,cchBufSize,pcchLength) ) 

#define IMFOutputSchema_GetAllocatedString(This,guidKey,ppwszValue,pcchLength)	\
    ( (This)->lpVtbl -> GetAllocatedString(This,guidKey,ppwszValue,pcchLength) ) 

#define IMFOutputSchema_GetBlobSize(This,guidKey,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlobSize(This,guidKey,pcbBlobSize) ) 

#define IMFOutputSchema_GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize)	\
    ( (This)->lpVtbl -> GetBlob(This,guidKey,pBuf,cbBufSize,pcbBlobSize) ) 

#define IMFOutputSchema_GetAllocatedBlob(This,guidKey,ppBuf,pcbSize)	\
    ( (This)->lpVtbl -> GetAllocatedBlob(This,guidKey,ppBuf,pcbSize) ) 

#define IMFOutputSchema_GetUnknown(This,guidKey,riid,ppv)	\
    ( (This)->lpVtbl -> GetUnknown(This,guidKey,riid,ppv) ) 

#define IMFOutputSchema_SetItem(This,guidKey,Value)	\
    ( (This)->lpVtbl -> SetItem(This,guidKey,Value) ) 

#define IMFOutputSchema_DeleteItem(This,guidKey)	\
    ( (This)->lpVtbl -> DeleteItem(This,guidKey) ) 

#define IMFOutputSchema_DeleteAllItems(This)	\
    ( (This)->lpVtbl -> DeleteAllItems(This) ) 

#define IMFOutputSchema_SetUINT32(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT32(This,guidKey,unValue) ) 

#define IMFOutputSchema_SetUINT64(This,guidKey,unValue)	\
    ( (This)->lpVtbl -> SetUINT64(This,guidKey,unValue) ) 

#define IMFOutputSchema_SetDouble(This,guidKey,fValue)	\
    ( (This)->lpVtbl -> SetDouble(This,guidKey,fValue) ) 

#define IMFOutputSchema_SetGUID(This,guidKey,guidValue)	\
    ( (This)->lpVtbl -> SetGUID(This,guidKey,guidValue) ) 

#define IMFOutputSchema_SetString(This,guidKey,wszValue)	\
    ( (This)->lpVtbl -> SetString(This,guidKey,wszValue) ) 

#define IMFOutputSchema_SetBlob(This,guidKey,pBuf,cbBufSize)	\
    ( (This)->lpVtbl -> SetBlob(This,guidKey,pBuf,cbBufSize) ) 

#define IMFOutputSchema_SetUnknown(This,guidKey,pUnknown)	\
    ( (This)->lpVtbl -> SetUnknown(This,guidKey,pUnknown) ) 

#define IMFOutputSchema_LockStore(This)	\
    ( (This)->lpVtbl -> LockStore(This) ) 

#define IMFOutputSchema_UnlockStore(This)	\
    ( (This)->lpVtbl -> UnlockStore(This) ) 

#define IMFOutputSchema_GetCount(This,pcItems)	\
    ( (This)->lpVtbl -> GetCount(This,pcItems) ) 

#define IMFOutputSchema_GetItemByIndex(This,unIndex,pguidKey,pValue)	\
    ( (This)->lpVtbl -> GetItemByIndex(This,unIndex,pguidKey,pValue) ) 

#define IMFOutputSchema_CopyAllItems(This,pDest)	\
    ( (This)->lpVtbl -> CopyAllItems(This,pDest) ) 


#define IMFOutputSchema_GetSchemaType(This,pguidSchemaType)	\
    ( (This)->lpVtbl -> GetSchemaType(This,pguidSchemaType) ) 

#define IMFOutputSchema_GetConfigurationData(This,pdwVal)	\
    ( (This)->lpVtbl -> GetConfigurationData(This,pdwVal) ) 

#define IMFOutputSchema_GetOriginatorID(This,pguidOriginatorID)	\
    ( (This)->lpVtbl -> GetOriginatorID(This,pguidOriginatorID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFOutputSchema_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0063 */
/* [local] */ 


EXTERN_GUID( MFPROTECTION_DISABLE, 0x8cc6d81b, 0xfec6, 0x4d8f, 0x96, 0x4b, 0xcf, 0xba, 0x0b, 0x0d, 0xad, 0x0d);
EXTERN_GUID( MFPROTECTION_CONSTRICTVIDEO, 0x193370ce, 0xc5e4, 0x4c3a, 0x8a, 0x66, 0x69, 0x59, 0xb4, 0xda, 0x44, 0x42);
EXTERN_GUID( MFPROTECTION_CONSTRICTAUDIO, 0xffc99b44, 0xdf48, 0x4e16, 0x8e, 0x66, 0x09, 0x68, 0x92, 0xc1, 0x57, 0x8a);
EXTERN_GUID( MFPROTECTION_TRUSTEDAUDIODRIVERS, 0x65bdf3d2, 0x0168, 0x4816, 0xa5, 0x33, 0x55, 0xd4, 0x7b, 0x02, 0x71, 0x01);
EXTERN_GUID( MFPROTECTION_HDCP, 0xAE7CC03D, 0xC828, 0x4021, 0xac, 0xb7, 0xd5, 0x78, 0xd2, 0x7a, 0xaf, 0x13);
EXTERN_GUID( MFPROTECTION_CGMSA, 0xE57E69E9, 0x226B, 0x4d31, 0xB4, 0xE3, 0xD3, 0xDB, 0x00, 0x87, 0x36, 0xDD);
EXTERN_GUID( MFPROTECTION_ACP, 0xc3fd11c6, 0xf8b7, 0x4d20, 0xb0, 0x08, 0x1d, 0xb1, 0x7d, 0x61, 0xf2, 0xda);
EXTERN_GUID( MFPROTECTION_WMDRMOTA, 0xa267a6a1, 0x362e, 0x47d0, 0x88, 0x05, 0x46, 0x28, 0x59, 0x8a, 0x23, 0xe4);
EXTERN_GUID( MFPROTECTION_FFT, 0x462a56b2, 0x2866, 0x4bb6, 0x98, 0x0d, 0x6d, 0x8d, 0x9e, 0xdb, 0x1a, 0x8c);


EXTERN_GUID( MFPROTECTIONATTRIBUTE_CONSTRICTVIDEO_IMAGESIZE, 0x8476fc, 0x4b58, 0x4d80, 0xa7, 0x90, 0xe7, 0x29, 0x76, 0x73, 0x16, 0x1d);
EXTERN_GUID( MFPROTECTIONATTRIBUTE_HDCP_SRM, 0x6f302107, 0x3477, 0x4468, 0x8a, 0x8, 0xee, 0xf9, 0xdb, 0x10, 0xe2, 0xf);


#define MAKE_MFPROTECTIONDATA_DISABLE(Disable)  \
    ((DWORD)(Disable ? 0x00000001 : 0))

#define EXTRACT_MFPROTECTIONDATA_DISABLE_ON(Data) \
    (0 != ((Data) & 0x00000001))

#define EXTRACT_MFPROTECTIONDATA_DISABLE_RESERVED(Data) \
    (((DWORD)((Data) & 0xFFFFFFFE)) >> 1)


#define MAKE_MFPROTECTIONDATA_CONSTRICTAUDIO(Level) \
    ((DWORD)(Level))

#define EXTRACT_MFPROTECTIONDATA_CONSTRICTAUDIO_LEVEL(Data) \
    ((DWORD)((Data) & 0x000000FF))

#define EXTRACT_MFPROTECTIONDATA_CONSTRICTAUDIO_RESERVED(Data) \
    (((DWORD)((Data) & 0xFFFFFF00)) >> 8)


#define MAKE_MFPROTECTIONDATA_TRUSTEDAUDIODRIVERS(TestCertificateEnable, DigitalOutputDisable, DrmLevel) \
    (((DWORD)((TestCertificateEnable) ? 0x00020000 : 0)) | \
     ((DWORD)((DigitalOutputDisable) ? 0x00010000 : 0)) | \
     ((DWORD)(DrmLevel)))


#if (WINVER >= _WIN32_WINNT_WIN7) 
#define MAKE_MFPROTECTIONDATA_TRUSTEDAUDIODRIVERS2(TestCertificateEnable, DigitalOutputDisable, CopyOK, DrmLevel) \
    (((DWORD)((TestCertificateEnable) ? 0x00020000 : 0)) | \
     ((DWORD)((DigitalOutputDisable) ? 0x00010000 : 0)) | \
     ((DWORD)((CopyOK) ? 0x00040000 : 0)) | \
     ((DWORD)(DrmLevel)))

#endif // (WINVER >= _WIN32_WINNT_WIN7) 
#define EXTRACT_MFPROTECTIONDATA_TRUSTEDAUDIODRIVERS_DRMLEVEL(Data) \
    ((DWORD)((Data) & 0x0000FFFF))

#define EXTRACT_MFPROTECTIONDATA_TRUSTEDAUDIODRIVERS_DIGITALOUTPUTDISABLE(Data) \
    (0 != ((Data) & 0x00010000))

#define EXTRACT_MFPROTECTIONDATA_TRUSTEDAUDIODRIVERS_TESTCERTIFICATEENABLE(Data) \
    (0 != ((Data) & 0x00020000))

#if (WINVER >= _WIN32_WINNT_WIN7) 
#define EXTRACT_MFPROTECTIONDATA_TRUSTEDAUDIODRIVERS_COPYOK(Data) \
    (0 != ((Data) & 0x00040000))

#define EXTRACT_MFPROTECTIONDATA_TRUSTEDAUDIODRIVERS_RESERVED(Data) \
    (((DWORD)((Data) & 0xFFF80000)) >> 19)

#else 
#define EXTRACT_MFPROTECTIONDATA_TRUSTEDAUDIODRIVERS_RESERVED(Data) \
    (((DWORD)((Data) & 0xFFF80000)) >> 18)

#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0063_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0063_v0_0_s_ifspec;

#ifndef __IMFSecureChannel_INTERFACE_DEFINED__
#define __IMFSecureChannel_INTERFACE_DEFINED__

/* interface IMFSecureChannel */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFSecureChannel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d0ae555d-3b12-4d97-b060-0990bc5aeb67")
    IMFSecureChannel : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCertificate( 
            /* [annotation][out] */ 
            __deref_out_bcount(*pcbCert)  BYTE **ppCert,
            /* [annotation][out] */ 
            __out  DWORD *pcbCert) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetupSession( 
            /* [annotation][in] */ 
            __in_bcount(cbSessionKey)  BYTE *pbEncryptedSessionKey,
            /* [in] */ DWORD cbSessionKey) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSecureChannelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFSecureChannel * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFSecureChannel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFSecureChannel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCertificate )( 
            IMFSecureChannel * This,
            /* [annotation][out] */ 
            __deref_out_bcount(*pcbCert)  BYTE **ppCert,
            /* [annotation][out] */ 
            __out  DWORD *pcbCert);
        
        HRESULT ( STDMETHODCALLTYPE *SetupSession )( 
            IMFSecureChannel * This,
            /* [annotation][in] */ 
            __in_bcount(cbSessionKey)  BYTE *pbEncryptedSessionKey,
            /* [in] */ DWORD cbSessionKey);
        
        END_INTERFACE
    } IMFSecureChannelVtbl;

    interface IMFSecureChannel
    {
        CONST_VTBL struct IMFSecureChannelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSecureChannel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSecureChannel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSecureChannel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSecureChannel_GetCertificate(This,ppCert,pcbCert)	\
    ( (This)->lpVtbl -> GetCertificate(This,ppCert,pcbCert) ) 

#define IMFSecureChannel_SetupSession(This,pbEncryptedSessionKey,cbSessionKey)	\
    ( (This)->lpVtbl -> SetupSession(This,pbEncryptedSessionKey,cbSessionKey) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSecureChannel_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0064 */
/* [local] */ 

typedef 
enum SAMPLE_PROTECTION_VERSION
    {	SAMPLE_PROTECTION_VERSION_NO	= 0,
	SAMPLE_PROTECTION_VERSION_BASIC_LOKI	= 1,
	SAMPLE_PROTECTION_VERSION_SCATTER	= 2,
	SAMPLE_PROTECTION_VERSION_RC4	= 3
    } 	SAMPLE_PROTECTION_VERSION;

EXTERN_GUID( MF_SampleProtectionSalt, 0x5403deee, 0xb9ee, 0x438f, 0xaa, 0x83, 0x38, 0x4, 0x99, 0x7e, 0x56, 0x9d);


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0064_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0064_v0_0_s_ifspec;

#ifndef __IMFSampleProtection_INTERFACE_DEFINED__
#define __IMFSampleProtection_INTERFACE_DEFINED__

/* interface IMFSampleProtection */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFSampleProtection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8e36395f-c7b9-43c4-a54d-512b4af63c95")
    IMFSampleProtection : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetInputProtectionVersion( 
            /* [annotation][out] */ 
            __out  DWORD *pdwVersion) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputProtectionVersion( 
            /* [annotation][out] */ 
            __out  DWORD *pdwVersion) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProtectionCertificate( 
            /* [in] */ DWORD dwVersion,
            /* [annotation][out] */ 
            __deref_out_bcount(*pcbCert)  BYTE **ppCert,
            /* [annotation][out] */ 
            __out  DWORD *pcbCert) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InitOutputProtection( 
            /* [in] */ DWORD dwVersion,
            /* [in] */ DWORD dwOutputId,
            /* [in] */ BYTE *pbCert,
            /* [in] */ DWORD cbCert,
            /* [out] */ BYTE **ppbSeed,
            /* [out] */ DWORD *pcbSeed) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InitInputProtection( 
            /* [in] */ DWORD dwVersion,
            /* [in] */ DWORD dwInputId,
            /* [in] */ BYTE *pbSeed,
            /* [in] */ DWORD cbSeed) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSampleProtectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFSampleProtection * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFSampleProtection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFSampleProtection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputProtectionVersion )( 
            IMFSampleProtection * This,
            /* [annotation][out] */ 
            __out  DWORD *pdwVersion);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputProtectionVersion )( 
            IMFSampleProtection * This,
            /* [annotation][out] */ 
            __out  DWORD *pdwVersion);
        
        HRESULT ( STDMETHODCALLTYPE *GetProtectionCertificate )( 
            IMFSampleProtection * This,
            /* [in] */ DWORD dwVersion,
            /* [annotation][out] */ 
            __deref_out_bcount(*pcbCert)  BYTE **ppCert,
            /* [annotation][out] */ 
            __out  DWORD *pcbCert);
        
        HRESULT ( STDMETHODCALLTYPE *InitOutputProtection )( 
            IMFSampleProtection * This,
            /* [in] */ DWORD dwVersion,
            /* [in] */ DWORD dwOutputId,
            /* [in] */ BYTE *pbCert,
            /* [in] */ DWORD cbCert,
            /* [out] */ BYTE **ppbSeed,
            /* [out] */ DWORD *pcbSeed);
        
        HRESULT ( STDMETHODCALLTYPE *InitInputProtection )( 
            IMFSampleProtection * This,
            /* [in] */ DWORD dwVersion,
            /* [in] */ DWORD dwInputId,
            /* [in] */ BYTE *pbSeed,
            /* [in] */ DWORD cbSeed);
        
        END_INTERFACE
    } IMFSampleProtectionVtbl;

    interface IMFSampleProtection
    {
        CONST_VTBL struct IMFSampleProtectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSampleProtection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSampleProtection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSampleProtection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSampleProtection_GetInputProtectionVersion(This,pdwVersion)	\
    ( (This)->lpVtbl -> GetInputProtectionVersion(This,pdwVersion) ) 

#define IMFSampleProtection_GetOutputProtectionVersion(This,pdwVersion)	\
    ( (This)->lpVtbl -> GetOutputProtectionVersion(This,pdwVersion) ) 

#define IMFSampleProtection_GetProtectionCertificate(This,dwVersion,ppCert,pcbCert)	\
    ( (This)->lpVtbl -> GetProtectionCertificate(This,dwVersion,ppCert,pcbCert) ) 

#define IMFSampleProtection_InitOutputProtection(This,dwVersion,dwOutputId,pbCert,cbCert,ppbSeed,pcbSeed)	\
    ( (This)->lpVtbl -> InitOutputProtection(This,dwVersion,dwOutputId,pbCert,cbCert,ppbSeed,pcbSeed) ) 

#define IMFSampleProtection_InitInputProtection(This,dwVersion,dwInputId,pbSeed,cbSeed)	\
    ( (This)->lpVtbl -> InitInputProtection(This,dwVersion,dwInputId,pbSeed,cbSeed) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSampleProtection_INTERFACE_DEFINED__ */


#ifndef __IMFMediaSinkPreroll_INTERFACE_DEFINED__
#define __IMFMediaSinkPreroll_INTERFACE_DEFINED__

/* interface IMFMediaSinkPreroll */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFMediaSinkPreroll;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5dfd4b2a-7674-4110-a4e6-8a68fd5f3688")
    IMFMediaSinkPreroll : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE NotifyPreroll( 
            /* [in] */ MFTIME hnsUpcomingStartTime) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFMediaSinkPrerollVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFMediaSinkPreroll * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFMediaSinkPreroll * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFMediaSinkPreroll * This);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyPreroll )( 
            __RPC__in IMFMediaSinkPreroll * This,
            /* [in] */ MFTIME hnsUpcomingStartTime);
        
        END_INTERFACE
    } IMFMediaSinkPrerollVtbl;

    interface IMFMediaSinkPreroll
    {
        CONST_VTBL struct IMFMediaSinkPrerollVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFMediaSinkPreroll_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFMediaSinkPreroll_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFMediaSinkPreroll_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFMediaSinkPreroll_NotifyPreroll(This,hnsUpcomingStartTime)	\
    ( (This)->lpVtbl -> NotifyPreroll(This,hnsUpcomingStartTime) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFMediaSinkPreroll_INTERFACE_DEFINED__ */


#ifndef __IMFFinalizableMediaSink_INTERFACE_DEFINED__
#define __IMFFinalizableMediaSink_INTERFACE_DEFINED__

/* interface IMFFinalizableMediaSink */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFFinalizableMediaSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EAECB74A-9A50-42ce-9541-6A7F57AA4AD7")
    IMFFinalizableMediaSink : public IMFMediaSink
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BeginFinalize( 
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndFinalize( 
            /* [in] */ IMFAsyncResult *pResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFFinalizableMediaSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFFinalizableMediaSink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFFinalizableMediaSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFFinalizableMediaSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCharacteristics )( 
            IMFFinalizableMediaSink * This,
            /* [out] */ DWORD *pdwCharacteristics);
        
        HRESULT ( STDMETHODCALLTYPE *AddStreamSink )( 
            IMFFinalizableMediaSink * This,
            /* [in] */ DWORD dwStreamSinkIdentifier,
            /* [in] */ IMFMediaType *pMediaType,
            /* [out] */ IMFStreamSink **ppStreamSink);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveStreamSink )( 
            IMFFinalizableMediaSink * This,
            /* [in] */ DWORD dwStreamSinkIdentifier);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamSinkCount )( 
            IMFFinalizableMediaSink * This,
            /* [out] */ DWORD *pcStreamSinkCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamSinkByIndex )( 
            IMFFinalizableMediaSink * This,
            /* [in] */ DWORD dwIndex,
            /* [out] */ IMFStreamSink **ppStreamSink);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamSinkById )( 
            IMFFinalizableMediaSink * This,
            /* [in] */ DWORD dwStreamSinkIdentifier,
            /* [out] */ IMFStreamSink **ppStreamSink);
        
        HRESULT ( STDMETHODCALLTYPE *SetPresentationClock )( 
            IMFFinalizableMediaSink * This,
            /* [in] */ IMFPresentationClock *pPresentationClock);
        
        HRESULT ( STDMETHODCALLTYPE *GetPresentationClock )( 
            IMFFinalizableMediaSink * This,
            /* [out] */ IMFPresentationClock **ppPresentationClock);
        
        HRESULT ( STDMETHODCALLTYPE *Shutdown )( 
            IMFFinalizableMediaSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *BeginFinalize )( 
            IMFFinalizableMediaSink * This,
            /* [in] */ IMFAsyncCallback *pCallback,
            /* [in] */ IUnknown *punkState);
        
        HRESULT ( STDMETHODCALLTYPE *EndFinalize )( 
            IMFFinalizableMediaSink * This,
            /* [in] */ IMFAsyncResult *pResult);
        
        END_INTERFACE
    } IMFFinalizableMediaSinkVtbl;

    interface IMFFinalizableMediaSink
    {
        CONST_VTBL struct IMFFinalizableMediaSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFFinalizableMediaSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFFinalizableMediaSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFFinalizableMediaSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFFinalizableMediaSink_GetCharacteristics(This,pdwCharacteristics)	\
    ( (This)->lpVtbl -> GetCharacteristics(This,pdwCharacteristics) ) 

#define IMFFinalizableMediaSink_AddStreamSink(This,dwStreamSinkIdentifier,pMediaType,ppStreamSink)	\
    ( (This)->lpVtbl -> AddStreamSink(This,dwStreamSinkIdentifier,pMediaType,ppStreamSink) ) 

#define IMFFinalizableMediaSink_RemoveStreamSink(This,dwStreamSinkIdentifier)	\
    ( (This)->lpVtbl -> RemoveStreamSink(This,dwStreamSinkIdentifier) ) 

#define IMFFinalizableMediaSink_GetStreamSinkCount(This,pcStreamSinkCount)	\
    ( (This)->lpVtbl -> GetStreamSinkCount(This,pcStreamSinkCount) ) 

#define IMFFinalizableMediaSink_GetStreamSinkByIndex(This,dwIndex,ppStreamSink)	\
    ( (This)->lpVtbl -> GetStreamSinkByIndex(This,dwIndex,ppStreamSink) ) 

#define IMFFinalizableMediaSink_GetStreamSinkById(This,dwStreamSinkIdentifier,ppStreamSink)	\
    ( (This)->lpVtbl -> GetStreamSinkById(This,dwStreamSinkIdentifier,ppStreamSink) ) 

#define IMFFinalizableMediaSink_SetPresentationClock(This,pPresentationClock)	\
    ( (This)->lpVtbl -> SetPresentationClock(This,pPresentationClock) ) 

#define IMFFinalizableMediaSink_GetPresentationClock(This,ppPresentationClock)	\
    ( (This)->lpVtbl -> GetPresentationClock(This,ppPresentationClock) ) 

#define IMFFinalizableMediaSink_Shutdown(This)	\
    ( (This)->lpVtbl -> Shutdown(This) ) 


#define IMFFinalizableMediaSink_BeginFinalize(This,pCallback,punkState)	\
    ( (This)->lpVtbl -> BeginFinalize(This,pCallback,punkState) ) 

#define IMFFinalizableMediaSink_EndFinalize(This,pResult)	\
    ( (This)->lpVtbl -> EndFinalize(This,pResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFFinalizableMediaSink_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0067 */
/* [local] */ 

#if (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0067_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0067_v0_0_s_ifspec;

#ifndef __IMFStreamingSinkConfig_INTERFACE_DEFINED__
#define __IMFStreamingSinkConfig_INTERFACE_DEFINED__

/* interface IMFStreamingSinkConfig */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFStreamingSinkConfig;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9db7aa41-3cc5-40d4-8509-555804ad34cc")
    IMFStreamingSinkConfig : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE StartStreaming( 
            /* [in] */ BOOL fSeekOffsetIsByteOffset,
            /* [in] */ QWORD qwSeekOffset) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFStreamingSinkConfigVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFStreamingSinkConfig * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFStreamingSinkConfig * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFStreamingSinkConfig * This);
        
        HRESULT ( STDMETHODCALLTYPE *StartStreaming )( 
            __RPC__in IMFStreamingSinkConfig * This,
            /* [in] */ BOOL fSeekOffsetIsByteOffset,
            /* [in] */ QWORD qwSeekOffset);
        
        END_INTERFACE
    } IMFStreamingSinkConfigVtbl;

    interface IMFStreamingSinkConfig
    {
        CONST_VTBL struct IMFStreamingSinkConfigVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFStreamingSinkConfig_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFStreamingSinkConfig_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFStreamingSinkConfig_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFStreamingSinkConfig_StartStreaming(This,fSeekOffsetIsByteOffset,qwSeekOffset)	\
    ( (This)->lpVtbl -> StartStreaming(This,fSeekOffsetIsByteOffset,qwSeekOffset) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFStreamingSinkConfig_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0068 */
/* [local] */ 

#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0068_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0068_v0_0_s_ifspec;

#ifndef __IMFRemoteProxy_INTERFACE_DEFINED__
#define __IMFRemoteProxy_INTERFACE_DEFINED__

/* interface IMFRemoteProxy */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFRemoteProxy;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("994e23ad-1cc2-493c-b9fa-46f1cb040fa4")
    IMFRemoteProxy : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetRemoteObject( 
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __out  void **ppv) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRemoteHost( 
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __out  void **ppv) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFRemoteProxyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFRemoteProxy * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFRemoteProxy * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFRemoteProxy * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetRemoteObject )( 
            IMFRemoteProxy * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __out  void **ppv);
        
        HRESULT ( STDMETHODCALLTYPE *GetRemoteHost )( 
            IMFRemoteProxy * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __out  void **ppv);
        
        END_INTERFACE
    } IMFRemoteProxyVtbl;

    interface IMFRemoteProxy
    {
        CONST_VTBL struct IMFRemoteProxyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFRemoteProxy_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFRemoteProxy_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFRemoteProxy_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFRemoteProxy_GetRemoteObject(This,riid,ppv)	\
    ( (This)->lpVtbl -> GetRemoteObject(This,riid,ppv) ) 

#define IMFRemoteProxy_GetRemoteHost(This,riid,ppv)	\
    ( (This)->lpVtbl -> GetRemoteHost(This,riid,ppv) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFRemoteProxy_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0069 */
/* [local] */ 

EXTERN_GUID( MF_REMOTE_PROXY, 0x2f00c90e, 0xd2cf, 0x4278, 0x8b, 0x6a, 0xd0, 0x77, 0xfa, 0xc3, 0xa2, 0x5f);


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0069_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0069_v0_0_s_ifspec;

#ifndef __IMFObjectReferenceStream_INTERFACE_DEFINED__
#define __IMFObjectReferenceStream_INTERFACE_DEFINED__

/* interface IMFObjectReferenceStream */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFObjectReferenceStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("09EF5BE3-C8A7-469e-8B70-73BF25BB193F")
    IMFObjectReferenceStream : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SaveReference( 
            /* [in] */ REFIID riid,
            /* [in] */ IUnknown *pUnk) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LoadReference( 
            /* [in] */ REFIID riid,
            /* [out] */ void **ppv) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFObjectReferenceStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFObjectReferenceStream * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFObjectReferenceStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFObjectReferenceStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *SaveReference )( 
            IMFObjectReferenceStream * This,
            /* [in] */ REFIID riid,
            /* [in] */ IUnknown *pUnk);
        
        HRESULT ( STDMETHODCALLTYPE *LoadReference )( 
            IMFObjectReferenceStream * This,
            /* [in] */ REFIID riid,
            /* [out] */ void **ppv);
        
        END_INTERFACE
    } IMFObjectReferenceStreamVtbl;

    interface IMFObjectReferenceStream
    {
        CONST_VTBL struct IMFObjectReferenceStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFObjectReferenceStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFObjectReferenceStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFObjectReferenceStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFObjectReferenceStream_SaveReference(This,riid,pUnk)	\
    ( (This)->lpVtbl -> SaveReference(This,riid,pUnk) ) 

#define IMFObjectReferenceStream_LoadReference(This,riid,ppv)	\
    ( (This)->lpVtbl -> LoadReference(This,riid,ppv) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFObjectReferenceStream_INTERFACE_DEFINED__ */


#ifndef __IMFPMPHost_INTERFACE_DEFINED__
#define __IMFPMPHost_INTERFACE_DEFINED__

/* interface IMFPMPHost */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFPMPHost;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F70CA1A9-FDC7-4782-B994-ADFFB1C98606")
    IMFPMPHost : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE LockProcess( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnlockProcess( void) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE CreateObjectByCLSID( 
            /* [in] */ REFCLSID clsid,
            /* [unique][in] */ IStream *pStream,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFPMPHostVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFPMPHost * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFPMPHost * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFPMPHost * This);
        
        HRESULT ( STDMETHODCALLTYPE *LockProcess )( 
            __RPC__in IMFPMPHost * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockProcess )( 
            __RPC__in IMFPMPHost * This);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *CreateObjectByCLSID )( 
            IMFPMPHost * This,
            /* [in] */ REFCLSID clsid,
            /* [unique][in] */ IStream *pStream,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppv);
        
        END_INTERFACE
    } IMFPMPHostVtbl;

    interface IMFPMPHost
    {
        CONST_VTBL struct IMFPMPHostVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFPMPHost_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFPMPHost_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFPMPHost_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFPMPHost_LockProcess(This)	\
    ( (This)->lpVtbl -> LockProcess(This) ) 

#define IMFPMPHost_UnlockProcess(This)	\
    ( (This)->lpVtbl -> UnlockProcess(This) ) 

#define IMFPMPHost_CreateObjectByCLSID(This,clsid,pStream,riid,ppv)	\
    ( (This)->lpVtbl -> CreateObjectByCLSID(This,clsid,pStream,riid,ppv) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFPMPHost_RemoteCreateObjectByCLSID_Proxy( 
    __RPC__in IMFPMPHost * This,
    /* [in] */ __RPC__in REFCLSID clsid,
    /* [size_is][unique][in] */ __RPC__in_ecount_full_opt(cbData) BYTE *pbData,
    /* [in] */ DWORD cbData,
    /* [in] */ __RPC__in REFIID riid,
    /* [iid_is][out] */ __RPC__deref_out_opt void **ppv);


void __RPC_STUB IMFPMPHost_RemoteCreateObjectByCLSID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMFPMPHost_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0071 */
/* [local] */ 

#if (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_C const GUID MF_PMP_SERVICE;
#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0071_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0071_v0_0_s_ifspec;

#ifndef __IMFPMPClient_INTERFACE_DEFINED__
#define __IMFPMPClient_INTERFACE_DEFINED__

/* interface IMFPMPClient */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFPMPClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6C4E655D-EAD8-4421-B6B9-54DCDBBDF820")
    IMFPMPClient : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetPMPHost( 
            /* [in] */ IMFPMPHost *pPMPHost) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFPMPClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFPMPClient * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFPMPClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFPMPClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetPMPHost )( 
            IMFPMPClient * This,
            /* [in] */ IMFPMPHost *pPMPHost);
        
        END_INTERFACE
    } IMFPMPClientVtbl;

    interface IMFPMPClient
    {
        CONST_VTBL struct IMFPMPClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFPMPClient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFPMPClient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFPMPClient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFPMPClient_SetPMPHost(This,pPMPHost)	\
    ( (This)->lpVtbl -> SetPMPHost(This,pPMPHost) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFPMPClient_INTERFACE_DEFINED__ */


#ifndef __IMFPMPServer_INTERFACE_DEFINED__
#define __IMFPMPServer_INTERFACE_DEFINED__

/* interface IMFPMPServer */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFPMPServer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("994e23af-1cc2-493c-b9fa-46f1cb040fa4")
    IMFPMPServer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE LockProcess( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnlockProcess( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateObjectByCLSID( 
            /* [in] */ __RPC__in REFCLSID clsid,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt void **ppObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFPMPServerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFPMPServer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFPMPServer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFPMPServer * This);
        
        HRESULT ( STDMETHODCALLTYPE *LockProcess )( 
            __RPC__in IMFPMPServer * This);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockProcess )( 
            __RPC__in IMFPMPServer * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateObjectByCLSID )( 
            __RPC__in IMFPMPServer * This,
            /* [in] */ __RPC__in REFCLSID clsid,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ __RPC__deref_out_opt void **ppObject);
        
        END_INTERFACE
    } IMFPMPServerVtbl;

    interface IMFPMPServer
    {
        CONST_VTBL struct IMFPMPServerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFPMPServer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFPMPServer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFPMPServer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFPMPServer_LockProcess(This)	\
    ( (This)->lpVtbl -> LockProcess(This) ) 

#define IMFPMPServer_UnlockProcess(This)	\
    ( (This)->lpVtbl -> UnlockProcess(This) ) 

#define IMFPMPServer_CreateObjectByCLSID(This,clsid,riid,ppObject)	\
    ( (This)->lpVtbl -> CreateObjectByCLSID(This,clsid,riid,ppObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFPMPServer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0073 */
/* [local] */ 

STDAPI MFCreatePMPServer(
    DWORD dwCreationFlags,
    __out IMFPMPServer** ppPMPServer
    );


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0073_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0073_v0_0_s_ifspec;

#ifndef __IMFRemoteDesktopPlugin_INTERFACE_DEFINED__
#define __IMFRemoteDesktopPlugin_INTERFACE_DEFINED__

/* interface IMFRemoteDesktopPlugin */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFRemoteDesktopPlugin;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1cde6309-cae0-4940-907e-c1ec9c3d1d4a")
    IMFRemoteDesktopPlugin : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE UpdateTopology( 
            /* [out][in] */ IMFTopology *pTopology) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFRemoteDesktopPluginVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFRemoteDesktopPlugin * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFRemoteDesktopPlugin * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFRemoteDesktopPlugin * This);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateTopology )( 
            IMFRemoteDesktopPlugin * This,
            /* [out][in] */ IMFTopology *pTopology);
        
        END_INTERFACE
    } IMFRemoteDesktopPluginVtbl;

    interface IMFRemoteDesktopPlugin
    {
        CONST_VTBL struct IMFRemoteDesktopPluginVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFRemoteDesktopPlugin_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFRemoteDesktopPlugin_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFRemoteDesktopPlugin_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFRemoteDesktopPlugin_UpdateTopology(This,pTopology)	\
    ( (This)->lpVtbl -> UpdateTopology(This,pTopology) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFRemoteDesktopPlugin_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0074 */
/* [local] */ 

STDAPI MFCreateRemoteDesktopPlugin(
    __out IMFRemoteDesktopPlugin** ppPlugin );
EXTERN_C HRESULT STDAPICALLTYPE CreateNamedPropertyStore(
        __out INamedPropertyStore **ppStore
        );



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0074_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0074_v0_0_s_ifspec;

#ifndef __IMFSAMIStyle_INTERFACE_DEFINED__
#define __IMFSAMIStyle_INTERFACE_DEFINED__

/* interface IMFSAMIStyle */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFSAMIStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7E025DD-5303-4a62-89D6-E747E1EFAC73")
    IMFSAMIStyle : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStyleCount( 
            /* [annotation][out] */ 
            __out  DWORD *pdwCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStyles( 
            /* [annotation][out] */ 
            __out  PROPVARIANT *pPropVarStyleArray) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSelectedStyle( 
            /* [annotation][in] */ 
            __in  LPCWSTR pwszStyle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelectedStyle( 
            /* [annotation][out] */ 
            __deref_out  LPWSTR *ppwszStyle) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSAMIStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFSAMIStyle * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFSAMIStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFSAMIStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetStyleCount )( 
            IMFSAMIStyle * This,
            /* [annotation][out] */ 
            __out  DWORD *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetStyles )( 
            IMFSAMIStyle * This,
            /* [annotation][out] */ 
            __out  PROPVARIANT *pPropVarStyleArray);
        
        HRESULT ( STDMETHODCALLTYPE *SetSelectedStyle )( 
            IMFSAMIStyle * This,
            /* [annotation][in] */ 
            __in  LPCWSTR pwszStyle);
        
        HRESULT ( STDMETHODCALLTYPE *GetSelectedStyle )( 
            IMFSAMIStyle * This,
            /* [annotation][out] */ 
            __deref_out  LPWSTR *ppwszStyle);
        
        END_INTERFACE
    } IMFSAMIStyleVtbl;

    interface IMFSAMIStyle
    {
        CONST_VTBL struct IMFSAMIStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSAMIStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSAMIStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSAMIStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSAMIStyle_GetStyleCount(This,pdwCount)	\
    ( (This)->lpVtbl -> GetStyleCount(This,pdwCount) ) 

#define IMFSAMIStyle_GetStyles(This,pPropVarStyleArray)	\
    ( (This)->lpVtbl -> GetStyles(This,pPropVarStyleArray) ) 

#define IMFSAMIStyle_SetSelectedStyle(This,pwszStyle)	\
    ( (This)->lpVtbl -> SetSelectedStyle(This,pwszStyle) ) 

#define IMFSAMIStyle_GetSelectedStyle(This,ppwszStyle)	\
    ( (This)->lpVtbl -> GetSelectedStyle(This,ppwszStyle) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSAMIStyle_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0075 */
/* [local] */ 

EXTERN_GUID( MF_SAMI_SERVICE, 0x49a89ae7, 0xb4d9, 0x4ef2, 0xaa, 0x5c, 0xf6, 0x5a, 0x3e, 0x5, 0xae, 0x4e );
EXTERN_GUID( MF_PD_SAMI_STYLELIST, 0xe0b73c7f, 0x486d, 0x484e, 0x98, 0x72, 0x4d, 0xe5, 0x19, 0x2a, 0x7b, 0xf8 );
EXTERN_GUID( MF_SD_SAMI_LANGUAGE, 0x36fcb98a, 0x6cd0, 0x44cb, 0xac, 0xb9, 0xa8, 0xf5, 0x60, 0xd, 0xd0, 0xbb );
#if (WINVER >= _WIN32_WINNT_WIN7) 
STDAPI MFCreateSampleCopierMFT(__deref_out IMFTransform** ppCopierMFT);


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0075_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0075_v0_0_s_ifspec;

#ifndef __IMFTranscodeProfile_INTERFACE_DEFINED__
#define __IMFTranscodeProfile_INTERFACE_DEFINED__

/* interface IMFTranscodeProfile */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFTranscodeProfile;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4ADFDBA3-7AB0-4953-A62B-461E7FF3DA1E")
    IMFTranscodeProfile : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetAudioAttributes( 
            /* [annotation][in] */ 
            __in_opt  IMFAttributes *pAttrs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAudioAttributes( 
            /* [annotation][out] */ 
            __deref_out_opt  IMFAttributes **ppAttrs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVideoAttributes( 
            /* [annotation][in] */ 
            __in_opt  IMFAttributes *pAttrs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVideoAttributes( 
            /* [annotation][out] */ 
            __deref_out_opt  IMFAttributes **ppAttrs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetContainerAttributes( 
            /* [annotation][in] */ 
            __in_opt  IMFAttributes *pAttrs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContainerAttributes( 
            /* [annotation][out] */ 
            __deref_out_opt  IMFAttributes **ppAttrs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFTranscodeProfileVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFTranscodeProfile * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFTranscodeProfile * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFTranscodeProfile * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetAudioAttributes )( 
            IMFTranscodeProfile * This,
            /* [annotation][in] */ 
            __in_opt  IMFAttributes *pAttrs);
        
        HRESULT ( STDMETHODCALLTYPE *GetAudioAttributes )( 
            IMFTranscodeProfile * This,
            /* [annotation][out] */ 
            __deref_out_opt  IMFAttributes **ppAttrs);
        
        HRESULT ( STDMETHODCALLTYPE *SetVideoAttributes )( 
            IMFTranscodeProfile * This,
            /* [annotation][in] */ 
            __in_opt  IMFAttributes *pAttrs);
        
        HRESULT ( STDMETHODCALLTYPE *GetVideoAttributes )( 
            IMFTranscodeProfile * This,
            /* [annotation][out] */ 
            __deref_out_opt  IMFAttributes **ppAttrs);
        
        HRESULT ( STDMETHODCALLTYPE *SetContainerAttributes )( 
            IMFTranscodeProfile * This,
            /* [annotation][in] */ 
            __in_opt  IMFAttributes *pAttrs);
        
        HRESULT ( STDMETHODCALLTYPE *GetContainerAttributes )( 
            IMFTranscodeProfile * This,
            /* [annotation][out] */ 
            __deref_out_opt  IMFAttributes **ppAttrs);
        
        END_INTERFACE
    } IMFTranscodeProfileVtbl;

    interface IMFTranscodeProfile
    {
        CONST_VTBL struct IMFTranscodeProfileVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFTranscodeProfile_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFTranscodeProfile_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFTranscodeProfile_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFTranscodeProfile_SetAudioAttributes(This,pAttrs)	\
    ( (This)->lpVtbl -> SetAudioAttributes(This,pAttrs) ) 

#define IMFTranscodeProfile_GetAudioAttributes(This,ppAttrs)	\
    ( (This)->lpVtbl -> GetAudioAttributes(This,ppAttrs) ) 

#define IMFTranscodeProfile_SetVideoAttributes(This,pAttrs)	\
    ( (This)->lpVtbl -> SetVideoAttributes(This,pAttrs) ) 

#define IMFTranscodeProfile_GetVideoAttributes(This,ppAttrs)	\
    ( (This)->lpVtbl -> GetVideoAttributes(This,ppAttrs) ) 

#define IMFTranscodeProfile_SetContainerAttributes(This,pAttrs)	\
    ( (This)->lpVtbl -> SetContainerAttributes(This,pAttrs) ) 

#define IMFTranscodeProfile_GetContainerAttributes(This,ppAttrs)	\
    ( (This)->lpVtbl -> GetContainerAttributes(This,ppAttrs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFTranscodeProfile_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0076 */
/* [local] */ 

EXTERN_GUID( MF_TRANSCODE_CONTAINERTYPE, 0x150ff23f, 0x4abc, 0x478b, 0xac, 0x4f, 0xe1, 0x91, 0x6f, 0xba, 0x1c, 0xca );
EXTERN_GUID( MFTranscodeContainerType_ASF, 0x430f6f6e, 0xb6bf, 0x4fc1, 0xa0, 0xbd, 0x9e, 0xe4, 0x6e, 0xee, 0x2a, 0xfb );
EXTERN_GUID( MFTranscodeContainerType_MPEG4, 0xdc6cd05d, 0xb9d0, 0x40ef, 0xbd, 0x35, 0xfa, 0x62, 0x2c, 0x1a, 0xb2, 0x8a );
EXTERN_GUID( MFTranscodeContainerType_MP3, 0xe438b912, 0x83f1, 0x4de6, 0x9e, 0x3a, 0x9f, 0xfb, 0xc6, 0xdd, 0x24, 0xd1 );
EXTERN_GUID( MFTranscodeContainerType_3GP, 0x34c50167, 0x4472, 0x4f34, 0x9e, 0xa0, 0xc4, 0x9f, 0xba, 0xcf, 0x03, 0x7d );
EXTERN_GUID( MF_TRANSCODE_SKIP_METADATA_TRANSFER, 0x4e4469ef, 0xb571, 0x4959, 0x8f, 0x83, 0x3d, 0xcf, 0xba, 0x33, 0xa3, 0x93 );
EXTERN_GUID( MF_TRANSCODE_TOPOLOGYMODE, 0x3e3df610, 0x394a, 0x40b2, 0x9d, 0xea, 0x3b, 0xab, 0x65, 0xb, 0xeb, 0xf2 );
typedef 
enum _MF_TRANSCODE_TOPOLOGYMODE_FLAGS
    {	MF_TRANSCODE_TOPOLOGYMODE_SOFTWARE_ONLY	= 0,
	MF_TRANSCODE_TOPOLOGYMODE_HARDWARE_ALLOWED	= 1
    } 	MF_TRANSCODE_TOPOLOGYMODE_FLAGS;

EXTERN_GUID( MF_TRANSCODE_ADJUST_PROFILE, 0x9c37c21b, 0x60f, 0x487c, 0xa6, 0x90, 0x80, 0xd7, 0xf5, 0xd, 0x1c, 0x72 );
typedef 
enum _MF_TRANSCODE_ADJUST_PROFILE_FLAGS
    {	MF_TRANSCODE_ADJUST_PROFILE_DEFAULT	= 0,
	MF_TRANSCODE_ADJUST_PROFILE_USE_SOURCE_ATTRIBUTES	= 1
    } 	MF_TRANSCODE_ADJUST_PROFILE_FLAGS;

EXTERN_GUID( MF_TRANSCODE_ENCODINGPROFILE, 0x6947787c, 0xf508, 0x4ea9, 0xb1, 0xe9, 0xa1, 0xfe, 0x3a, 0x49, 0xfb, 0xc9 );
EXTERN_GUID( MF_TRANSCODE_QUALITYVSSPEED, 0x98332df8, 0x03cd, 0x476b, 0x89, 0xfa, 0x3f, 0x9e, 0x44, 0x2d, 0xec, 0x9f );
EXTERN_GUID( MF_TRANSCODE_DONOT_INSERT_ENCODER, 0xf45aa7ce, 0xab24, 0x4012, 0xa1, 0x1b, 0xdc, 0x82, 0x20, 0x20, 0x14, 0x10 );
STDAPI MFCreateTranscodeProfile(
    __out IMFTranscodeProfile** ppTranscodeProfile
    );
STDAPI MFCreateTranscodeTopology(
    __in IMFMediaSource* pSrc,
    __in LPCWSTR pwszOutputFilePath,
    __in IMFTranscodeProfile* pProfile,
    __out IMFTopology** ppTranscodeTopo
    );
STDAPI MFTranscodeGetAudioOutputAvailableTypes(
 __in REFGUID guidSubType,
 __in DWORD dwMFTFlags,
 __in_opt IMFAttributes* pCodecConfig, 
 __out IMFCollection** ppAvailableTypes );
typedef struct _MF_TRANSCODE_SINK_INFO
    {
    DWORD dwVideoStreamID;
    IMFMediaType *pVideoMediaType;
    DWORD dwAudioStreamID;
    IMFMediaType *pAudioMediaType;
    } 	MF_TRANSCODE_SINK_INFO;



extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0076_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0076_v0_0_s_ifspec;

#ifndef __IMFTranscodeSinkInfoProvider_INTERFACE_DEFINED__
#define __IMFTranscodeSinkInfoProvider_INTERFACE_DEFINED__

/* interface IMFTranscodeSinkInfoProvider */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFTranscodeSinkInfoProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8CFFCD2E-5A03-4a3a-AFF7-EDCD107C620E")
    IMFTranscodeSinkInfoProvider : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetOutputFile( 
            /* [annotation][in] */ 
            __in  LPCWSTR pwszFileName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOutputByteStream( 
            /* [annotation][in] */ 
            __in  IMFActivate *pByteStreamActivate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProfile( 
            /* [annotation][in] */ 
            __in  IMFTranscodeProfile *pProfile) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSinkInfo( 
            /* [annotation][out] */ 
            __out  MF_TRANSCODE_SINK_INFO *pSinkInfo) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFTranscodeSinkInfoProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFTranscodeSinkInfoProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFTranscodeSinkInfoProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFTranscodeSinkInfoProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetOutputFile )( 
            IMFTranscodeSinkInfoProvider * This,
            /* [annotation][in] */ 
            __in  LPCWSTR pwszFileName);
        
        HRESULT ( STDMETHODCALLTYPE *SetOutputByteStream )( 
            IMFTranscodeSinkInfoProvider * This,
            /* [annotation][in] */ 
            __in  IMFActivate *pByteStreamActivate);
        
        HRESULT ( STDMETHODCALLTYPE *SetProfile )( 
            IMFTranscodeSinkInfoProvider * This,
            /* [annotation][in] */ 
            __in  IMFTranscodeProfile *pProfile);
        
        HRESULT ( STDMETHODCALLTYPE *GetSinkInfo )( 
            IMFTranscodeSinkInfoProvider * This,
            /* [annotation][out] */ 
            __out  MF_TRANSCODE_SINK_INFO *pSinkInfo);
        
        END_INTERFACE
    } IMFTranscodeSinkInfoProviderVtbl;

    interface IMFTranscodeSinkInfoProvider
    {
        CONST_VTBL struct IMFTranscodeSinkInfoProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFTranscodeSinkInfoProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFTranscodeSinkInfoProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFTranscodeSinkInfoProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFTranscodeSinkInfoProvider_SetOutputFile(This,pwszFileName)	\
    ( (This)->lpVtbl -> SetOutputFile(This,pwszFileName) ) 

#define IMFTranscodeSinkInfoProvider_SetOutputByteStream(This,pByteStreamActivate)	\
    ( (This)->lpVtbl -> SetOutputByteStream(This,pByteStreamActivate) ) 

#define IMFTranscodeSinkInfoProvider_SetProfile(This,pProfile)	\
    ( (This)->lpVtbl -> SetProfile(This,pProfile) ) 

#define IMFTranscodeSinkInfoProvider_GetSinkInfo(This,pSinkInfo)	\
    ( (This)->lpVtbl -> GetSinkInfo(This,pSinkInfo) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFTranscodeSinkInfoProvider_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0077 */
/* [local] */ 

 STDAPI MFCreateTranscodeSinkActivate( 
 __out IMFActivate** ppActivate ); 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0077_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0077_v0_0_s_ifspec;

#ifndef __IMFFieldOfUseMFTUnlock_INTERFACE_DEFINED__
#define __IMFFieldOfUseMFTUnlock_INTERFACE_DEFINED__

/* interface IMFFieldOfUseMFTUnlock */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFFieldOfUseMFTUnlock;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("508E71D3-EC66-4fc3-8775-B4B9ED6BA847")
    IMFFieldOfUseMFTUnlock : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Unlock( 
            /* [in] */ __RPC__in_opt IUnknown *pUnkMFT) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFFieldOfUseMFTUnlockVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFFieldOfUseMFTUnlock * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFFieldOfUseMFTUnlock * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFFieldOfUseMFTUnlock * This);
        
        HRESULT ( STDMETHODCALLTYPE *Unlock )( 
            __RPC__in IMFFieldOfUseMFTUnlock * This,
            /* [in] */ __RPC__in_opt IUnknown *pUnkMFT);
        
        END_INTERFACE
    } IMFFieldOfUseMFTUnlockVtbl;

    interface IMFFieldOfUseMFTUnlock
    {
        CONST_VTBL struct IMFFieldOfUseMFTUnlockVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFFieldOfUseMFTUnlock_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFFieldOfUseMFTUnlock_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFFieldOfUseMFTUnlock_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFFieldOfUseMFTUnlock_Unlock(This,pUnkMFT)	\
    ( (This)->lpVtbl -> Unlock(This,pUnkMFT) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFFieldOfUseMFTUnlock_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0078 */
/* [local] */ 

typedef struct _MFT_REGISTRATION_INFO
    {
    CLSID clsid;
    GUID guidCategory;
    UINT32 uiFlags;
    LPCWSTR pszName;
    DWORD cInTypes;
    MFT_REGISTER_TYPE_INFO *pInTypes;
    DWORD cOutTypes;
    MFT_REGISTER_TYPE_INFO *pOutTypes;
    } 	MFT_REGISTRATION_INFO;

EXTERN_GUID(MF_LOCAL_MFT_REGISTRATION_SERVICE, 0xddf5cf9c, 0x4506, 0x45aa, 0xab, 0xf0, 0x6d, 0x5d, 0x94, 0xdd, 0x1b, 0x4a);


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0078_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0078_v0_0_s_ifspec;

#ifndef __IMFLocalMFTRegistration_INTERFACE_DEFINED__
#define __IMFLocalMFTRegistration_INTERFACE_DEFINED__

/* interface IMFLocalMFTRegistration */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFLocalMFTRegistration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("149c4d73-b4be-4f8d-8b87-079e926b6add")
    IMFLocalMFTRegistration : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RegisterMFTs( 
            /* [size_is][in] */ __RPC__in_ecount_full(cMFTs) MFT_REGISTRATION_INFO *pMFTs,
            DWORD cMFTs) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFLocalMFTRegistrationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFLocalMFTRegistration * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFLocalMFTRegistration * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFLocalMFTRegistration * This);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterMFTs )( 
            __RPC__in IMFLocalMFTRegistration * This,
            /* [size_is][in] */ __RPC__in_ecount_full(cMFTs) MFT_REGISTRATION_INFO *pMFTs,
            DWORD cMFTs);
        
        END_INTERFACE
    } IMFLocalMFTRegistrationVtbl;

    interface IMFLocalMFTRegistration
    {
        CONST_VTBL struct IMFLocalMFTRegistrationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFLocalMFTRegistration_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFLocalMFTRegistration_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFLocalMFTRegistration_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFLocalMFTRegistration_RegisterMFTs(This,pMFTs,cMFTs)	\
    ( (This)->lpVtbl -> RegisterMFTs(This,pMFTs,cMFTs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFLocalMFTRegistration_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfidl_0000_0079 */
/* [local] */ 

STDAPI MFCreateMFByteStreamOnStream(
    IStream*        pStream,
    __out IMFByteStream** ppByteStream);
EXTERN_GUID(CLSID_UrlmonSchemePlugin, 0x9ec4b4f9, 0x3029, 0x45ad, 0x94, 0x7b, 0x34, 0x4d, 0xe2, 0xa2, 0x49, 0xe2);
STDAPI MFEnumDeviceSources(
    __in                IMFAttributes*                      pAttributes,
    __deref_out_ecount(*pcSourceActivate) IMFActivate***    pppSourceActivate,
    __out               UINT32*                             pcSourceActivate
);
STDAPI MFCreateDeviceSource(
    __in  IMFAttributes*   pAttributes,
    __out IMFMediaSource** ppSource
);
STDAPI MFCreateDeviceSourceActivate( 
    __in  IMFAttributes*   pAttributes,
    __out IMFActivate**   ppActivate
);
EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE, 0xc60ac5fe, 0x252a, 0x478f, 0xa0, 0xef, 0xbc, 0x8f, 0xa5, 0xf7, 0xca, 0xd3);
EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_HW_SOURCE, 0xde7046ba, 0x54d6, 0x4487, 0xa2, 0xa4, 0xec, 0x7c, 0xd, 0x1b, 0xd1, 0x63);
EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_FRIENDLY_NAME, 0x60d0e559, 0x52f8, 0x4fa2, 0xbb, 0xce, 0xac, 0xdb, 0x34, 0xa8, 0xec, 0x1);
EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_MEDIA_TYPE, 0x56a819ca, 0xc78, 0x4de4, 0xa0, 0xa7, 0x3d, 0xda, 0xba, 0xf, 0x24, 0xd4);
EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_CATEGORY, 0x77f0ae69, 0xc3bd, 0x4509, 0x94, 0x1d, 0x46, 0x7e, 0x4d, 0x24, 0x89, 0x9e);
EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_SYMBOLIC_LINK, 0x58f0aad8, 0x22bf, 0x4f8a, 0xbb, 0x3d, 0xd2, 0xc4, 0x97, 0x8c, 0x6e, 0x2f);
EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_MAX_BUFFERS, 0x7dd9b730, 0x4f2d, 0x41d5, 0x8f, 0x95, 0xc, 0xc9, 0xa9, 0x12, 0xba, 0x26);
EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ENDPOINT_ID, 0x30da9258, 0xfeb9, 0x47a7, 0xa4, 0x53, 0x76, 0x3a, 0x7a, 0x8e, 0x1c, 0x5f);
EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ROLE, 0xbc9d118e, 0x8c67, 0x4a18, 0x85, 0xd4, 0x12, 0xd3, 0x0, 0x40, 0x5, 0x52);
EXTERN_GUID(MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_GUID, 0x14dd9a1c, 0x7cff, 0x41be, 0xb1, 0xb9, 0xba, 0x1a, 0xc6, 0xec, 0xb5, 0x71);
EXTERN_GUID(MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_GUID, 0x8ac3587a, 0x4ae7, 0x42d8, 0x99, 0xe0, 0x0a, 0x60, 0x13, 0xee, 0xf9, 0x0f);
EXTERN_GUID(MFSampleExtension_DeviceTimestamp, 0x8f3e35e7, 0x2dcd, 0x4887, 0x86, 0x22, 0x2a, 0x58, 0xba, 0xa6, 0x52, 0xb0);
#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0079_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfidl_0000_0079_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  LPSAFEARRAY_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in LPSAFEARRAY * ); 
unsigned char * __RPC_USER  LPSAFEARRAY_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in LPSAFEARRAY * ); 
unsigned char * __RPC_USER  LPSAFEARRAY_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out LPSAFEARRAY * ); 
void                      __RPC_USER  LPSAFEARRAY_UserFree(     __RPC__in unsigned long *, __RPC__in LPSAFEARRAY * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  LPSAFEARRAY_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in LPSAFEARRAY * ); 
unsigned char * __RPC_USER  LPSAFEARRAY_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in LPSAFEARRAY * ); 
unsigned char * __RPC_USER  LPSAFEARRAY_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out LPSAFEARRAY * ); 
void                      __RPC_USER  LPSAFEARRAY_UserFree64(     __RPC__in unsigned long *, __RPC__in LPSAFEARRAY * ); 

/* [local] */ HRESULT STDMETHODCALLTYPE IMFSourceResolver_BeginCreateObjectFromURL_Proxy( 
    IMFSourceResolver * This,
    /* [in] */ LPCWSTR pwszURL,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IPropertyStore *pProps,
    /* [annotation][out] */ 
    __out_opt  IUnknown **ppIUnknownCancelCookie,
    /* [in] */ IMFAsyncCallback *pCallback,
    /* [in] */ IUnknown *punkState);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFSourceResolver_BeginCreateObjectFromURL_Stub( 
    __RPC__in IMFSourceResolver * This,
    /* [string][in] */ __RPC__in_string LPCWSTR pwszURL,
    /* [in] */ DWORD dwFlags,
    /* [in] */ __RPC__in_opt IPropertyStore *pProps,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFSourceResolver_EndCreateObjectFromURL_Proxy( 
    IMFSourceResolver * This,
    /* [in] */ IMFAsyncResult *pResult,
    /* [annotation][out] */ 
    __out  MF_OBJECT_TYPE *pObjectType,
    /* [annotation][out] */ 
    __out  IUnknown **ppObject);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFSourceResolver_EndCreateObjectFromURL_Stub( 
    __RPC__in IMFSourceResolver * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult,
    /* [out] */ __RPC__out MF_OBJECT_TYPE *pObjectType,
    /* [out] */ __RPC__deref_out_opt IUnknown **ppObject);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFSourceResolver_BeginCreateObjectFromByteStream_Proxy( 
    IMFSourceResolver * This,
    /* [in] */ IMFByteStream *pByteStream,
    /* [in] */ LPCWSTR pwszURL,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IPropertyStore *pProps,
    /* [annotation][out] */ 
    __out_opt  IUnknown **ppIUnknownCancelCookie,
    /* [in] */ IMFAsyncCallback *pCallback,
    /* [in] */ IUnknown *punkState);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFSourceResolver_BeginCreateObjectFromByteStream_Stub( 
    __RPC__in IMFSourceResolver * This,
    /* [in] */ __RPC__in_opt IMFByteStream *pByteStream,
    /* [in] */ __RPC__in LPCWSTR pwszURL,
    /* [in] */ DWORD dwFlags,
    /* [in] */ __RPC__in_opt IPropertyStore *pProps,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFSourceResolver_EndCreateObjectFromByteStream_Proxy( 
    IMFSourceResolver * This,
    /* [in] */ IMFAsyncResult *pResult,
    /* [annotation][out] */ 
    __out  MF_OBJECT_TYPE *pObjectType,
    /* [annotation][out] */ 
    __out  IUnknown **ppObject);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFSourceResolver_EndCreateObjectFromByteStream_Stub( 
    __RPC__in IMFSourceResolver * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult,
    /* [out] */ __RPC__out MF_OBJECT_TYPE *pObjectType,
    /* [out] */ __RPC__deref_out_opt IUnknown **ppObject);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFMediaSource_CreatePresentationDescriptor_Proxy( 
    IMFMediaSource * This,
    /* [annotation][out] */ 
    __out  IMFPresentationDescriptor **ppPresentationDescriptor);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFMediaSource_CreatePresentationDescriptor_Stub( 
    __RPC__in IMFMediaSource * This,
    /* [out] */ __RPC__out DWORD *pcbPD,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbPD) BYTE **pbPD,
    /* [out] */ __RPC__deref_out_opt IMFPresentationDescriptor **ppRemotePD);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFMediaStream_RequestSample_Proxy( 
    IMFMediaStream * This,
    /* [in] */ IUnknown *pToken);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFMediaStream_RequestSample_Stub( 
    __RPC__in IMFMediaStream * This);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFTopologyNode_GetOutputPrefType_Proxy( 
    IMFTopologyNode * This,
    /* [in] */ DWORD dwOutputIndex,
    /* [annotation][out] */ 
    __out  IMFMediaType **ppType);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFTopologyNode_GetOutputPrefType_Stub( 
    __RPC__in IMFTopologyNode * This,
    /* [in] */ DWORD dwOutputIndex,
    /* [out] */ __RPC__out DWORD *pcbData,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbData) BYTE **ppbData);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFTopologyNode_GetInputPrefType_Proxy( 
    IMFTopologyNode * This,
    /* [in] */ DWORD dwInputIndex,
    /* [annotation][out] */ 
    __out  IMFMediaType **ppType);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFTopologyNode_GetInputPrefType_Stub( 
    __RPC__in IMFTopologyNode * This,
    /* [in] */ DWORD dwInputIndex,
    /* [out] */ __RPC__out DWORD *pcbData,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*pcbData) BYTE **ppbData);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFMediaTypeHandler_GetCurrentMediaType_Proxy( 
    IMFMediaTypeHandler * This,
    /* [annotation][out] */ 
    __out  IMFMediaType **ppMediaType);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFMediaTypeHandler_GetCurrentMediaType_Stub( 
    __RPC__in IMFMediaTypeHandler * This,
    /* [size_is][size_is][annotation][out] */ 
    __out  BYTE **ppbData,
    /* [out] */ __RPC__out DWORD *pcbData);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFContentProtectionManager_BeginEnableContent_Proxy( 
    IMFContentProtectionManager * This,
    /* [in] */ IMFActivate *pEnablerActivate,
    /* [in] */ IMFTopology *pTopo,
    /* [in] */ IMFAsyncCallback *pCallback,
    /* [in] */ IUnknown *punkState);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFContentProtectionManager_BeginEnableContent_Stub( 
    __RPC__in IMFContentProtectionManager * This,
    /* [in] */ __RPC__in REFCLSID clsidType,
    /* [size_is][in] */ __RPC__in_ecount_full(cbData) BYTE *pbData,
    /* [in] */ DWORD cbData,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFContentProtectionManager_EndEnableContent_Proxy( 
    IMFContentProtectionManager * This,
    /* [in] */ IMFAsyncResult *pResult);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFContentProtectionManager_EndEnableContent_Stub( 
    __RPC__in IMFContentProtectionManager * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_BeginRegisterTopologyWorkQueuesWithMMCSS_Proxy( 
    IMFWorkQueueServices * This,
    /* [in] */ IMFAsyncCallback *pCallback,
    /* [in] */ IUnknown *pState);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_BeginRegisterTopologyWorkQueuesWithMMCSS_Stub( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_EndRegisterTopologyWorkQueuesWithMMCSS_Proxy( 
    IMFWorkQueueServices * This,
    /* [in] */ IMFAsyncResult *pResult);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_EndRegisterTopologyWorkQueuesWithMMCSS_Stub( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_BeginUnregisterTopologyWorkQueuesWithMMCSS_Proxy( 
    IMFWorkQueueServices * This,
    /* [in] */ IMFAsyncCallback *pCallback,
    /* [in] */ IUnknown *pState);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_BeginUnregisterTopologyWorkQueuesWithMMCSS_Stub( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_EndUnregisterTopologyWorkQueuesWithMMCSS_Proxy( 
    IMFWorkQueueServices * This,
    /* [in] */ IMFAsyncResult *pResult);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_EndUnregisterTopologyWorkQueuesWithMMCSS_Stub( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_BeginRegisterPlatformWorkQueueWithMMCSS_Proxy( 
    IMFWorkQueueServices * This,
    /* [in] */ DWORD dwPlatformWorkQueue,
    /* [in] */ LPCWSTR wszClass,
    /* [in] */ DWORD dwTaskId,
    /* [in] */ IMFAsyncCallback *pCallback,
    /* [in] */ IUnknown *pState);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_BeginRegisterPlatformWorkQueueWithMMCSS_Stub( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ DWORD dwPlatformWorkQueue,
    /* [in] */ __RPC__in LPCWSTR wszClass,
    /* [in] */ DWORD dwTaskId,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_EndRegisterPlatformWorkQueueWithMMCSS_Proxy( 
    IMFWorkQueueServices * This,
    /* [in] */ IMFAsyncResult *pResult,
    /* [annotation][out] */ 
    __out  DWORD *pdwTaskId);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_EndRegisterPlatformWorkQueueWithMMCSS_Stub( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult,
    /* [out] */ __RPC__out DWORD *pdwTaskId);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_BeginUnregisterPlatformWorkQueueWithMMCSS_Proxy( 
    IMFWorkQueueServices * This,
    /* [in] */ DWORD dwPlatformWorkQueue,
    /* [in] */ IMFAsyncCallback *pCallback,
    /* [in] */ IUnknown *pState);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_BeginUnregisterPlatformWorkQueueWithMMCSS_Stub( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ DWORD dwPlatformWorkQueue,
    /* [in] */ __RPC__in_opt IMFRemoteAsyncCallback *pCallback);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_EndUnregisterPlatformWorkQueueWithMMCSS_Proxy( 
    IMFWorkQueueServices * This,
    /* [in] */ IMFAsyncResult *pResult);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFWorkQueueServices_EndUnregisterPlatformWorkQueueWithMMCSS_Stub( 
    __RPC__in IMFWorkQueueServices * This,
    /* [in] */ __RPC__in_opt IUnknown *pResult);

/* [local] */ HRESULT STDMETHODCALLTYPE IMFPMPHost_CreateObjectByCLSID_Proxy( 
    IMFPMPHost * This,
    /* [in] */ REFCLSID clsid,
    /* [unique][in] */ IStream *pStream,
    /* [in] */ REFIID riid,
    /* [iid_is][out] */ void **ppv);


/* [call_as] */ HRESULT STDMETHODCALLTYPE IMFPMPHost_CreateObjectByCLSID_Stub( 
    __RPC__in IMFPMPHost * This,
    /* [in] */ __RPC__in REFCLSID clsid,
    /* [size_is][unique][in] */ __RPC__in_ecount_full_opt(cbData) BYTE *pbData,
    /* [in] */ DWORD cbData,
    /* [in] */ __RPC__in REFIID riid,
    /* [iid_is][out] */ __RPC__deref_out_opt void **ppv);



/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\mftransform.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mftransform.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mftransform_h__
#define __mftransform_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMFTransform_FWD_DEFINED__
#define __IMFTransform_FWD_DEFINED__
typedef interface IMFTransform IMFTransform;
#endif 	/* __IMFTransform_FWD_DEFINED__ */


/* header files for imported files */
#include "mfobjects.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mftransform_0000_0000 */
/* [local] */ 


enum _MFT_INPUT_DATA_BUFFER_FLAGS
    {	MFT_INPUT_DATA_BUFFER_PLACEHOLDER	= 0xffffffff
    } ;

enum _MFT_OUTPUT_DATA_BUFFER_FLAGS
    {	MFT_OUTPUT_DATA_BUFFER_INCOMPLETE	= 0x1000000,
	MFT_OUTPUT_DATA_BUFFER_FORMAT_CHANGE	= 0x100,
	MFT_OUTPUT_DATA_BUFFER_STREAM_END	= 0x200,
	MFT_OUTPUT_DATA_BUFFER_NO_SAMPLE	= 0x300
    } ;

enum _MFT_INPUT_STATUS_FLAGS
    {	MFT_INPUT_STATUS_ACCEPT_DATA	= 0x1
    } ;

enum _MFT_OUTPUT_STATUS_FLAGS
    {	MFT_OUTPUT_STATUS_SAMPLE_READY	= 0x1
    } ;

enum _MFT_INPUT_STREAM_INFO_FLAGS
    {	MFT_INPUT_STREAM_WHOLE_SAMPLES	= 0x1,
	MFT_INPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER	= 0x2,
	MFT_INPUT_STREAM_FIXED_SAMPLE_SIZE	= 0x4,
	MFT_INPUT_STREAM_HOLDS_BUFFERS	= 0x8,
	MFT_INPUT_STREAM_DOES_NOT_ADDREF	= 0x100,
	MFT_INPUT_STREAM_REMOVABLE	= 0x200,
	MFT_INPUT_STREAM_OPTIONAL	= 0x400,
	MFT_INPUT_STREAM_PROCESSES_IN_PLACE	= 0x800
    } ;

enum _MFT_OUTPUT_STREAM_INFO_FLAGS
    {	MFT_OUTPUT_STREAM_WHOLE_SAMPLES	= 0x1,
	MFT_OUTPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER	= 0x2,
	MFT_OUTPUT_STREAM_FIXED_SAMPLE_SIZE	= 0x4,
	MFT_OUTPUT_STREAM_DISCARDABLE	= 0x8,
	MFT_OUTPUT_STREAM_OPTIONAL	= 0x10,
	MFT_OUTPUT_STREAM_PROVIDES_SAMPLES	= 0x100,
	MFT_OUTPUT_STREAM_CAN_PROVIDE_SAMPLES	= 0x200,
	MFT_OUTPUT_STREAM_LAZY_READ	= 0x400,
	MFT_OUTPUT_STREAM_REMOVABLE	= 0x800
    } ;

enum _MFT_SET_TYPE_FLAGS
    {	MFT_SET_TYPE_TEST_ONLY	= 0x1
    } ;

enum _MFT_PROCESS_OUTPUT_FLAGS
    {	MFT_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER	= 0x1
    } ;

enum _MFT_PROCESS_OUTPUT_STATUS
    {	MFT_PROCESS_OUTPUT_STATUS_NEW_STREAMS	= 0x100
    } ;

enum _MFT_DRAIN_TYPE
    {	MFT_DRAIN_PRODUCE_TAILS	= 0,
	MFT_DRAIN_NO_TAILS	= 0x1
    } ;
#define MFT_STREAMS_UNLIMITED       0xFFFFFFFF
#define MFT_OUTPUT_BOUND_LOWER_UNBOUNDED MINLONGLONG
#define MFT_OUTPUT_BOUND_UPPER_UNBOUNDED MAXLONGLONG
typedef 
enum _MFT_MESSAGE_TYPE
    {	MFT_MESSAGE_COMMAND_FLUSH	= 0,
	MFT_MESSAGE_COMMAND_DRAIN	= 0x1,
	MFT_MESSAGE_SET_D3D_MANAGER	= 0x2,
	MFT_MESSAGE_DROP_SAMPLES	= 0x3,
	MFT_MESSAGE_NOTIFY_BEGIN_STREAMING	= 0x10000000,
	MFT_MESSAGE_NOTIFY_END_STREAMING	= 0x10000001,
	MFT_MESSAGE_NOTIFY_END_OF_STREAM	= 0x10000002,
	MFT_MESSAGE_NOTIFY_START_OF_STREAM	= 0x10000003,
	MFT_MESSAGE_COMMAND_MARKER	= 0x20000000
    } 	MFT_MESSAGE_TYPE;

typedef struct _MFT_INPUT_STREAM_INFO
    {
    LONGLONG hnsMaxLatency;
    DWORD dwFlags;
    DWORD cbSize;
    DWORD cbMaxLookahead;
    DWORD cbAlignment;
    } 	MFT_INPUT_STREAM_INFO;

typedef struct _MFT_OUTPUT_STREAM_INFO
    {
    DWORD dwFlags;
    DWORD cbSize;
    DWORD cbAlignment;
    } 	MFT_OUTPUT_STREAM_INFO;

typedef struct _MFT_OUTPUT_DATA_BUFFER
    {
    DWORD dwStreamID;
    IMFSample *pSample;
    DWORD dwStatus;
    IMFCollection *pEvents;
    } 	MFT_OUTPUT_DATA_BUFFER;

typedef struct _MFT_OUTPUT_DATA_BUFFER *PMFT_OUTPUT_DATA_BUFFER;

//
// redefine all the method names to have MFT at the beginning so they don't class with DMO methods.
//
#ifdef MFT_UNIQUE_METHOD_NAMES
#define GetStreamLimits         MFTGetStreamLimits
#define GetStreamCount          MFTGetStreamCount
#define GetStreamIDs            MFTGetStreamIDs
#define GetInputStreamInfo      MFTGetInputStreamInfo
#define GetOutputStreamInfo     MFTGetOutputStreamInfo
#define DeleteInputStream       MFTDeleteInputStream
#define AddInputStreams         MFTAddInputStreams
#define GetInputAvailableType   MFTGetInputAvailableType
#define GetOutputAvailableType  MFTGetOutputAvailableType
#define SetInputType            MFTSetInputType
#define SetOutputType           MFTSetOutputType
#define GetInputCurrentType     MFTGetInputCurrentType
#define GetOutputCurrentType    MFTGetOutputCurrentType
#define GetInputStatus          MFTGetInputStatus
#define GetOutputStatus         MFTGetOutputStatus
#define SetOutputBounds         MFTSetOutputBounds
#define ProcessEvent            MFTProcessEvent
#define ProcessMessage          MFTProcessMessage
#define ProcessInput            MFTProcessInput
#define ProcessOutput           MFTProcessOutput
#endif


extern RPC_IF_HANDLE __MIDL_itf_mftransform_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mftransform_0000_0000_v0_0_s_ifspec;

#ifndef __IMFTransform_INTERFACE_DEFINED__
#define __IMFTransform_INTERFACE_DEFINED__

/* interface IMFTransform */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMFTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bf94c121-5b05-4e6f-8000-ba598961414d")
    IMFTransform : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStreamLimits( 
            /* [out] */ __RPC__out DWORD *pdwInputMinimum,
            /* [out] */ __RPC__out DWORD *pdwInputMaximum,
            /* [out] */ __RPC__out DWORD *pdwOutputMinimum,
            /* [out] */ __RPC__out DWORD *pdwOutputMaximum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStreamCount( 
            /* [out] */ __RPC__out DWORD *pcInputStreams,
            /* [out] */ __RPC__out DWORD *pcOutputStreams) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStreamIDs( 
            DWORD dwInputIDArraySize,
            /* [size_is][out] */ __RPC__out_ecount_full(dwInputIDArraySize) DWORD *pdwInputIDs,
            DWORD dwOutputIDArraySize,
            /* [size_is][out] */ __RPC__out_ecount_full(dwOutputIDArraySize) DWORD *pdwOutputIDs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputStreamInfo( 
            DWORD dwInputStreamID,
            /* [out] */ __RPC__out MFT_INPUT_STREAM_INFO *pStreamInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputStreamInfo( 
            DWORD dwOutputStreamID,
            /* [out] */ __RPC__out MFT_OUTPUT_STREAM_INFO *pStreamInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAttributes( 
            /* [out] */ __RPC__deref_out_opt IMFAttributes **pAttributes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputStreamAttributes( 
            DWORD dwInputStreamID,
            /* [out] */ __RPC__deref_out_opt IMFAttributes **pAttributes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputStreamAttributes( 
            DWORD dwOutputStreamID,
            /* [out] */ __RPC__deref_out_opt IMFAttributes **pAttributes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteInputStream( 
            DWORD dwStreamID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddInputStreams( 
            DWORD cStreams,
            /* [in] */ __RPC__in DWORD *adwStreamIDs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputAvailableType( 
            DWORD dwInputStreamID,
            DWORD dwTypeIndex,
            /* [out] */ __RPC__deref_out_opt IMFMediaType **ppType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputAvailableType( 
            DWORD dwOutputStreamID,
            DWORD dwTypeIndex,
            /* [out] */ __RPC__deref_out_opt IMFMediaType **ppType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetInputType( 
            DWORD dwInputStreamID,
            /* [in] */ __RPC__in_opt IMFMediaType *pType,
            DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOutputType( 
            DWORD dwOutputStreamID,
            /* [in] */ __RPC__in_opt IMFMediaType *pType,
            DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputCurrentType( 
            DWORD dwInputStreamID,
            /* [out] */ __RPC__deref_out_opt IMFMediaType **ppType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputCurrentType( 
            DWORD dwOutputStreamID,
            /* [out] */ __RPC__deref_out_opt IMFMediaType **ppType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputStatus( 
            DWORD dwInputStreamID,
            /* [out] */ __RPC__out DWORD *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputStatus( 
            /* [out] */ __RPC__out DWORD *pdwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOutputBounds( 
            LONGLONG hnsLowerBound,
            LONGLONG hnsUpperBound) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ProcessEvent( 
            DWORD dwInputStreamID,
            /* [in] */ __RPC__in_opt IMFMediaEvent *pEvent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ProcessMessage( 
            MFT_MESSAGE_TYPE eMessage,
            ULONG_PTR ulParam) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE ProcessInput( 
            DWORD dwInputStreamID,
            IMFSample *pSample,
            DWORD dwFlags) = 0;
        
        virtual /* [local] */ HRESULT STDMETHODCALLTYPE ProcessOutput( 
            DWORD dwFlags,
            DWORD cOutputBufferCount,
            /* [size_is][out][in] */ MFT_OUTPUT_DATA_BUFFER *pOutputSamples,
            /* [out] */ DWORD *pdwStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMFTransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMFTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMFTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamLimits )( 
            __RPC__in IMFTransform * This,
            /* [out] */ __RPC__out DWORD *pdwInputMinimum,
            /* [out] */ __RPC__out DWORD *pdwInputMaximum,
            /* [out] */ __RPC__out DWORD *pdwOutputMinimum,
            /* [out] */ __RPC__out DWORD *pdwOutputMaximum);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamCount )( 
            __RPC__in IMFTransform * This,
            /* [out] */ __RPC__out DWORD *pcInputStreams,
            /* [out] */ __RPC__out DWORD *pcOutputStreams);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamIDs )( 
            __RPC__in IMFTransform * This,
            DWORD dwInputIDArraySize,
            /* [size_is][out] */ __RPC__out_ecount_full(dwInputIDArraySize) DWORD *pdwInputIDs,
            DWORD dwOutputIDArraySize,
            /* [size_is][out] */ __RPC__out_ecount_full(dwOutputIDArraySize) DWORD *pdwOutputIDs);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputStreamInfo )( 
            __RPC__in IMFTransform * This,
            DWORD dwInputStreamID,
            /* [out] */ __RPC__out MFT_INPUT_STREAM_INFO *pStreamInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputStreamInfo )( 
            __RPC__in IMFTransform * This,
            DWORD dwOutputStreamID,
            /* [out] */ __RPC__out MFT_OUTPUT_STREAM_INFO *pStreamInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetAttributes )( 
            __RPC__in IMFTransform * This,
            /* [out] */ __RPC__deref_out_opt IMFAttributes **pAttributes);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputStreamAttributes )( 
            __RPC__in IMFTransform * This,
            DWORD dwInputStreamID,
            /* [out] */ __RPC__deref_out_opt IMFAttributes **pAttributes);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputStreamAttributes )( 
            __RPC__in IMFTransform * This,
            DWORD dwOutputStreamID,
            /* [out] */ __RPC__deref_out_opt IMFAttributes **pAttributes);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteInputStream )( 
            __RPC__in IMFTransform * This,
            DWORD dwStreamID);
        
        HRESULT ( STDMETHODCALLTYPE *AddInputStreams )( 
            __RPC__in IMFTransform * This,
            DWORD cStreams,
            /* [in] */ __RPC__in DWORD *adwStreamIDs);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputAvailableType )( 
            __RPC__in IMFTransform * This,
            DWORD dwInputStreamID,
            DWORD dwTypeIndex,
            /* [out] */ __RPC__deref_out_opt IMFMediaType **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputAvailableType )( 
            __RPC__in IMFTransform * This,
            DWORD dwOutputStreamID,
            DWORD dwTypeIndex,
            /* [out] */ __RPC__deref_out_opt IMFMediaType **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *SetInputType )( 
            __RPC__in IMFTransform * This,
            DWORD dwInputStreamID,
            /* [in] */ __RPC__in_opt IMFMediaType *pType,
            DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetOutputType )( 
            __RPC__in IMFTransform * This,
            DWORD dwOutputStreamID,
            /* [in] */ __RPC__in_opt IMFMediaType *pType,
            DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputCurrentType )( 
            __RPC__in IMFTransform * This,
            DWORD dwInputStreamID,
            /* [out] */ __RPC__deref_out_opt IMFMediaType **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputCurrentType )( 
            __RPC__in IMFTransform * This,
            DWORD dwOutputStreamID,
            /* [out] */ __RPC__deref_out_opt IMFMediaType **ppType);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputStatus )( 
            __RPC__in IMFTransform * This,
            DWORD dwInputStreamID,
            /* [out] */ __RPC__out DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputStatus )( 
            __RPC__in IMFTransform * This,
            /* [out] */ __RPC__out DWORD *pdwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetOutputBounds )( 
            __RPC__in IMFTransform * This,
            LONGLONG hnsLowerBound,
            LONGLONG hnsUpperBound);
        
        HRESULT ( STDMETHODCALLTYPE *ProcessEvent )( 
            __RPC__in IMFTransform * This,
            DWORD dwInputStreamID,
            /* [in] */ __RPC__in_opt IMFMediaEvent *pEvent);
        
        HRESULT ( STDMETHODCALLTYPE *ProcessMessage )( 
            __RPC__in IMFTransform * This,
            MFT_MESSAGE_TYPE eMessage,
            ULONG_PTR ulParam);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *ProcessInput )( 
            IMFTransform * This,
            DWORD dwInputStreamID,
            IMFSample *pSample,
            DWORD dwFlags);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *ProcessOutput )( 
            IMFTransform * This,
            DWORD dwFlags,
            DWORD cOutputBufferCount,
            /* [size_is][out][in] */ MFT_OUTPUT_DATA_BUFFER *pOutputSamples,
            /* [out] */ DWORD *pdwStatus);
        
        END_INTERFACE
    } IMFTransformVtbl;

    interface IMFTransform
    {
        CONST_VTBL struct IMFTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFTransform_GetStreamLimits(This,pdwInputMinimum,pdwInputMaximum,pdwOutputMinimum,pdwOutputMaximum)	\
    ( (This)->lpVtbl -> GetStreamLimits(This,pdwInputMinimum,pdwInputMaximum,pdwOutputMinimum,pdwOutputMaximum) ) 

#define IMFTransform_GetStreamCount(This,pcInputStreams,pcOutputStreams)	\
    ( (This)->lpVtbl -> GetStreamCount(This,pcInputStreams,pcOutputStreams) ) 

#define IMFTransform_GetStreamIDs(This,dwInputIDArraySize,pdwInputIDs,dwOutputIDArraySize,pdwOutputIDs)	\
    ( (This)->lpVtbl -> GetStreamIDs(This,dwInputIDArraySize,pdwInputIDs,dwOutputIDArraySize,pdwOutputIDs) ) 

#define IMFTransform_GetInputStreamInfo(This,dwInputStreamID,pStreamInfo)	\
    ( (This)->lpVtbl -> GetInputStreamInfo(This,dwInputStreamID,pStreamInfo) ) 

#define IMFTransform_GetOutputStreamInfo(This,dwOutputStreamID,pStreamInfo)	\
    ( (This)->lpVtbl -> GetOutputStreamInfo(This,dwOutputStreamID,pStreamInfo) ) 

#define IMFTransform_GetAttributes(This,pAttributes)	\
    ( (This)->lpVtbl -> GetAttributes(This,pAttributes) ) 

#define IMFTransform_GetInputStreamAttributes(This,dwInputStreamID,pAttributes)	\
    ( (This)->lpVtbl -> GetInputStreamAttributes(This,dwInputStreamID,pAttributes) ) 

#define IMFTransform_GetOutputStreamAttributes(This,dwOutputStreamID,pAttributes)	\
    ( (This)->lpVtbl -> GetOutputStreamAttributes(This,dwOutputStreamID,pAttributes) ) 

#define IMFTransform_DeleteInputStream(This,dwStreamID)	\
    ( (This)->lpVtbl -> DeleteInputStream(This,dwStreamID) ) 

#define IMFTransform_AddInputStreams(This,cStreams,adwStreamIDs)	\
    ( (This)->lpVtbl -> AddInputStreams(This,cStreams,adwStreamIDs) ) 

#define IMFTransform_GetInputAvailableType(This,dwInputStreamID,dwTypeIndex,ppType)	\
    ( (This)->lpVtbl -> GetInputAvailableType(This,dwInputStreamID,dwTypeIndex,ppType) ) 

#define IMFTransform_GetOutputAvailableType(This,dwOutputStreamID,dwTypeIndex,ppType)	\
    ( (This)->lpVtbl -> GetOutputAvailableType(This,dwOutputStreamID,dwTypeIndex,ppType) ) 

#define IMFTransform_SetInputType(This,dwInputStreamID,pType,dwFlags)	\
    ( (This)->lpVtbl -> SetInputType(This,dwInputStreamID,pType,dwFlags) ) 

#define IMFTransform_SetOutputType(This,dwOutputStreamID,pType,dwFlags)	\
    ( (This)->lpVtbl -> SetOutputType(This,dwOutputStreamID,pType,dwFlags) ) 

#define IMFTransform_GetInputCurrentType(This,dwInputStreamID,ppType)	\
    ( (This)->lpVtbl -> GetInputCurrentType(This,dwInputStreamID,ppType) ) 

#define IMFTransform_GetOutputCurrentType(This,dwOutputStreamID,ppType)	\
    ( (This)->lpVtbl -> GetOutputCurrentType(This,dwOutputStreamID,ppType) ) 

#define IMFTransform_GetInputStatus(This,dwInputStreamID,pdwFlags)	\
    ( (This)->lpVtbl -> GetInputStatus(This,dwInputStreamID,pdwFlags) ) 

#define IMFTransform_GetOutputStatus(This,pdwFlags)	\
    ( (This)->lpVtbl -> GetOutputStatus(This,pdwFlags) ) 

#define IMFTransform_SetOutputBounds(This,hnsLowerBound,hnsUpperBound)	\
    ( (This)->lpVtbl -> SetOutputBounds(This,hnsLowerBound,hnsUpperBound) ) 

#define IMFTransform_ProcessEvent(This,dwInputStreamID,pEvent)	\
    ( (This)->lpVtbl -> ProcessEvent(This,dwInputStreamID,pEvent) ) 

#define IMFTransform_ProcessMessage(This,eMessage,ulParam)	\
    ( (This)->lpVtbl -> ProcessMessage(This,eMessage,ulParam) ) 

#define IMFTransform_ProcessInput(This,dwInputStreamID,pSample,dwFlags)	\
    ( (This)->lpVtbl -> ProcessInput(This,dwInputStreamID,pSample,dwFlags) ) 

#define IMFTransform_ProcessOutput(This,dwFlags,cOutputBufferCount,pOutputSamples,pdwStatus)	\
    ( (This)->lpVtbl -> ProcessOutput(This,dwFlags,cOutputBufferCount,pOutputSamples,pdwStatus) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFTransform_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mftransform_0000_0001 */
/* [local] */ 

#if (WINVER >= _WIN32_WINNT_WIN7) 
typedef struct _STREAM_MEDIUM
    {
    GUID gidMedium;
    UINT32 unMediumInstance;
    } 	STREAM_MEDIUM;

typedef struct _STREAM_MEDIUM *PSTREAM_MEDIUM;

#endif // (WINVER >= _WIN32_WINNT_WIN7) 
//
// Define the MFT methods back so we don't accidentally hose the IMediaObject interface.
//
#ifdef MFT_UNIQUE_METHOD_NAMES
#undef GetStreamLimits        
#undef GetStreamCount         
#undef GetStreamIDs           
#undef GetInputStreamInfo     
#undef GetOutputStreamInfo    
#undef DeleteInputStream      
#undef AddInputStreams        
#undef GetInputAvailableType  
#undef GetOutputAvailableType 
#undef SetInputType           
#undef SetOutputType          
#undef GetInputCurrentType    
#undef GetOutputCurrentType   
#undef GetInputStatus         
#undef GetOutputStatus        
#undef SetOutputBounds        
#undef ProcessMessage         
#undef ProcessInput           
#undef ProcessOutput          
#endif
EXTERN_C const DECLSPEC_SELECTANY PROPERTYKEY MFPKEY_CLSID = { { 0xc57a84c0, 0x1a80, 0x40a3, {0x97, 0xb5, 0x92, 0x72, 0xa4, 0x3, 0xc8, 0xae} }, 0x01 }; 
EXTERN_C const DECLSPEC_SELECTANY PROPERTYKEY MFPKEY_CATEGORY = { { 0xc57a84c0, 0x1a80, 0x40a3, {0x97, 0xb5, 0x92, 0x72, 0xa4, 0x3, 0xc8, 0xae} }, 0x02 }; 
EXTERN_C const DECLSPEC_SELECTANY PROPERTYKEY MFPKEY_EXATTRIBUTE_SUPPORTED = { { 0x456fe843, 0x3c87, 0x40c0, {0x94, 0x9d, 0x14, 0x9, 0xc9, 0x7d, 0xab, 0x2c} }, 0x01 }; 
EXTERN_C const DECLSPEC_SELECTANY PROPERTYKEY MFPKEY_MULTICHANNEL_CHANNEL_MASK  = { { 0x58bdaf8c, 0x3224, 0x4692, { 0x86, 0xd0, 0x44, 0xd6, 0x5c, 0x5b, 0xf8, 0x2b } }, 0x01 }; 
EXTERN_C const DECLSPEC_SELECTANY GUID MF_SA_D3D_AWARE = { 0xeaa35c29,  0x775e, 0x488e, { 0x9b, 0x61, 0xb3, 0x28, 0x3e, 0x49, 0x58, 0x3b } }; 
EXTERN_C const DECLSPEC_SELECTANY GUID MF_SA_REQUIRED_SAMPLE_COUNT = { 0x18802c61, 0x324b, 0x4952, { 0xab, 0xd0, 0x17, 0x6f, 0xf5, 0xc6, 0x96, 0xff } };
#if (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_C const DECLSPEC_SELECTANY GUID MF_TRANSFORM_ASYNC = { 0xf81a699a, 0x649a, 0x497d, { 0x8c, 0x73, 0x29, 0xf8, 0xfe, 0xd6, 0xad, 0x7a } };
EXTERN_C const DECLSPEC_SELECTANY GUID MF_TRANSFORM_ASYNC_UNLOCK = { 0xe5666d6b, 0x3422, 0x4eb6, { 0xa4, 0x21, 0xda, 0x7d, 0xb1, 0xf8, 0xe2, 0x7 } };
EXTERN_C const DECLSPEC_SELECTANY GUID MF_TRANSFORM_FLAGS_Attribute = { 0x9359bb7e, 0x6275, 0x46c4, { 0xa0, 0x25, 0x1c, 0x1, 0xe4, 0x5f, 0x1a, 0x86 } };
EXTERN_C const DECLSPEC_SELECTANY GUID MF_TRANSFORM_CATEGORY_Attribute = { 0xceabba49, 0x506d, 0x4757, { 0xa6, 0xff, 0x66, 0xc1, 0x84, 0x98, 0x7e, 0x4e } };
EXTERN_C const DECLSPEC_SELECTANY GUID MFT_TRANSFORM_CLSID_Attribute = { 0x6821c42b, 0x65a4, 0x4e82, { 0x99, 0xbc, 0x9a, 0x88, 0x20, 0x5e, 0xcd, 0xc } };
EXTERN_C const DECLSPEC_SELECTANY GUID MFT_INPUT_TYPES_Attributes = { 0x4276c9b1, 0x759d, 0x4bf3, { 0x9c, 0xd0, 0xd, 0x72, 0x3d, 0x13, 0x8f, 0x96 } };
EXTERN_C const DECLSPEC_SELECTANY GUID MFT_OUTPUT_TYPES_Attributes = { 0x8eae8cf3, 0xa44f, 0x4306, { 0xba, 0x5c, 0xbf, 0x5d, 0xda, 0x24, 0x28, 0x18 } };
EXTERN_C const DECLSPEC_SELECTANY GUID MFT_ENUM_HARDWARE_URL_Attribute = { 0x2fb866ac, 0xb078, 0x4942, { 0xab, 0x6c, 0x0, 0x3d, 0x5, 0xcd, 0xa6, 0x74 } };
EXTERN_C const DECLSPEC_SELECTANY GUID MFT_FRIENDLY_NAME_Attribute = { 0x314ffbae, 0x5b41, 0x4c95, { 0x9c, 0x19, 0x4e, 0x7d, 0x58, 0x6f, 0xac, 0xe3 } };
EXTERN_C const DECLSPEC_SELECTANY GUID MFT_CONNECTED_STREAM_ATTRIBUTE  = { 0x71eeb820, 0xa59f, 0x4de2, {0xbc, 0xec, 0x38, 0xdb, 0x1d, 0xd6, 0x11, 0xa4} };
EXTERN_C const DECLSPEC_SELECTANY GUID MFT_CONNECTED_TO_HW_STREAM = { 0x34e6e728, 0x6d6, 0x4491, { 0xa5, 0x53, 0x47, 0x95, 0x65, 0xd, 0xb9, 0x12 } };
EXTERN_C const DECLSPEC_SELECTANY GUID MFT_PREFERRED_OUTPUTTYPE_Attribute = { 0x7e700499, 0x396a, 0x49ee, { 0xb1, 0xb4, 0xf6, 0x28, 0x2, 0x1e, 0x8c, 0x9d } };
EXTERN_C const DECLSPEC_SELECTANY GUID MFT_PROCESS_LOCAL_Attribute = { 0x543186e4, 0x4649, 0x4e65, { 0xb5, 0x88, 0x4a, 0xa3, 0x52, 0xaf, 0xf3, 0x79 } };
EXTERN_C const DECLSPEC_SELECTANY GUID MFT_PREFERRED_ENCODER_PROFILE = { 0x53004909, 0x1ef5, 0x46d7, { 0xa1, 0x8e, 0x5a, 0x75, 0xf8, 0xb5, 0x90, 0x5f } };
EXTERN_C const DECLSPEC_SELECTANY GUID MFT_HW_TIMESTAMP_WITH_QPC_Attribute = { 0x8d030fb8, 0xcc43, 0x4258, { 0xa2, 0x2e, 0x92, 0x10, 0xbe, 0xf8, 0x9b, 0xe4 } };
EXTERN_C const DECLSPEC_SELECTANY GUID MFT_FIELDOFUSE_UNLOCK_Attribute = { 0x8ec2e9fd, 0x9148, 0x410d, { 0x83, 0x1e, 0x70, 0x24, 0x39, 0x46, 0x1a, 0x8e } };
EXTERN_C const DECLSPEC_SELECTANY GUID MFT_CODEC_MERIT_Attribute = { 0x88a7cb15, 0x7b07, 0x4a34, { 0x91, 0x28, 0xe6, 0x4c, 0x67, 0x3, 0xc4, 0xd3 } };
EXTERN_C const DECLSPEC_SELECTANY GUID MFT_ENUM_TRANSCODE_ONLY_ATTRIBUTE = { 0x111ea8cd, 0xb62a, 0x4bdb, { 0x89, 0xf6, 0x67, 0xff, 0xcd, 0xc2, 0x45, 0x8b } };
STDAPI
MFCreateTransformActivate(
    __out IMFActivate** ppActivate
    );
#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mftransform_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mftransform_0000_0001_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\mfreadwrite.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mfreadwrite.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mfreadwrite_h__
#define __mfreadwrite_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMFReadWriteClassFactory_FWD_DEFINED__
#define __IMFReadWriteClassFactory_FWD_DEFINED__
typedef interface IMFReadWriteClassFactory IMFReadWriteClassFactory;
#endif 	/* __IMFReadWriteClassFactory_FWD_DEFINED__ */


#ifndef __IMFSourceReader_FWD_DEFINED__
#define __IMFSourceReader_FWD_DEFINED__
typedef interface IMFSourceReader IMFSourceReader;
#endif 	/* __IMFSourceReader_FWD_DEFINED__ */


#ifndef __IMFSourceReaderCallback_FWD_DEFINED__
#define __IMFSourceReaderCallback_FWD_DEFINED__
typedef interface IMFSourceReaderCallback IMFSourceReaderCallback;
#endif 	/* __IMFSourceReaderCallback_FWD_DEFINED__ */


#ifndef __IMFSinkWriter_FWD_DEFINED__
#define __IMFSinkWriter_FWD_DEFINED__
typedef interface IMFSinkWriter IMFSinkWriter;
#endif 	/* __IMFSinkWriter_FWD_DEFINED__ */


#ifndef __IMFSinkWriterCallback_FWD_DEFINED__
#define __IMFSinkWriterCallback_FWD_DEFINED__
typedef interface IMFSinkWriterCallback IMFSinkWriterCallback;
#endif 	/* __IMFSinkWriterCallback_FWD_DEFINED__ */


/* header files for imported files */
#include "mfobjects.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mfreadwrite_0000_0000 */
/* [local] */ 

#if (WINVER >= _WIN32_WINNT_WIN7) 
EXTERN_GUID(CLSID_MFReadWriteClassFactory, 0x48e2ed0f, 0x98c2, 0x4a37, 0xbe, 0xd5, 0x16, 0x63, 0x12, 0xdd, 0xd8, 0x3f);


extern RPC_IF_HANDLE __MIDL_itf_mfreadwrite_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfreadwrite_0000_0000_v0_0_s_ifspec;

#ifndef __IMFReadWriteClassFactory_INTERFACE_DEFINED__
#define __IMFReadWriteClassFactory_INTERFACE_DEFINED__

/* interface IMFReadWriteClassFactory */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFReadWriteClassFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E7FE2E12-661C-40DA-92F9-4F002AB67627")
    IMFReadWriteClassFactory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateInstanceFromURL( 
            /* [annotation][in] */ 
            __in  REFCLSID clsid,
            /* [annotation][in] */ 
            __in  LPCWSTR pwszURL,
            /* [annotation][in] */ 
            __in_opt  IMFAttributes *pAttributes,
            /* [annotation][in] */ 
            __in  REFIID riid,
            /* [annotation][iid_is][out] */ 
            __out  LPVOID *ppvObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateInstanceFromObject( 
            /* [annotation][in] */ 
            __in  REFCLSID clsid,
            /* [annotation][in] */ 
            __in  IUnknown *punkObject,
            /* [annotation][in] */ 
            __in_opt  IMFAttributes *pAttributes,
            /* [annotation][in] */ 
            __in  REFIID riid,
            /* [annotation][iid_is][out] */ 
            __out  LPVOID *ppvObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFReadWriteClassFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFReadWriteClassFactory * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFReadWriteClassFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFReadWriteClassFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceFromURL )( 
            IMFReadWriteClassFactory * This,
            /* [annotation][in] */ 
            __in  REFCLSID clsid,
            /* [annotation][in] */ 
            __in  LPCWSTR pwszURL,
            /* [annotation][in] */ 
            __in_opt  IMFAttributes *pAttributes,
            /* [annotation][in] */ 
            __in  REFIID riid,
            /* [annotation][iid_is][out] */ 
            __out  LPVOID *ppvObject);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceFromObject )( 
            IMFReadWriteClassFactory * This,
            /* [annotation][in] */ 
            __in  REFCLSID clsid,
            /* [annotation][in] */ 
            __in  IUnknown *punkObject,
            /* [annotation][in] */ 
            __in_opt  IMFAttributes *pAttributes,
            /* [annotation][in] */ 
            __in  REFIID riid,
            /* [annotation][iid_is][out] */ 
            __out  LPVOID *ppvObject);
        
        END_INTERFACE
    } IMFReadWriteClassFactoryVtbl;

    interface IMFReadWriteClassFactory
    {
        CONST_VTBL struct IMFReadWriteClassFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFReadWriteClassFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFReadWriteClassFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFReadWriteClassFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFReadWriteClassFactory_CreateInstanceFromURL(This,clsid,pwszURL,pAttributes,riid,ppvObject)	\
    ( (This)->lpVtbl -> CreateInstanceFromURL(This,clsid,pwszURL,pAttributes,riid,ppvObject) ) 

#define IMFReadWriteClassFactory_CreateInstanceFromObject(This,clsid,punkObject,pAttributes,riid,ppvObject)	\
    ( (This)->lpVtbl -> CreateInstanceFromObject(This,clsid,punkObject,pAttributes,riid,ppvObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFReadWriteClassFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfreadwrite_0000_0001 */
/* [local] */ 

EXTERN_GUID(CLSID_MFSourceReader, 0x1777133c, 0x0881, 0x411b, 0xa5, 0x77, 0xad, 0x54, 0x5f, 0x07, 0x14, 0xc4);
STDAPI MFCreateSourceReaderFromURL(
    __in LPCWSTR pwszURL,
    __in_opt IMFAttributes *pAttributes,
    __out IMFSourceReader **ppSourceReader );
STDAPI MFCreateSourceReaderFromByteStream(
    __in IMFByteStream *pByteStream,
    __in_opt IMFAttributes *pAttributes,
    __out IMFSourceReader **ppSourceReader );
STDAPI MFCreateSourceReaderFromMediaSource(
    __in IMFMediaSource *pMediaSource,
    __in_opt IMFAttributes *pAttributes,
    __out IMFSourceReader **ppSourceReader );
EXTERN_GUID( MF_SOURCE_READER_ASYNC_CALLBACK, 0x1e3dbeac, 0xbb43, 0x4c35, 0xb5, 0x07, 0xcd, 0x64, 0x44, 0x64, 0xc9, 0x65);
EXTERN_GUID( MF_SOURCE_READER_D3D_MANAGER, 0xec822da2, 0xe1e9, 0x4b29, 0xa0, 0xd8, 0x56, 0x3c, 0x71, 0x9f, 0x52, 0x69);
EXTERN_GUID( MF_SOURCE_READER_DISABLE_DXVA, 0xaa456cfd, 0x3943, 0x4a1e, 0xa7, 0x7d, 0x18, 0x38, 0xc0, 0xea, 0x2e, 0x35);
EXTERN_GUID( MF_SOURCE_READER_MEDIASOURCE_CONFIG, 0x9085abeb, 0x0354, 0x48f9, 0xab, 0xb5, 0x20, 0x0d, 0xf8, 0x38, 0xc6, 0x8e);
EXTERN_GUID( MF_SOURCE_READER_MEDIASOURCE_CHARACTERISTICS, 0x6d23f5c8, 0xc5d7, 0x4a9b, 0x99, 0x71, 0x5d, 0x11, 0xf8, 0xbc, 0xa8, 0x80);
EXTERN_GUID( MF_SOURCE_READER_ENABLE_VIDEO_PROCESSING, 0xfb394f3d, 0xccf1, 0x42ee, 0xbb, 0xb3, 0xf9, 0xb8, 0x45, 0xd5, 0x68, 0x1d);
EXTERN_GUID( MF_SOURCE_READER_DISCONNECT_MEDIASOURCE_ON_SHUTDOWN, 0x56b67165, 0x219e, 0x456d, 0xa2, 0x2e, 0x2d, 0x30, 0x04, 0xc7, 0xfe, 0x56);
typedef /* [v1_enum] */ 
enum MF_SOURCE_READER_FLAG
    {	MF_SOURCE_READERF_ERROR	= 0x1,
	MF_SOURCE_READERF_ENDOFSTREAM	= 0x2,
	MF_SOURCE_READERF_NEWSTREAM	= 0x4,
	MF_SOURCE_READERF_NATIVEMEDIATYPECHANGED	= 0x10,
	MF_SOURCE_READERF_CURRENTMEDIATYPECHANGED	= 0x20,
	MF_SOURCE_READERF_STREAMTICK	= 0x100
    } 	MF_SOURCE_READER_FLAG;

DEFINE_ENUM_FLAG_OPERATORS(MF_SOURCE_READER_FLAG)
typedef /* [v1_enum] */ 
enum MF_SOURCE_READER_CONTROL_FLAG
    {	MF_SOURCE_READER_CONTROLF_DRAIN	= 0x1
    } 	MF_SOURCE_READER_CONTROL_FLAG;

DEFINE_ENUM_FLAG_OPERATORS(MF_SOURCE_READER_CONTROL_FLAG)

enum __MIDL___MIDL_itf_mfreadwrite_0000_0001_0001
    {	MF_SOURCE_READER_INVALID_STREAM_INDEX	= 0xffffffff,
	MF_SOURCE_READER_ALL_STREAMS	= 0xfffffffe,
	MF_SOURCE_READER_ANY_STREAM	= 0xfffffffe,
	MF_SOURCE_READER_FIRST_AUDIO_STREAM	= 0xfffffffd,
	MF_SOURCE_READER_FIRST_VIDEO_STREAM	= 0xfffffffc,
	MF_SOURCE_READER_MEDIASOURCE	= 0xffffffff
    } ;


extern RPC_IF_HANDLE __MIDL_itf_mfreadwrite_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfreadwrite_0000_0001_v0_0_s_ifspec;

#ifndef __IMFSourceReader_INTERFACE_DEFINED__
#define __IMFSourceReader_INTERFACE_DEFINED__

/* interface IMFSourceReader */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFSourceReader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("70ae66f2-c809-4e4f-8915-bdcb406b7993")
    IMFSourceReader : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStreamSelection( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][out] */ 
            __out  BOOL *pfSelected) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStreamSelection( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  BOOL fSelected) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNativeMediaType( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  DWORD dwMediaTypeIndex,
            /* [annotation][out] */ 
            __out  IMFMediaType **ppMediaType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentMediaType( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][out] */ 
            __out  IMFMediaType **ppMediaType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCurrentMediaType( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][out][in] */ 
            __reserved  DWORD *pdwReserved,
            /* [annotation][in] */ 
            __in  IMFMediaType *pMediaType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCurrentPosition( 
            /* [annotation][in] */ 
            __in  REFGUID guidTimeFormat,
            /* [annotation][in] */ 
            __in  REFPROPVARIANT varPosition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReadSample( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  DWORD dwControlFlags,
            /* [annotation][out] */ 
            __out_opt  DWORD *pdwActualStreamIndex,
            /* [annotation][out] */ 
            __out_opt  DWORD *pdwStreamFlags,
            /* [annotation][out] */ 
            __out_opt  LONGLONG *pllTimestamp,
            /* [annotation][out] */ 
            __out_opt  IMFSample **ppSample) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Flush( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetServiceForStream( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  REFGUID guidService,
            /* [annotation][in] */ 
            __in  REFIID riid,
            /* [annotation][out] */ 
            __out  LPVOID *ppvObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPresentationAttribute( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  REFGUID guidAttribute,
            /* [annotation][out] */ 
            __out  PROPVARIANT *pvarAttribute) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSourceReaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFSourceReader * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFSourceReader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFSourceReader * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamSelection )( 
            IMFSourceReader * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][out] */ 
            __out  BOOL *pfSelected);
        
        HRESULT ( STDMETHODCALLTYPE *SetStreamSelection )( 
            IMFSourceReader * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  BOOL fSelected);
        
        HRESULT ( STDMETHODCALLTYPE *GetNativeMediaType )( 
            IMFSourceReader * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  DWORD dwMediaTypeIndex,
            /* [annotation][out] */ 
            __out  IMFMediaType **ppMediaType);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentMediaType )( 
            IMFSourceReader * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][out] */ 
            __out  IMFMediaType **ppMediaType);
        
        HRESULT ( STDMETHODCALLTYPE *SetCurrentMediaType )( 
            IMFSourceReader * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][out][in] */ 
            __reserved  DWORD *pdwReserved,
            /* [annotation][in] */ 
            __in  IMFMediaType *pMediaType);
        
        HRESULT ( STDMETHODCALLTYPE *SetCurrentPosition )( 
            IMFSourceReader * This,
            /* [annotation][in] */ 
            __in  REFGUID guidTimeFormat,
            /* [annotation][in] */ 
            __in  REFPROPVARIANT varPosition);
        
        HRESULT ( STDMETHODCALLTYPE *ReadSample )( 
            IMFSourceReader * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  DWORD dwControlFlags,
            /* [annotation][out] */ 
            __out_opt  DWORD *pdwActualStreamIndex,
            /* [annotation][out] */ 
            __out_opt  DWORD *pdwStreamFlags,
            /* [annotation][out] */ 
            __out_opt  LONGLONG *pllTimestamp,
            /* [annotation][out] */ 
            __out_opt  IMFSample **ppSample);
        
        HRESULT ( STDMETHODCALLTYPE *Flush )( 
            IMFSourceReader * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetServiceForStream )( 
            IMFSourceReader * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  REFGUID guidService,
            /* [annotation][in] */ 
            __in  REFIID riid,
            /* [annotation][out] */ 
            __out  LPVOID *ppvObject);
        
        HRESULT ( STDMETHODCALLTYPE *GetPresentationAttribute )( 
            IMFSourceReader * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  REFGUID guidAttribute,
            /* [annotation][out] */ 
            __out  PROPVARIANT *pvarAttribute);
        
        END_INTERFACE
    } IMFSourceReaderVtbl;

    interface IMFSourceReader
    {
        CONST_VTBL struct IMFSourceReaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSourceReader_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSourceReader_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSourceReader_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSourceReader_GetStreamSelection(This,dwStreamIndex,pfSelected)	\
    ( (This)->lpVtbl -> GetStreamSelection(This,dwStreamIndex,pfSelected) ) 

#define IMFSourceReader_SetStreamSelection(This,dwStreamIndex,fSelected)	\
    ( (This)->lpVtbl -> SetStreamSelection(This,dwStreamIndex,fSelected) ) 

#define IMFSourceReader_GetNativeMediaType(This,dwStreamIndex,dwMediaTypeIndex,ppMediaType)	\
    ( (This)->lpVtbl -> GetNativeMediaType(This,dwStreamIndex,dwMediaTypeIndex,ppMediaType) ) 

#define IMFSourceReader_GetCurrentMediaType(This,dwStreamIndex,ppMediaType)	\
    ( (This)->lpVtbl -> GetCurrentMediaType(This,dwStreamIndex,ppMediaType) ) 

#define IMFSourceReader_SetCurrentMediaType(This,dwStreamIndex,pdwReserved,pMediaType)	\
    ( (This)->lpVtbl -> SetCurrentMediaType(This,dwStreamIndex,pdwReserved,pMediaType) ) 

#define IMFSourceReader_SetCurrentPosition(This,guidTimeFormat,varPosition)	\
    ( (This)->lpVtbl -> SetCurrentPosition(This,guidTimeFormat,varPosition) ) 

#define IMFSourceReader_ReadSample(This,dwStreamIndex,dwControlFlags,pdwActualStreamIndex,pdwStreamFlags,pllTimestamp,ppSample)	\
    ( (This)->lpVtbl -> ReadSample(This,dwStreamIndex,dwControlFlags,pdwActualStreamIndex,pdwStreamFlags,pllTimestamp,ppSample) ) 

#define IMFSourceReader_Flush(This,dwStreamIndex)	\
    ( (This)->lpVtbl -> Flush(This,dwStreamIndex) ) 

#define IMFSourceReader_GetServiceForStream(This,dwStreamIndex,guidService,riid,ppvObject)	\
    ( (This)->lpVtbl -> GetServiceForStream(This,dwStreamIndex,guidService,riid,ppvObject) ) 

#define IMFSourceReader_GetPresentationAttribute(This,dwStreamIndex,guidAttribute,pvarAttribute)	\
    ( (This)->lpVtbl -> GetPresentationAttribute(This,dwStreamIndex,guidAttribute,pvarAttribute) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSourceReader_INTERFACE_DEFINED__ */


#ifndef __IMFSourceReaderCallback_INTERFACE_DEFINED__
#define __IMFSourceReaderCallback_INTERFACE_DEFINED__

/* interface IMFSourceReaderCallback */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFSourceReaderCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("deec8d99-fa1d-4d82-84c2-2c8969944867")
    IMFSourceReaderCallback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnReadSample( 
            /* [annotation][in] */ 
            __in  HRESULT hrStatus,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  DWORD dwStreamFlags,
            /* [annotation][in] */ 
            __in  LONGLONG llTimestamp,
            /* [annotation][in] */ 
            __in_opt  IMFSample *pSample) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnFlush( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnEvent( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  IMFMediaEvent *pEvent) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSourceReaderCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFSourceReaderCallback * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFSourceReaderCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFSourceReaderCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnReadSample )( 
            IMFSourceReaderCallback * This,
            /* [annotation][in] */ 
            __in  HRESULT hrStatus,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  DWORD dwStreamFlags,
            /* [annotation][in] */ 
            __in  LONGLONG llTimestamp,
            /* [annotation][in] */ 
            __in_opt  IMFSample *pSample);
        
        HRESULT ( STDMETHODCALLTYPE *OnFlush )( 
            IMFSourceReaderCallback * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex);
        
        HRESULT ( STDMETHODCALLTYPE *OnEvent )( 
            IMFSourceReaderCallback * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  IMFMediaEvent *pEvent);
        
        END_INTERFACE
    } IMFSourceReaderCallbackVtbl;

    interface IMFSourceReaderCallback
    {
        CONST_VTBL struct IMFSourceReaderCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSourceReaderCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSourceReaderCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSourceReaderCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSourceReaderCallback_OnReadSample(This,hrStatus,dwStreamIndex,dwStreamFlags,llTimestamp,pSample)	\
    ( (This)->lpVtbl -> OnReadSample(This,hrStatus,dwStreamIndex,dwStreamFlags,llTimestamp,pSample) ) 

#define IMFSourceReaderCallback_OnFlush(This,dwStreamIndex)	\
    ( (This)->lpVtbl -> OnFlush(This,dwStreamIndex) ) 

#define IMFSourceReaderCallback_OnEvent(This,dwStreamIndex,pEvent)	\
    ( (This)->lpVtbl -> OnEvent(This,dwStreamIndex,pEvent) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSourceReaderCallback_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfreadwrite_0000_0003 */
/* [local] */ 

EXTERN_GUID(CLSID_MFSinkWriter, 0xa3bbfb17, 0x8273, 0x4e52, 0x9e, 0x0e, 0x97, 0x39, 0xdc, 0x88, 0x79, 0x90);
STDAPI MFCreateSinkWriterFromURL(
    __in_opt LPCWSTR pwszOutputURL,
    __in_opt IMFByteStream *pByteStream,
    __in_opt IMFAttributes *pAttributes,
    __out IMFSinkWriter **ppSinkWriter );
STDAPI MFCreateSinkWriterFromMediaSink(
    __in IMFMediaSink *pMediaSink,
    __in_opt IMFAttributes *pAttributes,
    __out IMFSinkWriter **ppSinkWriter );
EXTERN_GUID( MF_SINK_WRITER_ASYNC_CALLBACK, 0x48cb183e, 0x7b0b, 0x46f4, 0x82, 0x2e, 0x5e, 0x1d, 0x2d, 0xda, 0x43, 0x54);
EXTERN_GUID( MF_SINK_WRITER_DISABLE_THROTTLING, 0x08b845d8, 0x2b74, 0x4afe, 0x9d, 0x53, 0xbe, 0x16, 0xd2, 0xd5, 0xae, 0x4f);

enum __MIDL___MIDL_itf_mfreadwrite_0000_0003_0001
    {	MF_SINK_WRITER_INVALID_STREAM_INDEX	= 0xffffffff,
	MF_SINK_WRITER_ALL_STREAMS	= 0xfffffffe,
	MF_SINK_WRITER_MEDIASINK	= 0xffffffff
    } ;
typedef struct _MF_SINK_WRITER_STATISTICS
    {
    DWORD cb;
    LONGLONG llLastTimestampReceived;
    LONGLONG llLastTimestampEncoded;
    LONGLONG llLastTimestampProcessed;
    LONGLONG llLastStreamTickReceived;
    LONGLONG llLastSinkSampleRequest;
    QWORD qwNumSamplesReceived;
    QWORD qwNumSamplesEncoded;
    QWORD qwNumSamplesProcessed;
    QWORD qwNumStreamTicksReceived;
    DWORD dwByteCountQueued;
    QWORD qwByteCountProcessed;
    DWORD dwNumOutstandingSinkSampleRequests;
    DWORD dwAverageSampleRateReceived;
    DWORD dwAverageSampleRateEncoded;
    DWORD dwAverageSampleRateProcessed;
    } 	MF_SINK_WRITER_STATISTICS;



extern RPC_IF_HANDLE __MIDL_itf_mfreadwrite_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfreadwrite_0000_0003_v0_0_s_ifspec;

#ifndef __IMFSinkWriter_INTERFACE_DEFINED__
#define __IMFSinkWriter_INTERFACE_DEFINED__

/* interface IMFSinkWriter */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFSinkWriter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3137f1cd-fe5e-4805-a5d8-fb477448cb3d")
    IMFSinkWriter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddStream( 
            /* [annotation][in] */ 
            __in  IMFMediaType *pTargetMediaType,
            /* [annotation][out] */ 
            __out  DWORD *pdwStreamIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetInputMediaType( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  IMFMediaType *pInputMediaType,
            /* [annotation][in] */ 
            __in_opt  IMFAttributes *pEncodingParameters) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BeginWriting( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE WriteSample( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  IMFSample *pSample) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SendStreamTick( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  LONGLONG llTimestamp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PlaceMarker( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  LPVOID pvContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NotifyEndOfSegment( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Flush( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Finalize( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetServiceForStream( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  REFGUID guidService,
            /* [annotation][in] */ 
            __in  REFIID riid,
            /* [annotation][out] */ 
            __out  LPVOID *ppvObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStatistics( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][out] */ 
            __out  MF_SINK_WRITER_STATISTICS *pStats) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSinkWriterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFSinkWriter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFSinkWriter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFSinkWriter * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddStream )( 
            IMFSinkWriter * This,
            /* [annotation][in] */ 
            __in  IMFMediaType *pTargetMediaType,
            /* [annotation][out] */ 
            __out  DWORD *pdwStreamIndex);
        
        HRESULT ( STDMETHODCALLTYPE *SetInputMediaType )( 
            IMFSinkWriter * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  IMFMediaType *pInputMediaType,
            /* [annotation][in] */ 
            __in_opt  IMFAttributes *pEncodingParameters);
        
        HRESULT ( STDMETHODCALLTYPE *BeginWriting )( 
            IMFSinkWriter * This);
        
        HRESULT ( STDMETHODCALLTYPE *WriteSample )( 
            IMFSinkWriter * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  IMFSample *pSample);
        
        HRESULT ( STDMETHODCALLTYPE *SendStreamTick )( 
            IMFSinkWriter * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  LONGLONG llTimestamp);
        
        HRESULT ( STDMETHODCALLTYPE *PlaceMarker )( 
            IMFSinkWriter * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  LPVOID pvContext);
        
        HRESULT ( STDMETHODCALLTYPE *NotifyEndOfSegment )( 
            IMFSinkWriter * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex);
        
        HRESULT ( STDMETHODCALLTYPE *Flush )( 
            IMFSinkWriter * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex);
        
        HRESULT ( STDMETHODCALLTYPE *Finalize )( 
            IMFSinkWriter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetServiceForStream )( 
            IMFSinkWriter * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  REFGUID guidService,
            /* [annotation][in] */ 
            __in  REFIID riid,
            /* [annotation][out] */ 
            __out  LPVOID *ppvObject);
        
        HRESULT ( STDMETHODCALLTYPE *GetStatistics )( 
            IMFSinkWriter * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][out] */ 
            __out  MF_SINK_WRITER_STATISTICS *pStats);
        
        END_INTERFACE
    } IMFSinkWriterVtbl;

    interface IMFSinkWriter
    {
        CONST_VTBL struct IMFSinkWriterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSinkWriter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSinkWriter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSinkWriter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSinkWriter_AddStream(This,pTargetMediaType,pdwStreamIndex)	\
    ( (This)->lpVtbl -> AddStream(This,pTargetMediaType,pdwStreamIndex) ) 

#define IMFSinkWriter_SetInputMediaType(This,dwStreamIndex,pInputMediaType,pEncodingParameters)	\
    ( (This)->lpVtbl -> SetInputMediaType(This,dwStreamIndex,pInputMediaType,pEncodingParameters) ) 

#define IMFSinkWriter_BeginWriting(This)	\
    ( (This)->lpVtbl -> BeginWriting(This) ) 

#define IMFSinkWriter_WriteSample(This,dwStreamIndex,pSample)	\
    ( (This)->lpVtbl -> WriteSample(This,dwStreamIndex,pSample) ) 

#define IMFSinkWriter_SendStreamTick(This,dwStreamIndex,llTimestamp)	\
    ( (This)->lpVtbl -> SendStreamTick(This,dwStreamIndex,llTimestamp) ) 

#define IMFSinkWriter_PlaceMarker(This,dwStreamIndex,pvContext)	\
    ( (This)->lpVtbl -> PlaceMarker(This,dwStreamIndex,pvContext) ) 

#define IMFSinkWriter_NotifyEndOfSegment(This,dwStreamIndex)	\
    ( (This)->lpVtbl -> NotifyEndOfSegment(This,dwStreamIndex) ) 

#define IMFSinkWriter_Flush(This,dwStreamIndex)	\
    ( (This)->lpVtbl -> Flush(This,dwStreamIndex) ) 

#define IMFSinkWriter_Finalize(This)	\
    ( (This)->lpVtbl -> Finalize(This) ) 

#define IMFSinkWriter_GetServiceForStream(This,dwStreamIndex,guidService,riid,ppvObject)	\
    ( (This)->lpVtbl -> GetServiceForStream(This,dwStreamIndex,guidService,riid,ppvObject) ) 

#define IMFSinkWriter_GetStatistics(This,dwStreamIndex,pStats)	\
    ( (This)->lpVtbl -> GetStatistics(This,dwStreamIndex,pStats) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSinkWriter_INTERFACE_DEFINED__ */


#ifndef __IMFSinkWriterCallback_INTERFACE_DEFINED__
#define __IMFSinkWriterCallback_INTERFACE_DEFINED__

/* interface IMFSinkWriterCallback */
/* [local][uuid][object] */ 


EXTERN_C const IID IID_IMFSinkWriterCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("666f76de-33d2-41b9-a458-29ed0a972c58")
    IMFSinkWriterCallback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnFinalize( 
            /* [annotation][in] */ 
            __in  HRESULT hrStatus) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnMarker( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  LPVOID pvContext) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFSinkWriterCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFSinkWriterCallback * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFSinkWriterCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFSinkWriterCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnFinalize )( 
            IMFSinkWriterCallback * This,
            /* [annotation][in] */ 
            __in  HRESULT hrStatus);
        
        HRESULT ( STDMETHODCALLTYPE *OnMarker )( 
            IMFSinkWriterCallback * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  LPVOID pvContext);
        
        END_INTERFACE
    } IMFSinkWriterCallbackVtbl;

    interface IMFSinkWriterCallback
    {
        CONST_VTBL struct IMFSinkWriterCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFSinkWriterCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFSinkWriterCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFSinkWriterCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFSinkWriterCallback_OnFinalize(This,hrStatus)	\
    ( (This)->lpVtbl -> OnFinalize(This,hrStatus) ) 

#define IMFSinkWriterCallback_OnMarker(This,dwStreamIndex,pvContext)	\
    ( (This)->lpVtbl -> OnMarker(This,dwStreamIndex,pvContext) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFSinkWriterCallback_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfreadwrite_0000_0005 */
/* [local] */ 

EXTERN_GUID( MF_READWRITE_DISABLE_CONVERTERS, 0x98d5b065, 0x1374, 0x4847, 0x8d, 0x5d, 0x31, 0x52, 0x0f, 0xee, 0x71, 0x56);
EXTERN_GUID( MF_READWRITE_ENABLE_HARDWARE_TRANSFORMS, 0xa634a91c, 0x822b, 0x41b9, 0xa4, 0x94, 0x4d, 0xe4, 0x64, 0x36, 0x12, 0xb0);
#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfreadwrite_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfreadwrite_0000_0005_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\mfplay.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mfplay.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mfplay_h__
#define __mfplay_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMFPMediaPlayer_FWD_DEFINED__
#define __IMFPMediaPlayer_FWD_DEFINED__
typedef interface IMFPMediaPlayer IMFPMediaPlayer;
#endif 	/* __IMFPMediaPlayer_FWD_DEFINED__ */


#ifndef __IMFPMediaItem_FWD_DEFINED__
#define __IMFPMediaItem_FWD_DEFINED__
typedef interface IMFPMediaItem IMFPMediaItem;
#endif 	/* __IMFPMediaItem_FWD_DEFINED__ */


#ifndef __IMFPMediaPlayerCallback_FWD_DEFINED__
#define __IMFPMediaPlayerCallback_FWD_DEFINED__
typedef interface IMFPMediaPlayerCallback IMFPMediaPlayerCallback;
#endif 	/* __IMFPMediaPlayerCallback_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"
#include "propsys.h"
#include "mfidl.h"
#include "evr.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mfplay_0000_0000 */
/* [local] */ 

#if (WINVER >= _WIN32_WINNT_WIN7) 





interface IMFMediaEvent;
interface IMFNetCredential;
typedef UINT32 MFP_CREATION_OPTIONS;

typedef /* [v1_enum] */ 
enum _MFP_CREATION_OPTIONS
    {	MFP_OPTION_NONE	= 0,
	MFP_OPTION_FREE_THREADED_CALLBACK	= 0x1,
	MFP_OPTION_NO_MMCSS	= 0x2,
	MFP_OPTION_NO_REMOTE_DESKTOP_OPTIMIZATION	= 0x4
    } 	_MFP_CREATION_OPTIONS;

typedef /* [v1_enum] */ 
enum MFP_MEDIAPLAYER_STATE
    {	MFP_MEDIAPLAYER_STATE_EMPTY	= 0,
	MFP_MEDIAPLAYER_STATE_STOPPED	= 0x1,
	MFP_MEDIAPLAYER_STATE_PLAYING	= 0x2,
	MFP_MEDIAPLAYER_STATE_PAUSED	= 0x3,
	MFP_MEDIAPLAYER_STATE_SHUTDOWN	= 0x4
    } 	MFP_MEDIAPLAYER_STATE;

typedef UINT32 MFP_MEDIAITEM_CHARACTERISTICS;

typedef /* [v1_enum] */ 
enum _MFP_MEDIAITEM_CHARACTERISTICS
    {	MFP_MEDIAITEM_IS_LIVE	= 0x1,
	MFP_MEDIAITEM_CAN_SEEK	= 0x2,
	MFP_MEDIAITEM_CAN_PAUSE	= 0x4,
	MFP_MEDIAITEM_HAS_SLOW_SEEK	= 0x8
    } 	_MFP_MEDIAITEM_CHARACTERISTICS;

typedef UINT32 MFP_CREDENTIAL_FLAGS;

typedef /* [v1_enum] */ 
enum _MFP_CREDENTIAL_FLAGS
    {	MFP_CREDENTIAL_PROMPT	= 0x1,
	MFP_CREDENTIAL_SAVE	= 0x2,
	MFP_CREDENTIAL_DO_NOT_CACHE	= 0x4,
	MFP_CREDENTIAL_CLEAR_TEXT	= 0x8,
	MFP_CREDENTIAL_PROXY	= 0x10,
	MFP_CREDENTIAL_LOGGED_ON_USER	= 0x20
    } 	_MFP_CREDENTIAL_FLAGS;

STDAPI MFPCreateMediaPlayer(
            __in_opt  LPCWSTR pwszURL,
            __in      BOOL fStartPlayback,
            __in_opt  MFP_CREATION_OPTIONS creationOptions,
            __in_opt  IMFPMediaPlayerCallback * pCallback,
            __in_opt  HWND hWnd,
            __out_opt IMFPMediaPlayer ** ppMediaPlayer );


extern RPC_IF_HANDLE __MIDL_itf_mfplay_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfplay_0000_0000_v0_0_s_ifspec;

#ifndef __IMFPMediaPlayer_INTERFACE_DEFINED__
#define __IMFPMediaPlayer_INTERFACE_DEFINED__

/* interface IMFPMediaPlayer */
/* [uuid][object][local] */ 


EXTERN_C const IID IID_IMFPMediaPlayer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A714590A-58AF-430a-85BF-44F5EC838D85")
    IMFPMediaPlayer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Play( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Pause( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FrameStep( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPosition( 
            /* [annotation][in] */ 
            __in  REFGUID guidPositionType,
            /* [annotation][in] */ 
            __in  const PROPVARIANT *pvPositionValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [annotation][in] */ 
            __in  REFGUID guidPositionType,
            /* [annotation][out] */ 
            __out  PROPVARIANT *pvPositionValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDuration( 
            /* [annotation][in] */ 
            __in  REFGUID guidPositionType,
            /* [annotation][out] */ 
            __out  PROPVARIANT *pvDurationValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetRate( 
            /* [annotation][in] */ 
            __in  float flRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRate( 
            /* [annotation][out] */ 
            __out  float *pflRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSupportedRates( 
            /* [annotation][in] */ 
            __in  BOOL fForwardDirection,
            /* [annotation][out] */ 
            __out  float *pflSlowestRate,
            /* [annotation][out] */ 
            __out  float *pflFastestRate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetState( 
            /* [annotation][out] */ 
            __out  MFP_MEDIAPLAYER_STATE *peState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateMediaItemFromURL( 
            /* [annotation][in] */ 
            __in  LPCWSTR pwszURL,
            /* [annotation][in] */ 
            __in  BOOL fSync,
            /* [annotation][in] */ 
            __in  DWORD_PTR dwUserData,
            /* [annotation][out] */ 
            __out_opt  IMFPMediaItem **ppMediaItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateMediaItemFromObject( 
            /* [annotation][in] */ 
            __in  IUnknown *pIUnknownObj,
            /* [annotation][in] */ 
            __in  BOOL fSync,
            /* [annotation][in] */ 
            __in  DWORD_PTR dwUserData,
            /* [annotation][out] */ 
            __out_opt  IMFPMediaItem **ppMediaItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMediaItem( 
            /* [annotation][in] */ 
            __in  IMFPMediaItem *pIMFPMediaItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ClearMediaItem( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMediaItem( 
            /* [annotation][out] */ 
            __out  IMFPMediaItem **ppIMFPMediaItem) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVolume( 
            /* [annotation][out] */ 
            __out  float *pflVolume) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVolume( 
            /* [annotation][in] */ 
            __in  float flVolume) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBalance( 
            /* [annotation][out] */ 
            __out  float *pflBalance) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBalance( 
            /* [annotation][in] */ 
            __in  float flBalance) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMute( 
            /* [annotation][out] */ 
            __out  BOOL *pfMute) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMute( 
            /* [annotation][in] */ 
            __in  BOOL fMute) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNativeVideoSize( 
            /* [annotation][out] */ 
            __out_opt  SIZE *pszVideo,
            /* [annotation][out] */ 
            __out_opt  SIZE *pszARVideo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIdealVideoSize( 
            /* [annotation][out] */ 
            __out_opt  SIZE *pszMin,
            /* [annotation][out] */ 
            __out_opt  SIZE *pszMax) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVideoSourceRect( 
            /* [annotation][in] */ 
            __in  const MFVideoNormalizedRect *pnrcSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVideoSourceRect( 
            /* [annotation][out] */ 
            __out  MFVideoNormalizedRect *pnrcSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAspectRatioMode( 
            /* [annotation][in] */ 
            __in  DWORD dwAspectRatioMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAspectRatioMode( 
            /* [annotation][out] */ 
            __out  DWORD *pdwAspectRatioMode) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVideoWindow( 
            /* [annotation][out] */ 
            __out  HWND *phwndVideo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateVideo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetBorderColor( 
            /* [annotation][in] */ 
            __in  COLORREF Clr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBorderColor( 
            /* [annotation][out] */ 
            __out  COLORREF *pClr) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertEffect( 
            /* [annotation][in] */ 
            __in  IUnknown *pEffect,
            /* [annotation][in] */ 
            __in  BOOL fOptional) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveEffect( 
            /* [annotation][in] */ 
            __in  IUnknown *pEffect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAllEffects( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Shutdown( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFPMediaPlayerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFPMediaPlayer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFPMediaPlayer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFPMediaPlayer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Play )( 
            IMFPMediaPlayer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IMFPMediaPlayer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IMFPMediaPlayer * This);
        
        HRESULT ( STDMETHODCALLTYPE *FrameStep )( 
            IMFPMediaPlayer * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetPosition )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  REFGUID guidPositionType,
            /* [annotation][in] */ 
            __in  const PROPVARIANT *pvPositionValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetPosition )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  REFGUID guidPositionType,
            /* [annotation][out] */ 
            __out  PROPVARIANT *pvPositionValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetDuration )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  REFGUID guidPositionType,
            /* [annotation][out] */ 
            __out  PROPVARIANT *pvDurationValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetRate )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  float flRate);
        
        HRESULT ( STDMETHODCALLTYPE *GetRate )( 
            IMFPMediaPlayer * This,
            /* [annotation][out] */ 
            __out  float *pflRate);
        
        HRESULT ( STDMETHODCALLTYPE *GetSupportedRates )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  BOOL fForwardDirection,
            /* [annotation][out] */ 
            __out  float *pflSlowestRate,
            /* [annotation][out] */ 
            __out  float *pflFastestRate);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IMFPMediaPlayer * This,
            /* [annotation][out] */ 
            __out  MFP_MEDIAPLAYER_STATE *peState);
        
        HRESULT ( STDMETHODCALLTYPE *CreateMediaItemFromURL )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  LPCWSTR pwszURL,
            /* [annotation][in] */ 
            __in  BOOL fSync,
            /* [annotation][in] */ 
            __in  DWORD_PTR dwUserData,
            /* [annotation][out] */ 
            __out_opt  IMFPMediaItem **ppMediaItem);
        
        HRESULT ( STDMETHODCALLTYPE *CreateMediaItemFromObject )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  IUnknown *pIUnknownObj,
            /* [annotation][in] */ 
            __in  BOOL fSync,
            /* [annotation][in] */ 
            __in  DWORD_PTR dwUserData,
            /* [annotation][out] */ 
            __out_opt  IMFPMediaItem **ppMediaItem);
        
        HRESULT ( STDMETHODCALLTYPE *SetMediaItem )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  IMFPMediaItem *pIMFPMediaItem);
        
        HRESULT ( STDMETHODCALLTYPE *ClearMediaItem )( 
            IMFPMediaPlayer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaItem )( 
            IMFPMediaPlayer * This,
            /* [annotation][out] */ 
            __out  IMFPMediaItem **ppIMFPMediaItem);
        
        HRESULT ( STDMETHODCALLTYPE *GetVolume )( 
            IMFPMediaPlayer * This,
            /* [annotation][out] */ 
            __out  float *pflVolume);
        
        HRESULT ( STDMETHODCALLTYPE *SetVolume )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  float flVolume);
        
        HRESULT ( STDMETHODCALLTYPE *GetBalance )( 
            IMFPMediaPlayer * This,
            /* [annotation][out] */ 
            __out  float *pflBalance);
        
        HRESULT ( STDMETHODCALLTYPE *SetBalance )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  float flBalance);
        
        HRESULT ( STDMETHODCALLTYPE *GetMute )( 
            IMFPMediaPlayer * This,
            /* [annotation][out] */ 
            __out  BOOL *pfMute);
        
        HRESULT ( STDMETHODCALLTYPE *SetMute )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  BOOL fMute);
        
        HRESULT ( STDMETHODCALLTYPE *GetNativeVideoSize )( 
            IMFPMediaPlayer * This,
            /* [annotation][out] */ 
            __out_opt  SIZE *pszVideo,
            /* [annotation][out] */ 
            __out_opt  SIZE *pszARVideo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIdealVideoSize )( 
            IMFPMediaPlayer * This,
            /* [annotation][out] */ 
            __out_opt  SIZE *pszMin,
            /* [annotation][out] */ 
            __out_opt  SIZE *pszMax);
        
        HRESULT ( STDMETHODCALLTYPE *SetVideoSourceRect )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  const MFVideoNormalizedRect *pnrcSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetVideoSourceRect )( 
            IMFPMediaPlayer * This,
            /* [annotation][out] */ 
            __out  MFVideoNormalizedRect *pnrcSource);
        
        HRESULT ( STDMETHODCALLTYPE *SetAspectRatioMode )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  DWORD dwAspectRatioMode);
        
        HRESULT ( STDMETHODCALLTYPE *GetAspectRatioMode )( 
            IMFPMediaPlayer * This,
            /* [annotation][out] */ 
            __out  DWORD *pdwAspectRatioMode);
        
        HRESULT ( STDMETHODCALLTYPE *GetVideoWindow )( 
            IMFPMediaPlayer * This,
            /* [annotation][out] */ 
            __out  HWND *phwndVideo);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateVideo )( 
            IMFPMediaPlayer * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetBorderColor )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  COLORREF Clr);
        
        HRESULT ( STDMETHODCALLTYPE *GetBorderColor )( 
            IMFPMediaPlayer * This,
            /* [annotation][out] */ 
            __out  COLORREF *pClr);
        
        HRESULT ( STDMETHODCALLTYPE *InsertEffect )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  IUnknown *pEffect,
            /* [annotation][in] */ 
            __in  BOOL fOptional);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveEffect )( 
            IMFPMediaPlayer * This,
            /* [annotation][in] */ 
            __in  IUnknown *pEffect);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAllEffects )( 
            IMFPMediaPlayer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Shutdown )( 
            IMFPMediaPlayer * This);
        
        END_INTERFACE
    } IMFPMediaPlayerVtbl;

    interface IMFPMediaPlayer
    {
        CONST_VTBL struct IMFPMediaPlayerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFPMediaPlayer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFPMediaPlayer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFPMediaPlayer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFPMediaPlayer_Play(This)	\
    ( (This)->lpVtbl -> Play(This) ) 

#define IMFPMediaPlayer_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IMFPMediaPlayer_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IMFPMediaPlayer_FrameStep(This)	\
    ( (This)->lpVtbl -> FrameStep(This) ) 

#define IMFPMediaPlayer_SetPosition(This,guidPositionType,pvPositionValue)	\
    ( (This)->lpVtbl -> SetPosition(This,guidPositionType,pvPositionValue) ) 

#define IMFPMediaPlayer_GetPosition(This,guidPositionType,pvPositionValue)	\
    ( (This)->lpVtbl -> GetPosition(This,guidPositionType,pvPositionValue) ) 

#define IMFPMediaPlayer_GetDuration(This,guidPositionType,pvDurationValue)	\
    ( (This)->lpVtbl -> GetDuration(This,guidPositionType,pvDurationValue) ) 

#define IMFPMediaPlayer_SetRate(This,flRate)	\
    ( (This)->lpVtbl -> SetRate(This,flRate) ) 

#define IMFPMediaPlayer_GetRate(This,pflRate)	\
    ( (This)->lpVtbl -> GetRate(This,pflRate) ) 

#define IMFPMediaPlayer_GetSupportedRates(This,fForwardDirection,pflSlowestRate,pflFastestRate)	\
    ( (This)->lpVtbl -> GetSupportedRates(This,fForwardDirection,pflSlowestRate,pflFastestRate) ) 

#define IMFPMediaPlayer_GetState(This,peState)	\
    ( (This)->lpVtbl -> GetState(This,peState) ) 

#define IMFPMediaPlayer_CreateMediaItemFromURL(This,pwszURL,fSync,dwUserData,ppMediaItem)	\
    ( (This)->lpVtbl -> CreateMediaItemFromURL(This,pwszURL,fSync,dwUserData,ppMediaItem) ) 

#define IMFPMediaPlayer_CreateMediaItemFromObject(This,pIUnknownObj,fSync,dwUserData,ppMediaItem)	\
    ( (This)->lpVtbl -> CreateMediaItemFromObject(This,pIUnknownObj,fSync,dwUserData,ppMediaItem) ) 

#define IMFPMediaPlayer_SetMediaItem(This,pIMFPMediaItem)	\
    ( (This)->lpVtbl -> SetMediaItem(This,pIMFPMediaItem) ) 

#define IMFPMediaPlayer_ClearMediaItem(This)	\
    ( (This)->lpVtbl -> ClearMediaItem(This) ) 

#define IMFPMediaPlayer_GetMediaItem(This,ppIMFPMediaItem)	\
    ( (This)->lpVtbl -> GetMediaItem(This,ppIMFPMediaItem) ) 

#define IMFPMediaPlayer_GetVolume(This,pflVolume)	\
    ( (This)->lpVtbl -> GetVolume(This,pflVolume) ) 

#define IMFPMediaPlayer_SetVolume(This,flVolume)	\
    ( (This)->lpVtbl -> SetVolume(This,flVolume) ) 

#define IMFPMediaPlayer_GetBalance(This,pflBalance)	\
    ( (This)->lpVtbl -> GetBalance(This,pflBalance) ) 

#define IMFPMediaPlayer_SetBalance(This,flBalance)	\
    ( (This)->lpVtbl -> SetBalance(This,flBalance) ) 

#define IMFPMediaPlayer_GetMute(This,pfMute)	\
    ( (This)->lpVtbl -> GetMute(This,pfMute) ) 

#define IMFPMediaPlayer_SetMute(This,fMute)	\
    ( (This)->lpVtbl -> SetMute(This,fMute) ) 

#define IMFPMediaPlayer_GetNativeVideoSize(This,pszVideo,pszARVideo)	\
    ( (This)->lpVtbl -> GetNativeVideoSize(This,pszVideo,pszARVideo) ) 

#define IMFPMediaPlayer_GetIdealVideoSize(This,pszMin,pszMax)	\
    ( (This)->lpVtbl -> GetIdealVideoSize(This,pszMin,pszMax) ) 

#define IMFPMediaPlayer_SetVideoSourceRect(This,pnrcSource)	\
    ( (This)->lpVtbl -> SetVideoSourceRect(This,pnrcSource) ) 

#define IMFPMediaPlayer_GetVideoSourceRect(This,pnrcSource)	\
    ( (This)->lpVtbl -> GetVideoSourceRect(This,pnrcSource) ) 

#define IMFPMediaPlayer_SetAspectRatioMode(This,dwAspectRatioMode)	\
    ( (This)->lpVtbl -> SetAspectRatioMode(This,dwAspectRatioMode) ) 

#define IMFPMediaPlayer_GetAspectRatioMode(This,pdwAspectRatioMode)	\
    ( (This)->lpVtbl -> GetAspectRatioMode(This,pdwAspectRatioMode) ) 

#define IMFPMediaPlayer_GetVideoWindow(This,phwndVideo)	\
    ( (This)->lpVtbl -> GetVideoWindow(This,phwndVideo) ) 

#define IMFPMediaPlayer_UpdateVideo(This)	\
    ( (This)->lpVtbl -> UpdateVideo(This) ) 

#define IMFPMediaPlayer_SetBorderColor(This,Clr)	\
    ( (This)->lpVtbl -> SetBorderColor(This,Clr) ) 

#define IMFPMediaPlayer_GetBorderColor(This,pClr)	\
    ( (This)->lpVtbl -> GetBorderColor(This,pClr) ) 

#define IMFPMediaPlayer_InsertEffect(This,pEffect,fOptional)	\
    ( (This)->lpVtbl -> InsertEffect(This,pEffect,fOptional) ) 

#define IMFPMediaPlayer_RemoveEffect(This,pEffect)	\
    ( (This)->lpVtbl -> RemoveEffect(This,pEffect) ) 

#define IMFPMediaPlayer_RemoveAllEffects(This)	\
    ( (This)->lpVtbl -> RemoveAllEffects(This) ) 

#define IMFPMediaPlayer_Shutdown(This)	\
    ( (This)->lpVtbl -> Shutdown(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFPMediaPlayer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfplay_0000_0001 */
/* [local] */ 

EXTERN_GUID( MFP_POSITIONTYPE_100NS, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 );


extern RPC_IF_HANDLE __MIDL_itf_mfplay_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfplay_0000_0001_v0_0_s_ifspec;

#ifndef __IMFPMediaItem_INTERFACE_DEFINED__
#define __IMFPMediaItem_INTERFACE_DEFINED__

/* interface IMFPMediaItem */
/* [uuid][object][local] */ 


EXTERN_C const IID IID_IMFPMediaItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("90EB3E6B-ECBF-45cc-B1DA-C6FE3EA70D57")
    IMFPMediaItem : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMediaPlayer( 
            /* [annotation][out] */ 
            __out  IMFPMediaPlayer **ppMediaPlayer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetURL( 
            /* [annotation][out] */ 
            __out  LPWSTR *ppwszURL) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetObject( 
            /* [annotation][out] */ 
            __out  IUnknown **ppIUnknown) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUserData( 
            /* [annotation][out] */ 
            __out  DWORD_PTR *pdwUserData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetUserData( 
            /* [annotation][in] */ 
            __in  DWORD_PTR dwUserData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStartStopPosition( 
            /* [annotation][out] */ 
            __out_opt  GUID *pguidStartPositionType,
            /* [annotation][out] */ 
            __out_opt  PROPVARIANT *pvStartValue,
            /* [annotation][out] */ 
            __out_opt  GUID *pguidStopPositionType,
            /* [annotation][out] */ 
            __out_opt  PROPVARIANT *pvStopValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStartStopPosition( 
            /* [annotation][in] */ 
            __in_opt  const GUID *pguidStartPositionType,
            /* [annotation][in] */ 
            __in_opt  const PROPVARIANT *pvStartValue,
            /* [annotation][in] */ 
            __in_opt  const GUID *pguidStopPositionType,
            /* [annotation][in] */ 
            __in_opt  const PROPVARIANT *pvStopValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HasVideo( 
            /* [annotation][out] */ 
            __out_opt  BOOL *pfHasVideo,
            /* [annotation][out] */ 
            __out_opt  BOOL *pfSelected) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HasAudio( 
            /* [annotation][out] */ 
            __out_opt  BOOL *pfHasAudio,
            /* [annotation][out] */ 
            __out_opt  BOOL *pfSelected) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsProtected( 
            /* [annotation][out] */ 
            __out  BOOL *pfProtected) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDuration( 
            /* [annotation][in] */ 
            __in  REFGUID guidPositionType,
            /* [annotation][out] */ 
            __out  PROPVARIANT *pvDurationValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumberOfStreams( 
            /* [annotation][out] */ 
            __out  DWORD *pdwStreamCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStreamSelection( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][out] */ 
            __out  BOOL *pfEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStreamSelection( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  BOOL fEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStreamAttribute( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  REFGUID guidMFAttribute,
            /* [annotation][out] */ 
            __out  PROPVARIANT *pvValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPresentationAttribute( 
            /* [annotation][in] */ 
            __in  REFGUID guidMFAttribute,
            /* [annotation][out] */ 
            __out  PROPVARIANT *pvValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCharacteristics( 
            /* [annotation][out] */ 
            __out  MFP_MEDIAITEM_CHARACTERISTICS *pCharacteristics) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStreamSink( 
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in_opt  IUnknown *pMediaSink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMetadata( 
            /* [annotation][out] */ 
            __out  IPropertyStore **ppMetadataStore) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFPMediaItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFPMediaItem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFPMediaItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFPMediaItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaPlayer )( 
            IMFPMediaItem * This,
            /* [annotation][out] */ 
            __out  IMFPMediaPlayer **ppMediaPlayer);
        
        HRESULT ( STDMETHODCALLTYPE *GetURL )( 
            IMFPMediaItem * This,
            /* [annotation][out] */ 
            __out  LPWSTR *ppwszURL);
        
        HRESULT ( STDMETHODCALLTYPE *GetObject )( 
            IMFPMediaItem * This,
            /* [annotation][out] */ 
            __out  IUnknown **ppIUnknown);
        
        HRESULT ( STDMETHODCALLTYPE *GetUserData )( 
            IMFPMediaItem * This,
            /* [annotation][out] */ 
            __out  DWORD_PTR *pdwUserData);
        
        HRESULT ( STDMETHODCALLTYPE *SetUserData )( 
            IMFPMediaItem * This,
            /* [annotation][in] */ 
            __in  DWORD_PTR dwUserData);
        
        HRESULT ( STDMETHODCALLTYPE *GetStartStopPosition )( 
            IMFPMediaItem * This,
            /* [annotation][out] */ 
            __out_opt  GUID *pguidStartPositionType,
            /* [annotation][out] */ 
            __out_opt  PROPVARIANT *pvStartValue,
            /* [annotation][out] */ 
            __out_opt  GUID *pguidStopPositionType,
            /* [annotation][out] */ 
            __out_opt  PROPVARIANT *pvStopValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetStartStopPosition )( 
            IMFPMediaItem * This,
            /* [annotation][in] */ 
            __in_opt  const GUID *pguidStartPositionType,
            /* [annotation][in] */ 
            __in_opt  const PROPVARIANT *pvStartValue,
            /* [annotation][in] */ 
            __in_opt  const GUID *pguidStopPositionType,
            /* [annotation][in] */ 
            __in_opt  const PROPVARIANT *pvStopValue);
        
        HRESULT ( STDMETHODCALLTYPE *HasVideo )( 
            IMFPMediaItem * This,
            /* [annotation][out] */ 
            __out_opt  BOOL *pfHasVideo,
            /* [annotation][out] */ 
            __out_opt  BOOL *pfSelected);
        
        HRESULT ( STDMETHODCALLTYPE *HasAudio )( 
            IMFPMediaItem * This,
            /* [annotation][out] */ 
            __out_opt  BOOL *pfHasAudio,
            /* [annotation][out] */ 
            __out_opt  BOOL *pfSelected);
        
        HRESULT ( STDMETHODCALLTYPE *IsProtected )( 
            IMFPMediaItem * This,
            /* [annotation][out] */ 
            __out  BOOL *pfProtected);
        
        HRESULT ( STDMETHODCALLTYPE *GetDuration )( 
            IMFPMediaItem * This,
            /* [annotation][in] */ 
            __in  REFGUID guidPositionType,
            /* [annotation][out] */ 
            __out  PROPVARIANT *pvDurationValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberOfStreams )( 
            IMFPMediaItem * This,
            /* [annotation][out] */ 
            __out  DWORD *pdwStreamCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamSelection )( 
            IMFPMediaItem * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][out] */ 
            __out  BOOL *pfEnabled);
        
        HRESULT ( STDMETHODCALLTYPE *SetStreamSelection )( 
            IMFPMediaItem * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  BOOL fEnabled);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamAttribute )( 
            IMFPMediaItem * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in  REFGUID guidMFAttribute,
            /* [annotation][out] */ 
            __out  PROPVARIANT *pvValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetPresentationAttribute )( 
            IMFPMediaItem * This,
            /* [annotation][in] */ 
            __in  REFGUID guidMFAttribute,
            /* [annotation][out] */ 
            __out  PROPVARIANT *pvValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetCharacteristics )( 
            IMFPMediaItem * This,
            /* [annotation][out] */ 
            __out  MFP_MEDIAITEM_CHARACTERISTICS *pCharacteristics);
        
        HRESULT ( STDMETHODCALLTYPE *SetStreamSink )( 
            IMFPMediaItem * This,
            /* [annotation][in] */ 
            __in  DWORD dwStreamIndex,
            /* [annotation][in] */ 
            __in_opt  IUnknown *pMediaSink);
        
        HRESULT ( STDMETHODCALLTYPE *GetMetadata )( 
            IMFPMediaItem * This,
            /* [annotation][out] */ 
            __out  IPropertyStore **ppMetadataStore);
        
        END_INTERFACE
    } IMFPMediaItemVtbl;

    interface IMFPMediaItem
    {
        CONST_VTBL struct IMFPMediaItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFPMediaItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFPMediaItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFPMediaItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFPMediaItem_GetMediaPlayer(This,ppMediaPlayer)	\
    ( (This)->lpVtbl -> GetMediaPlayer(This,ppMediaPlayer) ) 

#define IMFPMediaItem_GetURL(This,ppwszURL)	\
    ( (This)->lpVtbl -> GetURL(This,ppwszURL) ) 

#define IMFPMediaItem_GetObject(This,ppIUnknown)	\
    ( (This)->lpVtbl -> GetObject(This,ppIUnknown) ) 

#define IMFPMediaItem_GetUserData(This,pdwUserData)	\
    ( (This)->lpVtbl -> GetUserData(This,pdwUserData) ) 

#define IMFPMediaItem_SetUserData(This,dwUserData)	\
    ( (This)->lpVtbl -> SetUserData(This,dwUserData) ) 

#define IMFPMediaItem_GetStartStopPosition(This,pguidStartPositionType,pvStartValue,pguidStopPositionType,pvStopValue)	\
    ( (This)->lpVtbl -> GetStartStopPosition(This,pguidStartPositionType,pvStartValue,pguidStopPositionType,pvStopValue) ) 

#define IMFPMediaItem_SetStartStopPosition(This,pguidStartPositionType,pvStartValue,pguidStopPositionType,pvStopValue)	\
    ( (This)->lpVtbl -> SetStartStopPosition(This,pguidStartPositionType,pvStartValue,pguidStopPositionType,pvStopValue) ) 

#define IMFPMediaItem_HasVideo(This,pfHasVideo,pfSelected)	\
    ( (This)->lpVtbl -> HasVideo(This,pfHasVideo,pfSelected) ) 

#define IMFPMediaItem_HasAudio(This,pfHasAudio,pfSelected)	\
    ( (This)->lpVtbl -> HasAudio(This,pfHasAudio,pfSelected) ) 

#define IMFPMediaItem_IsProtected(This,pfProtected)	\
    ( (This)->lpVtbl -> IsProtected(This,pfProtected) ) 

#define IMFPMediaItem_GetDuration(This,guidPositionType,pvDurationValue)	\
    ( (This)->lpVtbl -> GetDuration(This,guidPositionType,pvDurationValue) ) 

#define IMFPMediaItem_GetNumberOfStreams(This,pdwStreamCount)	\
    ( (This)->lpVtbl -> GetNumberOfStreams(This,pdwStreamCount) ) 

#define IMFPMediaItem_GetStreamSelection(This,dwStreamIndex,pfEnabled)	\
    ( (This)->lpVtbl -> GetStreamSelection(This,dwStreamIndex,pfEnabled) ) 

#define IMFPMediaItem_SetStreamSelection(This,dwStreamIndex,fEnabled)	\
    ( (This)->lpVtbl -> SetStreamSelection(This,dwStreamIndex,fEnabled) ) 

#define IMFPMediaItem_GetStreamAttribute(This,dwStreamIndex,guidMFAttribute,pvValue)	\
    ( (This)->lpVtbl -> GetStreamAttribute(This,dwStreamIndex,guidMFAttribute,pvValue) ) 

#define IMFPMediaItem_GetPresentationAttribute(This,guidMFAttribute,pvValue)	\
    ( (This)->lpVtbl -> GetPresentationAttribute(This,guidMFAttribute,pvValue) ) 

#define IMFPMediaItem_GetCharacteristics(This,pCharacteristics)	\
    ( (This)->lpVtbl -> GetCharacteristics(This,pCharacteristics) ) 

#define IMFPMediaItem_SetStreamSink(This,dwStreamIndex,pMediaSink)	\
    ( (This)->lpVtbl -> SetStreamSink(This,dwStreamIndex,pMediaSink) ) 

#define IMFPMediaItem_GetMetadata(This,ppMetadataStore)	\
    ( (This)->lpVtbl -> GetMetadata(This,ppMetadataStore) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFPMediaItem_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfplay_0000_0002 */
/* [local] */ 

typedef 
enum MFP_EVENT_TYPE
    {	MFP_EVENT_TYPE_PLAY	= 0,
	MFP_EVENT_TYPE_PAUSE	= 1,
	MFP_EVENT_TYPE_STOP	= 2,
	MFP_EVENT_TYPE_POSITION_SET	= 3,
	MFP_EVENT_TYPE_RATE_SET	= 4,
	MFP_EVENT_TYPE_MEDIAITEM_CREATED	= 5,
	MFP_EVENT_TYPE_MEDIAITEM_SET	= 6,
	MFP_EVENT_TYPE_FRAME_STEP	= 7,
	MFP_EVENT_TYPE_MEDIAITEM_CLEARED	= 8,
	MFP_EVENT_TYPE_MF	= 9,
	MFP_EVENT_TYPE_ERROR	= 10,
	MFP_EVENT_TYPE_PLAYBACK_ENDED	= 11,
	MFP_EVENT_TYPE_ACQUIRE_USER_CREDENTIAL	= 12
    } 	MFP_EVENT_TYPE;

typedef struct MFP_EVENT_HEADER
    {
    MFP_EVENT_TYPE eEventType;
    HRESULT hrEvent;
    IMFPMediaPlayer *pMediaPlayer;
    MFP_MEDIAPLAYER_STATE eState;
    IPropertyStore *pPropertyStore;
    } 	MFP_EVENT_HEADER;

typedef struct MFP_PLAY_EVENT
    {
    MFP_EVENT_HEADER header;
    IMFPMediaItem *pMediaItem;
    } 	MFP_PLAY_EVENT;

typedef struct MFP_PAUSE_EVENT
    {
    MFP_EVENT_HEADER header;
    IMFPMediaItem *pMediaItem;
    } 	MFP_PAUSE_EVENT;

typedef struct MFP_STOP_EVENT
    {
    MFP_EVENT_HEADER header;
    IMFPMediaItem *pMediaItem;
    } 	MFP_STOP_EVENT;

typedef struct MFP_POSITION_SET_EVENT
    {
    MFP_EVENT_HEADER header;
    IMFPMediaItem *pMediaItem;
    } 	MFP_POSITION_SET_EVENT;

typedef struct MFP_RATE_SET_EVENT
    {
    MFP_EVENT_HEADER header;
    IMFPMediaItem *pMediaItem;
    float flRate;
    } 	MFP_RATE_SET_EVENT;

typedef struct MFP_MEDIAITEM_CREATED_EVENT
    {
    MFP_EVENT_HEADER header;
    IMFPMediaItem *pMediaItem;
    DWORD_PTR dwUserData;
    } 	MFP_MEDIAITEM_CREATED_EVENT;

typedef struct MFP_MEDIAITEM_SET_EVENT
    {
    MFP_EVENT_HEADER header;
    IMFPMediaItem *pMediaItem;
    } 	MFP_MEDIAITEM_SET_EVENT;

typedef struct MFP_FRAME_STEP_EVENT
    {
    MFP_EVENT_HEADER header;
    IMFPMediaItem *pMediaItem;
    } 	MFP_FRAME_STEP_EVENT;

typedef struct MFP_MEDIAITEM_CLEARED_EVENT
    {
    MFP_EVENT_HEADER header;
    IMFPMediaItem *pMediaItem;
    } 	MFP_MEDIAITEM_CLEARED_EVENT;

typedef struct MFP_MF_EVENT
    {
    MFP_EVENT_HEADER header;
    MediaEventType MFEventType;
    IMFMediaEvent *pMFMediaEvent;
    IMFPMediaItem *pMediaItem;
    } 	MFP_MF_EVENT;

typedef struct MFP_ERROR_EVENT
    {
    MFP_EVENT_HEADER header;
    } 	MFP_ERROR_EVENT;

typedef struct MFP_PLAYBACK_ENDED_EVENT
    {
    MFP_EVENT_HEADER header;
    IMFPMediaItem *pMediaItem;
    } 	MFP_PLAYBACK_ENDED_EVENT;

typedef struct MFP_ACQUIRE_USER_CREDENTIAL_EVENT
    {
    MFP_EVENT_HEADER header;
    DWORD_PTR dwUserData;
    BOOL fProceedWithAuthentication;
    HRESULT hrAuthenticationStatus;
    LPCWSTR pwszURL;
    LPCWSTR pwszSite;
    LPCWSTR pwszRealm;
    LPCWSTR pwszPackage;
    LONG nRetries;
    MFP_CREDENTIAL_FLAGS flags;
    IMFNetCredential *pCredential;
    } 	MFP_ACQUIRE_USER_CREDENTIAL_EVENT;

EXTERN_C const DECLSPEC_SELECTANY PROPERTYKEY MFP_PKEY_StreamIndex = { { 0xa7cf9740, 0xe8d9, 0x4a87, { 0xbd, 0x8e, 0x29, 0x67, 0x0, 0x1f, 0xd3, 0xad } }, 0x00 }; 
EXTERN_C const DECLSPEC_SELECTANY PROPERTYKEY MFP_PKEY_StreamRenderingResults = { { 0xa7cf9740, 0xe8d9, 0x4a87, { 0xbd, 0x8e, 0x29, 0x67, 0x0, 0x1f, 0xd3, 0xad } }, 0x01 }; 
#define __MFP_CAST_EVENT( pHdr, Tag )                                   ( ( (pHdr)->eEventType == MFP_EVENT_TYPE_##Tag ) ? (MFP_##Tag##_EVENT*)(pHdr) : NULL )
#define MFP_GET_PLAY_EVENT( pHdr )                                      __MFP_CAST_EVENT( pHdr, PLAY )
#define MFP_GET_PAUSE_EVENT( pHdr )                                     __MFP_CAST_EVENT( pHdr, PAUSE )
#define MFP_GET_STOP_EVENT( pHdr )                                      __MFP_CAST_EVENT( pHdr, STOP )
#define MFP_GET_POSITION_SET_EVENT( pHdr )                              __MFP_CAST_EVENT( pHdr, POSITION_SET )
#define MFP_GET_RATE_SET_EVENT( pHdr )                                  __MFP_CAST_EVENT( pHdr, RATE_SET )
#define MFP_GET_MEDIAITEM_CREATED_EVENT( pHdr )                         __MFP_CAST_EVENT( pHdr, MEDIAITEM_CREATED )
#define MFP_GET_MEDIAITEM_SET_EVENT( pHdr )                             __MFP_CAST_EVENT( pHdr, MEDIAITEM_SET )
#define MFP_GET_FRAME_STEP_EVENT( pHdr )                                __MFP_CAST_EVENT( pHdr, FRAME_STEP )
#define MFP_GET_MEDIAITEM_CLEARED_EVENT( pHdr )                         __MFP_CAST_EVENT( pHdr, MEDIAITEM_CLEARED )
#define MFP_GET_MF_EVENT( pHdr )                                        __MFP_CAST_EVENT( pHdr, MF )
#define MFP_GET_ERROR_EVENT( pHdr )                                     __MFP_CAST_EVENT( pHdr, ERROR )
#define MFP_GET_PLAYBACK_ENDED_EVENT( pHdr )                            __MFP_CAST_EVENT( pHdr, PLAYBACK_ENDED )
#define MFP_GET_ACQUIRE_USER_CREDENTIAL_EVENT( pHdr )                   __MFP_CAST_EVENT( pHdr, ACQUIRE_USER_CREDENTIAL )


extern RPC_IF_HANDLE __MIDL_itf_mfplay_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfplay_0000_0002_v0_0_s_ifspec;

#ifndef __IMFPMediaPlayerCallback_INTERFACE_DEFINED__
#define __IMFPMediaPlayerCallback_INTERFACE_DEFINED__

/* interface IMFPMediaPlayerCallback */
/* [uuid][object][local] */ 


EXTERN_C const IID IID_IMFPMediaPlayerCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("766C8FFB-5FDB-4fea-A28D-B912996F51BD")
    IMFPMediaPlayerCallback : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE OnMediaPlayerEvent( 
            /* [annotation][in] */ 
            __in  MFP_EVENT_HEADER *pEventHeader) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMFPMediaPlayerCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMFPMediaPlayerCallback * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMFPMediaPlayerCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMFPMediaPlayerCallback * This);
        
        void ( STDMETHODCALLTYPE *OnMediaPlayerEvent )( 
            IMFPMediaPlayerCallback * This,
            /* [annotation][in] */ 
            __in  MFP_EVENT_HEADER *pEventHeader);
        
        END_INTERFACE
    } IMFPMediaPlayerCallbackVtbl;

    interface IMFPMediaPlayerCallback
    {
        CONST_VTBL struct IMFPMediaPlayerCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMFPMediaPlayerCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMFPMediaPlayerCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMFPMediaPlayerCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMFPMediaPlayerCallback_OnMediaPlayerEvent(This,pEventHeader)	\
    ( (This)->lpVtbl -> OnMediaPlayerEvent(This,pEventHeader) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMFPMediaPlayerCallback_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mfplay_0000_0003 */
/* [local] */ 

#endif // (WINVER >= _WIN32_WINNT_WIN7) 


extern RPC_IF_HANDLE __MIDL_itf_mfplay_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mfplay_0000_0003_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\MimeInfo.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mimeinfo.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mimeinfo_h__
#define __mimeinfo_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMimeInfo_FWD_DEFINED__
#define __IMimeInfo_FWD_DEFINED__
typedef interface IMimeInfo IMimeInfo;
#endif 	/* __IMimeInfo_FWD_DEFINED__ */


/* header files for imported files */
#include "objidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mimeinfo_0000_0000 */
/* [local] */ 

//=--------------------------------------------------------------------------=
// MimeInfo.h
//=--------------------------------------------------------------------------=
// (C) Copyright 1995-1998 Microsoft Corporation.  All Rights Reserved.
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
// PARTICULAR PURPOSE.
//=--------------------------------------------------------------------------=

#pragma comment(lib,"uuid.lib")

//--------------------------------------------------------------------------
// IMimeInfo Interfaces.



extern RPC_IF_HANDLE __MIDL_itf_mimeinfo_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mimeinfo_0000_0000_v0_0_s_ifspec;

#ifndef __IMimeInfo_INTERFACE_DEFINED__
#define __IMimeInfo_INTERFACE_DEFINED__

/* interface IMimeInfo */
/* [unique][uuid][object][local] */ 

typedef /* [unique] */ IMimeInfo *LPMIMEINFO;


EXTERN_C const IID IID_IMimeInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F77459A0-BF9A-11cf-BA4E-00C04FD70816")
    IMimeInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetMimeCLSIDMapping( 
            /* [out] */ UINT *pcTypes,
            /* [out] */ LPCSTR **ppszTypes,
            /* [out] */ CLSID **ppclsID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMimeInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMimeInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMimeInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMimeInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMimeCLSIDMapping )( 
            IMimeInfo * This,
            /* [out] */ UINT *pcTypes,
            /* [out] */ LPCSTR **ppszTypes,
            /* [out] */ CLSID **ppclsID);
        
        END_INTERFACE
    } IMimeInfoVtbl;

    interface IMimeInfo
    {
        CONST_VTBL struct IMimeInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMimeInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMimeInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMimeInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMimeInfo_GetMimeCLSIDMapping(This,pcTypes,ppszTypes,ppclsID)	\
    ( (This)->lpVtbl -> GetMimeCLSIDMapping(This,pcTypes,ppszTypes,ppclsID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMimeInfo_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mimeinfo_0000_0001 */
/* [local] */ 

#define SID_IMimeInfo IID_IMimeInfo


extern RPC_IF_HANDLE __MIDL_itf_mimeinfo_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mimeinfo_0000_0001_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\micaut_i.c ===
/* this ALWAYS GENERATED file contains the IIDs and CLSIDs */

/* link this file in with the server and any clients */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for micaut.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


#ifdef __cplusplus
extern "C"{
#endif 


#include <rpc.h>
#include <rpcndr.h>

#ifdef _MIDL_USE_GUIDDEF_

#ifndef INITGUID
#define INITGUID
#include <guiddef.h>
#undef INITGUID
#else
#include <guiddef.h>
#endif

#define MIDL_DEFINE_GUID(type,name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) \
        DEFINE_GUID(name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)

#else // !_MIDL_USE_GUIDDEF_

#ifndef __IID_DEFINED__
#define __IID_DEFINED__

typedef struct _IID
{
    unsigned long x;
    unsigned short s1;
    unsigned short s2;
    unsigned char  c[8];
} IID;

#endif // __IID_DEFINED__

#ifndef CLSID_DEFINED
#define CLSID_DEFINED
typedef IID CLSID;
#endif // CLSID_DEFINED

#define MIDL_DEFINE_GUID(type,name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) \
        const type name = {l,w1,w2,{b1,b2,b3,b4,b5,b6,b7,b8}}

#endif !_MIDL_USE_GUIDDEF_

MIDL_DEFINE_GUID(IID, IID_IMathInputControl,0xEBA615AA,0xFAC6,0x4738,0xBA,0x5F,0xFF,0x09,0xE9,0xFE,0x47,0x3E);


MIDL_DEFINE_GUID(IID, LIBID_micautLib,0x928CEF0C,0x5A84,0x48AC,0xBF,0x37,0xC5,0xC2,0x10,0x39,0xB8,0x3A);


MIDL_DEFINE_GUID(IID, DIID__IMathInputControlEvents,0x683336B5,0xA47D,0x4358,0x96,0xF9,0x87,0x5A,0x47,0x2A,0xE7,0x0A);


MIDL_DEFINE_GUID(CLSID, CLSID_MathInputControl,0xC561816C,0x14D8,0x4090,0x83,0x0C,0x98,0xD9,0x94,0xB2,0x1C,0x7B);

#undef MIDL_DEFINE_GUID

#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\mimedisp.h ===
//*********************************************************************
//*                  Microsoft Windows                               **
//*            Copyright(c) Microsoft Corp., 1996-1997               **
//*********************************************************************

#ifndef __MIMEDISP_H__
#define __MIMEDISP_H__

#define DISPID_IMIMEEDIT_BASE       100

#define DISPID_IMIMEEDIT_SRC        (DISPID_IMIMEEDIT_BASE + 1)
#define DISPID_IMIMEEDIT_STYLE      (DISPID_IMIMEEDIT_BASE + 2)
#define DISPID_IMIMEEDIT_EDITMODE   (DISPID_IMIMEEDIT_BASE + 3)
#define DISPID_IMIMEEDIT_MSGSRC     (DISPID_IMIMEEDIT_BASE + 4)
#define DISPID_IMIMEEDIT_TEXT       (DISPID_IMIMEEDIT_BASE + 5)
#define DISPID_IMIMEEDIT_HTML       (DISPID_IMIMEEDIT_BASE + 6)
#define DISPID_IMIMEEDIT_CLEAR      (DISPID_IMIMEEDIT_BASE + 7)
#define DISPID_IMIMEEDIT_DOCUMENT   (DISPID_IMIMEEDIT_BASE + 8)


#endif //__MIMEDISP_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\micaut.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for micaut.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __micaut_h__
#define __micaut_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMathInputControl_FWD_DEFINED__
#define __IMathInputControl_FWD_DEFINED__
typedef interface IMathInputControl IMathInputControl;
#endif 	/* __IMathInputControl_FWD_DEFINED__ */


#ifndef ___IMathInputControlEvents_FWD_DEFINED__
#define ___IMathInputControlEvents_FWD_DEFINED__
typedef interface _IMathInputControlEvents _IMathInputControlEvents;
#endif 	/* ___IMathInputControlEvents_FWD_DEFINED__ */


#ifndef __MathInputControl_FWD_DEFINED__
#define __MathInputControl_FWD_DEFINED__

#ifdef __cplusplus
typedef class MathInputControl MathInputControl;
#else
typedef struct MathInputControl MathInputControl;
#endif /* __cplusplus */

#endif 	/* __MathInputControl_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "msinkaut.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_micaut_0000_0000 */
/* [local] */ 

typedef /* [public][uuid] */  DECLSPEC_UUID("D7803AF6-B018-4a42-AE48-B2D2319BCB05") 
enum __MIDL___MIDL_itf_micaut_0000_0000_0001
    {	MICUIELEMENT_BUTTON_WRITE	= ( 1 << 0 ) ,
	MICUIELEMENT_BUTTON_ERASE	= ( 1 << 1 ) ,
	MICUIELEMENT_BUTTON_CORRECT	= ( 1 << 2 ) ,
	MICUIELEMENT_BUTTON_CLEAR	= ( 1 << 3 ) ,
	MICUIELEMENT_BUTTON_UNDO	= ( 1 << 4 ) ,
	MICUIELEMENT_BUTTON_REDO	= ( 1 << 5 ) ,
	MICUIELEMENT_BUTTON_INSERT	= ( 1 << 6 ) ,
	MICUIELEMENT_BUTTON_CANCEL	= ( 1 << 7 ) ,
	MICUIELEMENT_INKPANEL_BACKGROUND	= ( 1 << 8 ) ,
	MICUIELEMENT_RESULTPANEL_BACKGROUND	= ( 1 << 9 ) 
    } 	MICUIELEMENT;

typedef /* [public][uuid] */  DECLSPEC_UUID("117F1516-9539-4e26-9CCF-CD7511AE9BF1") 
enum __MIDL___MIDL_itf_micaut_0000_0000_0002
    {	MICUIELEMENTSTATE_NORMAL	= 1,
	MICUIELEMENTSTATE_HOT	= ( MICUIELEMENTSTATE_NORMAL + 1 ) ,
	MICUIELEMENTSTATE_PRESSED	= ( MICUIELEMENTSTATE_HOT + 1 ) ,
	MICUIELEMENTSTATE_DISABLED	= ( MICUIELEMENTSTATE_PRESSED + 1 ) 
    } 	MICUIELEMENTSTATE;

typedef /* [hidden] */ 
enum DISPID_MathInputControlEvents
    {	DISPID_MICInsert	= 0,
	DISPID_MICClose	= ( DISPID_MICInsert + 1 ) ,
	DISPID_MICPaint	= ( DISPID_MICClose + 1 ) ,
	DISPID_MICClear	= ( DISPID_MICPaint + 1 ) 
    } 	DISPID_MathInputControlEvents;



extern RPC_IF_HANDLE __MIDL_itf_micaut_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_micaut_0000_0000_v0_0_s_ifspec;

#ifndef __IMathInputControl_INTERFACE_DEFINED__
#define __IMathInputControl_INTERFACE_DEFINED__

/* interface IMathInputControl */
/* [unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IMathInputControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EBA615AA-FAC6-4738-BA5F-FF09E9FE473E")
    IMathInputControl : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Show( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Hide( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsVisible( 
            /* [out] */ __RPC__out VARIANT_BOOL *pvbShown) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [out] */ __RPC__out LONG *Left,
            /* [out] */ __RPC__out LONG *Top,
            /* [out] */ __RPC__out LONG *Right,
            /* [out] */ __RPC__out LONG *Bottom) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetPosition( 
            /* [in] */ LONG Left,
            /* [in] */ LONG Top,
            /* [in] */ LONG Right,
            /* [in] */ LONG Bottom) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCustomPaint( 
            /* [in] */ LONG Element,
            /* [in] */ VARIANT_BOOL Paint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetCaptionText( 
            /* [in] */ __RPC__in BSTR CaptionText) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadInk( 
            /* [in] */ __RPC__in_opt IInkDisp *Ink) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetOwnerWindow( 
            /* [in] */ LONG_PTR OwnerWindow) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EnableExtendedButtons( 
            /* [in] */ VARIANT_BOOL Extended) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPreviewHeight( 
            /* [out] */ __RPC__out LONG *Height) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetPreviewHeight( 
            /* [in] */ LONG Height) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EnableAutoGrow( 
            /* [in] */ VARIANT_BOOL AutoGrow) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddFunctionName( 
            /* [in] */ __RPC__in BSTR FunctionName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveFunctionName( 
            /* [in] */ __RPC__in BSTR FunctionName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetHoverIcon( 
            /* [out] */ __RPC__deref_out_opt IPictureDisp **HoverImage) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMathInputControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMathInputControl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMathInputControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMathInputControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IMathInputControl * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IMathInputControl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IMathInputControl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMathInputControl * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Show )( 
            __RPC__in IMathInputControl * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Hide )( 
            __RPC__in IMathInputControl * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsVisible )( 
            __RPC__in IMathInputControl * This,
            /* [out] */ __RPC__out VARIANT_BOOL *pvbShown);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPosition )( 
            __RPC__in IMathInputControl * This,
            /* [out] */ __RPC__out LONG *Left,
            /* [out] */ __RPC__out LONG *Top,
            /* [out] */ __RPC__out LONG *Right,
            /* [out] */ __RPC__out LONG *Bottom);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetPosition )( 
            __RPC__in IMathInputControl * This,
            /* [in] */ LONG Left,
            /* [in] */ LONG Top,
            /* [in] */ LONG Right,
            /* [in] */ LONG Bottom);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in IMathInputControl * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCustomPaint )( 
            __RPC__in IMathInputControl * This,
            /* [in] */ LONG Element,
            /* [in] */ VARIANT_BOOL Paint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetCaptionText )( 
            __RPC__in IMathInputControl * This,
            /* [in] */ __RPC__in BSTR CaptionText);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadInk )( 
            __RPC__in IMathInputControl * This,
            /* [in] */ __RPC__in_opt IInkDisp *Ink);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetOwnerWindow )( 
            __RPC__in IMathInputControl * This,
            /* [in] */ LONG_PTR OwnerWindow);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EnableExtendedButtons )( 
            __RPC__in IMathInputControl * This,
            /* [in] */ VARIANT_BOOL Extended);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPreviewHeight )( 
            __RPC__in IMathInputControl * This,
            /* [out] */ __RPC__out LONG *Height);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetPreviewHeight )( 
            __RPC__in IMathInputControl * This,
            /* [in] */ LONG Height);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EnableAutoGrow )( 
            __RPC__in IMathInputControl * This,
            /* [in] */ VARIANT_BOOL AutoGrow);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddFunctionName )( 
            __RPC__in IMathInputControl * This,
            /* [in] */ __RPC__in BSTR FunctionName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveFunctionName )( 
            __RPC__in IMathInputControl * This,
            /* [in] */ __RPC__in BSTR FunctionName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetHoverIcon )( 
            __RPC__in IMathInputControl * This,
            /* [out] */ __RPC__deref_out_opt IPictureDisp **HoverImage);
        
        END_INTERFACE
    } IMathInputControlVtbl;

    interface IMathInputControl
    {
        CONST_VTBL struct IMathInputControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMathInputControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMathInputControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMathInputControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMathInputControl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMathInputControl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMathInputControl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMathInputControl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMathInputControl_Show(This)	\
    ( (This)->lpVtbl -> Show(This) ) 

#define IMathInputControl_Hide(This)	\
    ( (This)->lpVtbl -> Hide(This) ) 

#define IMathInputControl_IsVisible(This,pvbShown)	\
    ( (This)->lpVtbl -> IsVisible(This,pvbShown) ) 

#define IMathInputControl_GetPosition(This,Left,Top,Right,Bottom)	\
    ( (This)->lpVtbl -> GetPosition(This,Left,Top,Right,Bottom) ) 

#define IMathInputControl_SetPosition(This,Left,Top,Right,Bottom)	\
    ( (This)->lpVtbl -> SetPosition(This,Left,Top,Right,Bottom) ) 

#define IMathInputControl_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define IMathInputControl_SetCustomPaint(This,Element,Paint)	\
    ( (This)->lpVtbl -> SetCustomPaint(This,Element,Paint) ) 

#define IMathInputControl_SetCaptionText(This,CaptionText)	\
    ( (This)->lpVtbl -> SetCaptionText(This,CaptionText) ) 

#define IMathInputControl_LoadInk(This,Ink)	\
    ( (This)->lpVtbl -> LoadInk(This,Ink) ) 

#define IMathInputControl_SetOwnerWindow(This,OwnerWindow)	\
    ( (This)->lpVtbl -> SetOwnerWindow(This,OwnerWindow) ) 

#define IMathInputControl_EnableExtendedButtons(This,Extended)	\
    ( (This)->lpVtbl -> EnableExtendedButtons(This,Extended) ) 

#define IMathInputControl_GetPreviewHeight(This,Height)	\
    ( (This)->lpVtbl -> GetPreviewHeight(This,Height) ) 

#define IMathInputControl_SetPreviewHeight(This,Height)	\
    ( (This)->lpVtbl -> SetPreviewHeight(This,Height) ) 

#define IMathInputControl_EnableAutoGrow(This,AutoGrow)	\
    ( (This)->lpVtbl -> EnableAutoGrow(This,AutoGrow) ) 

#define IMathInputControl_AddFunctionName(This,FunctionName)	\
    ( (This)->lpVtbl -> AddFunctionName(This,FunctionName) ) 

#define IMathInputControl_RemoveFunctionName(This,FunctionName)	\
    ( (This)->lpVtbl -> RemoveFunctionName(This,FunctionName) ) 

#define IMathInputControl_GetHoverIcon(This,HoverImage)	\
    ( (This)->lpVtbl -> GetHoverIcon(This,HoverImage) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMathInputControl_INTERFACE_DEFINED__ */



#ifndef __micautLib_LIBRARY_DEFINED__
#define __micautLib_LIBRARY_DEFINED__

/* library micautLib */
/* [helpstring][version][uuid] */ 


EXTERN_C const IID LIBID_micautLib;

#ifndef ___IMathInputControlEvents_DISPINTERFACE_DEFINED__
#define ___IMathInputControlEvents_DISPINTERFACE_DEFINED__

/* dispinterface _IMathInputControlEvents */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID__IMathInputControlEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("683336B5-A47D-4358-96F9-875A472AE70A")
    _IMathInputControlEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IMathInputControlEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in _IMathInputControlEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in _IMathInputControlEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in _IMathInputControlEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in _IMathInputControlEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in _IMathInputControlEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in _IMathInputControlEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IMathInputControlEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } _IMathInputControlEventsVtbl;

    interface _IMathInputControlEvents
    {
        CONST_VTBL struct _IMathInputControlEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IMathInputControlEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IMathInputControlEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IMathInputControlEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IMathInputControlEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IMathInputControlEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IMathInputControlEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IMathInputControlEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IMathInputControlEvents_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_MathInputControl;

#ifdef __cplusplus

class DECLSPEC_UUID("C561816C-14D8-4090-830C-98D994B21C7B")
MathInputControl;
#endif
#endif /* __micautLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\mileffects.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mileffects.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __mileffects_h__
#define __mileffects_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMILBitmapEffectConnectorInfo_FWD_DEFINED__
#define __IMILBitmapEffectConnectorInfo_FWD_DEFINED__
typedef interface IMILBitmapEffectConnectorInfo IMILBitmapEffectConnectorInfo;
#endif 	/* __IMILBitmapEffectConnectorInfo_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectConnectionsInfo_FWD_DEFINED__
#define __IMILBitmapEffectConnectionsInfo_FWD_DEFINED__
typedef interface IMILBitmapEffectConnectionsInfo IMILBitmapEffectConnectionsInfo;
#endif 	/* __IMILBitmapEffectConnectionsInfo_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectConnections_FWD_DEFINED__
#define __IMILBitmapEffectConnections_FWD_DEFINED__
typedef interface IMILBitmapEffectConnections IMILBitmapEffectConnections;
#endif 	/* __IMILBitmapEffectConnections_FWD_DEFINED__ */


#ifndef __IMILBitmapEffect_FWD_DEFINED__
#define __IMILBitmapEffect_FWD_DEFINED__
typedef interface IMILBitmapEffect IMILBitmapEffect;
#endif 	/* __IMILBitmapEffect_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectImpl_FWD_DEFINED__
#define __IMILBitmapEffectImpl_FWD_DEFINED__
typedef interface IMILBitmapEffectImpl IMILBitmapEffectImpl;
#endif 	/* __IMILBitmapEffectImpl_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectGroup_FWD_DEFINED__
#define __IMILBitmapEffectGroup_FWD_DEFINED__
typedef interface IMILBitmapEffectGroup IMILBitmapEffectGroup;
#endif 	/* __IMILBitmapEffectGroup_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectGroupImpl_FWD_DEFINED__
#define __IMILBitmapEffectGroupImpl_FWD_DEFINED__
typedef interface IMILBitmapEffectGroupImpl IMILBitmapEffectGroupImpl;
#endif 	/* __IMILBitmapEffectGroupImpl_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectRenderContext_FWD_DEFINED__
#define __IMILBitmapEffectRenderContext_FWD_DEFINED__
typedef interface IMILBitmapEffectRenderContext IMILBitmapEffectRenderContext;
#endif 	/* __IMILBitmapEffectRenderContext_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectRenderContextImpl_FWD_DEFINED__
#define __IMILBitmapEffectRenderContextImpl_FWD_DEFINED__
typedef interface IMILBitmapEffectRenderContextImpl IMILBitmapEffectRenderContextImpl;
#endif 	/* __IMILBitmapEffectRenderContextImpl_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectFactory_FWD_DEFINED__
#define __IMILBitmapEffectFactory_FWD_DEFINED__
typedef interface IMILBitmapEffectFactory IMILBitmapEffectFactory;
#endif 	/* __IMILBitmapEffectFactory_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectPrimitive_FWD_DEFINED__
#define __IMILBitmapEffectPrimitive_FWD_DEFINED__
typedef interface IMILBitmapEffectPrimitive IMILBitmapEffectPrimitive;
#endif 	/* __IMILBitmapEffectPrimitive_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectPrimitiveImpl_FWD_DEFINED__
#define __IMILBitmapEffectPrimitiveImpl_FWD_DEFINED__
typedef interface IMILBitmapEffectPrimitiveImpl IMILBitmapEffectPrimitiveImpl;
#endif 	/* __IMILBitmapEffectPrimitiveImpl_FWD_DEFINED__ */


#ifndef __IMILBitmapEffects_FWD_DEFINED__
#define __IMILBitmapEffects_FWD_DEFINED__
typedef interface IMILBitmapEffects IMILBitmapEffects;
#endif 	/* __IMILBitmapEffects_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectConnector_FWD_DEFINED__
#define __IMILBitmapEffectConnector_FWD_DEFINED__
typedef interface IMILBitmapEffectConnector IMILBitmapEffectConnector;
#endif 	/* __IMILBitmapEffectConnector_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectInputConnector_FWD_DEFINED__
#define __IMILBitmapEffectInputConnector_FWD_DEFINED__
typedef interface IMILBitmapEffectInputConnector IMILBitmapEffectInputConnector;
#endif 	/* __IMILBitmapEffectInputConnector_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectOutputConnector_FWD_DEFINED__
#define __IMILBitmapEffectOutputConnector_FWD_DEFINED__
typedef interface IMILBitmapEffectOutputConnector IMILBitmapEffectOutputConnector;
#endif 	/* __IMILBitmapEffectOutputConnector_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectOutputConnectorImpl_FWD_DEFINED__
#define __IMILBitmapEffectOutputConnectorImpl_FWD_DEFINED__
typedef interface IMILBitmapEffectOutputConnectorImpl IMILBitmapEffectOutputConnectorImpl;
#endif 	/* __IMILBitmapEffectOutputConnectorImpl_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectInteriorInputConnector_FWD_DEFINED__
#define __IMILBitmapEffectInteriorInputConnector_FWD_DEFINED__
typedef interface IMILBitmapEffectInteriorInputConnector IMILBitmapEffectInteriorInputConnector;
#endif 	/* __IMILBitmapEffectInteriorInputConnector_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectInteriorOutputConnector_FWD_DEFINED__
#define __IMILBitmapEffectInteriorOutputConnector_FWD_DEFINED__
typedef interface IMILBitmapEffectInteriorOutputConnector IMILBitmapEffectInteriorOutputConnector;
#endif 	/* __IMILBitmapEffectInteriorOutputConnector_FWD_DEFINED__ */


#ifndef __IMILBitmapEffectEvents_FWD_DEFINED__
#define __IMILBitmapEffectEvents_FWD_DEFINED__
typedef interface IMILBitmapEffectEvents IMILBitmapEffectEvents;
#endif 	/* __IMILBitmapEffectEvents_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "wincodec.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mileffects_0000_0000 */
/* [local] */ 

#if 0
typedef DWORD MilPoint2D;

typedef DWORD MilPointAndSizeD;

typedef DWORD MilMatrix3x2D;

#endif
#ifndef MILTYPES_DEFINED
struct MilPointAndSizeD
{
    DOUBLE X;
    DOUBLE Y;
    DOUBLE Width;
    DOUBLE Height;
};

struct MilPoint2D
{
    DOUBLE X;
    DOUBLE Y;
};

struct MilMatrix3x2D
{
    DOUBLE S_11;
    DOUBLE S_12;
    DOUBLE S_21;
    DOUBLE S_22;
    DOUBLE DX;
    DOUBLE DY;
};
#endif // MILTYPES_DEFINED

typedef MilPoint2D MIL_2DPOINTD;
typedef MilPointAndSizeD MIL_RECTD;

#ifndef MILCORE_MIL_MATRIX3X2D_COMPAT_TYPEDEF

typedef MilMatrix3x2D MIL_MATRIX3X2D;

#define MILCORE_MIL_MATRIX3X2D_COMPAT_TYPEDEF
#endif MILCORE_MIL_MATRIX3X2D_COMPAT_TYPEDEF



extern RPC_IF_HANDLE __MIDL_itf_mileffects_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mileffects_0000_0000_v0_0_s_ifspec;


#ifndef __MILEffects_LIBRARY_DEFINED__
#define __MILEffects_LIBRARY_DEFINED__

/* library MILEffects */
/* [version][uuid] */ 

#define MILBITMAPEFFECT_SDK_VERSION 0x01000000
DEFINE_GUID(CLSID_MILBitmapEffectGroup, 0xac9c1a9a, 0x7e18, 0x4f64, 0xac, 0x7e, 0x47, 0xcf, 0x7f, 0x05, 0x1e, 0x95);
DEFINE_GUID(CLSID_MILBitmapEffectBlur, 0xa924df87, 0x225d, 0x4373, 0x8f, 0x5b, 0xb9, 0xe, 0xc8, 0x5a, 0xe3, 0xde);
DEFINE_GUID(CLSID_MILBitmapEffectDropShadow, 0x459a3fbe, 0xd8ac, 0x4692, 0x87, 0x4b, 0x7a, 0x26, 0x57, 0x15, 0xaa, 0x16);
DEFINE_GUID(CLSID_MILBitmapEffectOuterGlow, 0xe2161bdd, 0x7eb6, 0x4725, 0x9c, 0x0b, 0x8a, 0x2a, 0x1b, 0x4f, 0x06, 0x67);
DEFINE_GUID(CLSID_MILBitmapEffectBevel, 0xfd361dbe, 0x6c9b, 0x4de0, 0x82, 0x90, 0xf6, 0x40, 0xc, 0x27, 0x37, 0xed);
DEFINE_GUID(CLSID_MILBitmapEffectEmboss, 0xcd299846, 0x824f, 0x47ec, 0xa0, 0x07, 0x12, 0xaa, 0x76, 0x7f, 0x28, 0x16);
extern STDMETHODIMP MILCreateBitmapEffectFactory(DWORD dwSDKVersion, IMILBitmapEffectFactory **ppFactory);




















typedef /* [public] */ REFGUID REFWICPixelFormatGUID;

typedef /* [public] */ GUID WICPixelFormatGUID;

typedef /* [public] */ struct MILMatrixF
    {
    DOUBLE _11;
    DOUBLE _12;
    DOUBLE _13;
    DOUBLE _14;
    DOUBLE _21;
    DOUBLE _22;
    DOUBLE _23;
    DOUBLE _24;
    DOUBLE _31;
    DOUBLE _32;
    DOUBLE _33;
    DOUBLE _34;
    DOUBLE _41;
    DOUBLE _42;
    DOUBLE _43;
    DOUBLE _44;
    } 	MILMatrixF;


EXTERN_C const IID LIBID_MILEffects;

#ifndef __IMILBitmapEffectConnectorInfo_INTERFACE_DEFINED__
#define __IMILBitmapEffectConnectorInfo_INTERFACE_DEFINED__

/* interface IMILBitmapEffectConnectorInfo */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectConnectorInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F66D2E4B-B46B-42FC-859E-3DA0ECDB3C43")
    IMILBitmapEffectConnectorInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetIndex( 
            /* [retval][out] */ __RPC__out ULONG *puiIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOptimalFormat( 
            /* [retval][out] */ __RPC__out WICPixelFormatGUID *pFormat) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumberFormats( 
            /* [retval][out] */ __RPC__out ULONG *pulNumberFormats) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFormat( 
            /* [in] */ ULONG ulIndex,
            /* [retval][out] */ __RPC__out WICPixelFormatGUID *pFormat) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectConnectorInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectConnectorInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectConnectorInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectConnectorInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIndex )( 
            __RPC__in IMILBitmapEffectConnectorInfo * This,
            /* [retval][out] */ __RPC__out ULONG *puiIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetOptimalFormat )( 
            __RPC__in IMILBitmapEffectConnectorInfo * This,
            /* [retval][out] */ __RPC__out WICPixelFormatGUID *pFormat);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberFormats )( 
            __RPC__in IMILBitmapEffectConnectorInfo * This,
            /* [retval][out] */ __RPC__out ULONG *pulNumberFormats);
        
        HRESULT ( STDMETHODCALLTYPE *GetFormat )( 
            __RPC__in IMILBitmapEffectConnectorInfo * This,
            /* [in] */ ULONG ulIndex,
            /* [retval][out] */ __RPC__out WICPixelFormatGUID *pFormat);
        
        END_INTERFACE
    } IMILBitmapEffectConnectorInfoVtbl;

    interface IMILBitmapEffectConnectorInfo
    {
        CONST_VTBL struct IMILBitmapEffectConnectorInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectConnectorInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectConnectorInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectConnectorInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectConnectorInfo_GetIndex(This,puiIndex)	\
    ( (This)->lpVtbl -> GetIndex(This,puiIndex) ) 

#define IMILBitmapEffectConnectorInfo_GetOptimalFormat(This,pFormat)	\
    ( (This)->lpVtbl -> GetOptimalFormat(This,pFormat) ) 

#define IMILBitmapEffectConnectorInfo_GetNumberFormats(This,pulNumberFormats)	\
    ( (This)->lpVtbl -> GetNumberFormats(This,pulNumberFormats) ) 

#define IMILBitmapEffectConnectorInfo_GetFormat(This,ulIndex,pFormat)	\
    ( (This)->lpVtbl -> GetFormat(This,ulIndex,pFormat) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectConnectorInfo_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectConnectionsInfo_INTERFACE_DEFINED__
#define __IMILBitmapEffectConnectionsInfo_INTERFACE_DEFINED__

/* interface IMILBitmapEffectConnectionsInfo */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectConnectionsInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("476B538A-C765-4237-BA4A-D6A880FF0CFC")
    IMILBitmapEffectConnectionsInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetNumberInputs( 
            /* [retval][out] */ __RPC__out ULONG *puiNumInputs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumberOutputs( 
            /* [retval][out] */ __RPC__out ULONG *puiNumOutputs) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputConnectorInfo( 
            /* [in] */ ULONG uiIndex,
            /* [out] */ __RPC__deref_out_opt IMILBitmapEffectConnectorInfo **ppConnectorInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputConnectorInfo( 
            /* [in] */ ULONG uiIndex,
            /* [out] */ __RPC__deref_out_opt IMILBitmapEffectConnectorInfo **ppConnectorInfo) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectConnectionsInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectConnectionsInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectConnectionsInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectConnectionsInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberInputs )( 
            __RPC__in IMILBitmapEffectConnectionsInfo * This,
            /* [retval][out] */ __RPC__out ULONG *puiNumInputs);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberOutputs )( 
            __RPC__in IMILBitmapEffectConnectionsInfo * This,
            /* [retval][out] */ __RPC__out ULONG *puiNumOutputs);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputConnectorInfo )( 
            __RPC__in IMILBitmapEffectConnectionsInfo * This,
            /* [in] */ ULONG uiIndex,
            /* [out] */ __RPC__deref_out_opt IMILBitmapEffectConnectorInfo **ppConnectorInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputConnectorInfo )( 
            __RPC__in IMILBitmapEffectConnectionsInfo * This,
            /* [in] */ ULONG uiIndex,
            /* [out] */ __RPC__deref_out_opt IMILBitmapEffectConnectorInfo **ppConnectorInfo);
        
        END_INTERFACE
    } IMILBitmapEffectConnectionsInfoVtbl;

    interface IMILBitmapEffectConnectionsInfo
    {
        CONST_VTBL struct IMILBitmapEffectConnectionsInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectConnectionsInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectConnectionsInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectConnectionsInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectConnectionsInfo_GetNumberInputs(This,puiNumInputs)	\
    ( (This)->lpVtbl -> GetNumberInputs(This,puiNumInputs) ) 

#define IMILBitmapEffectConnectionsInfo_GetNumberOutputs(This,puiNumOutputs)	\
    ( (This)->lpVtbl -> GetNumberOutputs(This,puiNumOutputs) ) 

#define IMILBitmapEffectConnectionsInfo_GetInputConnectorInfo(This,uiIndex,ppConnectorInfo)	\
    ( (This)->lpVtbl -> GetInputConnectorInfo(This,uiIndex,ppConnectorInfo) ) 

#define IMILBitmapEffectConnectionsInfo_GetOutputConnectorInfo(This,uiIndex,ppConnectorInfo)	\
    ( (This)->lpVtbl -> GetOutputConnectorInfo(This,uiIndex,ppConnectorInfo) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectConnectionsInfo_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectConnections_INTERFACE_DEFINED__
#define __IMILBitmapEffectConnections_INTERFACE_DEFINED__

/* interface IMILBitmapEffectConnections */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectConnections;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C2B5D861-9B1A-4374-89B0-DEC4874D6A81")
    IMILBitmapEffectConnections : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetInputConnector( 
            /* [in] */ ULONG uiIndex,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectInputConnector **ppConnector) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputConnector( 
            /* [in] */ ULONG uiIndex,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectOutputConnector **ppConnector) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectConnectionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectConnections * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectConnections * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectConnections * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputConnector )( 
            __RPC__in IMILBitmapEffectConnections * This,
            /* [in] */ ULONG uiIndex,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectInputConnector **ppConnector);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputConnector )( 
            __RPC__in IMILBitmapEffectConnections * This,
            /* [in] */ ULONG uiIndex,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectOutputConnector **ppConnector);
        
        END_INTERFACE
    } IMILBitmapEffectConnectionsVtbl;

    interface IMILBitmapEffectConnections
    {
        CONST_VTBL struct IMILBitmapEffectConnectionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectConnections_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectConnections_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectConnections_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectConnections_GetInputConnector(This,uiIndex,ppConnector)	\
    ( (This)->lpVtbl -> GetInputConnector(This,uiIndex,ppConnector) ) 

#define IMILBitmapEffectConnections_GetOutputConnector(This,uiIndex,ppConnector)	\
    ( (This)->lpVtbl -> GetOutputConnector(This,uiIndex,ppConnector) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectConnections_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffect_INTERFACE_DEFINED__
#define __IMILBitmapEffect_INTERFACE_DEFINED__

/* interface IMILBitmapEffect */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffect;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8A6FF321-C944-4A1B-9944-9954AF301258")
    IMILBitmapEffect : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetOutput( 
            /* [in] */ ULONG uiIndex,
            /* [in] */ __RPC__in_opt IMILBitmapEffectRenderContext *pContext,
            /* [retval][out] */ __RPC__deref_out_opt IWICBitmapSource **ppBitmapSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetParentEffect( 
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectGroup **ppParentEffect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetInputSource( 
            /* [in] */ ULONG uiIndex,
            /* [in] */ __RPC__in_opt IWICBitmapSource *pBitmapSource) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffect * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffect * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffect * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutput )( 
            __RPC__in IMILBitmapEffect * This,
            /* [in] */ ULONG uiIndex,
            /* [in] */ __RPC__in_opt IMILBitmapEffectRenderContext *pContext,
            /* [retval][out] */ __RPC__deref_out_opt IWICBitmapSource **ppBitmapSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetParentEffect )( 
            __RPC__in IMILBitmapEffect * This,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectGroup **ppParentEffect);
        
        HRESULT ( STDMETHODCALLTYPE *SetInputSource )( 
            __RPC__in IMILBitmapEffect * This,
            /* [in] */ ULONG uiIndex,
            /* [in] */ __RPC__in_opt IWICBitmapSource *pBitmapSource);
        
        END_INTERFACE
    } IMILBitmapEffectVtbl;

    interface IMILBitmapEffect
    {
        CONST_VTBL struct IMILBitmapEffectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffect_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffect_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffect_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffect_GetOutput(This,uiIndex,pContext,ppBitmapSource)	\
    ( (This)->lpVtbl -> GetOutput(This,uiIndex,pContext,ppBitmapSource) ) 

#define IMILBitmapEffect_GetParentEffect(This,ppParentEffect)	\
    ( (This)->lpVtbl -> GetParentEffect(This,ppParentEffect) ) 

#define IMILBitmapEffect_SetInputSource(This,uiIndex,pBitmapSource)	\
    ( (This)->lpVtbl -> SetInputSource(This,uiIndex,pBitmapSource) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffect_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectImpl_INTERFACE_DEFINED__
#define __IMILBitmapEffectImpl_INTERFACE_DEFINED__

/* interface IMILBitmapEffectImpl */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectImpl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CC2468F2-9936-47BE-B4AF-06B5DF5DBCBB")
    IMILBitmapEffectImpl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE IsInPlaceModificationAllowed( 
            /* [in] */ __RPC__in_opt IMILBitmapEffectOutputConnector *pOutputConnector,
            /* [out] */ __RPC__out VARIANT_BOOL *pfModifyInPlace) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetParentEffect( 
            /* [in] */ __RPC__in_opt IMILBitmapEffectGroup *pParentEffect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputSource( 
            /* [in] */ ULONG uiIndex,
            /* [retval][out] */ __RPC__deref_out_opt IWICBitmapSource **ppBitmapSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputSourceBounds( 
            /* [in] */ ULONG uiIndex,
            /* [out] */ __RPC__out MilPointAndSizeD *pRect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInputBitmapSource( 
            /* [in] */ ULONG uiIndex,
            /* [in] */ __RPC__in_opt IMILBitmapEffectRenderContext *pRenderContext,
            /* [out][in] */ __RPC__inout VARIANT_BOOL *pfModifyInPlace,
            /* [retval][out] */ __RPC__deref_out_opt IWICBitmapSource **ppBitmapSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputBitmapSource( 
            /* [in] */ ULONG uiIndex,
            /* [in] */ __RPC__in_opt IMILBitmapEffectRenderContext *pRenderContext,
            /* [out][in] */ __RPC__inout VARIANT_BOOL *pfModifyInPlace,
            /* [retval][out] */ __RPC__deref_out_opt IWICBitmapSource **ppBitmapSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt IUnknown *pInner) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectImplVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectImpl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectImpl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectImpl * This);
        
        HRESULT ( STDMETHODCALLTYPE *IsInPlaceModificationAllowed )( 
            __RPC__in IMILBitmapEffectImpl * This,
            /* [in] */ __RPC__in_opt IMILBitmapEffectOutputConnector *pOutputConnector,
            /* [out] */ __RPC__out VARIANT_BOOL *pfModifyInPlace);
        
        HRESULT ( STDMETHODCALLTYPE *SetParentEffect )( 
            __RPC__in IMILBitmapEffectImpl * This,
            /* [in] */ __RPC__in_opt IMILBitmapEffectGroup *pParentEffect);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputSource )( 
            __RPC__in IMILBitmapEffectImpl * This,
            /* [in] */ ULONG uiIndex,
            /* [retval][out] */ __RPC__deref_out_opt IWICBitmapSource **ppBitmapSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputSourceBounds )( 
            __RPC__in IMILBitmapEffectImpl * This,
            /* [in] */ ULONG uiIndex,
            /* [out] */ __RPC__out MilPointAndSizeD *pRect);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputBitmapSource )( 
            __RPC__in IMILBitmapEffectImpl * This,
            /* [in] */ ULONG uiIndex,
            /* [in] */ __RPC__in_opt IMILBitmapEffectRenderContext *pRenderContext,
            /* [out][in] */ __RPC__inout VARIANT_BOOL *pfModifyInPlace,
            /* [retval][out] */ __RPC__deref_out_opt IWICBitmapSource **ppBitmapSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputBitmapSource )( 
            __RPC__in IMILBitmapEffectImpl * This,
            /* [in] */ ULONG uiIndex,
            /* [in] */ __RPC__in_opt IMILBitmapEffectRenderContext *pRenderContext,
            /* [out][in] */ __RPC__inout VARIANT_BOOL *pfModifyInPlace,
            /* [retval][out] */ __RPC__deref_out_opt IWICBitmapSource **ppBitmapSource);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IMILBitmapEffectImpl * This,
            /* [in] */ __RPC__in_opt IUnknown *pInner);
        
        END_INTERFACE
    } IMILBitmapEffectImplVtbl;

    interface IMILBitmapEffectImpl
    {
        CONST_VTBL struct IMILBitmapEffectImplVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectImpl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectImpl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectImpl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectImpl_IsInPlaceModificationAllowed(This,pOutputConnector,pfModifyInPlace)	\
    ( (This)->lpVtbl -> IsInPlaceModificationAllowed(This,pOutputConnector,pfModifyInPlace) ) 

#define IMILBitmapEffectImpl_SetParentEffect(This,pParentEffect)	\
    ( (This)->lpVtbl -> SetParentEffect(This,pParentEffect) ) 

#define IMILBitmapEffectImpl_GetInputSource(This,uiIndex,ppBitmapSource)	\
    ( (This)->lpVtbl -> GetInputSource(This,uiIndex,ppBitmapSource) ) 

#define IMILBitmapEffectImpl_GetInputSourceBounds(This,uiIndex,pRect)	\
    ( (This)->lpVtbl -> GetInputSourceBounds(This,uiIndex,pRect) ) 

#define IMILBitmapEffectImpl_GetInputBitmapSource(This,uiIndex,pRenderContext,pfModifyInPlace,ppBitmapSource)	\
    ( (This)->lpVtbl -> GetInputBitmapSource(This,uiIndex,pRenderContext,pfModifyInPlace,ppBitmapSource) ) 

#define IMILBitmapEffectImpl_GetOutputBitmapSource(This,uiIndex,pRenderContext,pfModifyInPlace,ppBitmapSource)	\
    ( (This)->lpVtbl -> GetOutputBitmapSource(This,uiIndex,pRenderContext,pfModifyInPlace,ppBitmapSource) ) 

#define IMILBitmapEffectImpl_Initialize(This,pInner)	\
    ( (This)->lpVtbl -> Initialize(This,pInner) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectImpl_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectGroup_INTERFACE_DEFINED__
#define __IMILBitmapEffectGroup_INTERFACE_DEFINED__

/* interface IMILBitmapEffectGroup */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2F952360-698A-4ac6-81A1-BCFDF08EB8E8")
    IMILBitmapEffectGroup : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetInteriorInputConnector( 
            /* [in] */ ULONG uiIndex,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectOutputConnector **ppConnector) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetInteriorOutputConnector( 
            /* [in] */ ULONG uiIndex,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectInputConnector **ppConnector) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ __RPC__in_opt IMILBitmapEffect *pEffect) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInteriorInputConnector )( 
            __RPC__in IMILBitmapEffectGroup * This,
            /* [in] */ ULONG uiIndex,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectOutputConnector **ppConnector);
        
        HRESULT ( STDMETHODCALLTYPE *GetInteriorOutputConnector )( 
            __RPC__in IMILBitmapEffectGroup * This,
            /* [in] */ ULONG uiIndex,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectInputConnector **ppConnector);
        
        HRESULT ( STDMETHODCALLTYPE *Add )( 
            __RPC__in IMILBitmapEffectGroup * This,
            /* [in] */ __RPC__in_opt IMILBitmapEffect *pEffect);
        
        END_INTERFACE
    } IMILBitmapEffectGroupVtbl;

    interface IMILBitmapEffectGroup
    {
        CONST_VTBL struct IMILBitmapEffectGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectGroup_GetInteriorInputConnector(This,uiIndex,ppConnector)	\
    ( (This)->lpVtbl -> GetInteriorInputConnector(This,uiIndex,ppConnector) ) 

#define IMILBitmapEffectGroup_GetInteriorOutputConnector(This,uiIndex,ppConnector)	\
    ( (This)->lpVtbl -> GetInteriorOutputConnector(This,uiIndex,ppConnector) ) 

#define IMILBitmapEffectGroup_Add(This,pEffect)	\
    ( (This)->lpVtbl -> Add(This,pEffect) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectGroup_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectGroupImpl_INTERFACE_DEFINED__
#define __IMILBitmapEffectGroupImpl_INTERFACE_DEFINED__

/* interface IMILBitmapEffectGroupImpl */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectGroupImpl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("78FED518-1CFC-4807-8B85-6B6E51398F62")
    IMILBitmapEffectGroupImpl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Preprocess( 
            /* [in] */ __RPC__in_opt IMILBitmapEffectRenderContext *pContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumberChildren( 
            /* [retval][out] */ __RPC__out ULONG *puiNumberChildren) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetChildren( 
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffects **pChildren) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectGroupImplVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectGroupImpl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectGroupImpl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectGroupImpl * This);
        
        HRESULT ( STDMETHODCALLTYPE *Preprocess )( 
            __RPC__in IMILBitmapEffectGroupImpl * This,
            /* [in] */ __RPC__in_opt IMILBitmapEffectRenderContext *pContext);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberChildren )( 
            __RPC__in IMILBitmapEffectGroupImpl * This,
            /* [retval][out] */ __RPC__out ULONG *puiNumberChildren);
        
        HRESULT ( STDMETHODCALLTYPE *GetChildren )( 
            __RPC__in IMILBitmapEffectGroupImpl * This,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffects **pChildren);
        
        END_INTERFACE
    } IMILBitmapEffectGroupImplVtbl;

    interface IMILBitmapEffectGroupImpl
    {
        CONST_VTBL struct IMILBitmapEffectGroupImplVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectGroupImpl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectGroupImpl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectGroupImpl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectGroupImpl_Preprocess(This,pContext)	\
    ( (This)->lpVtbl -> Preprocess(This,pContext) ) 

#define IMILBitmapEffectGroupImpl_GetNumberChildren(This,puiNumberChildren)	\
    ( (This)->lpVtbl -> GetNumberChildren(This,puiNumberChildren) ) 

#define IMILBitmapEffectGroupImpl_GetChildren(This,pChildren)	\
    ( (This)->lpVtbl -> GetChildren(This,pChildren) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectGroupImpl_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectRenderContext_INTERFACE_DEFINED__
#define __IMILBitmapEffectRenderContext_INTERFACE_DEFINED__

/* interface IMILBitmapEffectRenderContext */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectRenderContext;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("12A2EC7E-2D33-44b2-B334-1ABB7846E390")
    IMILBitmapEffectRenderContext : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetOutputPixelFormat( 
            /* [in] */ __RPC__in REFWICPixelFormatGUID format) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputPixelFormat( 
            /* [retval][out] */ __RPC__out WICPixelFormatGUID *pFormat) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetUseSoftwareRenderer( 
            /* [in] */ VARIANT_BOOL fSoftware) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetInitialTransform( 
            /* [in] */ __RPC__in MILMatrixF *pMatrix) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFinalTransform( 
            /* [out] */ __RPC__out MILMatrixF *pMatrix) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOutputDPI( 
            /* [in] */ double dblDpiX,
            /* [in] */ double dblDpiY) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputDPI( 
            /* [out] */ __RPC__out double *pdblDpiX,
            /* [out] */ __RPC__out double *pdblDpiY) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetRegionOfInterest( 
            /* [in] */ __RPC__in MilPointAndSizeD *pRect) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectRenderContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectRenderContext * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectRenderContext * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectRenderContext * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetOutputPixelFormat )( 
            __RPC__in IMILBitmapEffectRenderContext * This,
            /* [in] */ __RPC__in REFWICPixelFormatGUID format);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputPixelFormat )( 
            __RPC__in IMILBitmapEffectRenderContext * This,
            /* [retval][out] */ __RPC__out WICPixelFormatGUID *pFormat);
        
        HRESULT ( STDMETHODCALLTYPE *SetUseSoftwareRenderer )( 
            __RPC__in IMILBitmapEffectRenderContext * This,
            /* [in] */ VARIANT_BOOL fSoftware);
        
        HRESULT ( STDMETHODCALLTYPE *SetInitialTransform )( 
            __RPC__in IMILBitmapEffectRenderContext * This,
            /* [in] */ __RPC__in MILMatrixF *pMatrix);
        
        HRESULT ( STDMETHODCALLTYPE *GetFinalTransform )( 
            __RPC__in IMILBitmapEffectRenderContext * This,
            /* [out] */ __RPC__out MILMatrixF *pMatrix);
        
        HRESULT ( STDMETHODCALLTYPE *SetOutputDPI )( 
            __RPC__in IMILBitmapEffectRenderContext * This,
            /* [in] */ double dblDpiX,
            /* [in] */ double dblDpiY);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputDPI )( 
            __RPC__in IMILBitmapEffectRenderContext * This,
            /* [out] */ __RPC__out double *pdblDpiX,
            /* [out] */ __RPC__out double *pdblDpiY);
        
        HRESULT ( STDMETHODCALLTYPE *SetRegionOfInterest )( 
            __RPC__in IMILBitmapEffectRenderContext * This,
            /* [in] */ __RPC__in MilPointAndSizeD *pRect);
        
        END_INTERFACE
    } IMILBitmapEffectRenderContextVtbl;

    interface IMILBitmapEffectRenderContext
    {
        CONST_VTBL struct IMILBitmapEffectRenderContextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectRenderContext_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectRenderContext_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectRenderContext_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectRenderContext_SetOutputPixelFormat(This,format)	\
    ( (This)->lpVtbl -> SetOutputPixelFormat(This,format) ) 

#define IMILBitmapEffectRenderContext_GetOutputPixelFormat(This,pFormat)	\
    ( (This)->lpVtbl -> GetOutputPixelFormat(This,pFormat) ) 

#define IMILBitmapEffectRenderContext_SetUseSoftwareRenderer(This,fSoftware)	\
    ( (This)->lpVtbl -> SetUseSoftwareRenderer(This,fSoftware) ) 

#define IMILBitmapEffectRenderContext_SetInitialTransform(This,pMatrix)	\
    ( (This)->lpVtbl -> SetInitialTransform(This,pMatrix) ) 

#define IMILBitmapEffectRenderContext_GetFinalTransform(This,pMatrix)	\
    ( (This)->lpVtbl -> GetFinalTransform(This,pMatrix) ) 

#define IMILBitmapEffectRenderContext_SetOutputDPI(This,dblDpiX,dblDpiY)	\
    ( (This)->lpVtbl -> SetOutputDPI(This,dblDpiX,dblDpiY) ) 

#define IMILBitmapEffectRenderContext_GetOutputDPI(This,pdblDpiX,pdblDpiY)	\
    ( (This)->lpVtbl -> GetOutputDPI(This,pdblDpiX,pdblDpiY) ) 

#define IMILBitmapEffectRenderContext_SetRegionOfInterest(This,pRect)	\
    ( (This)->lpVtbl -> SetRegionOfInterest(This,pRect) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectRenderContext_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectRenderContextImpl_INTERFACE_DEFINED__
#define __IMILBitmapEffectRenderContextImpl_INTERFACE_DEFINED__

/* interface IMILBitmapEffectRenderContextImpl */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectRenderContextImpl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4D25ACCB-797D-4fd2-B128-DFFEFF84FCC3")
    IMILBitmapEffectRenderContextImpl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetUseSoftwareRenderer( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfSoftware) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTransform( 
            /* [out][in] */ __RPC__inout MILMatrixF *pMatrix) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateTransform( 
            /* [in] */ __RPC__in MILMatrixF *pMatrix) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOutputBounds( 
            /* [out][in] */ __RPC__inout MilPointAndSizeD *pRect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateOutputBounds( 
            /* [in] */ __RPC__in MilPointAndSizeD *pRect) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectRenderContextImplVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectRenderContextImpl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectRenderContextImpl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectRenderContextImpl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetUseSoftwareRenderer )( 
            __RPC__in IMILBitmapEffectRenderContextImpl * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfSoftware);
        
        HRESULT ( STDMETHODCALLTYPE *GetTransform )( 
            __RPC__in IMILBitmapEffectRenderContextImpl * This,
            /* [out][in] */ __RPC__inout MILMatrixF *pMatrix);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateTransform )( 
            __RPC__in IMILBitmapEffectRenderContextImpl * This,
            /* [in] */ __RPC__in MILMatrixF *pMatrix);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputBounds )( 
            __RPC__in IMILBitmapEffectRenderContextImpl * This,
            /* [out][in] */ __RPC__inout MilPointAndSizeD *pRect);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateOutputBounds )( 
            __RPC__in IMILBitmapEffectRenderContextImpl * This,
            /* [in] */ __RPC__in MilPointAndSizeD *pRect);
        
        END_INTERFACE
    } IMILBitmapEffectRenderContextImplVtbl;

    interface IMILBitmapEffectRenderContextImpl
    {
        CONST_VTBL struct IMILBitmapEffectRenderContextImplVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectRenderContextImpl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectRenderContextImpl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectRenderContextImpl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectRenderContextImpl_GetUseSoftwareRenderer(This,pfSoftware)	\
    ( (This)->lpVtbl -> GetUseSoftwareRenderer(This,pfSoftware) ) 

#define IMILBitmapEffectRenderContextImpl_GetTransform(This,pMatrix)	\
    ( (This)->lpVtbl -> GetTransform(This,pMatrix) ) 

#define IMILBitmapEffectRenderContextImpl_UpdateTransform(This,pMatrix)	\
    ( (This)->lpVtbl -> UpdateTransform(This,pMatrix) ) 

#define IMILBitmapEffectRenderContextImpl_GetOutputBounds(This,pRect)	\
    ( (This)->lpVtbl -> GetOutputBounds(This,pRect) ) 

#define IMILBitmapEffectRenderContextImpl_UpdateOutputBounds(This,pRect)	\
    ( (This)->lpVtbl -> UpdateOutputBounds(This,pRect) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectRenderContextImpl_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectFactory_INTERFACE_DEFINED__
#define __IMILBitmapEffectFactory_INTERFACE_DEFINED__

/* interface IMILBitmapEffectFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("33A9DF34-A403-4EC7-B07E-BC0682370845")
    IMILBitmapEffectFactory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateEffect( 
            /* [in] */ __RPC__in const GUID *pguidEffect,
            /* [out] */ __RPC__deref_out_opt IMILBitmapEffect **ppEffect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateContext( 
            /* [out] */ __RPC__deref_out_opt IMILBitmapEffectRenderContext **ppContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateEffectOuter( 
            /* [out] */ __RPC__deref_out_opt IMILBitmapEffect **ppEffect) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateEffect )( 
            __RPC__in IMILBitmapEffectFactory * This,
            /* [in] */ __RPC__in const GUID *pguidEffect,
            /* [out] */ __RPC__deref_out_opt IMILBitmapEffect **ppEffect);
        
        HRESULT ( STDMETHODCALLTYPE *CreateContext )( 
            __RPC__in IMILBitmapEffectFactory * This,
            /* [out] */ __RPC__deref_out_opt IMILBitmapEffectRenderContext **ppContext);
        
        HRESULT ( STDMETHODCALLTYPE *CreateEffectOuter )( 
            __RPC__in IMILBitmapEffectFactory * This,
            /* [out] */ __RPC__deref_out_opt IMILBitmapEffect **ppEffect);
        
        END_INTERFACE
    } IMILBitmapEffectFactoryVtbl;

    interface IMILBitmapEffectFactory
    {
        CONST_VTBL struct IMILBitmapEffectFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectFactory_CreateEffect(This,pguidEffect,ppEffect)	\
    ( (This)->lpVtbl -> CreateEffect(This,pguidEffect,ppEffect) ) 

#define IMILBitmapEffectFactory_CreateContext(This,ppContext)	\
    ( (This)->lpVtbl -> CreateContext(This,ppContext) ) 

#define IMILBitmapEffectFactory_CreateEffectOuter(This,ppEffect)	\
    ( (This)->lpVtbl -> CreateEffectOuter(This,ppEffect) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectFactory_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectPrimitive_INTERFACE_DEFINED__
#define __IMILBitmapEffectPrimitive_INTERFACE_DEFINED__

/* interface IMILBitmapEffectPrimitive */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectPrimitive;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("67E31025-3091-4dfc-98D6-DD494551461D")
    IMILBitmapEffectPrimitive : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetOutput( 
            /* [in] */ ULONG uiIndex,
            /* [in] */ __RPC__in_opt IMILBitmapEffectRenderContext *pContext,
            /* [out][in] */ __RPC__inout VARIANT_BOOL *pfModifyInPlace,
            /* [retval][out] */ __RPC__deref_out_opt IWICBitmapSource **ppBitmapSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TransformPoint( 
            /* [in] */ ULONG uiIndex,
            /* [out][in] */ __RPC__inout MilPoint2D *p,
            /* [in] */ VARIANT_BOOL fForwardTransform,
            /* [in] */ __RPC__in_opt IMILBitmapEffectRenderContext *pContext,
            /* [out] */ __RPC__out VARIANT_BOOL *pfPointTransformed) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TransformRect( 
            /* [in] */ ULONG uiIndex,
            /* [out][in] */ __RPC__inout MilPointAndSizeD *p,
            /* [in] */ VARIANT_BOOL fForwardTransform,
            /* [in] */ __RPC__in_opt IMILBitmapEffectRenderContext *pContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HasAffineTransform( 
            /* [in] */ ULONG uiIndex,
            /* [out] */ __RPC__out VARIANT_BOOL *pfAffine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HasInverseTransform( 
            /* [in] */ ULONG uiIndex,
            /* [out] */ __RPC__out VARIANT_BOOL *pfHasInverse) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAffineMatrix( 
            /* [in] */ ULONG uiIndex,
            /* [out][in] */ __RPC__inout MilMatrix3x2D *pMatrix) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectPrimitiveVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectPrimitive * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectPrimitive * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectPrimitive * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutput )( 
            __RPC__in IMILBitmapEffectPrimitive * This,
            /* [in] */ ULONG uiIndex,
            /* [in] */ __RPC__in_opt IMILBitmapEffectRenderContext *pContext,
            /* [out][in] */ __RPC__inout VARIANT_BOOL *pfModifyInPlace,
            /* [retval][out] */ __RPC__deref_out_opt IWICBitmapSource **ppBitmapSource);
        
        HRESULT ( STDMETHODCALLTYPE *TransformPoint )( 
            __RPC__in IMILBitmapEffectPrimitive * This,
            /* [in] */ ULONG uiIndex,
            /* [out][in] */ __RPC__inout MilPoint2D *p,
            /* [in] */ VARIANT_BOOL fForwardTransform,
            /* [in] */ __RPC__in_opt IMILBitmapEffectRenderContext *pContext,
            /* [out] */ __RPC__out VARIANT_BOOL *pfPointTransformed);
        
        HRESULT ( STDMETHODCALLTYPE *TransformRect )( 
            __RPC__in IMILBitmapEffectPrimitive * This,
            /* [in] */ ULONG uiIndex,
            /* [out][in] */ __RPC__inout MilPointAndSizeD *p,
            /* [in] */ VARIANT_BOOL fForwardTransform,
            /* [in] */ __RPC__in_opt IMILBitmapEffectRenderContext *pContext);
        
        HRESULT ( STDMETHODCALLTYPE *HasAffineTransform )( 
            __RPC__in IMILBitmapEffectPrimitive * This,
            /* [in] */ ULONG uiIndex,
            /* [out] */ __RPC__out VARIANT_BOOL *pfAffine);
        
        HRESULT ( STDMETHODCALLTYPE *HasInverseTransform )( 
            __RPC__in IMILBitmapEffectPrimitive * This,
            /* [in] */ ULONG uiIndex,
            /* [out] */ __RPC__out VARIANT_BOOL *pfHasInverse);
        
        HRESULT ( STDMETHODCALLTYPE *GetAffineMatrix )( 
            __RPC__in IMILBitmapEffectPrimitive * This,
            /* [in] */ ULONG uiIndex,
            /* [out][in] */ __RPC__inout MilMatrix3x2D *pMatrix);
        
        END_INTERFACE
    } IMILBitmapEffectPrimitiveVtbl;

    interface IMILBitmapEffectPrimitive
    {
        CONST_VTBL struct IMILBitmapEffectPrimitiveVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectPrimitive_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectPrimitive_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectPrimitive_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectPrimitive_GetOutput(This,uiIndex,pContext,pfModifyInPlace,ppBitmapSource)	\
    ( (This)->lpVtbl -> GetOutput(This,uiIndex,pContext,pfModifyInPlace,ppBitmapSource) ) 

#define IMILBitmapEffectPrimitive_TransformPoint(This,uiIndex,p,fForwardTransform,pContext,pfPointTransformed)	\
    ( (This)->lpVtbl -> TransformPoint(This,uiIndex,p,fForwardTransform,pContext,pfPointTransformed) ) 

#define IMILBitmapEffectPrimitive_TransformRect(This,uiIndex,p,fForwardTransform,pContext)	\
    ( (This)->lpVtbl -> TransformRect(This,uiIndex,p,fForwardTransform,pContext) ) 

#define IMILBitmapEffectPrimitive_HasAffineTransform(This,uiIndex,pfAffine)	\
    ( (This)->lpVtbl -> HasAffineTransform(This,uiIndex,pfAffine) ) 

#define IMILBitmapEffectPrimitive_HasInverseTransform(This,uiIndex,pfHasInverse)	\
    ( (This)->lpVtbl -> HasInverseTransform(This,uiIndex,pfHasInverse) ) 

#define IMILBitmapEffectPrimitive_GetAffineMatrix(This,uiIndex,pMatrix)	\
    ( (This)->lpVtbl -> GetAffineMatrix(This,uiIndex,pMatrix) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectPrimitive_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectPrimitiveImpl_INTERFACE_DEFINED__
#define __IMILBitmapEffectPrimitiveImpl_INTERFACE_DEFINED__

/* interface IMILBitmapEffectPrimitiveImpl */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectPrimitiveImpl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CE41E00B-EFA6-44e7-B007-DD042E3AE126")
    IMILBitmapEffectPrimitiveImpl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE IsDirty( 
            /* [in] */ ULONG uiOutputIndex,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfDirty) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsVolatile( 
            /* [in] */ ULONG uiOutputIndex,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfVolatile) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectPrimitiveImplVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectPrimitiveImpl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectPrimitiveImpl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectPrimitiveImpl * This);
        
        HRESULT ( STDMETHODCALLTYPE *IsDirty )( 
            __RPC__in IMILBitmapEffectPrimitiveImpl * This,
            /* [in] */ ULONG uiOutputIndex,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfDirty);
        
        HRESULT ( STDMETHODCALLTYPE *IsVolatile )( 
            __RPC__in IMILBitmapEffectPrimitiveImpl * This,
            /* [in] */ ULONG uiOutputIndex,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfVolatile);
        
        END_INTERFACE
    } IMILBitmapEffectPrimitiveImplVtbl;

    interface IMILBitmapEffectPrimitiveImpl
    {
        CONST_VTBL struct IMILBitmapEffectPrimitiveImplVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectPrimitiveImpl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectPrimitiveImpl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectPrimitiveImpl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectPrimitiveImpl_IsDirty(This,uiOutputIndex,pfDirty)	\
    ( (This)->lpVtbl -> IsDirty(This,uiOutputIndex,pfDirty) ) 

#define IMILBitmapEffectPrimitiveImpl_IsVolatile(This,uiOutputIndex,pfVolatile)	\
    ( (This)->lpVtbl -> IsVolatile(This,uiOutputIndex,pfVolatile) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectPrimitiveImpl_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffects_INTERFACE_DEFINED__
#define __IMILBitmapEffects_INTERFACE_DEFINED__

/* interface IMILBitmapEffects */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffects;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("51AC3DCE-67C5-448b-9180-AD3EABDDD5DD")
    IMILBitmapEffects : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE _NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppiuReturn) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectGroup **ppEffect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Item( 
            ULONG uindex,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffect **ppEffect) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out ULONG *puiCount) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffects * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffects * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffects * This);
        
        HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            __RPC__in IMILBitmapEffects * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppiuReturn);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            __RPC__in IMILBitmapEffects * This,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectGroup **ppEffect);
        
        HRESULT ( STDMETHODCALLTYPE *Item )( 
            __RPC__in IMILBitmapEffects * This,
            ULONG uindex,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffect **ppEffect);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IMILBitmapEffects * This,
            /* [retval][out] */ __RPC__out ULONG *puiCount);
        
        END_INTERFACE
    } IMILBitmapEffectsVtbl;

    interface IMILBitmapEffects
    {
        CONST_VTBL struct IMILBitmapEffectsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffects_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffects_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffects_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffects__NewEnum(This,ppiuReturn)	\
    ( (This)->lpVtbl -> _NewEnum(This,ppiuReturn) ) 

#define IMILBitmapEffects_get_Parent(This,ppEffect)	\
    ( (This)->lpVtbl -> get_Parent(This,ppEffect) ) 

#define IMILBitmapEffects_Item(This,uindex,ppEffect)	\
    ( (This)->lpVtbl -> Item(This,uindex,ppEffect) ) 

#define IMILBitmapEffects_get_Count(This,puiCount)	\
    ( (This)->lpVtbl -> get_Count(This,puiCount) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffects_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectConnector_INTERFACE_DEFINED__
#define __IMILBitmapEffectConnector_INTERFACE_DEFINED__

/* interface IMILBitmapEffectConnector */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectConnector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F59567B3-76C1-4d47-BA1E-79F955E350EF")
    IMILBitmapEffectConnector : public IMILBitmapEffectConnectorInfo
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE IsConnected( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfConnected) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBitmapEffect( 
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffect **ppEffect) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectConnectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectConnector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectConnector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIndex )( 
            __RPC__in IMILBitmapEffectConnector * This,
            /* [retval][out] */ __RPC__out ULONG *puiIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetOptimalFormat )( 
            __RPC__in IMILBitmapEffectConnector * This,
            /* [retval][out] */ __RPC__out WICPixelFormatGUID *pFormat);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberFormats )( 
            __RPC__in IMILBitmapEffectConnector * This,
            /* [retval][out] */ __RPC__out ULONG *pulNumberFormats);
        
        HRESULT ( STDMETHODCALLTYPE *GetFormat )( 
            __RPC__in IMILBitmapEffectConnector * This,
            /* [in] */ ULONG ulIndex,
            /* [retval][out] */ __RPC__out WICPixelFormatGUID *pFormat);
        
        HRESULT ( STDMETHODCALLTYPE *IsConnected )( 
            __RPC__in IMILBitmapEffectConnector * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfConnected);
        
        HRESULT ( STDMETHODCALLTYPE *GetBitmapEffect )( 
            __RPC__in IMILBitmapEffectConnector * This,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffect **ppEffect);
        
        END_INTERFACE
    } IMILBitmapEffectConnectorVtbl;

    interface IMILBitmapEffectConnector
    {
        CONST_VTBL struct IMILBitmapEffectConnectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectConnector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectConnector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectConnector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectConnector_GetIndex(This,puiIndex)	\
    ( (This)->lpVtbl -> GetIndex(This,puiIndex) ) 

#define IMILBitmapEffectConnector_GetOptimalFormat(This,pFormat)	\
    ( (This)->lpVtbl -> GetOptimalFormat(This,pFormat) ) 

#define IMILBitmapEffectConnector_GetNumberFormats(This,pulNumberFormats)	\
    ( (This)->lpVtbl -> GetNumberFormats(This,pulNumberFormats) ) 

#define IMILBitmapEffectConnector_GetFormat(This,ulIndex,pFormat)	\
    ( (This)->lpVtbl -> GetFormat(This,ulIndex,pFormat) ) 


#define IMILBitmapEffectConnector_IsConnected(This,pfConnected)	\
    ( (This)->lpVtbl -> IsConnected(This,pfConnected) ) 

#define IMILBitmapEffectConnector_GetBitmapEffect(This,ppEffect)	\
    ( (This)->lpVtbl -> GetBitmapEffect(This,ppEffect) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectConnector_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectInputConnector_INTERFACE_DEFINED__
#define __IMILBitmapEffectInputConnector_INTERFACE_DEFINED__

/* interface IMILBitmapEffectInputConnector */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectInputConnector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A9B4ECAA-7A3C-45e7-8573-F4B81B60DD6C")
    IMILBitmapEffectInputConnector : public IMILBitmapEffectConnector
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ConnectTo( 
            /* [in] */ __RPC__in_opt IMILBitmapEffectOutputConnector *pConnector) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConnection( 
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectOutputConnector **ppConnector) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectInputConnectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectInputConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectInputConnector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectInputConnector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIndex )( 
            __RPC__in IMILBitmapEffectInputConnector * This,
            /* [retval][out] */ __RPC__out ULONG *puiIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetOptimalFormat )( 
            __RPC__in IMILBitmapEffectInputConnector * This,
            /* [retval][out] */ __RPC__out WICPixelFormatGUID *pFormat);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberFormats )( 
            __RPC__in IMILBitmapEffectInputConnector * This,
            /* [retval][out] */ __RPC__out ULONG *pulNumberFormats);
        
        HRESULT ( STDMETHODCALLTYPE *GetFormat )( 
            __RPC__in IMILBitmapEffectInputConnector * This,
            /* [in] */ ULONG ulIndex,
            /* [retval][out] */ __RPC__out WICPixelFormatGUID *pFormat);
        
        HRESULT ( STDMETHODCALLTYPE *IsConnected )( 
            __RPC__in IMILBitmapEffectInputConnector * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfConnected);
        
        HRESULT ( STDMETHODCALLTYPE *GetBitmapEffect )( 
            __RPC__in IMILBitmapEffectInputConnector * This,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffect **ppEffect);
        
        HRESULT ( STDMETHODCALLTYPE *ConnectTo )( 
            __RPC__in IMILBitmapEffectInputConnector * This,
            /* [in] */ __RPC__in_opt IMILBitmapEffectOutputConnector *pConnector);
        
        HRESULT ( STDMETHODCALLTYPE *GetConnection )( 
            __RPC__in IMILBitmapEffectInputConnector * This,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectOutputConnector **ppConnector);
        
        END_INTERFACE
    } IMILBitmapEffectInputConnectorVtbl;

    interface IMILBitmapEffectInputConnector
    {
        CONST_VTBL struct IMILBitmapEffectInputConnectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectInputConnector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectInputConnector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectInputConnector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectInputConnector_GetIndex(This,puiIndex)	\
    ( (This)->lpVtbl -> GetIndex(This,puiIndex) ) 

#define IMILBitmapEffectInputConnector_GetOptimalFormat(This,pFormat)	\
    ( (This)->lpVtbl -> GetOptimalFormat(This,pFormat) ) 

#define IMILBitmapEffectInputConnector_GetNumberFormats(This,pulNumberFormats)	\
    ( (This)->lpVtbl -> GetNumberFormats(This,pulNumberFormats) ) 

#define IMILBitmapEffectInputConnector_GetFormat(This,ulIndex,pFormat)	\
    ( (This)->lpVtbl -> GetFormat(This,ulIndex,pFormat) ) 


#define IMILBitmapEffectInputConnector_IsConnected(This,pfConnected)	\
    ( (This)->lpVtbl -> IsConnected(This,pfConnected) ) 

#define IMILBitmapEffectInputConnector_GetBitmapEffect(This,ppEffect)	\
    ( (This)->lpVtbl -> GetBitmapEffect(This,ppEffect) ) 


#define IMILBitmapEffectInputConnector_ConnectTo(This,pConnector)	\
    ( (This)->lpVtbl -> ConnectTo(This,pConnector) ) 

#define IMILBitmapEffectInputConnector_GetConnection(This,ppConnector)	\
    ( (This)->lpVtbl -> GetConnection(This,ppConnector) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectInputConnector_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectOutputConnector_INTERFACE_DEFINED__
#define __IMILBitmapEffectOutputConnector_INTERFACE_DEFINED__

/* interface IMILBitmapEffectOutputConnector */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectOutputConnector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("92957AAD-841B-4866-82EC-8752468B07FD")
    IMILBitmapEffectOutputConnector : public IMILBitmapEffectConnector
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetNumberConnections( 
            /* [retval][out] */ __RPC__out ULONG *puiNumberConnections) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConnection( 
            /* [in] */ ULONG uiIndex,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectInputConnector **ppConnection) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectOutputConnectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectOutputConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectOutputConnector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectOutputConnector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIndex )( 
            __RPC__in IMILBitmapEffectOutputConnector * This,
            /* [retval][out] */ __RPC__out ULONG *puiIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetOptimalFormat )( 
            __RPC__in IMILBitmapEffectOutputConnector * This,
            /* [retval][out] */ __RPC__out WICPixelFormatGUID *pFormat);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberFormats )( 
            __RPC__in IMILBitmapEffectOutputConnector * This,
            /* [retval][out] */ __RPC__out ULONG *pulNumberFormats);
        
        HRESULT ( STDMETHODCALLTYPE *GetFormat )( 
            __RPC__in IMILBitmapEffectOutputConnector * This,
            /* [in] */ ULONG ulIndex,
            /* [retval][out] */ __RPC__out WICPixelFormatGUID *pFormat);
        
        HRESULT ( STDMETHODCALLTYPE *IsConnected )( 
            __RPC__in IMILBitmapEffectOutputConnector * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfConnected);
        
        HRESULT ( STDMETHODCALLTYPE *GetBitmapEffect )( 
            __RPC__in IMILBitmapEffectOutputConnector * This,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffect **ppEffect);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberConnections )( 
            __RPC__in IMILBitmapEffectOutputConnector * This,
            /* [retval][out] */ __RPC__out ULONG *puiNumberConnections);
        
        HRESULT ( STDMETHODCALLTYPE *GetConnection )( 
            __RPC__in IMILBitmapEffectOutputConnector * This,
            /* [in] */ ULONG uiIndex,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectInputConnector **ppConnection);
        
        END_INTERFACE
    } IMILBitmapEffectOutputConnectorVtbl;

    interface IMILBitmapEffectOutputConnector
    {
        CONST_VTBL struct IMILBitmapEffectOutputConnectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectOutputConnector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectOutputConnector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectOutputConnector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectOutputConnector_GetIndex(This,puiIndex)	\
    ( (This)->lpVtbl -> GetIndex(This,puiIndex) ) 

#define IMILBitmapEffectOutputConnector_GetOptimalFormat(This,pFormat)	\
    ( (This)->lpVtbl -> GetOptimalFormat(This,pFormat) ) 

#define IMILBitmapEffectOutputConnector_GetNumberFormats(This,pulNumberFormats)	\
    ( (This)->lpVtbl -> GetNumberFormats(This,pulNumberFormats) ) 

#define IMILBitmapEffectOutputConnector_GetFormat(This,ulIndex,pFormat)	\
    ( (This)->lpVtbl -> GetFormat(This,ulIndex,pFormat) ) 


#define IMILBitmapEffectOutputConnector_IsConnected(This,pfConnected)	\
    ( (This)->lpVtbl -> IsConnected(This,pfConnected) ) 

#define IMILBitmapEffectOutputConnector_GetBitmapEffect(This,ppEffect)	\
    ( (This)->lpVtbl -> GetBitmapEffect(This,ppEffect) ) 


#define IMILBitmapEffectOutputConnector_GetNumberConnections(This,puiNumberConnections)	\
    ( (This)->lpVtbl -> GetNumberConnections(This,puiNumberConnections) ) 

#define IMILBitmapEffectOutputConnector_GetConnection(This,uiIndex,ppConnection)	\
    ( (This)->lpVtbl -> GetConnection(This,uiIndex,ppConnection) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectOutputConnector_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectOutputConnectorImpl_INTERFACE_DEFINED__
#define __IMILBitmapEffectOutputConnectorImpl_INTERFACE_DEFINED__

/* interface IMILBitmapEffectOutputConnectorImpl */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectOutputConnectorImpl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("21FAE777-8B39-4bfa-9F2D-F3941ED36913")
    IMILBitmapEffectOutputConnectorImpl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddBackLink( 
            /* [in] */ __RPC__in_opt IMILBitmapEffectInputConnector *pConnection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveBackLink( 
            /* [in] */ __RPC__in_opt IMILBitmapEffectInputConnector *pConnection) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectOutputConnectorImplVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectOutputConnectorImpl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectOutputConnectorImpl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectOutputConnectorImpl * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddBackLink )( 
            __RPC__in IMILBitmapEffectOutputConnectorImpl * This,
            /* [in] */ __RPC__in_opt IMILBitmapEffectInputConnector *pConnection);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveBackLink )( 
            __RPC__in IMILBitmapEffectOutputConnectorImpl * This,
            /* [in] */ __RPC__in_opt IMILBitmapEffectInputConnector *pConnection);
        
        END_INTERFACE
    } IMILBitmapEffectOutputConnectorImplVtbl;

    interface IMILBitmapEffectOutputConnectorImpl
    {
        CONST_VTBL struct IMILBitmapEffectOutputConnectorImplVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectOutputConnectorImpl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectOutputConnectorImpl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectOutputConnectorImpl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectOutputConnectorImpl_AddBackLink(This,pConnection)	\
    ( (This)->lpVtbl -> AddBackLink(This,pConnection) ) 

#define IMILBitmapEffectOutputConnectorImpl_RemoveBackLink(This,pConnection)	\
    ( (This)->lpVtbl -> RemoveBackLink(This,pConnection) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectOutputConnectorImpl_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectInteriorInputConnector_INTERFACE_DEFINED__
#define __IMILBitmapEffectInteriorInputConnector_INTERFACE_DEFINED__

/* interface IMILBitmapEffectInteriorInputConnector */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectInteriorInputConnector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("20287E9E-86A2-4e15-953D-EB1438A5B842")
    IMILBitmapEffectInteriorInputConnector : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetInputConnector( 
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectInputConnector **pInputConnector) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectInteriorInputConnectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectInteriorInputConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectInteriorInputConnector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectInteriorInputConnector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInputConnector )( 
            __RPC__in IMILBitmapEffectInteriorInputConnector * This,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectInputConnector **pInputConnector);
        
        END_INTERFACE
    } IMILBitmapEffectInteriorInputConnectorVtbl;

    interface IMILBitmapEffectInteriorInputConnector
    {
        CONST_VTBL struct IMILBitmapEffectInteriorInputConnectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectInteriorInputConnector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectInteriorInputConnector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectInteriorInputConnector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectInteriorInputConnector_GetInputConnector(This,pInputConnector)	\
    ( (This)->lpVtbl -> GetInputConnector(This,pInputConnector) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectInteriorInputConnector_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectInteriorOutputConnector_INTERFACE_DEFINED__
#define __IMILBitmapEffectInteriorOutputConnector_INTERFACE_DEFINED__

/* interface IMILBitmapEffectInteriorOutputConnector */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectInteriorOutputConnector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00BBB6DC-ACC9-4bfc-B344-8BEE383DFEFA")
    IMILBitmapEffectInteriorOutputConnector : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetOutputConnector( 
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectOutputConnector **pOutputConnector) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectInteriorOutputConnectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectInteriorOutputConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectInteriorOutputConnector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectInteriorOutputConnector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetOutputConnector )( 
            __RPC__in IMILBitmapEffectInteriorOutputConnector * This,
            /* [retval][out] */ __RPC__deref_out_opt IMILBitmapEffectOutputConnector **pOutputConnector);
        
        END_INTERFACE
    } IMILBitmapEffectInteriorOutputConnectorVtbl;

    interface IMILBitmapEffectInteriorOutputConnector
    {
        CONST_VTBL struct IMILBitmapEffectInteriorOutputConnectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectInteriorOutputConnector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectInteriorOutputConnector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectInteriorOutputConnector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectInteriorOutputConnector_GetOutputConnector(This,pOutputConnector)	\
    ( (This)->lpVtbl -> GetOutputConnector(This,pOutputConnector) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectInteriorOutputConnector_INTERFACE_DEFINED__ */


#ifndef __IMILBitmapEffectEvents_INTERFACE_DEFINED__
#define __IMILBitmapEffectEvents_INTERFACE_DEFINED__

/* interface IMILBitmapEffectEvents */
/* [uuid][object] */ 


EXTERN_C const IID IID_IMILBitmapEffectEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2E880DD8-F8CE-457b-8199-D60BB3D7EF98")
    IMILBitmapEffectEvents : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE PropertyChange( 
            /* [in] */ __RPC__in_opt IMILBitmapEffect *pEffect,
            /* [in] */ __RPC__in BSTR bstrPropertyName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DirtyRegion( 
            /* [in] */ __RPC__in_opt IMILBitmapEffect *pEffect,
            /* [in] */ __RPC__in MilPointAndSizeD *pRect) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMILBitmapEffectEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMILBitmapEffectEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMILBitmapEffectEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMILBitmapEffectEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *PropertyChange )( 
            __RPC__in IMILBitmapEffectEvents * This,
            /* [in] */ __RPC__in_opt IMILBitmapEffect *pEffect,
            /* [in] */ __RPC__in BSTR bstrPropertyName);
        
        HRESULT ( STDMETHODCALLTYPE *DirtyRegion )( 
            __RPC__in IMILBitmapEffectEvents * This,
            /* [in] */ __RPC__in_opt IMILBitmapEffect *pEffect,
            /* [in] */ __RPC__in MilPointAndSizeD *pRect);
        
        END_INTERFACE
    } IMILBitmapEffectEventsVtbl;

    interface IMILBitmapEffectEvents
    {
        CONST_VTBL struct IMILBitmapEffectEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMILBitmapEffectEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMILBitmapEffectEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMILBitmapEffectEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMILBitmapEffectEvents_PropertyChange(This,pEffect,bstrPropertyName)	\
    ( (This)->lpVtbl -> PropertyChange(This,pEffect,bstrPropertyName) ) 

#define IMILBitmapEffectEvents_DirtyRegion(This,pEffect,pRect)	\
    ( (This)->lpVtbl -> DirtyRegion(This,pEffect,pRect) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMILBitmapEffectEvents_INTERFACE_DEFINED__ */

#endif /* __MILEffects_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\MMCObj.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mmcobj.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mmcobj_h__
#define __mmcobj_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __ISnapinProperties_FWD_DEFINED__
#define __ISnapinProperties_FWD_DEFINED__
typedef interface ISnapinProperties ISnapinProperties;
#endif 	/* __ISnapinProperties_FWD_DEFINED__ */


#ifndef __ISnapinPropertiesCallback_FWD_DEFINED__
#define __ISnapinPropertiesCallback_FWD_DEFINED__
typedef interface ISnapinPropertiesCallback ISnapinPropertiesCallback;
#endif 	/* __ISnapinPropertiesCallback_FWD_DEFINED__ */


#ifndef ___Application_FWD_DEFINED__
#define ___Application_FWD_DEFINED__
typedef interface _Application _Application;
#endif 	/* ___Application_FWD_DEFINED__ */


#ifndef ___AppEvents_FWD_DEFINED__
#define ___AppEvents_FWD_DEFINED__
typedef interface _AppEvents _AppEvents;
#endif 	/* ___AppEvents_FWD_DEFINED__ */


#ifndef __AppEvents_FWD_DEFINED__
#define __AppEvents_FWD_DEFINED__
typedef interface AppEvents AppEvents;
#endif 	/* __AppEvents_FWD_DEFINED__ */


#ifndef __Application_FWD_DEFINED__
#define __Application_FWD_DEFINED__

#ifdef __cplusplus
typedef class Application Application;
#else
typedef struct Application Application;
#endif /* __cplusplus */

#endif 	/* __Application_FWD_DEFINED__ */


#ifndef ___EventConnector_FWD_DEFINED__
#define ___EventConnector_FWD_DEFINED__
typedef interface _EventConnector _EventConnector;
#endif 	/* ___EventConnector_FWD_DEFINED__ */


#ifndef __AppEventsDHTMLConnector_FWD_DEFINED__
#define __AppEventsDHTMLConnector_FWD_DEFINED__

#ifdef __cplusplus
typedef class AppEventsDHTMLConnector AppEventsDHTMLConnector;
#else
typedef struct AppEventsDHTMLConnector AppEventsDHTMLConnector;
#endif /* __cplusplus */

#endif 	/* __AppEventsDHTMLConnector_FWD_DEFINED__ */


#ifndef __Frame_FWD_DEFINED__
#define __Frame_FWD_DEFINED__
typedef interface Frame Frame;
#endif 	/* __Frame_FWD_DEFINED__ */


#ifndef __Node_FWD_DEFINED__
#define __Node_FWD_DEFINED__
typedef interface Node Node;
#endif 	/* __Node_FWD_DEFINED__ */


#ifndef __ScopeNamespace_FWD_DEFINED__
#define __ScopeNamespace_FWD_DEFINED__
typedef interface ScopeNamespace ScopeNamespace;
#endif 	/* __ScopeNamespace_FWD_DEFINED__ */


#ifndef __Document_FWD_DEFINED__
#define __Document_FWD_DEFINED__
typedef interface Document Document;
#endif 	/* __Document_FWD_DEFINED__ */


#ifndef __SnapIn_FWD_DEFINED__
#define __SnapIn_FWD_DEFINED__
typedef interface SnapIn SnapIn;
#endif 	/* __SnapIn_FWD_DEFINED__ */


#ifndef __SnapIns_FWD_DEFINED__
#define __SnapIns_FWD_DEFINED__
typedef interface SnapIns SnapIns;
#endif 	/* __SnapIns_FWD_DEFINED__ */


#ifndef __Extension_FWD_DEFINED__
#define __Extension_FWD_DEFINED__
typedef interface Extension Extension;
#endif 	/* __Extension_FWD_DEFINED__ */


#ifndef __Extensions_FWD_DEFINED__
#define __Extensions_FWD_DEFINED__
typedef interface Extensions Extensions;
#endif 	/* __Extensions_FWD_DEFINED__ */


#ifndef __Columns_FWD_DEFINED__
#define __Columns_FWD_DEFINED__
typedef interface Columns Columns;
#endif 	/* __Columns_FWD_DEFINED__ */


#ifndef __Column_FWD_DEFINED__
#define __Column_FWD_DEFINED__
typedef interface Column Column;
#endif 	/* __Column_FWD_DEFINED__ */


#ifndef __Views_FWD_DEFINED__
#define __Views_FWD_DEFINED__
typedef interface Views Views;
#endif 	/* __Views_FWD_DEFINED__ */


#ifndef __View_FWD_DEFINED__
#define __View_FWD_DEFINED__
typedef interface View View;
#endif 	/* __View_FWD_DEFINED__ */


#ifndef __Nodes_FWD_DEFINED__
#define __Nodes_FWD_DEFINED__
typedef interface Nodes Nodes;
#endif 	/* __Nodes_FWD_DEFINED__ */


#ifndef __ContextMenu_FWD_DEFINED__
#define __ContextMenu_FWD_DEFINED__
typedef interface ContextMenu ContextMenu;
#endif 	/* __ContextMenu_FWD_DEFINED__ */


#ifndef __MenuItem_FWD_DEFINED__
#define __MenuItem_FWD_DEFINED__
typedef interface MenuItem MenuItem;
#endif 	/* __MenuItem_FWD_DEFINED__ */


#ifndef __Properties_FWD_DEFINED__
#define __Properties_FWD_DEFINED__
typedef interface Properties Properties;
#endif 	/* __Properties_FWD_DEFINED__ */


#ifndef __Property_FWD_DEFINED__
#define __Property_FWD_DEFINED__
typedef interface Property Property;
#endif 	/* __Property_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mmcobj_0000_0000 */
/* [local] */ 

#ifndef MMC_VER
#define MMC_VER 0x0200
#endif
#if (MMC_VER >= 0x0200)




















typedef _Application *PAPPLICATION;

typedef _Application **PPAPPLICATION;

typedef Column *PCOLUMN;

typedef Column **PPCOLUMN;

typedef Columns *PCOLUMNS;

typedef Columns **PPCOLUMNS;

typedef ContextMenu *PCONTEXTMENU;

typedef ContextMenu **PPCONTEXTMENU;

typedef Document *PDOCUMENT;

typedef Document **PPDOCUMENT;

typedef Frame *PFRAME;

typedef Frame **PPFRAME;

typedef MenuItem *PMENUITEM;

typedef MenuItem **PPMENUITEM;

typedef Node *PNODE;

typedef Node **PPNODE;

typedef Nodes *PNODES;

typedef Nodes **PPNODES;

typedef Properties *PPROPERTIES;

typedef Properties **PPPROPERTIES;

typedef Property *PPROPERTY;

typedef Property **PPPROPERTY;

typedef ScopeNamespace *PSCOPENAMESPACE;

typedef ScopeNamespace **PPSCOPENAMESPACE;

typedef SnapIn *PSNAPIN;

typedef SnapIn **PPSNAPIN;

typedef SnapIns *PSNAPINS;

typedef SnapIns **PPSNAPINS;

typedef Extension *PEXTENSION;

typedef Extension **PPEXTENSION;

typedef Extensions *PEXTENSIONS;

typedef Extensions **PPEXTENSIONS;

typedef View *PVIEW;

typedef View **PPVIEW;

typedef Views *PVIEWS;

typedef Views **PPVIEWS;

typedef ISnapinProperties *LPSNAPINPROPERTIES;

typedef ISnapinPropertiesCallback *LPSNAPINPROPERTIESCALLBACK;

typedef BOOL *PBOOL;

typedef int *PINT;

typedef BSTR *PBSTR;

typedef VARIANT *PVARIANT;

typedef long *PLONG;

typedef IDispatch *PDISPATCH;

typedef IDispatch **PPDISPATCH;



extern RPC_IF_HANDLE __MIDL_itf_mmcobj_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mmcobj_0000_0000_v0_0_s_ifspec;

#ifndef __ISnapinProperties_INTERFACE_DEFINED__
#define __ISnapinProperties_INTERFACE_DEFINED__

/* interface ISnapinProperties */
/* [unique][helpstring][uuid][object] */ 

typedef 
enum _MMC_PROPERTY_ACTION
    {	MMC_PROPACT_DELETING	= 1,
	MMC_PROPACT_CHANGING	= ( MMC_PROPACT_DELETING + 1 ) ,
	MMC_PROPACT_INITIALIZED	= ( MMC_PROPACT_CHANGING + 1 ) 
    } 	MMC_PROPERTY_ACTION;

typedef struct _MMC_SNAPIN_PROPERTY
    {
    LPCOLESTR pszPropName;
    VARIANT varValue;
    MMC_PROPERTY_ACTION eAction;
    } 	MMC_SNAPIN_PROPERTY;


EXTERN_C const IID IID_ISnapinProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F7889DA9-4A02-4837-BF89-1A6F2A021010")
    ISnapinProperties : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt Properties *pProperties) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryPropertyNames( 
            /* [in] */ __RPC__in_opt ISnapinPropertiesCallback *pCallback) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PropertiesChanged( 
            /* [in] */ long cProperties,
            /* [size_is][in] */ __RPC__in_ecount_full(cProperties) MMC_SNAPIN_PROPERTY *pProperties) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISnapinPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ISnapinProperties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ISnapinProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ISnapinProperties * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in ISnapinProperties * This,
            /* [in] */ __RPC__in_opt Properties *pProperties);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryPropertyNames )( 
            __RPC__in ISnapinProperties * This,
            /* [in] */ __RPC__in_opt ISnapinPropertiesCallback *pCallback);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PropertiesChanged )( 
            __RPC__in ISnapinProperties * This,
            /* [in] */ long cProperties,
            /* [size_is][in] */ __RPC__in_ecount_full(cProperties) MMC_SNAPIN_PROPERTY *pProperties);
        
        END_INTERFACE
    } ISnapinPropertiesVtbl;

    interface ISnapinProperties
    {
        CONST_VTBL struct ISnapinPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISnapinProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISnapinProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISnapinProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISnapinProperties_Initialize(This,pProperties)	\
    ( (This)->lpVtbl -> Initialize(This,pProperties) ) 

#define ISnapinProperties_QueryPropertyNames(This,pCallback)	\
    ( (This)->lpVtbl -> QueryPropertyNames(This,pCallback) ) 

#define ISnapinProperties_PropertiesChanged(This,cProperties,pProperties)	\
    ( (This)->lpVtbl -> PropertiesChanged(This,cProperties,pProperties) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISnapinProperties_INTERFACE_DEFINED__ */


#ifndef __ISnapinPropertiesCallback_INTERFACE_DEFINED__
#define __ISnapinPropertiesCallback_INTERFACE_DEFINED__

/* interface ISnapinPropertiesCallback */
/* [unique][helpstring][uuid][object] */ 

#define	MMC_PROP_CHANGEAFFECTSUI	( 0x1 )

#define	MMC_PROP_MODIFIABLE	( 0x2 )

#define	MMC_PROP_REMOVABLE	( 0x4 )

#define	MMC_PROP_PERSIST	( 0x8 )


EXTERN_C const IID IID_ISnapinPropertiesCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A50FA2E5-7E61-45EB-A8D4-9A07B3E851A8")
    ISnapinPropertiesCallback : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddPropertyName( 
            /* [in] */ __RPC__in LPCOLESTR pszPropName,
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISnapinPropertiesCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ISnapinPropertiesCallback * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ISnapinPropertiesCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ISnapinPropertiesCallback * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPropertyName )( 
            __RPC__in ISnapinPropertiesCallback * This,
            /* [in] */ __RPC__in LPCOLESTR pszPropName,
            /* [in] */ DWORD dwFlags);
        
        END_INTERFACE
    } ISnapinPropertiesCallbackVtbl;

    interface ISnapinPropertiesCallback
    {
        CONST_VTBL struct ISnapinPropertiesCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISnapinPropertiesCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISnapinPropertiesCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISnapinPropertiesCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISnapinPropertiesCallback_AddPropertyName(This,pszPropName,dwFlags)	\
    ( (This)->lpVtbl -> AddPropertyName(This,pszPropName,dwFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISnapinPropertiesCallback_INTERFACE_DEFINED__ */



#ifndef __MMC20_LIBRARY_DEFINED__
#define __MMC20_LIBRARY_DEFINED__

/* library MMC20 */
/* [version][helpstring][uuid] */ 

typedef /* [helpstring][v1_enum] */ 
enum DocumentMode
    {	DocumentMode_Author	= 0,
	DocumentMode_User	= ( DocumentMode_Author + 1 ) ,
	DocumentMode_User_MDI	= ( DocumentMode_User + 1 ) ,
	DocumentMode_User_SDI	= ( DocumentMode_User_MDI + 1 ) 
    } 	_DocumentMode;

typedef enum DocumentMode DOCUMENTMODE;

typedef enum DocumentMode *PDOCUMENTMODE;

typedef enum DocumentMode **PPDOCUMENTMODE;

typedef /* [helpstring][v1_enum] */ 
enum ListViewMode
    {	ListMode_Small_Icons	= 0,
	ListMode_Large_Icons	= ( ListMode_Small_Icons + 1 ) ,
	ListMode_List	= ( ListMode_Large_Icons + 1 ) ,
	ListMode_Detail	= ( ListMode_List + 1 ) ,
	ListMode_Filtered	= ( ListMode_Detail + 1 ) 
    } 	_ListViewMode;

typedef enum ListViewMode LISTVIEWMODE;

typedef enum ListViewMode *PLISTVIEWMODE;

typedef enum ListViewMode **PPLISTVIEWMODE;

typedef /* [helpstring][v1_enum] */ 
enum ViewOptions
    {	ViewOption_Default	= 0,
	ViewOption_ScopeTreeHidden	= 0x1,
	ViewOption_NoToolBars	= 0x2,
	ViewOption_NotPersistable	= 0x4,
	ViewOption_ActionPaneHidden	= 0x8
    } 	_ViewOptions;

typedef enum ViewOptions VIEWOPTIONS;

typedef enum ViewOptions *PVIEWOPTIONS;

typedef enum ViewOptions **PPVIEWOPTIONS;

typedef /* [helpstring][v1_enum] */ 
enum ExportListOptions
    {	ExportListOptions_Default	= 0,
	ExportListOptions_Unicode	= 0x1,
	ExportListOptions_TabDelimited	= 0x2,
	ExportListOptions_SelectedItemsOnly	= 0x4
    } 	_ExportListOptions;

typedef enum ExportListOptions EXPORTLISTOPTIONS;


EXTERN_C const IID LIBID_MMC20;

#ifndef ___Application_INTERFACE_DEFINED__
#define ___Application_INTERFACE_DEFINED__

/* interface _Application */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID__Application;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A3AFB9CC-B653-4741-86AB-F0470EC1384C")
    _Application : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ void STDMETHODCALLTYPE Help( void) = 0;
        
        virtual /* [helpstring][id] */ void STDMETHODCALLTYPE Quit( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Document( 
            /* [retval][out] */ __RPC__deref_out_opt PPDOCUMENT Document) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ __RPC__in BSTR Filename) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Frame( 
            /* [retval][out] */ __RPC__deref_out_opt PPFRAME Frame) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ __RPC__out PBOOL Visible) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Show( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Hide( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserControl( 
            /* [retval][out] */ __RPC__out PBOOL UserControl) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_UserControl( 
            /* [in] */ BOOL UserControl) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_VersionMajor( 
            /* [retval][out] */ __RPC__out PLONG VersionMajor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_VersionMinor( 
            /* [retval][out] */ __RPC__out PLONG VersionMinor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _ApplicationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in _Application * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in _Application * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in _Application * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in _Application * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in _Application * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in _Application * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Application * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ void ( STDMETHODCALLTYPE *Help )( 
            __RPC__in _Application * This);
        
        /* [helpstring][id] */ void ( STDMETHODCALLTYPE *Quit )( 
            __RPC__in _Application * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            __RPC__in _Application * This,
            /* [retval][out] */ __RPC__deref_out_opt PPDOCUMENT Document);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Load )( 
            __RPC__in _Application * This,
            /* [in] */ __RPC__in BSTR Filename);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Frame )( 
            __RPC__in _Application * This,
            /* [retval][out] */ __RPC__deref_out_opt PPFRAME Frame);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            __RPC__in _Application * This,
            /* [retval][out] */ __RPC__out PBOOL Visible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Show )( 
            __RPC__in _Application * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Hide )( 
            __RPC__in _Application * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserControl )( 
            __RPC__in _Application * This,
            /* [retval][out] */ __RPC__out PBOOL UserControl);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UserControl )( 
            __RPC__in _Application * This,
            /* [in] */ BOOL UserControl);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VersionMajor )( 
            __RPC__in _Application * This,
            /* [retval][out] */ __RPC__out PLONG VersionMajor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VersionMinor )( 
            __RPC__in _Application * This,
            /* [retval][out] */ __RPC__out PLONG VersionMinor);
        
        END_INTERFACE
    } _ApplicationVtbl;

    interface _Application
    {
        CONST_VTBL struct _ApplicationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Application_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Application_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Application_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Application_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Application_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Application_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Application_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Application_Help(This)	\
    ( (This)->lpVtbl -> Help(This) ) 

#define _Application_Quit(This)	\
    ( (This)->lpVtbl -> Quit(This) ) 

#define _Application_get_Document(This,Document)	\
    ( (This)->lpVtbl -> get_Document(This,Document) ) 

#define _Application_Load(This,Filename)	\
    ( (This)->lpVtbl -> Load(This,Filename) ) 

#define _Application_get_Frame(This,Frame)	\
    ( (This)->lpVtbl -> get_Frame(This,Frame) ) 

#define _Application_get_Visible(This,Visible)	\
    ( (This)->lpVtbl -> get_Visible(This,Visible) ) 

#define _Application_Show(This)	\
    ( (This)->lpVtbl -> Show(This) ) 

#define _Application_Hide(This)	\
    ( (This)->lpVtbl -> Hide(This) ) 

#define _Application_get_UserControl(This,UserControl)	\
    ( (This)->lpVtbl -> get_UserControl(This,UserControl) ) 

#define _Application_put_UserControl(This,UserControl)	\
    ( (This)->lpVtbl -> put_UserControl(This,UserControl) ) 

#define _Application_get_VersionMajor(This,VersionMajor)	\
    ( (This)->lpVtbl -> get_VersionMajor(This,VersionMajor) ) 

#define _Application_get_VersionMinor(This,VersionMinor)	\
    ( (This)->lpVtbl -> get_VersionMinor(This,VersionMinor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Application_INTERFACE_DEFINED__ */


#ifndef ___AppEvents_INTERFACE_DEFINED__
#define ___AppEvents_INTERFACE_DEFINED__

/* interface _AppEvents */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID__AppEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DE46CBDD-53F5-4635-AF54-4FE71E923D3F")
    _AppEvents : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnQuit( 
            /* [in] */ __RPC__in_opt PAPPLICATION Application) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnDocumentOpen( 
            /* [in] */ __RPC__in_opt PDOCUMENT Document,
            /* [in] */ BOOL New) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnDocumentClose( 
            /* [in] */ __RPC__in_opt PDOCUMENT Document) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSnapInAdded( 
            /* [in] */ __RPC__in_opt PDOCUMENT Document,
            /* [in] */ __RPC__in_opt PSNAPIN SnapIn) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSnapInRemoved( 
            /* [in] */ __RPC__in_opt PDOCUMENT Document,
            /* [in] */ __RPC__in_opt PSNAPIN SnapIn) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnNewView( 
            /* [in] */ __RPC__in_opt PVIEW View) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnViewClose( 
            /* [in] */ __RPC__in_opt PVIEW View) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnViewChange( 
            /* [in] */ __RPC__in_opt PVIEW View,
            /* [in] */ __RPC__in_opt PNODE NewOwnerNode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnSelectionChange( 
            /* [in] */ __RPC__in_opt PVIEW View,
            /* [in] */ __RPC__in_opt PNODES NewNodes) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnContextMenuExecuted( 
            /* [in] */ __RPC__in_opt PMENUITEM MenuItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnToolbarButtonClicked( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnListUpdated( 
            /* [in] */ __RPC__in_opt PVIEW View) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _AppEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in _AppEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in _AppEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in _AppEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in _AppEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in _AppEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in _AppEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AppEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnQuit )( 
            __RPC__in _AppEvents * This,
            /* [in] */ __RPC__in_opt PAPPLICATION Application);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnDocumentOpen )( 
            __RPC__in _AppEvents * This,
            /* [in] */ __RPC__in_opt PDOCUMENT Document,
            /* [in] */ BOOL New);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnDocumentClose )( 
            __RPC__in _AppEvents * This,
            /* [in] */ __RPC__in_opt PDOCUMENT Document);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSnapInAdded )( 
            __RPC__in _AppEvents * This,
            /* [in] */ __RPC__in_opt PDOCUMENT Document,
            /* [in] */ __RPC__in_opt PSNAPIN SnapIn);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSnapInRemoved )( 
            __RPC__in _AppEvents * This,
            /* [in] */ __RPC__in_opt PDOCUMENT Document,
            /* [in] */ __RPC__in_opt PSNAPIN SnapIn);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnNewView )( 
            __RPC__in _AppEvents * This,
            /* [in] */ __RPC__in_opt PVIEW View);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnViewClose )( 
            __RPC__in _AppEvents * This,
            /* [in] */ __RPC__in_opt PVIEW View);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnViewChange )( 
            __RPC__in _AppEvents * This,
            /* [in] */ __RPC__in_opt PVIEW View,
            /* [in] */ __RPC__in_opt PNODE NewOwnerNode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnSelectionChange )( 
            __RPC__in _AppEvents * This,
            /* [in] */ __RPC__in_opt PVIEW View,
            /* [in] */ __RPC__in_opt PNODES NewNodes);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnContextMenuExecuted )( 
            __RPC__in _AppEvents * This,
            /* [in] */ __RPC__in_opt PMENUITEM MenuItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnToolbarButtonClicked )( 
            __RPC__in _AppEvents * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnListUpdated )( 
            __RPC__in _AppEvents * This,
            /* [in] */ __RPC__in_opt PVIEW View);
        
        END_INTERFACE
    } _AppEventsVtbl;

    interface _AppEvents
    {
        CONST_VTBL struct _AppEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AppEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AppEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AppEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AppEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AppEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AppEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AppEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _AppEvents_OnQuit(This,Application)	\
    ( (This)->lpVtbl -> OnQuit(This,Application) ) 

#define _AppEvents_OnDocumentOpen(This,Document,New)	\
    ( (This)->lpVtbl -> OnDocumentOpen(This,Document,New) ) 

#define _AppEvents_OnDocumentClose(This,Document)	\
    ( (This)->lpVtbl -> OnDocumentClose(This,Document) ) 

#define _AppEvents_OnSnapInAdded(This,Document,SnapIn)	\
    ( (This)->lpVtbl -> OnSnapInAdded(This,Document,SnapIn) ) 

#define _AppEvents_OnSnapInRemoved(This,Document,SnapIn)	\
    ( (This)->lpVtbl -> OnSnapInRemoved(This,Document,SnapIn) ) 

#define _AppEvents_OnNewView(This,View)	\
    ( (This)->lpVtbl -> OnNewView(This,View) ) 

#define _AppEvents_OnViewClose(This,View)	\
    ( (This)->lpVtbl -> OnViewClose(This,View) ) 

#define _AppEvents_OnViewChange(This,View,NewOwnerNode)	\
    ( (This)->lpVtbl -> OnViewChange(This,View,NewOwnerNode) ) 

#define _AppEvents_OnSelectionChange(This,View,NewNodes)	\
    ( (This)->lpVtbl -> OnSelectionChange(This,View,NewNodes) ) 

#define _AppEvents_OnContextMenuExecuted(This,MenuItem)	\
    ( (This)->lpVtbl -> OnContextMenuExecuted(This,MenuItem) ) 

#define _AppEvents_OnToolbarButtonClicked(This)	\
    ( (This)->lpVtbl -> OnToolbarButtonClicked(This) ) 

#define _AppEvents_OnListUpdated(This,View)	\
    ( (This)->lpVtbl -> OnListUpdated(This,View) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AppEvents_INTERFACE_DEFINED__ */


#ifndef __AppEvents_DISPINTERFACE_DEFINED__
#define __AppEvents_DISPINTERFACE_DEFINED__

/* dispinterface AppEvents */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID_AppEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("FC7A4252-78AC-4532-8C5A-563CFE138863")
    AppEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct AppEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in AppEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in AppEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in AppEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in AppEvents * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in AppEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in AppEvents * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            AppEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } AppEventsVtbl;

    interface AppEvents
    {
        CONST_VTBL struct AppEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define AppEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define AppEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define AppEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define AppEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define AppEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define AppEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define AppEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __AppEvents_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_Application;

#ifdef __cplusplus

class DECLSPEC_UUID("49B2791A-B1AE-4C90-9B8E-E860BA07F889")
Application;
#endif

#ifndef ___EventConnector_INTERFACE_DEFINED__
#define ___EventConnector_INTERFACE_DEFINED__

/* interface _EventConnector */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID__EventConnector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C0BCCD30-DE44-4528-8403-A05A6A1CC8EA")
    _EventConnector : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ConnectTo( 
            /* [in] */ __RPC__in_opt PAPPLICATION Application) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Disconnect( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _EventConnectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in _EventConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in _EventConnector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in _EventConnector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in _EventConnector * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in _EventConnector * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in _EventConnector * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _EventConnector * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ConnectTo )( 
            __RPC__in _EventConnector * This,
            /* [in] */ __RPC__in_opt PAPPLICATION Application);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Disconnect )( 
            __RPC__in _EventConnector * This);
        
        END_INTERFACE
    } _EventConnectorVtbl;

    interface _EventConnector
    {
        CONST_VTBL struct _EventConnectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _EventConnector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _EventConnector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _EventConnector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _EventConnector_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _EventConnector_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _EventConnector_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _EventConnector_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _EventConnector_ConnectTo(This,Application)	\
    ( (This)->lpVtbl -> ConnectTo(This,Application) ) 

#define _EventConnector_Disconnect(This)	\
    ( (This)->lpVtbl -> Disconnect(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___EventConnector_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_AppEventsDHTMLConnector;

#ifdef __cplusplus

class DECLSPEC_UUID("ADE6444B-C91F-4e37-92A4-5BB430A33340")
AppEventsDHTMLConnector;
#endif

#ifndef __Frame_INTERFACE_DEFINED__
#define __Frame_INTERFACE_DEFINED__

/* interface Frame */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_Frame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E5E2D970-5BB3-4306-8804-B0968A31C8E6")
    Frame : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Maximize( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Minimize( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Restore( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ __RPC__out PINT Top) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Top( 
            /* [in] */ int top) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Bottom( 
            /* [retval][out] */ __RPC__out PINT Bottom) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Bottom( 
            /* [in] */ int bottom) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ __RPC__out PINT Left) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Left( 
            /* [in] */ int left) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Right( 
            /* [retval][out] */ __RPC__out PINT Right) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Right( 
            /* [in] */ int right) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct FrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in Frame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in Frame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in Frame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in Frame * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in Frame * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in Frame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Frame * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Maximize )( 
            __RPC__in Frame * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Minimize )( 
            __RPC__in Frame * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Restore )( 
            __RPC__in Frame * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            __RPC__in Frame * This,
            /* [retval][out] */ __RPC__out PINT Top);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Top )( 
            __RPC__in Frame * This,
            /* [in] */ int top);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Bottom )( 
            __RPC__in Frame * This,
            /* [retval][out] */ __RPC__out PINT Bottom);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Bottom )( 
            __RPC__in Frame * This,
            /* [in] */ int bottom);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            __RPC__in Frame * This,
            /* [retval][out] */ __RPC__out PINT Left);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Left )( 
            __RPC__in Frame * This,
            /* [in] */ int left);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Right )( 
            __RPC__in Frame * This,
            /* [retval][out] */ __RPC__out PINT Right);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Right )( 
            __RPC__in Frame * This,
            /* [in] */ int right);
        
        END_INTERFACE
    } FrameVtbl;

    interface Frame
    {
        CONST_VTBL struct FrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Frame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Frame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Frame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Frame_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Frame_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Frame_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Frame_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Frame_Maximize(This)	\
    ( (This)->lpVtbl -> Maximize(This) ) 

#define Frame_Minimize(This)	\
    ( (This)->lpVtbl -> Minimize(This) ) 

#define Frame_Restore(This)	\
    ( (This)->lpVtbl -> Restore(This) ) 

#define Frame_get_Top(This,Top)	\
    ( (This)->lpVtbl -> get_Top(This,Top) ) 

#define Frame_put_Top(This,top)	\
    ( (This)->lpVtbl -> put_Top(This,top) ) 

#define Frame_get_Bottom(This,Bottom)	\
    ( (This)->lpVtbl -> get_Bottom(This,Bottom) ) 

#define Frame_put_Bottom(This,bottom)	\
    ( (This)->lpVtbl -> put_Bottom(This,bottom) ) 

#define Frame_get_Left(This,Left)	\
    ( (This)->lpVtbl -> get_Left(This,Left) ) 

#define Frame_put_Left(This,left)	\
    ( (This)->lpVtbl -> put_Left(This,left) ) 

#define Frame_get_Right(This,Right)	\
    ( (This)->lpVtbl -> get_Right(This,Right) ) 

#define Frame_put_Right(This,right)	\
    ( (This)->lpVtbl -> put_Right(This,right) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Frame_INTERFACE_DEFINED__ */


#ifndef __Node_INTERFACE_DEFINED__
#define __Node_INTERFACE_DEFINED__

/* interface Node */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_Node;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F81ED800-7839-4447-945D-8E15DA59CA55")
    Node : public IDispatch
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Name) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Property( 
            /* [in] */ __RPC__in BSTR PropertyName,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR PropertyValue) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Bookmark( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Bookmark) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsScopeNode( 
            /* [retval][out] */ __RPC__out PBOOL IsScopeNode) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Nodetype( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Nodetype) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct NodeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in Node * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in Node * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in Node * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in Node * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in Node * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in Node * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Node * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in Node * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Property )( 
            __RPC__in Node * This,
            /* [in] */ __RPC__in BSTR PropertyName,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR PropertyValue);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Bookmark )( 
            __RPC__in Node * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Bookmark);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsScopeNode )( 
            __RPC__in Node * This,
            /* [retval][out] */ __RPC__out PBOOL IsScopeNode);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Nodetype )( 
            __RPC__in Node * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Nodetype);
        
        END_INTERFACE
    } NodeVtbl;

    interface Node
    {
        CONST_VTBL struct NodeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Node_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Node_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Node_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Node_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Node_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Node_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Node_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Node_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define Node_get_Property(This,PropertyName,PropertyValue)	\
    ( (This)->lpVtbl -> get_Property(This,PropertyName,PropertyValue) ) 

#define Node_get_Bookmark(This,Bookmark)	\
    ( (This)->lpVtbl -> get_Bookmark(This,Bookmark) ) 

#define Node_IsScopeNode(This,IsScopeNode)	\
    ( (This)->lpVtbl -> IsScopeNode(This,IsScopeNode) ) 

#define Node_get_Nodetype(This,Nodetype)	\
    ( (This)->lpVtbl -> get_Nodetype(This,Nodetype) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Node_INTERFACE_DEFINED__ */


#ifndef __ScopeNamespace_INTERFACE_DEFINED__
#define __ScopeNamespace_INTERFACE_DEFINED__

/* interface ScopeNamespace */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_ScopeNamespace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EBBB48DC-1A3B-4D86-B786-C21B28389012")
    ScopeNamespace : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetParent( 
            /* [in] */ __RPC__in_opt PNODE Node,
            /* [retval][out] */ __RPC__deref_out_opt PPNODE Parent) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetChild( 
            /* [in] */ __RPC__in_opt PNODE Node,
            /* [retval][out] */ __RPC__deref_out_opt PPNODE Child) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetNext( 
            /* [in] */ __RPC__in_opt PNODE Node,
            /* [retval][out] */ __RPC__deref_out_opt PPNODE Next) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetRoot( 
            /* [retval][out] */ __RPC__deref_out_opt PPNODE Root) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Expand( 
            /* [in] */ __RPC__in_opt PNODE Node) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ScopeNamespaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ScopeNamespace * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ScopeNamespace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ScopeNamespace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ScopeNamespace * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ScopeNamespace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ScopeNamespace * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ScopeNamespace * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetParent )( 
            __RPC__in ScopeNamespace * This,
            /* [in] */ __RPC__in_opt PNODE Node,
            /* [retval][out] */ __RPC__deref_out_opt PPNODE Parent);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetChild )( 
            __RPC__in ScopeNamespace * This,
            /* [in] */ __RPC__in_opt PNODE Node,
            /* [retval][out] */ __RPC__deref_out_opt PPNODE Child);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetNext )( 
            __RPC__in ScopeNamespace * This,
            /* [in] */ __RPC__in_opt PNODE Node,
            /* [retval][out] */ __RPC__deref_out_opt PPNODE Next);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetRoot )( 
            __RPC__in ScopeNamespace * This,
            /* [retval][out] */ __RPC__deref_out_opt PPNODE Root);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Expand )( 
            __RPC__in ScopeNamespace * This,
            /* [in] */ __RPC__in_opt PNODE Node);
        
        END_INTERFACE
    } ScopeNamespaceVtbl;

    interface ScopeNamespace
    {
        CONST_VTBL struct ScopeNamespaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ScopeNamespace_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ScopeNamespace_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ScopeNamespace_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ScopeNamespace_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ScopeNamespace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ScopeNamespace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ScopeNamespace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ScopeNamespace_GetParent(This,Node,Parent)	\
    ( (This)->lpVtbl -> GetParent(This,Node,Parent) ) 

#define ScopeNamespace_GetChild(This,Node,Child)	\
    ( (This)->lpVtbl -> GetChild(This,Node,Child) ) 

#define ScopeNamespace_GetNext(This,Node,Next)	\
    ( (This)->lpVtbl -> GetNext(This,Node,Next) ) 

#define ScopeNamespace_GetRoot(This,Root)	\
    ( (This)->lpVtbl -> GetRoot(This,Root) ) 

#define ScopeNamespace_Expand(This,Node)	\
    ( (This)->lpVtbl -> Expand(This,Node) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ScopeNamespace_INTERFACE_DEFINED__ */


#ifndef __Document_INTERFACE_DEFINED__
#define __Document_INTERFACE_DEFINED__

/* interface Document */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_Document;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("225120D6-1E0F-40A3-93FE-1079E6A8017B")
    Document : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Save( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ __RPC__in BSTR Filename) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [in] */ BOOL SaveChanges) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Views( 
            /* [retval][out] */ __RPC__deref_out_opt PPVIEWS Views) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SnapIns( 
            /* [retval][out] */ __RPC__deref_out_opt PPSNAPINS SnapIns) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveView( 
            /* [retval][out] */ __RPC__deref_out_opt PPVIEW View) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Name) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ __RPC__in BSTR Name) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Location( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Location) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsSaved( 
            /* [retval][out] */ __RPC__out PBOOL IsSaved) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mode( 
            /* [retval][out] */ __RPC__out PDOCUMENTMODE Mode) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Mode( 
            /* [in] */ DOCUMENTMODE Mode) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_RootNode( 
            /* [retval][out] */ __RPC__deref_out_opt PPNODE Node) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScopeNamespace( 
            /* [retval][out] */ __RPC__deref_out_opt PPSCOPENAMESPACE ScopeNamespace) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateProperties( 
            /* [retval][out] */ __RPC__deref_out_opt PPPROPERTIES Properties) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ __RPC__deref_out_opt PPAPPLICATION Application) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct DocumentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in Document * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in Document * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in Document * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in Document * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in Document * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in Document * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Document * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            __RPC__in Document * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            __RPC__in Document * This,
            /* [in] */ __RPC__in BSTR Filename);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            __RPC__in Document * This,
            /* [in] */ BOOL SaveChanges);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Views )( 
            __RPC__in Document * This,
            /* [retval][out] */ __RPC__deref_out_opt PPVIEWS Views);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SnapIns )( 
            __RPC__in Document * This,
            /* [retval][out] */ __RPC__deref_out_opt PPSNAPINS SnapIns);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveView )( 
            __RPC__in Document * This,
            /* [retval][out] */ __RPC__deref_out_opt PPVIEW View);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in Document * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Name);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in Document * This,
            /* [in] */ __RPC__in BSTR Name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Location )( 
            __RPC__in Document * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Location);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsSaved )( 
            __RPC__in Document * This,
            /* [retval][out] */ __RPC__out PBOOL IsSaved);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mode )( 
            __RPC__in Document * This,
            /* [retval][out] */ __RPC__out PDOCUMENTMODE Mode);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Mode )( 
            __RPC__in Document * This,
            /* [in] */ DOCUMENTMODE Mode);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RootNode )( 
            __RPC__in Document * This,
            /* [retval][out] */ __RPC__deref_out_opt PPNODE Node);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScopeNamespace )( 
            __RPC__in Document * This,
            /* [retval][out] */ __RPC__deref_out_opt PPSCOPENAMESPACE ScopeNamespace);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CreateProperties )( 
            __RPC__in Document * This,
            /* [retval][out] */ __RPC__deref_out_opt PPPROPERTIES Properties);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            __RPC__in Document * This,
            /* [retval][out] */ __RPC__deref_out_opt PPAPPLICATION Application);
        
        END_INTERFACE
    } DocumentVtbl;

    interface Document
    {
        CONST_VTBL struct DocumentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Document_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Document_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Document_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Document_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Document_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Document_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Document_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Document_Save(This)	\
    ( (This)->lpVtbl -> Save(This) ) 

#define Document_SaveAs(This,Filename)	\
    ( (This)->lpVtbl -> SaveAs(This,Filename) ) 

#define Document_Close(This,SaveChanges)	\
    ( (This)->lpVtbl -> Close(This,SaveChanges) ) 

#define Document_get_Views(This,Views)	\
    ( (This)->lpVtbl -> get_Views(This,Views) ) 

#define Document_get_SnapIns(This,SnapIns)	\
    ( (This)->lpVtbl -> get_SnapIns(This,SnapIns) ) 

#define Document_get_ActiveView(This,View)	\
    ( (This)->lpVtbl -> get_ActiveView(This,View) ) 

#define Document_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define Document_put_Name(This,Name)	\
    ( (This)->lpVtbl -> put_Name(This,Name) ) 

#define Document_get_Location(This,Location)	\
    ( (This)->lpVtbl -> get_Location(This,Location) ) 

#define Document_get_IsSaved(This,IsSaved)	\
    ( (This)->lpVtbl -> get_IsSaved(This,IsSaved) ) 

#define Document_get_Mode(This,Mode)	\
    ( (This)->lpVtbl -> get_Mode(This,Mode) ) 

#define Document_put_Mode(This,Mode)	\
    ( (This)->lpVtbl -> put_Mode(This,Mode) ) 

#define Document_get_RootNode(This,Node)	\
    ( (This)->lpVtbl -> get_RootNode(This,Node) ) 

#define Document_get_ScopeNamespace(This,ScopeNamespace)	\
    ( (This)->lpVtbl -> get_ScopeNamespace(This,ScopeNamespace) ) 

#define Document_CreateProperties(This,Properties)	\
    ( (This)->lpVtbl -> CreateProperties(This,Properties) ) 

#define Document_get_Application(This,Application)	\
    ( (This)->lpVtbl -> get_Application(This,Application) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Document_INTERFACE_DEFINED__ */


#ifndef __SnapIn_INTERFACE_DEFINED__
#define __SnapIn_INTERFACE_DEFINED__

/* interface SnapIn */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_SnapIn;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3BE910F6-3459-49C6-A1BB-41E6BE9DF3EA")
    SnapIn : public IDispatch
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Name) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Vendor( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Vendor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Version) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extensions( 
            /* [retval][out] */ __RPC__deref_out_opt PPEXTENSIONS Extensions) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SnapinCLSID( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR SnapinCLSID) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Properties( 
            /* [retval][out] */ __RPC__deref_out_opt PPPROPERTIES Properties) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EnableAllExtensions( 
            /* [in] */ BOOL Enable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SnapInVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in SnapIn * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in SnapIn * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in SnapIn * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in SnapIn * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in SnapIn * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in SnapIn * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SnapIn * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in SnapIn * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Vendor )( 
            __RPC__in SnapIn * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Vendor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            __RPC__in SnapIn * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Version);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extensions )( 
            __RPC__in SnapIn * This,
            /* [retval][out] */ __RPC__deref_out_opt PPEXTENSIONS Extensions);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SnapinCLSID )( 
            __RPC__in SnapIn * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR SnapinCLSID);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            __RPC__in SnapIn * This,
            /* [retval][out] */ __RPC__deref_out_opt PPPROPERTIES Properties);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EnableAllExtensions )( 
            __RPC__in SnapIn * This,
            /* [in] */ BOOL Enable);
        
        END_INTERFACE
    } SnapInVtbl;

    interface SnapIn
    {
        CONST_VTBL struct SnapInVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SnapIn_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SnapIn_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SnapIn_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SnapIn_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SnapIn_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SnapIn_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SnapIn_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SnapIn_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define SnapIn_get_Vendor(This,Vendor)	\
    ( (This)->lpVtbl -> get_Vendor(This,Vendor) ) 

#define SnapIn_get_Version(This,Version)	\
    ( (This)->lpVtbl -> get_Version(This,Version) ) 

#define SnapIn_get_Extensions(This,Extensions)	\
    ( (This)->lpVtbl -> get_Extensions(This,Extensions) ) 

#define SnapIn_get_SnapinCLSID(This,SnapinCLSID)	\
    ( (This)->lpVtbl -> get_SnapinCLSID(This,SnapinCLSID) ) 

#define SnapIn_get_Properties(This,Properties)	\
    ( (This)->lpVtbl -> get_Properties(This,Properties) ) 

#define SnapIn_EnableAllExtensions(This,Enable)	\
    ( (This)->lpVtbl -> EnableAllExtensions(This,Enable) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SnapIn_INTERFACE_DEFINED__ */


#ifndef __SnapIns_INTERFACE_DEFINED__
#define __SnapIns_INTERFACE_DEFINED__

/* interface SnapIns */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_SnapIns;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2EF3DE1D-B12A-49D1-92C5-0B00798768F1")
    SnapIns : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt PPSNAPIN SnapIn) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out PLONG Count) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ __RPC__in BSTR SnapinNameOrCLSID,
            /* [optional][in] */ VARIANT ParentSnapin,
            /* [optional][in] */ VARIANT Properties,
            /* [retval][out] */ __RPC__deref_out_opt PPSNAPIN SnapIn) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ __RPC__in_opt PSNAPIN SnapIn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SnapInsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in SnapIns * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in SnapIns * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in SnapIns * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in SnapIns * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in SnapIns * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in SnapIns * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            SnapIns * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in SnapIns * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            __RPC__in SnapIns * This,
            /* [in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt PPSNAPIN SnapIn);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in SnapIns * This,
            /* [retval][out] */ __RPC__out PLONG Count);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            __RPC__in SnapIns * This,
            /* [in] */ __RPC__in BSTR SnapinNameOrCLSID,
            /* [optional][in] */ VARIANT ParentSnapin,
            /* [optional][in] */ VARIANT Properties,
            /* [retval][out] */ __RPC__deref_out_opt PPSNAPIN SnapIn);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            __RPC__in SnapIns * This,
            /* [in] */ __RPC__in_opt PSNAPIN SnapIn);
        
        END_INTERFACE
    } SnapInsVtbl;

    interface SnapIns
    {
        CONST_VTBL struct SnapInsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define SnapIns_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define SnapIns_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define SnapIns_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define SnapIns_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define SnapIns_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define SnapIns_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define SnapIns_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define SnapIns_get__NewEnum(This,retval)	\
    ( (This)->lpVtbl -> get__NewEnum(This,retval) ) 

#define SnapIns_Item(This,Index,SnapIn)	\
    ( (This)->lpVtbl -> Item(This,Index,SnapIn) ) 

#define SnapIns_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define SnapIns_Add(This,SnapinNameOrCLSID,ParentSnapin,Properties,SnapIn)	\
    ( (This)->lpVtbl -> Add(This,SnapinNameOrCLSID,ParentSnapin,Properties,SnapIn) ) 

#define SnapIns_Remove(This,SnapIn)	\
    ( (This)->lpVtbl -> Remove(This,SnapIn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __SnapIns_INTERFACE_DEFINED__ */


#ifndef __Extension_INTERFACE_DEFINED__
#define __Extension_INTERFACE_DEFINED__

/* interface Extension */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_Extension;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AD4D6CA6-912F-409b-A26E-7FD234AEF542")
    Extension : public IDispatch
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Name) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Vendor( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Vendor) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Version) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Extensions( 
            /* [retval][out] */ __RPC__deref_out_opt PPEXTENSIONS Extensions) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SnapinCLSID( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR SnapinCLSID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE EnableAllExtensions( 
            /* [in] */ BOOL Enable) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Enable( 
            /* [in] */ BOOL Enable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ExtensionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in Extension * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in Extension * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in Extension * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in Extension * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in Extension * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in Extension * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Extension * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in Extension * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Vendor )( 
            __RPC__in Extension * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Vendor);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            __RPC__in Extension * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Version);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Extensions )( 
            __RPC__in Extension * This,
            /* [retval][out] */ __RPC__deref_out_opt PPEXTENSIONS Extensions);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SnapinCLSID )( 
            __RPC__in Extension * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR SnapinCLSID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *EnableAllExtensions )( 
            __RPC__in Extension * This,
            /* [in] */ BOOL Enable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Enable )( 
            __RPC__in Extension * This,
            /* [in] */ BOOL Enable);
        
        END_INTERFACE
    } ExtensionVtbl;

    interface Extension
    {
        CONST_VTBL struct ExtensionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Extension_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Extension_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Extension_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Extension_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Extension_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Extension_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Extension_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Extension_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#define Extension_get_Vendor(This,Vendor)	\
    ( (This)->lpVtbl -> get_Vendor(This,Vendor) ) 

#define Extension_get_Version(This,Version)	\
    ( (This)->lpVtbl -> get_Version(This,Version) ) 

#define Extension_get_Extensions(This,Extensions)	\
    ( (This)->lpVtbl -> get_Extensions(This,Extensions) ) 

#define Extension_get_SnapinCLSID(This,SnapinCLSID)	\
    ( (This)->lpVtbl -> get_SnapinCLSID(This,SnapinCLSID) ) 

#define Extension_EnableAllExtensions(This,Enable)	\
    ( (This)->lpVtbl -> EnableAllExtensions(This,Enable) ) 

#define Extension_Enable(This,Enable)	\
    ( (This)->lpVtbl -> Enable(This,Enable) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Extension_INTERFACE_DEFINED__ */


#ifndef __Extensions_INTERFACE_DEFINED__
#define __Extensions_INTERFACE_DEFINED__

/* interface Extensions */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_Extensions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("82DBEA43-8CA4-44bc-A2CA-D18741059EC8")
    Extensions : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt PPEXTENSION Extension) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out PLONG Count) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ExtensionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in Extensions * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in Extensions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in Extensions * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in Extensions * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in Extensions * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in Extensions * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Extensions * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in Extensions * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            __RPC__in Extensions * This,
            /* [in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt PPEXTENSION Extension);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in Extensions * This,
            /* [retval][out] */ __RPC__out PLONG Count);
        
        END_INTERFACE
    } ExtensionsVtbl;

    interface Extensions
    {
        CONST_VTBL struct ExtensionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Extensions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Extensions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Extensions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Extensions_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Extensions_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Extensions_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Extensions_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Extensions_get__NewEnum(This,retval)	\
    ( (This)->lpVtbl -> get__NewEnum(This,retval) ) 

#define Extensions_Item(This,Index,Extension)	\
    ( (This)->lpVtbl -> Item(This,Index,Extension) ) 

#define Extensions_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Extensions_INTERFACE_DEFINED__ */


#ifndef __Columns_INTERFACE_DEFINED__
#define __Columns_INTERFACE_DEFINED__

/* interface Columns */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_Columns;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("383D4D97-FC44-478B-B139-6323DC48611C")
    Columns : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt PPCOLUMN Column) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out PLONG Count) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ColumnsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in Columns * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in Columns * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in Columns * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in Columns * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in Columns * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in Columns * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Columns * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            __RPC__in Columns * This,
            /* [in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt PPCOLUMN Column);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in Columns * This,
            /* [retval][out] */ __RPC__out PLONG Count);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in Columns * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval);
        
        END_INTERFACE
    } ColumnsVtbl;

    interface Columns
    {
        CONST_VTBL struct ColumnsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Columns_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Columns_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Columns_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Columns_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Columns_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Columns_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Columns_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Columns_Item(This,Index,Column)	\
    ( (This)->lpVtbl -> Item(This,Index,Column) ) 

#define Columns_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Columns_get__NewEnum(This,retval)	\
    ( (This)->lpVtbl -> get__NewEnum(This,retval) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Columns_INTERFACE_DEFINED__ */


#ifndef __Column_INTERFACE_DEFINED__
#define __Column_INTERFACE_DEFINED__

/* interface Column */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 

typedef 
enum ColumnSortOrder
    {	SortOrder_Ascending	= 0,
	SortOrder_Descending	= ( SortOrder_Ascending + 1 ) 
    } 	_ColumnSortOrder;

typedef enum ColumnSortOrder COLUMNSORTORDER;


EXTERN_C const IID IID_Column;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FD1C5F63-2B16-4D06-9AB3-F45350B940AB")
    Column : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ __RPC__out PLONG Width) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [in] */ long Width) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayPosition( 
            /* [retval][out] */ __RPC__out PLONG DisplayPosition) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayPosition( 
            /* [in] */ long Index) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Hidden( 
            /* [retval][out] */ __RPC__out PBOOL Hidden) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Hidden( 
            /* [in] */ BOOL Hidden) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetAsSortColumn( 
            /* [in] */ COLUMNSORTORDER SortOrder) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsSortColumn( 
            /* [retval][out] */ __RPC__out PBOOL IsSortColumn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ColumnVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in Column * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in Column * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in Column * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in Column * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in Column * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in Column * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Column * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Name )( 
            __RPC__in Column * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *Name);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            __RPC__in Column * This,
            /* [retval][out] */ __RPC__out PLONG Width);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            __RPC__in Column * This,
            /* [in] */ long Width);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayPosition )( 
            __RPC__in Column * This,
            /* [retval][out] */ __RPC__out PLONG DisplayPosition);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayPosition )( 
            __RPC__in Column * This,
            /* [in] */ long Index);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hidden )( 
            __RPC__in Column * This,
            /* [retval][out] */ __RPC__out PBOOL Hidden);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Hidden )( 
            __RPC__in Column * This,
            /* [in] */ BOOL Hidden);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetAsSortColumn )( 
            __RPC__in Column * This,
            /* [in] */ COLUMNSORTORDER SortOrder);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsSortColumn )( 
            __RPC__in Column * This,
            /* [retval][out] */ __RPC__out PBOOL IsSortColumn);
        
        END_INTERFACE
    } ColumnVtbl;

    interface Column
    {
        CONST_VTBL struct ColumnVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Column_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Column_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Column_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Column_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Column_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Column_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Column_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Column_Name(This,Name)	\
    ( (This)->lpVtbl -> Name(This,Name) ) 

#define Column_get_Width(This,Width)	\
    ( (This)->lpVtbl -> get_Width(This,Width) ) 

#define Column_put_Width(This,Width)	\
    ( (This)->lpVtbl -> put_Width(This,Width) ) 

#define Column_get_DisplayPosition(This,DisplayPosition)	\
    ( (This)->lpVtbl -> get_DisplayPosition(This,DisplayPosition) ) 

#define Column_put_DisplayPosition(This,Index)	\
    ( (This)->lpVtbl -> put_DisplayPosition(This,Index) ) 

#define Column_get_Hidden(This,Hidden)	\
    ( (This)->lpVtbl -> get_Hidden(This,Hidden) ) 

#define Column_put_Hidden(This,Hidden)	\
    ( (This)->lpVtbl -> put_Hidden(This,Hidden) ) 

#define Column_SetAsSortColumn(This,SortOrder)	\
    ( (This)->lpVtbl -> SetAsSortColumn(This,SortOrder) ) 

#define Column_IsSortColumn(This,IsSortColumn)	\
    ( (This)->lpVtbl -> IsSortColumn(This,IsSortColumn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Column_INTERFACE_DEFINED__ */


#ifndef __Views_INTERFACE_DEFINED__
#define __Views_INTERFACE_DEFINED__

/* interface Views */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_Views;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D6B8C29D-A1FF-4D72-AAB0-E381E9B9338D")
    Views : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt PPVIEW View) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out PLONG Count) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ __RPC__in_opt PNODE Node,
            /* [defaultvalue][in] */ VIEWOPTIONS viewOptions = ViewOption_Default) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ViewsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in Views * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in Views * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in Views * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in Views * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in Views * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in Views * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Views * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            __RPC__in Views * This,
            /* [in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt PPVIEW View);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in Views * This,
            /* [retval][out] */ __RPC__out PLONG Count);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            __RPC__in Views * This,
            /* [in] */ __RPC__in_opt PNODE Node,
            /* [defaultvalue][in] */ VIEWOPTIONS viewOptions);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in Views * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval);
        
        END_INTERFACE
    } ViewsVtbl;

    interface Views
    {
        CONST_VTBL struct ViewsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Views_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Views_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Views_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Views_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Views_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Views_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Views_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Views_Item(This,Index,View)	\
    ( (This)->lpVtbl -> Item(This,Index,View) ) 

#define Views_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Views_Add(This,Node,viewOptions)	\
    ( (This)->lpVtbl -> Add(This,Node,viewOptions) ) 

#define Views_get__NewEnum(This,retval)	\
    ( (This)->lpVtbl -> get__NewEnum(This,retval) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Views_INTERFACE_DEFINED__ */


#ifndef __View_INTERFACE_DEFINED__
#define __View_INTERFACE_DEFINED__

/* interface View */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_View;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6EFC2DA2-B38C-457E-9ABB-ED2D189B8C38")
    View : public IDispatch
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveScopeNode( 
            /* [retval][out] */ __RPC__deref_out_opt PPNODE Node) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ActiveScopeNode( 
            /* [in] */ __RPC__in_opt PNODE Node) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [retval][out] */ __RPC__deref_out_opt PPNODES Nodes) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ListItems( 
            /* [retval][out] */ __RPC__deref_out_opt PPNODES Nodes) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SnapinScopeObject( 
            /* [optional][in] */ VARIANT ScopeNode,
            /* [retval][out] */ __RPC__deref_out_opt PPDISPATCH ScopeNodeObject) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SnapinSelectionObject( 
            /* [retval][out] */ __RPC__deref_out_opt PPDISPATCH SelectionObject) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Is( 
            /* [in] */ __RPC__in_opt PVIEW View,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *TheSame) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Document( 
            /* [retval][out] */ __RPC__deref_out_opt PPDOCUMENT Document) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SelectAll( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Select( 
            /* [in] */ __RPC__in_opt PNODE Node) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Deselect( 
            /* [in] */ __RPC__in_opt PNODE Node) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsSelected( 
            /* [in] */ __RPC__in_opt PNODE Node,
            /* [retval][out] */ __RPC__out PBOOL IsSelected) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DisplayScopeNodePropertySheet( 
            /* [optional][in] */ VARIANT ScopeNode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DisplaySelectionPropertySheet( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CopyScopeNode( 
            /* [optional][in] */ VARIANT ScopeNode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CopySelection( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteScopeNode( 
            /* [optional][in] */ VARIANT ScopeNode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteSelection( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RenameScopeNode( 
            /* [in] */ __RPC__in BSTR NewName,
            /* [optional][in] */ VARIANT ScopeNode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RenameSelectedItem( 
            /* [in] */ __RPC__in BSTR NewName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScopeNodeContextMenu( 
            /* [optional][in] */ VARIANT ScopeNode,
            /* [retval][out] */ __RPC__deref_out_opt PPCONTEXTMENU ContextMenu) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_SelectionContextMenu( 
            /* [retval][out] */ __RPC__deref_out_opt PPCONTEXTMENU ContextMenu) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RefreshScopeNode( 
            /* [optional][in] */ VARIANT ScopeNode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RefreshSelection( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExecuteSelectionMenuItem( 
            /* [in] */ __RPC__in BSTR MenuItemPath) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExecuteScopeNodeMenuItem( 
            /* [in] */ __RPC__in BSTR MenuItemPath,
            /* [optional][in] */ VARIANT ScopeNode) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExecuteShellCommand( 
            /* [in] */ __RPC__in BSTR Command,
            /* [in] */ __RPC__in BSTR Directory,
            /* [in] */ __RPC__in BSTR Parameters,
            /* [in] */ __RPC__in BSTR WindowState) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Frame( 
            /* [retval][out] */ __RPC__deref_out_opt PPFRAME Frame) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScopeTreeVisible( 
            /* [retval][out] */ __RPC__out PBOOL Visible) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScopeTreeVisible( 
            /* [in] */ BOOL Visible) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Back( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Forward( void) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_StatusBarText( 
            /* [in] */ __RPC__in BSTR StatusBarText) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Memento( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Memento) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ViewMemento( 
            /* [in] */ __RPC__in BSTR Memento) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Columns( 
            /* [retval][out] */ __RPC__deref_out_opt PPCOLUMNS Columns) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_CellContents( 
            /* [in] */ __RPC__in_opt PNODE Node,
            /* [in] */ long Column,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR CellContents) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExportList( 
            /* [in] */ __RPC__in BSTR File,
            /* [defaultvalue][in] */ EXPORTLISTOPTIONS exportoptions = ExportListOptions_Default) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ListViewMode( 
            /* [retval][out] */ __RPC__out PLISTVIEWMODE Mode) = 0;
        
        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ListViewMode( 
            /* [in] */ LISTVIEWMODE mode) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ControlObject( 
            /* [retval][out] */ __RPC__deref_out_opt PPDISPATCH Control) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in View * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in View * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in View * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in View * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            View * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveScopeNode )( 
            __RPC__in View * This,
            /* [retval][out] */ __RPC__deref_out_opt PPNODE Node);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ActiveScopeNode )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in_opt PNODE Node);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            __RPC__in View * This,
            /* [retval][out] */ __RPC__deref_out_opt PPNODES Nodes);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ListItems )( 
            __RPC__in View * This,
            /* [retval][out] */ __RPC__deref_out_opt PPNODES Nodes);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SnapinScopeObject )( 
            __RPC__in View * This,
            /* [optional][in] */ VARIANT ScopeNode,
            /* [retval][out] */ __RPC__deref_out_opt PPDISPATCH ScopeNodeObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SnapinSelectionObject )( 
            __RPC__in View * This,
            /* [retval][out] */ __RPC__deref_out_opt PPDISPATCH SelectionObject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Is )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in_opt PVIEW View,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *TheSame);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Document )( 
            __RPC__in View * This,
            /* [retval][out] */ __RPC__deref_out_opt PPDOCUMENT Document);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SelectAll )( 
            __RPC__in View * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Select )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in_opt PNODE Node);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Deselect )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in_opt PNODE Node);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsSelected )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in_opt PNODE Node,
            /* [retval][out] */ __RPC__out PBOOL IsSelected);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DisplayScopeNodePropertySheet )( 
            __RPC__in View * This,
            /* [optional][in] */ VARIANT ScopeNode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DisplaySelectionPropertySheet )( 
            __RPC__in View * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopyScopeNode )( 
            __RPC__in View * This,
            /* [optional][in] */ VARIANT ScopeNode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CopySelection )( 
            __RPC__in View * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteScopeNode )( 
            __RPC__in View * This,
            /* [optional][in] */ VARIANT ScopeNode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteSelection )( 
            __RPC__in View * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RenameScopeNode )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in BSTR NewName,
            /* [optional][in] */ VARIANT ScopeNode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RenameSelectedItem )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in BSTR NewName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScopeNodeContextMenu )( 
            __RPC__in View * This,
            /* [optional][in] */ VARIANT ScopeNode,
            /* [retval][out] */ __RPC__deref_out_opt PPCONTEXTMENU ContextMenu);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SelectionContextMenu )( 
            __RPC__in View * This,
            /* [retval][out] */ __RPC__deref_out_opt PPCONTEXTMENU ContextMenu);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RefreshScopeNode )( 
            __RPC__in View * This,
            /* [optional][in] */ VARIANT ScopeNode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RefreshSelection )( 
            __RPC__in View * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ExecuteSelectionMenuItem )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in BSTR MenuItemPath);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ExecuteScopeNodeMenuItem )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in BSTR MenuItemPath,
            /* [optional][in] */ VARIANT ScopeNode);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ExecuteShellCommand )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in BSTR Command,
            /* [in] */ __RPC__in BSTR Directory,
            /* [in] */ __RPC__in BSTR Parameters,
            /* [in] */ __RPC__in BSTR WindowState);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Frame )( 
            __RPC__in View * This,
            /* [retval][out] */ __RPC__deref_out_opt PPFRAME Frame);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            __RPC__in View * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScopeTreeVisible )( 
            __RPC__in View * This,
            /* [retval][out] */ __RPC__out PBOOL Visible);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScopeTreeVisible )( 
            __RPC__in View * This,
            /* [in] */ BOOL Visible);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Back )( 
            __RPC__in View * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Forward )( 
            __RPC__in View * This);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StatusBarText )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in BSTR StatusBarText);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Memento )( 
            __RPC__in View * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Memento);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ViewMemento )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in BSTR Memento);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Columns )( 
            __RPC__in View * This,
            /* [retval][out] */ __RPC__deref_out_opt PPCOLUMNS Columns);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CellContents )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in_opt PNODE Node,
            /* [in] */ long Column,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR CellContents);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ExportList )( 
            __RPC__in View * This,
            /* [in] */ __RPC__in BSTR File,
            /* [defaultvalue][in] */ EXPORTLISTOPTIONS exportoptions);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ListViewMode )( 
            __RPC__in View * This,
            /* [retval][out] */ __RPC__out PLISTVIEWMODE Mode);
        
        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ListViewMode )( 
            __RPC__in View * This,
            /* [in] */ LISTVIEWMODE mode);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ControlObject )( 
            __RPC__in View * This,
            /* [retval][out] */ __RPC__deref_out_opt PPDISPATCH Control);
        
        END_INTERFACE
    } ViewVtbl;

    interface View
    {
        CONST_VTBL struct ViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define View_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define View_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define View_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define View_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define View_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define View_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define View_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define View_get_ActiveScopeNode(This,Node)	\
    ( (This)->lpVtbl -> get_ActiveScopeNode(This,Node) ) 

#define View_put_ActiveScopeNode(This,Node)	\
    ( (This)->lpVtbl -> put_ActiveScopeNode(This,Node) ) 

#define View_get_Selection(This,Nodes)	\
    ( (This)->lpVtbl -> get_Selection(This,Nodes) ) 

#define View_get_ListItems(This,Nodes)	\
    ( (This)->lpVtbl -> get_ListItems(This,Nodes) ) 

#define View_SnapinScopeObject(This,ScopeNode,ScopeNodeObject)	\
    ( (This)->lpVtbl -> SnapinScopeObject(This,ScopeNode,ScopeNodeObject) ) 

#define View_SnapinSelectionObject(This,SelectionObject)	\
    ( (This)->lpVtbl -> SnapinSelectionObject(This,SelectionObject) ) 

#define View_Is(This,View,TheSame)	\
    ( (This)->lpVtbl -> Is(This,View,TheSame) ) 

#define View_get_Document(This,Document)	\
    ( (This)->lpVtbl -> get_Document(This,Document) ) 

#define View_SelectAll(This)	\
    ( (This)->lpVtbl -> SelectAll(This) ) 

#define View_Select(This,Node)	\
    ( (This)->lpVtbl -> Select(This,Node) ) 

#define View_Deselect(This,Node)	\
    ( (This)->lpVtbl -> Deselect(This,Node) ) 

#define View_IsSelected(This,Node,IsSelected)	\
    ( (This)->lpVtbl -> IsSelected(This,Node,IsSelected) ) 

#define View_DisplayScopeNodePropertySheet(This,ScopeNode)	\
    ( (This)->lpVtbl -> DisplayScopeNodePropertySheet(This,ScopeNode) ) 

#define View_DisplaySelectionPropertySheet(This)	\
    ( (This)->lpVtbl -> DisplaySelectionPropertySheet(This) ) 

#define View_CopyScopeNode(This,ScopeNode)	\
    ( (This)->lpVtbl -> CopyScopeNode(This,ScopeNode) ) 

#define View_CopySelection(This)	\
    ( (This)->lpVtbl -> CopySelection(This) ) 

#define View_DeleteScopeNode(This,ScopeNode)	\
    ( (This)->lpVtbl -> DeleteScopeNode(This,ScopeNode) ) 

#define View_DeleteSelection(This)	\
    ( (This)->lpVtbl -> DeleteSelection(This) ) 

#define View_RenameScopeNode(This,NewName,ScopeNode)	\
    ( (This)->lpVtbl -> RenameScopeNode(This,NewName,ScopeNode) ) 

#define View_RenameSelectedItem(This,NewName)	\
    ( (This)->lpVtbl -> RenameSelectedItem(This,NewName) ) 

#define View_get_ScopeNodeContextMenu(This,ScopeNode,ContextMenu)	\
    ( (This)->lpVtbl -> get_ScopeNodeContextMenu(This,ScopeNode,ContextMenu) ) 

#define View_get_SelectionContextMenu(This,ContextMenu)	\
    ( (This)->lpVtbl -> get_SelectionContextMenu(This,ContextMenu) ) 

#define View_RefreshScopeNode(This,ScopeNode)	\
    ( (This)->lpVtbl -> RefreshScopeNode(This,ScopeNode) ) 

#define View_RefreshSelection(This)	\
    ( (This)->lpVtbl -> RefreshSelection(This) ) 

#define View_ExecuteSelectionMenuItem(This,MenuItemPath)	\
    ( (This)->lpVtbl -> ExecuteSelectionMenuItem(This,MenuItemPath) ) 

#define View_ExecuteScopeNodeMenuItem(This,MenuItemPath,ScopeNode)	\
    ( (This)->lpVtbl -> ExecuteScopeNodeMenuItem(This,MenuItemPath,ScopeNode) ) 

#define View_ExecuteShellCommand(This,Command,Directory,Parameters,WindowState)	\
    ( (This)->lpVtbl -> ExecuteShellCommand(This,Command,Directory,Parameters,WindowState) ) 

#define View_get_Frame(This,Frame)	\
    ( (This)->lpVtbl -> get_Frame(This,Frame) ) 

#define View_Close(This)	\
    ( (This)->lpVtbl -> Close(This) ) 

#define View_get_ScopeTreeVisible(This,Visible)	\
    ( (This)->lpVtbl -> get_ScopeTreeVisible(This,Visible) ) 

#define View_put_ScopeTreeVisible(This,Visible)	\
    ( (This)->lpVtbl -> put_ScopeTreeVisible(This,Visible) ) 

#define View_Back(This)	\
    ( (This)->lpVtbl -> Back(This) ) 

#define View_Forward(This)	\
    ( (This)->lpVtbl -> Forward(This) ) 

#define View_put_StatusBarText(This,StatusBarText)	\
    ( (This)->lpVtbl -> put_StatusBarText(This,StatusBarText) ) 

#define View_get_Memento(This,Memento)	\
    ( (This)->lpVtbl -> get_Memento(This,Memento) ) 

#define View_ViewMemento(This,Memento)	\
    ( (This)->lpVtbl -> ViewMemento(This,Memento) ) 

#define View_get_Columns(This,Columns)	\
    ( (This)->lpVtbl -> get_Columns(This,Columns) ) 

#define View_get_CellContents(This,Node,Column,CellContents)	\
    ( (This)->lpVtbl -> get_CellContents(This,Node,Column,CellContents) ) 

#define View_ExportList(This,File,exportoptions)	\
    ( (This)->lpVtbl -> ExportList(This,File,exportoptions) ) 

#define View_get_ListViewMode(This,Mode)	\
    ( (This)->lpVtbl -> get_ListViewMode(This,Mode) ) 

#define View_put_ListViewMode(This,mode)	\
    ( (This)->lpVtbl -> put_ListViewMode(This,mode) ) 

#define View_get_ControlObject(This,Control)	\
    ( (This)->lpVtbl -> get_ControlObject(This,Control) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __View_INTERFACE_DEFINED__ */


#ifndef __Nodes_INTERFACE_DEFINED__
#define __Nodes_INTERFACE_DEFINED__

/* interface Nodes */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_Nodes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("313B01DF-B22F-4D42-B1B8-483CDCF51D35")
    Nodes : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt PPNODE Node) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out PLONG Count) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct NodesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in Nodes * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in Nodes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in Nodes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in Nodes * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in Nodes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in Nodes * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Nodes * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in Nodes * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            __RPC__in Nodes * This,
            /* [in] */ long Index,
            /* [retval][out] */ __RPC__deref_out_opt PPNODE Node);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in Nodes * This,
            /* [retval][out] */ __RPC__out PLONG Count);
        
        END_INTERFACE
    } NodesVtbl;

    interface Nodes
    {
        CONST_VTBL struct NodesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Nodes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Nodes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Nodes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Nodes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Nodes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Nodes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Nodes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Nodes_get__NewEnum(This,retval)	\
    ( (This)->lpVtbl -> get__NewEnum(This,retval) ) 

#define Nodes_Item(This,Index,Node)	\
    ( (This)->lpVtbl -> Item(This,Index,Node) ) 

#define Nodes_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Nodes_INTERFACE_DEFINED__ */


#ifndef __ContextMenu_INTERFACE_DEFINED__
#define __ContextMenu_INTERFACE_DEFINED__

/* interface ContextMenu */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_ContextMenu;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DAB39CE0-25E6-4E07-8362-BA9C95706545")
    ContextMenu : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT IndexOrPath,
            /* [retval][out] */ __RPC__deref_out_opt PPMENUITEM MenuItem) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out PLONG Count) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ContextMenuVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ContextMenu * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ContextMenu * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ContextMenu * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ContextMenu * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ContextMenu * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ContextMenu * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ContextMenu * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in ContextMenu * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in ContextMenu * This,
            /* [in] */ VARIANT IndexOrPath,
            /* [retval][out] */ __RPC__deref_out_opt PPMENUITEM MenuItem);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in ContextMenu * This,
            /* [retval][out] */ __RPC__out PLONG Count);
        
        END_INTERFACE
    } ContextMenuVtbl;

    interface ContextMenu
    {
        CONST_VTBL struct ContextMenuVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ContextMenu_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ContextMenu_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ContextMenu_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ContextMenu_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ContextMenu_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ContextMenu_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ContextMenu_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ContextMenu_get__NewEnum(This,retval)	\
    ( (This)->lpVtbl -> get__NewEnum(This,retval) ) 

#define ContextMenu_get_Item(This,IndexOrPath,MenuItem)	\
    ( (This)->lpVtbl -> get_Item(This,IndexOrPath,MenuItem) ) 

#define ContextMenu_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ContextMenu_INTERFACE_DEFINED__ */


#ifndef __MenuItem_INTERFACE_DEFINED__
#define __MenuItem_INTERFACE_DEFINED__

/* interface MenuItem */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_MenuItem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0178FAD1-B361-4B27-96AD-67C57EBF2E1D")
    MenuItem : public IDispatch
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayName( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR DisplayName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LanguageIndependentName( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR LanguageIndependentName) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Path) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_LanguageIndependentPath( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR LanguageIndependentPath) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Execute( void) = 0;
        
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ __RPC__out PBOOL Enabled) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct MenuItemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in MenuItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in MenuItem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in MenuItem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in MenuItem * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in MenuItem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in MenuItem * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            MenuItem * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayName )( 
            __RPC__in MenuItem * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR DisplayName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LanguageIndependentName )( 
            __RPC__in MenuItem * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR LanguageIndependentName);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            __RPC__in MenuItem * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Path);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LanguageIndependentPath )( 
            __RPC__in MenuItem * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR LanguageIndependentPath);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            __RPC__in MenuItem * This);
        
        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            __RPC__in MenuItem * This,
            /* [retval][out] */ __RPC__out PBOOL Enabled);
        
        END_INTERFACE
    } MenuItemVtbl;

    interface MenuItem
    {
        CONST_VTBL struct MenuItemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define MenuItem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define MenuItem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define MenuItem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define MenuItem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define MenuItem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define MenuItem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define MenuItem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define MenuItem_get_DisplayName(This,DisplayName)	\
    ( (This)->lpVtbl -> get_DisplayName(This,DisplayName) ) 

#define MenuItem_get_LanguageIndependentName(This,LanguageIndependentName)	\
    ( (This)->lpVtbl -> get_LanguageIndependentName(This,LanguageIndependentName) ) 

#define MenuItem_get_Path(This,Path)	\
    ( (This)->lpVtbl -> get_Path(This,Path) ) 

#define MenuItem_get_LanguageIndependentPath(This,LanguageIndependentPath)	\
    ( (This)->lpVtbl -> get_LanguageIndependentPath(This,LanguageIndependentPath) ) 

#define MenuItem_Execute(This)	\
    ( (This)->lpVtbl -> Execute(This) ) 

#define MenuItem_get_Enabled(This,Enabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,Enabled) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __MenuItem_INTERFACE_DEFINED__ */


#ifndef __Properties_INTERFACE_DEFINED__
#define __Properties_INTERFACE_DEFINED__

/* interface Properties */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_Properties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2886ABC2-A425-42b2-91C6-E25C0E04581C")
    Properties : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt PPPROPERTY Property) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out PLONG Count) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ __RPC__in BSTR Name) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct PropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in Properties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in Properties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in Properties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in Properties * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in Properties * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in Properties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Properties * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in Properties * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **retval);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Item )( 
            __RPC__in Properties * This,
            /* [in] */ __RPC__in BSTR Name,
            /* [retval][out] */ __RPC__deref_out_opt PPPROPERTY Property);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in Properties * This,
            /* [retval][out] */ __RPC__out PLONG Count);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            __RPC__in Properties * This,
            /* [in] */ __RPC__in BSTR Name);
        
        END_INTERFACE
    } PropertiesVtbl;

    interface Properties
    {
        CONST_VTBL struct PropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Properties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Properties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Properties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Properties_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Properties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Properties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Properties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Properties_get__NewEnum(This,retval)	\
    ( (This)->lpVtbl -> get__NewEnum(This,retval) ) 

#define Properties_Item(This,Name,Property)	\
    ( (This)->lpVtbl -> Item(This,Name,Property) ) 

#define Properties_get_Count(This,Count)	\
    ( (This)->lpVtbl -> get_Count(This,Count) ) 

#define Properties_Remove(This,Name)	\
    ( (This)->lpVtbl -> Remove(This,Name) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Properties_INTERFACE_DEFINED__ */


#ifndef __Property_INTERFACE_DEFINED__
#define __Property_INTERFACE_DEFINED__

/* interface Property */
/* [object][helpstring][dual][uuid][nonextensible][dual][oleautomation] */ 


EXTERN_C const IID IID_Property;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4600C3A5-E301-41d8-B6D0-EF2E4212E0CA")
    Property : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ __RPC__out PVARIANT Value) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT Value) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Name) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct PropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in Property * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in Property * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in Property * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in Property * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in Property * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in Property * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Property * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in Property * This,
            /* [retval][out] */ __RPC__out PVARIANT Value);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in Property * This,
            /* [in] */ VARIANT Value);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in Property * This,
            /* [retval][out] */ __RPC__deref_out_opt PBSTR Name);
        
        END_INTERFACE
    } PropertyVtbl;

    interface Property
    {
        CONST_VTBL struct PropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Property_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Property_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Property_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Property_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Property_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Property_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Property_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Property_get_Value(This,Value)	\
    ( (This)->lpVtbl -> get_Value(This,Value) ) 

#define Property_put_Value(This,Value)	\
    ( (This)->lpVtbl -> put_Value(This,Value) ) 

#define Property_get_Name(This,Name)	\
    ( (This)->lpVtbl -> get_Name(This,Name) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Property_INTERFACE_DEFINED__ */

#endif /* __MMC20_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_mmcobj_0001_0042 */
/* [local] */ 

#endif // MMC_VER >= 0x0200


extern RPC_IF_HANDLE __MIDL_itf_mmcobj_0001_0042_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mmcobj_0001_0042_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  VARIANT_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

unsigned long             __RPC_USER  VARIANT_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree64(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\MLang.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mlang.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __mlang_h__
#define __mlang_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMLangStringBufW_FWD_DEFINED__
#define __IMLangStringBufW_FWD_DEFINED__
typedef interface IMLangStringBufW IMLangStringBufW;
#endif 	/* __IMLangStringBufW_FWD_DEFINED__ */


#ifndef __IMLangStringBufA_FWD_DEFINED__
#define __IMLangStringBufA_FWD_DEFINED__
typedef interface IMLangStringBufA IMLangStringBufA;
#endif 	/* __IMLangStringBufA_FWD_DEFINED__ */


#ifndef __IMLangString_FWD_DEFINED__
#define __IMLangString_FWD_DEFINED__
typedef interface IMLangString IMLangString;
#endif 	/* __IMLangString_FWD_DEFINED__ */


#ifndef __IMLangStringWStr_FWD_DEFINED__
#define __IMLangStringWStr_FWD_DEFINED__
typedef interface IMLangStringWStr IMLangStringWStr;
#endif 	/* __IMLangStringWStr_FWD_DEFINED__ */


#ifndef __IMLangStringAStr_FWD_DEFINED__
#define __IMLangStringAStr_FWD_DEFINED__
typedef interface IMLangStringAStr IMLangStringAStr;
#endif 	/* __IMLangStringAStr_FWD_DEFINED__ */


#ifndef __CMLangString_FWD_DEFINED__
#define __CMLangString_FWD_DEFINED__

#ifdef __cplusplus
typedef class CMLangString CMLangString;
#else
typedef struct CMLangString CMLangString;
#endif /* __cplusplus */

#endif 	/* __CMLangString_FWD_DEFINED__ */


#ifndef __IMLangLineBreakConsole_FWD_DEFINED__
#define __IMLangLineBreakConsole_FWD_DEFINED__
typedef interface IMLangLineBreakConsole IMLangLineBreakConsole;
#endif 	/* __IMLangLineBreakConsole_FWD_DEFINED__ */


#ifndef __IEnumCodePage_FWD_DEFINED__
#define __IEnumCodePage_FWD_DEFINED__
typedef interface IEnumCodePage IEnumCodePage;
#endif 	/* __IEnumCodePage_FWD_DEFINED__ */


#ifndef __IEnumRfc1766_FWD_DEFINED__
#define __IEnumRfc1766_FWD_DEFINED__
typedef interface IEnumRfc1766 IEnumRfc1766;
#endif 	/* __IEnumRfc1766_FWD_DEFINED__ */


#ifndef __IEnumScript_FWD_DEFINED__
#define __IEnumScript_FWD_DEFINED__
typedef interface IEnumScript IEnumScript;
#endif 	/* __IEnumScript_FWD_DEFINED__ */


#ifndef __IMLangConvertCharset_FWD_DEFINED__
#define __IMLangConvertCharset_FWD_DEFINED__
typedef interface IMLangConvertCharset IMLangConvertCharset;
#endif 	/* __IMLangConvertCharset_FWD_DEFINED__ */


#ifndef __CMLangConvertCharset_FWD_DEFINED__
#define __CMLangConvertCharset_FWD_DEFINED__

#ifdef __cplusplus
typedef class CMLangConvertCharset CMLangConvertCharset;
#else
typedef struct CMLangConvertCharset CMLangConvertCharset;
#endif /* __cplusplus */

#endif 	/* __CMLangConvertCharset_FWD_DEFINED__ */


#ifndef __IMultiLanguage_FWD_DEFINED__
#define __IMultiLanguage_FWD_DEFINED__
typedef interface IMultiLanguage IMultiLanguage;
#endif 	/* __IMultiLanguage_FWD_DEFINED__ */


#ifndef __IMultiLanguage2_FWD_DEFINED__
#define __IMultiLanguage2_FWD_DEFINED__
typedef interface IMultiLanguage2 IMultiLanguage2;
#endif 	/* __IMultiLanguage2_FWD_DEFINED__ */


#ifndef __IMLangCodePages_FWD_DEFINED__
#define __IMLangCodePages_FWD_DEFINED__
typedef interface IMLangCodePages IMLangCodePages;
#endif 	/* __IMLangCodePages_FWD_DEFINED__ */


#ifndef __IMLangFontLink_FWD_DEFINED__
#define __IMLangFontLink_FWD_DEFINED__
typedef interface IMLangFontLink IMLangFontLink;
#endif 	/* __IMLangFontLink_FWD_DEFINED__ */


#ifndef __IMLangFontLink2_FWD_DEFINED__
#define __IMLangFontLink2_FWD_DEFINED__
typedef interface IMLangFontLink2 IMLangFontLink2;
#endif 	/* __IMLangFontLink2_FWD_DEFINED__ */


#ifndef __IMultiLanguage3_FWD_DEFINED__
#define __IMultiLanguage3_FWD_DEFINED__
typedef interface IMultiLanguage3 IMultiLanguage3;
#endif 	/* __IMultiLanguage3_FWD_DEFINED__ */


#ifndef __CMultiLanguage_FWD_DEFINED__
#define __CMultiLanguage_FWD_DEFINED__

#ifdef __cplusplus
typedef class CMultiLanguage CMultiLanguage;
#else
typedef struct CMultiLanguage CMultiLanguage;
#endif /* __cplusplus */

#endif 	/* __CMultiLanguage_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mlang_0000_0000 */
/* [local] */ 

//=--------------------------------------------------------------------------=
// MLang.h                                                                    
//=--------------------------------------------------------------------------=
// Copyright (c) Microsoft Corporation. All rights reserved.
//                                                                            
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF        
// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO        
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A             
// PARTICULAR PURPOSE.                                                        
//=--------------------------------------------------------------------------=
                                                                              
#pragma comment(lib,"uuid.lib")                                             
                                                                              
//----------------------------------------------------------------------------
// IMultiLanguage Interfaces.                                                 
                                                                              


extern RPC_IF_HANDLE __MIDL_itf_mlang_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mlang_0000_0000_v0_0_s_ifspec;


#ifndef __MultiLanguage_LIBRARY_DEFINED__
#define __MultiLanguage_LIBRARY_DEFINED__

/* library MultiLanguage */
/* [version][lcid][helpstring][uuid] */ 

typedef WORD LANGID;

typedef 
enum tagMLSTR_FLAGS
    {	MLSTR_READ	= 1,
	MLSTR_WRITE	= 2
    } 	MLSTR_FLAGS;

// dwfIODControl definitions for ValidateCodePageEx()
#define CPIOD_PEEK          0x40000000L
#define CPIOD_FORCE_PROMPT  0x80000000L

EXTERN_C const IID LIBID_MultiLanguage;

#ifndef __IMLangStringBufW_INTERFACE_DEFINED__
#define __IMLangStringBufW_INTERFACE_DEFINED__

/* interface IMLangStringBufW */
/* [object][unique][helpstring][uuid][local] */ 


EXTERN_C const IID IID_IMLangStringBufW;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D24ACD21-BA72-11D0-B188-00AA0038C969")
    IMLangStringBufW : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStatus( 
            /* [annotation][out] */ 
            __out_opt  long *plFlags,
            /* [annotation][out] */ 
            __out_opt  long *pcchBuf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LockBuf( 
            /* [in] */ long cchOffset,
            /* [in] */ long cchMaxLock,
            /* [annotation][size_is][size_is][out] */ 
            __deref_out_ecount(*pcchBuf)  WCHAR **ppszBuf,
            /* [annotation][out] */ 
            __out_opt  long *pcchBuf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnlockBuf( 
            /* [annotation][size_is][in] */ 
            __in_ecount(cchWrite-cchOffset)  const WCHAR *pszBuf,
            /* [in] */ long cchOffset,
            /* [in] */ long cchWrite) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ long cchOffset,
            /* [in] */ long cchMaxInsert,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Delete( 
            /* [in] */ long cchOffset,
            /* [in] */ long cchDelete) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMLangStringBufWVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMLangStringBufW * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMLangStringBufW * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMLangStringBufW * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetStatus )( 
            IMLangStringBufW * This,
            /* [annotation][out] */ 
            __out_opt  long *plFlags,
            /* [annotation][out] */ 
            __out_opt  long *pcchBuf);
        
        HRESULT ( STDMETHODCALLTYPE *LockBuf )( 
            IMLangStringBufW * This,
            /* [in] */ long cchOffset,
            /* [in] */ long cchMaxLock,
            /* [annotation][size_is][size_is][out] */ 
            __deref_out_ecount(*pcchBuf)  WCHAR **ppszBuf,
            /* [annotation][out] */ 
            __out_opt  long *pcchBuf);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockBuf )( 
            IMLangStringBufW * This,
            /* [annotation][size_is][in] */ 
            __in_ecount(cchWrite-cchOffset)  const WCHAR *pszBuf,
            /* [in] */ long cchOffset,
            /* [in] */ long cchWrite);
        
        HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMLangStringBufW * This,
            /* [in] */ long cchOffset,
            /* [in] */ long cchMaxInsert,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual);
        
        HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMLangStringBufW * This,
            /* [in] */ long cchOffset,
            /* [in] */ long cchDelete);
        
        END_INTERFACE
    } IMLangStringBufWVtbl;

    interface IMLangStringBufW
    {
        CONST_VTBL struct IMLangStringBufWVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMLangStringBufW_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMLangStringBufW_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMLangStringBufW_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMLangStringBufW_GetStatus(This,plFlags,pcchBuf)	\
    ( (This)->lpVtbl -> GetStatus(This,plFlags,pcchBuf) ) 

#define IMLangStringBufW_LockBuf(This,cchOffset,cchMaxLock,ppszBuf,pcchBuf)	\
    ( (This)->lpVtbl -> LockBuf(This,cchOffset,cchMaxLock,ppszBuf,pcchBuf) ) 

#define IMLangStringBufW_UnlockBuf(This,pszBuf,cchOffset,cchWrite)	\
    ( (This)->lpVtbl -> UnlockBuf(This,pszBuf,cchOffset,cchWrite) ) 

#define IMLangStringBufW_Insert(This,cchOffset,cchMaxInsert,pcchActual)	\
    ( (This)->lpVtbl -> Insert(This,cchOffset,cchMaxInsert,pcchActual) ) 

#define IMLangStringBufW_Delete(This,cchOffset,cchDelete)	\
    ( (This)->lpVtbl -> Delete(This,cchOffset,cchDelete) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMLangStringBufW_INTERFACE_DEFINED__ */


#ifndef __IMLangStringBufA_INTERFACE_DEFINED__
#define __IMLangStringBufA_INTERFACE_DEFINED__

/* interface IMLangStringBufA */
/* [object][unique][helpstring][uuid][local] */ 


EXTERN_C const IID IID_IMLangStringBufA;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D24ACD23-BA72-11D0-B188-00AA0038C969")
    IMLangStringBufA : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStatus( 
            /* [annotation][out] */ 
            __out_opt  long *plFlags,
            /* [annotation][out] */ 
            __out_opt  long *pcchBuf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LockBuf( 
            /* [in] */ long cchOffset,
            /* [in] */ long cchMaxLock,
            /* [annotation][size_is][size_is][out] */ 
            __deref_out_ecount(*pcchBuf)  CHAR **ppszBuf,
            /* [annotation][out] */ 
            __out_opt  long *pcchBuf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnlockBuf( 
            /* [annotation][size_is][in] */ 
            __in_ecount(cchWrite-cchOffset)  const CHAR *pszBuf,
            /* [in] */ long cchOffset,
            /* [in] */ long cchWrite) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ long cchOffset,
            /* [in] */ long cchMaxInsert,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Delete( 
            /* [in] */ long cchOffset,
            /* [in] */ long cchDelete) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMLangStringBufAVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMLangStringBufA * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMLangStringBufA * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMLangStringBufA * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetStatus )( 
            IMLangStringBufA * This,
            /* [annotation][out] */ 
            __out_opt  long *plFlags,
            /* [annotation][out] */ 
            __out_opt  long *pcchBuf);
        
        HRESULT ( STDMETHODCALLTYPE *LockBuf )( 
            IMLangStringBufA * This,
            /* [in] */ long cchOffset,
            /* [in] */ long cchMaxLock,
            /* [annotation][size_is][size_is][out] */ 
            __deref_out_ecount(*pcchBuf)  CHAR **ppszBuf,
            /* [annotation][out] */ 
            __out_opt  long *pcchBuf);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockBuf )( 
            IMLangStringBufA * This,
            /* [annotation][size_is][in] */ 
            __in_ecount(cchWrite-cchOffset)  const CHAR *pszBuf,
            /* [in] */ long cchOffset,
            /* [in] */ long cchWrite);
        
        HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IMLangStringBufA * This,
            /* [in] */ long cchOffset,
            /* [in] */ long cchMaxInsert,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual);
        
        HRESULT ( STDMETHODCALLTYPE *Delete )( 
            IMLangStringBufA * This,
            /* [in] */ long cchOffset,
            /* [in] */ long cchDelete);
        
        END_INTERFACE
    } IMLangStringBufAVtbl;

    interface IMLangStringBufA
    {
        CONST_VTBL struct IMLangStringBufAVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMLangStringBufA_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMLangStringBufA_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMLangStringBufA_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMLangStringBufA_GetStatus(This,plFlags,pcchBuf)	\
    ( (This)->lpVtbl -> GetStatus(This,plFlags,pcchBuf) ) 

#define IMLangStringBufA_LockBuf(This,cchOffset,cchMaxLock,ppszBuf,pcchBuf)	\
    ( (This)->lpVtbl -> LockBuf(This,cchOffset,cchMaxLock,ppszBuf,pcchBuf) ) 

#define IMLangStringBufA_UnlockBuf(This,pszBuf,cchOffset,cchWrite)	\
    ( (This)->lpVtbl -> UnlockBuf(This,pszBuf,cchOffset,cchWrite) ) 

#define IMLangStringBufA_Insert(This,cchOffset,cchMaxInsert,pcchActual)	\
    ( (This)->lpVtbl -> Insert(This,cchOffset,cchMaxInsert,pcchActual) ) 

#define IMLangStringBufA_Delete(This,cchOffset,cchDelete)	\
    ( (This)->lpVtbl -> Delete(This,cchOffset,cchDelete) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMLangStringBufA_INTERFACE_DEFINED__ */


#ifndef __IMLangString_INTERFACE_DEFINED__
#define __IMLangString_INTERFACE_DEFINED__

/* interface IMLangString */
/* [object][unique][helpstring][uuid][local] */ 


EXTERN_C const IID IID_IMLangString;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C04D65CE-B70D-11D0-B188-00AA0038C969")
    IMLangString : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Sync( 
            /* [in] */ BOOL fNoAccess) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLength( 
            /* [annotation][retval][out] */ 
            __out_opt  long *plLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMLStr( 
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [annotation][in] */ 
            __in  IUnknown *pSrcMLStr,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMLStr( 
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen,
            /* [annotation][in] */ 
            __in  IUnknown *pUnkOuter,
            /* [in] */ DWORD dwClsContext,
            /* [annotation][in] */ 
            __in  const IID *piid,
            /* [annotation][out] */ 
            __deref_out  IUnknown **ppDestMLStr,
            /* [annotation][out] */ 
            __out_opt  long *plDestPos,
            /* [annotation][out] */ 
            __out_opt  long *plDestLen) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMLangStringVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMLangString * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMLangString * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMLangString * This);
        
        HRESULT ( STDMETHODCALLTYPE *Sync )( 
            IMLangString * This,
            /* [in] */ BOOL fNoAccess);
        
        HRESULT ( STDMETHODCALLTYPE *GetLength )( 
            IMLangString * This,
            /* [annotation][retval][out] */ 
            __out_opt  long *plLen);
        
        HRESULT ( STDMETHODCALLTYPE *SetMLStr )( 
            IMLangString * This,
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [annotation][in] */ 
            __in  IUnknown *pSrcMLStr,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen);
        
        HRESULT ( STDMETHODCALLTYPE *GetMLStr )( 
            IMLangString * This,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen,
            /* [annotation][in] */ 
            __in  IUnknown *pUnkOuter,
            /* [in] */ DWORD dwClsContext,
            /* [annotation][in] */ 
            __in  const IID *piid,
            /* [annotation][out] */ 
            __deref_out  IUnknown **ppDestMLStr,
            /* [annotation][out] */ 
            __out_opt  long *plDestPos,
            /* [annotation][out] */ 
            __out_opt  long *plDestLen);
        
        END_INTERFACE
    } IMLangStringVtbl;

    interface IMLangString
    {
        CONST_VTBL struct IMLangStringVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMLangString_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMLangString_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMLangString_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMLangString_Sync(This,fNoAccess)	\
    ( (This)->lpVtbl -> Sync(This,fNoAccess) ) 

#define IMLangString_GetLength(This,plLen)	\
    ( (This)->lpVtbl -> GetLength(This,plLen) ) 

#define IMLangString_SetMLStr(This,lDestPos,lDestLen,pSrcMLStr,lSrcPos,lSrcLen)	\
    ( (This)->lpVtbl -> SetMLStr(This,lDestPos,lDestLen,pSrcMLStr,lSrcPos,lSrcLen) ) 

#define IMLangString_GetMLStr(This,lSrcPos,lSrcLen,pUnkOuter,dwClsContext,piid,ppDestMLStr,plDestPos,plDestLen)	\
    ( (This)->lpVtbl -> GetMLStr(This,lSrcPos,lSrcLen,pUnkOuter,dwClsContext,piid,ppDestMLStr,plDestPos,plDestLen) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMLangString_INTERFACE_DEFINED__ */


#ifndef __IMLangStringWStr_INTERFACE_DEFINED__
#define __IMLangStringWStr_INTERFACE_DEFINED__

/* interface IMLangStringWStr */
/* [object][unique][helpstring][uuid][local] */ 


EXTERN_C const IID IID_IMLangStringWStr;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C04D65D0-B70D-11D0-B188-00AA0038C969")
    IMLangStringWStr : public IMLangString
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetWStr( 
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [annotation][size_is][string][in] */ 
            __in_ecount(cchSrc)  LPCWSTR pszSrc,
            /* [in] */ long cchSrc,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStrBufW( 
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [annotation][unique][in] */ 
            __in_opt  IMLangStringBufW *pSrcBuf,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetWStr( 
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen,
            /* [annotation][size_is][out] */ 
            __out_ecount_opt(cchDest)  LPWSTR pszDest,
            /* [in] */ long cchDest,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStrBufW( 
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcMaxLen,
            /* [annotation][out] */ 
            __deref_out  IMLangStringBufW **ppDestBuf,
            /* [annotation][out] */ 
            __out_opt  long *plDestLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LockWStr( 
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen,
            /* [in] */ long lFlags,
            /* [in] */ long cchRequest,
            /* [annotation][size_is][size_is][out] */ 
            __deref_opt_out_ecount(*pcchDest)  LPWSTR *ppszDest,
            /* [annotation][out] */ 
            __out_opt  long *pcchDest,
            /* [annotation][out] */ 
            __out_opt  long *plDestLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnlockWStr( 
            /* [annotation][size_is][string][in] */ 
            __in_ecount(cchSrc)  LPCWSTR pszSrc,
            /* [in] */ long cchSrc,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetLocale( 
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [in] */ LCID locale) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLocale( 
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcMaxLen,
            /* [annotation][out] */ 
            __out_opt  LCID *plocale,
            /* [annotation][out] */ 
            __out_opt  long *plLocalePos,
            /* [annotation][out] */ 
            __out_opt  long *plLocaleLen) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMLangStringWStrVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMLangStringWStr * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMLangStringWStr * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMLangStringWStr * This);
        
        HRESULT ( STDMETHODCALLTYPE *Sync )( 
            IMLangStringWStr * This,
            /* [in] */ BOOL fNoAccess);
        
        HRESULT ( STDMETHODCALLTYPE *GetLength )( 
            IMLangStringWStr * This,
            /* [annotation][retval][out] */ 
            __out_opt  long *plLen);
        
        HRESULT ( STDMETHODCALLTYPE *SetMLStr )( 
            IMLangStringWStr * This,
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [annotation][in] */ 
            __in  IUnknown *pSrcMLStr,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen);
        
        HRESULT ( STDMETHODCALLTYPE *GetMLStr )( 
            IMLangStringWStr * This,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen,
            /* [annotation][in] */ 
            __in  IUnknown *pUnkOuter,
            /* [in] */ DWORD dwClsContext,
            /* [annotation][in] */ 
            __in  const IID *piid,
            /* [annotation][out] */ 
            __deref_out  IUnknown **ppDestMLStr,
            /* [annotation][out] */ 
            __out_opt  long *plDestPos,
            /* [annotation][out] */ 
            __out_opt  long *plDestLen);
        
        HRESULT ( STDMETHODCALLTYPE *SetWStr )( 
            IMLangStringWStr * This,
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [annotation][size_is][string][in] */ 
            __in_ecount(cchSrc)  LPCWSTR pszSrc,
            /* [in] */ long cchSrc,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen);
        
        HRESULT ( STDMETHODCALLTYPE *SetStrBufW )( 
            IMLangStringWStr * This,
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [annotation][unique][in] */ 
            __in_opt  IMLangStringBufW *pSrcBuf,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen);
        
        HRESULT ( STDMETHODCALLTYPE *GetWStr )( 
            IMLangStringWStr * This,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen,
            /* [annotation][size_is][out] */ 
            __out_ecount_opt(cchDest)  LPWSTR pszDest,
            /* [in] */ long cchDest,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen);
        
        HRESULT ( STDMETHODCALLTYPE *GetStrBufW )( 
            IMLangStringWStr * This,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcMaxLen,
            /* [annotation][out] */ 
            __deref_out  IMLangStringBufW **ppDestBuf,
            /* [annotation][out] */ 
            __out_opt  long *plDestLen);
        
        HRESULT ( STDMETHODCALLTYPE *LockWStr )( 
            IMLangStringWStr * This,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen,
            /* [in] */ long lFlags,
            /* [in] */ long cchRequest,
            /* [annotation][size_is][size_is][out] */ 
            __deref_opt_out_ecount(*pcchDest)  LPWSTR *ppszDest,
            /* [annotation][out] */ 
            __out_opt  long *pcchDest,
            /* [annotation][out] */ 
            __out_opt  long *plDestLen);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockWStr )( 
            IMLangStringWStr * This,
            /* [annotation][size_is][string][in] */ 
            __in_ecount(cchSrc)  LPCWSTR pszSrc,
            /* [in] */ long cchSrc,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen);
        
        HRESULT ( STDMETHODCALLTYPE *SetLocale )( 
            IMLangStringWStr * This,
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [in] */ LCID locale);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocale )( 
            IMLangStringWStr * This,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcMaxLen,
            /* [annotation][out] */ 
            __out_opt  LCID *plocale,
            /* [annotation][out] */ 
            __out_opt  long *plLocalePos,
            /* [annotation][out] */ 
            __out_opt  long *plLocaleLen);
        
        END_INTERFACE
    } IMLangStringWStrVtbl;

    interface IMLangStringWStr
    {
        CONST_VTBL struct IMLangStringWStrVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMLangStringWStr_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMLangStringWStr_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMLangStringWStr_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMLangStringWStr_Sync(This,fNoAccess)	\
    ( (This)->lpVtbl -> Sync(This,fNoAccess) ) 

#define IMLangStringWStr_GetLength(This,plLen)	\
    ( (This)->lpVtbl -> GetLength(This,plLen) ) 

#define IMLangStringWStr_SetMLStr(This,lDestPos,lDestLen,pSrcMLStr,lSrcPos,lSrcLen)	\
    ( (This)->lpVtbl -> SetMLStr(This,lDestPos,lDestLen,pSrcMLStr,lSrcPos,lSrcLen) ) 

#define IMLangStringWStr_GetMLStr(This,lSrcPos,lSrcLen,pUnkOuter,dwClsContext,piid,ppDestMLStr,plDestPos,plDestLen)	\
    ( (This)->lpVtbl -> GetMLStr(This,lSrcPos,lSrcLen,pUnkOuter,dwClsContext,piid,ppDestMLStr,plDestPos,plDestLen) ) 


#define IMLangStringWStr_SetWStr(This,lDestPos,lDestLen,pszSrc,cchSrc,pcchActual,plActualLen)	\
    ( (This)->lpVtbl -> SetWStr(This,lDestPos,lDestLen,pszSrc,cchSrc,pcchActual,plActualLen) ) 

#define IMLangStringWStr_SetStrBufW(This,lDestPos,lDestLen,pSrcBuf,pcchActual,plActualLen)	\
    ( (This)->lpVtbl -> SetStrBufW(This,lDestPos,lDestLen,pSrcBuf,pcchActual,plActualLen) ) 

#define IMLangStringWStr_GetWStr(This,lSrcPos,lSrcLen,pszDest,cchDest,pcchActual,plActualLen)	\
    ( (This)->lpVtbl -> GetWStr(This,lSrcPos,lSrcLen,pszDest,cchDest,pcchActual,plActualLen) ) 

#define IMLangStringWStr_GetStrBufW(This,lSrcPos,lSrcMaxLen,ppDestBuf,plDestLen)	\
    ( (This)->lpVtbl -> GetStrBufW(This,lSrcPos,lSrcMaxLen,ppDestBuf,plDestLen) ) 

#define IMLangStringWStr_LockWStr(This,lSrcPos,lSrcLen,lFlags,cchRequest,ppszDest,pcchDest,plDestLen)	\
    ( (This)->lpVtbl -> LockWStr(This,lSrcPos,lSrcLen,lFlags,cchRequest,ppszDest,pcchDest,plDestLen) ) 

#define IMLangStringWStr_UnlockWStr(This,pszSrc,cchSrc,pcchActual,plActualLen)	\
    ( (This)->lpVtbl -> UnlockWStr(This,pszSrc,cchSrc,pcchActual,plActualLen) ) 

#define IMLangStringWStr_SetLocale(This,lDestPos,lDestLen,locale)	\
    ( (This)->lpVtbl -> SetLocale(This,lDestPos,lDestLen,locale) ) 

#define IMLangStringWStr_GetLocale(This,lSrcPos,lSrcMaxLen,plocale,plLocalePos,plLocaleLen)	\
    ( (This)->lpVtbl -> GetLocale(This,lSrcPos,lSrcMaxLen,plocale,plLocalePos,plLocaleLen) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMLangStringWStr_INTERFACE_DEFINED__ */


#ifndef __IMLangStringAStr_INTERFACE_DEFINED__
#define __IMLangStringAStr_INTERFACE_DEFINED__

/* interface IMLangStringAStr */
/* [object][unique][helpstring][uuid][local] */ 


EXTERN_C const IID IID_IMLangStringAStr;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C04D65D2-B70D-11D0-B188-00AA0038C969")
    IMLangStringAStr : public IMLangString
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetAStr( 
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [in] */ UINT uCodePage,
            /* [annotation][size_is][in] */ 
            __in_ecount(cchSrc)  LPCSTR pszSrc,
            /* [in] */ long cchSrc,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStrBufA( 
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [in] */ UINT uCodePage,
            /* [annotation][in] */ 
            __in_opt  IMLangStringBufA *pSrcBuf,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAStr( 
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen,
            /* [in] */ UINT uCodePageIn,
            /* [annotation][out] */ 
            __reserved  UINT *puCodePageOut,
            /* [annotation][size_is][out] */ 
            __out_ecount_opt(cchDest)  LPSTR pszDest,
            /* [in] */ long cchDest,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStrBufA( 
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcMaxLen,
            /* [annotation][out] */ 
            __out_opt  UINT *puDestCodePage,
            /* [annotation][out] */ 
            __deref_out  IMLangStringBufA **ppDestBuf,
            /* [annotation][out] */ 
            __out_opt  long *plDestLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LockAStr( 
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen,
            /* [in] */ long lFlags,
            /* [in] */ UINT uCodePageIn,
            /* [in] */ long cchRequest,
            /* [annotation][out] */ 
            __out_opt  UINT *puCodePageOut,
            /* [annotation][size_is][size_is][out] */ 
            __deref_opt_out_ecount(*pcchDest)  LPSTR *ppszDest,
            /* [annotation][out] */ 
            __out_opt  long *pcchDest,
            /* [annotation][out] */ 
            __out_opt  long *plDestLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnlockAStr( 
            /* [annotation][size_is][in] */ 
            __in_ecount(cchSrc)  LPCSTR pszSrc,
            /* [in] */ long cchSrc,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetLocale( 
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [in] */ LCID locale) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLocale( 
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcMaxLen,
            /* [annotation][out] */ 
            __out_opt  LCID *plocale,
            /* [annotation][out] */ 
            __out_opt  long *plLocalePos,
            /* [annotation][out] */ 
            __out_opt  long *plLocaleLen) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMLangStringAStrVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMLangStringAStr * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMLangStringAStr * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMLangStringAStr * This);
        
        HRESULT ( STDMETHODCALLTYPE *Sync )( 
            IMLangStringAStr * This,
            /* [in] */ BOOL fNoAccess);
        
        HRESULT ( STDMETHODCALLTYPE *GetLength )( 
            IMLangStringAStr * This,
            /* [annotation][retval][out] */ 
            __out_opt  long *plLen);
        
        HRESULT ( STDMETHODCALLTYPE *SetMLStr )( 
            IMLangStringAStr * This,
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [annotation][in] */ 
            __in  IUnknown *pSrcMLStr,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen);
        
        HRESULT ( STDMETHODCALLTYPE *GetMLStr )( 
            IMLangStringAStr * This,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen,
            /* [annotation][in] */ 
            __in  IUnknown *pUnkOuter,
            /* [in] */ DWORD dwClsContext,
            /* [annotation][in] */ 
            __in  const IID *piid,
            /* [annotation][out] */ 
            __deref_out  IUnknown **ppDestMLStr,
            /* [annotation][out] */ 
            __out_opt  long *plDestPos,
            /* [annotation][out] */ 
            __out_opt  long *plDestLen);
        
        HRESULT ( STDMETHODCALLTYPE *SetAStr )( 
            IMLangStringAStr * This,
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [in] */ UINT uCodePage,
            /* [annotation][size_is][in] */ 
            __in_ecount(cchSrc)  LPCSTR pszSrc,
            /* [in] */ long cchSrc,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen);
        
        HRESULT ( STDMETHODCALLTYPE *SetStrBufA )( 
            IMLangStringAStr * This,
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [in] */ UINT uCodePage,
            /* [annotation][in] */ 
            __in_opt  IMLangStringBufA *pSrcBuf,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen);
        
        HRESULT ( STDMETHODCALLTYPE *GetAStr )( 
            IMLangStringAStr * This,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen,
            /* [in] */ UINT uCodePageIn,
            /* [annotation][out] */ 
            __reserved  UINT *puCodePageOut,
            /* [annotation][size_is][out] */ 
            __out_ecount_opt(cchDest)  LPSTR pszDest,
            /* [in] */ long cchDest,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen);
        
        HRESULT ( STDMETHODCALLTYPE *GetStrBufA )( 
            IMLangStringAStr * This,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcMaxLen,
            /* [annotation][out] */ 
            __out_opt  UINT *puDestCodePage,
            /* [annotation][out] */ 
            __deref_out  IMLangStringBufA **ppDestBuf,
            /* [annotation][out] */ 
            __out_opt  long *plDestLen);
        
        HRESULT ( STDMETHODCALLTYPE *LockAStr )( 
            IMLangStringAStr * This,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen,
            /* [in] */ long lFlags,
            /* [in] */ UINT uCodePageIn,
            /* [in] */ long cchRequest,
            /* [annotation][out] */ 
            __out_opt  UINT *puCodePageOut,
            /* [annotation][size_is][size_is][out] */ 
            __deref_opt_out_ecount(*pcchDest)  LPSTR *ppszDest,
            /* [annotation][out] */ 
            __out_opt  long *pcchDest,
            /* [annotation][out] */ 
            __out_opt  long *plDestLen);
        
        HRESULT ( STDMETHODCALLTYPE *UnlockAStr )( 
            IMLangStringAStr * This,
            /* [annotation][size_is][in] */ 
            __in_ecount(cchSrc)  LPCSTR pszSrc,
            /* [in] */ long cchSrc,
            /* [annotation][out] */ 
            __out_opt  long *pcchActual,
            /* [annotation][out] */ 
            __out_opt  long *plActualLen);
        
        HRESULT ( STDMETHODCALLTYPE *SetLocale )( 
            IMLangStringAStr * This,
            /* [in] */ long lDestPos,
            /* [in] */ long lDestLen,
            /* [in] */ LCID locale);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocale )( 
            IMLangStringAStr * This,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcMaxLen,
            /* [annotation][out] */ 
            __out_opt  LCID *plocale,
            /* [annotation][out] */ 
            __out_opt  long *plLocalePos,
            /* [annotation][out] */ 
            __out_opt  long *plLocaleLen);
        
        END_INTERFACE
    } IMLangStringAStrVtbl;

    interface IMLangStringAStr
    {
        CONST_VTBL struct IMLangStringAStrVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMLangStringAStr_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMLangStringAStr_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMLangStringAStr_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMLangStringAStr_Sync(This,fNoAccess)	\
    ( (This)->lpVtbl -> Sync(This,fNoAccess) ) 

#define IMLangStringAStr_GetLength(This,plLen)	\
    ( (This)->lpVtbl -> GetLength(This,plLen) ) 

#define IMLangStringAStr_SetMLStr(This,lDestPos,lDestLen,pSrcMLStr,lSrcPos,lSrcLen)	\
    ( (This)->lpVtbl -> SetMLStr(This,lDestPos,lDestLen,pSrcMLStr,lSrcPos,lSrcLen) ) 

#define IMLangStringAStr_GetMLStr(This,lSrcPos,lSrcLen,pUnkOuter,dwClsContext,piid,ppDestMLStr,plDestPos,plDestLen)	\
    ( (This)->lpVtbl -> GetMLStr(This,lSrcPos,lSrcLen,pUnkOuter,dwClsContext,piid,ppDestMLStr,plDestPos,plDestLen) ) 


#define IMLangStringAStr_SetAStr(This,lDestPos,lDestLen,uCodePage,pszSrc,cchSrc,pcchActual,plActualLen)	\
    ( (This)->lpVtbl -> SetAStr(This,lDestPos,lDestLen,uCodePage,pszSrc,cchSrc,pcchActual,plActualLen) ) 

#define IMLangStringAStr_SetStrBufA(This,lDestPos,lDestLen,uCodePage,pSrcBuf,pcchActual,plActualLen)	\
    ( (This)->lpVtbl -> SetStrBufA(This,lDestPos,lDestLen,uCodePage,pSrcBuf,pcchActual,plActualLen) ) 

#define IMLangStringAStr_GetAStr(This,lSrcPos,lSrcLen,uCodePageIn,puCodePageOut,pszDest,cchDest,pcchActual,plActualLen)	\
    ( (This)->lpVtbl -> GetAStr(This,lSrcPos,lSrcLen,uCodePageIn,puCodePageOut,pszDest,cchDest,pcchActual,plActualLen) ) 

#define IMLangStringAStr_GetStrBufA(This,lSrcPos,lSrcMaxLen,puDestCodePage,ppDestBuf,plDestLen)	\
    ( (This)->lpVtbl -> GetStrBufA(This,lSrcPos,lSrcMaxLen,puDestCodePage,ppDestBuf,plDestLen) ) 

#define IMLangStringAStr_LockAStr(This,lSrcPos,lSrcLen,lFlags,uCodePageIn,cchRequest,puCodePageOut,ppszDest,pcchDest,plDestLen)	\
    ( (This)->lpVtbl -> LockAStr(This,lSrcPos,lSrcLen,lFlags,uCodePageIn,cchRequest,puCodePageOut,ppszDest,pcchDest,plDestLen) ) 

#define IMLangStringAStr_UnlockAStr(This,pszSrc,cchSrc,pcchActual,plActualLen)	\
    ( (This)->lpVtbl -> UnlockAStr(This,pszSrc,cchSrc,pcchActual,plActualLen) ) 

#define IMLangStringAStr_SetLocale(This,lDestPos,lDestLen,locale)	\
    ( (This)->lpVtbl -> SetLocale(This,lDestPos,lDestLen,locale) ) 

#define IMLangStringAStr_GetLocale(This,lSrcPos,lSrcMaxLen,plocale,plLocalePos,plLocaleLen)	\
    ( (This)->lpVtbl -> GetLocale(This,lSrcPos,lSrcMaxLen,plocale,plLocalePos,plLocaleLen) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMLangStringAStr_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_CMLangString;

#ifdef __cplusplus

class DECLSPEC_UUID("C04D65CF-B70D-11D0-B188-00AA0038C969")
CMLangString;
#endif

#ifndef __IMLangLineBreakConsole_INTERFACE_DEFINED__
#define __IMLangLineBreakConsole_INTERFACE_DEFINED__

/* interface IMLangLineBreakConsole */
/* [object][local][unique][helpstring][uuid] */ 


EXTERN_C const IID IID_IMLangLineBreakConsole;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE2EE1-BFD7-11D0-B188-00AA0038C969")
    IMLangLineBreakConsole : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE BreakLineML( 
            /* [annotation][in] */ 
            __in  IMLangString *pSrcMLStr,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen,
            /* [in] */ long cMinColumns,
            /* [in] */ long cMaxColumns,
            /* [annotation][out] */ 
            __out_opt  long *plLineLen,
            /* [annotation][out] */ 
            __out_opt  long *plSkipLen) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE BreakLineW( 
            /* [in] */ LCID locale,
            /* [annotation][size_is][in] */ 
            __in_ecount(cchSrc)  const WCHAR *pszSrc,
            /* [in] */ long cchSrc,
            /* [in] */ long cMaxColumns,
            /* [annotation][out] */ 
            __out_opt  long *pcchLine,
            /* [annotation][out] */ 
            __out_opt  long *pcchSkip) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE BreakLineA( 
            /* [in] */ LCID locale,
            /* [in] */ UINT uCodePage,
            /* [annotation][size_is][in] */ 
            __in_ecount(cchSrc)  const CHAR *pszSrc,
            /* [in] */ long cchSrc,
            /* [in] */ long cMaxColumns,
            /* [annotation][out] */ 
            __out_opt  long *pcchLine,
            /* [annotation][out] */ 
            __out_opt  long *pcchSkip) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMLangLineBreakConsoleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMLangLineBreakConsole * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMLangLineBreakConsole * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMLangLineBreakConsole * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *BreakLineML )( 
            IMLangLineBreakConsole * This,
            /* [annotation][in] */ 
            __in  IMLangString *pSrcMLStr,
            /* [in] */ long lSrcPos,
            /* [in] */ long lSrcLen,
            /* [in] */ long cMinColumns,
            /* [in] */ long cMaxColumns,
            /* [annotation][out] */ 
            __out_opt  long *plLineLen,
            /* [annotation][out] */ 
            __out_opt  long *plSkipLen);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *BreakLineW )( 
            IMLangLineBreakConsole * This,
            /* [in] */ LCID locale,
            /* [annotation][size_is][in] */ 
            __in_ecount(cchSrc)  const WCHAR *pszSrc,
            /* [in] */ long cchSrc,
            /* [in] */ long cMaxColumns,
            /* [annotation][out] */ 
            __out_opt  long *pcchLine,
            /* [annotation][out] */ 
            __out_opt  long *pcchSkip);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *BreakLineA )( 
            IMLangLineBreakConsole * This,
            /* [in] */ LCID locale,
            /* [in] */ UINT uCodePage,
            /* [annotation][size_is][in] */ 
            __in_ecount(cchSrc)  const CHAR *pszSrc,
            /* [in] */ long cchSrc,
            /* [in] */ long cMaxColumns,
            /* [annotation][out] */ 
            __out_opt  long *pcchLine,
            /* [annotation][out] */ 
            __out_opt  long *pcchSkip);
        
        END_INTERFACE
    } IMLangLineBreakConsoleVtbl;

    interface IMLangLineBreakConsole
    {
        CONST_VTBL struct IMLangLineBreakConsoleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMLangLineBreakConsole_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMLangLineBreakConsole_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMLangLineBreakConsole_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMLangLineBreakConsole_BreakLineML(This,pSrcMLStr,lSrcPos,lSrcLen,cMinColumns,cMaxColumns,plLineLen,plSkipLen)	\
    ( (This)->lpVtbl -> BreakLineML(This,pSrcMLStr,lSrcPos,lSrcLen,cMinColumns,cMaxColumns,plLineLen,plSkipLen) ) 

#define IMLangLineBreakConsole_BreakLineW(This,locale,pszSrc,cchSrc,cMaxColumns,pcchLine,pcchSkip)	\
    ( (This)->lpVtbl -> BreakLineW(This,locale,pszSrc,cchSrc,cMaxColumns,pcchLine,pcchSkip) ) 

#define IMLangLineBreakConsole_BreakLineA(This,locale,uCodePage,pszSrc,cchSrc,cMaxColumns,pcchLine,pcchSkip)	\
    ( (This)->lpVtbl -> BreakLineA(This,locale,uCodePage,pszSrc,cchSrc,cMaxColumns,pcchLine,pcchSkip) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMLangLineBreakConsole_INTERFACE_DEFINED__ */


#ifndef __IEnumCodePage_INTERFACE_DEFINED__
#define __IEnumCodePage_INTERFACE_DEFINED__

/* interface IEnumCodePage */
/* [local][unique][uuid][object] */ 

#define	MAX_MIMECP_NAME	( 64 )

#define	MAX_MIMECSET_NAME	( 50 )

#define	MAX_MIMEFACE_NAME	( 32 )

typedef 
enum tagMIMECONTF
    {	MIMECONTF_MAILNEWS	= 0x1,
	MIMECONTF_BROWSER	= 0x2,
	MIMECONTF_MINIMAL	= 0x4,
	MIMECONTF_IMPORT	= 0x8,
	MIMECONTF_SAVABLE_MAILNEWS	= 0x100,
	MIMECONTF_SAVABLE_BROWSER	= 0x200,
	MIMECONTF_EXPORT	= 0x400,
	MIMECONTF_PRIVCONVERTER	= 0x10000,
	MIMECONTF_VALID	= 0x20000,
	MIMECONTF_VALID_NLS	= 0x40000,
	MIMECONTF_MIME_IE4	= 0x10000000,
	MIMECONTF_MIME_LATEST	= 0x20000000,
	MIMECONTF_MIME_REGISTRY	= 0x40000000
    } 	MIMECONTF;

typedef struct tagMIMECPINFO
    {
    DWORD dwFlags;
    UINT uiCodePage;
    UINT uiFamilyCodePage;
    WCHAR wszDescription[ 64 ];
    WCHAR wszWebCharset[ 50 ];
    WCHAR wszHeaderCharset[ 50 ];
    WCHAR wszBodyCharset[ 50 ];
    WCHAR wszFixedWidthFont[ 32 ];
    WCHAR wszProportionalFont[ 32 ];
    BYTE bGDICharset;
    } 	MIMECPINFO;

typedef struct tagMIMECPINFO *PMIMECPINFO;

typedef struct tagMIMECSETINFO
    {
    UINT uiCodePage;
    UINT uiInternetEncoding;
    WCHAR wszCharset[ 50 ];
    } 	MIMECSETINFO;

typedef struct tagMIMECSETINFO *PMIMECSETINFO;

typedef /* [unique] */ IEnumCodePage *LPENUMCODEPAGE;


EXTERN_C const IID IID_IEnumCodePage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("275c23e3-3747-11d0-9fea-00aa003f8646")
    IEnumCodePage : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [annotation][out] */ 
            __reserved  IEnumCodePage **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [annotation][out] */ 
            __out  PMIMECPINFO rgelt,
            /* [annotation][out] */ 
            __out_opt  ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumCodePageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumCodePage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumCodePage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumCodePage * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumCodePage * This,
            /* [annotation][out] */ 
            __reserved  IEnumCodePage **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumCodePage * This,
            /* [in] */ ULONG celt,
            /* [annotation][out] */ 
            __out  PMIMECPINFO rgelt,
            /* [annotation][out] */ 
            __out_opt  ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumCodePage * This);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumCodePage * This,
            /* [in] */ ULONG celt);
        
        END_INTERFACE
    } IEnumCodePageVtbl;

    interface IEnumCodePage
    {
        CONST_VTBL struct IEnumCodePageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumCodePage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumCodePage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumCodePage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumCodePage_Clone(This,ppEnum)	\
    ( (This)->lpVtbl -> Clone(This,ppEnum) ) 

#define IEnumCodePage_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IEnumCodePage_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumCodePage_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumCodePage_INTERFACE_DEFINED__ */


#ifndef __IEnumRfc1766_INTERFACE_DEFINED__
#define __IEnumRfc1766_INTERFACE_DEFINED__

/* interface IEnumRfc1766 */
/* [local][unique][uuid][object] */ 

#define	MAX_RFC1766_NAME	( 6 )

#define	MAX_LOCALE_NAME	( 32 )

typedef struct tagRFC1766INFO
    {
    LCID lcid;
    WCHAR wszRfc1766[ 6 ];
    WCHAR wszLocaleName[ 32 ];
    } 	RFC1766INFO;

typedef struct tagRFC1766INFO *PRFC1766INFO;

typedef /* [unique] */ IEnumRfc1766 *LPENUMRFC1766;


EXTERN_C const IID IID_IEnumRfc1766;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3dc39d1d-c030-11d0-b81b-00c04fc9b31f")
    IEnumRfc1766 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [annotation][out] */ 
            __reserved  IEnumRfc1766 **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [annotation][out] */ 
            __out  PRFC1766INFO rgelt,
            /* [annotation][out] */ 
            __out_opt  ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumRfc1766Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumRfc1766 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumRfc1766 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumRfc1766 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumRfc1766 * This,
            /* [annotation][out] */ 
            __reserved  IEnumRfc1766 **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumRfc1766 * This,
            /* [in] */ ULONG celt,
            /* [annotation][out] */ 
            __out  PRFC1766INFO rgelt,
            /* [annotation][out] */ 
            __out_opt  ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumRfc1766 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumRfc1766 * This,
            /* [in] */ ULONG celt);
        
        END_INTERFACE
    } IEnumRfc1766Vtbl;

    interface IEnumRfc1766
    {
        CONST_VTBL struct IEnumRfc1766Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumRfc1766_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumRfc1766_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumRfc1766_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumRfc1766_Clone(This,ppEnum)	\
    ( (This)->lpVtbl -> Clone(This,ppEnum) ) 

#define IEnumRfc1766_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IEnumRfc1766_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumRfc1766_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumRfc1766_INTERFACE_DEFINED__ */


#ifndef __IEnumScript_INTERFACE_DEFINED__
#define __IEnumScript_INTERFACE_DEFINED__

/* interface IEnumScript */
/* [local][unique][uuid][object] */ 

#define	MAX_SCRIPT_NAME	( 48 )

typedef BYTE SCRIPT_ID;

typedef __int64 SCRIPT_IDS;

typedef 
enum tagSCRIPTCONTF
    {	sidDefault	= 0,
	sidMerge	= ( sidDefault + 1 ) ,
	sidAsciiSym	= ( sidMerge + 1 ) ,
	sidAsciiLatin	= ( sidAsciiSym + 1 ) ,
	sidLatin	= ( sidAsciiLatin + 1 ) ,
	sidGreek	= ( sidLatin + 1 ) ,
	sidCyrillic	= ( sidGreek + 1 ) ,
	sidArmenian	= ( sidCyrillic + 1 ) ,
	sidHebrew	= ( sidArmenian + 1 ) ,
	sidArabic	= ( sidHebrew + 1 ) ,
	sidDevanagari	= ( sidArabic + 1 ) ,
	sidBengali	= ( sidDevanagari + 1 ) ,
	sidGurmukhi	= ( sidBengali + 1 ) ,
	sidGujarati	= ( sidGurmukhi + 1 ) ,
	sidOriya	= ( sidGujarati + 1 ) ,
	sidTamil	= ( sidOriya + 1 ) ,
	sidTelugu	= ( sidTamil + 1 ) ,
	sidKannada	= ( sidTelugu + 1 ) ,
	sidMalayalam	= ( sidKannada + 1 ) ,
	sidThai	= ( sidMalayalam + 1 ) ,
	sidLao	= ( sidThai + 1 ) ,
	sidTibetan	= ( sidLao + 1 ) ,
	sidGeorgian	= ( sidTibetan + 1 ) ,
	sidHangul	= ( sidGeorgian + 1 ) ,
	sidKana	= ( sidHangul + 1 ) ,
	sidBopomofo	= ( sidKana + 1 ) ,
	sidHan	= ( sidBopomofo + 1 ) ,
	sidEthiopic	= ( sidHan + 1 ) ,
	sidCanSyllabic	= ( sidEthiopic + 1 ) ,
	sidCherokee	= ( sidCanSyllabic + 1 ) ,
	sidYi	= ( sidCherokee + 1 ) ,
	sidBraille	= ( sidYi + 1 ) ,
	sidRunic	= ( sidBraille + 1 ) ,
	sidOgham	= ( sidRunic + 1 ) ,
	sidSinhala	= ( sidOgham + 1 ) ,
	sidSyriac	= ( sidSinhala + 1 ) ,
	sidBurmese	= ( sidSyriac + 1 ) ,
	sidKhmer	= ( sidBurmese + 1 ) ,
	sidThaana	= ( sidKhmer + 1 ) ,
	sidMongolian	= ( sidThaana + 1 ) ,
	sidUserDefined	= ( sidMongolian + 1 ) ,
	sidLim	= ( sidUserDefined + 1 ) ,
	sidFEFirst	= sidHangul,
	sidFELast	= sidHan
    } 	SCRIPTCONTF;

typedef struct tagSCRIPTINFO
    {
    SCRIPT_ID ScriptId;
    UINT uiCodePage;
    WCHAR wszDescription[ 48 ];
    WCHAR wszFixedWidthFont[ 32 ];
    WCHAR wszProportionalFont[ 32 ];
    } 	SCRIPTINFO;

typedef struct tagSCRIPTINFO *PSCRIPTINFO;

typedef /* [unique] */ IEnumScript *LPENUMScript;


EXTERN_C const IID IID_IEnumScript;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AE5F1430-388B-11d2-8380-00C04F8F5DA1")
    IEnumScript : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [annotation][out] */ 
            __reserved  IEnumScript **ppEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [annotation][out] */ 
            __out  PSCRIPTINFO rgelt,
            /* [annotation][out] */ 
            __out_opt  ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumScriptVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumScript * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumScript * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumScript * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumScript * This,
            /* [annotation][out] */ 
            __reserved  IEnumScript **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumScript * This,
            /* [in] */ ULONG celt,
            /* [annotation][out] */ 
            __out  PSCRIPTINFO rgelt,
            /* [annotation][out] */ 
            __out_opt  ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumScript * This);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumScript * This,
            /* [in] */ ULONG celt);
        
        END_INTERFACE
    } IEnumScriptVtbl;

    interface IEnumScript
    {
        CONST_VTBL struct IEnumScriptVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumScript_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumScript_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumScript_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumScript_Clone(This,ppEnum)	\
    ( (This)->lpVtbl -> Clone(This,ppEnum) ) 

#define IEnumScript_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IEnumScript_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumScript_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumScript_INTERFACE_DEFINED__ */


#ifndef __IMLangConvertCharset_INTERFACE_DEFINED__
#define __IMLangConvertCharset_INTERFACE_DEFINED__

/* interface IMLangConvertCharset */
/* [local][unique][uuid][object] */ 

typedef 
enum tagMLCONVCHARF
    {	MLCONVCHARF_AUTODETECT	= 1,
	MLCONVCHARF_ENTITIZE	= 2,
	MLCONVCHARF_NCR_ENTITIZE	= 2,
	MLCONVCHARF_NAME_ENTITIZE	= 4,
	MLCONVCHARF_USEDEFCHAR	= 8,
	MLCONVCHARF_NOBESTFITCHARS	= 16,
	MLCONVCHARF_DETECTJPN	= 32
    } 	MLCONVCHAR;

typedef 
enum tagMLCPF
    {	MLDETECTF_MAILNEWS	= 0x1,
	MLDETECTF_BROWSER	= 0x2,
	MLDETECTF_VALID	= 0x4,
	MLDETECTF_VALID_NLS	= 0x8,
	MLDETECTF_PRESERVE_ORDER	= 0x10,
	MLDETECTF_PREFERRED_ONLY	= 0x20,
	MLDETECTF_FILTER_SPECIALCHAR	= 0x40,
	MLDETECTF_EURO_UTF8	= 0x80
    } 	MLCP;

typedef /* [unique] */ IMLangConvertCharset *LPMLANGCONVERTCHARSET;


EXTERN_C const IID IID_IMLangConvertCharset;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d66d6f98-cdaa-11d0-b822-00c04fc9b31f")
    IMLangConvertCharset : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ UINT uiSrcCodePage,
            /* [in] */ UINT uiDstCodePage,
            /* [in] */ DWORD dwProperty) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSourceCodePage( 
            /* [annotation][out] */ 
            __out  UINT *puiSrcCodePage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDestinationCodePage( 
            /* [annotation][out] */ 
            __out  UINT *puiDstCodePage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [annotation][out] */ 
            __out  DWORD *pdwProperty) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DoConversion( 
            /* [annotation][in] */ 
            __in_bcount(*pcSrcSize)  BYTE *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount(*pcDstSize)  BYTE *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DoConversionToUnicode( 
            /* [annotation][in] */ 
            __in_bcount(*pcSrcSize)  CHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_ecount(*pcDstSize)  WCHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DoConversionFromUnicode( 
            /* [annotation][in] */ 
            __in_ecount(*pcSrcSize)  WCHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount(*pcDstSize)  CHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMLangConvertCharsetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMLangConvertCharset * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMLangConvertCharset * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMLangConvertCharset * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IMLangConvertCharset * This,
            /* [in] */ UINT uiSrcCodePage,
            /* [in] */ UINT uiDstCodePage,
            /* [in] */ DWORD dwProperty);
        
        HRESULT ( STDMETHODCALLTYPE *GetSourceCodePage )( 
            IMLangConvertCharset * This,
            /* [annotation][out] */ 
            __out  UINT *puiSrcCodePage);
        
        HRESULT ( STDMETHODCALLTYPE *GetDestinationCodePage )( 
            IMLangConvertCharset * This,
            /* [annotation][out] */ 
            __out  UINT *puiDstCodePage);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            IMLangConvertCharset * This,
            /* [annotation][out] */ 
            __out  DWORD *pdwProperty);
        
        HRESULT ( STDMETHODCALLTYPE *DoConversion )( 
            IMLangConvertCharset * This,
            /* [annotation][in] */ 
            __in_bcount(*pcSrcSize)  BYTE *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount(*pcDstSize)  BYTE *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize);
        
        HRESULT ( STDMETHODCALLTYPE *DoConversionToUnicode )( 
            IMLangConvertCharset * This,
            /* [annotation][in] */ 
            __in_bcount(*pcSrcSize)  CHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_ecount(*pcDstSize)  WCHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize);
        
        HRESULT ( STDMETHODCALLTYPE *DoConversionFromUnicode )( 
            IMLangConvertCharset * This,
            /* [annotation][in] */ 
            __in_ecount(*pcSrcSize)  WCHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount(*pcDstSize)  CHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize);
        
        END_INTERFACE
    } IMLangConvertCharsetVtbl;

    interface IMLangConvertCharset
    {
        CONST_VTBL struct IMLangConvertCharsetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMLangConvertCharset_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMLangConvertCharset_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMLangConvertCharset_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMLangConvertCharset_Initialize(This,uiSrcCodePage,uiDstCodePage,dwProperty)	\
    ( (This)->lpVtbl -> Initialize(This,uiSrcCodePage,uiDstCodePage,dwProperty) ) 

#define IMLangConvertCharset_GetSourceCodePage(This,puiSrcCodePage)	\
    ( (This)->lpVtbl -> GetSourceCodePage(This,puiSrcCodePage) ) 

#define IMLangConvertCharset_GetDestinationCodePage(This,puiDstCodePage)	\
    ( (This)->lpVtbl -> GetDestinationCodePage(This,puiDstCodePage) ) 

#define IMLangConvertCharset_GetProperty(This,pdwProperty)	\
    ( (This)->lpVtbl -> GetProperty(This,pdwProperty) ) 

#define IMLangConvertCharset_DoConversion(This,pSrcStr,pcSrcSize,pDstStr,pcDstSize)	\
    ( (This)->lpVtbl -> DoConversion(This,pSrcStr,pcSrcSize,pDstStr,pcDstSize) ) 

#define IMLangConvertCharset_DoConversionToUnicode(This,pSrcStr,pcSrcSize,pDstStr,pcDstSize)	\
    ( (This)->lpVtbl -> DoConversionToUnicode(This,pSrcStr,pcSrcSize,pDstStr,pcDstSize) ) 

#define IMLangConvertCharset_DoConversionFromUnicode(This,pSrcStr,pcSrcSize,pDstStr,pcDstSize)	\
    ( (This)->lpVtbl -> DoConversionFromUnicode(This,pSrcStr,pcSrcSize,pDstStr,pcDstSize) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMLangConvertCharset_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_CMLangConvertCharset;

#ifdef __cplusplus

class DECLSPEC_UUID("d66d6f99-cdaa-11d0-b822-00c04fc9b31f")
CMLangConvertCharset;
#endif

#ifndef __IMultiLanguage_INTERFACE_DEFINED__
#define __IMultiLanguage_INTERFACE_DEFINED__

/* interface IMultiLanguage */
/* [local][unique][uuid][object] */ 

typedef /* [unique] */ IMultiLanguage *LPMULTILANGUAGE;


EXTERN_C const IID IID_IMultiLanguage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("275c23e1-3747-11d0-9fea-00aa003f8646")
    IMultiLanguage : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetNumberOfCodePageInfo( 
            /* [annotation][out] */ 
            __out  UINT *pcCodePage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCodePageInfo( 
            /* [in] */ UINT uiCodePage,
            /* [annotation][out] */ 
            __out  PMIMECPINFO pCodePageInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFamilyCodePage( 
            /* [in] */ UINT uiCodePage,
            /* [annotation][out] */ 
            __out  UINT *puiFamilyCodePage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumCodePages( 
            /* [in] */ DWORD grfFlags,
            /* [annotation][out] */ 
            __deref_out  IEnumCodePage **ppEnumCodePage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCharsetInfo( 
            /* [in] */ BSTR Charset,
            /* [annotation][out] */ 
            __out  PMIMECSETINFO pCharsetInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsConvertible( 
            /* [in] */ DWORD dwSrcEncoding,
            /* [in] */ DWORD dwDstEncoding) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConvertString( 
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwSrcEncoding,
            /* [in] */ DWORD dwDstEncoding,
            /* [annotation][in] */ 
            __in_bcount_opt(*pcSrcSize)  BYTE *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount_opt(*pcDstSize)  BYTE *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConvertStringToUnicode( 
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_bcount_opt(*pcSrcSize)  CHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_ecount_opt(*pcDstSize)  WCHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConvertStringFromUnicode( 
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_ecount_opt(*pcSrcSize)  WCHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount_opt(*pcDstSize)  CHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConvertStringReset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRfc1766FromLcid( 
            /* [in] */ LCID Locale,
            /* [annotation][out] */ 
            __deref_out  BSTR *pbstrRfc1766) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLcidFromRfc1766( 
            /* [annotation][out] */ 
            __out  LCID *pLocale,
            /* [annotation][in] */ 
            __in  BSTR bstrRfc1766) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumRfc1766( 
            /* [annotation][out] */ 
            __deref_out  IEnumRfc1766 **ppEnumRfc1766) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRfc1766Info( 
            /* [in] */ LCID Locale,
            /* [annotation][out] */ 
            __out  PRFC1766INFO pRfc1766Info) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateConvertCharset( 
            /* [in] */ UINT uiSrcCodePage,
            /* [in] */ UINT uiDstCodePage,
            /* [in] */ DWORD dwProperty,
            /* [annotation][out] */ 
            __deref_out  IMLangConvertCharset **ppMLangConvertCharset) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMultiLanguageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMultiLanguage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMultiLanguage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMultiLanguage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberOfCodePageInfo )( 
            IMultiLanguage * This,
            /* [annotation][out] */ 
            __out  UINT *pcCodePage);
        
        HRESULT ( STDMETHODCALLTYPE *GetCodePageInfo )( 
            IMultiLanguage * This,
            /* [in] */ UINT uiCodePage,
            /* [annotation][out] */ 
            __out  PMIMECPINFO pCodePageInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetFamilyCodePage )( 
            IMultiLanguage * This,
            /* [in] */ UINT uiCodePage,
            /* [annotation][out] */ 
            __out  UINT *puiFamilyCodePage);
        
        HRESULT ( STDMETHODCALLTYPE *EnumCodePages )( 
            IMultiLanguage * This,
            /* [in] */ DWORD grfFlags,
            /* [annotation][out] */ 
            __deref_out  IEnumCodePage **ppEnumCodePage);
        
        HRESULT ( STDMETHODCALLTYPE *GetCharsetInfo )( 
            IMultiLanguage * This,
            /* [in] */ BSTR Charset,
            /* [annotation][out] */ 
            __out  PMIMECSETINFO pCharsetInfo);
        
        HRESULT ( STDMETHODCALLTYPE *IsConvertible )( 
            IMultiLanguage * This,
            /* [in] */ DWORD dwSrcEncoding,
            /* [in] */ DWORD dwDstEncoding);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertString )( 
            IMultiLanguage * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwSrcEncoding,
            /* [in] */ DWORD dwDstEncoding,
            /* [annotation][in] */ 
            __in_bcount_opt(*pcSrcSize)  BYTE *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount_opt(*pcDstSize)  BYTE *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringToUnicode )( 
            IMultiLanguage * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_bcount_opt(*pcSrcSize)  CHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_ecount_opt(*pcDstSize)  WCHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringFromUnicode )( 
            IMultiLanguage * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_ecount_opt(*pcSrcSize)  WCHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount_opt(*pcDstSize)  CHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringReset )( 
            IMultiLanguage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetRfc1766FromLcid )( 
            IMultiLanguage * This,
            /* [in] */ LCID Locale,
            /* [annotation][out] */ 
            __deref_out  BSTR *pbstrRfc1766);
        
        HRESULT ( STDMETHODCALLTYPE *GetLcidFromRfc1766 )( 
            IMultiLanguage * This,
            /* [annotation][out] */ 
            __out  LCID *pLocale,
            /* [annotation][in] */ 
            __in  BSTR bstrRfc1766);
        
        HRESULT ( STDMETHODCALLTYPE *EnumRfc1766 )( 
            IMultiLanguage * This,
            /* [annotation][out] */ 
            __deref_out  IEnumRfc1766 **ppEnumRfc1766);
        
        HRESULT ( STDMETHODCALLTYPE *GetRfc1766Info )( 
            IMultiLanguage * This,
            /* [in] */ LCID Locale,
            /* [annotation][out] */ 
            __out  PRFC1766INFO pRfc1766Info);
        
        HRESULT ( STDMETHODCALLTYPE *CreateConvertCharset )( 
            IMultiLanguage * This,
            /* [in] */ UINT uiSrcCodePage,
            /* [in] */ UINT uiDstCodePage,
            /* [in] */ DWORD dwProperty,
            /* [annotation][out] */ 
            __deref_out  IMLangConvertCharset **ppMLangConvertCharset);
        
        END_INTERFACE
    } IMultiLanguageVtbl;

    interface IMultiLanguage
    {
        CONST_VTBL struct IMultiLanguageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMultiLanguage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMultiLanguage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMultiLanguage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMultiLanguage_GetNumberOfCodePageInfo(This,pcCodePage)	\
    ( (This)->lpVtbl -> GetNumberOfCodePageInfo(This,pcCodePage) ) 

#define IMultiLanguage_GetCodePageInfo(This,uiCodePage,pCodePageInfo)	\
    ( (This)->lpVtbl -> GetCodePageInfo(This,uiCodePage,pCodePageInfo) ) 

#define IMultiLanguage_GetFamilyCodePage(This,uiCodePage,puiFamilyCodePage)	\
    ( (This)->lpVtbl -> GetFamilyCodePage(This,uiCodePage,puiFamilyCodePage) ) 

#define IMultiLanguage_EnumCodePages(This,grfFlags,ppEnumCodePage)	\
    ( (This)->lpVtbl -> EnumCodePages(This,grfFlags,ppEnumCodePage) ) 

#define IMultiLanguage_GetCharsetInfo(This,Charset,pCharsetInfo)	\
    ( (This)->lpVtbl -> GetCharsetInfo(This,Charset,pCharsetInfo) ) 

#define IMultiLanguage_IsConvertible(This,dwSrcEncoding,dwDstEncoding)	\
    ( (This)->lpVtbl -> IsConvertible(This,dwSrcEncoding,dwDstEncoding) ) 

#define IMultiLanguage_ConvertString(This,pdwMode,dwSrcEncoding,dwDstEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize)	\
    ( (This)->lpVtbl -> ConvertString(This,pdwMode,dwSrcEncoding,dwDstEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize) ) 

#define IMultiLanguage_ConvertStringToUnicode(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize)	\
    ( (This)->lpVtbl -> ConvertStringToUnicode(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize) ) 

#define IMultiLanguage_ConvertStringFromUnicode(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize)	\
    ( (This)->lpVtbl -> ConvertStringFromUnicode(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize) ) 

#define IMultiLanguage_ConvertStringReset(This)	\
    ( (This)->lpVtbl -> ConvertStringReset(This) ) 

#define IMultiLanguage_GetRfc1766FromLcid(This,Locale,pbstrRfc1766)	\
    ( (This)->lpVtbl -> GetRfc1766FromLcid(This,Locale,pbstrRfc1766) ) 

#define IMultiLanguage_GetLcidFromRfc1766(This,pLocale,bstrRfc1766)	\
    ( (This)->lpVtbl -> GetLcidFromRfc1766(This,pLocale,bstrRfc1766) ) 

#define IMultiLanguage_EnumRfc1766(This,ppEnumRfc1766)	\
    ( (This)->lpVtbl -> EnumRfc1766(This,ppEnumRfc1766) ) 

#define IMultiLanguage_GetRfc1766Info(This,Locale,pRfc1766Info)	\
    ( (This)->lpVtbl -> GetRfc1766Info(This,Locale,pRfc1766Info) ) 

#define IMultiLanguage_CreateConvertCharset(This,uiSrcCodePage,uiDstCodePage,dwProperty,ppMLangConvertCharset)	\
    ( (This)->lpVtbl -> CreateConvertCharset(This,uiSrcCodePage,uiDstCodePage,dwProperty,ppMLangConvertCharset) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMultiLanguage_INTERFACE_DEFINED__ */


#ifndef __IMultiLanguage2_INTERFACE_DEFINED__
#define __IMultiLanguage2_INTERFACE_DEFINED__

/* interface IMultiLanguage2 */
/* [local][unique][uuid][object] */ 

typedef /* [unique] */ IMultiLanguage2 *LPMULTILANGUAGE2;

typedef 
enum tagMLDETECTCP
    {	MLDETECTCP_NONE	= 0,
	MLDETECTCP_7BIT	= 1,
	MLDETECTCP_8BIT	= 2,
	MLDETECTCP_DBCS	= 4,
	MLDETECTCP_HTML	= 8,
	MLDETECTCP_NUMBER	= 16
    } 	MLDETECTCP;

typedef struct tagDetectEncodingInfo
    {
    UINT nLangID;
    UINT nCodePage;
    INT nDocPercent;
    INT nConfidence;
    } 	DetectEncodingInfo;

typedef struct tagDetectEncodingInfo *pDetectEncodingInfo;

typedef 
enum tagSCRIPTFONTCONTF
    {	SCRIPTCONTF_FIXED_FONT	= 0x1,
	SCRIPTCONTF_PROPORTIONAL_FONT	= 0x2,
	SCRIPTCONTF_SCRIPT_USER	= 0x10000,
	SCRIPTCONTF_SCRIPT_HIDE	= 0x20000,
	SCRIPTCONTF_SCRIPT_SYSTEM	= 0x40000
    } 	SCRIPTFONTCONTF;

typedef struct tagSCRIPFONTINFO
    {
    SCRIPT_IDS scripts;
    WCHAR wszFont[ 32 ];
    } 	SCRIPTFONTINFO;

typedef struct tagSCRIPFONTINFO *PSCRIPTFONTINFO;


EXTERN_C const IID IID_IMultiLanguage2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCCFC164-2B38-11d2-B7EC-00C04F8F5D9A")
    IMultiLanguage2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetNumberOfCodePageInfo( 
            /* [annotation][out] */ 
            __out  UINT *pcCodePage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCodePageInfo( 
            /* [in] */ UINT uiCodePage,
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __out  PMIMECPINFO pCodePageInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFamilyCodePage( 
            /* [in] */ UINT uiCodePage,
            /* [annotation][out] */ 
            __out  UINT *puiFamilyCodePage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumCodePages( 
            /* [in] */ DWORD grfFlags,
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __deref_out  IEnumCodePage **ppEnumCodePage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCharsetInfo( 
            /* [in] */ BSTR Charset,
            /* [annotation][out] */ 
            __out  PMIMECSETINFO pCharsetInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsConvertible( 
            /* [in] */ DWORD dwSrcEncoding,
            /* [in] */ DWORD dwDstEncoding) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConvertString( 
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwSrcEncoding,
            /* [in] */ DWORD dwDstEncoding,
            /* [annotation][in] */ 
            __in_bcount_opt(*pcSrcSize)  BYTE *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount_opt(*pcDstSize)  BYTE *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConvertStringToUnicode( 
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_bcount_opt(*pcSrcSize)  CHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_ecount_opt(*pcDstSize)  WCHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConvertStringFromUnicode( 
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_ecount_opt(*pcSrcSize)  WCHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount_opt(*pcDstSize)  CHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConvertStringReset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRfc1766FromLcid( 
            /* [in] */ LCID Locale,
            /* [annotation][out] */ 
            __deref_out  BSTR *pbstrRfc1766) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLcidFromRfc1766( 
            /* [annotation][out] */ 
            __out  LCID *pLocale,
            /* [annotation][in] */ 
            __in  BSTR bstrRfc1766) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumRfc1766( 
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __deref_out  IEnumRfc1766 **ppEnumRfc1766) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRfc1766Info( 
            /* [in] */ LCID Locale,
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __out  PRFC1766INFO pRfc1766Info) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateConvertCharset( 
            /* [in] */ UINT uiSrcCodePage,
            /* [in] */ UINT uiDstCodePage,
            /* [in] */ DWORD dwProperty,
            /* [annotation][out] */ 
            __deref_out  IMLangConvertCharset **ppMLangConvertCharset) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConvertStringInIStream( 
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwFlag,
            /* [annotation][in] */ 
            __in_opt  WCHAR *lpFallBack,
            /* [in] */ DWORD dwSrcEncoding,
            /* [in] */ DWORD dwDstEncoding,
            /* [annotation][in] */ 
            __in  IStream *pstmIn,
            /* [annotation][in] */ 
            __in  IStream *pstmOut) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConvertStringToUnicodeEx( 
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_bcount(*pcSrcSize)  CHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_ecount(*pcDstSize)  WCHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize,
            /* [in] */ DWORD dwFlag,
            /* [annotation][in] */ 
            __in_opt  WCHAR *lpFallBack) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConvertStringFromUnicodeEx( 
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_ecount(*pcSrcSize)  WCHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount(*pcDstSize)  CHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize,
            /* [in] */ DWORD dwFlag,
            /* [annotation][in] */ 
            __in_opt  WCHAR *lpFallBack) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DetectCodepageInIStream( 
            /* [in] */ DWORD dwFlag,
            /* [in] */ DWORD dwPrefWinCodePage,
            /* [annotation][in] */ 
            __in  IStream *pstmIn,
            /* [annotation][out] */ 
            __out  DetectEncodingInfo *lpEncoding,
            /* [annotation][out][in] */ 
            __inout  INT *pnScores) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DetectInputCodepage( 
            /* [in] */ DWORD dwFlag,
            /* [in] */ DWORD dwPrefWinCodePage,
            /* [annotation][in] */ 
            __in_bcount(*pcSrcSize)  CHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout  INT *pcSrcSize,
            /* [annotation][out] */ 
            __out  DetectEncodingInfo *lpEncoding,
            /* [annotation][out][in] */ 
            __inout  INT *pnScores) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ValidateCodePage( 
            /* [in] */ UINT uiCodePage,
            /* [in] */ HWND hwnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCodePageDescription( 
            /* [in] */ UINT uiCodePage,
            /* [in] */ LCID lcid,
            /* [annotation][size_is][out] */ 
            __out_ecount(cchWideChar)  LPWSTR lpWideCharStr,
            /* [in] */ int cchWideChar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsCodePageInstallable( 
            /* [in] */ UINT uiCodePage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMimeDBSource( 
            /* [in] */ MIMECONTF dwSource) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumberOfScripts( 
            /* [annotation][out] */ 
            __out  UINT *pnScripts) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumScripts( 
            /* [in] */ DWORD dwFlags,
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __deref_out  IEnumScript **ppEnumScript) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ValidateCodePageEx( 
            /* [in] */ UINT uiCodePage,
            /* [in] */ HWND hwnd,
            /* [in] */ DWORD dwfIODControl) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMultiLanguage2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMultiLanguage2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMultiLanguage2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMultiLanguage2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberOfCodePageInfo )( 
            IMultiLanguage2 * This,
            /* [annotation][out] */ 
            __out  UINT *pcCodePage);
        
        HRESULT ( STDMETHODCALLTYPE *GetCodePageInfo )( 
            IMultiLanguage2 * This,
            /* [in] */ UINT uiCodePage,
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __out  PMIMECPINFO pCodePageInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetFamilyCodePage )( 
            IMultiLanguage2 * This,
            /* [in] */ UINT uiCodePage,
            /* [annotation][out] */ 
            __out  UINT *puiFamilyCodePage);
        
        HRESULT ( STDMETHODCALLTYPE *EnumCodePages )( 
            IMultiLanguage2 * This,
            /* [in] */ DWORD grfFlags,
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __deref_out  IEnumCodePage **ppEnumCodePage);
        
        HRESULT ( STDMETHODCALLTYPE *GetCharsetInfo )( 
            IMultiLanguage2 * This,
            /* [in] */ BSTR Charset,
            /* [annotation][out] */ 
            __out  PMIMECSETINFO pCharsetInfo);
        
        HRESULT ( STDMETHODCALLTYPE *IsConvertible )( 
            IMultiLanguage2 * This,
            /* [in] */ DWORD dwSrcEncoding,
            /* [in] */ DWORD dwDstEncoding);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertString )( 
            IMultiLanguage2 * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwSrcEncoding,
            /* [in] */ DWORD dwDstEncoding,
            /* [annotation][in] */ 
            __in_bcount_opt(*pcSrcSize)  BYTE *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount_opt(*pcDstSize)  BYTE *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringToUnicode )( 
            IMultiLanguage2 * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_bcount_opt(*pcSrcSize)  CHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_ecount_opt(*pcDstSize)  WCHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringFromUnicode )( 
            IMultiLanguage2 * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_ecount_opt(*pcSrcSize)  WCHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount_opt(*pcDstSize)  CHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringReset )( 
            IMultiLanguage2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetRfc1766FromLcid )( 
            IMultiLanguage2 * This,
            /* [in] */ LCID Locale,
            /* [annotation][out] */ 
            __deref_out  BSTR *pbstrRfc1766);
        
        HRESULT ( STDMETHODCALLTYPE *GetLcidFromRfc1766 )( 
            IMultiLanguage2 * This,
            /* [annotation][out] */ 
            __out  LCID *pLocale,
            /* [annotation][in] */ 
            __in  BSTR bstrRfc1766);
        
        HRESULT ( STDMETHODCALLTYPE *EnumRfc1766 )( 
            IMultiLanguage2 * This,
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __deref_out  IEnumRfc1766 **ppEnumRfc1766);
        
        HRESULT ( STDMETHODCALLTYPE *GetRfc1766Info )( 
            IMultiLanguage2 * This,
            /* [in] */ LCID Locale,
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __out  PRFC1766INFO pRfc1766Info);
        
        HRESULT ( STDMETHODCALLTYPE *CreateConvertCharset )( 
            IMultiLanguage2 * This,
            /* [in] */ UINT uiSrcCodePage,
            /* [in] */ UINT uiDstCodePage,
            /* [in] */ DWORD dwProperty,
            /* [annotation][out] */ 
            __deref_out  IMLangConvertCharset **ppMLangConvertCharset);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringInIStream )( 
            IMultiLanguage2 * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwFlag,
            /* [annotation][in] */ 
            __in_opt  WCHAR *lpFallBack,
            /* [in] */ DWORD dwSrcEncoding,
            /* [in] */ DWORD dwDstEncoding,
            /* [annotation][in] */ 
            __in  IStream *pstmIn,
            /* [annotation][in] */ 
            __in  IStream *pstmOut);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringToUnicodeEx )( 
            IMultiLanguage2 * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_bcount(*pcSrcSize)  CHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_ecount(*pcDstSize)  WCHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize,
            /* [in] */ DWORD dwFlag,
            /* [annotation][in] */ 
            __in_opt  WCHAR *lpFallBack);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringFromUnicodeEx )( 
            IMultiLanguage2 * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_ecount(*pcSrcSize)  WCHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount(*pcDstSize)  CHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize,
            /* [in] */ DWORD dwFlag,
            /* [annotation][in] */ 
            __in_opt  WCHAR *lpFallBack);
        
        HRESULT ( STDMETHODCALLTYPE *DetectCodepageInIStream )( 
            IMultiLanguage2 * This,
            /* [in] */ DWORD dwFlag,
            /* [in] */ DWORD dwPrefWinCodePage,
            /* [annotation][in] */ 
            __in  IStream *pstmIn,
            /* [annotation][out] */ 
            __out  DetectEncodingInfo *lpEncoding,
            /* [annotation][out][in] */ 
            __inout  INT *pnScores);
        
        HRESULT ( STDMETHODCALLTYPE *DetectInputCodepage )( 
            IMultiLanguage2 * This,
            /* [in] */ DWORD dwFlag,
            /* [in] */ DWORD dwPrefWinCodePage,
            /* [annotation][in] */ 
            __in_bcount(*pcSrcSize)  CHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout  INT *pcSrcSize,
            /* [annotation][out] */ 
            __out  DetectEncodingInfo *lpEncoding,
            /* [annotation][out][in] */ 
            __inout  INT *pnScores);
        
        HRESULT ( STDMETHODCALLTYPE *ValidateCodePage )( 
            IMultiLanguage2 * This,
            /* [in] */ UINT uiCodePage,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE *GetCodePageDescription )( 
            IMultiLanguage2 * This,
            /* [in] */ UINT uiCodePage,
            /* [in] */ LCID lcid,
            /* [annotation][size_is][out] */ 
            __out_ecount(cchWideChar)  LPWSTR lpWideCharStr,
            /* [in] */ int cchWideChar);
        
        HRESULT ( STDMETHODCALLTYPE *IsCodePageInstallable )( 
            IMultiLanguage2 * This,
            /* [in] */ UINT uiCodePage);
        
        HRESULT ( STDMETHODCALLTYPE *SetMimeDBSource )( 
            IMultiLanguage2 * This,
            /* [in] */ MIMECONTF dwSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberOfScripts )( 
            IMultiLanguage2 * This,
            /* [annotation][out] */ 
            __out  UINT *pnScripts);
        
        HRESULT ( STDMETHODCALLTYPE *EnumScripts )( 
            IMultiLanguage2 * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __deref_out  IEnumScript **ppEnumScript);
        
        HRESULT ( STDMETHODCALLTYPE *ValidateCodePageEx )( 
            IMultiLanguage2 * This,
            /* [in] */ UINT uiCodePage,
            /* [in] */ HWND hwnd,
            /* [in] */ DWORD dwfIODControl);
        
        END_INTERFACE
    } IMultiLanguage2Vtbl;

    interface IMultiLanguage2
    {
        CONST_VTBL struct IMultiLanguage2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMultiLanguage2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMultiLanguage2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMultiLanguage2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMultiLanguage2_GetNumberOfCodePageInfo(This,pcCodePage)	\
    ( (This)->lpVtbl -> GetNumberOfCodePageInfo(This,pcCodePage) ) 

#define IMultiLanguage2_GetCodePageInfo(This,uiCodePage,LangId,pCodePageInfo)	\
    ( (This)->lpVtbl -> GetCodePageInfo(This,uiCodePage,LangId,pCodePageInfo) ) 

#define IMultiLanguage2_GetFamilyCodePage(This,uiCodePage,puiFamilyCodePage)	\
    ( (This)->lpVtbl -> GetFamilyCodePage(This,uiCodePage,puiFamilyCodePage) ) 

#define IMultiLanguage2_EnumCodePages(This,grfFlags,LangId,ppEnumCodePage)	\
    ( (This)->lpVtbl -> EnumCodePages(This,grfFlags,LangId,ppEnumCodePage) ) 

#define IMultiLanguage2_GetCharsetInfo(This,Charset,pCharsetInfo)	\
    ( (This)->lpVtbl -> GetCharsetInfo(This,Charset,pCharsetInfo) ) 

#define IMultiLanguage2_IsConvertible(This,dwSrcEncoding,dwDstEncoding)	\
    ( (This)->lpVtbl -> IsConvertible(This,dwSrcEncoding,dwDstEncoding) ) 

#define IMultiLanguage2_ConvertString(This,pdwMode,dwSrcEncoding,dwDstEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize)	\
    ( (This)->lpVtbl -> ConvertString(This,pdwMode,dwSrcEncoding,dwDstEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize) ) 

#define IMultiLanguage2_ConvertStringToUnicode(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize)	\
    ( (This)->lpVtbl -> ConvertStringToUnicode(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize) ) 

#define IMultiLanguage2_ConvertStringFromUnicode(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize)	\
    ( (This)->lpVtbl -> ConvertStringFromUnicode(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize) ) 

#define IMultiLanguage2_ConvertStringReset(This)	\
    ( (This)->lpVtbl -> ConvertStringReset(This) ) 

#define IMultiLanguage2_GetRfc1766FromLcid(This,Locale,pbstrRfc1766)	\
    ( (This)->lpVtbl -> GetRfc1766FromLcid(This,Locale,pbstrRfc1766) ) 

#define IMultiLanguage2_GetLcidFromRfc1766(This,pLocale,bstrRfc1766)	\
    ( (This)->lpVtbl -> GetLcidFromRfc1766(This,pLocale,bstrRfc1766) ) 

#define IMultiLanguage2_EnumRfc1766(This,LangId,ppEnumRfc1766)	\
    ( (This)->lpVtbl -> EnumRfc1766(This,LangId,ppEnumRfc1766) ) 

#define IMultiLanguage2_GetRfc1766Info(This,Locale,LangId,pRfc1766Info)	\
    ( (This)->lpVtbl -> GetRfc1766Info(This,Locale,LangId,pRfc1766Info) ) 

#define IMultiLanguage2_CreateConvertCharset(This,uiSrcCodePage,uiDstCodePage,dwProperty,ppMLangConvertCharset)	\
    ( (This)->lpVtbl -> CreateConvertCharset(This,uiSrcCodePage,uiDstCodePage,dwProperty,ppMLangConvertCharset) ) 

#define IMultiLanguage2_ConvertStringInIStream(This,pdwMode,dwFlag,lpFallBack,dwSrcEncoding,dwDstEncoding,pstmIn,pstmOut)	\
    ( (This)->lpVtbl -> ConvertStringInIStream(This,pdwMode,dwFlag,lpFallBack,dwSrcEncoding,dwDstEncoding,pstmIn,pstmOut) ) 

#define IMultiLanguage2_ConvertStringToUnicodeEx(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize,dwFlag,lpFallBack)	\
    ( (This)->lpVtbl -> ConvertStringToUnicodeEx(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize,dwFlag,lpFallBack) ) 

#define IMultiLanguage2_ConvertStringFromUnicodeEx(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize,dwFlag,lpFallBack)	\
    ( (This)->lpVtbl -> ConvertStringFromUnicodeEx(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize,dwFlag,lpFallBack) ) 

#define IMultiLanguage2_DetectCodepageInIStream(This,dwFlag,dwPrefWinCodePage,pstmIn,lpEncoding,pnScores)	\
    ( (This)->lpVtbl -> DetectCodepageInIStream(This,dwFlag,dwPrefWinCodePage,pstmIn,lpEncoding,pnScores) ) 

#define IMultiLanguage2_DetectInputCodepage(This,dwFlag,dwPrefWinCodePage,pSrcStr,pcSrcSize,lpEncoding,pnScores)	\
    ( (This)->lpVtbl -> DetectInputCodepage(This,dwFlag,dwPrefWinCodePage,pSrcStr,pcSrcSize,lpEncoding,pnScores) ) 

#define IMultiLanguage2_ValidateCodePage(This,uiCodePage,hwnd)	\
    ( (This)->lpVtbl -> ValidateCodePage(This,uiCodePage,hwnd) ) 

#define IMultiLanguage2_GetCodePageDescription(This,uiCodePage,lcid,lpWideCharStr,cchWideChar)	\
    ( (This)->lpVtbl -> GetCodePageDescription(This,uiCodePage,lcid,lpWideCharStr,cchWideChar) ) 

#define IMultiLanguage2_IsCodePageInstallable(This,uiCodePage)	\
    ( (This)->lpVtbl -> IsCodePageInstallable(This,uiCodePage) ) 

#define IMultiLanguage2_SetMimeDBSource(This,dwSource)	\
    ( (This)->lpVtbl -> SetMimeDBSource(This,dwSource) ) 

#define IMultiLanguage2_GetNumberOfScripts(This,pnScripts)	\
    ( (This)->lpVtbl -> GetNumberOfScripts(This,pnScripts) ) 

#define IMultiLanguage2_EnumScripts(This,dwFlags,LangId,ppEnumScript)	\
    ( (This)->lpVtbl -> EnumScripts(This,dwFlags,LangId,ppEnumScript) ) 

#define IMultiLanguage2_ValidateCodePageEx(This,uiCodePage,hwnd,dwfIODControl)	\
    ( (This)->lpVtbl -> ValidateCodePageEx(This,uiCodePage,hwnd,dwfIODControl) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMultiLanguage2_INTERFACE_DEFINED__ */


#ifndef __IMLangCodePages_INTERFACE_DEFINED__
#define __IMLangCodePages_INTERFACE_DEFINED__

/* interface IMLangCodePages */
/* [object][local][unique][helpstring][uuid] */ 

typedef /* [unique] */ IMLangCodePages *PMLANGCODEPAGES;


EXTERN_C const IID IID_IMLangCodePages;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("359F3443-BD4A-11D0-B188-00AA0038C969")
    IMLangCodePages : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCharCodePages( 
            /* [in] */ WCHAR chSrc,
            /* [annotation][out] */ 
            __out  DWORD *pdwCodePages) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetStrCodePages( 
            /* [annotation][size_is][in] */ 
            __in_ecount(cchSrc)  const WCHAR *pszSrc,
            /* [in] */ long cchSrc,
            /* [in] */ DWORD dwPriorityCodePages,
            /* [annotation][out] */ 
            __out_opt  DWORD *pdwCodePages,
            /* [annotation][out] */ 
            __out_opt  long *pcchCodePages) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CodePageToCodePages( 
            /* [in] */ UINT uCodePage,
            /* [annotation][out] */ 
            __out  DWORD *pdwCodePages) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CodePagesToCodePage( 
            /* [in] */ DWORD dwCodePages,
            /* [in] */ UINT uDefaultCodePage,
            /* [annotation][out] */ 
            __out  UINT *puCodePage) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMLangCodePagesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMLangCodePages * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMLangCodePages * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMLangCodePages * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCharCodePages )( 
            IMLangCodePages * This,
            /* [in] */ WCHAR chSrc,
            /* [annotation][out] */ 
            __out  DWORD *pdwCodePages);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetStrCodePages )( 
            IMLangCodePages * This,
            /* [annotation][size_is][in] */ 
            __in_ecount(cchSrc)  const WCHAR *pszSrc,
            /* [in] */ long cchSrc,
            /* [in] */ DWORD dwPriorityCodePages,
            /* [annotation][out] */ 
            __out_opt  DWORD *pdwCodePages,
            /* [annotation][out] */ 
            __out_opt  long *pcchCodePages);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CodePageToCodePages )( 
            IMLangCodePages * This,
            /* [in] */ UINT uCodePage,
            /* [annotation][out] */ 
            __out  DWORD *pdwCodePages);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CodePagesToCodePage )( 
            IMLangCodePages * This,
            /* [in] */ DWORD dwCodePages,
            /* [in] */ UINT uDefaultCodePage,
            /* [annotation][out] */ 
            __out  UINT *puCodePage);
        
        END_INTERFACE
    } IMLangCodePagesVtbl;

    interface IMLangCodePages
    {
        CONST_VTBL struct IMLangCodePagesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMLangCodePages_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMLangCodePages_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMLangCodePages_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMLangCodePages_GetCharCodePages(This,chSrc,pdwCodePages)	\
    ( (This)->lpVtbl -> GetCharCodePages(This,chSrc,pdwCodePages) ) 

#define IMLangCodePages_GetStrCodePages(This,pszSrc,cchSrc,dwPriorityCodePages,pdwCodePages,pcchCodePages)	\
    ( (This)->lpVtbl -> GetStrCodePages(This,pszSrc,cchSrc,dwPriorityCodePages,pdwCodePages,pcchCodePages) ) 

#define IMLangCodePages_CodePageToCodePages(This,uCodePage,pdwCodePages)	\
    ( (This)->lpVtbl -> CodePageToCodePages(This,uCodePage,pdwCodePages) ) 

#define IMLangCodePages_CodePagesToCodePage(This,dwCodePages,uDefaultCodePage,puCodePage)	\
    ( (This)->lpVtbl -> CodePagesToCodePage(This,dwCodePages,uDefaultCodePage,puCodePage) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMLangCodePages_INTERFACE_DEFINED__ */


#ifndef __IMLangFontLink_INTERFACE_DEFINED__
#define __IMLangFontLink_INTERFACE_DEFINED__

/* interface IMLangFontLink */
/* [object][local][unique][helpstring][uuid] */ 

typedef /* [unique] */ IMLangFontLink *PMLANGFONTLINK;


EXTERN_C const IID IID_IMLangFontLink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("359F3441-BD4A-11D0-B188-00AA0038C969")
    IMLangFontLink : public IMLangCodePages
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFontCodePages( 
            /* [in] */ HDC hDC,
            /* [in] */ HFONT hFont,
            /* [annotation][out] */ 
            __out_opt  DWORD *pdwCodePages) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MapFont( 
            /* [in] */ HDC hDC,
            /* [in] */ DWORD dwCodePages,
            /* [in] */ HFONT hSrcFont,
            /* [annotation][out] */ 
            __out_opt  HFONT *phDestFont) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ReleaseFont( 
            /* [in] */ HFONT hFont) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ResetFontMapping( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMLangFontLinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMLangFontLink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMLangFontLink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMLangFontLink * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCharCodePages )( 
            IMLangFontLink * This,
            /* [in] */ WCHAR chSrc,
            /* [annotation][out] */ 
            __out  DWORD *pdwCodePages);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetStrCodePages )( 
            IMLangFontLink * This,
            /* [annotation][size_is][in] */ 
            __in_ecount(cchSrc)  const WCHAR *pszSrc,
            /* [in] */ long cchSrc,
            /* [in] */ DWORD dwPriorityCodePages,
            /* [annotation][out] */ 
            __out_opt  DWORD *pdwCodePages,
            /* [annotation][out] */ 
            __out_opt  long *pcchCodePages);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CodePageToCodePages )( 
            IMLangFontLink * This,
            /* [in] */ UINT uCodePage,
            /* [annotation][out] */ 
            __out  DWORD *pdwCodePages);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CodePagesToCodePage )( 
            IMLangFontLink * This,
            /* [in] */ DWORD dwCodePages,
            /* [in] */ UINT uDefaultCodePage,
            /* [annotation][out] */ 
            __out  UINT *puCodePage);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFontCodePages )( 
            IMLangFontLink * This,
            /* [in] */ HDC hDC,
            /* [in] */ HFONT hFont,
            /* [annotation][out] */ 
            __out_opt  DWORD *pdwCodePages);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MapFont )( 
            IMLangFontLink * This,
            /* [in] */ HDC hDC,
            /* [in] */ DWORD dwCodePages,
            /* [in] */ HFONT hSrcFont,
            /* [annotation][out] */ 
            __out_opt  HFONT *phDestFont);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ReleaseFont )( 
            IMLangFontLink * This,
            /* [in] */ HFONT hFont);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ResetFontMapping )( 
            IMLangFontLink * This);
        
        END_INTERFACE
    } IMLangFontLinkVtbl;

    interface IMLangFontLink
    {
        CONST_VTBL struct IMLangFontLinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMLangFontLink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMLangFontLink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMLangFontLink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMLangFontLink_GetCharCodePages(This,chSrc,pdwCodePages)	\
    ( (This)->lpVtbl -> GetCharCodePages(This,chSrc,pdwCodePages) ) 

#define IMLangFontLink_GetStrCodePages(This,pszSrc,cchSrc,dwPriorityCodePages,pdwCodePages,pcchCodePages)	\
    ( (This)->lpVtbl -> GetStrCodePages(This,pszSrc,cchSrc,dwPriorityCodePages,pdwCodePages,pcchCodePages) ) 

#define IMLangFontLink_CodePageToCodePages(This,uCodePage,pdwCodePages)	\
    ( (This)->lpVtbl -> CodePageToCodePages(This,uCodePage,pdwCodePages) ) 

#define IMLangFontLink_CodePagesToCodePage(This,dwCodePages,uDefaultCodePage,puCodePage)	\
    ( (This)->lpVtbl -> CodePagesToCodePage(This,dwCodePages,uDefaultCodePage,puCodePage) ) 


#define IMLangFontLink_GetFontCodePages(This,hDC,hFont,pdwCodePages)	\
    ( (This)->lpVtbl -> GetFontCodePages(This,hDC,hFont,pdwCodePages) ) 

#define IMLangFontLink_MapFont(This,hDC,dwCodePages,hSrcFont,phDestFont)	\
    ( (This)->lpVtbl -> MapFont(This,hDC,dwCodePages,hSrcFont,phDestFont) ) 

#define IMLangFontLink_ReleaseFont(This,hFont)	\
    ( (This)->lpVtbl -> ReleaseFont(This,hFont) ) 

#define IMLangFontLink_ResetFontMapping(This)	\
    ( (This)->lpVtbl -> ResetFontMapping(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMLangFontLink_INTERFACE_DEFINED__ */


#ifndef __IMLangFontLink2_INTERFACE_DEFINED__
#define __IMLangFontLink2_INTERFACE_DEFINED__

/* interface IMLangFontLink2 */
/* [object][local][unique][helpstring][uuid] */ 

typedef struct tagUNICODERANGE
    {
    WCHAR wcFrom;
    WCHAR wcTo;
    } 	UNICODERANGE;

typedef /* [unique] */ IMLangFontLink2 *PMLANGFONTLINK2;


EXTERN_C const IID IID_IMLangFontLink2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DCCFC162-2B38-11d2-B7EC-00C04F8F5D9A")
    IMLangFontLink2 : public IMLangCodePages
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFontCodePages( 
            /* [in] */ HDC hDC,
            /* [in] */ HFONT hFont,
            /* [annotation][out] */ 
            __out_opt  DWORD *pdwCodePages) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ReleaseFont( 
            /* [in] */ HFONT hFont) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ResetFontMapping( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MapFont( 
            /* [in] */ HDC hDC,
            /* [in] */ DWORD dwCodePages,
            /* [in] */ WCHAR chSrc,
            /* [annotation][out] */ 
            __out_opt  HFONT *pFont) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFontUnicodeRanges( 
            /* [in] */ HDC hDC,
            /* [annotation][out][in] */ 
            __in  UINT *puiRanges,
            /* [annotation][out] */ 
            __out_opt  UNICODERANGE *pUranges) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetScriptFontInfo( 
            /* [in] */ SCRIPT_ID sid,
            /* [in] */ DWORD dwFlags,
            /* [annotation][out][in] */ 
            __inout  UINT *puiFonts,
            /* [annotation][out] */ 
            __out_opt  SCRIPTFONTINFO *pScriptFont) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CodePageToScriptID( 
            /* [in] */ UINT uiCodePage,
            /* [annotation][out] */ 
            __out  SCRIPT_ID *pSid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMLangFontLink2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMLangFontLink2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMLangFontLink2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMLangFontLink2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCharCodePages )( 
            IMLangFontLink2 * This,
            /* [in] */ WCHAR chSrc,
            /* [annotation][out] */ 
            __out  DWORD *pdwCodePages);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetStrCodePages )( 
            IMLangFontLink2 * This,
            /* [annotation][size_is][in] */ 
            __in_ecount(cchSrc)  const WCHAR *pszSrc,
            /* [in] */ long cchSrc,
            /* [in] */ DWORD dwPriorityCodePages,
            /* [annotation][out] */ 
            __out_opt  DWORD *pdwCodePages,
            /* [annotation][out] */ 
            __out_opt  long *pcchCodePages);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CodePageToCodePages )( 
            IMLangFontLink2 * This,
            /* [in] */ UINT uCodePage,
            /* [annotation][out] */ 
            __out  DWORD *pdwCodePages);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CodePagesToCodePage )( 
            IMLangFontLink2 * This,
            /* [in] */ DWORD dwCodePages,
            /* [in] */ UINT uDefaultCodePage,
            /* [annotation][out] */ 
            __out  UINT *puCodePage);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFontCodePages )( 
            IMLangFontLink2 * This,
            /* [in] */ HDC hDC,
            /* [in] */ HFONT hFont,
            /* [annotation][out] */ 
            __out_opt  DWORD *pdwCodePages);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ReleaseFont )( 
            IMLangFontLink2 * This,
            /* [in] */ HFONT hFont);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ResetFontMapping )( 
            IMLangFontLink2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MapFont )( 
            IMLangFontLink2 * This,
            /* [in] */ HDC hDC,
            /* [in] */ DWORD dwCodePages,
            /* [in] */ WCHAR chSrc,
            /* [annotation][out] */ 
            __out_opt  HFONT *pFont);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFontUnicodeRanges )( 
            IMLangFontLink2 * This,
            /* [in] */ HDC hDC,
            /* [annotation][out][in] */ 
            __in  UINT *puiRanges,
            /* [annotation][out] */ 
            __out_opt  UNICODERANGE *pUranges);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetScriptFontInfo )( 
            IMLangFontLink2 * This,
            /* [in] */ SCRIPT_ID sid,
            /* [in] */ DWORD dwFlags,
            /* [annotation][out][in] */ 
            __inout  UINT *puiFonts,
            /* [annotation][out] */ 
            __out_opt  SCRIPTFONTINFO *pScriptFont);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CodePageToScriptID )( 
            IMLangFontLink2 * This,
            /* [in] */ UINT uiCodePage,
            /* [annotation][out] */ 
            __out  SCRIPT_ID *pSid);
        
        END_INTERFACE
    } IMLangFontLink2Vtbl;

    interface IMLangFontLink2
    {
        CONST_VTBL struct IMLangFontLink2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMLangFontLink2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMLangFontLink2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMLangFontLink2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMLangFontLink2_GetCharCodePages(This,chSrc,pdwCodePages)	\
    ( (This)->lpVtbl -> GetCharCodePages(This,chSrc,pdwCodePages) ) 

#define IMLangFontLink2_GetStrCodePages(This,pszSrc,cchSrc,dwPriorityCodePages,pdwCodePages,pcchCodePages)	\
    ( (This)->lpVtbl -> GetStrCodePages(This,pszSrc,cchSrc,dwPriorityCodePages,pdwCodePages,pcchCodePages) ) 

#define IMLangFontLink2_CodePageToCodePages(This,uCodePage,pdwCodePages)	\
    ( (This)->lpVtbl -> CodePageToCodePages(This,uCodePage,pdwCodePages) ) 

#define IMLangFontLink2_CodePagesToCodePage(This,dwCodePages,uDefaultCodePage,puCodePage)	\
    ( (This)->lpVtbl -> CodePagesToCodePage(This,dwCodePages,uDefaultCodePage,puCodePage) ) 


#define IMLangFontLink2_GetFontCodePages(This,hDC,hFont,pdwCodePages)	\
    ( (This)->lpVtbl -> GetFontCodePages(This,hDC,hFont,pdwCodePages) ) 

#define IMLangFontLink2_ReleaseFont(This,hFont)	\
    ( (This)->lpVtbl -> ReleaseFont(This,hFont) ) 

#define IMLangFontLink2_ResetFontMapping(This)	\
    ( (This)->lpVtbl -> ResetFontMapping(This) ) 

#define IMLangFontLink2_MapFont(This,hDC,dwCodePages,chSrc,pFont)	\
    ( (This)->lpVtbl -> MapFont(This,hDC,dwCodePages,chSrc,pFont) ) 

#define IMLangFontLink2_GetFontUnicodeRanges(This,hDC,puiRanges,pUranges)	\
    ( (This)->lpVtbl -> GetFontUnicodeRanges(This,hDC,puiRanges,pUranges) ) 

#define IMLangFontLink2_GetScriptFontInfo(This,sid,dwFlags,puiFonts,pScriptFont)	\
    ( (This)->lpVtbl -> GetScriptFontInfo(This,sid,dwFlags,puiFonts,pScriptFont) ) 

#define IMLangFontLink2_CodePageToScriptID(This,uiCodePage,pSid)	\
    ( (This)->lpVtbl -> CodePageToScriptID(This,uiCodePage,pSid) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMLangFontLink2_INTERFACE_DEFINED__ */


#ifndef __IMultiLanguage3_INTERFACE_DEFINED__
#define __IMultiLanguage3_INTERFACE_DEFINED__

/* interface IMultiLanguage3 */
/* [local][unique][uuid][object] */ 

typedef /* [unique] */ IMultiLanguage3 *LPMULTILANGUAGE3;


EXTERN_C const IID IID_IMultiLanguage3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4e5868ab-b157-4623-9acc-6a1d9caebe04")
    IMultiLanguage3 : public IMultiLanguage2
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE DetectOutboundCodePage( 
            /* [in] */ DWORD dwFlags,
            /* [annotation][size_is][in] */ 
            __in_ecount(cchWideChar)  LPCWSTR lpWideCharStr,
            /* [in] */ UINT cchWideChar,
            /* [annotation][size_is][in] */ 
            __in_ecount_opt(nPreferredCodePages)  const UINT *puiPreferredCodePages,
            /* [in] */ UINT nPreferredCodePages,
            /* [annotation][size_is][out] */ 
            __out_ecount_part(*pnDetectedCodePages, *pnDetectedCodePages)  UINT *puiDetectedCodePages,
            /* [annotation][out][in] */ 
            __inout  UINT *pnDetectedCodePages,
            /* [annotation][string][unique][in] */ 
            __in_opt  LPCWSTR lpSpecialChar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DetectOutboundCodePageInIStream( 
            /* [in] */ DWORD dwFlags,
            /* [annotation][in] */ 
            __in  IStream *pStrIn,
            /* [annotation][size_is][in] */ 
            __in_ecount_opt(nPreferredCodePages)  const UINT *puiPreferredCodePages,
            /* [in] */ UINT nPreferredCodePages,
            /* [annotation][size_is][out] */ 
            __out_ecount_part(*pnDetectedCodePages, *pnDetectedCodePages)  UINT *puiDetectedCodePages,
            /* [annotation][out][in] */ 
            __inout  UINT *pnDetectedCodePages,
            /* [annotation][string][unique][in] */ 
            __in_opt  LPCWSTR lpSpecialChar) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMultiLanguage3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMultiLanguage3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMultiLanguage3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMultiLanguage3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberOfCodePageInfo )( 
            IMultiLanguage3 * This,
            /* [annotation][out] */ 
            __out  UINT *pcCodePage);
        
        HRESULT ( STDMETHODCALLTYPE *GetCodePageInfo )( 
            IMultiLanguage3 * This,
            /* [in] */ UINT uiCodePage,
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __out  PMIMECPINFO pCodePageInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetFamilyCodePage )( 
            IMultiLanguage3 * This,
            /* [in] */ UINT uiCodePage,
            /* [annotation][out] */ 
            __out  UINT *puiFamilyCodePage);
        
        HRESULT ( STDMETHODCALLTYPE *EnumCodePages )( 
            IMultiLanguage3 * This,
            /* [in] */ DWORD grfFlags,
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __deref_out  IEnumCodePage **ppEnumCodePage);
        
        HRESULT ( STDMETHODCALLTYPE *GetCharsetInfo )( 
            IMultiLanguage3 * This,
            /* [in] */ BSTR Charset,
            /* [annotation][out] */ 
            __out  PMIMECSETINFO pCharsetInfo);
        
        HRESULT ( STDMETHODCALLTYPE *IsConvertible )( 
            IMultiLanguage3 * This,
            /* [in] */ DWORD dwSrcEncoding,
            /* [in] */ DWORD dwDstEncoding);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertString )( 
            IMultiLanguage3 * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwSrcEncoding,
            /* [in] */ DWORD dwDstEncoding,
            /* [annotation][in] */ 
            __in_bcount_opt(*pcSrcSize)  BYTE *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount_opt(*pcDstSize)  BYTE *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringToUnicode )( 
            IMultiLanguage3 * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_bcount_opt(*pcSrcSize)  CHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_ecount_opt(*pcDstSize)  WCHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringFromUnicode )( 
            IMultiLanguage3 * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_ecount_opt(*pcSrcSize)  WCHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount_opt(*pcDstSize)  CHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringReset )( 
            IMultiLanguage3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetRfc1766FromLcid )( 
            IMultiLanguage3 * This,
            /* [in] */ LCID Locale,
            /* [annotation][out] */ 
            __deref_out  BSTR *pbstrRfc1766);
        
        HRESULT ( STDMETHODCALLTYPE *GetLcidFromRfc1766 )( 
            IMultiLanguage3 * This,
            /* [annotation][out] */ 
            __out  LCID *pLocale,
            /* [annotation][in] */ 
            __in  BSTR bstrRfc1766);
        
        HRESULT ( STDMETHODCALLTYPE *EnumRfc1766 )( 
            IMultiLanguage3 * This,
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __deref_out  IEnumRfc1766 **ppEnumRfc1766);
        
        HRESULT ( STDMETHODCALLTYPE *GetRfc1766Info )( 
            IMultiLanguage3 * This,
            /* [in] */ LCID Locale,
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __out  PRFC1766INFO pRfc1766Info);
        
        HRESULT ( STDMETHODCALLTYPE *CreateConvertCharset )( 
            IMultiLanguage3 * This,
            /* [in] */ UINT uiSrcCodePage,
            /* [in] */ UINT uiDstCodePage,
            /* [in] */ DWORD dwProperty,
            /* [annotation][out] */ 
            __deref_out  IMLangConvertCharset **ppMLangConvertCharset);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringInIStream )( 
            IMultiLanguage3 * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwFlag,
            /* [annotation][in] */ 
            __in_opt  WCHAR *lpFallBack,
            /* [in] */ DWORD dwSrcEncoding,
            /* [in] */ DWORD dwDstEncoding,
            /* [annotation][in] */ 
            __in  IStream *pstmIn,
            /* [annotation][in] */ 
            __in  IStream *pstmOut);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringToUnicodeEx )( 
            IMultiLanguage3 * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_bcount(*pcSrcSize)  CHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_ecount(*pcDstSize)  WCHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize,
            /* [in] */ DWORD dwFlag,
            /* [annotation][in] */ 
            __in_opt  WCHAR *lpFallBack);
        
        HRESULT ( STDMETHODCALLTYPE *ConvertStringFromUnicodeEx )( 
            IMultiLanguage3 * This,
            /* [annotation][out][in] */ 
            __inout_opt  DWORD *pdwMode,
            /* [in] */ DWORD dwEncoding,
            /* [annotation][in] */ 
            __in_ecount(*pcSrcSize)  WCHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcSrcSize,
            /* [annotation][out] */ 
            __out_bcount(*pcDstSize)  CHAR *pDstStr,
            /* [annotation][out][in] */ 
            __inout_opt  UINT *pcDstSize,
            /* [in] */ DWORD dwFlag,
            /* [annotation][in] */ 
            __in_opt  WCHAR *lpFallBack);
        
        HRESULT ( STDMETHODCALLTYPE *DetectCodepageInIStream )( 
            IMultiLanguage3 * This,
            /* [in] */ DWORD dwFlag,
            /* [in] */ DWORD dwPrefWinCodePage,
            /* [annotation][in] */ 
            __in  IStream *pstmIn,
            /* [annotation][out] */ 
            __out  DetectEncodingInfo *lpEncoding,
            /* [annotation][out][in] */ 
            __inout  INT *pnScores);
        
        HRESULT ( STDMETHODCALLTYPE *DetectInputCodepage )( 
            IMultiLanguage3 * This,
            /* [in] */ DWORD dwFlag,
            /* [in] */ DWORD dwPrefWinCodePage,
            /* [annotation][in] */ 
            __in_bcount(*pcSrcSize)  CHAR *pSrcStr,
            /* [annotation][out][in] */ 
            __inout  INT *pcSrcSize,
            /* [annotation][out] */ 
            __out  DetectEncodingInfo *lpEncoding,
            /* [annotation][out][in] */ 
            __inout  INT *pnScores);
        
        HRESULT ( STDMETHODCALLTYPE *ValidateCodePage )( 
            IMultiLanguage3 * This,
            /* [in] */ UINT uiCodePage,
            /* [in] */ HWND hwnd);
        
        HRESULT ( STDMETHODCALLTYPE *GetCodePageDescription )( 
            IMultiLanguage3 * This,
            /* [in] */ UINT uiCodePage,
            /* [in] */ LCID lcid,
            /* [annotation][size_is][out] */ 
            __out_ecount(cchWideChar)  LPWSTR lpWideCharStr,
            /* [in] */ int cchWideChar);
        
        HRESULT ( STDMETHODCALLTYPE *IsCodePageInstallable )( 
            IMultiLanguage3 * This,
            /* [in] */ UINT uiCodePage);
        
        HRESULT ( STDMETHODCALLTYPE *SetMimeDBSource )( 
            IMultiLanguage3 * This,
            /* [in] */ MIMECONTF dwSource);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberOfScripts )( 
            IMultiLanguage3 * This,
            /* [annotation][out] */ 
            __out  UINT *pnScripts);
        
        HRESULT ( STDMETHODCALLTYPE *EnumScripts )( 
            IMultiLanguage3 * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ LANGID LangId,
            /* [annotation][out] */ 
            __deref_out  IEnumScript **ppEnumScript);
        
        HRESULT ( STDMETHODCALLTYPE *ValidateCodePageEx )( 
            IMultiLanguage3 * This,
            /* [in] */ UINT uiCodePage,
            /* [in] */ HWND hwnd,
            /* [in] */ DWORD dwfIODControl);
        
        HRESULT ( STDMETHODCALLTYPE *DetectOutboundCodePage )( 
            IMultiLanguage3 * This,
            /* [in] */ DWORD dwFlags,
            /* [annotation][size_is][in] */ 
            __in_ecount(cchWideChar)  LPCWSTR lpWideCharStr,
            /* [in] */ UINT cchWideChar,
            /* [annotation][size_is][in] */ 
            __in_ecount_opt(nPreferredCodePages)  const UINT *puiPreferredCodePages,
            /* [in] */ UINT nPreferredCodePages,
            /* [annotation][size_is][out] */ 
            __out_ecount_part(*pnDetectedCodePages, *pnDetectedCodePages)  UINT *puiDetectedCodePages,
            /* [annotation][out][in] */ 
            __inout  UINT *pnDetectedCodePages,
            /* [annotation][string][unique][in] */ 
            __in_opt  LPCWSTR lpSpecialChar);
        
        HRESULT ( STDMETHODCALLTYPE *DetectOutboundCodePageInIStream )( 
            IMultiLanguage3 * This,
            /* [in] */ DWORD dwFlags,
            /* [annotation][in] */ 
            __in  IStream *pStrIn,
            /* [annotation][size_is][in] */ 
            __in_ecount_opt(nPreferredCodePages)  const UINT *puiPreferredCodePages,
            /* [in] */ UINT nPreferredCodePages,
            /* [annotation][size_is][out] */ 
            __out_ecount_part(*pnDetectedCodePages, *pnDetectedCodePages)  UINT *puiDetectedCodePages,
            /* [annotation][out][in] */ 
            __inout  UINT *pnDetectedCodePages,
            /* [annotation][string][unique][in] */ 
            __in_opt  LPCWSTR lpSpecialChar);
        
        END_INTERFACE
    } IMultiLanguage3Vtbl;

    interface IMultiLanguage3
    {
        CONST_VTBL struct IMultiLanguage3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMultiLanguage3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMultiLanguage3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMultiLanguage3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMultiLanguage3_GetNumberOfCodePageInfo(This,pcCodePage)	\
    ( (This)->lpVtbl -> GetNumberOfCodePageInfo(This,pcCodePage) ) 

#define IMultiLanguage3_GetCodePageInfo(This,uiCodePage,LangId,pCodePageInfo)	\
    ( (This)->lpVtbl -> GetCodePageInfo(This,uiCodePage,LangId,pCodePageInfo) ) 

#define IMultiLanguage3_GetFamilyCodePage(This,uiCodePage,puiFamilyCodePage)	\
    ( (This)->lpVtbl -> GetFamilyCodePage(This,uiCodePage,puiFamilyCodePage) ) 

#define IMultiLanguage3_EnumCodePages(This,grfFlags,LangId,ppEnumCodePage)	\
    ( (This)->lpVtbl -> EnumCodePages(This,grfFlags,LangId,ppEnumCodePage) ) 

#define IMultiLanguage3_GetCharsetInfo(This,Charset,pCharsetInfo)	\
    ( (This)->lpVtbl -> GetCharsetInfo(This,Charset,pCharsetInfo) ) 

#define IMultiLanguage3_IsConvertible(This,dwSrcEncoding,dwDstEncoding)	\
    ( (This)->lpVtbl -> IsConvertible(This,dwSrcEncoding,dwDstEncoding) ) 

#define IMultiLanguage3_ConvertString(This,pdwMode,dwSrcEncoding,dwDstEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize)	\
    ( (This)->lpVtbl -> ConvertString(This,pdwMode,dwSrcEncoding,dwDstEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize) ) 

#define IMultiLanguage3_ConvertStringToUnicode(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize)	\
    ( (This)->lpVtbl -> ConvertStringToUnicode(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize) ) 

#define IMultiLanguage3_ConvertStringFromUnicode(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize)	\
    ( (This)->lpVtbl -> ConvertStringFromUnicode(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize) ) 

#define IMultiLanguage3_ConvertStringReset(This)	\
    ( (This)->lpVtbl -> ConvertStringReset(This) ) 

#define IMultiLanguage3_GetRfc1766FromLcid(This,Locale,pbstrRfc1766)	\
    ( (This)->lpVtbl -> GetRfc1766FromLcid(This,Locale,pbstrRfc1766) ) 

#define IMultiLanguage3_GetLcidFromRfc1766(This,pLocale,bstrRfc1766)	\
    ( (This)->lpVtbl -> GetLcidFromRfc1766(This,pLocale,bstrRfc1766) ) 

#define IMultiLanguage3_EnumRfc1766(This,LangId,ppEnumRfc1766)	\
    ( (This)->lpVtbl -> EnumRfc1766(This,LangId,ppEnumRfc1766) ) 

#define IMultiLanguage3_GetRfc1766Info(This,Locale,LangId,pRfc1766Info)	\
    ( (This)->lpVtbl -> GetRfc1766Info(This,Locale,LangId,pRfc1766Info) ) 

#define IMultiLanguage3_CreateConvertCharset(This,uiSrcCodePage,uiDstCodePage,dwProperty,ppMLangConvertCharset)	\
    ( (This)->lpVtbl -> CreateConvertCharset(This,uiSrcCodePage,uiDstCodePage,dwProperty,ppMLangConvertCharset) ) 

#define IMultiLanguage3_ConvertStringInIStream(This,pdwMode,dwFlag,lpFallBack,dwSrcEncoding,dwDstEncoding,pstmIn,pstmOut)	\
    ( (This)->lpVtbl -> ConvertStringInIStream(This,pdwMode,dwFlag,lpFallBack,dwSrcEncoding,dwDstEncoding,pstmIn,pstmOut) ) 

#define IMultiLanguage3_ConvertStringToUnicodeEx(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize,dwFlag,lpFallBack)	\
    ( (This)->lpVtbl -> ConvertStringToUnicodeEx(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize,dwFlag,lpFallBack) ) 

#define IMultiLanguage3_ConvertStringFromUnicodeEx(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize,dwFlag,lpFallBack)	\
    ( (This)->lpVtbl -> ConvertStringFromUnicodeEx(This,pdwMode,dwEncoding,pSrcStr,pcSrcSize,pDstStr,pcDstSize,dwFlag,lpFallBack) ) 

#define IMultiLanguage3_DetectCodepageInIStream(This,dwFlag,dwPrefWinCodePage,pstmIn,lpEncoding,pnScores)	\
    ( (This)->lpVtbl -> DetectCodepageInIStream(This,dwFlag,dwPrefWinCodePage,pstmIn,lpEncoding,pnScores) ) 

#define IMultiLanguage3_DetectInputCodepage(This,dwFlag,dwPrefWinCodePage,pSrcStr,pcSrcSize,lpEncoding,pnScores)	\
    ( (This)->lpVtbl -> DetectInputCodepage(This,dwFlag,dwPrefWinCodePage,pSrcStr,pcSrcSize,lpEncoding,pnScores) ) 

#define IMultiLanguage3_ValidateCodePage(This,uiCodePage,hwnd)	\
    ( (This)->lpVtbl -> ValidateCodePage(This,uiCodePage,hwnd) ) 

#define IMultiLanguage3_GetCodePageDescription(This,uiCodePage,lcid,lpWideCharStr,cchWideChar)	\
    ( (This)->lpVtbl -> GetCodePageDescription(This,uiCodePage,lcid,lpWideCharStr,cchWideChar) ) 

#define IMultiLanguage3_IsCodePageInstallable(This,uiCodePage)	\
    ( (This)->lpVtbl -> IsCodePageInstallable(This,uiCodePage) ) 

#define IMultiLanguage3_SetMimeDBSource(This,dwSource)	\
    ( (This)->lpVtbl -> SetMimeDBSource(This,dwSource) ) 

#define IMultiLanguage3_GetNumberOfScripts(This,pnScripts)	\
    ( (This)->lpVtbl -> GetNumberOfScripts(This,pnScripts) ) 

#define IMultiLanguage3_EnumScripts(This,dwFlags,LangId,ppEnumScript)	\
    ( (This)->lpVtbl -> EnumScripts(This,dwFlags,LangId,ppEnumScript) ) 

#define IMultiLanguage3_ValidateCodePageEx(This,uiCodePage,hwnd,dwfIODControl)	\
    ( (This)->lpVtbl -> ValidateCodePageEx(This,uiCodePage,hwnd,dwfIODControl) ) 


#define IMultiLanguage3_DetectOutboundCodePage(This,dwFlags,lpWideCharStr,cchWideChar,puiPreferredCodePages,nPreferredCodePages,puiDetectedCodePages,pnDetectedCodePages,lpSpecialChar)	\
    ( (This)->lpVtbl -> DetectOutboundCodePage(This,dwFlags,lpWideCharStr,cchWideChar,puiPreferredCodePages,nPreferredCodePages,puiDetectedCodePages,pnDetectedCodePages,lpSpecialChar) ) 

#define IMultiLanguage3_DetectOutboundCodePageInIStream(This,dwFlags,pStrIn,puiPreferredCodePages,nPreferredCodePages,puiDetectedCodePages,pnDetectedCodePages,lpSpecialChar)	\
    ( (This)->lpVtbl -> DetectOutboundCodePageInIStream(This,dwFlags,pStrIn,puiPreferredCodePages,nPreferredCodePages,puiDetectedCodePages,pnDetectedCodePages,lpSpecialChar) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMultiLanguage3_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_CMultiLanguage;

#ifdef __cplusplus

class DECLSPEC_UUID("275c23e2-3747-11d0-9fea-00aa003f8646")
CMultiLanguage;
#endif
#endif /* __MultiLanguage_LIBRARY_DEFINED__ */

/* interface __MIDL_itf_mlang_0001_0019 */
/* [local] */ 

#ifndef _MLANG_H_API_DEF_                                                     
#define _MLANG_H_API_DEF_                                                     
                                                                              
// APIs prototypes                                                            
STDAPI LcidToRfc1766A(__in LCID Locale, __out_bcount(iMaxLength) LPSTR pszRfc1766, __in int iMaxLength);         
STDAPI LcidToRfc1766W(__in LCID Locale, __out_ecount(nChar) LPWSTR pwszRfc1766, __in int nChar);             
#ifdef UNICODE                                                                
#define LcidToRfc1766        LcidToRfc1766W                                   
#else                                                                         
#define LcidToRfc1766        LcidToRfc1766A                                   
#endif                                                                        
STDAPI Rfc1766ToLcidA(__out LCID *pLocale, __in LPCSTR pszRfc1766);           
STDAPI Rfc1766ToLcidW(__out LCID *pLocale, __in LPCWSTR pszRfc1766);          
#ifdef UNICODE                                                                
#define Rfc1766ToLcid        Rfc1766ToLcidW                                   
#else                                                                         
#define Rfc1766ToLcid        Rfc1766ToLcidA                                   
#endif                                                                        
                                                                              
STDAPI IsConvertINetStringAvailable(DWORD dwSrcEncoding, DWORD dwDstEncoding);
STDAPI ConvertINetString(__inout_opt LPDWORD lpdwMode, __in DWORD dwSrcEncoding, __in DWORD dwDstEncoding, __in_bcount_opt(*lpnSrcSize) LPCSTR lpSrcStr, __inout_opt LPINT lpnSrcSize, __out_bcount_opt(*lpnDstSize) LPSTR lpDstStr, __inout_opt LPINT lpnDstSize); 
STDAPI ConvertINetMultiByteToUnicode(__inout_opt LPDWORD lpdwMode, __in DWORD dwEncoding, __in_opt LPCSTR lpSrcStr, __inout_opt LPINT lpnMultiCharCount, __out_ecount_opt(*lpnWideCharCount) LPWSTR lpDstStr, __inout_opt LPINT lpnWideCharCount); 
STDAPI ConvertINetUnicodeToMultiByte(__inout_opt LPDWORD lpdwMode, __in DWORD dwEncoding, __in_opt LPCWSTR lpSrcStr, __inout_opt LPINT lpnWideCharCount, __out_bcount_opt(*lpnMultiCharCount) LPSTR lpDstStr, __inout_opt LPINT lpnMultiCharCount); 
                                                                              
#endif // _MLANG_H_API_DEF_                                                   


extern RPC_IF_HANDLE __MIDL_itf_mlang_0001_0019_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mlang_0001_0019_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\mixerocx.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mixerocx.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mixerocx_h__
#define __mixerocx_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IMixerOCXNotify_FWD_DEFINED__
#define __IMixerOCXNotify_FWD_DEFINED__
typedef interface IMixerOCXNotify IMixerOCXNotify;
#endif 	/* __IMixerOCXNotify_FWD_DEFINED__ */


#ifndef __IMixerOCX_FWD_DEFINED__
#define __IMixerOCX_FWD_DEFINED__
typedef interface IMixerOCX IMixerOCX;
#endif 	/* __IMixerOCX_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mixerocx_0000_0000 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_mixerocx_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mixerocx_0000_0000_v0_0_s_ifspec;

#ifndef __IMixerOCXNotify_INTERFACE_DEFINED__
#define __IMixerOCXNotify_INTERFACE_DEFINED__

/* interface IMixerOCXNotify */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMixerOCXNotify;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("81A3BD31-DEE1-11d1-8508-00A0C91F9CA0")
    IMixerOCXNotify : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnInvalidateRect( 
            /* [in] */ __RPC__in LPCRECT lpcRect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnStatusChange( 
            /* [in] */ ULONG ulStatusFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnDataChange( 
            /* [in] */ ULONG ulDataFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMixerOCXNotifyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMixerOCXNotify * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMixerOCXNotify * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMixerOCXNotify * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnInvalidateRect )( 
            __RPC__in IMixerOCXNotify * This,
            /* [in] */ __RPC__in LPCRECT lpcRect);
        
        HRESULT ( STDMETHODCALLTYPE *OnStatusChange )( 
            __RPC__in IMixerOCXNotify * This,
            /* [in] */ ULONG ulStatusFlags);
        
        HRESULT ( STDMETHODCALLTYPE *OnDataChange )( 
            __RPC__in IMixerOCXNotify * This,
            /* [in] */ ULONG ulDataFlags);
        
        END_INTERFACE
    } IMixerOCXNotifyVtbl;

    interface IMixerOCXNotify
    {
        CONST_VTBL struct IMixerOCXNotifyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMixerOCXNotify_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMixerOCXNotify_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMixerOCXNotify_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMixerOCXNotify_OnInvalidateRect(This,lpcRect)	\
    ( (This)->lpVtbl -> OnInvalidateRect(This,lpcRect) ) 

#define IMixerOCXNotify_OnStatusChange(This,ulStatusFlags)	\
    ( (This)->lpVtbl -> OnStatusChange(This,ulStatusFlags) ) 

#define IMixerOCXNotify_OnDataChange(This,ulDataFlags)	\
    ( (This)->lpVtbl -> OnDataChange(This,ulDataFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMixerOCXNotify_INTERFACE_DEFINED__ */


#ifndef __IMixerOCX_INTERFACE_DEFINED__
#define __IMixerOCX_INTERFACE_DEFINED__

/* interface IMixerOCX */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IMixerOCX;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("81A3BD32-DEE1-11d1-8508-00A0C91F9CA0")
    IMixerOCX : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnDisplayChange( 
            /* [in] */ ULONG ulBitsPerPixel,
            /* [in] */ ULONG ulScreenWidth,
            /* [in] */ ULONG ulScreenHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAspectRatio( 
            /* [out] */ __RPC__out LPDWORD pdwPictAspectRatioX,
            /* [out] */ __RPC__out LPDWORD pdwPictAspectRatioY) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVideoSize( 
            /* [out] */ __RPC__out LPDWORD pdwVideoWidth,
            /* [out] */ __RPC__out LPDWORD pdwVideoHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStatus( 
            /* [out] */ __RPC__deref_out_opt LPDWORD *pdwStatus) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnDraw( 
            /* [in] */ __RPC__in HDC hdcDraw,
            /* [in] */ __RPC__in LPCRECT prcDraw) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDrawRegion( 
            /* [in] */ __RPC__in LPPOINT lpptTopLeftSC,
            /* [in] */ __RPC__in LPCRECT prcDrawCC,
            /* [in] */ __RPC__in LPCRECT lprcClip) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Advise( 
            /* [in] */ __RPC__in_opt IMixerOCXNotify *pmdns) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnAdvise( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMixerOCXVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMixerOCX * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMixerOCX * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMixerOCX * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnDisplayChange )( 
            __RPC__in IMixerOCX * This,
            /* [in] */ ULONG ulBitsPerPixel,
            /* [in] */ ULONG ulScreenWidth,
            /* [in] */ ULONG ulScreenHeight);
        
        HRESULT ( STDMETHODCALLTYPE *GetAspectRatio )( 
            __RPC__in IMixerOCX * This,
            /* [out] */ __RPC__out LPDWORD pdwPictAspectRatioX,
            /* [out] */ __RPC__out LPDWORD pdwPictAspectRatioY);
        
        HRESULT ( STDMETHODCALLTYPE *GetVideoSize )( 
            __RPC__in IMixerOCX * This,
            /* [out] */ __RPC__out LPDWORD pdwVideoWidth,
            /* [out] */ __RPC__out LPDWORD pdwVideoHeight);
        
        HRESULT ( STDMETHODCALLTYPE *GetStatus )( 
            __RPC__in IMixerOCX * This,
            /* [out] */ __RPC__deref_out_opt LPDWORD *pdwStatus);
        
        HRESULT ( STDMETHODCALLTYPE *OnDraw )( 
            __RPC__in IMixerOCX * This,
            /* [in] */ __RPC__in HDC hdcDraw,
            /* [in] */ __RPC__in LPCRECT prcDraw);
        
        HRESULT ( STDMETHODCALLTYPE *SetDrawRegion )( 
            __RPC__in IMixerOCX * This,
            /* [in] */ __RPC__in LPPOINT lpptTopLeftSC,
            /* [in] */ __RPC__in LPCRECT prcDrawCC,
            /* [in] */ __RPC__in LPCRECT lprcClip);
        
        HRESULT ( STDMETHODCALLTYPE *Advise )( 
            __RPC__in IMixerOCX * This,
            /* [in] */ __RPC__in_opt IMixerOCXNotify *pmdns);
        
        HRESULT ( STDMETHODCALLTYPE *UnAdvise )( 
            __RPC__in IMixerOCX * This);
        
        END_INTERFACE
    } IMixerOCXVtbl;

    interface IMixerOCX
    {
        CONST_VTBL struct IMixerOCXVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMixerOCX_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMixerOCX_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMixerOCX_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMixerOCX_OnDisplayChange(This,ulBitsPerPixel,ulScreenWidth,ulScreenHeight)	\
    ( (This)->lpVtbl -> OnDisplayChange(This,ulBitsPerPixel,ulScreenWidth,ulScreenHeight) ) 

#define IMixerOCX_GetAspectRatio(This,pdwPictAspectRatioX,pdwPictAspectRatioY)	\
    ( (This)->lpVtbl -> GetAspectRatio(This,pdwPictAspectRatioX,pdwPictAspectRatioY) ) 

#define IMixerOCX_GetVideoSize(This,pdwVideoWidth,pdwVideoHeight)	\
    ( (This)->lpVtbl -> GetVideoSize(This,pdwVideoWidth,pdwVideoHeight) ) 

#define IMixerOCX_GetStatus(This,pdwStatus)	\
    ( (This)->lpVtbl -> GetStatus(This,pdwStatus) ) 

#define IMixerOCX_OnDraw(This,hdcDraw,prcDraw)	\
    ( (This)->lpVtbl -> OnDraw(This,hdcDraw,prcDraw) ) 

#define IMixerOCX_SetDrawRegion(This,lpptTopLeftSC,prcDrawCC,lprcClip)	\
    ( (This)->lpVtbl -> SetDrawRegion(This,lpptTopLeftSC,prcDrawCC,lprcClip) ) 

#define IMixerOCX_Advise(This,pmdns)	\
    ( (This)->lpVtbl -> Advise(This,pmdns) ) 

#define IMixerOCX_UnAdvise(This)	\
    ( (This)->lpVtbl -> UnAdvise(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMixerOCX_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  HDC_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in HDC * ); 
unsigned char * __RPC_USER  HDC_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HDC * ); 
unsigned char * __RPC_USER  HDC_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HDC * ); 
void                      __RPC_USER  HDC_UserFree(     __RPC__in unsigned long *, __RPC__in HDC * ); 

unsigned long             __RPC_USER  HDC_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in HDC * ); 
unsigned char * __RPC_USER  HDC_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HDC * ); 
unsigned char * __RPC_USER  HDC_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HDC * ); 
void                      __RPC_USER  HDC_UserFree64(     __RPC__in unsigned long *, __RPC__in HDC * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\MMC.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for mmc.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mmc_h__
#define __mmc_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IComponentData_FWD_DEFINED__
#define __IComponentData_FWD_DEFINED__
typedef interface IComponentData IComponentData;
#endif 	/* __IComponentData_FWD_DEFINED__ */


#ifndef __IComponent_FWD_DEFINED__
#define __IComponent_FWD_DEFINED__
typedef interface IComponent IComponent;
#endif 	/* __IComponent_FWD_DEFINED__ */


#ifndef __IResultDataCompare_FWD_DEFINED__
#define __IResultDataCompare_FWD_DEFINED__
typedef interface IResultDataCompare IResultDataCompare;
#endif 	/* __IResultDataCompare_FWD_DEFINED__ */


#ifndef __IResultOwnerData_FWD_DEFINED__
#define __IResultOwnerData_FWD_DEFINED__
typedef interface IResultOwnerData IResultOwnerData;
#endif 	/* __IResultOwnerData_FWD_DEFINED__ */


#ifndef __IConsole_FWD_DEFINED__
#define __IConsole_FWD_DEFINED__
typedef interface IConsole IConsole;
#endif 	/* __IConsole_FWD_DEFINED__ */


#ifndef __IHeaderCtrl_FWD_DEFINED__
#define __IHeaderCtrl_FWD_DEFINED__
typedef interface IHeaderCtrl IHeaderCtrl;
#endif 	/* __IHeaderCtrl_FWD_DEFINED__ */


#ifndef __IContextMenuCallback_FWD_DEFINED__
#define __IContextMenuCallback_FWD_DEFINED__
typedef interface IContextMenuCallback IContextMenuCallback;
#endif 	/* __IContextMenuCallback_FWD_DEFINED__ */


#ifndef __IContextMenuProvider_FWD_DEFINED__
#define __IContextMenuProvider_FWD_DEFINED__
typedef interface IContextMenuProvider IContextMenuProvider;
#endif 	/* __IContextMenuProvider_FWD_DEFINED__ */


#ifndef __IExtendContextMenu_FWD_DEFINED__
#define __IExtendContextMenu_FWD_DEFINED__
typedef interface IExtendContextMenu IExtendContextMenu;
#endif 	/* __IExtendContextMenu_FWD_DEFINED__ */


#ifndef __IImageList_FWD_DEFINED__
#define __IImageList_FWD_DEFINED__
typedef interface IImageList IImageList;
#endif 	/* __IImageList_FWD_DEFINED__ */


#ifndef __IResultData_FWD_DEFINED__
#define __IResultData_FWD_DEFINED__
typedef interface IResultData IResultData;
#endif 	/* __IResultData_FWD_DEFINED__ */


#ifndef __IConsoleNameSpace_FWD_DEFINED__
#define __IConsoleNameSpace_FWD_DEFINED__
typedef interface IConsoleNameSpace IConsoleNameSpace;
#endif 	/* __IConsoleNameSpace_FWD_DEFINED__ */


#ifndef __IConsoleNameSpace2_FWD_DEFINED__
#define __IConsoleNameSpace2_FWD_DEFINED__
typedef interface IConsoleNameSpace2 IConsoleNameSpace2;
#endif 	/* __IConsoleNameSpace2_FWD_DEFINED__ */


#ifndef __IPropertySheetCallback_FWD_DEFINED__
#define __IPropertySheetCallback_FWD_DEFINED__
typedef interface IPropertySheetCallback IPropertySheetCallback;
#endif 	/* __IPropertySheetCallback_FWD_DEFINED__ */


#ifndef __IPropertySheetProvider_FWD_DEFINED__
#define __IPropertySheetProvider_FWD_DEFINED__
typedef interface IPropertySheetProvider IPropertySheetProvider;
#endif 	/* __IPropertySheetProvider_FWD_DEFINED__ */


#ifndef __IExtendPropertySheet_FWD_DEFINED__
#define __IExtendPropertySheet_FWD_DEFINED__
typedef interface IExtendPropertySheet IExtendPropertySheet;
#endif 	/* __IExtendPropertySheet_FWD_DEFINED__ */


#ifndef __IControlbar_FWD_DEFINED__
#define __IControlbar_FWD_DEFINED__
typedef interface IControlbar IControlbar;
#endif 	/* __IControlbar_FWD_DEFINED__ */


#ifndef __IExtendControlbar_FWD_DEFINED__
#define __IExtendControlbar_FWD_DEFINED__
typedef interface IExtendControlbar IExtendControlbar;
#endif 	/* __IExtendControlbar_FWD_DEFINED__ */


#ifndef __IToolbar_FWD_DEFINED__
#define __IToolbar_FWD_DEFINED__
typedef interface IToolbar IToolbar;
#endif 	/* __IToolbar_FWD_DEFINED__ */


#ifndef __IConsoleVerb_FWD_DEFINED__
#define __IConsoleVerb_FWD_DEFINED__
typedef interface IConsoleVerb IConsoleVerb;
#endif 	/* __IConsoleVerb_FWD_DEFINED__ */


#ifndef __ISnapinAbout_FWD_DEFINED__
#define __ISnapinAbout_FWD_DEFINED__
typedef interface ISnapinAbout ISnapinAbout;
#endif 	/* __ISnapinAbout_FWD_DEFINED__ */


#ifndef __IMenuButton_FWD_DEFINED__
#define __IMenuButton_FWD_DEFINED__
typedef interface IMenuButton IMenuButton;
#endif 	/* __IMenuButton_FWD_DEFINED__ */


#ifndef __ISnapinHelp_FWD_DEFINED__
#define __ISnapinHelp_FWD_DEFINED__
typedef interface ISnapinHelp ISnapinHelp;
#endif 	/* __ISnapinHelp_FWD_DEFINED__ */


#ifndef __IExtendPropertySheet2_FWD_DEFINED__
#define __IExtendPropertySheet2_FWD_DEFINED__
typedef interface IExtendPropertySheet2 IExtendPropertySheet2;
#endif 	/* __IExtendPropertySheet2_FWD_DEFINED__ */


#ifndef __IHeaderCtrl2_FWD_DEFINED__
#define __IHeaderCtrl2_FWD_DEFINED__
typedef interface IHeaderCtrl2 IHeaderCtrl2;
#endif 	/* __IHeaderCtrl2_FWD_DEFINED__ */


#ifndef __ISnapinHelp2_FWD_DEFINED__
#define __ISnapinHelp2_FWD_DEFINED__
typedef interface ISnapinHelp2 ISnapinHelp2;
#endif 	/* __ISnapinHelp2_FWD_DEFINED__ */


#ifndef __IEnumTASK_FWD_DEFINED__
#define __IEnumTASK_FWD_DEFINED__
typedef interface IEnumTASK IEnumTASK;
#endif 	/* __IEnumTASK_FWD_DEFINED__ */


#ifndef __IExtendTaskPad_FWD_DEFINED__
#define __IExtendTaskPad_FWD_DEFINED__
typedef interface IExtendTaskPad IExtendTaskPad;
#endif 	/* __IExtendTaskPad_FWD_DEFINED__ */


#ifndef __IConsole2_FWD_DEFINED__
#define __IConsole2_FWD_DEFINED__
typedef interface IConsole2 IConsole2;
#endif 	/* __IConsole2_FWD_DEFINED__ */


#ifndef __IDisplayHelp_FWD_DEFINED__
#define __IDisplayHelp_FWD_DEFINED__
typedef interface IDisplayHelp IDisplayHelp;
#endif 	/* __IDisplayHelp_FWD_DEFINED__ */


#ifndef __IRequiredExtensions_FWD_DEFINED__
#define __IRequiredExtensions_FWD_DEFINED__
typedef interface IRequiredExtensions IRequiredExtensions;
#endif 	/* __IRequiredExtensions_FWD_DEFINED__ */


#ifndef __IStringTable_FWD_DEFINED__
#define __IStringTable_FWD_DEFINED__
typedef interface IStringTable IStringTable;
#endif 	/* __IStringTable_FWD_DEFINED__ */


#ifndef __IColumnData_FWD_DEFINED__
#define __IColumnData_FWD_DEFINED__
typedef interface IColumnData IColumnData;
#endif 	/* __IColumnData_FWD_DEFINED__ */


#ifndef __IMessageView_FWD_DEFINED__
#define __IMessageView_FWD_DEFINED__
typedef interface IMessageView IMessageView;
#endif 	/* __IMessageView_FWD_DEFINED__ */


#ifndef __IResultDataCompareEx_FWD_DEFINED__
#define __IResultDataCompareEx_FWD_DEFINED__
typedef interface IResultDataCompareEx IResultDataCompareEx;
#endif 	/* __IResultDataCompareEx_FWD_DEFINED__ */


#ifndef __IComponentData2_FWD_DEFINED__
#define __IComponentData2_FWD_DEFINED__
typedef interface IComponentData2 IComponentData2;
#endif 	/* __IComponentData2_FWD_DEFINED__ */


#ifndef __IComponent2_FWD_DEFINED__
#define __IComponent2_FWD_DEFINED__
typedef interface IComponent2 IComponent2;
#endif 	/* __IComponent2_FWD_DEFINED__ */


#ifndef __IContextMenuCallback2_FWD_DEFINED__
#define __IContextMenuCallback2_FWD_DEFINED__
typedef interface IContextMenuCallback2 IContextMenuCallback2;
#endif 	/* __IContextMenuCallback2_FWD_DEFINED__ */


#ifndef __IMMCVersionInfo_FWD_DEFINED__
#define __IMMCVersionInfo_FWD_DEFINED__
typedef interface IMMCVersionInfo IMMCVersionInfo;
#endif 	/* __IMMCVersionInfo_FWD_DEFINED__ */


#ifndef __MMCVersionInfo_FWD_DEFINED__
#define __MMCVersionInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class MMCVersionInfo MMCVersionInfo;
#else
typedef struct MMCVersionInfo MMCVersionInfo;
#endif /* __cplusplus */

#endif 	/* __MMCVersionInfo_FWD_DEFINED__ */


#ifndef __ConsolePower_FWD_DEFINED__
#define __ConsolePower_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConsolePower ConsolePower;
#else
typedef struct ConsolePower ConsolePower;
#endif /* __cplusplus */

#endif 	/* __ConsolePower_FWD_DEFINED__ */


#ifndef __IExtendView_FWD_DEFINED__
#define __IExtendView_FWD_DEFINED__
typedef interface IExtendView IExtendView;
#endif 	/* __IExtendView_FWD_DEFINED__ */


#ifndef __IViewExtensionCallback_FWD_DEFINED__
#define __IViewExtensionCallback_FWD_DEFINED__
typedef interface IViewExtensionCallback IViewExtensionCallback;
#endif 	/* __IViewExtensionCallback_FWD_DEFINED__ */


#ifndef __IConsolePower_FWD_DEFINED__
#define __IConsolePower_FWD_DEFINED__
typedef interface IConsolePower IConsolePower;
#endif 	/* __IConsolePower_FWD_DEFINED__ */


#ifndef __IConsolePowerSink_FWD_DEFINED__
#define __IConsolePowerSink_FWD_DEFINED__
typedef interface IConsolePowerSink IConsolePowerSink;
#endif 	/* __IConsolePowerSink_FWD_DEFINED__ */


#ifndef __INodeProperties_FWD_DEFINED__
#define __INodeProperties_FWD_DEFINED__
typedef interface INodeProperties INodeProperties;
#endif 	/* __INodeProperties_FWD_DEFINED__ */


#ifndef __IConsole3_FWD_DEFINED__
#define __IConsole3_FWD_DEFINED__
typedef interface IConsole3 IConsole3;
#endif 	/* __IConsole3_FWD_DEFINED__ */


#ifndef __IResultData2_FWD_DEFINED__
#define __IResultData2_FWD_DEFINED__
typedef interface IResultData2 IResultData2;
#endif 	/* __IResultData2_FWD_DEFINED__ */


/* header files for imported files */
#include "basetsd.h"
#include "oaidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_mmc_0000_0000 */
/* [local] */ 

#ifndef MMC_VER
#define MMC_VER 0x0210
#endif













#if (MMC_VER >= 0x0110)





#endif // MMC_VER >= 0x0110
#if (MMC_VER >= 0x0120)

#endif // MMC_VER >= 0x0120
#if (MMC_VER >= 0x0200)




#endif // MMC_VER >= 0x0200









#if (MMC_VER >= 0x0110)





#endif // MMC_VER >= 0x0110
#if (MMC_VER >= 0x0120)

#endif // MMC_VER >= 0x0120
#if (MMC_VER >= 0x0200)








#endif // MMC_VER >= 0x0200
typedef IConsole *LPCONSOLE;

typedef IHeaderCtrl *LPHEADERCTRL;

typedef IToolbar *LPTOOLBAR;

typedef IImageList *LPIMAGELIST;

typedef IResultData *LPRESULTDATA;

typedef IConsoleNameSpace *LPCONSOLENAMESPACE;

typedef IPropertySheetProvider *LPPROPERTYSHEETPROVIDER;

typedef IPropertySheetCallback *LPPROPERTYSHEETCALLBACK;

typedef IContextMenuProvider *LPCONTEXTMENUPROVIDER;

typedef IContextMenuCallback *LPCONTEXTMENUCALLBACK;

typedef IControlbar *LPCONTROLBAR;

typedef IConsoleVerb *LPCONSOLEVERB;

typedef IMenuButton *LPMENUBUTTON;

#if (MMC_VER >= 0x0110)
typedef IConsole2 *LPCONSOLE2;

typedef IHeaderCtrl2 *LPHEADERCTRL2;

typedef IConsoleNameSpace2 *LPCONSOLENAMESPACE2;

typedef IDisplayHelp *LPDISPLAYHELP;

typedef IStringTable *LPSTRINGTABLE;

#endif // MMC_VER >= 0x0110
#if (MMC_VER >= 0x0120)
typedef IColumnData *LPCOLUMNDATA;

typedef IResultDataCompareEx *LPRESULTDATACOMPAREEX;

#endif // MMC_VER >= 0x0120
typedef IComponent *LPCOMPONENT;

typedef IComponentData *LPCOMPONENTDATA;

typedef IExtendPropertySheet *LPEXTENDPROPERTYSHEET;

typedef IExtendContextMenu *LPEXTENDCONTEXTMENU;

typedef IExtendControlbar *LPEXTENDCONTROLBAR;

typedef IResultDataCompare *LPRESULTDATACOMPARE;

typedef IResultOwnerData *LPRESULTOWNERDATA;

typedef ISnapinAbout *LPSNAPABOUT;

typedef ISnapinAbout *LPSNAPINABOUT;

typedef ISnapinHelp *LPSNAPHELP;

typedef ISnapinHelp *LPSNAPINHELP;

#if (MMC_VER >= 0x0110)
typedef IEnumTASK *LPENUMTASK;

typedef IExtendPropertySheet2 *LPEXTENDPROPERTYSHEET2;

typedef ISnapinHelp2 *LPSNAPINHELP2;

typedef IExtendTaskPad *LPEXTENDTASKPAD;

typedef IRequiredExtensions *LPREQUIREDEXTENSIONS;

#endif // MMC_VER >= 0x0110
#if (MMC_VER >= 0x0200)
typedef IComponent2 *LPCOMPONENT2;

typedef IComponentData2 *LPCOMPONENTDATA2;

typedef IExtendView *LPEXTENDVIEW;

typedef IViewExtensionCallback *LPVIEWEXTENSIONCALLBACK;

typedef IConsolePower *LPCONSOLEPOWER;

typedef IConsolePowerSink *LPCONSOLEPOWERSINK;

typedef IConsole3 *LPCONSOLE3;

typedef INodeProperties *LPNODEPROPERTIES;

typedef IResultData2 *LPRESULTDATA2;

#endif // MMC_VER >= 0x0200
typedef BSTR *PBSTR;

#define	MMCLV_AUTO	( -1 )

#define	MMCLV_NOPARAM	( -2 )

#define	MMCLV_NOICON	( -1 )

#define	MMCLV_VIEWSTYLE_ICON	( 0 )

#define	MMCLV_VIEWSTYLE_SMALLICON	( 0x2 )

#define	MMCLV_VIEWSTYLE_LIST	( 0x3 )

#define	MMCLV_VIEWSTYLE_REPORT	( 0x1 )

#define	MMCLV_VIEWSTYLE_FILTERED	( 0x4 )

#define	MMCLV_NOPTR	( 0 )

#define	MMCLV_UPDATE_NOINVALIDATEALL	( 0x1 )

#define	MMCLV_UPDATE_NOSCROLL	( 0x2 )

static LPOLESTR MMC_CALLBACK	=	( LPOLESTR  )-1;

#if (MMC_VER >= 0x0120)
#define MMC_IMAGECALLBACK (-1)
#define MMC_TEXTCALLBACK  MMC_CALLBACK
#endif // MMC_VER >= 0x0120
typedef LONG_PTR HSCOPEITEM;

typedef long COMPONENTID;

typedef LONG_PTR HRESULTITEM;

#define	RDI_STR	( 0x2 )

#define	RDI_IMAGE	( 0x4 )

#define	RDI_STATE	( 0x8 )

#define	RDI_PARAM	( 0x10 )

#define	RDI_INDEX	( 0x20 )

#define	RDI_INDENT	( 0x40 )

typedef enum _MMC_RESULT_VIEW_STYLE      
{                                        
    MMC_SINGLESEL           = 0x0001,    
    MMC_SHOWSELALWAYS       = 0x0002,    
    MMC_NOSORTHEADER        = 0x0004,    
#if (MMC_VER >= 0x0120)                  
    MMC_ENSUREFOCUSVISIBLE  = 0x0008     
#endif // MMC_VER >= 0x0120              
} MMC_RESULT_VIEW_STYLE;                 
#if 0
typedef 
enum _MMC_RESULT_VIEW_STYLE
    {	_MMC_VIEW_STYLE__dummy_	= 0
    } 	MMC_RESULT_VIEW_STYLE;

#endif
#define	MMC_VIEW_OPTIONS_NONE	( 0 )

#define	MMC_VIEW_OPTIONS_NOLISTVIEWS	( 0x1 )

#define	MMC_VIEW_OPTIONS_MULTISELECT	( 0x2 )

#define	MMC_VIEW_OPTIONS_OWNERDATALIST	( 0x4 )

#define	MMC_VIEW_OPTIONS_FILTERED	( 0x8 )

#define	MMC_VIEW_OPTIONS_CREATENEW	( 0x10 )

#if (MMC_VER >= 0x0110)
#define	MMC_VIEW_OPTIONS_USEFONTLINKING	( 0x20 )

#endif // MMC_VER >= 0x0110
#if (MMC_VER >= 0x0120)
#define	MMC_VIEW_OPTIONS_EXCLUDE_SCOPE_ITEMS_FROM_LIST	( 0x40 )

#define	MMC_VIEW_OPTIONS_LEXICAL_SORT	( 0x80 )

#endif // MMC_VER >= 0x0120
#define	MMC_PSO_NOAPPLYNOW	( 0x1 )

#define	MMC_PSO_HASHELP	( 0x2 )

#define	MMC_PSO_NEWWIZARDTYPE	( 0x4 )

#define	MMC_PSO_NO_PROPTITLE	( 0x8 )

typedef 
enum _MMC_CONTROL_TYPE
    {	TOOLBAR	= 0,
	MENUBUTTON	= ( TOOLBAR + 1 ) ,
	COMBOBOXBAR	= ( MENUBUTTON + 1 ) 
    } 	MMC_CONTROL_TYPE;

typedef enum _MMC_CONSOLE_VERB                               
{                                                            
    MMC_VERB_NONE            = 0x0000,                       
    MMC_VERB_OPEN            = 0x8000,                       
    MMC_VERB_COPY            = 0x8001,                       
    MMC_VERB_PASTE           = 0x8002,                       
    MMC_VERB_DELETE          = 0x8003,                       
    MMC_VERB_PROPERTIES      = 0x8004,                       
    MMC_VERB_RENAME          = 0x8005,                       
    MMC_VERB_REFRESH         = 0x8006,                       
    MMC_VERB_PRINT           = 0x8007,                       
#if (MMC_VER >= 0x0110)                                      
    MMC_VERB_CUT             = 0x8008,  // Used only to explicitly disable/hide
                                        // the cut verb, when copy & paste are enabled.
                                                             
    // must be last                                          
    MMC_VERB_MAX,                                            
    MMC_VERB_FIRST           = MMC_VERB_OPEN,                
    MMC_VERB_LAST            = MMC_VERB_MAX - 1              
#endif // MMC_VER >= 0x0110                                  
} MMC_CONSOLE_VERB;                                          
#if 0
typedef 
enum _MMC_CONSOLE_VERB
    {	MMC_VERB__dummy_	= 0
    } 	MMC_CONSOLE_VERB;

#endif
#include <pshpack8.h>
typedef struct _MMCButton
    {
    int nBitmap;
    int idCommand;
    BYTE fsState;
    BYTE fsType;
    LPOLESTR lpButtonText;
    LPOLESTR lpTooltipText;
    } 	MMCBUTTON;

#include <poppack.h>
typedef MMCBUTTON *LPMMCBUTTON;

typedef 
enum _MMC_BUTTON_STATE
    {	ENABLED	= 0x1,
	CHECKED	= 0x2,
	HIDDEN	= 0x4,
	INDETERMINATE	= 0x8,
	BUTTONPRESSED	= 0x10
    } 	MMC_BUTTON_STATE;

typedef struct _RESULTDATAITEM
    {
    DWORD mask;
    BOOL bScopeItem;
    HRESULTITEM itemID;
    int nIndex;
    int nCol;
    LPOLESTR str;
    int nImage;
    UINT nState;
    LPARAM lParam;
    int iIndent;
    } 	RESULTDATAITEM;

typedef RESULTDATAITEM *LPRESULTDATAITEM;

#define	RFI_PARTIAL	( 0x1 )

#define	RFI_WRAP	( 0x2 )

typedef struct _RESULTFINDINFO
    {
    LPOLESTR psz;
    int nStart;
    DWORD dwOptions;
    } 	RESULTFINDINFO;

typedef RESULTFINDINFO *LPRESULTFINDINFO;

#define	RSI_DESCENDING	( 0x1 )

#define	RSI_NOSORTICON	( 0x2 )

#define	SDI_STR	( 0x2 )

#define	SDI_IMAGE	( 0x4 )

#define	SDI_OPENIMAGE	( 0x8 )

#define	SDI_STATE	( 0x10 )

#define	SDI_PARAM	( 0x20 )

#define	SDI_CHILDREN	( 0x40 )

#define	SDI_PARENT	( 0 )

#define	SDI_PREVIOUS	( 0x10000000 )

#define	SDI_NEXT	( 0x20000000 )

#define	SDI_FIRST	( 0x8000000 )

typedef struct _SCOPEDATAITEM
    {
    DWORD mask;
    LPOLESTR displayname;
    int nImage;
    int nOpenImage;
    UINT nState;
    int cChildren;
    LPARAM lParam;
    HSCOPEITEM relativeID;
    HSCOPEITEM ID;
    } 	SCOPEDATAITEM;

typedef SCOPEDATAITEM *LPSCOPEDATAITEM;

typedef 
enum _MMC_SCOPE_ITEM_STATE
    {	MMC_SCOPE_ITEM_STATE_NORMAL	= 0x1,
	MMC_SCOPE_ITEM_STATE_BOLD	= 0x2,
	MMC_SCOPE_ITEM_STATE_EXPANDEDONCE	= 0x3
    } 	MMC_SCOPE_ITEM_STATE;

typedef struct _CONTEXTMENUITEM
    {
    LPWSTR strName;
    LPWSTR strStatusBarText;
    LONG lCommandID;
    LONG lInsertionPointID;
    LONG fFlags;
    LONG fSpecialFlags;
    } 	CONTEXTMENUITEM;

typedef CONTEXTMENUITEM *LPCONTEXTMENUITEM;

typedef 
enum _MMC_MENU_COMMAND_IDS
    {	MMCC_STANDARD_VIEW_SELECT	= -1
    } 	MMC_MENU_COMMAND_IDS;

typedef struct _MENUBUTTONDATA
    {
    int idCommand;
    int x;
    int y;
    } 	MENUBUTTONDATA;

typedef MENUBUTTONDATA *LPMENUBUTTONDATA;

typedef LONG_PTR MMC_COOKIE;

#define	MMC_MULTI_SELECT_COOKIE	( -2 )

#define	MMC_WINDOW_COOKIE	( -3 )

#if (MMC_VER >= 0x0110)
#define	SPECIAL_COOKIE_MIN	( -10 )

#define	SPECIAL_COOKIE_MAX	( -1 )

typedef 
enum _MMC_FILTER_TYPE
    {	MMC_STRING_FILTER	= 0,
	MMC_INT_FILTER	= 0x1,
	MMC_FILTER_NOVALUE	= 0x8000
    } 	MMC_FILTER_TYPE;

typedef struct _MMC_FILTERDATA
    {
    LPOLESTR pszText;
    INT cchTextMax;
    LONG lValue;
    } 	MMC_FILTERDATA;

typedef 
enum _MMC_FILTER_CHANGE_CODE
    {	MFCC_DISABLE	= 0,
	MFCC_ENABLE	= 1,
	MFCC_VALUE_CHANGE	= 2
    } 	MMC_FILTER_CHANGE_CODE;

typedef struct _MMC_RESTORE_VIEW
    {
    DWORD dwSize;
    MMC_COOKIE cookie;
    LPOLESTR pViewType;
    long lViewOptions;
    } 	MMC_RESTORE_VIEW;

typedef struct _MMC_EXPANDSYNC_STRUCT
    {
    BOOL bHandled;
    BOOL bExpanding;
    HSCOPEITEM hItem;
    } 	MMC_EXPANDSYNC_STRUCT;

#endif // MMC_VER >= 0x0110
#if (MMC_VER >= 0x0120)
typedef struct _MMC_VISIBLE_COLUMNS
    {
    INT nVisibleColumns;
    INT rgVisibleCols[ 1 ];
    } 	MMC_VISIBLE_COLUMNS;

#endif // MMC_VER >= 0x0120
typedef enum _MMC_NOTIFY_TYPE                                
{                                                            
    MMCN_ACTIVATE           = 0x8001,                        
    MMCN_ADD_IMAGES         = 0x8002,                        
    MMCN_BTN_CLICK          = 0x8003,                        
    MMCN_CLICK              = 0x8004,   // NOT USED          
    MMCN_COLUMN_CLICK       = 0x8005,                        
    MMCN_CONTEXTMENU        = 0x8006,   // NOT USED          
    MMCN_CUTORMOVE          = 0x8007,                        
    MMCN_DBLCLICK           = 0x8008,                        
    MMCN_DELETE             = 0x8009,                        
    MMCN_DESELECT_ALL       = 0x800A,                        
    MMCN_EXPAND             = 0x800B,                        
    MMCN_HELP               = 0x800C,   // NOT USED          
    MMCN_MENU_BTNCLICK      = 0x800D,                        
    MMCN_MINIMIZED          = 0x800E,                        
    MMCN_PASTE              = 0x800F,                        
    MMCN_PROPERTY_CHANGE    = 0x8010,                        
    MMCN_QUERY_PASTE        = 0x8011,                        
    MMCN_REFRESH            = 0x8012,                        
    MMCN_REMOVE_CHILDREN    = 0x8013,                        
    MMCN_RENAME             = 0x8014,                        
    MMCN_SELECT             = 0x8015,                        
    MMCN_SHOW               = 0x8016,                        
    MMCN_VIEW_CHANGE        = 0x8017,                        
    MMCN_SNAPINHELP         = 0x8018,                        
    MMCN_CONTEXTHELP        = 0x8019,                        
    MMCN_INITOCX            = 0x801A,                        
#if (MMC_VER >= 0x0110)                                      
    MMCN_FILTER_CHANGE      = 0x801B,                        
    MMCN_FILTERBTN_CLICK    = 0x801C,                        
    MMCN_RESTORE_VIEW       = 0x801D,                        
    MMCN_PRINT              = 0x801E,                        
    MMCN_PRELOAD            = 0x801F,                        
    MMCN_LISTPAD            = 0x8020,                        
    MMCN_EXPANDSYNC         = 0x8021,                        
#if (MMC_VER >= 0x0120)                                      
    MMCN_COLUMNS_CHANGED    = 0x8022,                        
#if (MMC_VER >= 0x0200)                                      
    MMCN_CANPASTE_OUTOFPROC = 0x8023,                        
#endif // MMC_VER >= 0x0200                                  
#endif // MMC_VER >= 0x0120                                  
#endif // MMC_VER >= 0x0110                                  
} MMC_NOTIFY_TYPE;                                           
#if 0
typedef 
enum _MMC_NOTIFY_TYPE
    {	MMCN__dummy_	= 0
    } 	MMC_NOTIFY_TYPE;

#endif
typedef 
enum _DATA_OBJECT_TYPES
    {	CCT_SCOPE	= 0x8000,
	CCT_RESULT	= 0x8001,
	CCT_SNAPIN_MANAGER	= 0x8002,
	CCT_UNINITIALIZED	= 0xffff
    } 	DATA_OBJECT_TYPES;

#define	MMC_NW_OPTION_NONE	( 0 )

#define	MMC_NW_OPTION_NOSCOPEPANE	( 0x1 )

#define	MMC_NW_OPTION_NOTOOLBARS	( 0x2 )

#define	MMC_NW_OPTION_SHORTTITLE	( 0x4 )

#define	MMC_NW_OPTION_CUSTOMTITLE	( 0x8 )

#define	MMC_NW_OPTION_NOPERSIST	( 0x10 )

#define	MMC_NW_OPTION_NOACTIONPANE	( 0x20 )

#define	CCF_NODETYPE	( L"CCF_NODETYPE" )

#define	CCF_SZNODETYPE	( L"CCF_SZNODETYPE" )

#define	CCF_DISPLAY_NAME	( L"CCF_DISPLAY_NAME" )

#define	CCF_SNAPIN_CLASSID	( L"CCF_SNAPIN_CLASSID" )

#if (MMC_VER >= 0x0210)
#define	CCF_SNAPIN_CLASS	( L"CCF_SNAPIN_CLASS" )

#endif // MMC_VER >= 0x0210
#define	CCF_WINDOW_TITLE	( L"CCF_WINDOW_TITLE" )

#define	CCF_MMC_MULTISELECT_DATAOBJECT	( L"CCF_MMC_MULTISELECT_DATAOBJECT" )

typedef struct _SMMCDataObjects
    {
    DWORD count;
    LPDATAOBJECT lpDataObject[ 1 ];
    } 	SMMCDataObjects;

#define	CCF_MULTI_SELECT_SNAPINS	( L"CCF_MULTI_SELECT_SNAPINS" )

typedef struct _SMMCObjectTypes
    {
    DWORD count;
    GUID guid[ 1 ];
    } 	SMMCObjectTypes;

#define	CCF_OBJECT_TYPES_IN_MULTI_SELECT	( L"CCF_OBJECT_TYPES_IN_MULTI_SELECT" )

#if (MMC_VER >= 0x0110)
typedef SMMCObjectTypes SMMCDynamicExtensions;

#define	CCF_MMC_DYNAMIC_EXTENSIONS	( L"CCF_MMC_DYNAMIC_EXTENSIONS" )

#define	CCF_SNAPIN_PRELOADS	( L"CCF_SNAPIN_PRELOADS" )

typedef struct _SNodeID
    {
    DWORD cBytes;
    BYTE id[ 1 ];
    } 	SNodeID;

#if (MMC_VER >= 0x0120)
typedef struct _SNodeID2
    {
    DWORD dwFlags;
    DWORD cBytes;
    BYTE id[ 1 ];
    } 	SNodeID2;

#define	MMC_NODEID_SLOW_RETRIEVAL	( 0x1 )

#define	CCF_NODEID2	( L"CCF_NODEID2" )

#endif // MMC_VER >= 0x0120
#define	CCF_NODEID	( L"CCF_NODEID" )

#if (MMC_VER >= 0x0120)
typedef struct _SColumnSetID
    {
    DWORD dwFlags;
    DWORD cBytes;
    BYTE id[ 1 ];
    } 	SColumnSetID;

#define	CCF_COLUMN_SET_ID	( L"CCF_COLUMN_SET_ID" )

#endif // MMC_VER >= 0x0120
#endif // MMC_VER >= 0x0110
STDAPI MMCPropertyChangeNotify(LONG_PTR lNotifyHandle, LPARAM param);
#if (MMC_VER >= 0x0110)
#include <specstrings.h>
STDAPI MMCPropertyHelp(__in LPOLESTR pszHelpTopic);
#endif // MMC_VER >= 0x0110
STDAPI MMCFreeNotifyHandle(LONG_PTR lNotifyHandle);
// MMCPropPageCallback is only available in mmc.lib. See MMCAfxPropPageCallback if linking against mmcutil.lib.
STDAPI MMCPropPageCallback(void* vpsp);
EXTERN_C const CLSID CLSID_NodeManager;
#if (MMC_VER >= 0x0120)
EXTERN_C const CLSID CLSID_MessageView;
#endif // MMC_VER >= 0x0120
#if (MMC_VER >= 0x0210)
// Snap-in implemented callback responsible for calling AFX_MANAGE_STATE() for the snapin-in's module.
typedef void (STDAPICALLTYPE *PFNAfxManageStateCallback)();
// Sets up a PROPSHEETPAGE structure for calling the snap-in's PFNAfxManageStateCallback.
// MMCAfxPropPageCallback is available in both mmc.lib and mmcutil.lib.
// Returns:
// S_OK - success
// E_POINTER - vpsp or pfnCallback is null
// E_INVALIDARG - vpsp->pfnCallback must be the same for all property pages
// E_INVALIDARG - pfnManageStateCallback must be the same for all property pages
// E_UNEXPECTED - vpsp has already been passed to MMCAfxPropPageCallback
STDAPI MMCAfxPropPageCallback(void* vpsp, PFNAfxManageStateCallback pfnManageStateCallback);
#endif // MMC_VER >= 0x0210
#define DOBJ_NULL        (LPDATAOBJECT)   0
#define DOBJ_CUSTOMOCX   (LPDATAOBJECT)  -1
#define DOBJ_CUSTOMWEB   (LPDATAOBJECT)  -2
#if (MMC_VER >= 0x0110)
#if (MMC_VER >= 0x0120)
#define DOBJ_NOCONSOLE   (LPDATAOBJECT)  -3
#endif // MMC_VER >= 0x0120
#define SPECIAL_DOBJ_MIN                -10
#define SPECIAL_DOBJ_MAX                  0
#endif // MMC_VER >= 0x0110
#define IS_SPECIAL_DATAOBJECT(d) (((LONG_PTR)(d) >= SPECIAL_DOBJ_MIN)   && ((LONG_PTR)(d) <= SPECIAL_DOBJ_MAX))
#define IS_SPECIAL_COOKIE(c)     (((c)          >= SPECIAL_COOKIE_MIN) && ((c)          <= SPECIAL_COOKIE_MAX))


extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0000_v0_0_s_ifspec;

#ifndef __IComponentData_INTERFACE_DEFINED__
#define __IComponentData_INTERFACE_DEFINED__

/* interface IComponentData */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IComponentData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("955AB28A-5218-11D0-A985-00C04FD8D565")
    IComponentData : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt LPUNKNOWN pUnknown) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateComponent( 
            /* [out] */ __RPC__deref_out_opt LPCOMPONENT *ppComponent) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Notify( 
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject,
            /* [in] */ MMC_NOTIFY_TYPE event,
            /* [in] */ LPARAM arg,
            /* [in] */ LPARAM param) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Destroy( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryDataObject( 
            /* [in] */ MMC_COOKIE cookie,
            /* [in] */ DATA_OBJECT_TYPES type,
            /* [out] */ __RPC__deref_out_opt LPDATAOBJECT *ppDataObject) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetDisplayInfo( 
            /* [out][in] */ __RPC__inout SCOPEDATAITEM *pScopeDataItem) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CompareObjects( 
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObjectA,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObjectB) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IComponentDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IComponentData * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IComponentData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IComponentData * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IComponentData * This,
            /* [in] */ __RPC__in_opt LPUNKNOWN pUnknown);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateComponent )( 
            __RPC__in IComponentData * This,
            /* [out] */ __RPC__deref_out_opt LPCOMPONENT *ppComponent);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Notify )( 
            __RPC__in IComponentData * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject,
            /* [in] */ MMC_NOTIFY_TYPE event,
            /* [in] */ LPARAM arg,
            /* [in] */ LPARAM param);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Destroy )( 
            __RPC__in IComponentData * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryDataObject )( 
            __RPC__in IComponentData * This,
            /* [in] */ MMC_COOKIE cookie,
            /* [in] */ DATA_OBJECT_TYPES type,
            /* [out] */ __RPC__deref_out_opt LPDATAOBJECT *ppDataObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetDisplayInfo )( 
            __RPC__in IComponentData * This,
            /* [out][in] */ __RPC__inout SCOPEDATAITEM *pScopeDataItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CompareObjects )( 
            __RPC__in IComponentData * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObjectA,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObjectB);
        
        END_INTERFACE
    } IComponentDataVtbl;

    interface IComponentData
    {
        CONST_VTBL struct IComponentDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IComponentData_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IComponentData_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IComponentData_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IComponentData_Initialize(This,pUnknown)	\
    ( (This)->lpVtbl -> Initialize(This,pUnknown) ) 

#define IComponentData_CreateComponent(This,ppComponent)	\
    ( (This)->lpVtbl -> CreateComponent(This,ppComponent) ) 

#define IComponentData_Notify(This,lpDataObject,event,arg,param)	\
    ( (This)->lpVtbl -> Notify(This,lpDataObject,event,arg,param) ) 

#define IComponentData_Destroy(This)	\
    ( (This)->lpVtbl -> Destroy(This) ) 

#define IComponentData_QueryDataObject(This,cookie,type,ppDataObject)	\
    ( (This)->lpVtbl -> QueryDataObject(This,cookie,type,ppDataObject) ) 

#define IComponentData_GetDisplayInfo(This,pScopeDataItem)	\
    ( (This)->lpVtbl -> GetDisplayInfo(This,pScopeDataItem) ) 

#define IComponentData_CompareObjects(This,lpDataObjectA,lpDataObjectB)	\
    ( (This)->lpVtbl -> CompareObjects(This,lpDataObjectA,lpDataObjectB) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IComponentData_INTERFACE_DEFINED__ */


#ifndef __IComponent_INTERFACE_DEFINED__
#define __IComponent_INTERFACE_DEFINED__

/* interface IComponent */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IComponent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("43136EB2-D36C-11CF-ADBC-00AA00A80033")
    IComponent : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt LPCONSOLE lpConsole) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Notify( 
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject,
            /* [in] */ MMC_NOTIFY_TYPE event,
            /* [in] */ LPARAM arg,
            /* [in] */ LPARAM param) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Destroy( 
            /* [in] */ MMC_COOKIE cookie) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryDataObject( 
            /* [in] */ MMC_COOKIE cookie,
            /* [in] */ DATA_OBJECT_TYPES type,
            /* [out] */ __RPC__deref_out_opt LPDATAOBJECT *ppDataObject) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetResultViewType( 
            /* [in] */ MMC_COOKIE cookie,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *ppViewType,
            /* [out] */ __RPC__out long *pViewOptions) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetDisplayInfo( 
            /* [out][in] */ __RPC__inout RESULTDATAITEM *pResultDataItem) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CompareObjects( 
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObjectA,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObjectB) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IComponentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IComponent * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IComponent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IComponent * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IComponent * This,
            /* [in] */ __RPC__in_opt LPCONSOLE lpConsole);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Notify )( 
            __RPC__in IComponent * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject,
            /* [in] */ MMC_NOTIFY_TYPE event,
            /* [in] */ LPARAM arg,
            /* [in] */ LPARAM param);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Destroy )( 
            __RPC__in IComponent * This,
            /* [in] */ MMC_COOKIE cookie);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryDataObject )( 
            __RPC__in IComponent * This,
            /* [in] */ MMC_COOKIE cookie,
            /* [in] */ DATA_OBJECT_TYPES type,
            /* [out] */ __RPC__deref_out_opt LPDATAOBJECT *ppDataObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetResultViewType )( 
            __RPC__in IComponent * This,
            /* [in] */ MMC_COOKIE cookie,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *ppViewType,
            /* [out] */ __RPC__out long *pViewOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetDisplayInfo )( 
            __RPC__in IComponent * This,
            /* [out][in] */ __RPC__inout RESULTDATAITEM *pResultDataItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CompareObjects )( 
            __RPC__in IComponent * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObjectA,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObjectB);
        
        END_INTERFACE
    } IComponentVtbl;

    interface IComponent
    {
        CONST_VTBL struct IComponentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IComponent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IComponent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IComponent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IComponent_Initialize(This,lpConsole)	\
    ( (This)->lpVtbl -> Initialize(This,lpConsole) ) 

#define IComponent_Notify(This,lpDataObject,event,arg,param)	\
    ( (This)->lpVtbl -> Notify(This,lpDataObject,event,arg,param) ) 

#define IComponent_Destroy(This,cookie)	\
    ( (This)->lpVtbl -> Destroy(This,cookie) ) 

#define IComponent_QueryDataObject(This,cookie,type,ppDataObject)	\
    ( (This)->lpVtbl -> QueryDataObject(This,cookie,type,ppDataObject) ) 

#define IComponent_GetResultViewType(This,cookie,ppViewType,pViewOptions)	\
    ( (This)->lpVtbl -> GetResultViewType(This,cookie,ppViewType,pViewOptions) ) 

#define IComponent_GetDisplayInfo(This,pResultDataItem)	\
    ( (This)->lpVtbl -> GetDisplayInfo(This,pResultDataItem) ) 

#define IComponent_CompareObjects(This,lpDataObjectA,lpDataObjectB)	\
    ( (This)->lpVtbl -> CompareObjects(This,lpDataObjectA,lpDataObjectB) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IComponent_INTERFACE_DEFINED__ */


#ifndef __IResultDataCompare_INTERFACE_DEFINED__
#define __IResultDataCompare_INTERFACE_DEFINED__

/* interface IResultDataCompare */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IResultDataCompare;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E8315A52-7A1A-11D0-A2D2-00C04FD909DD")
    IResultDataCompare : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Compare( 
            /* [in] */ LPARAM lUserParam,
            /* [in] */ MMC_COOKIE cookieA,
            /* [in] */ MMC_COOKIE cookieB,
            /* [out][in] */ __RPC__inout int *pnResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IResultDataCompareVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IResultDataCompare * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IResultDataCompare * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IResultDataCompare * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Compare )( 
            __RPC__in IResultDataCompare * This,
            /* [in] */ LPARAM lUserParam,
            /* [in] */ MMC_COOKIE cookieA,
            /* [in] */ MMC_COOKIE cookieB,
            /* [out][in] */ __RPC__inout int *pnResult);
        
        END_INTERFACE
    } IResultDataCompareVtbl;

    interface IResultDataCompare
    {
        CONST_VTBL struct IResultDataCompareVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IResultDataCompare_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IResultDataCompare_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IResultDataCompare_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IResultDataCompare_Compare(This,lUserParam,cookieA,cookieB,pnResult)	\
    ( (This)->lpVtbl -> Compare(This,lUserParam,cookieA,cookieB,pnResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IResultDataCompare_INTERFACE_DEFINED__ */


#ifndef __IResultOwnerData_INTERFACE_DEFINED__
#define __IResultOwnerData_INTERFACE_DEFINED__

/* interface IResultOwnerData */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IResultOwnerData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9CB396D8-EA83-11d0-AEF1-00C04FB6DD2C")
    IResultOwnerData : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FindItem( 
            /* [in] */ __RPC__in LPRESULTFINDINFO pFindInfo,
            /* [out] */ __RPC__out int *pnFoundIndex) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CacheHint( 
            /* [in] */ int nStartIndex,
            /* [in] */ int nEndIndex) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SortItems( 
            /* [in] */ int nColumn,
            /* [in] */ DWORD dwSortOptions,
            /* [in] */ LPARAM lUserParam) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IResultOwnerDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IResultOwnerData * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IResultOwnerData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IResultOwnerData * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindItem )( 
            __RPC__in IResultOwnerData * This,
            /* [in] */ __RPC__in LPRESULTFINDINFO pFindInfo,
            /* [out] */ __RPC__out int *pnFoundIndex);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CacheHint )( 
            __RPC__in IResultOwnerData * This,
            /* [in] */ int nStartIndex,
            /* [in] */ int nEndIndex);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SortItems )( 
            __RPC__in IResultOwnerData * This,
            /* [in] */ int nColumn,
            /* [in] */ DWORD dwSortOptions,
            /* [in] */ LPARAM lUserParam);
        
        END_INTERFACE
    } IResultOwnerDataVtbl;

    interface IResultOwnerData
    {
        CONST_VTBL struct IResultOwnerDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IResultOwnerData_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IResultOwnerData_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IResultOwnerData_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IResultOwnerData_FindItem(This,pFindInfo,pnFoundIndex)	\
    ( (This)->lpVtbl -> FindItem(This,pFindInfo,pnFoundIndex) ) 

#define IResultOwnerData_CacheHint(This,nStartIndex,nEndIndex)	\
    ( (This)->lpVtbl -> CacheHint(This,nStartIndex,nEndIndex) ) 

#define IResultOwnerData_SortItems(This,nColumn,dwSortOptions,lUserParam)	\
    ( (This)->lpVtbl -> SortItems(This,nColumn,dwSortOptions,lUserParam) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IResultOwnerData_INTERFACE_DEFINED__ */


#ifndef __IConsole_INTERFACE_DEFINED__
#define __IConsole_INTERFACE_DEFINED__

/* interface IConsole */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IConsole;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("43136EB1-D36C-11CF-ADBC-00AA00A80033")
    IConsole : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetHeader( 
            /* [in] */ __RPC__in_opt LPHEADERCTRL pHeader) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetToolbar( 
            /* [in] */ __RPC__in_opt LPTOOLBAR pToolbar) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryResultView( 
            /* [out] */ __RPC__deref_out_opt LPUNKNOWN *pUnknown) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryScopeImageList( 
            /* [out] */ __RPC__deref_out_opt LPIMAGELIST *ppImageList) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryResultImageList( 
            /* [out] */ __RPC__deref_out_opt LPIMAGELIST *ppImageList) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UpdateAllViews( 
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject,
            /* [in] */ LPARAM data,
            /* [in] */ LONG_PTR hint) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MessageBox( 
            /* [in] */ __RPC__in LPCWSTR lpszText,
            /* [in] */ __RPC__in LPCWSTR lpszTitle,
            /* [in] */ UINT fuStyle,
            /* [out] */ __RPC__out int *piRetval) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryConsoleVerb( 
            /* [out] */ __RPC__deref_out_opt LPCONSOLEVERB *ppConsoleVerb) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SelectScopeItem( 
            /* [in] */ HSCOPEITEM hScopeItem) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetMainWindow( 
            /* [out] */ __RPC__deref_out_opt HWND *phwnd) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE NewWindow( 
            /* [in] */ HSCOPEITEM hScopeItem,
            /* [in] */ unsigned long lOptions) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IConsoleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IConsole * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IConsole * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IConsole * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetHeader )( 
            __RPC__in IConsole * This,
            /* [in] */ __RPC__in_opt LPHEADERCTRL pHeader);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetToolbar )( 
            __RPC__in IConsole * This,
            /* [in] */ __RPC__in_opt LPTOOLBAR pToolbar);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryResultView )( 
            __RPC__in IConsole * This,
            /* [out] */ __RPC__deref_out_opt LPUNKNOWN *pUnknown);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryScopeImageList )( 
            __RPC__in IConsole * This,
            /* [out] */ __RPC__deref_out_opt LPIMAGELIST *ppImageList);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryResultImageList )( 
            __RPC__in IConsole * This,
            /* [out] */ __RPC__deref_out_opt LPIMAGELIST *ppImageList);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UpdateAllViews )( 
            __RPC__in IConsole * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject,
            /* [in] */ LPARAM data,
            /* [in] */ LONG_PTR hint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MessageBox )( 
            __RPC__in IConsole * This,
            /* [in] */ __RPC__in LPCWSTR lpszText,
            /* [in] */ __RPC__in LPCWSTR lpszTitle,
            /* [in] */ UINT fuStyle,
            /* [out] */ __RPC__out int *piRetval);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryConsoleVerb )( 
            __RPC__in IConsole * This,
            /* [out] */ __RPC__deref_out_opt LPCONSOLEVERB *ppConsoleVerb);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SelectScopeItem )( 
            __RPC__in IConsole * This,
            /* [in] */ HSCOPEITEM hScopeItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetMainWindow )( 
            __RPC__in IConsole * This,
            /* [out] */ __RPC__deref_out_opt HWND *phwnd);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *NewWindow )( 
            __RPC__in IConsole * This,
            /* [in] */ HSCOPEITEM hScopeItem,
            /* [in] */ unsigned long lOptions);
        
        END_INTERFACE
    } IConsoleVtbl;

    interface IConsole
    {
        CONST_VTBL struct IConsoleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IConsole_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IConsole_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IConsole_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IConsole_SetHeader(This,pHeader)	\
    ( (This)->lpVtbl -> SetHeader(This,pHeader) ) 

#define IConsole_SetToolbar(This,pToolbar)	\
    ( (This)->lpVtbl -> SetToolbar(This,pToolbar) ) 

#define IConsole_QueryResultView(This,pUnknown)	\
    ( (This)->lpVtbl -> QueryResultView(This,pUnknown) ) 

#define IConsole_QueryScopeImageList(This,ppImageList)	\
    ( (This)->lpVtbl -> QueryScopeImageList(This,ppImageList) ) 

#define IConsole_QueryResultImageList(This,ppImageList)	\
    ( (This)->lpVtbl -> QueryResultImageList(This,ppImageList) ) 

#define IConsole_UpdateAllViews(This,lpDataObject,data,hint)	\
    ( (This)->lpVtbl -> UpdateAllViews(This,lpDataObject,data,hint) ) 

#define IConsole_MessageBox(This,lpszText,lpszTitle,fuStyle,piRetval)	\
    ( (This)->lpVtbl -> MessageBox(This,lpszText,lpszTitle,fuStyle,piRetval) ) 

#define IConsole_QueryConsoleVerb(This,ppConsoleVerb)	\
    ( (This)->lpVtbl -> QueryConsoleVerb(This,ppConsoleVerb) ) 

#define IConsole_SelectScopeItem(This,hScopeItem)	\
    ( (This)->lpVtbl -> SelectScopeItem(This,hScopeItem) ) 

#define IConsole_GetMainWindow(This,phwnd)	\
    ( (This)->lpVtbl -> GetMainWindow(This,phwnd) ) 

#define IConsole_NewWindow(This,hScopeItem,lOptions)	\
    ( (This)->lpVtbl -> NewWindow(This,hScopeItem,lOptions) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IConsole_INTERFACE_DEFINED__ */


#ifndef __IHeaderCtrl_INTERFACE_DEFINED__
#define __IHeaderCtrl_INTERFACE_DEFINED__

/* interface IHeaderCtrl */
/* [unique][helpstring][uuid][object] */ 

#define	AUTO_WIDTH	( -1 )

#if (MMC_VER >= 0x0120)
#define	HIDE_COLUMN	( -4 )

#endif // MMC_VER >= 0x0120

EXTERN_C const IID IID_IHeaderCtrl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("43136EB3-D36C-11CF-ADBC-00AA00A80033")
    IHeaderCtrl : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InsertColumn( 
            /* [in] */ int nCol,
            /* [in] */ __RPC__in LPCWSTR title,
            /* [in] */ int nFormat,
            /* [in] */ int nWidth) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DeleteColumn( 
            /* [in] */ int nCol) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetColumnText( 
            /* [in] */ int nCol,
            /* [in] */ __RPC__in LPCWSTR title) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetColumnText( 
            /* [in] */ int nCol,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *pText) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetColumnWidth( 
            /* [in] */ int nCol,
            /* [in] */ int nWidth) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetColumnWidth( 
            /* [in] */ int nCol,
            /* [out] */ __RPC__out int *pWidth) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHeaderCtrlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHeaderCtrl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHeaderCtrl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHeaderCtrl * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InsertColumn )( 
            __RPC__in IHeaderCtrl * This,
            /* [in] */ int nCol,
            /* [in] */ __RPC__in LPCWSTR title,
            /* [in] */ int nFormat,
            /* [in] */ int nWidth);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeleteColumn )( 
            __RPC__in IHeaderCtrl * This,
            /* [in] */ int nCol);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetColumnText )( 
            __RPC__in IHeaderCtrl * This,
            /* [in] */ int nCol,
            /* [in] */ __RPC__in LPCWSTR title);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetColumnText )( 
            __RPC__in IHeaderCtrl * This,
            /* [in] */ int nCol,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *pText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetColumnWidth )( 
            __RPC__in IHeaderCtrl * This,
            /* [in] */ int nCol,
            /* [in] */ int nWidth);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetColumnWidth )( 
            __RPC__in IHeaderCtrl * This,
            /* [in] */ int nCol,
            /* [out] */ __RPC__out int *pWidth);
        
        END_INTERFACE
    } IHeaderCtrlVtbl;

    interface IHeaderCtrl
    {
        CONST_VTBL struct IHeaderCtrlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHeaderCtrl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHeaderCtrl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHeaderCtrl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHeaderCtrl_InsertColumn(This,nCol,title,nFormat,nWidth)	\
    ( (This)->lpVtbl -> InsertColumn(This,nCol,title,nFormat,nWidth) ) 

#define IHeaderCtrl_DeleteColumn(This,nCol)	\
    ( (This)->lpVtbl -> DeleteColumn(This,nCol) ) 

#define IHeaderCtrl_SetColumnText(This,nCol,title)	\
    ( (This)->lpVtbl -> SetColumnText(This,nCol,title) ) 

#define IHeaderCtrl_GetColumnText(This,nCol,pText)	\
    ( (This)->lpVtbl -> GetColumnText(This,nCol,pText) ) 

#define IHeaderCtrl_SetColumnWidth(This,nCol,nWidth)	\
    ( (This)->lpVtbl -> SetColumnWidth(This,nCol,nWidth) ) 

#define IHeaderCtrl_GetColumnWidth(This,nCol,pWidth)	\
    ( (This)->lpVtbl -> GetColumnWidth(This,nCol,pWidth) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHeaderCtrl_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mmc_0000_0006 */
/* [local] */ 


enum __MIDL___MIDL_itf_mmc_0000_0006_0001
    {	CCM_INSERTIONPOINTID_MASK_SPECIAL	= 0xffff0000,
	CCM_INSERTIONPOINTID_MASK_SHARED	= 0x80000000,
	CCM_INSERTIONPOINTID_MASK_CREATE_PRIMARY	= 0x40000000,
	CCM_INSERTIONPOINTID_MASK_ADD_PRIMARY	= 0x20000000,
	CCM_INSERTIONPOINTID_MASK_ADD_3RDPARTY	= 0x10000000,
	CCM_INSERTIONPOINTID_MASK_RESERVED	= 0xfff0000,
	CCM_INSERTIONPOINTID_MASK_FLAGINDEX	= 0x1f,
	CCM_INSERTIONPOINTID_PRIMARY_TOP	= 0xa0000000,
	CCM_INSERTIONPOINTID_PRIMARY_NEW	= 0xa0000001,
	CCM_INSERTIONPOINTID_PRIMARY_TASK	= 0xa0000002,
	CCM_INSERTIONPOINTID_PRIMARY_VIEW	= 0xa0000003,
	CCM_INSERTIONPOINTID_PRIMARY_HELP	= 0xa0000004,
	CCM_INSERTIONPOINTID_3RDPARTY_NEW	= 0x90000001,
	CCM_INSERTIONPOINTID_3RDPARTY_TASK	= 0x90000002,
	CCM_INSERTIONPOINTID_ROOT_MENU	= 0x80000000
    } ;

enum __MIDL___MIDL_itf_mmc_0000_0006_0002
    {	CCM_INSERTIONALLOWED_TOP	= ( 1L << (( CCM_INSERTIONPOINTID_PRIMARY_TOP & CCM_INSERTIONPOINTID_MASK_FLAGINDEX ) ) ) ,
	CCM_INSERTIONALLOWED_NEW	= ( 1L << (( CCM_INSERTIONPOINTID_PRIMARY_NEW & CCM_INSERTIONPOINTID_MASK_FLAGINDEX ) ) ) ,
	CCM_INSERTIONALLOWED_TASK	= ( 1L << (( CCM_INSERTIONPOINTID_PRIMARY_TASK & CCM_INSERTIONPOINTID_MASK_FLAGINDEX ) ) ) ,
	CCM_INSERTIONALLOWED_VIEW	= ( 1L << (( CCM_INSERTIONPOINTID_PRIMARY_VIEW & CCM_INSERTIONPOINTID_MASK_FLAGINDEX ) ) ) 
    } ;

enum __MIDL___MIDL_itf_mmc_0000_0006_0003
    {	CCM_COMMANDID_MASK_RESERVED	= 0xffff0000
    } ;

enum __MIDL___MIDL_itf_mmc_0000_0006_0004
    {	CCM_SPECIAL_SEPARATOR	= 0x1,
	CCM_SPECIAL_SUBMENU	= 0x2,
	CCM_SPECIAL_DEFAULT_ITEM	= 0x4,
	CCM_SPECIAL_INSERTION_POINT	= 0x8,
	CCM_SPECIAL_TESTONLY	= 0x10
    } ;


extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0006_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0006_v0_0_s_ifspec;

#ifndef __IContextMenuCallback_INTERFACE_DEFINED__
#define __IContextMenuCallback_INTERFACE_DEFINED__

/* interface IContextMenuCallback */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IContextMenuCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("43136EB7-D36C-11CF-ADBC-00AA00A80033")
    IContextMenuCallback : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddItem( 
            /* [in] */ __RPC__in CONTEXTMENUITEM *pItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IContextMenuCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IContextMenuCallback * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IContextMenuCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IContextMenuCallback * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddItem )( 
            __RPC__in IContextMenuCallback * This,
            /* [in] */ __RPC__in CONTEXTMENUITEM *pItem);
        
        END_INTERFACE
    } IContextMenuCallbackVtbl;

    interface IContextMenuCallback
    {
        CONST_VTBL struct IContextMenuCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContextMenuCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IContextMenuCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IContextMenuCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IContextMenuCallback_AddItem(This,pItem)	\
    ( (This)->lpVtbl -> AddItem(This,pItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IContextMenuCallback_INTERFACE_DEFINED__ */


#ifndef __IContextMenuProvider_INTERFACE_DEFINED__
#define __IContextMenuProvider_INTERFACE_DEFINED__

/* interface IContextMenuProvider */
/* [unique][helpstring][object][uuid][object] */ 


EXTERN_C const IID IID_IContextMenuProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("43136EB6-D36C-11CF-ADBC-00AA00A80033")
    IContextMenuProvider : public IContextMenuCallback
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EmptyMenuList( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddPrimaryExtensionItems( 
            /* [in] */ __RPC__in_opt LPUNKNOWN piExtension,
            /* [in] */ __RPC__in_opt LPDATAOBJECT piDataObject) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddThirdPartyExtensionItems( 
            /* [in] */ __RPC__in_opt LPDATAOBJECT piDataObject) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ShowContextMenu( 
            /* [in] */ __RPC__in HWND hwndParent,
            /* [in] */ long xPos,
            /* [in] */ long yPos,
            /* [retval][out] */ __RPC__out long *plSelected) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IContextMenuProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IContextMenuProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IContextMenuProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IContextMenuProvider * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddItem )( 
            __RPC__in IContextMenuProvider * This,
            /* [in] */ __RPC__in CONTEXTMENUITEM *pItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EmptyMenuList )( 
            __RPC__in IContextMenuProvider * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPrimaryExtensionItems )( 
            __RPC__in IContextMenuProvider * This,
            /* [in] */ __RPC__in_opt LPUNKNOWN piExtension,
            /* [in] */ __RPC__in_opt LPDATAOBJECT piDataObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddThirdPartyExtensionItems )( 
            __RPC__in IContextMenuProvider * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT piDataObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShowContextMenu )( 
            __RPC__in IContextMenuProvider * This,
            /* [in] */ __RPC__in HWND hwndParent,
            /* [in] */ long xPos,
            /* [in] */ long yPos,
            /* [retval][out] */ __RPC__out long *plSelected);
        
        END_INTERFACE
    } IContextMenuProviderVtbl;

    interface IContextMenuProvider
    {
        CONST_VTBL struct IContextMenuProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContextMenuProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IContextMenuProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IContextMenuProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IContextMenuProvider_AddItem(This,pItem)	\
    ( (This)->lpVtbl -> AddItem(This,pItem) ) 


#define IContextMenuProvider_EmptyMenuList(This)	\
    ( (This)->lpVtbl -> EmptyMenuList(This) ) 

#define IContextMenuProvider_AddPrimaryExtensionItems(This,piExtension,piDataObject)	\
    ( (This)->lpVtbl -> AddPrimaryExtensionItems(This,piExtension,piDataObject) ) 

#define IContextMenuProvider_AddThirdPartyExtensionItems(This,piDataObject)	\
    ( (This)->lpVtbl -> AddThirdPartyExtensionItems(This,piDataObject) ) 

#define IContextMenuProvider_ShowContextMenu(This,hwndParent,xPos,yPos,plSelected)	\
    ( (This)->lpVtbl -> ShowContextMenu(This,hwndParent,xPos,yPos,plSelected) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IContextMenuProvider_INTERFACE_DEFINED__ */


#ifndef __IExtendContextMenu_INTERFACE_DEFINED__
#define __IExtendContextMenu_INTERFACE_DEFINED__

/* interface IExtendContextMenu */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IExtendContextMenu;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4F3B7A4F-CFAC-11CF-B8E3-00C04FD8D5B0")
    IExtendContextMenu : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddMenuItems( 
            /* [in] */ __RPC__in_opt LPDATAOBJECT piDataObject,
            /* [in] */ __RPC__in_opt LPCONTEXTMENUCALLBACK piCallback,
            /* [out][in] */ __RPC__inout long *pInsertionAllowed) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Command( 
            /* [in] */ long lCommandID,
            /* [in] */ __RPC__in_opt LPDATAOBJECT piDataObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExtendContextMenuVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IExtendContextMenu * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IExtendContextMenu * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IExtendContextMenu * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddMenuItems )( 
            __RPC__in IExtendContextMenu * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT piDataObject,
            /* [in] */ __RPC__in_opt LPCONTEXTMENUCALLBACK piCallback,
            /* [out][in] */ __RPC__inout long *pInsertionAllowed);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Command )( 
            __RPC__in IExtendContextMenu * This,
            /* [in] */ long lCommandID,
            /* [in] */ __RPC__in_opt LPDATAOBJECT piDataObject);
        
        END_INTERFACE
    } IExtendContextMenuVtbl;

    interface IExtendContextMenu
    {
        CONST_VTBL struct IExtendContextMenuVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExtendContextMenu_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IExtendContextMenu_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IExtendContextMenu_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IExtendContextMenu_AddMenuItems(This,piDataObject,piCallback,pInsertionAllowed)	\
    ( (This)->lpVtbl -> AddMenuItems(This,piDataObject,piCallback,pInsertionAllowed) ) 

#define IExtendContextMenu_Command(This,lCommandID,piDataObject)	\
    ( (This)->lpVtbl -> Command(This,lCommandID,piDataObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IExtendContextMenu_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mmc_0000_0009 */
/* [local] */ 

#if (MMC_VER >= 0x0120)
#define ILSIF_LEAVE_LARGE_ICON  0x40000000
#define ILSIF_LEAVE_SMALL_ICON  0x20000000
#define ILSIF_LEAVE_MASK        (ILSIF_LEAVE_LARGE_ICON | ILSIF_LEAVE_SMALL_ICON)
#define ILSI_LARGE_ICON(nLoc)   (nLoc | ILSIF_LEAVE_SMALL_ICON)
#define ILSI_SMALL_ICON(nLoc)   (nLoc | ILSIF_LEAVE_LARGE_ICON)
#endif // MMC_VER >= 0x0120


extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0009_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0009_v0_0_s_ifspec;

#ifndef __IImageList_INTERFACE_DEFINED__
#define __IImageList_INTERFACE_DEFINED__

/* interface IImageList */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IImageList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("43136EB8-D36C-11CF-ADBC-00AA00A80033")
    IImageList : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ImageListSetIcon( 
            /* [in] */ __RPC__in LONG_PTR *pIcon,
            /* [in] */ long nLoc) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ImageListSetStrip( 
            /* [in] */ __RPC__in LONG_PTR *pBMapSm,
            /* [in] */ __RPC__in LONG_PTR *pBMapLg,
            /* [in] */ long nStartLoc,
            /* [in] */ COLORREF cMask) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IImageListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IImageList * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IImageList * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IImageList * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ImageListSetIcon )( 
            __RPC__in IImageList * This,
            /* [in] */ __RPC__in LONG_PTR *pIcon,
            /* [in] */ long nLoc);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ImageListSetStrip )( 
            __RPC__in IImageList * This,
            /* [in] */ __RPC__in LONG_PTR *pBMapSm,
            /* [in] */ __RPC__in LONG_PTR *pBMapLg,
            /* [in] */ long nStartLoc,
            /* [in] */ COLORREF cMask);
        
        END_INTERFACE
    } IImageListVtbl;

    interface IImageList
    {
        CONST_VTBL struct IImageListVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IImageList_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IImageList_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IImageList_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IImageList_ImageListSetIcon(This,pIcon,nLoc)	\
    ( (This)->lpVtbl -> ImageListSetIcon(This,pIcon,nLoc) ) 

#define IImageList_ImageListSetStrip(This,pBMapSm,pBMapLg,nStartLoc,cMask)	\
    ( (This)->lpVtbl -> ImageListSetStrip(This,pBMapSm,pBMapLg,nStartLoc,cMask) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IImageList_INTERFACE_DEFINED__ */


#ifndef __IResultData_INTERFACE_DEFINED__
#define __IResultData_INTERFACE_DEFINED__

/* interface IResultData */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IResultData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("31DA5FA0-E0EB-11cf-9F21-00AA003CA9F6")
    IResultData : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InsertItem( 
            /* [out][in] */ __RPC__inout LPRESULTDATAITEM item) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DeleteItem( 
            /* [in] */ HRESULTITEM itemID,
            /* [in] */ int nCol) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FindItemByLParam( 
            /* [in] */ LPARAM lParam,
            /* [out] */ __RPC__out HRESULTITEM *pItemID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DeleteAllRsltItems( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetItem( 
            /* [in] */ __RPC__in LPRESULTDATAITEM item) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetItem( 
            /* [out][in] */ __RPC__inout LPRESULTDATAITEM item) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetNextItem( 
            /* [out][in] */ __RPC__inout LPRESULTDATAITEM item) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ModifyItemState( 
            /* [in] */ int nIndex,
            /* [in] */ HRESULTITEM itemID,
            /* [in] */ UINT uAdd,
            /* [in] */ UINT uRemove) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ModifyViewStyle( 
            /* [in] */ MMC_RESULT_VIEW_STYLE add,
            /* [in] */ MMC_RESULT_VIEW_STYLE remove) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetViewMode( 
            /* [in] */ long lViewMode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetViewMode( 
            /* [out] */ __RPC__out long *lViewMode) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UpdateItem( 
            /* [in] */ HRESULTITEM itemID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Sort( 
            /* [in] */ int nColumn,
            /* [in] */ DWORD dwSortOptions,
            /* [in] */ LPARAM lUserParam) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetDescBarText( 
            /* [in] */ __RPC__in LPOLESTR DescText) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetItemCount( 
            /* [in] */ int nItemCount,
            /* [in] */ DWORD dwOptions) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IResultDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IResultData * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IResultData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IResultData * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InsertItem )( 
            __RPC__in IResultData * This,
            /* [out][in] */ __RPC__inout LPRESULTDATAITEM item);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            __RPC__in IResultData * This,
            /* [in] */ HRESULTITEM itemID,
            /* [in] */ int nCol);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindItemByLParam )( 
            __RPC__in IResultData * This,
            /* [in] */ LPARAM lParam,
            /* [out] */ __RPC__out HRESULTITEM *pItemID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeleteAllRsltItems )( 
            __RPC__in IResultData * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            __RPC__in IResultData * This,
            /* [in] */ __RPC__in LPRESULTDATAITEM item);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            __RPC__in IResultData * This,
            /* [out][in] */ __RPC__inout LPRESULTDATAITEM item);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetNextItem )( 
            __RPC__in IResultData * This,
            /* [out][in] */ __RPC__inout LPRESULTDATAITEM item);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ModifyItemState )( 
            __RPC__in IResultData * This,
            /* [in] */ int nIndex,
            /* [in] */ HRESULTITEM itemID,
            /* [in] */ UINT uAdd,
            /* [in] */ UINT uRemove);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ModifyViewStyle )( 
            __RPC__in IResultData * This,
            /* [in] */ MMC_RESULT_VIEW_STYLE add,
            /* [in] */ MMC_RESULT_VIEW_STYLE remove);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetViewMode )( 
            __RPC__in IResultData * This,
            /* [in] */ long lViewMode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetViewMode )( 
            __RPC__in IResultData * This,
            /* [out] */ __RPC__out long *lViewMode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UpdateItem )( 
            __RPC__in IResultData * This,
            /* [in] */ HRESULTITEM itemID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Sort )( 
            __RPC__in IResultData * This,
            /* [in] */ int nColumn,
            /* [in] */ DWORD dwSortOptions,
            /* [in] */ LPARAM lUserParam);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetDescBarText )( 
            __RPC__in IResultData * This,
            /* [in] */ __RPC__in LPOLESTR DescText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetItemCount )( 
            __RPC__in IResultData * This,
            /* [in] */ int nItemCount,
            /* [in] */ DWORD dwOptions);
        
        END_INTERFACE
    } IResultDataVtbl;

    interface IResultData
    {
        CONST_VTBL struct IResultDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IResultData_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IResultData_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IResultData_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IResultData_InsertItem(This,item)	\
    ( (This)->lpVtbl -> InsertItem(This,item) ) 

#define IResultData_DeleteItem(This,itemID,nCol)	\
    ( (This)->lpVtbl -> DeleteItem(This,itemID,nCol) ) 

#define IResultData_FindItemByLParam(This,lParam,pItemID)	\
    ( (This)->lpVtbl -> FindItemByLParam(This,lParam,pItemID) ) 

#define IResultData_DeleteAllRsltItems(This)	\
    ( (This)->lpVtbl -> DeleteAllRsltItems(This) ) 

#define IResultData_SetItem(This,item)	\
    ( (This)->lpVtbl -> SetItem(This,item) ) 

#define IResultData_GetItem(This,item)	\
    ( (This)->lpVtbl -> GetItem(This,item) ) 

#define IResultData_GetNextItem(This,item)	\
    ( (This)->lpVtbl -> GetNextItem(This,item) ) 

#define IResultData_ModifyItemState(This,nIndex,itemID,uAdd,uRemove)	\
    ( (This)->lpVtbl -> ModifyItemState(This,nIndex,itemID,uAdd,uRemove) ) 

#define IResultData_ModifyViewStyle(This,add,remove)	\
    ( (This)->lpVtbl -> ModifyViewStyle(This,add,remove) ) 

#define IResultData_SetViewMode(This,lViewMode)	\
    ( (This)->lpVtbl -> SetViewMode(This,lViewMode) ) 

#define IResultData_GetViewMode(This,lViewMode)	\
    ( (This)->lpVtbl -> GetViewMode(This,lViewMode) ) 

#define IResultData_UpdateItem(This,itemID)	\
    ( (This)->lpVtbl -> UpdateItem(This,itemID) ) 

#define IResultData_Sort(This,nColumn,dwSortOptions,lUserParam)	\
    ( (This)->lpVtbl -> Sort(This,nColumn,dwSortOptions,lUserParam) ) 

#define IResultData_SetDescBarText(This,DescText)	\
    ( (This)->lpVtbl -> SetDescBarText(This,DescText) ) 

#define IResultData_SetItemCount(This,nItemCount,dwOptions)	\
    ( (This)->lpVtbl -> SetItemCount(This,nItemCount,dwOptions) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IResultData_INTERFACE_DEFINED__ */


#ifndef __IConsoleNameSpace_INTERFACE_DEFINED__
#define __IConsoleNameSpace_INTERFACE_DEFINED__

/* interface IConsoleNameSpace */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IConsoleNameSpace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BEDEB620-F24D-11cf-8AFC-00AA003CA9F6")
    IConsoleNameSpace : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InsertItem( 
            /* [out][in] */ __RPC__inout LPSCOPEDATAITEM item) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DeleteItem( 
            /* [in] */ HSCOPEITEM hItem,
            /* [in] */ long fDeleteThis) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetItem( 
            /* [in] */ __RPC__in LPSCOPEDATAITEM item) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetItem( 
            /* [out][in] */ __RPC__inout LPSCOPEDATAITEM item) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetChildItem( 
            /* [in] */ HSCOPEITEM item,
            /* [out] */ __RPC__out HSCOPEITEM *pItemChild,
            /* [out] */ __RPC__out MMC_COOKIE *pCookie) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetNextItem( 
            /* [in] */ HSCOPEITEM item,
            /* [out] */ __RPC__out HSCOPEITEM *pItemNext,
            /* [out] */ __RPC__out MMC_COOKIE *pCookie) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetParentItem( 
            /* [in] */ HSCOPEITEM item,
            /* [out] */ __RPC__out HSCOPEITEM *pItemParent,
            /* [out] */ __RPC__out MMC_COOKIE *pCookie) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IConsoleNameSpaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IConsoleNameSpace * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IConsoleNameSpace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IConsoleNameSpace * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InsertItem )( 
            __RPC__in IConsoleNameSpace * This,
            /* [out][in] */ __RPC__inout LPSCOPEDATAITEM item);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            __RPC__in IConsoleNameSpace * This,
            /* [in] */ HSCOPEITEM hItem,
            /* [in] */ long fDeleteThis);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            __RPC__in IConsoleNameSpace * This,
            /* [in] */ __RPC__in LPSCOPEDATAITEM item);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            __RPC__in IConsoleNameSpace * This,
            /* [out][in] */ __RPC__inout LPSCOPEDATAITEM item);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetChildItem )( 
            __RPC__in IConsoleNameSpace * This,
            /* [in] */ HSCOPEITEM item,
            /* [out] */ __RPC__out HSCOPEITEM *pItemChild,
            /* [out] */ __RPC__out MMC_COOKIE *pCookie);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetNextItem )( 
            __RPC__in IConsoleNameSpace * This,
            /* [in] */ HSCOPEITEM item,
            /* [out] */ __RPC__out HSCOPEITEM *pItemNext,
            /* [out] */ __RPC__out MMC_COOKIE *pCookie);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParentItem )( 
            __RPC__in IConsoleNameSpace * This,
            /* [in] */ HSCOPEITEM item,
            /* [out] */ __RPC__out HSCOPEITEM *pItemParent,
            /* [out] */ __RPC__out MMC_COOKIE *pCookie);
        
        END_INTERFACE
    } IConsoleNameSpaceVtbl;

    interface IConsoleNameSpace
    {
        CONST_VTBL struct IConsoleNameSpaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IConsoleNameSpace_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IConsoleNameSpace_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IConsoleNameSpace_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IConsoleNameSpace_InsertItem(This,item)	\
    ( (This)->lpVtbl -> InsertItem(This,item) ) 

#define IConsoleNameSpace_DeleteItem(This,hItem,fDeleteThis)	\
    ( (This)->lpVtbl -> DeleteItem(This,hItem,fDeleteThis) ) 

#define IConsoleNameSpace_SetItem(This,item)	\
    ( (This)->lpVtbl -> SetItem(This,item) ) 

#define IConsoleNameSpace_GetItem(This,item)	\
    ( (This)->lpVtbl -> GetItem(This,item) ) 

#define IConsoleNameSpace_GetChildItem(This,item,pItemChild,pCookie)	\
    ( (This)->lpVtbl -> GetChildItem(This,item,pItemChild,pCookie) ) 

#define IConsoleNameSpace_GetNextItem(This,item,pItemNext,pCookie)	\
    ( (This)->lpVtbl -> GetNextItem(This,item,pItemNext,pCookie) ) 

#define IConsoleNameSpace_GetParentItem(This,item,pItemParent,pCookie)	\
    ( (This)->lpVtbl -> GetParentItem(This,item,pItemParent,pCookie) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IConsoleNameSpace_INTERFACE_DEFINED__ */


#ifndef __IConsoleNameSpace2_INTERFACE_DEFINED__
#define __IConsoleNameSpace2_INTERFACE_DEFINED__

/* interface IConsoleNameSpace2 */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IConsoleNameSpace2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("255F18CC-65DB-11D1-A7DC-00C04FD8D565")
    IConsoleNameSpace2 : public IConsoleNameSpace
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Expand( 
            /* [in] */ HSCOPEITEM hItem) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddExtension( 
            /* [in] */ HSCOPEITEM hItem,
            /* [in] */ __RPC__in LPCLSID lpClsid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IConsoleNameSpace2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IConsoleNameSpace2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IConsoleNameSpace2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IConsoleNameSpace2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InsertItem )( 
            __RPC__in IConsoleNameSpace2 * This,
            /* [out][in] */ __RPC__inout LPSCOPEDATAITEM item);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            __RPC__in IConsoleNameSpace2 * This,
            /* [in] */ HSCOPEITEM hItem,
            /* [in] */ long fDeleteThis);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            __RPC__in IConsoleNameSpace2 * This,
            /* [in] */ __RPC__in LPSCOPEDATAITEM item);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            __RPC__in IConsoleNameSpace2 * This,
            /* [out][in] */ __RPC__inout LPSCOPEDATAITEM item);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetChildItem )( 
            __RPC__in IConsoleNameSpace2 * This,
            /* [in] */ HSCOPEITEM item,
            /* [out] */ __RPC__out HSCOPEITEM *pItemChild,
            /* [out] */ __RPC__out MMC_COOKIE *pCookie);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetNextItem )( 
            __RPC__in IConsoleNameSpace2 * This,
            /* [in] */ HSCOPEITEM item,
            /* [out] */ __RPC__out HSCOPEITEM *pItemNext,
            /* [out] */ __RPC__out MMC_COOKIE *pCookie);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParentItem )( 
            __RPC__in IConsoleNameSpace2 * This,
            /* [in] */ HSCOPEITEM item,
            /* [out] */ __RPC__out HSCOPEITEM *pItemParent,
            /* [out] */ __RPC__out MMC_COOKIE *pCookie);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Expand )( 
            __RPC__in IConsoleNameSpace2 * This,
            /* [in] */ HSCOPEITEM hItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddExtension )( 
            __RPC__in IConsoleNameSpace2 * This,
            /* [in] */ HSCOPEITEM hItem,
            /* [in] */ __RPC__in LPCLSID lpClsid);
        
        END_INTERFACE
    } IConsoleNameSpace2Vtbl;

    interface IConsoleNameSpace2
    {
        CONST_VTBL struct IConsoleNameSpace2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IConsoleNameSpace2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IConsoleNameSpace2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IConsoleNameSpace2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IConsoleNameSpace2_InsertItem(This,item)	\
    ( (This)->lpVtbl -> InsertItem(This,item) ) 

#define IConsoleNameSpace2_DeleteItem(This,hItem,fDeleteThis)	\
    ( (This)->lpVtbl -> DeleteItem(This,hItem,fDeleteThis) ) 

#define IConsoleNameSpace2_SetItem(This,item)	\
    ( (This)->lpVtbl -> SetItem(This,item) ) 

#define IConsoleNameSpace2_GetItem(This,item)	\
    ( (This)->lpVtbl -> GetItem(This,item) ) 

#define IConsoleNameSpace2_GetChildItem(This,item,pItemChild,pCookie)	\
    ( (This)->lpVtbl -> GetChildItem(This,item,pItemChild,pCookie) ) 

#define IConsoleNameSpace2_GetNextItem(This,item,pItemNext,pCookie)	\
    ( (This)->lpVtbl -> GetNextItem(This,item,pItemNext,pCookie) ) 

#define IConsoleNameSpace2_GetParentItem(This,item,pItemParent,pCookie)	\
    ( (This)->lpVtbl -> GetParentItem(This,item,pItemParent,pCookie) ) 


#define IConsoleNameSpace2_Expand(This,hItem)	\
    ( (This)->lpVtbl -> Expand(This,hItem) ) 

#define IConsoleNameSpace2_AddExtension(This,hItem,lpClsid)	\
    ( (This)->lpVtbl -> AddExtension(This,hItem,lpClsid) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IConsoleNameSpace2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mmc_0000_0013 */
/* [local] */ 


typedef struct _PSP *HPROPSHEETPAGE;



extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0013_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0013_v0_0_s_ifspec;

#ifndef __IPropertySheetCallback_INTERFACE_DEFINED__
#define __IPropertySheetCallback_INTERFACE_DEFINED__

/* interface IPropertySheetCallback */
/* [unique][helpstring][uuid][object][local] */ 


EXTERN_C const IID IID_IPropertySheetCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("85DE64DD-EF21-11cf-A285-00C04FD8DBE6")
    IPropertySheetCallback : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddPage( 
            /* [in] */ HPROPSHEETPAGE hPage) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemovePage( 
            /* [in] */ HPROPSHEETPAGE hPage) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPropertySheetCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPropertySheetCallback * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPropertySheetCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPropertySheetCallback * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPage )( 
            IPropertySheetCallback * This,
            /* [in] */ HPROPSHEETPAGE hPage);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemovePage )( 
            IPropertySheetCallback * This,
            /* [in] */ HPROPSHEETPAGE hPage);
        
        END_INTERFACE
    } IPropertySheetCallbackVtbl;

    interface IPropertySheetCallback
    {
        CONST_VTBL struct IPropertySheetCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPropertySheetCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPropertySheetCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPropertySheetCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPropertySheetCallback_AddPage(This,hPage)	\
    ( (This)->lpVtbl -> AddPage(This,hPage) ) 

#define IPropertySheetCallback_RemovePage(This,hPage)	\
    ( (This)->lpVtbl -> RemovePage(This,hPage) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPropertySheetCallback_INTERFACE_DEFINED__ */


#ifndef __IPropertySheetProvider_INTERFACE_DEFINED__
#define __IPropertySheetProvider_INTERFACE_DEFINED__

/* interface IPropertySheetProvider */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IPropertySheetProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("85DE64DE-EF21-11cf-A285-00C04FD8DBE6")
    IPropertySheetProvider : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreatePropertySheet( 
            /* [in] */ __RPC__in LPCWSTR title,
            /* [in] */ boolean type,
            /* [in] */ MMC_COOKIE cookie,
            /* [in] */ __RPC__in_opt LPDATAOBJECT pIDataObjectm,
            /* [in] */ DWORD dwOptions) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FindPropertySheet( 
            /* [in] */ HSCOPEITEM hItem,
            /* [in] */ __RPC__in_opt LPCOMPONENT lpComponent,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddPrimaryPages( 
            __RPC__in_opt LPUNKNOWN lpUnknown,
            BOOL bCreateHandle,
            __RPC__in HWND hNotifyWindow,
            BOOL bScopePane) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddExtensionPages( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Show( 
            /* [in] */ LONG_PTR window,
            /* [in] */ int page) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPropertySheetProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IPropertySheetProvider * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IPropertySheetProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IPropertySheetProvider * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreatePropertySheet )( 
            __RPC__in IPropertySheetProvider * This,
            /* [in] */ __RPC__in LPCWSTR title,
            /* [in] */ boolean type,
            /* [in] */ MMC_COOKIE cookie,
            /* [in] */ __RPC__in_opt LPDATAOBJECT pIDataObjectm,
            /* [in] */ DWORD dwOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindPropertySheet )( 
            __RPC__in IPropertySheetProvider * This,
            /* [in] */ HSCOPEITEM hItem,
            /* [in] */ __RPC__in_opt LPCOMPONENT lpComponent,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddPrimaryPages )( 
            __RPC__in IPropertySheetProvider * This,
            __RPC__in_opt LPUNKNOWN lpUnknown,
            BOOL bCreateHandle,
            __RPC__in HWND hNotifyWindow,
            BOOL bScopePane);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddExtensionPages )( 
            __RPC__in IPropertySheetProvider * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Show )( 
            __RPC__in IPropertySheetProvider * This,
            /* [in] */ LONG_PTR window,
            /* [in] */ int page);
        
        END_INTERFACE
    } IPropertySheetProviderVtbl;

    interface IPropertySheetProvider
    {
        CONST_VTBL struct IPropertySheetProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPropertySheetProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPropertySheetProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPropertySheetProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPropertySheetProvider_CreatePropertySheet(This,title,type,cookie,pIDataObjectm,dwOptions)	\
    ( (This)->lpVtbl -> CreatePropertySheet(This,title,type,cookie,pIDataObjectm,dwOptions) ) 

#define IPropertySheetProvider_FindPropertySheet(This,hItem,lpComponent,lpDataObject)	\
    ( (This)->lpVtbl -> FindPropertySheet(This,hItem,lpComponent,lpDataObject) ) 

#define IPropertySheetProvider_AddPrimaryPages(This,lpUnknown,bCreateHandle,hNotifyWindow,bScopePane)	\
    ( (This)->lpVtbl -> AddPrimaryPages(This,lpUnknown,bCreateHandle,hNotifyWindow,bScopePane) ) 

#define IPropertySheetProvider_AddExtensionPages(This)	\
    ( (This)->lpVtbl -> AddExtensionPages(This) ) 

#define IPropertySheetProvider_Show(This,window,page)	\
    ( (This)->lpVtbl -> Show(This,window,page) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPropertySheetProvider_INTERFACE_DEFINED__ */


#ifndef __IExtendPropertySheet_INTERFACE_DEFINED__
#define __IExtendPropertySheet_INTERFACE_DEFINED__

/* interface IExtendPropertySheet */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IExtendPropertySheet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("85DE64DC-EF21-11cf-A285-00C04FD8DBE6")
    IExtendPropertySheet : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreatePropertyPages( 
            /* [in] */ __RPC__in_opt LPPROPERTYSHEETCALLBACK lpProvider,
            /* [in] */ LONG_PTR handle,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpIDataObject) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryPagesFor( 
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExtendPropertySheetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IExtendPropertySheet * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IExtendPropertySheet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IExtendPropertySheet * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreatePropertyPages )( 
            __RPC__in IExtendPropertySheet * This,
            /* [in] */ __RPC__in_opt LPPROPERTYSHEETCALLBACK lpProvider,
            /* [in] */ LONG_PTR handle,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpIDataObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryPagesFor )( 
            __RPC__in IExtendPropertySheet * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject);
        
        END_INTERFACE
    } IExtendPropertySheetVtbl;

    interface IExtendPropertySheet
    {
        CONST_VTBL struct IExtendPropertySheetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExtendPropertySheet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IExtendPropertySheet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IExtendPropertySheet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IExtendPropertySheet_CreatePropertyPages(This,lpProvider,handle,lpIDataObject)	\
    ( (This)->lpVtbl -> CreatePropertyPages(This,lpProvider,handle,lpIDataObject) ) 

#define IExtendPropertySheet_QueryPagesFor(This,lpDataObject)	\
    ( (This)->lpVtbl -> QueryPagesFor(This,lpDataObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IExtendPropertySheet_INTERFACE_DEFINED__ */


#ifndef __IControlbar_INTERFACE_DEFINED__
#define __IControlbar_INTERFACE_DEFINED__

/* interface IControlbar */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IControlbar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("69FB811E-6C1C-11D0-A2CB-00C04FD909DD")
    IControlbar : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Create( 
            /* [in] */ MMC_CONTROL_TYPE nType,
            /* [in] */ __RPC__in_opt LPEXTENDCONTROLBAR pExtendControlbar,
            /* [out] */ __RPC__deref_out_opt LPUNKNOWN *ppUnknown) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Attach( 
            /* [in] */ MMC_CONTROL_TYPE nType,
            /* [in] */ __RPC__in_opt LPUNKNOWN lpUnknown) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Detach( 
            /* [in] */ __RPC__in_opt LPUNKNOWN lpUnknown) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IControlbarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IControlbar * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IControlbar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IControlbar * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Create )( 
            __RPC__in IControlbar * This,
            /* [in] */ MMC_CONTROL_TYPE nType,
            /* [in] */ __RPC__in_opt LPEXTENDCONTROLBAR pExtendControlbar,
            /* [out] */ __RPC__deref_out_opt LPUNKNOWN *ppUnknown);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Attach )( 
            __RPC__in IControlbar * This,
            /* [in] */ MMC_CONTROL_TYPE nType,
            /* [in] */ __RPC__in_opt LPUNKNOWN lpUnknown);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Detach )( 
            __RPC__in IControlbar * This,
            /* [in] */ __RPC__in_opt LPUNKNOWN lpUnknown);
        
        END_INTERFACE
    } IControlbarVtbl;

    interface IControlbar
    {
        CONST_VTBL struct IControlbarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IControlbar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IControlbar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IControlbar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IControlbar_Create(This,nType,pExtendControlbar,ppUnknown)	\
    ( (This)->lpVtbl -> Create(This,nType,pExtendControlbar,ppUnknown) ) 

#define IControlbar_Attach(This,nType,lpUnknown)	\
    ( (This)->lpVtbl -> Attach(This,nType,lpUnknown) ) 

#define IControlbar_Detach(This,lpUnknown)	\
    ( (This)->lpVtbl -> Detach(This,lpUnknown) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IControlbar_INTERFACE_DEFINED__ */


#ifndef __IExtendControlbar_INTERFACE_DEFINED__
#define __IExtendControlbar_INTERFACE_DEFINED__

/* interface IExtendControlbar */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IExtendControlbar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("49506520-6F40-11D0-A98B-00C04FD8D565")
    IExtendControlbar : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetControlbar( 
            /* [in] */ __RPC__in_opt LPCONTROLBAR pControlbar) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ControlbarNotify( 
            /* [in] */ MMC_NOTIFY_TYPE event,
            /* [in] */ LPARAM arg,
            /* [in] */ LPARAM param) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExtendControlbarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IExtendControlbar * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IExtendControlbar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IExtendControlbar * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetControlbar )( 
            __RPC__in IExtendControlbar * This,
            /* [in] */ __RPC__in_opt LPCONTROLBAR pControlbar);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ControlbarNotify )( 
            __RPC__in IExtendControlbar * This,
            /* [in] */ MMC_NOTIFY_TYPE event,
            /* [in] */ LPARAM arg,
            /* [in] */ LPARAM param);
        
        END_INTERFACE
    } IExtendControlbarVtbl;

    interface IExtendControlbar
    {
        CONST_VTBL struct IExtendControlbarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExtendControlbar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IExtendControlbar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IExtendControlbar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IExtendControlbar_SetControlbar(This,pControlbar)	\
    ( (This)->lpVtbl -> SetControlbar(This,pControlbar) ) 

#define IExtendControlbar_ControlbarNotify(This,event,arg,param)	\
    ( (This)->lpVtbl -> ControlbarNotify(This,event,arg,param) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IExtendControlbar_INTERFACE_DEFINED__ */


#ifndef __IToolbar_INTERFACE_DEFINED__
#define __IToolbar_INTERFACE_DEFINED__

/* interface IToolbar */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IToolbar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("43136EB9-D36C-11CF-ADBC-00AA00A80033")
    IToolbar : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddBitmap( 
            /* [in] */ int nImages,
            /* [in] */ __RPC__in HBITMAP hbmp,
            /* [in] */ int cxSize,
            /* [in] */ int cySize,
            /* [in] */ COLORREF crMask) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddButtons( 
            /* [in] */ int nButtons,
            /* [in] */ __RPC__in LPMMCBUTTON lpButtons) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InsertButton( 
            /* [in] */ int nIndex,
            /* [in] */ __RPC__in LPMMCBUTTON lpButton) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DeleteButton( 
            /* [in] */ int nIndex) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetButtonState( 
            /* [in] */ int idCommand,
            /* [in] */ MMC_BUTTON_STATE nState,
            /* [out] */ __RPC__out BOOL *pState) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetButtonState( 
            /* [in] */ int idCommand,
            /* [in] */ MMC_BUTTON_STATE nState,
            /* [in] */ BOOL bState) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IToolbarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IToolbar * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IToolbar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IToolbar * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddBitmap )( 
            __RPC__in IToolbar * This,
            /* [in] */ int nImages,
            /* [in] */ __RPC__in HBITMAP hbmp,
            /* [in] */ int cxSize,
            /* [in] */ int cySize,
            /* [in] */ COLORREF crMask);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddButtons )( 
            __RPC__in IToolbar * This,
            /* [in] */ int nButtons,
            /* [in] */ __RPC__in LPMMCBUTTON lpButtons);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InsertButton )( 
            __RPC__in IToolbar * This,
            /* [in] */ int nIndex,
            /* [in] */ __RPC__in LPMMCBUTTON lpButton);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeleteButton )( 
            __RPC__in IToolbar * This,
            /* [in] */ int nIndex);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetButtonState )( 
            __RPC__in IToolbar * This,
            /* [in] */ int idCommand,
            /* [in] */ MMC_BUTTON_STATE nState,
            /* [out] */ __RPC__out BOOL *pState);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetButtonState )( 
            __RPC__in IToolbar * This,
            /* [in] */ int idCommand,
            /* [in] */ MMC_BUTTON_STATE nState,
            /* [in] */ BOOL bState);
        
        END_INTERFACE
    } IToolbarVtbl;

    interface IToolbar
    {
        CONST_VTBL struct IToolbarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IToolbar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IToolbar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IToolbar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IToolbar_AddBitmap(This,nImages,hbmp,cxSize,cySize,crMask)	\
    ( (This)->lpVtbl -> AddBitmap(This,nImages,hbmp,cxSize,cySize,crMask) ) 

#define IToolbar_AddButtons(This,nButtons,lpButtons)	\
    ( (This)->lpVtbl -> AddButtons(This,nButtons,lpButtons) ) 

#define IToolbar_InsertButton(This,nIndex,lpButton)	\
    ( (This)->lpVtbl -> InsertButton(This,nIndex,lpButton) ) 

#define IToolbar_DeleteButton(This,nIndex)	\
    ( (This)->lpVtbl -> DeleteButton(This,nIndex) ) 

#define IToolbar_GetButtonState(This,idCommand,nState,pState)	\
    ( (This)->lpVtbl -> GetButtonState(This,idCommand,nState,pState) ) 

#define IToolbar_SetButtonState(This,idCommand,nState,bState)	\
    ( (This)->lpVtbl -> SetButtonState(This,idCommand,nState,bState) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IToolbar_INTERFACE_DEFINED__ */


#ifndef __IConsoleVerb_INTERFACE_DEFINED__
#define __IConsoleVerb_INTERFACE_DEFINED__

/* interface IConsoleVerb */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IConsoleVerb;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E49F7A60-74AF-11D0-A286-00C04FD8FE93")
    IConsoleVerb : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetVerbState( 
            /* [in] */ MMC_CONSOLE_VERB eCmdID,
            /* [in] */ MMC_BUTTON_STATE nState,
            /* [out] */ __RPC__out BOOL *pState) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetVerbState( 
            /* [in] */ MMC_CONSOLE_VERB eCmdID,
            /* [in] */ MMC_BUTTON_STATE nState,
            /* [in] */ BOOL bState) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetDefaultVerb( 
            /* [in] */ MMC_CONSOLE_VERB eCmdID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetDefaultVerb( 
            /* [out] */ __RPC__out MMC_CONSOLE_VERB *peCmdID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IConsoleVerbVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IConsoleVerb * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IConsoleVerb * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IConsoleVerb * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetVerbState )( 
            __RPC__in IConsoleVerb * This,
            /* [in] */ MMC_CONSOLE_VERB eCmdID,
            /* [in] */ MMC_BUTTON_STATE nState,
            /* [out] */ __RPC__out BOOL *pState);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetVerbState )( 
            __RPC__in IConsoleVerb * This,
            /* [in] */ MMC_CONSOLE_VERB eCmdID,
            /* [in] */ MMC_BUTTON_STATE nState,
            /* [in] */ BOOL bState);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetDefaultVerb )( 
            __RPC__in IConsoleVerb * This,
            /* [in] */ MMC_CONSOLE_VERB eCmdID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetDefaultVerb )( 
            __RPC__in IConsoleVerb * This,
            /* [out] */ __RPC__out MMC_CONSOLE_VERB *peCmdID);
        
        END_INTERFACE
    } IConsoleVerbVtbl;

    interface IConsoleVerb
    {
        CONST_VTBL struct IConsoleVerbVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IConsoleVerb_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IConsoleVerb_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IConsoleVerb_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IConsoleVerb_GetVerbState(This,eCmdID,nState,pState)	\
    ( (This)->lpVtbl -> GetVerbState(This,eCmdID,nState,pState) ) 

#define IConsoleVerb_SetVerbState(This,eCmdID,nState,bState)	\
    ( (This)->lpVtbl -> SetVerbState(This,eCmdID,nState,bState) ) 

#define IConsoleVerb_SetDefaultVerb(This,eCmdID)	\
    ( (This)->lpVtbl -> SetDefaultVerb(This,eCmdID) ) 

#define IConsoleVerb_GetDefaultVerb(This,peCmdID)	\
    ( (This)->lpVtbl -> GetDefaultVerb(This,peCmdID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IConsoleVerb_INTERFACE_DEFINED__ */


#ifndef __ISnapinAbout_INTERFACE_DEFINED__
#define __ISnapinAbout_INTERFACE_DEFINED__

/* interface ISnapinAbout */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_ISnapinAbout;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1245208C-A151-11D0-A7D7-00C04FD909DD")
    ISnapinAbout : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetSnapinDescription( 
            /* [out] */ __RPC__deref_out_opt LPOLESTR *lpDescription) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetProvider( 
            /* [out] */ __RPC__deref_out_opt LPOLESTR *lpName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetSnapinVersion( 
            /* [out] */ __RPC__deref_out_opt LPOLESTR *lpVersion) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetSnapinImage( 
            /* [out] */ __RPC__deref_out_opt HICON *hAppIcon) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetStaticFolderImage( 
            /* [out] */ __RPC__deref_out_opt HBITMAP *hSmallImage,
            /* [out] */ __RPC__deref_out_opt HBITMAP *hSmallImageOpen,
            /* [out] */ __RPC__deref_out_opt HBITMAP *hLargeImage,
            /* [out] */ __RPC__out COLORREF *cMask) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISnapinAboutVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ISnapinAbout * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ISnapinAbout * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ISnapinAbout * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetSnapinDescription )( 
            __RPC__in ISnapinAbout * This,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *lpDescription);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetProvider )( 
            __RPC__in ISnapinAbout * This,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *lpName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetSnapinVersion )( 
            __RPC__in ISnapinAbout * This,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *lpVersion);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetSnapinImage )( 
            __RPC__in ISnapinAbout * This,
            /* [out] */ __RPC__deref_out_opt HICON *hAppIcon);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetStaticFolderImage )( 
            __RPC__in ISnapinAbout * This,
            /* [out] */ __RPC__deref_out_opt HBITMAP *hSmallImage,
            /* [out] */ __RPC__deref_out_opt HBITMAP *hSmallImageOpen,
            /* [out] */ __RPC__deref_out_opt HBITMAP *hLargeImage,
            /* [out] */ __RPC__out COLORREF *cMask);
        
        END_INTERFACE
    } ISnapinAboutVtbl;

    interface ISnapinAbout
    {
        CONST_VTBL struct ISnapinAboutVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISnapinAbout_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISnapinAbout_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISnapinAbout_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISnapinAbout_GetSnapinDescription(This,lpDescription)	\
    ( (This)->lpVtbl -> GetSnapinDescription(This,lpDescription) ) 

#define ISnapinAbout_GetProvider(This,lpName)	\
    ( (This)->lpVtbl -> GetProvider(This,lpName) ) 

#define ISnapinAbout_GetSnapinVersion(This,lpVersion)	\
    ( (This)->lpVtbl -> GetSnapinVersion(This,lpVersion) ) 

#define ISnapinAbout_GetSnapinImage(This,hAppIcon)	\
    ( (This)->lpVtbl -> GetSnapinImage(This,hAppIcon) ) 

#define ISnapinAbout_GetStaticFolderImage(This,hSmallImage,hSmallImageOpen,hLargeImage,cMask)	\
    ( (This)->lpVtbl -> GetStaticFolderImage(This,hSmallImage,hSmallImageOpen,hLargeImage,cMask) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISnapinAbout_INTERFACE_DEFINED__ */


#ifndef __IMenuButton_INTERFACE_DEFINED__
#define __IMenuButton_INTERFACE_DEFINED__

/* interface IMenuButton */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IMenuButton;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("951ED750-D080-11d0-B197-000000000000")
    IMenuButton : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddButton( 
            /* [in] */ int idCommand,
            /* [in] */ __RPC__in LPOLESTR lpButtonText,
            /* [in] */ __RPC__in LPOLESTR lpTooltipText) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetButton( 
            /* [in] */ int idCommand,
            /* [in] */ __RPC__in LPOLESTR lpButtonText,
            /* [in] */ __RPC__in LPOLESTR lpTooltipText) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetButtonState( 
            /* [in] */ int idCommand,
            /* [in] */ MMC_BUTTON_STATE nState,
            /* [in] */ BOOL bState) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMenuButtonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMenuButton * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMenuButton * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMenuButton * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddButton )( 
            __RPC__in IMenuButton * This,
            /* [in] */ int idCommand,
            /* [in] */ __RPC__in LPOLESTR lpButtonText,
            /* [in] */ __RPC__in LPOLESTR lpTooltipText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetButton )( 
            __RPC__in IMenuButton * This,
            /* [in] */ int idCommand,
            /* [in] */ __RPC__in LPOLESTR lpButtonText,
            /* [in] */ __RPC__in LPOLESTR lpTooltipText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetButtonState )( 
            __RPC__in IMenuButton * This,
            /* [in] */ int idCommand,
            /* [in] */ MMC_BUTTON_STATE nState,
            /* [in] */ BOOL bState);
        
        END_INTERFACE
    } IMenuButtonVtbl;

    interface IMenuButton
    {
        CONST_VTBL struct IMenuButtonVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMenuButton_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMenuButton_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMenuButton_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMenuButton_AddButton(This,idCommand,lpButtonText,lpTooltipText)	\
    ( (This)->lpVtbl -> AddButton(This,idCommand,lpButtonText,lpTooltipText) ) 

#define IMenuButton_SetButton(This,idCommand,lpButtonText,lpTooltipText)	\
    ( (This)->lpVtbl -> SetButton(This,idCommand,lpButtonText,lpTooltipText) ) 

#define IMenuButton_SetButtonState(This,idCommand,nState,bState)	\
    ( (This)->lpVtbl -> SetButtonState(This,idCommand,nState,bState) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMenuButton_INTERFACE_DEFINED__ */


#ifndef __ISnapinHelp_INTERFACE_DEFINED__
#define __ISnapinHelp_INTERFACE_DEFINED__

/* interface ISnapinHelp */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_ISnapinHelp;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A6B15ACE-DF59-11D0-A7DD-00C04FD909DD")
    ISnapinHelp : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetHelpTopic( 
            /* [out] */ __RPC__deref_out_opt LPOLESTR *lpCompiledHelpFile) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISnapinHelpVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ISnapinHelp * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ISnapinHelp * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ISnapinHelp * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetHelpTopic )( 
            __RPC__in ISnapinHelp * This,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *lpCompiledHelpFile);
        
        END_INTERFACE
    } ISnapinHelpVtbl;

    interface ISnapinHelp
    {
        CONST_VTBL struct ISnapinHelpVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISnapinHelp_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISnapinHelp_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISnapinHelp_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISnapinHelp_GetHelpTopic(This,lpCompiledHelpFile)	\
    ( (This)->lpVtbl -> GetHelpTopic(This,lpCompiledHelpFile) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISnapinHelp_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mmc_0000_0023 */
/* [local] */ 

#if (MMC_VER >= 0x0110)


extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0023_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0023_v0_0_s_ifspec;

#ifndef __IExtendPropertySheet2_INTERFACE_DEFINED__
#define __IExtendPropertySheet2_INTERFACE_DEFINED__

/* interface IExtendPropertySheet2 */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IExtendPropertySheet2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B7A87232-4A51-11D1-A7EA-00C04FD909DD")
    IExtendPropertySheet2 : public IExtendPropertySheet
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetWatermarks( 
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpIDataObject,
            /* [out] */ __RPC__deref_out_opt HBITMAP *lphWatermark,
            /* [out] */ __RPC__deref_out_opt HBITMAP *lphHeader,
            /* [out] */ __RPC__deref_out_opt HPALETTE *lphPalette,
            /* [out] */ __RPC__out BOOL *bStretch) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExtendPropertySheet2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IExtendPropertySheet2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IExtendPropertySheet2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IExtendPropertySheet2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreatePropertyPages )( 
            __RPC__in IExtendPropertySheet2 * This,
            /* [in] */ __RPC__in_opt LPPROPERTYSHEETCALLBACK lpProvider,
            /* [in] */ LONG_PTR handle,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpIDataObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryPagesFor )( 
            __RPC__in IExtendPropertySheet2 * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetWatermarks )( 
            __RPC__in IExtendPropertySheet2 * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpIDataObject,
            /* [out] */ __RPC__deref_out_opt HBITMAP *lphWatermark,
            /* [out] */ __RPC__deref_out_opt HBITMAP *lphHeader,
            /* [out] */ __RPC__deref_out_opt HPALETTE *lphPalette,
            /* [out] */ __RPC__out BOOL *bStretch);
        
        END_INTERFACE
    } IExtendPropertySheet2Vtbl;

    interface IExtendPropertySheet2
    {
        CONST_VTBL struct IExtendPropertySheet2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExtendPropertySheet2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IExtendPropertySheet2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IExtendPropertySheet2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IExtendPropertySheet2_CreatePropertyPages(This,lpProvider,handle,lpIDataObject)	\
    ( (This)->lpVtbl -> CreatePropertyPages(This,lpProvider,handle,lpIDataObject) ) 

#define IExtendPropertySheet2_QueryPagesFor(This,lpDataObject)	\
    ( (This)->lpVtbl -> QueryPagesFor(This,lpDataObject) ) 


#define IExtendPropertySheet2_GetWatermarks(This,lpIDataObject,lphWatermark,lphHeader,lphPalette,bStretch)	\
    ( (This)->lpVtbl -> GetWatermarks(This,lpIDataObject,lphWatermark,lphHeader,lphPalette,bStretch) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IExtendPropertySheet2_INTERFACE_DEFINED__ */


#ifndef __IHeaderCtrl2_INTERFACE_DEFINED__
#define __IHeaderCtrl2_INTERFACE_DEFINED__

/* interface IHeaderCtrl2 */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IHeaderCtrl2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9757abb8-1b32-11d1-a7ce-00c04fd8d565")
    IHeaderCtrl2 : public IHeaderCtrl
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetChangeTimeOut( 
            /* [in] */ unsigned long uTimeout) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetColumnFilter( 
            /* [in] */ UINT nColumn,
            /* [in] */ DWORD dwType,
            /* [in] */ __RPC__in MMC_FILTERDATA *pFilterData) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetColumnFilter( 
            /* [in] */ UINT nColumn,
            /* [out][in] */ __RPC__inout LPDWORD pdwType,
            /* [out][in] */ __RPC__inout MMC_FILTERDATA *pFilterData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHeaderCtrl2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IHeaderCtrl2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IHeaderCtrl2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IHeaderCtrl2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InsertColumn )( 
            __RPC__in IHeaderCtrl2 * This,
            /* [in] */ int nCol,
            /* [in] */ __RPC__in LPCWSTR title,
            /* [in] */ int nFormat,
            /* [in] */ int nWidth);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeleteColumn )( 
            __RPC__in IHeaderCtrl2 * This,
            /* [in] */ int nCol);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetColumnText )( 
            __RPC__in IHeaderCtrl2 * This,
            /* [in] */ int nCol,
            /* [in] */ __RPC__in LPCWSTR title);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetColumnText )( 
            __RPC__in IHeaderCtrl2 * This,
            /* [in] */ int nCol,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *pText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetColumnWidth )( 
            __RPC__in IHeaderCtrl2 * This,
            /* [in] */ int nCol,
            /* [in] */ int nWidth);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetColumnWidth )( 
            __RPC__in IHeaderCtrl2 * This,
            /* [in] */ int nCol,
            /* [out] */ __RPC__out int *pWidth);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetChangeTimeOut )( 
            __RPC__in IHeaderCtrl2 * This,
            /* [in] */ unsigned long uTimeout);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetColumnFilter )( 
            __RPC__in IHeaderCtrl2 * This,
            /* [in] */ UINT nColumn,
            /* [in] */ DWORD dwType,
            /* [in] */ __RPC__in MMC_FILTERDATA *pFilterData);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetColumnFilter )( 
            __RPC__in IHeaderCtrl2 * This,
            /* [in] */ UINT nColumn,
            /* [out][in] */ __RPC__inout LPDWORD pdwType,
            /* [out][in] */ __RPC__inout MMC_FILTERDATA *pFilterData);
        
        END_INTERFACE
    } IHeaderCtrl2Vtbl;

    interface IHeaderCtrl2
    {
        CONST_VTBL struct IHeaderCtrl2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHeaderCtrl2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHeaderCtrl2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHeaderCtrl2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHeaderCtrl2_InsertColumn(This,nCol,title,nFormat,nWidth)	\
    ( (This)->lpVtbl -> InsertColumn(This,nCol,title,nFormat,nWidth) ) 

#define IHeaderCtrl2_DeleteColumn(This,nCol)	\
    ( (This)->lpVtbl -> DeleteColumn(This,nCol) ) 

#define IHeaderCtrl2_SetColumnText(This,nCol,title)	\
    ( (This)->lpVtbl -> SetColumnText(This,nCol,title) ) 

#define IHeaderCtrl2_GetColumnText(This,nCol,pText)	\
    ( (This)->lpVtbl -> GetColumnText(This,nCol,pText) ) 

#define IHeaderCtrl2_SetColumnWidth(This,nCol,nWidth)	\
    ( (This)->lpVtbl -> SetColumnWidth(This,nCol,nWidth) ) 

#define IHeaderCtrl2_GetColumnWidth(This,nCol,pWidth)	\
    ( (This)->lpVtbl -> GetColumnWidth(This,nCol,pWidth) ) 


#define IHeaderCtrl2_SetChangeTimeOut(This,uTimeout)	\
    ( (This)->lpVtbl -> SetChangeTimeOut(This,uTimeout) ) 

#define IHeaderCtrl2_SetColumnFilter(This,nColumn,dwType,pFilterData)	\
    ( (This)->lpVtbl -> SetColumnFilter(This,nColumn,dwType,pFilterData) ) 

#define IHeaderCtrl2_GetColumnFilter(This,nColumn,pdwType,pFilterData)	\
    ( (This)->lpVtbl -> GetColumnFilter(This,nColumn,pdwType,pFilterData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHeaderCtrl2_INTERFACE_DEFINED__ */


#ifndef __ISnapinHelp2_INTERFACE_DEFINED__
#define __ISnapinHelp2_INTERFACE_DEFINED__

/* interface ISnapinHelp2 */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_ISnapinHelp2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4861A010-20F9-11d2-A510-00C04FB6DD2C")
    ISnapinHelp2 : public ISnapinHelp
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetLinkedTopics( 
            /* [out] */ __RPC__deref_out_opt LPOLESTR *lpCompiledHelpFiles) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISnapinHelp2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ISnapinHelp2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ISnapinHelp2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ISnapinHelp2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetHelpTopic )( 
            __RPC__in ISnapinHelp2 * This,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *lpCompiledHelpFile);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetLinkedTopics )( 
            __RPC__in ISnapinHelp2 * This,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *lpCompiledHelpFiles);
        
        END_INTERFACE
    } ISnapinHelp2Vtbl;

    interface ISnapinHelp2
    {
        CONST_VTBL struct ISnapinHelp2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISnapinHelp2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISnapinHelp2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISnapinHelp2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISnapinHelp2_GetHelpTopic(This,lpCompiledHelpFile)	\
    ( (This)->lpVtbl -> GetHelpTopic(This,lpCompiledHelpFile) ) 


#define ISnapinHelp2_GetLinkedTopics(This,lpCompiledHelpFiles)	\
    ( (This)->lpVtbl -> GetLinkedTopics(This,lpCompiledHelpFiles) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISnapinHelp2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mmc_0000_0026 */
/* [local] */ 

typedef 
enum _MMC_TASK_DISPLAY_TYPE
    {	MMC_TASK_DISPLAY_UNINITIALIZED	= 0,
	MMC_TASK_DISPLAY_TYPE_SYMBOL	= ( MMC_TASK_DISPLAY_UNINITIALIZED + 1 ) ,
	MMC_TASK_DISPLAY_TYPE_VANILLA_GIF	= ( MMC_TASK_DISPLAY_TYPE_SYMBOL + 1 ) ,
	MMC_TASK_DISPLAY_TYPE_CHOCOLATE_GIF	= ( MMC_TASK_DISPLAY_TYPE_VANILLA_GIF + 1 ) ,
	MMC_TASK_DISPLAY_TYPE_BITMAP	= ( MMC_TASK_DISPLAY_TYPE_CHOCOLATE_GIF + 1 ) 
    } 	MMC_TASK_DISPLAY_TYPE;

typedef struct _MMC_TASK_DISPLAY_SYMBOL
    {
    LPOLESTR szFontFamilyName;
    LPOLESTR szURLtoEOT;
    LPOLESTR szSymbolString;
    } 	MMC_TASK_DISPLAY_SYMBOL;

typedef struct _MMC_TASK_DISPLAY_BITMAP
    {
    LPOLESTR szMouseOverBitmap;
    LPOLESTR szMouseOffBitmap;
    } 	MMC_TASK_DISPLAY_BITMAP;

typedef struct _MMC_TASK_DISPLAY_OBJECT
    {
    MMC_TASK_DISPLAY_TYPE eDisplayType;
    union 
        {
        MMC_TASK_DISPLAY_BITMAP uBitmap;
        MMC_TASK_DISPLAY_SYMBOL uSymbol;
         /* Empty union arm */ 
        } 	;
    } 	MMC_TASK_DISPLAY_OBJECT;

typedef 
enum _MMC_ACTION_TYPE
    {	MMC_ACTION_UNINITIALIZED	= -1,
	MMC_ACTION_ID	= ( MMC_ACTION_UNINITIALIZED + 1 ) ,
	MMC_ACTION_LINK	= ( MMC_ACTION_ID + 1 ) ,
	MMC_ACTION_SCRIPT	= ( MMC_ACTION_LINK + 1 ) 
    } 	MMC_ACTION_TYPE;

typedef struct _MMC_TASK
    {
    MMC_TASK_DISPLAY_OBJECT sDisplayObject;
    LPOLESTR szText;
    LPOLESTR szHelpString;
    MMC_ACTION_TYPE eActionType;
    union 
        {
        LONG_PTR nCommandID;
        LPOLESTR szActionURL;
        LPOLESTR szScript;
        } 	;
    } 	MMC_TASK;

typedef struct _MMC_LISTPAD_INFO
    {
    LPOLESTR szTitle;
    LPOLESTR szButtonText;
    LONG_PTR nCommandID;
    } 	MMC_LISTPAD_INFO;

typedef DWORD MMC_STRING_ID;



extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0026_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0026_v0_0_s_ifspec;

#ifndef __IEnumTASK_INTERFACE_DEFINED__
#define __IEnumTASK_INTERFACE_DEFINED__

/* interface IEnumTASK */
/* [unique][helpstring][uuid][object][local] */ 


EXTERN_C const IID IID_IEnumTASK;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("338698b1-5a02-11d1-9fec-00600832db4a")
    IEnumTASK : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ MMC_TASK *rgelt,
            /* [out] */ ULONG *pceltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ IEnumTASK **ppenum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumTASKVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumTASK * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumTASK * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumTASK * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            IEnumTASK * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ MMC_TASK *rgelt,
            /* [out] */ ULONG *pceltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            IEnumTASK * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumTASK * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IEnumTASK * This,
            /* [out] */ IEnumTASK **ppenum);
        
        END_INTERFACE
    } IEnumTASKVtbl;

    interface IEnumTASK
    {
        CONST_VTBL struct IEnumTASKVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumTASK_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumTASK_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumTASK_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumTASK_Next(This,celt,rgelt,pceltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) ) 

#define IEnumTASK_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IEnumTASK_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumTASK_Clone(This,ppenum)	\
    ( (This)->lpVtbl -> Clone(This,ppenum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumTASK_INTERFACE_DEFINED__ */


#ifndef __IExtendTaskPad_INTERFACE_DEFINED__
#define __IExtendTaskPad_INTERFACE_DEFINED__

/* interface IExtendTaskPad */
/* [unique][helpstring][uuid][object][local] */ 


EXTERN_C const IID IID_IExtendTaskPad;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8dee6511-554d-11d1-9fea-00600832db4a")
    IExtendTaskPad : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE TaskNotify( 
            /* [in] */ IDataObject *pdo,
            /* [in] */ VARIANT *arg,
            /* [in] */ VARIANT *param) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EnumTasks( 
            /* [in] */ IDataObject *pdo,
            /* [string][in] */ LPOLESTR szTaskGroup,
            /* [out] */ IEnumTASK **ppEnumTASK) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetTitle( 
            /* [string][in] */ LPOLESTR pszGroup,
            /* [string][out] */ LPOLESTR *pszTitle) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetDescriptiveText( 
            /* [string][in] */ LPOLESTR pszGroup,
            /* [string][out] */ LPOLESTR *pszDescriptiveText) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetBackground( 
            /* [string][in] */ LPOLESTR pszGroup,
            /* [out] */ MMC_TASK_DISPLAY_OBJECT *pTDO) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetListPadInfo( 
            /* [string][in] */ LPOLESTR pszGroup,
            /* [out] */ MMC_LISTPAD_INFO *lpListPadInfo) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExtendTaskPadVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IExtendTaskPad * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IExtendTaskPad * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IExtendTaskPad * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *TaskNotify )( 
            IExtendTaskPad * This,
            /* [in] */ IDataObject *pdo,
            /* [in] */ VARIANT *arg,
            /* [in] */ VARIANT *param);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EnumTasks )( 
            IExtendTaskPad * This,
            /* [in] */ IDataObject *pdo,
            /* [string][in] */ LPOLESTR szTaskGroup,
            /* [out] */ IEnumTASK **ppEnumTASK);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetTitle )( 
            IExtendTaskPad * This,
            /* [string][in] */ LPOLESTR pszGroup,
            /* [string][out] */ LPOLESTR *pszTitle);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetDescriptiveText )( 
            IExtendTaskPad * This,
            /* [string][in] */ LPOLESTR pszGroup,
            /* [string][out] */ LPOLESTR *pszDescriptiveText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetBackground )( 
            IExtendTaskPad * This,
            /* [string][in] */ LPOLESTR pszGroup,
            /* [out] */ MMC_TASK_DISPLAY_OBJECT *pTDO);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetListPadInfo )( 
            IExtendTaskPad * This,
            /* [string][in] */ LPOLESTR pszGroup,
            /* [out] */ MMC_LISTPAD_INFO *lpListPadInfo);
        
        END_INTERFACE
    } IExtendTaskPadVtbl;

    interface IExtendTaskPad
    {
        CONST_VTBL struct IExtendTaskPadVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExtendTaskPad_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IExtendTaskPad_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IExtendTaskPad_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IExtendTaskPad_TaskNotify(This,pdo,arg,param)	\
    ( (This)->lpVtbl -> TaskNotify(This,pdo,arg,param) ) 

#define IExtendTaskPad_EnumTasks(This,pdo,szTaskGroup,ppEnumTASK)	\
    ( (This)->lpVtbl -> EnumTasks(This,pdo,szTaskGroup,ppEnumTASK) ) 

#define IExtendTaskPad_GetTitle(This,pszGroup,pszTitle)	\
    ( (This)->lpVtbl -> GetTitle(This,pszGroup,pszTitle) ) 

#define IExtendTaskPad_GetDescriptiveText(This,pszGroup,pszDescriptiveText)	\
    ( (This)->lpVtbl -> GetDescriptiveText(This,pszGroup,pszDescriptiveText) ) 

#define IExtendTaskPad_GetBackground(This,pszGroup,pTDO)	\
    ( (This)->lpVtbl -> GetBackground(This,pszGroup,pTDO) ) 

#define IExtendTaskPad_GetListPadInfo(This,pszGroup,lpListPadInfo)	\
    ( (This)->lpVtbl -> GetListPadInfo(This,pszGroup,lpListPadInfo) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IExtendTaskPad_INTERFACE_DEFINED__ */


#ifndef __IConsole2_INTERFACE_DEFINED__
#define __IConsole2_INTERFACE_DEFINED__

/* interface IConsole2 */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IConsole2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("103D842A-AA63-11D1-A7E1-00C04FD8D565")
    IConsole2 : public IConsole
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Expand( 
            /* [in] */ HSCOPEITEM hItem,
            /* [in] */ BOOL bExpand) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE IsTaskpadViewPreferred( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetStatusText( 
            /* [string][in] */ __RPC__in_string LPOLESTR pszStatusText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IConsole2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IConsole2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IConsole2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IConsole2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetHeader )( 
            __RPC__in IConsole2 * This,
            /* [in] */ __RPC__in_opt LPHEADERCTRL pHeader);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetToolbar )( 
            __RPC__in IConsole2 * This,
            /* [in] */ __RPC__in_opt LPTOOLBAR pToolbar);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryResultView )( 
            __RPC__in IConsole2 * This,
            /* [out] */ __RPC__deref_out_opt LPUNKNOWN *pUnknown);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryScopeImageList )( 
            __RPC__in IConsole2 * This,
            /* [out] */ __RPC__deref_out_opt LPIMAGELIST *ppImageList);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryResultImageList )( 
            __RPC__in IConsole2 * This,
            /* [out] */ __RPC__deref_out_opt LPIMAGELIST *ppImageList);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UpdateAllViews )( 
            __RPC__in IConsole2 * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject,
            /* [in] */ LPARAM data,
            /* [in] */ LONG_PTR hint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MessageBox )( 
            __RPC__in IConsole2 * This,
            /* [in] */ __RPC__in LPCWSTR lpszText,
            /* [in] */ __RPC__in LPCWSTR lpszTitle,
            /* [in] */ UINT fuStyle,
            /* [out] */ __RPC__out int *piRetval);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryConsoleVerb )( 
            __RPC__in IConsole2 * This,
            /* [out] */ __RPC__deref_out_opt LPCONSOLEVERB *ppConsoleVerb);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SelectScopeItem )( 
            __RPC__in IConsole2 * This,
            /* [in] */ HSCOPEITEM hScopeItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetMainWindow )( 
            __RPC__in IConsole2 * This,
            /* [out] */ __RPC__deref_out_opt HWND *phwnd);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *NewWindow )( 
            __RPC__in IConsole2 * This,
            /* [in] */ HSCOPEITEM hScopeItem,
            /* [in] */ unsigned long lOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Expand )( 
            __RPC__in IConsole2 * This,
            /* [in] */ HSCOPEITEM hItem,
            /* [in] */ BOOL bExpand);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IsTaskpadViewPreferred )( 
            __RPC__in IConsole2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetStatusText )( 
            __RPC__in IConsole2 * This,
            /* [string][in] */ __RPC__in_string LPOLESTR pszStatusText);
        
        END_INTERFACE
    } IConsole2Vtbl;

    interface IConsole2
    {
        CONST_VTBL struct IConsole2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IConsole2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IConsole2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IConsole2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IConsole2_SetHeader(This,pHeader)	\
    ( (This)->lpVtbl -> SetHeader(This,pHeader) ) 

#define IConsole2_SetToolbar(This,pToolbar)	\
    ( (This)->lpVtbl -> SetToolbar(This,pToolbar) ) 

#define IConsole2_QueryResultView(This,pUnknown)	\
    ( (This)->lpVtbl -> QueryResultView(This,pUnknown) ) 

#define IConsole2_QueryScopeImageList(This,ppImageList)	\
    ( (This)->lpVtbl -> QueryScopeImageList(This,ppImageList) ) 

#define IConsole2_QueryResultImageList(This,ppImageList)	\
    ( (This)->lpVtbl -> QueryResultImageList(This,ppImageList) ) 

#define IConsole2_UpdateAllViews(This,lpDataObject,data,hint)	\
    ( (This)->lpVtbl -> UpdateAllViews(This,lpDataObject,data,hint) ) 

#define IConsole2_MessageBox(This,lpszText,lpszTitle,fuStyle,piRetval)	\
    ( (This)->lpVtbl -> MessageBox(This,lpszText,lpszTitle,fuStyle,piRetval) ) 

#define IConsole2_QueryConsoleVerb(This,ppConsoleVerb)	\
    ( (This)->lpVtbl -> QueryConsoleVerb(This,ppConsoleVerb) ) 

#define IConsole2_SelectScopeItem(This,hScopeItem)	\
    ( (This)->lpVtbl -> SelectScopeItem(This,hScopeItem) ) 

#define IConsole2_GetMainWindow(This,phwnd)	\
    ( (This)->lpVtbl -> GetMainWindow(This,phwnd) ) 

#define IConsole2_NewWindow(This,hScopeItem,lOptions)	\
    ( (This)->lpVtbl -> NewWindow(This,hScopeItem,lOptions) ) 


#define IConsole2_Expand(This,hItem,bExpand)	\
    ( (This)->lpVtbl -> Expand(This,hItem,bExpand) ) 

#define IConsole2_IsTaskpadViewPreferred(This)	\
    ( (This)->lpVtbl -> IsTaskpadViewPreferred(This) ) 

#define IConsole2_SetStatusText(This,pszStatusText)	\
    ( (This)->lpVtbl -> SetStatusText(This,pszStatusText) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IConsole2_INTERFACE_DEFINED__ */


#ifndef __IDisplayHelp_INTERFACE_DEFINED__
#define __IDisplayHelp_INTERFACE_DEFINED__

/* interface IDisplayHelp */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IDisplayHelp;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("cc593830-b926-11d1-8063-0000f875a9ce")
    IDisplayHelp : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ShowTopic( 
            /* [in] */ __RPC__in LPOLESTR pszHelpTopic) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDisplayHelpVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IDisplayHelp * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IDisplayHelp * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IDisplayHelp * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ShowTopic )( 
            __RPC__in IDisplayHelp * This,
            /* [in] */ __RPC__in LPOLESTR pszHelpTopic);
        
        END_INTERFACE
    } IDisplayHelpVtbl;

    interface IDisplayHelp
    {
        CONST_VTBL struct IDisplayHelpVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDisplayHelp_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDisplayHelp_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDisplayHelp_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDisplayHelp_ShowTopic(This,pszHelpTopic)	\
    ( (This)->lpVtbl -> ShowTopic(This,pszHelpTopic) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDisplayHelp_INTERFACE_DEFINED__ */


#ifndef __IRequiredExtensions_INTERFACE_DEFINED__
#define __IRequiredExtensions_INTERFACE_DEFINED__

/* interface IRequiredExtensions */
/* [unique][helpstring][uuid][object][local] */ 


EXTERN_C const IID IID_IRequiredExtensions;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("72782D7A-A4A0-11d1-AF0F-00C04FB6DD2C")
    IRequiredExtensions : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EnableAllExtensions( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFirstExtension( 
            /* [out] */ LPCLSID pExtCLSID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetNextExtension( 
            /* [out] */ LPCLSID pExtCLSID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IRequiredExtensionsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRequiredExtensions * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRequiredExtensions * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRequiredExtensions * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EnableAllExtensions )( 
            IRequiredExtensions * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFirstExtension )( 
            IRequiredExtensions * This,
            /* [out] */ LPCLSID pExtCLSID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetNextExtension )( 
            IRequiredExtensions * This,
            /* [out] */ LPCLSID pExtCLSID);
        
        END_INTERFACE
    } IRequiredExtensionsVtbl;

    interface IRequiredExtensions
    {
        CONST_VTBL struct IRequiredExtensionsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRequiredExtensions_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRequiredExtensions_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRequiredExtensions_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRequiredExtensions_EnableAllExtensions(This)	\
    ( (This)->lpVtbl -> EnableAllExtensions(This) ) 

#define IRequiredExtensions_GetFirstExtension(This,pExtCLSID)	\
    ( (This)->lpVtbl -> GetFirstExtension(This,pExtCLSID) ) 

#define IRequiredExtensions_GetNextExtension(This,pExtCLSID)	\
    ( (This)->lpVtbl -> GetNextExtension(This,pExtCLSID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRequiredExtensions_INTERFACE_DEFINED__ */


#ifndef __IStringTable_INTERFACE_DEFINED__
#define __IStringTable_INTERFACE_DEFINED__

/* interface IStringTable */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IStringTable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DE40B7A4-0F65-11d2-8E25-00C04F8ECD78")
    IStringTable : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddString( 
            /* [in] */ __RPC__in LPCOLESTR pszAdd,
            /* [out] */ __RPC__out MMC_STRING_ID *pStringID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetString( 
            /* [in] */ MMC_STRING_ID StringID,
            /* [in] */ ULONG cchBuffer,
            /* [size_is][out] */ __RPC__out_ecount_full(cchBuffer) LPOLESTR lpBuffer,
            /* [out] */ __RPC__out ULONG *pcchOut) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetStringLength( 
            /* [in] */ MMC_STRING_ID StringID,
            /* [out] */ __RPC__out ULONG *pcchString) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DeleteString( 
            /* [in] */ MMC_STRING_ID StringID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DeleteAllStrings( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE FindString( 
            /* [in] */ __RPC__in LPCOLESTR pszFind,
            /* [out] */ __RPC__out MMC_STRING_ID *pStringID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Enumerate( 
            /* [out] */ __RPC__deref_out_opt IEnumString **ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IStringTableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IStringTable * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IStringTable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IStringTable * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddString )( 
            __RPC__in IStringTable * This,
            /* [in] */ __RPC__in LPCOLESTR pszAdd,
            /* [out] */ __RPC__out MMC_STRING_ID *pStringID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetString )( 
            __RPC__in IStringTable * This,
            /* [in] */ MMC_STRING_ID StringID,
            /* [in] */ ULONG cchBuffer,
            /* [size_is][out] */ __RPC__out_ecount_full(cchBuffer) LPOLESTR lpBuffer,
            /* [out] */ __RPC__out ULONG *pcchOut);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetStringLength )( 
            __RPC__in IStringTable * This,
            /* [in] */ MMC_STRING_ID StringID,
            /* [out] */ __RPC__out ULONG *pcchString);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeleteString )( 
            __RPC__in IStringTable * This,
            /* [in] */ MMC_STRING_ID StringID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeleteAllStrings )( 
            __RPC__in IStringTable * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindString )( 
            __RPC__in IStringTable * This,
            /* [in] */ __RPC__in LPCOLESTR pszFind,
            /* [out] */ __RPC__out MMC_STRING_ID *pStringID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Enumerate )( 
            __RPC__in IStringTable * This,
            /* [out] */ __RPC__deref_out_opt IEnumString **ppEnum);
        
        END_INTERFACE
    } IStringTableVtbl;

    interface IStringTable
    {
        CONST_VTBL struct IStringTableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IStringTable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IStringTable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IStringTable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IStringTable_AddString(This,pszAdd,pStringID)	\
    ( (This)->lpVtbl -> AddString(This,pszAdd,pStringID) ) 

#define IStringTable_GetString(This,StringID,cchBuffer,lpBuffer,pcchOut)	\
    ( (This)->lpVtbl -> GetString(This,StringID,cchBuffer,lpBuffer,pcchOut) ) 

#define IStringTable_GetStringLength(This,StringID,pcchString)	\
    ( (This)->lpVtbl -> GetStringLength(This,StringID,pcchString) ) 

#define IStringTable_DeleteString(This,StringID)	\
    ( (This)->lpVtbl -> DeleteString(This,StringID) ) 

#define IStringTable_DeleteAllStrings(This)	\
    ( (This)->lpVtbl -> DeleteAllStrings(This) ) 

#define IStringTable_FindString(This,pszFind,pStringID)	\
    ( (This)->lpVtbl -> FindString(This,pszFind,pStringID) ) 

#define IStringTable_Enumerate(This,ppEnum)	\
    ( (This)->lpVtbl -> Enumerate(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IStringTable_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mmc_0000_0032 */
/* [local] */ 

#endif // MMC_VER >= 0x0110
#if (MMC_VER >= 0x0120)
#define	HDI_HIDDEN	( 0x1 )

typedef struct _MMC_COLUMN_DATA
    {
    int nColIndex;
    DWORD dwFlags;
    int nWidth;
    ULONG_PTR ulReserved;
    } 	MMC_COLUMN_DATA;

typedef struct _MMC_COLUMN_SET_DATA
    {
    int cbSize;
    int nNumCols;
    MMC_COLUMN_DATA *pColData;
    } 	MMC_COLUMN_SET_DATA;

typedef struct _MMC_SORT_DATA
    {
    int nColIndex;
    DWORD dwSortOptions;
    ULONG_PTR ulReserved;
    } 	MMC_SORT_DATA;

typedef struct _MMC_SORT_SET_DATA
    {
    int cbSize;
    int nNumItems;
    MMC_SORT_DATA *pSortData;
    } 	MMC_SORT_SET_DATA;



extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0032_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0032_v0_0_s_ifspec;

#ifndef __IColumnData_INTERFACE_DEFINED__
#define __IColumnData_INTERFACE_DEFINED__

/* interface IColumnData */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IColumnData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("547C1354-024D-11d3-A707-00C04F8EF4CB")
    IColumnData : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetColumnConfigData( 
            /* [in] */ __RPC__in SColumnSetID *pColID,
            /* [in] */ __RPC__in MMC_COLUMN_SET_DATA *pColSetData) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetColumnConfigData( 
            /* [in] */ __RPC__in SColumnSetID *pColID,
            /* [out] */ __RPC__deref_out_opt MMC_COLUMN_SET_DATA **ppColSetData) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetColumnSortData( 
            /* [in] */ __RPC__in SColumnSetID *pColID,
            /* [in] */ __RPC__in MMC_SORT_SET_DATA *pColSortData) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetColumnSortData( 
            /* [in] */ __RPC__in SColumnSetID *pColID,
            /* [out] */ __RPC__deref_out_opt MMC_SORT_SET_DATA **ppColSortData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IColumnDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IColumnData * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IColumnData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IColumnData * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetColumnConfigData )( 
            __RPC__in IColumnData * This,
            /* [in] */ __RPC__in SColumnSetID *pColID,
            /* [in] */ __RPC__in MMC_COLUMN_SET_DATA *pColSetData);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetColumnConfigData )( 
            __RPC__in IColumnData * This,
            /* [in] */ __RPC__in SColumnSetID *pColID,
            /* [out] */ __RPC__deref_out_opt MMC_COLUMN_SET_DATA **ppColSetData);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetColumnSortData )( 
            __RPC__in IColumnData * This,
            /* [in] */ __RPC__in SColumnSetID *pColID,
            /* [in] */ __RPC__in MMC_SORT_SET_DATA *pColSortData);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetColumnSortData )( 
            __RPC__in IColumnData * This,
            /* [in] */ __RPC__in SColumnSetID *pColID,
            /* [out] */ __RPC__deref_out_opt MMC_SORT_SET_DATA **ppColSortData);
        
        END_INTERFACE
    } IColumnDataVtbl;

    interface IColumnData
    {
        CONST_VTBL struct IColumnDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IColumnData_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IColumnData_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IColumnData_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IColumnData_SetColumnConfigData(This,pColID,pColSetData)	\
    ( (This)->lpVtbl -> SetColumnConfigData(This,pColID,pColSetData) ) 

#define IColumnData_GetColumnConfigData(This,pColID,ppColSetData)	\
    ( (This)->lpVtbl -> GetColumnConfigData(This,pColID,ppColSetData) ) 

#define IColumnData_SetColumnSortData(This,pColID,pColSortData)	\
    ( (This)->lpVtbl -> SetColumnSortData(This,pColID,pColSortData) ) 

#define IColumnData_GetColumnSortData(This,pColID,ppColSortData)	\
    ( (This)->lpVtbl -> GetColumnSortData(This,pColID,ppColSortData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IColumnData_INTERFACE_DEFINED__ */


#ifndef __IMessageView_INTERFACE_DEFINED__
#define __IMessageView_INTERFACE_DEFINED__

/* interface IMessageView */
/* [unique][helpstring][uuid][object] */ 

typedef 
enum tagIconIdentifier
    {	Icon_None	= 0,
	Icon_Error	= 32513,
	Icon_Question	= 32514,
	Icon_Warning	= 32515,
	Icon_Information	= 32516,
	Icon_First	= Icon_Error,
	Icon_Last	= Icon_Information
    } 	IconIdentifier;


EXTERN_C const IID IID_IMessageView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("80F94174-FCCC-11d2-B991-00C04F8ECD78")
    IMessageView : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetTitleText( 
            /* [in] */ __RPC__in LPCOLESTR pszTitleText) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetBodyText( 
            /* [in] */ __RPC__in LPCOLESTR pszBodyText) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetIcon( 
            /* [in] */ IconIdentifier id) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMessageViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMessageView * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMessageView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMessageView * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetTitleText )( 
            __RPC__in IMessageView * This,
            /* [in] */ __RPC__in LPCOLESTR pszTitleText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetBodyText )( 
            __RPC__in IMessageView * This,
            /* [in] */ __RPC__in LPCOLESTR pszBodyText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetIcon )( 
            __RPC__in IMessageView * This,
            /* [in] */ IconIdentifier id);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in IMessageView * This);
        
        END_INTERFACE
    } IMessageViewVtbl;

    interface IMessageView
    {
        CONST_VTBL struct IMessageViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMessageView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMessageView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMessageView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMessageView_SetTitleText(This,pszTitleText)	\
    ( (This)->lpVtbl -> SetTitleText(This,pszTitleText) ) 

#define IMessageView_SetBodyText(This,pszBodyText)	\
    ( (This)->lpVtbl -> SetBodyText(This,pszBodyText) ) 

#define IMessageView_SetIcon(This,id)	\
    ( (This)->lpVtbl -> SetIcon(This,id) ) 

#define IMessageView_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMessageView_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mmc_0000_0034 */
/* [local] */ 

typedef struct _RDCITEMHDR
    {
    DWORD dwFlags;
    MMC_COOKIE cookie;
    LPARAM lpReserved;
    } 	RDITEMHDR;

#define	RDCI_ScopeItem	( 0x80000000 )

typedef struct _RDCOMPARE
    {
    DWORD cbSize;
    DWORD dwFlags;
    int nColumn;
    LPARAM lUserParam;
    RDITEMHDR *prdch1;
    RDITEMHDR *prdch2;
    } 	RDCOMPARE;



extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0034_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0034_v0_0_s_ifspec;

#ifndef __IResultDataCompareEx_INTERFACE_DEFINED__
#define __IResultDataCompareEx_INTERFACE_DEFINED__

/* interface IResultDataCompareEx */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IResultDataCompareEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("96933476-0251-11d3-AEB0-00C04F8ECD78")
    IResultDataCompareEx : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Compare( 
            /* [in] */ __RPC__in RDCOMPARE *prdc,
            /* [out] */ __RPC__out int *pnResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IResultDataCompareExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IResultDataCompareEx * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IResultDataCompareEx * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IResultDataCompareEx * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Compare )( 
            __RPC__in IResultDataCompareEx * This,
            /* [in] */ __RPC__in RDCOMPARE *prdc,
            /* [out] */ __RPC__out int *pnResult);
        
        END_INTERFACE
    } IResultDataCompareExVtbl;

    interface IResultDataCompareEx
    {
        CONST_VTBL struct IResultDataCompareExVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IResultDataCompareEx_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IResultDataCompareEx_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IResultDataCompareEx_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IResultDataCompareEx_Compare(This,prdc,pnResult)	\
    ( (This)->lpVtbl -> Compare(This,prdc,pnResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IResultDataCompareEx_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_mmc_0000_0035 */
/* [local] */ 

#endif // MMC_VER >= 0x0120
#if (MMC_VER >= 0x0200)
typedef 
enum _MMC_VIEW_TYPE
    {	MMC_VIEW_TYPE_LIST	= 0,
	MMC_VIEW_TYPE_HTML	= ( MMC_VIEW_TYPE_LIST + 1 ) ,
	MMC_VIEW_TYPE_OCX	= ( MMC_VIEW_TYPE_HTML + 1 ) 
    } 	MMC_VIEW_TYPE;

#define	RVTI_MISC_OPTIONS_NOLISTVIEWS	( 0x1 )

#define	RVTI_LIST_OPTIONS_NONE	( 0 )

#define	RVTI_LIST_OPTIONS_OWNERDATALIST	( 0x2 )

#define	RVTI_LIST_OPTIONS_MULTISELECT	( 0x4 )

#define	RVTI_LIST_OPTIONS_FILTERED	( 0x8 )

#define	RVTI_LIST_OPTIONS_USEFONTLINKING	( 0x20 )

#define	RVTI_LIST_OPTIONS_EXCLUDE_SCOPE_ITEMS_FROM_LIST	( 0x40 )

#define	RVTI_LIST_OPTIONS_LEXICAL_SORT	( 0x80 )

#define	RVTI_LIST_OPTIONS_ALLOWPASTE	( 0x100 )

#define	RVTI_HTML_OPTIONS_NONE	( 0 )

#define	RVTI_HTML_OPTIONS_NOLISTVIEW	( 0x1 )

#define	RVTI_OCX_OPTIONS_NONE	( 0 )

#define	RVTI_OCX_OPTIONS_NOLISTVIEW	( 0x1 )

#define	RVTI_OCX_OPTIONS_CACHE_OCX	( 0x2 )

typedef struct _RESULT_VIEW_TYPE_INFO
    {
    LPOLESTR pstrPersistableViewDescription;
    MMC_VIEW_TYPE eViewType;
    DWORD dwMiscOptions;
    union 
        {
        DWORD dwListOptions;
        struct 
            {
            DWORD dwHTMLOptions;
            LPOLESTR pstrURL;
            } 	;
        struct 
            {
            DWORD dwOCXOptions;
            LPUNKNOWN pUnkControl;
            } 	;
         /* Empty union arm */ 
        } 	;
    } 	RESULT_VIEW_TYPE_INFO;

typedef struct _RESULT_VIEW_TYPE_INFO *PRESULT_VIEW_TYPE_INFO;

#define	CCF_DESCRIPTION	( L"CCF_DESCRIPTION" )

#define	CCF_HTML_DETAILS	( L"CCF_HTML_DETAILS" )

typedef struct _CONTEXTMENUITEM2
    {
    LPWSTR strName;
    LPWSTR strStatusBarText;
    LONG lCommandID;
    LONG lInsertionPointID;
    LONG fFlags;
    LONG fSpecialFlags;
    LPWSTR strLanguageIndependentName;
    } 	CONTEXTMENUITEM2;

typedef CONTEXTMENUITEM2 *LPCONTEXTMENUITEM2;

typedef struct _MMC_EXT_VIEW_DATA
    {
    GUID viewID;
    LPCOLESTR pszURL;
    LPCOLESTR pszViewTitle;
    LPCOLESTR pszTooltipText;
    BOOL bReplacesDefaultView;
    } 	MMC_EXT_VIEW_DATA;

typedef struct _MMC_EXT_VIEW_DATA *PMMC_EXT_VIEW_DATA;

#define	MMC_DEFAULT_OPERATION_COPY	( 0x1 )



extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0035_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mmc_0000_0035_v0_0_s_ifspec;

#ifndef __IComponentData2_INTERFACE_DEFINED__
#define __IComponentData2_INTERFACE_DEFINED__

/* interface IComponentData2 */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IComponentData2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CCA0F2D2-82DE-41B5-BF47-3B2076273D5C")
    IComponentData2 : public IComponentData
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryDispatch( 
            /* [in] */ MMC_COOKIE cookie,
            /* [in] */ DATA_OBJECT_TYPES type,
            /* [out] */ __RPC__deref_out_opt LPDISPATCH *ppDispatch) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IComponentData2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IComponentData2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IComponentData2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IComponentData2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IComponentData2 * This,
            /* [in] */ __RPC__in_opt LPUNKNOWN pUnknown);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateComponent )( 
            __RPC__in IComponentData2 * This,
            /* [out] */ __RPC__deref_out_opt LPCOMPONENT *ppComponent);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Notify )( 
            __RPC__in IComponentData2 * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject,
            /* [in] */ MMC_NOTIFY_TYPE event,
            /* [in] */ LPARAM arg,
            /* [in] */ LPARAM param);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Destroy )( 
            __RPC__in IComponentData2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryDataObject )( 
            __RPC__in IComponentData2 * This,
            /* [in] */ MMC_COOKIE cookie,
            /* [in] */ DATA_OBJECT_TYPES type,
            /* [out] */ __RPC__deref_out_opt LPDATAOBJECT *ppDataObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetDisplayInfo )( 
            __RPC__in IComponentData2 * This,
            /* [out][in] */ __RPC__inout SCOPEDATAITEM *pScopeDataItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CompareObjects )( 
            __RPC__in IComponentData2 * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObjectA,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObjectB);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryDispatch )( 
            __RPC__in IComponentData2 * This,
            /* [in] */ MMC_COOKIE cookie,
            /* [in] */ DATA_OBJECT_TYPES type,
            /* [out] */ __RPC__deref_out_opt LPDISPATCH *ppDispatch);
        
        END_INTERFACE
    } IComponentData2Vtbl;

    interface IComponentData2
    {
        CONST_VTBL struct IComponentData2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IComponentData2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IComponentData2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IComponentData2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IComponentData2_Initialize(This,pUnknown)	\
    ( (This)->lpVtbl -> Initialize(This,pUnknown) ) 

#define IComponentData2_CreateComponent(This,ppComponent)	\
    ( (This)->lpVtbl -> CreateComponent(This,ppComponent) ) 

#define IComponentData2_Notify(This,lpDataObject,event,arg,param)	\
    ( (This)->lpVtbl -> Notify(This,lpDataObject,event,arg,param) ) 

#define IComponentData2_Destroy(This)	\
    ( (This)->lpVtbl -> Destroy(This) ) 

#define IComponentData2_QueryDataObject(This,cookie,type,ppDataObject)	\
    ( (This)->lpVtbl -> QueryDataObject(This,cookie,type,ppDataObject) ) 

#define IComponentData2_GetDisplayInfo(This,pScopeDataItem)	\
    ( (This)->lpVtbl -> GetDisplayInfo(This,pScopeDataItem) ) 

#define IComponentData2_CompareObjects(This,lpDataObjectA,lpDataObjectB)	\
    ( (This)->lpVtbl -> CompareObjects(This,lpDataObjectA,lpDataObjectB) ) 


#define IComponentData2_QueryDispatch(This,cookie,type,ppDispatch)	\
    ( (This)->lpVtbl -> QueryDispatch(This,cookie,type,ppDispatch) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IComponentData2_INTERFACE_DEFINED__ */


#ifndef __IComponent2_INTERFACE_DEFINED__
#define __IComponent2_INTERFACE_DEFINED__

/* interface IComponent2 */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IComponent2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("79A2D615-4A10-4ED4-8C65-8633F9335095")
    IComponent2 : public IComponent
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE QueryDispatch( 
            /* [in] */ MMC_COOKIE cookie,
            /* [in] */ DATA_OBJECT_TYPES type,
            /* [out] */ __RPC__deref_out_opt LPDISPATCH *ppDispatch) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetResultViewType2( 
            /* [in] */ MMC_COOKIE cookie,
            /* [out][in] */ __RPC__inout PRESULT_VIEW_TYPE_INFO pResultViewType) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RestoreResultView( 
            /* [in] */ MMC_COOKIE cookie,
            /* [in] */ __RPC__in PRESULT_VIEW_TYPE_INFO pResultViewType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IComponent2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IComponent2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IComponent2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IComponent2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IComponent2 * This,
            /* [in] */ __RPC__in_opt LPCONSOLE lpConsole);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Notify )( 
            __RPC__in IComponent2 * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject,
            /* [in] */ MMC_NOTIFY_TYPE event,
            /* [in] */ LPARAM arg,
            /* [in] */ LPARAM param);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Destroy )( 
            __RPC__in IComponent2 * This,
            /* [in] */ MMC_COOKIE cookie);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryDataObject )( 
            __RPC__in IComponent2 * This,
            /* [in] */ MMC_COOKIE cookie,
            /* [in] */ DATA_OBJECT_TYPES type,
            /* [out] */ __RPC__deref_out_opt LPDATAOBJECT *ppDataObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetResultViewType )( 
            __RPC__in IComponent2 * This,
            /* [in] */ MMC_COOKIE cookie,
            /* [out] */ __RPC__deref_out_opt LPOLESTR *ppViewType,
            /* [out] */ __RPC__out long *pViewOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetDisplayInfo )( 
            __RPC__in IComponent2 * This,
            /* [out][in] */ __RPC__inout RESULTDATAITEM *pResultDataItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CompareObjects )( 
            __RPC__in IComponent2 * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObjectA,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObjectB);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryDispatch )( 
            __RPC__in IComponent2 * This,
            /* [in] */ MMC_COOKIE cookie,
            /* [in] */ DATA_OBJECT_TYPES type,
            /* [out] */ __RPC__deref_out_opt LPDISPATCH *ppDispatch);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetResultViewType2 )( 
            __RPC__in IComponent2 * This,
            /* [in] */ MMC_COOKIE cookie,
            /* [out][in] */ __RPC__inout PRESULT_VIEW_TYPE_INFO pResultViewType);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RestoreResultView )( 
            __RPC__in IComponent2 * This,
            /* [in] */ MMC_COOKIE cookie,
            /* [in] */ __RPC__in PRESULT_VIEW_TYPE_INFO pResultViewType);
        
        END_INTERFACE
    } IComponent2Vtbl;

    interface IComponent2
    {
        CONST_VTBL struct IComponent2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IComponent2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IComponent2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IComponent2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IComponent2_Initialize(This,lpConsole)	\
    ( (This)->lpVtbl -> Initialize(This,lpConsole) ) 

#define IComponent2_Notify(This,lpDataObject,event,arg,param)	\
    ( (This)->lpVtbl -> Notify(This,lpDataObject,event,arg,param) ) 

#define IComponent2_Destroy(This,cookie)	\
    ( (This)->lpVtbl -> Destroy(This,cookie) ) 

#define IComponent2_QueryDataObject(This,cookie,type,ppDataObject)	\
    ( (This)->lpVtbl -> QueryDataObject(This,cookie,type,ppDataObject) ) 

#define IComponent2_GetResultViewType(This,cookie,ppViewType,pViewOptions)	\
    ( (This)->lpVtbl -> GetResultViewType(This,cookie,ppViewType,pViewOptions) ) 

#define IComponent2_GetDisplayInfo(This,pResultDataItem)	\
    ( (This)->lpVtbl -> GetDisplayInfo(This,pResultDataItem) ) 

#define IComponent2_CompareObjects(This,lpDataObjectA,lpDataObjectB)	\
    ( (This)->lpVtbl -> CompareObjects(This,lpDataObjectA,lpDataObjectB) ) 


#define IComponent2_QueryDispatch(This,cookie,type,ppDispatch)	\
    ( (This)->lpVtbl -> QueryDispatch(This,cookie,type,ppDispatch) ) 

#define IComponent2_GetResultViewType2(This,cookie,pResultViewType)	\
    ( (This)->lpVtbl -> GetResultViewType2(This,cookie,pResultViewType) ) 

#define IComponent2_RestoreResultView(This,cookie,pResultViewType)	\
    ( (This)->lpVtbl -> RestoreResultView(This,cookie,pResultViewType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IComponent2_INTERFACE_DEFINED__ */


#ifndef __IContextMenuCallback2_INTERFACE_DEFINED__
#define __IContextMenuCallback2_INTERFACE_DEFINED__

/* interface IContextMenuCallback2 */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IContextMenuCallback2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E178BC0E-2ED0-4b5e-8097-42C9087E8B33")
    IContextMenuCallback2 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddItem( 
            /* [in] */ __RPC__in CONTEXTMENUITEM2 *pItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IContextMenuCallback2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IContextMenuCallback2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IContextMenuCallback2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IContextMenuCallback2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddItem )( 
            __RPC__in IContextMenuCallback2 * This,
            /* [in] */ __RPC__in CONTEXTMENUITEM2 *pItem);
        
        END_INTERFACE
    } IContextMenuCallback2Vtbl;

    interface IContextMenuCallback2
    {
        CONST_VTBL struct IContextMenuCallback2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContextMenuCallback2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IContextMenuCallback2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IContextMenuCallback2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IContextMenuCallback2_AddItem(This,pItem)	\
    ( (This)->lpVtbl -> AddItem(This,pItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IContextMenuCallback2_INTERFACE_DEFINED__ */


#ifndef __IMMCVersionInfo_INTERFACE_DEFINED__
#define __IMMCVersionInfo_INTERFACE_DEFINED__

/* interface IMMCVersionInfo */
/* [object][helpstring][uuid] */ 


EXTERN_C const IID IID_IMMCVersionInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A8D2C5FE-CDCB-4b9d-BDE5-A27343FF54BC")
    IMMCVersionInfo : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetMMCVersion( 
            /* [out] */ __RPC__out long *pVersionMajor,
            /* [out] */ __RPC__out long *pVersionMinor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMMCVersionInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IMMCVersionInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IMMCVersionInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IMMCVersionInfo * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetMMCVersion )( 
            __RPC__in IMMCVersionInfo * This,
            /* [out] */ __RPC__out long *pVersionMajor,
            /* [out] */ __RPC__out long *pVersionMinor);
        
        END_INTERFACE
    } IMMCVersionInfoVtbl;

    interface IMMCVersionInfo
    {
        CONST_VTBL struct IMMCVersionInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMMCVersionInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMMCVersionInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMMCVersionInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMMCVersionInfo_GetMMCVersion(This,pVersionMajor,pVersionMinor)	\
    ( (This)->lpVtbl -> GetMMCVersion(This,pVersionMajor,pVersionMinor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMMCVersionInfo_INTERFACE_DEFINED__ */



#ifndef __MMCVersionLib_LIBRARY_DEFINED__
#define __MMCVersionLib_LIBRARY_DEFINED__

/* library MMCVersionLib */
/* [helpstring][version][uuid] */ 


EXTERN_C const IID LIBID_MMCVersionLib;

EXTERN_C const CLSID CLSID_MMCVersionInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("D6FEDB1D-CF21-4bd9-AF3B-C5468E9C6684")
MMCVersionInfo;
#endif

EXTERN_C const CLSID CLSID_ConsolePower;

#ifdef __cplusplus

class DECLSPEC_UUID("f0285374-dff1-11d3-b433-00c04f8ecd78")
ConsolePower;
#endif
#endif /* __MMCVersionLib_LIBRARY_DEFINED__ */

#ifndef __IExtendView_INTERFACE_DEFINED__
#define __IExtendView_INTERFACE_DEFINED__

/* interface IExtendView */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IExtendView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("89995CEE-D2ED-4c0e-AE5E-DF7E76F3FA53")
    IExtendView : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetViews( 
            /* [in] */ __RPC__in_opt LPDATAOBJECT pDataObject,
            /* [in] */ __RPC__in_opt LPVIEWEXTENSIONCALLBACK pViewExtensionCallback) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IExtendViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IExtendView * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IExtendView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IExtendView * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetViews )( 
            __RPC__in IExtendView * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT pDataObject,
            /* [in] */ __RPC__in_opt LPVIEWEXTENSIONCALLBACK pViewExtensionCallback);
        
        END_INTERFACE
    } IExtendViewVtbl;

    interface IExtendView
    {
        CONST_VTBL struct IExtendViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExtendView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IExtendView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IExtendView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IExtendView_GetViews(This,pDataObject,pViewExtensionCallback)	\
    ( (This)->lpVtbl -> GetViews(This,pDataObject,pViewExtensionCallback) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IExtendView_INTERFACE_DEFINED__ */


#ifndef __IViewExtensionCallback_INTERFACE_DEFINED__
#define __IViewExtensionCallback_INTERFACE_DEFINED__

/* interface IViewExtensionCallback */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IViewExtensionCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("34DD928A-7599-41E5-9F5E-D6BC3062C2DA")
    IViewExtensionCallback : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddView( 
            /* [in] */ __RPC__in PMMC_EXT_VIEW_DATA pExtViewData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IViewExtensionCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IViewExtensionCallback * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IViewExtensionCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IViewExtensionCallback * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddView )( 
            __RPC__in IViewExtensionCallback * This,
            /* [in] */ __RPC__in PMMC_EXT_VIEW_DATA pExtViewData);
        
        END_INTERFACE
    } IViewExtensionCallbackVtbl;

    interface IViewExtensionCallback
    {
        CONST_VTBL struct IViewExtensionCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IViewExtensionCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IViewExtensionCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IViewExtensionCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IViewExtensionCallback_AddView(This,pExtViewData)	\
    ( (This)->lpVtbl -> AddView(This,pExtViewData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IViewExtensionCallback_INTERFACE_DEFINED__ */


#ifndef __IConsolePower_INTERFACE_DEFINED__
#define __IConsolePower_INTERFACE_DEFINED__

/* interface IConsolePower */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IConsolePower;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1cfbdd0e-62ca-49ce-a3af-dbb2de61b068")
    IConsolePower : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetExecutionState( 
            /* [in] */ DWORD dwAdd,
            /* [in] */ DWORD dwRemove) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ResetIdleTimer( 
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IConsolePowerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IConsolePower * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IConsolePower * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IConsolePower * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetExecutionState )( 
            __RPC__in IConsolePower * This,
            /* [in] */ DWORD dwAdd,
            /* [in] */ DWORD dwRemove);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ResetIdleTimer )( 
            __RPC__in IConsolePower * This,
            /* [in] */ DWORD dwFlags);
        
        END_INTERFACE
    } IConsolePowerVtbl;

    interface IConsolePower
    {
        CONST_VTBL struct IConsolePowerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IConsolePower_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IConsolePower_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IConsolePower_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IConsolePower_SetExecutionState(This,dwAdd,dwRemove)	\
    ( (This)->lpVtbl -> SetExecutionState(This,dwAdd,dwRemove) ) 

#define IConsolePower_ResetIdleTimer(This,dwFlags)	\
    ( (This)->lpVtbl -> ResetIdleTimer(This,dwFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IConsolePower_INTERFACE_DEFINED__ */


#ifndef __IConsolePowerSink_INTERFACE_DEFINED__
#define __IConsolePowerSink_INTERFACE_DEFINED__

/* interface IConsolePowerSink */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IConsolePowerSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3333759f-fe4f-4975-b143-fec0a5dd6d65")
    IConsolePowerSink : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE OnPowerBroadcast( 
            /* [in] */ UINT nEvent,
            /* [in] */ LPARAM lParam,
            /* [out] */ __RPC__out LRESULT *plReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IConsolePowerSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IConsolePowerSink * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IConsolePowerSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IConsolePowerSink * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *OnPowerBroadcast )( 
            __RPC__in IConsolePowerSink * This,
            /* [in] */ UINT nEvent,
            /* [in] */ LPARAM lParam,
            /* [out] */ __RPC__out LRESULT *plReturn);
        
        END_INTERFACE
    } IConsolePowerSinkVtbl;

    interface IConsolePowerSink
    {
        CONST_VTBL struct IConsolePowerSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IConsolePowerSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IConsolePowerSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IConsolePowerSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IConsolePowerSink_OnPowerBroadcast(This,nEvent,lParam,plReturn)	\
    ( (This)->lpVtbl -> OnPowerBroadcast(This,nEvent,lParam,plReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IConsolePowerSink_INTERFACE_DEFINED__ */


#ifndef __INodeProperties_INTERFACE_DEFINED__
#define __INodeProperties_INTERFACE_DEFINED__

/* interface INodeProperties */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_INodeProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("15BC4D24-A522-4406-AA55-0749537A6865")
    INodeProperties : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ __RPC__in_opt LPDATAOBJECT pDataObject,
            /* [in] */ __RPC__in BSTR szPropertyName,
            /* [out] */ __RPC__deref_out_opt PBSTR pbstrProperty) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INodePropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in INodeProperties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in INodeProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in INodeProperties * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in INodeProperties * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT pDataObject,
            /* [in] */ __RPC__in BSTR szPropertyName,
            /* [out] */ __RPC__deref_out_opt PBSTR pbstrProperty);
        
        END_INTERFACE
    } INodePropertiesVtbl;

    interface INodeProperties
    {
        CONST_VTBL struct INodePropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INodeProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define INodeProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define INodeProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define INodeProperties_GetProperty(This,pDataObject,szPropertyName,pbstrProperty)	\
    ( (This)->lpVtbl -> GetProperty(This,pDataObject,szPropertyName,pbstrProperty) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __INodeProperties_INTERFACE_DEFINED__ */


#ifndef __IConsole3_INTERFACE_DEFINED__
#define __IConsole3_INTERFACE_DEFINED__

/* interface IConsole3 */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IConsole3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4F85EFDB-D0E1-498c-8D4A-D010DFDD404F")
    IConsole3 : public IConsole2
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RenameScopeItem( 
            /* [in] */ HSCOPEITEM hScopeItem) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IConsole3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IConsole3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IConsole3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IConsole3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetHeader )( 
            __RPC__in IConsole3 * This,
            /* [in] */ __RPC__in_opt LPHEADERCTRL pHeader);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetToolbar )( 
            __RPC__in IConsole3 * This,
            /* [in] */ __RPC__in_opt LPTOOLBAR pToolbar);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryResultView )( 
            __RPC__in IConsole3 * This,
            /* [out] */ __RPC__deref_out_opt LPUNKNOWN *pUnknown);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryScopeImageList )( 
            __RPC__in IConsole3 * This,
            /* [out] */ __RPC__deref_out_opt LPIMAGELIST *ppImageList);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryResultImageList )( 
            __RPC__in IConsole3 * This,
            /* [out] */ __RPC__deref_out_opt LPIMAGELIST *ppImageList);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UpdateAllViews )( 
            __RPC__in IConsole3 * This,
            /* [in] */ __RPC__in_opt LPDATAOBJECT lpDataObject,
            /* [in] */ LPARAM data,
            /* [in] */ LONG_PTR hint);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MessageBox )( 
            __RPC__in IConsole3 * This,
            /* [in] */ __RPC__in LPCWSTR lpszText,
            /* [in] */ __RPC__in LPCWSTR lpszTitle,
            /* [in] */ UINT fuStyle,
            /* [out] */ __RPC__out int *piRetval);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *QueryConsoleVerb )( 
            __RPC__in IConsole3 * This,
            /* [out] */ __RPC__deref_out_opt LPCONSOLEVERB *ppConsoleVerb);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SelectScopeItem )( 
            __RPC__in IConsole3 * This,
            /* [in] */ HSCOPEITEM hScopeItem);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetMainWindow )( 
            __RPC__in IConsole3 * This,
            /* [out] */ __RPC__deref_out_opt HWND *phwnd);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *NewWindow )( 
            __RPC__in IConsole3 * This,
            /* [in] */ HSCOPEITEM hScopeItem,
            /* [in] */ unsigned long lOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Expand )( 
            __RPC__in IConsole3 * This,
            /* [in] */ HSCOPEITEM hItem,
            /* [in] */ BOOL bExpand);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IsTaskpadViewPreferred )( 
            __RPC__in IConsole3 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetStatusText )( 
            __RPC__in IConsole3 * This,
            /* [string][in] */ __RPC__in_string LPOLESTR pszStatusText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RenameScopeItem )( 
            __RPC__in IConsole3 * This,
            /* [in] */ HSCOPEITEM hScopeItem);
        
        END_INTERFACE
    } IConsole3Vtbl;

    interface IConsole3
    {
        CONST_VTBL struct IConsole3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IConsole3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IConsole3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IConsole3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IConsole3_SetHeader(This,pHeader)	\
    ( (This)->lpVtbl -> SetHeader(This,pHeader) ) 

#define IConsole3_SetToolbar(This,pToolbar)	\
    ( (This)->lpVtbl -> SetToolbar(This,pToolbar) ) 

#define IConsole3_QueryResultView(This,pUnknown)	\
    ( (This)->lpVtbl -> QueryResultView(This,pUnknown) ) 

#define IConsole3_QueryScopeImageList(This,ppImageList)	\
    ( (This)->lpVtbl -> QueryScopeImageList(This,ppImageList) ) 

#define IConsole3_QueryResultImageList(This,ppImageList)	\
    ( (This)->lpVtbl -> QueryResultImageList(This,ppImageList) ) 

#define IConsole3_UpdateAllViews(This,lpDataObject,data,hint)	\
    ( (This)->lpVtbl -> UpdateAllViews(This,lpDataObject,data,hint) ) 

#define IConsole3_MessageBox(This,lpszText,lpszTitle,fuStyle,piRetval)	\
    ( (This)->lpVtbl -> MessageBox(This,lpszText,lpszTitle,fuStyle,piRetval) ) 

#define IConsole3_QueryConsoleVerb(This,ppConsoleVerb)	\
    ( (This)->lpVtbl -> QueryConsoleVerb(This,ppConsoleVerb) ) 

#define IConsole3_SelectScopeItem(This,hScopeItem)	\
    ( (This)->lpVtbl -> SelectScopeItem(This,hScopeItem) ) 

#define IConsole3_GetMainWindow(This,phwnd)	\
    ( (This)->lpVtbl -> GetMainWindow(This,phwnd) ) 

#define IConsole3_NewWindow(This,hScopeItem,lOptions)	\
    ( (This)->lpVtbl -> NewWindow(This,hScopeItem,lOptions) ) 


#define IConsole3_Expand(This,hItem,bExpand)	\
    ( (This)->lpVtbl -> Expand(This,hItem,bExpand) ) 

#define IConsole3_IsTaskpadViewPreferred(This)	\
    ( (This)->lpVtbl -> IsTaskpadViewPreferred(This) ) 

#define IConsole3_SetStatusText(This,pszStatusText)	\
    ( (This)->lpVtbl -> SetStatusText(This,pszStatusText) ) 


#define IConsole3_RenameScopeItem(This,hScopeItem)	\
    ( (This)->lpVtbl -> RenameScopeItem(This,hScopeItem) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IConsole3_INTERFACE_DEFINED__ */


#ifndef __IResultData2_INTERFACE_DEFINED__
#define __IResultData2_INTERFACE_DEFINED__

/* interface IResultData2 */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IResultData2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0F36E0EB-A7F1-4a81-BE5A-9247F7DE4B1B")
    IResultData2 : public IResultData
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RenameResultItem( 
            /* [in] */ HRESULTITEM itemID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IResultData2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IResultData2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IResultData2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IResultData2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InsertItem )( 
            __RPC__in IResultData2 * This,
            /* [out][in] */ __RPC__inout LPRESULTDATAITEM item);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeleteItem )( 
            __RPC__in IResultData2 * This,
            /* [in] */ HRESULTITEM itemID,
            /* [in] */ int nCol);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *FindItemByLParam )( 
            __RPC__in IResultData2 * This,
            /* [in] */ LPARAM lParam,
            /* [out] */ __RPC__out HRESULTITEM *pItemID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DeleteAllRsltItems )( 
            __RPC__in IResultData2 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetItem )( 
            __RPC__in IResultData2 * This,
            /* [in] */ __RPC__in LPRESULTDATAITEM item);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetItem )( 
            __RPC__in IResultData2 * This,
            /* [out][in] */ __RPC__inout LPRESULTDATAITEM item);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetNextItem )( 
            __RPC__in IResultData2 * This,
            /* [out][in] */ __RPC__inout LPRESULTDATAITEM item);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ModifyItemState )( 
            __RPC__in IResultData2 * This,
            /* [in] */ int nIndex,
            /* [in] */ HRESULTITEM itemID,
            /* [in] */ UINT uAdd,
            /* [in] */ UINT uRemove);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ModifyViewStyle )( 
            __RPC__in IResultData2 * This,
            /* [in] */ MMC_RESULT_VIEW_STYLE add,
            /* [in] */ MMC_RESULT_VIEW_STYLE remove);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetViewMode )( 
            __RPC__in IResultData2 * This,
            /* [in] */ long lViewMode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetViewMode )( 
            __RPC__in IResultData2 * This,
            /* [out] */ __RPC__out long *lViewMode);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UpdateItem )( 
            __RPC__in IResultData2 * This,
            /* [in] */ HRESULTITEM itemID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Sort )( 
            __RPC__in IResultData2 * This,
            /* [in] */ int nColumn,
            /* [in] */ DWORD dwSortOptions,
            /* [in] */ LPARAM lUserParam);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetDescBarText )( 
            __RPC__in IResultData2 * This,
            /* [in] */ __RPC__in LPOLESTR DescText);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetItemCount )( 
            __RPC__in IResultData2 * This,
            /* [in] */ int nItemCount,
            /* [in] */ DWORD dwOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RenameResultItem )( 
            __RPC__in IResultData2 * This,
            /* [in] */ HRESULTITEM itemID);
        
        END_INTERFACE
    } IResultData2Vtbl;

    interface IResultData2
    {
        CONST_VTBL struct IResultData2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IResultData2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IResultData2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IResultData2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IResultData2_InsertItem(This,item)	\
    ( (This)->lpVtbl -> InsertItem(This,item) 