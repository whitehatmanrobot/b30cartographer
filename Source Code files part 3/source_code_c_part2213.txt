AppendChunk( 
            /* [in] */ VARIANT Val) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ __RPC__out LONG *plParmAttribs) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Attributes( 
            /* [in] */ LONG lParmAttribs) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct _ParameterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in _ADOParameter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in _ADOParameter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in _ADOParameter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in _ADOParameter * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in _ADOParameter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in _ADOParameter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ADOParameter * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            __RPC__in _ADOParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt ADOProperties **ppvObject);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in _ADOParameter * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstr);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in _ADOParameter * This,
            /* [in] */ __RPC__in BSTR bstr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in _ADOParameter * This,
            /* [retval][out] */ __RPC__out VARIANT *pvar);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in _ADOParameter * This,
            /* [in] */ VARIANT val);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            __RPC__in _ADOParameter * This,
            /* [retval][out] */ __RPC__out DataTypeEnum *psDataType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            __RPC__in _ADOParameter * This,
            /* [in] */ DataTypeEnum sDataType);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Direction )( 
            __RPC__in _ADOParameter * This,
            /* [in] */ ParameterDirectionEnum lParmDirection);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Direction )( 
            __RPC__in _ADOParameter * This,
            /* [retval][out] */ __RPC__out ParameterDirectionEnum *plParmDirection);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Precision )( 
            __RPC__in _ADOParameter * This,
            /* [in] */ BYTE bPrecision);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Precision )( 
            __RPC__in _ADOParameter * This,
            /* [retval][out] */ __RPC__out BYTE *pbPrecision);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NumericScale )( 
            __RPC__in _ADOParameter * This,
            /* [in] */ BYTE bScale);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NumericScale )( 
            __RPC__in _ADOParameter * This,
            /* [retval][out] */ __RPC__out BYTE *pbScale);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Size )( 
            __RPC__in _ADOParameter * This,
            /* [in] */ ADO_LONGPTR l);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in _ADOParameter * This,
            /* [retval][out] */ __RPC__out ADO_LONGPTR *pl);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AppendChunk )( 
            __RPC__in _ADOParameter * This,
            /* [in] */ VARIANT Val);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            __RPC__in _ADOParameter * This,
            /* [retval][out] */ __RPC__out LONG *plParmAttribs);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Attributes )( 
            __RPC__in _ADOParameter * This,
            /* [in] */ LONG lParmAttribs);
        
        END_INTERFACE
    } _ParameterVtbl;
    interface _Parameter
    {
        CONST_VTBL struct _ParameterVtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define _Parameter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define _Parameter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define _Parameter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 
#define _Parameter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 
#define _Parameter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 
#define _Parameter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 
#define _Parameter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 
#define _Parameter_get_Properties(This,ppvObject)	\
    ( (This)->lpVtbl -> get_Properties(This,ppvObject) ) 
#define _Parameter_get_Name(This,pbstr)	\
    ( (This)->lpVtbl -> get_Name(This,pbstr) ) 
#define _Parameter_put_Name(This,bstr)	\
    ( (This)->lpVtbl -> put_Name(This,bstr) ) 
#define _Parameter_get_Value(This,pvar)	\
    ( (This)->lpVtbl -> get_Value(This,pvar) ) 
#define _Parameter_put_Value(This,val)	\
    ( (This)->lpVtbl -> put_Value(This,val) ) 
#define _Parameter_get_Type(This,psDataType)	\
    ( (This)->lpVtbl -> get_Type(This,psDataType) ) 
#define _Parameter_put_Type(This,sDataType)	\
    ( (This)->lpVtbl -> put_Type(This,sDataType) ) 
#define _Parameter_put_Direction(This,lParmDirection)	\
    ( (This)->lpVtbl -> put_Direction(This,lParmDirection) ) 
#define _Parameter_get_Direction(This,plParmDirection)	\
    ( (This)->lpVtbl -> get_Direction(This,plParmDirection) ) 
#define _Parameter_put_Precision(This,bPrecision)	\
    ( (This)->lpVtbl -> put_Precision(This,bPrecision) ) 
#define _Parameter_get_Precision(This,pbPrecision)	\
    ( (This)->lpVtbl -> get_Precision(This,pbPrecision) ) 
#define _Parameter_put_NumericScale(This,bScale)	\
    ( (This)->lpVtbl -> put_NumericScale(This,bScale) ) 
#define _Parameter_get_NumericScale(This,pbScale)	\
    ( (This)->lpVtbl -> get_NumericScale(This,pbScale) ) 
#define _Parameter_put_Size(This,l)	\
    ( (This)->lpVtbl -> put_Size(This,l) ) 
#define _Parameter_get_Size(This,pl)	\
    ( (This)->lpVtbl -> get_Size(This,pl) ) 
#define _Parameter_AppendChunk(This,Val)	\
    ( (This)->lpVtbl -> AppendChunk(This,Val) ) 
#define _Parameter_get_Attributes(This,plParmAttribs)	\
    ( (This)->lpVtbl -> get_Attributes(This,plParmAttribs) ) 
#define _Parameter_put_Attributes(This,lParmAttribs)	\
    ( (This)->lpVtbl -> put_Attributes(This,lParmAttribs) ) 
#endif /* COBJMACROS */
#endif 	/* C style interface */
#endif 	/* ___Parameter_INTERFACE_DEFINED__ */
EXTERN_C const CLSID CLSID_Parameter;
#ifdef __cplusplus
Parameter;
#endif
#ifndef __Parameters_INTERFACE_DEFINED__
#define __Parameters_INTERFACE_DEFINED__
/* interface ADOParameters */
/* [object][helpcontext][uuid][nonextensible][dual] */ 
EXTERN_C const IID IID_Parameters;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0000050D-0000-0010-8000-00AA006D2EA4")
    ADOParameters : public _ADODynaCollection
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt _ADOParameter **ppvObject) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct ParametersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ADOParameters * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ADOParameters * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ADOParameters * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ADOParameters * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ADOParameters * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ADOParameters * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ADOParameters * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in ADOParameters * This,
            /* [retval][out] */ __RPC__out long *c);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            __RPC__in ADOParameters * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppvObject);
        
        /* [id][helpcontext] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            __RPC__in ADOParameters * This);
        
        /* [helpcontext] */ HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in ADOParameters * This,
            /* [in] */ __RPC__in_opt IDispatch *Object);
        
        /* [helpcontext] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            __RPC__in ADOParameters * This,
            /* [in] */ VARIANT Index);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in ADOParameters * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt _ADOParameter **ppvObject);
        
        END_INTERFACE
    } ParametersVtbl;
    interface Parameters
    {
        CONST_VTBL struct ParametersVtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define Parameters_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define Parameters_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define Parameters_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 
#define Parameters_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 
#define Parameters_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 
#define Parameters_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 
#define Parameters_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 
#define Parameters_get_Count(This,c)	\
    ( (This)->lpVtbl -> get_Count(This,c) ) 
#define Parameters__NewEnum(This,ppvObject)	\
    ( (This)->lpVtbl -> _NewEnum(This,ppvObject) ) 
#define Parameters_Refresh(This)	\
    ( (This)->lpVtbl -> Refresh(This) ) 
#define Parameters_Append(This,Object)	\
    ( (This)->lpVtbl -> Append(This,Object) ) 
#define Parameters_Delete(This,Index)	\
    ( (This)->lpVtbl -> Delete(This,Index) ) 
#define Parameters_get_Item(This,Index,ppvObject)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppvObject) ) 
#endif /* COBJMACROS */
#endif 	/* C style interface */
#endif 	/* __Parameters_INTERFACE_DEFINED__ */
#ifndef __Property_INTERFACE_DEFINED__
#define __Property_INTERFACE_DEFINED__
/* interface ADOProperty */
/* [object][helpcontext][uuid][nonextensible][dual] */ 
EXTERN_C const IID IID_Property;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00000503-0000-0010-8000-00AA006D2EA4")
    ADOProperty : public IDispatch
    {
    public:
        virtual /* [helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ __RPC__out VARIANT *pval) = 0;
        
        virtual /* [helpcontext][id][propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT val) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstr) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ __RPC__out DataTypeEnum *ptype) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ __RPC__out long *plAttributes) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT STDMETHODCALLTYPE put_Attributes( 
            /* [in] */ long lAttributes) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct PropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ADOProperty * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ADOProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ADOProperty * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ADOProperty * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ADOProperty * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ADOProperty * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ADOProperty * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in ADOProperty * This,
            /* [retval][out] */ __RPC__out VARIANT *pval);
        
        /* [helpcontext][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in ADOProperty * This,
            /* [in] */ VARIANT val);
        
        /* [helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in ADOProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstr);
        
        /* [helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            __RPC__in ADOProperty * This,
            /* [retval][out] */ __RPC__out DataTypeEnum *ptype);
        
        /* [helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            __RPC__in ADOProperty * This,
            /* [retval][out] */ __RPC__out long *plAttributes);
        
        /* [helpcontext][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Attributes )( 
            __RPC__in ADOProperty * This,
            /* [in] */ long lAttributes);
        
        END_INTERFACE
    } PropertyVtbl;
    interface Property
    {
        CONST_VTBL struct PropertyVtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define Property_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define Property_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define Property_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 
#define Property_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 
#define Property_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 
#define Property_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 
#define Property_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 
#define Property_get_Value(This,pval)	\
    ( (This)->lpVtbl -> get_Value(This,pval) ) 
#define Property_put_Value(This,val)	\
    ( (This)->lpVtbl -> put_Value(This,val) ) 
#define Property_get_Name(This,pbstr)	\
    ( (This)->lpVtbl -> get_Name(This,pbstr) ) 
#define Property_get_Type(This,ptype)	\
    ( (This)->lpVtbl -> get_Type(This,ptype) ) 
#define Property_get_Attributes(This,plAttributes)	\
    ( (This)->lpVtbl -> get_Attributes(This,plAttributes) ) 
#define Property_put_Attributes(This,lAttributes)	\
    ( (This)->lpVtbl -> put_Attributes(This,lAttributes) ) 
#endif /* COBJMACROS */
#endif 	/* C style interface */
#endif 	/* __Property_INTERFACE_DEFINED__ */
#ifndef __Properties_INTERFACE_DEFINED__
#define __Properties_INTERFACE_DEFINED__
/* interface ADOProperties */
/* [object][helpcontext][uuid][nonextensible][dual] */ 
EXTERN_C const IID IID_Properties;
#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00000504-0000-0010-8000-00AA006D2EA4")
    ADOProperties : public _ADOCollection
    {
    public:
        virtual /* [helpcontext][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt ADOProperty **ppvObject) = 0;
        
    };
    
#else 	/* C style interface */
    typedef struct PropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ADOProperties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ADOProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ADOProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ADOProperties * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ADOProperties * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ADOProperties * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ADOProperties * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][helpcontext][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in ADOProperties * This,
            /* [retval][out] */ __RPC__out long *c);
        
        /* [id][restricted] */ HRESULT ( STDMETHODCALLTYPE *_NewEnum )( 
            __RPC__in ADOProperties * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppvObject);
        
        /* [id][helpcontext] */ HRESULT ( STDMETHODCALLTYPE *Refresh )( 
            __RPC__in ADOProperties * This);
        
        /* [helpcontext][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in ADOProperties * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ __RPC__deref_out_opt ADOProperty **ppvObject);
        
        END_INTERFACE
    } PropertiesVtbl;
    interface Properties
    {
        CONST_VTBL struct PropertiesVtbl *lpVtbl;
    };
    
#ifdef COBJMACROS
#define Properties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define Properties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define Properties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 
#define Properties_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 
#define Properties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 
#define Properties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 
#define Properties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 
#define Properties_get_Count(This,c)	\
    ( (This)->lpVtbl -> get_Count(This,c) ) 
#define Properties__NewEnum(This,ppvObject)	\
    ( (This)->lpVtbl -> _NewEnum(This,ppvObject) ) 
#define Properties_Refresh(This)	\
    ( (This)->lpVtbl -> Refresh(This) ) 
#define Properties_get_Item(This,Index,ppvObject)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppvObject) ) 
#endif /* COBJMACROS */
#endif 	/* C style interface */
#endif 	/* __Properties_INTERFACE_DEFINED__ */
#endif /* __ADODB_LIBRARY_DEFINED__ */
/* interface __MIDL_itf_ado10_0001_0035 */
/* [local] */ 
extern RPC_IF_HANDLE __MIDL_itf_ado10_0001_0035_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ado10_0001_0035_v0_0_s_ifspec;
/* Additional Prototypes for ALL interfaces */
/* end of Additional Prototypes */
#ifdef __cplusplus
}
#endif
#endif
#define ADOCommand _ADOCommand
#define ADORecordset _ADORecordset
#define ADOTransaction _ADOTransaction
#define ADOParameter _ADOParameter
#define ADOConnection _ADOConnection
#define ADOCollection _ADOCollection
#define ADODynaCollection _ADODynaCollection
#define ADORecord _ADORecord
#define ADORecField _ADORecField
#define ADOStream _ADOStream


#endif // _ADOINT_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\Adssts.h ===
//+---------------------------------------------------------------------------
//  Copyright (C) 1996-1999, Microsoft Corporation.
//
//  File:       status.h
//
//  Contents:   Status Codes for ADS objects
//
//----------------------------------------------------------------------------

//
// printer status values
//

#ifdef __cplusplus
extern "C" {
#endif

#if _MSC_VER > 1000
#pragma once
#endif

#define ADS_PRINTER_PAUSED                    0x00000001
#define ADS_PRINTER_PENDING_DELETION          0x00000002
#define ADS_PRINTER_ERROR                     0x00000003
#define ADS_PRINTER_PAPER_JAM                 0x00000004
#define ADS_PRINTER_PAPER_OUT                 0x00000005
#define ADS_PRINTER_MANUAL_FEED               0x00000006
#define ADS_PRINTER_PAPER_PROBLEM             0x00000007
#define ADS_PRINTER_OFFLINE                   0x00000008
#define ADS_PRINTER_IO_ACTIVE                 0x00000100
#define ADS_PRINTER_BUSY                      0x00000200
#define ADS_PRINTER_PRINTING                  0x00000400
#define ADS_PRINTER_OUTPUT_BIN_FULL           0x00000800
#define ADS_PRINTER_NOT_AVAILABLE             0x00001000
#define ADS_PRINTER_WAITING                   0x00002000
#define ADS_PRINTER_PROCESSING                0x00004000
#define ADS_PRINTER_INITIALIZING              0x00008000
#define ADS_PRINTER_WARMING_UP                0x00010000
#define ADS_PRINTER_TONER_LOW                 0x00020000
#define ADS_PRINTER_NO_TONER                  0x00040000
#define ADS_PRINTER_PAGE_PUNT                 0x00080000
#define ADS_PRINTER_USER_INTERVENTION         0x00100000
#define ADS_PRINTER_OUT_OF_MEMORY             0x00200000
#define ADS_PRINTER_DOOR_OPEN                 0x00400000
#define ADS_PRINTER_SERVER_UNKNOWN            0x00800000
#define ADS_PRINTER_POWER_SAVE                0x01000000

//
// job status values
//

#define ADS_JOB_PAUSED                        0x00000001
#define ADS_JOB_ERROR                         0x00000002
#define ADS_JOB_DELETING                      0x00000004
#define ADS_JOB_SPOOLING                      0x00000008
#define ADS_JOB_PRINTING                      0x00000010
#define ADS_JOB_OFFLINE                       0x00000020
#define ADS_JOB_PAPEROUT                      0x00000040
#define ADS_JOB_PRINTED                       0x00000080
#define ADS_JOB_DELETED                       0x00000100

//
// service status values
//

#define ADS_SERVICE_STOPPED                0x00000001
#define ADS_SERVICE_START_PENDING	     0x00000002
#define ADS_SERVICE_STOP_PENDING           0x00000003
#define ADS_SERVICE_RUNNING	             0x00000004
#define ADS_SERVICE_CONTINUE_PENDING       0x00000005
#define ADS_SERVICE_PAUSE_PENDING	     0x00000006
#define ADS_SERVICE_PAUSED                 0x00000007
#define ADS_SERVICE_ERROR                  0x00000008

//---------------------------------------------------------------------

//
// Service Type Valid Values
//

#define ADS_SERVICE_OWN_PROCESS           0x00000010
#define ADS_SERVICE_SHARE_PROCESS         0x00000020
#define ADS_SERVICE_KERNEL_DRIVER         0x00000001
#define ADS_SERVICE_FILE_SYSTEM_DRIVER    0x00000002

//
// Start Type Valid Values
//

#define ADS_SERVICE_BOOT_START          SERVICE_BOOT_START
#define ADS_SERVICE_SYSTEM_START        SERVICE_SYSTEM_START
#define ADS_SERVICE_AUTO_START          SERVICE_AUTO_START
#define ADS_SERVICE_DEMAND_START        SERVICE_DEMAND_START
#define ADS_SERVICE_DISABLED           SERVICE_DISABLED

//
// Error Control Values
//

#define ADS_SERVICE_ERROR_IGNORE          0
#define ADS_SERVICE_ERROR_NORMAL          1
#define ADS_SERVICE_ERROR_SEVERE          2
#define ADS_SERVICE_ERROR_CRITICAL        3


#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AdsProp.h ===
//+----------------------------------------------------------------------------
//
//  Windows NT Active Directory Service Property Pages
//
//  Microsoft Windows
//  Copyright (C) Microsoft Corporation, 1992-1999.
//
//  File:       adsprop.h
//
//  Contents:   Functions and definitions used in the creation of AD property
//              sheets.
//
//  History:    28-Sept-98 Eric Brown created.
//
//-----------------------------------------------------------------------------

#ifndef _ADSPROP_H_
#define _ADSPROP_H_

#if _MSC_VER > 1000
#pragma once
#endif
#ifdef __cplusplus
extern "C" {
#endif

#define WM_ADSPROP_NOTIFY_PAGEINIT   (WM_USER + 1101) // where LPARAM is the PADSPROPINITPARAMS pointer.
#define WM_ADSPROP_NOTIFY_PAGEHWND   (WM_USER + 1102) // where WPARAM => page's HWND and LPARAM => page's Title
#define WM_ADSPROP_NOTIFY_CHANGE     (WM_USER + 1103) // used to send a change notification to a parent sheet
#define WM_ADSPROP_NOTIFY_APPLY      (WM_USER + 1104) // pages send this to the notification object.
#define WM_ADSPROP_NOTIFY_SETFOCUS   (WM_USER + 1105) // used internally by the notification object.
#define WM_ADSPROP_NOTIFY_FOREGROUND (WM_USER + 1106) // used internally by the notification object.
#define WM_ADSPROP_NOTIFY_EXIT       (WM_USER + 1107) // sent on page release
#define WM_ADSPROP_NOTIFY_ERROR      (WM_USER + 1110) // used to send the notification object an error message

//+----------------------------------------------------------------------------
//
//  Structure:  ADSPROPINITPARAMS
//
//  Usage:      Used to pass page initialization information to new pages from
//              the notify object.
//
//-----------------------------------------------------------------------------
typedef struct _ADSPROPINITPARAMS {
    DWORD              dwSize;          // Set this to the size of the struct.
    DWORD              dwFlags;         // Reserved for future use.
    HRESULT            hr;              // If this is non-zero, then the others
    IDirectoryObject * pDsObj;          // should be ignored.
    LPWSTR             pwzCN;
    PADS_ATTR_INFO     pWritableAttrs;
} ADSPROPINITPARAMS, * PADSPROPINITPARAMS;

//+----------------------------------------------------------------------------
//
//  Structure:  ADSPROPERROR
//
//  Usage:      Used to pass page error information to the notify object
//
//-----------------------------------------------------------------------------
typedef struct _ADSPROPERROR {
    HWND               hwndPage;        // The HWND of the page that had the error
    PWSTR              pszPageTitle;    // The title of the page that had the error
    PWSTR              pszObjPath;      // Path to the object that the error occurred on
    PWSTR              pszObjClass;     // Class of the object that the error occurred on
    HRESULT            hr;              // If this is non-zero, then the others
                                        // pszError will be ignored
    PWSTR              pszError;        // An error message.  Used only if hr is zero
} ADSPROPERROR, * PADSPROPERROR;

//+----------------------------------------------------------------------------
//
//  Function:   ADsPropCreateNotifyObj
//
//  Synopsis:   Checks to see if the notification window/object exists for this
//              sheet instance and if not creates it.
//
//  Arguments:  [pAppThdDataObj] - the unmarshalled data object pointer.
//              [pwzADsObjName]  - object path name.
//              [phNotifyObj]    - to return the notificion window handle.
//
//  Returns:    HRESULTs.
//
//-----------------------------------------------------------------------------
STDAPI
ADsPropCreateNotifyObj(LPDATAOBJECT pAppThdDataObj, __in PWSTR pwzADsObjName,
                       HWND * phNotifyObj);

//+----------------------------------------------------------------------------
//
//  Function:   ADsPropGetInitInfo
//
//  Synopsis:   Pages call this at their init time to retreive DS object info.
//
//  Arguments:  [hNotifyObj]  - the notificion window handle.
//              [pInitParams] - struct filled in with DS object info. This
//                              struct must be allocated by the caller before
//                              the call.
//
//  Returns:    FALSE if the notify window has gone away for some reason or
//              if the parameters are invalid.
//
//  Notes:      This call results in the sending of the
//              WM_ADSPROP_NOTIFY_PAGEINIT message to the notify window.
//              pInitParams->pWritableAttrs can be NULL if there are no
//              writable attributes.
//
//-----------------------------------------------------------------------------
STDAPI_(BOOL)
ADsPropGetInitInfo(HWND hNotifyObj, PADSPROPINITPARAMS pInitParams);

//+----------------------------------------------------------------------------
//
//  Function:   ADsPropSetHwndWithTitle
//
//  Synopsis:   Pages call this at their dialog init time to send their hwnd
//              to the Notify object.
//
//  Arguments:  [hNotifyObj]  - the notificion window handle.
//              [hPage]       - the page's window handle.
//              [ptzTitle]    - the page's title
//
//  Returns:    FALSE if the notify window has gone away for some reason.
//
//  Notes:      Sends the WM_ADSPROP_NOTIFY_PAGEHWND message to the notify
//              window. Use this function instead of ADsPropSetHwnd for
//              multi-select property pages
//
//-----------------------------------------------------------------------------
STDAPI_(BOOL)
ADsPropSetHwndWithTitle(HWND hNotifyObj, HWND hPage, __in PTSTR ptzTitle);

//+----------------------------------------------------------------------------
//
//  Function:   ADsPropSetHwnd
//
//  Synopsis:   Pages call this at their dialog init time to send their hwnd
//              to the Notify object.
//
//  Arguments:  [hNotifyObj]  - the notificion window handle.
//              [hPage]       - the page's window handle.
//
//  Returns:    FALSE if the notify window has gone away for some reason.
//
//  Notes:      Sends the WM_ADSPROP_NOTIFY_PAGEHWND message to the notify
//              window.
//
//-----------------------------------------------------------------------------
STDAPI_(BOOL)
ADsPropSetHwnd(HWND hNotifyObj, HWND hPage);

//+----------------------------------------------------------------------------
//
//  function:   ADsPropCheckIfWritable
//
//  Synopsis:   See if the attribute is writable by checking if it is in
//              the allowedAttributesEffective array.
//
//  Arguments:  [pwzAttr]        - the attribute name.
//              [pWritableAttrs] - the array of writable attributes.
//
//  Returns:    FALSE if the attribute name is not found in the writable-attrs
//              array or if the array pointer is NULL.
//
//-----------------------------------------------------------------------------
STDAPI_(BOOL)
ADsPropCheckIfWritable(__in const PWSTR pwzAttr, const PADS_ATTR_INFO pWritableAttrs);

//+----------------------------------------------------------------------------
//
//  function:   ADsPropSendErrorMessage
//
//  Synopsis:   Adds an error message to a list which is presented when
//              ADsPropShowErrorDialog is called
//
//  Arguments:  [hNotifyObj]  - the notificion window handle.
//              [pError]      - the error structure
//
//  Returns:    FALSE if the notify window has gone away for some reason.
//
//-----------------------------------------------------------------------------
STDAPI_(BOOL)
ADsPropSendErrorMessage(HWND hNotifyObj, PADSPROPERROR pError);

//+----------------------------------------------------------------------------
//
//  function:   ADsPropShowErrorDialog
//
//  Synopsis:   Presents an error dialog with the error messages accumulated
//              through calls to ADsPropSendErrorMessage
//
//  Arguments:  [hNotifyObj]  - the notificion window handle.
//              [hPage]       - the property page window handle.
//
//  Returns:    FALSE if the notify window has gone away for some reason.
//
//-----------------------------------------------------------------------------
STDAPI_(BOOL)
ADsPropShowErrorDialog(HWND hNotifyObj, HWND hPage);

#ifdef __cplusplus
}
#endif // __cplusplus

#endif // _ADSPROP_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AdtGen.h ===
//+-----------------------------------------------------------------------
//
// Microsoft Windows
//
// Copyright (c) Microsoft Corporation 2000
//
// File:        A D T G E N . H
//
// Contents:    definitions of types/functions required for 
//              generating generic audits.
//
//              !!!WARNING!!!
//              This file is included by lsarpc.idl, therefore, if you
//              change it, make sure to clean build the entire DS depot.
//
//
// History:     
//   07-January-2000  kumarp        created
//
//------------------------------------------------------------------------

#ifndef _ADTGEN_H
#define _ADTGEN_H


//
// type of audit 
//
// AUDIT_TYPE_LEGACY 
//     In this case the audit event schema is stored in a .mc file.
//
// AUDIT_TYPE_WMI    
//     The schema is stored in WMI. (currently not supported)
//

#define AUDIT_TYPE_LEGACY 1
#define AUDIT_TYPE_WMI    2

//
// Type of parameters passed in the AUDIT_PARAMS.Parameters array
// 
// Use the AdtInitParams function to initialize and prepare 
// an array of audit parameters.
//

typedef enum _AUDIT_PARAM_TYPE
{
    //
    // do we need this?
    //

    APT_None = 1,

    //
    // NULL terminated string 
    //

    APT_String,

    //
    // unsigned long
    //

    APT_Ulong,

    //
    // a pointer. use for specifying handles/pointers
    // (32 bit on 32 bit systems and 64 bit on 64 bit systems)
    // Note that the memory to which the pointer points to
    // is not marshalled when using this type. Use this when you
    // are interested in the absolute value of the pointer.
    // A good example of this is when specifying HANDLE values.
    //

    APT_Pointer,

    //
    // SID
    //

    APT_Sid,

    //
    // Logon ID (LUID), this results in 3 output parameters.
    // 1. Account Name 2. Authority Name 3. LogonID
    //

    APT_LogonId,

    //
    // Object Type List
    //

    APT_ObjectTypeList,
    
    //
    // Luid (not translated to LogonId)
    //
    
    APT_Luid,
    
    //
    // Guid
    //
     
    APT_Guid,

    //
    // Time (FILETIME)
    //

    APT_Time,

    //
    // ULONGLONG
    //

    APT_Int64,
    
    //
    // IP Addess (IPv4 and IPv6). This logs the address as the 
    // first parameter and the port as the second. So ensure 
    // that 2 entries are added in the event message file, one
    // for the address and the immediate next entry as the port
    //

    APT_IpAddress,
    
    //
    // Logon ID with SID (LUID) results in 4 output parameters.
    // 1. SID 2. Account Name 3. Authority Name 4. LogonID
    //

    APT_LogonIdWithSid

} AUDIT_PARAM_TYPE;

// 
// There are two types of flags that can be used with a parameter.
//
// - formatting flag
//   This defines the appearance of a parameter when
//   written to the eventlog. Such flags may become obsolete
//   when we move to WMI auditing.
//
// - control flag
//   This causes a specified action to be taken that affects 
//   a parameter value.
//
//   For example:
//   If you use the AP_PrimaryLogonId/AP_ClientLogonId flag,
//   the system will capture the logon-id from the process/thread token.
//

#define AP_ParamTypeBits  8
#define AP_ParamTypeMask  0x000000ffL

//
// the flags values below have overlapping values. this is ok since
// the scope of each flag is limited to the type to which it applies.
//

//
// APT_Ulong : format flag : causes a number to appear in hex
//

#define AP_FormatHex      (0x0001L << AP_ParamTypeBits)

//
// APT_Ulong : format flag : causes a number to be treated as access-mask.
//                           The meaning of each bit depends on the associated
//                           object type.
//

#define AP_AccessMask     (0x0002L << AP_ParamTypeBits)

                                                       
//
// APT_String : format flag : causes a string to be treated as a file-path
//

#define AP_Filespec       (0x0001L << AP_ParamTypeBits)

//
// APT_LogonId : control flag : logon-id is captured from the process token
//

#define AP_PrimaryLogonId (0x0001L << AP_ParamTypeBits)

//
// APT_LogonId : control flag : logon-id is captured from the thread token
//

#define AP_ClientLogonId  (0x0002L << AP_ParamTypeBits)


//
// internal helper macros
//

#define ApExtractType(TypeFlags)  ((AUDIT_PARAM_TYPE)(TypeFlags & AP_ParamTypeMask))
#define ApExtractFlags(TypeFlags) ((TypeFlags & ~AP_ParamTypeMask))

//
// Element of an object-type-list
//
// The AUDIT_OBJECT_TYPES structure identifies an object type element 
// in a hierarchy of object types. The AccessCheckByType functions use 
// an array of such structures to define a hierarchy of an object and 
// its subobjects, such as property sets and properties.
//

typedef struct _AUDIT_OBJECT_TYPE
{
    GUID        ObjectType;     // guid of the (sub)object
    USHORT      Flags;          // currently not defined
    USHORT      Level;          // level within the hierarchy. 
                                // 0 is the root level
    ACCESS_MASK AccessMask;     // access-mask for this (sub)object
} AUDIT_OBJECT_TYPE, *PAUDIT_OBJECT_TYPE;

typedef struct _AUDIT_OBJECT_TYPES
{
    USHORT Count;               // number of object-types in pObjectTypes
    USHORT Flags;               // currently not defined
#ifdef MIDL_PASS
    [size_is(Count)]
#endif
    AUDIT_OBJECT_TYPE* pObjectTypes; // array of object-types
} AUDIT_OBJECT_TYPES, *PAUDIT_OBJECT_TYPES;


//
// Maximum size of the SOCKADDR_STORAGE structure
//

#define _AUTHZ_SS_MAXSIZE 128                 // Maximum size


typedef struct _AUDIT_IP_ADDRESS
{
	BYTE pIpAddress[_AUTHZ_SS_MAXSIZE];
} AUDIT_IP_ADDRESS, *PAUDIT_IP_ADDRESS;

//
// Structure that defines a single audit parameter.
//
// LsaGenAuditEvent accepts an array of such elements to
// represent the parameters of the audit to be generated.
//
// It is best to initialize this structure using AdtInitParams function.
// This will ensure compatibility with any future changes to this
// structure.
//

typedef struct _AUDIT_PARAM
{
    AUDIT_PARAM_TYPE Type;      // type
    ULONG Length;               // currently unused
    DWORD Flags;                // currently unused

#ifdef MIDL_PASS
    [switch_type(AUDIT_PARAM_TYPE),switch_is(Type)]
#endif
    union 
    {
#ifdef MIDL_PASS
        [default]
#endif
        ULONG_PTR Data0;

#ifdef MIDL_PASS
        [case(APT_String)]
        [string]
#endif
        PWSTR  String;

        
#ifdef MIDL_PASS
        [case(APT_Ulong,
              APT_Pointer)]
#endif
        ULONG_PTR u;
        
#ifdef MIDL_PASS
        [case(APT_Sid)]
#endif
        SID* psid;
        
#ifdef MIDL_PASS
        [case(APT_Guid)]
#endif
        GUID* pguid;

#ifdef MIDL_PASS
        [case(APT_LogonId)]
#endif
        ULONG LogonId_LowPart;

#ifdef MIDL_PASS
        [case(APT_ObjectTypeList)]
#endif
        AUDIT_OBJECT_TYPES* pObjectTypes;
        
#ifdef MIDL_PASS
        [case(APT_IpAddress)]
#endif
        AUDIT_IP_ADDRESS* pIpAddress;
    };

#ifdef MIDL_PASS
    [switch_type(AUDIT_PARAM_TYPE),switch_is(Type)]
#endif
    union 
    {
#ifdef MIDL_PASS
        [default]
#endif
        ULONG_PTR Data1;

#ifdef MIDL_PASS
        [case(APT_LogonId)]
#endif
        LONG LogonId_HighPart;
    };
    
} AUDIT_PARAM, *PAUDIT_PARAM;

//
// Audit control flags. To be used with AUDIT_PARAMS.Flags
//

#define APF_AuditFailure 0x00000000  // generate a failure audit
#define APF_AuditSuccess 0x00000001  // generate a success audit when set,
                                     // a failure audit otherwise. 

//
// set of valid audit control flags 
//

#define APF_ValidFlags   (APF_AuditSuccess)

//
// Audit parameters passed to LsaGenAuditEvent
//

typedef struct _AUDIT_PARAMS
{
    ULONG  Length;              // size in bytes
    DWORD  Flags;               // currently unused
    USHORT Count;               // number of parameters
#ifdef MIDL_PASS
    [size_is(Count)]
#endif    
    AUDIT_PARAM* Parameters;    // array of parameters
} AUDIT_PARAMS, *PAUDIT_PARAMS;

//
// Defines the elements of a legacy audit event.
//

typedef struct _AUTHZ_AUDIT_EVENT_TYPE_LEGACY
{
    //
    // Audit category ID
    //

    USHORT CategoryId;

    //
    // Audit event ID
    //

    USHORT AuditId;

    //
    // Parameter count
    //

    USHORT ParameterCount;
    
} AUTHZ_AUDIT_EVENT_TYPE_LEGACY, *PAUTHZ_AUDIT_EVENT_TYPE_LEGACY;

typedef
#ifdef MIDL_PASS
[switch_type(BYTE)]
#endif
union _AUTHZ_AUDIT_EVENT_TYPE_UNION
{
#ifdef MIDL_PASS
        [case(AUDIT_TYPE_LEGACY)]
#endif
        AUTHZ_AUDIT_EVENT_TYPE_LEGACY Legacy;
} AUTHZ_AUDIT_EVENT_TYPE_UNION, *PAUTHZ_AUDIT_EVENT_TYPE_UNION;

//
// description of an audit event
//

typedef
struct _AUTHZ_AUDIT_EVENT_TYPE_OLD
{
    // version number

    ULONG Version;
    DWORD dwFlags;
    LONG  RefCount;
    ULONG_PTR hAudit;
    LUID  LinkId;
#ifdef MIDL_PASS
    [switch_is(Version)] 
#endif
    AUTHZ_AUDIT_EVENT_TYPE_UNION u;

} AUTHZ_AUDIT_EVENT_TYPE_OLD;

typedef
#ifdef MIDL_PASS
[handle]
#endif
AUTHZ_AUDIT_EVENT_TYPE_OLD* PAUTHZ_AUDIT_EVENT_TYPE_OLD;

typedef
#ifdef MIDL_PASS
[context_handle]
#endif
PVOID AUDIT_HANDLE, *PAUDIT_HANDLE;

//
// Begin support for extensible auditing.
//

//
// Registration Flags.
//

#define AUTHZ_ALLOW_MULTIPLE_SOURCE_INSTANCES 0x1
#define AUTHZ_MIGRATED_LEGACY_PUBLISHER       0x2

//
// Audit Generation Flags.
//

#define AUTHZ_AUDIT_INSTANCE_INFORMATION 0x2

#endif //_ADTGEN_H
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\advpub.h ===
//+---------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//  File:       advpub.h
//
//  Description:
//      Interfaces implemented by advpack.dll.
//
//----------------------------------------------------------------------------

#ifndef _ADVPUB_H_
#define _ADVPUB_H_

#include <setupapi.h>
#include <cfgmgr32.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: RunSetupCommand
//
// SYNOPSIS:    Execute an install section in an INF file, or execute a
//              program.  Advanced INF files are supported.
//
// RETURN CODES:
//
//      S_OK                                 Everything OK, no reboot needed.
//                                           No EXE to wait for.
//      S_ASYNCHRONOUS                       Please wait on phEXE.
//      ERROR_SUCCESS_REBOOT_REQUIRED        Reboot required.
//      E_INVALIDARG                         NULL specified in szCmdName or szDir
//      HRESULT_FROM_WIN32(ERROR_OLD_WIN_VERSION) INF's not supported on this OS version
//      E_UNEXPECTED                         Catastrophic failure(should never happen).
//      HRESULT_FROM_WIN32(GetLastError())   Anything else
/////////////////////////////////////////////////////////////////////////////

#ifndef S_ASYNCHRONOUS
#define S_ASYNCHRONOUS  _HRESULT_TYPEDEF_(0x401e8L)
#endif

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI RunSetupCommandA(HWND hWnd, LPCSTR szCmdName, LPCSTR szInfSection, LPCSTR szDir, LPCSTR lpszTitle, HANDLE* phEXE, DWORD dwFlags, LPVOID pvReserved);
HRESULT WINAPI RunSetupCommandW(HWND hWnd, LPCWSTR szCmdName, LPCWSTR szInfSection, LPCWSTR szDir, LPCWSTR lpszTitle, HANDLE* phEXE, DWORD dwFlags, LPVOID pvReserved);
#ifdef UNICODE
#define RunSetupCommand  RunSetupCommandW
#else
#define RunSetupCommand  RunSetupCommandA
#endif // !UNICODE
#else
HRESULT WINAPI RunSetupCommand(HWND hWnd, LPCSTR szCmdName, LPCSTR szInfSection, LPCSTR szDir, LPCSTR lpszTitle, HANDLE* phEXE, DWORD dwFlags, LPVOID pvReserved);
#endif  // (_WIN32_IE >= 0x0605)

// FLAGS:
#define RSC_FLAG_INF                1       // exxcute INF install
#define RSC_FLAG_SKIPDISKSPACECHECK 2       // Currently does nothing
#define RSC_FLAG_QUIET              4       // quiet mode, no UI
#define RSC_FLAG_NGCONV             8       // don't run groupConv
#define RSC_FLAG_UPDHLPDLLS         16      // force to self-updating on user's system
#define RSC_FLAG_DELAYREGISTEROCX   512     // force delay of ocx registration
#define RSC_FLAG_SETUPAPI           1024    // use setupapi.dll
// don't add new RSC_FLAG_XXX flags! add LaunchINFSectionEx() flags instead.


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: NeedRebootInit
//
// SYNOPSIS:    Initializes state for reboot checking.  Call this function
//              before calling RunSetupCommand.
// RETURNS:     value required to be passed to NeedReboot()
/////////////////////////////////////////////////////////////////////////////

DWORD WINAPI NeedRebootInit();


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: NeedReboot
//
// SYNOPSIS:    Compares stored state with current state to determine if a
//              reboot is required.
//      dwRebootCheck   the return value from NeedRebootInit
//
// RETURNS:
//      TRUE            if a reboot is required;
//      FALSE           otherwise.
/////////////////////////////////////////////////////////////////////////////

BOOL WINAPI NeedReboot(DWORD dwRebootCheck);


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: RebootCheckOnInstall
//
// SYNOPSIS:    Check reboot condition if the given INF section is installed.
//      hwnd    windows handle
//      pszINF  INF filename with fully qualified path
//      pszSec  INF section.  NULL is translated as DefaultInstall or DefaultInstall.NT.
//      dwReserved Not used.
// RETURN:
//      S_OK    Reboot needed if INF section is installed.
//      S_FALSE Reboot is not needed if INF section is installed.
//      HRESULT of Win 32 errors
//
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI RebootCheckOnInstallA(HWND hwnd, LPCSTR pszINF, LPCSTR pszSec, DWORD dwReserved);
HRESULT WINAPI RebootCheckOnInstallW(HWND hwnd, LPCWSTR pszINF, LPCWSTR pszSec, DWORD dwReserved);
#ifdef UNICODE
#define RebootCheckOnInstall  RebootCheckOnInstallW
#else
#define RebootCheckOnInstall  RebootCheckOnInstallA
#endif // !UNICODE
#else
HRESULT WINAPI RebootCheckOnInstall(HWND hwnd, LPCSTR pszINF, LPCSTR pszSec, DWORD dwReserved);
#endif  // (_WIN32_IE >= 0x0605)

//////////////////////////////////////////////////////////////////////////
// ENTRY POINT: TranslateInfString
//
// SYNOPSIS:    Translates a key value in an INF file, using advanced INF
//              syntax.
// RETURN CODES:
//      S_OK                                 Everything OK.
//      HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER)
//                                      The buffer size is too small to hold the
//                                      translated string.  Required size is in *pdwRequiredSize.
//      E_INVALIDARG                         NULL specified in pszInfFilename, pszTranslateSection,
//                                      pszTranslateKey, pdwRequiredSize.
//      HRESULT_FROM_WIN32(ERROR_OLD_WIN_VERSION)
//                                      OS not supported.
//      E_UNEXPECTED                         Catastrophic failure -- should never happen.
//      HRESULT_FROM_WIN32(ERROR_INVALID_PARAMETER)
//                                      The section or key specified does not exist.
//      HRESULT_FROM_WIN32(GetLastError())   Anything else
//
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI TranslateInfStringA(
    __in LPCSTR pszInfFilename,
    __in LPCSTR pszInstallSection,
    __in LPCSTR pszTranslateSection,
    __in LPCSTR pszTranslateKey,
    __out_ecount_opt(cchBuffer) LPSTR pszBuffer,
    __in DWORD cchBuffer,
    __out PDWORD pdwRequiredSize,
    __reserved PVOID pvReserved
    );
HRESULT WINAPI TranslateInfStringW(
    __in LPCWSTR pszInfFilename,
    __in LPCWSTR pszInstallSection,
    __in LPCWSTR pszTranslateSection,
    __in LPCWSTR pszTranslateKey,
    __out_ecount_opt(cchBuffer) LPWSTR pszBuffer,
    __in DWORD cchBuffer,
    __out PDWORD pdwRequiredSize,
    __reserved PVOID pvReserved
    );
#ifdef UNICODE
#define TranslateInfString  TranslateInfStringW
#else
#define TranslateInfString  TranslateInfStringA
#endif // !UNICODE
#else
HRESULT WINAPI TranslateInfString(
    __in LPCSTR pszInfFilename,
    __in LPCSTR pszInstallSection,
    __in LPCSTR pszTranslateSection,
    __in LPCSTR pszTranslateKey,
    __out_ecount_opt(cchBuffer) LPSTR pszBuffer,
    __in DWORD cchBuffer,
    __out PDWORD pdwRequiredSize,
    __reserved PVOID pvReserved
    );
#endif  // (_WIN32_IE >= 0x0605)

/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: RegInstall
//
// SYNOPSIS:    Loads an INF from a string resource, adds some entries to the
//              INF string substitution table, and executes the INF.
// RETURNS:
//      S_OK    success.
//      E_FAIL  failure,
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
typedef struct _StrEntryA {
    LPSTR   pszName;        // String to substitute
    LPSTR   pszValue;       // Replacement string or string resource
} STRENTRYA, *LPSTRENTRYA;
typedef struct _StrEntryW {
    LPWSTR  pszName;        // String to substitute
    LPWSTR  pszValue;       // Replacement string or string resource
} STRENTRYW, *LPSTRENTRYW;
#ifdef UNICODE
typedef STRENTRYW STRENTRY;
typedef LPSTRENTRYW LPSTRENTRY;
#else
typedef STRENTRYA STRENTRY;
typedef LPSTRENTRYA LPSTRENTRY;
#endif // UNICODE

typedef struct _StrTableA {
    DWORD       cEntries;   // Number of entries in the table
    STRENTRYA*   pse;       // Array of entries
} STRTABLEA, *LPSTRTABLEA;
typedef struct _StrTableW {
    DWORD       cEntries;   // Number of entries in the table
    STRENTRYW*   pse;       // Array of entries
} STRTABLEW, *LPSTRTABLEW;
#ifdef UNICODE
typedef STRTABLEW STRTABLE;
typedef LPSTRTABLEW LPSTRTABLE;
#else
typedef STRTABLEA STRTABLE;
typedef LPSTRTABLEA LPSTRTABLE;
#endif // UNICODE

typedef const STRTABLEA CSTRTABLEA;
typedef const STRTABLEW CSTRTABLEW;
#ifdef UNICODE
typedef STRTABLEW STRTABLE;
typedef CSTRTABLEW CSTRTABLE;
#else
typedef STRTABLEA STRTABLE;
typedef CSTRTABLEA CSTRTABLE;
#endif // UNICODE
typedef const STRTABLEA *LPCSTRTABLEA;
typedef const STRTABLEW *LPCSTRTABLEW;
#ifdef UNICODE
typedef STRTABLEW STRTABLE;
typedef LPCSTRTABLEW LPCSTRTABLE;
#else
typedef STRTABLEA STRTABLE;
typedef LPCSTRTABLEA LPCSTRTABLE;
#endif // UNICODE

HRESULT WINAPI RegInstallA(HMODULE hmod, LPCSTR pszSection, const STRTABLEA* pstTable);
HRESULT WINAPI RegInstallW(HMODULE hmod, LPCWSTR pszSection, const STRTABLEW* pstTable);
#ifdef UNICODE
#define RegInstall  RegInstallW
#else
#define RegInstall  RegInstallA
#endif // !UNICODE

#else

typedef struct _StrEntryA {
    LPSTR pszName;          // String to substitute
    LPSTR pszValue;         // Replacement string or string resource
} STRENTRYA, *LPSTRENTRYA;

typedef struct _StrTableA {
    DWORD       cEntries;   // Number of entries in the table
    STRENTRYA*  pse;        // Array of entries
} STRTABLEA, *LPSTRTABLEA;

typedef STRENTRYA STRENTRY;
typedef LPSTRENTRYA LPSTRENTRY;

typedef STRTABLEA STRTABLE;
typedef const STRTABLEA CSTRTABLE;
typedef const STRTABLEA *LPCSTRTABLEA;

HRESULT WINAPI RegInstall(HMODULE hmod, LPCSTR pszSection, const STRTABLEA* pstTable);
#endif  // (_WIN32_IE >= 0x0605)

//
// For people whos minds are too addled to use DELAYLOAD (or UNICODE for that matter)
//
#define REGINSTALL  REGINSTALLA
typedef HRESULT (WINAPI *REGINSTALLA)(
    HMODULE hm,                         // Module that contains REGINST resource
    LPCSTR pszSection,                  // Section of INF to execute
    LPCSTRTABLEA pstTable               // Additional string substitutions
);

/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: LaunchINFSectionEx
//
// SYNOPSIS:    Install INF section with BACKUP/ROLLBACK capabilities.
//
// RETURNS:     E_FAIL on failure, S_OK on success.
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI LaunchINFSectionExA(
    __in_opt HWND hwnd,
    __in_opt HINSTANCE hInstance,
    __in LPSTR pszParms,
    __in INT nShow
    );
HRESULT WINAPI LaunchINFSectionExW(
    __in_opt HWND hwnd,
    __in_opt HINSTANCE hInstance,
    __in LPWSTR pszParms,
    __in INT nShow
    );
#ifdef UNICODE
#define LaunchINFSectionEx  LaunchINFSectionExW
#else
#define LaunchINFSectionEx  LaunchINFSectionExA
#endif // !UNICODE
#else
HRESULT WINAPI LaunchINFSectionEx(
    __in_opt HWND hwnd,
    __in_opt HINSTANCE hInstance,
    __in LPSTR pszParms,
    __in INT nShow
    );
#endif  // (_WIN32_IE >= 0x0605)


// FLAGS: - need to stay this way is for compatibility. Don't change them (but ok to add new ones).
//
#define ALINF_QUIET              4      // quiet mode, no UI
#define ALINF_NGCONV             8      // don't run groupConv
#define ALINF_UPDHLPDLLS         16     // force to self-updating on user's system
#define ALINF_BKINSTALL          32     // backup data before install
#define ALINF_ROLLBACK           64     // rollback to previous state
#define ALINF_CHECKBKDATA        128    // validate the backup data
#define ALINF_ROLLBKDOALL        256    // bypass building file list
#define ALINF_DELAYREGISTEROCX   512    // force delay of ocx registration


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: ExecuteCab
//
// SYNOPSIS:    Extract the an INF from the CAB file, and do INF install on it.
//
// RETURNS:     E_FAIL on failure, S_OK on success.
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
typedef struct _CabInfoA {
    LPSTR   pszCab;
    LPSTR   pszInf;
    LPSTR   pszSection;
    CHAR    szSrcPath[MAX_PATH];
    DWORD   dwFlags;
} CABINFOA, *PCABINFOA;
typedef struct _CabInfoW {
    LPWSTR  pszCab;
    LPWSTR  pszInf;
    LPWSTR  pszSection;
    WCHAR   szSrcPath[MAX_PATH];
    DWORD   dwFlags;
} CABINFOW, *PCABINFOW;
#ifdef UNICODE
typedef CABINFOW CABINFO;
typedef PCABINFOW PCABINFO;
#else
typedef CABINFOA CABINFO;
typedef PCABINFOA PCABINFO;
#endif // UNICODE

HRESULT WINAPI ExecuteCabA(HWND hwnd, CABINFOA* pCab, LPVOID pReserved);
HRESULT WINAPI ExecuteCabW(HWND hwnd, CABINFOW* pCab, LPVOID pReserved);
#ifdef UNICODE
#define ExecuteCab  ExecuteCabW
#else
#define ExecuteCab  ExecuteCabA
#endif // !UNICODE

#else

typedef struct _CabInfoA {
    LPSTR   pszCab;
    LPSTR   pszInf;
    LPSTR   pszSection;
    CHAR    szSrcPath[MAX_PATH];
    DWORD   dwFlags;
} CABINFOA, *PCABINFOA;

typedef CABINFOA CABINFO;
typedef PCABINFOA PCABINFO;

HRESULT WINAPI ExecuteCab(HWND hwnd, CABINFOA* pCab, LPVOID pReserved);
#endif  // (_WIN32_IE >= 0x0605)


// flag as LaunchINFSectionEx's flag defines

/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: AdvInstallFile
//
// SYNOPSIS:    To copy a file from the source to a destination
//              Basicly a wrapper around the setupapi file copy engine
/////////////////////////////////////////////////////////////////////////////

// Flags which can be passed to AdvInstallFile
//
// Here is a copy of the flags defined in setupapi.h for reference below.
//      #define COPYFLG_WARN_IF_SKIP            0x00000001   // warn if user tries to skip file
//      #define COPYFLG_NOSKIP                  0x00000002   // disallow skipping this file
//      #define COPYFLG_NOVERSIONCHECK          0x00000004   // ignore versions and overwrite target
//      #define COPYFLG_FORCE_FILE_IN_USE       0x00000008   // force file-in-use behavior
//      #define COPYFLG_NO_OVERWRITE            0x00000010   // do not copy if file exists on target
//      #define COPYFLG_NO_VERSION_DIALOG       0x00000020   // do not copy if target is newer
//      #define COPYFLG_REPLACEONLY             0x00000400   // copy only if file exists on target

#define AIF_WARNIFSKIP          0x00000001              // system critical file: warn if user tries to skip
#define AIF_NOSKIP              0x00000002              // Skip is disallowed for this file
#define AIF_NOVERSIONCHECK      0x00000004              // don't check the version number of the file overwrite
#define AIF_FORCE_FILE_IN_USE   0x00000008              // force file-in-use behavior
#define AIF_NOOVERWRITE         0x00000010              // copy only if target doesn't exist
                                                        // if AIF_QUIET, the file is not copied and
                                                        // the user is not notified
#define AIF_NO_VERSION_DIALOG   0x00000020              // do not copy if target is newer
#define AIF_REPLACEONLY         0x00000400              // copy only if target file already present

// Flags only known to AdvInstallFile
#define AIF_NOLANGUAGECHECK     0x10000000              // don't check the language of the file
                                                        // if the flags is NOT specified and AIF_QUIET
                                                        // the file is not copied and the user is not notified
#define AIF_QUIET               0x20000000              // No UI to the user

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI AdvInstallFileA(HWND hwnd, LPCSTR lpszSourceDir, LPCSTR lpszSourceFile, LPCSTR lpszDestDir, LPCSTR lpszDestFile, DWORD dwFlags, DWORD dwReserved);
HRESULT WINAPI AdvInstallFileW(HWND hwnd, LPCWSTR lpszSourceDir, LPCWSTR lpszSourceFile, LPCWSTR lpszDestDir, LPCWSTR lpszDestFile, DWORD dwFlags, DWORD dwReserved);
#ifdef UNICODE
#define AdvInstallFile  AdvInstallFileW
#else
#define AdvInstallFile  AdvInstallFileA
#endif // !UNICODE
#else
HRESULT WINAPI AdvInstallFile(HWND hwnd, LPCSTR lpszSourceDir, LPCSTR lpszSourceFile, LPCSTR lpszDestDir, LPCSTR lpszDestFile, DWORD dwFlags, DWORD dwReserved);
#endif  // (_WIN32_IE >= 0x0605)

//////////////////////////////////////////////////////////////////
// the following flags are for backwards compatiable.  No API user
// should reference them directly now.
//
#define  IE4_RESTORE        0x00000001      // if this bit is off, save the registries.
#define  IE4_BACKNEW        0x00000002      // backup all files which are not backed up before
#define  IE4_NODELETENEW    0x00000004      // don't delete files we don't backed up before
#define  IE4_NOMESSAGES     0x00000008      // No message display in any events.
#define  IE4_NOPROGRESS     0x00000010      // this bit on: No file backup progressbar
#define  IE4_NOENUMKEY      0x00000020      // this bit on: Don't Enum sub key even there is no given valuename
#define  IE4_NO_CRC_MAPPING 0x00000040      // Normally you should not turn on this bit, advpack creates
                                            // internal mapping for all the entries backed up.
#define  IE4_REGSECTION     0x00000080      // INF AddReg/DelReg section
#define  IE4_FRDOALL        0x00000100      // FileRestore DoAll
#define  IE4_UPDREFCNT      0x00000200      // Update the ref count in .ini backup file list
#define  IE4_USEREFCNT      0x00000400      // use ref count to determin if the backup file should be put back
#define  IE4_EXTRAINCREFCNT 0x00000800      // if increase the ref cnt if it has been updated before

#define  IE4_REMOVREGBKDATA 0x00001000      // This bit should be used with restore bit


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: RegSaveRestore
//
// SYNOPSIS:    Save or Restore the given register value or given INF reg section.
//
// RETURNS:     E_FAIL on failure, S_OK on success.
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI RegSaveRestoreA(HWND hWnd, LPCSTR pszTitleString, HKEY hkBckupKey, LPCSTR pcszRootKey, LPCSTR pcszSubKey, LPCSTR pcszValueName, DWORD dwFlags);
HRESULT WINAPI RegSaveRestoreW(HWND hWnd, LPCWSTR pszTitleString, HKEY hkBckupKey, LPCWSTR pcszRootKey, LPCWSTR pcszSubKey, LPCWSTR pcszValueName, DWORD dwFlags);
#ifdef UNICODE
#define RegSaveRestore  RegSaveRestoreW
#else
#define RegSaveRestore  RegSaveRestoreA
#endif // !UNICODE
#else
HRESULT WINAPI RegSaveRestore(HWND hWnd, LPCSTR pszTitleString, HKEY hkBckupKey, LPCSTR pcszRootKey, LPCSTR pcszSubKey, LPCSTR pcszValueName, DWORD dwFlags);
#endif   // (_WIN32_IE >= 0x0605)


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: RegSaveRestoreOnINF
//
// SYNOPSIS:    Save or Restore the given INF Reg Section. At restore, if INF and Section pointers are NULL,
//              restore all from the given backup key handle.
//
// RETURNS:     E_FAIL on failure, S_OK on success.
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI RegSaveRestoreOnINFA(HWND hWnd, LPCSTR pszTitle, LPCSTR pszINF, LPCSTR pszSection, HKEY hHKLMBackKey, HKEY hHKCUBackKey, DWORD dwFlags);
HRESULT WINAPI RegSaveRestoreOnINFW(HWND hWnd, LPCWSTR pszTitle, LPCWSTR pszINF, LPCWSTR pszSection, HKEY hHKLMBackKey, HKEY hHKCUBackKey, DWORD dwFlags);
#ifdef UNICODE
#define RegSaveRestoreOnINF  RegSaveRestoreOnINFW
#else
#define RegSaveRestoreOnINF  RegSaveRestoreOnINFA
#endif // !UNICODE
#else
HRESULT WINAPI RegSaveRestoreOnINF(HWND hWnd, LPCSTR pszTitle, LPCSTR pszINF, LPCSTR pszSection, HKEY hHKLMBackKey, HKEY hHKCUBackKey, DWORD dwFlags);
#endif  // (_WIN32_IE >= 0x0605)


// FLAGS:
#define ARSR_RESTORE    IE4_RESTORE       // if this bit is off, means Save. Otherwise, restore.
#define ARSR_NOMESSAGES IE4_NOMESSAGES    // Quiet no messages in any event.
#define ARSR_REGSECTION IE4_REGSECTION    // if this bit is off, the given section is GenInstall Section
#define ARSR_REMOVREGBKDATA IE4_REMOVREGBKDATA // if both this bit and restore bit on, remove the backup reg data without restore it

// Turn on the logging by add these RegVale in HKLM\software\microsoft\IE4
#define  REG_SAVE_LOG_KEY       TEXT("RegSaveLogFile")
#define  REG_RESTORE_LOG_KEY    TEXT("RegRestoreLogFile")


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: RegRestoreAll
//
// SYNOPSIS:    
//
// RETURNS:     E_FAIL on failure, S_OK on success.
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI RegRestoreAllA(
    __in_opt HWND hWnd,
    __in_opt LPCSTR pszTitleString,
    __in HKEY hkBckupKey
    );
HRESULT WINAPI RegRestoreAllW(
    __in_opt HWND hWnd,
    __in_opt LPCWSTR pszTitleString,
    __in HKEY hkBckupKey
    );
#ifdef UNICODE
#define RegRestoreAll  RegRestoreAllW
#else
#define RegRestoreAll  RegRestoreAllA
#endif // !UNICODE
#else
HRESULT WINAPI RegRestoreAll(
    __in_opt HWND hWnd,
    __in_opt LPCSTR pszTitleString,
    __in HKEY hkBckupKey
    );
#endif  // (_WIN32_IE >= 0x0605)


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: FileSaveRestore
//
// SYNOPSIS:    Save or Restore the files on the list lpFileList.
//              If lpFileList is NULL at restore time, the function will restore
//              all based on INI index file.
//
// RETURNS:     E_FAIL on failure, S_OK on success.
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI FileSaveRestoreA(
    HWND hDlg,
    __in_opt LPSTR lpFileList,
    LPCSTR lpDir,
    LPCSTR lpBaseName,
    DWORD dwFlags);
HRESULT WINAPI FileSaveRestoreW(
    HWND hDlg,
    __in_opt LPWSTR lpFileList,
    LPCWSTR lpDir,
    LPCWSTR lpBaseName,
    DWORD dwFlags);
#ifdef UNICODE
#define FileSaveRestore  FileSaveRestoreW
#else
#define FileSaveRestore  FileSaveRestoreA
#endif // !UNICODE
#else
HRESULT WINAPI FileSaveRestore(
    HWND hDlg, 
    __in_opt LPSTR lpFileList,
    LPCSTR lpDir,
    LPCSTR lpBaseName,
    DWORD dwFlags);
#endif  // (_WIN32_IE >= 0x0605)


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: FileSaveRestoreOnINF
//
// SYNOPSIS:    
//
// RETURNS:     E_FAIL on failure, S_OK on success.
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI FileSaveRestoreOnINFA(HWND hWnd, LPCSTR pszTitle, LPCSTR pszINF, LPCSTR pszSection, LPCSTR pszBackupDir, LPCSTR pszBaseBackupFile, DWORD dwFlags);
HRESULT WINAPI FileSaveRestoreOnINFW(HWND hWnd, LPCWSTR pszTitle, LPCWSTR pszINF, LPCWSTR pszSection, LPCWSTR pszBackupDir, LPCWSTR pszBaseBackupFile, DWORD dwFlags);
#ifdef UNICODE
#define FileSaveRestoreOnINF  FileSaveRestoreOnINFW
#else
#define FileSaveRestoreOnINF  FileSaveRestoreOnINFA
#endif // !UNICODE
#else
HRESULT WINAPI FileSaveRestoreOnINF(HWND hWnd, LPCSTR pszTitle, LPCSTR pszINF, LPCSTR pszSection, LPCSTR pszBackupDir, LPCSTR pszBaseBackupFile, DWORD dwFlags);
#endif  // (_WIN32_IE >= 0x0605)

// FLAGS:
#define  AFSR_RESTORE        IE4_RESTORE      // if this bit is off, save the file.
#define  AFSR_BACKNEW        IE4_BACKNEW      // backup all files which are not backed up before
#define  AFSR_NODELETENEW    IE4_NODELETENEW  // don't delete files we don't backed up before
#define  AFSR_NOMESSAGES     IE4_NOMESSAGES   // No message display in any events.
#define  AFSR_NOPROGRESS     IE4_NOPROGRESS   // this bit on: No file backup progressbar
#define  AFSR_UPDREFCNT      IE4_UPDREFCNT    // update the reference count for the files
#define  AFSR_USEREFCNT      IE4_USEREFCNT    // use the ref count to guide the restore file
#define  AFSR_EXTRAINCREFCNT IE4_EXTRAINCREFCNT


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: AddDelBackupEntry
//
// SYNOPSIS:    If AADBE_ADD_ENTRY is specified, mark the file in the File list as not existing
//              during file save in the INI file.  This can be used to mark additional files that
//              they did not exist during backup to avoid having them backup the next time the
//              FileSaveRestore is called to save files.
//              If AADBE_DEL_ENTRY is specified, delete the entry from the INI.  This mechanism can
//              be used to leave files permanently on the system.
//
// RETURNS:
//      S_OK    success
//      E_FAIL  failure
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI AddDelBackupEntryA(__in_opt LPCSTR lpcszFileList, __in_opt LPCSTR lpcszBackupDir, __in_opt LPCSTR lpcszBaseName, DWORD dwFlags);
HRESULT WINAPI AddDelBackupEntryW(__in_opt LPCWSTR lpcszFileList, __in_opt LPCWSTR lpcszBackupDir, __in_opt LPCWSTR lpcszBaseName, DWORD dwFlags);
#ifdef UNICODE
#define AddDelBackupEntry  AddDelBackupEntryW
#else
#define AddDelBackupEntry  AddDelBackupEntryA
#endif // !UNICODE
#else
HRESULT WINAPI AddDelBackupEntry(__in_opt LPCSTR lpcszFileList, __in_opt LPCSTR lpcszBackupDir, __in_opt LPCSTR lpcszBaseName, DWORD dwFlags);
#endif  // (_WIN32_IE >= 0x0605)

#define  AADBE_ADD_ENTRY    0x01            // add entries to the INI file
#define  AADBE_DEL_ENTRY    0x02            // delete entries from the INI file

/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: FileSaveMarkNotExist
//
// SYNOPSIS:    Mark the file in the File list as not existing during file save in the INI file
//              This can be used to mark additional files that they did not exist during backup
//              to avoid having them backup the next time the FileSaveRestore is called to save
//              files
//
// RETURNS:
//      S_OK    success
//      E_FAIL  failure
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI FileSaveMarkNotExistA(
    __in_opt LPCSTR lpFileList,
    __in_opt LPCSTR lpDir,
    __in_opt LPCSTR lpBaseName);
HRESULT WINAPI FileSaveMarkNotExistW(
    __in_opt LPCWSTR lpFileList,
    __in_opt LPCWSTR lpDir,
    __in_opt LPCWSTR lpBaseName);
#ifdef UNICODE
#define FileSaveMarkNotExist  FileSaveMarkNotExistW
#else
#define FileSaveMarkNotExist  FileSaveMarkNotExistA
#endif // !UNICODE
#else
HRESULT WINAPI FileSaveMarkNotExist(
    __in_opt LPCSTR lpFileList,
    __in_opt LPCSTR lpDir,
    __in_opt LPCSTR lpBaseName);
#endif  // (_WIN32_IE >= 0x0605)


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: GetVersionFromFile
//
// SYNOPSIS:    Get the given file's version and lang information.
//
// RETURNS:     E_FAIL on failure, S_OK on success.
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI GetVersionFromFileA(LPCSTR lpszFilename, __out LPDWORD pdwMSVer, __out LPDWORD pdwLSVer, BOOL bVersion);
HRESULT WINAPI GetVersionFromFileW(LPCWSTR lpszFilename, __out LPDWORD pdwMSVer, __out LPDWORD pdwLSVer, BOOL bVersion);
#ifdef UNICODE
#define GetVersionFromFile  GetVersionFromFileW
#else
#define GetVersionFromFile  GetVersionFromFileA
#endif // !UNICODE
#else
HRESULT WINAPI GetVersionFromFile(LPCSTR lpszFilename, __out LPDWORD pdwMSVer, __out LPDWORD pdwLSVer, BOOL bVersion);
#endif // (_WIN32_IE >= 0x0605)


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: GetVersionFromFileEx
//
// SYNOPSIS:    Get the given disk file's version and lang information.
//
// RETURNS:     E_FAIL on failure, S_OK on success.
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI GetVersionFromFileExA(LPCSTR lpszFilename, __out LPDWORD pdwMSVer, __out LPDWORD pdwLSVer, BOOL bVersion);
HRESULT WINAPI GetVersionFromFileExW(LPCWSTR lpszFilename, __out LPDWORD pdwMSVer, __out LPDWORD pdwLSVer, BOOL bVersion);
#ifdef UNICODE
#define GetVersionFromFileEx  GetVersionFromFileExW
#else
#define GetVersionFromFileEx  GetVersionFromFileExA
#endif // !UNICODE
#else
HRESULT WINAPI GetVersionFromFileEx(LPCSTR lpszFilename, __out LPDWORD pdwMSVer, __out LPDWORD pdwLSVer, BOOL bVersion);
#endif  // (_WIN32_IE >= 0x0605)


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: IsNTAdmin
//
// SYNOPSIS:    On NT, check if user has admin right.
//
// RETURNS:     TURE  has admin right; FLSE  no admin right.
/////////////////////////////////////////////////////////////////////////////

BOOL WINAPI IsNTAdmin(DWORD dwReserved, DWORD *lpdwReserved);


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: DelNode
//
// SYNOPSIS:    Deletes a file or directory
//
// RETURNS:
//      S_OK    success
//      E_FAIL  failure
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI DelNodeA(LPCSTR pszFileOrDirName, DWORD dwFlags);
HRESULT WINAPI DelNodeW(LPCWSTR pszFileOrDirName, DWORD dwFlags);
#ifdef UNICODE
#define DelNode  DelNodeW
#else
#define DelNode  DelNodeA
#endif // !UNICODE
#else
HRESULT WINAPI DelNode(LPCSTR pszFileOrDirName, DWORD dwFlags);
#endif  // (_WIN32_IE >= 0x0605)

// FLAGS:
#define ADN_DEL_IF_EMPTY        0x00000001  // delete the directory only if it's empty
#define ADN_DONT_DEL_SUBDIRS    0x00000002  // don't delete any sub-dirs; delete only the files
#define ADN_DONT_DEL_DIR        0x00000004  // don't delete the dir itself
#define ADN_DEL_UNC_PATHS       0x00000008  // delete UNC paths


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: DelNodeRunDLL32
//
// SYNOPSIS:    Deletes a file or directory; the parameters to this API are of
//              WinMain type
//
// RETURNS:
//      S_OK    success
//      E_FAIL  failure
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI DelNodeRunDLL32A(HWND hwnd, HINSTANCE hInstance, __inout LPSTR pszParms, INT nShow);
HRESULT WINAPI DelNodeRunDLL32W(HWND hwnd, HINSTANCE hInstance, __inout LPWSTR pszParms, INT nShow);
#ifdef UNICODE
#define DelNodeRunDLL32  DelNodeRunDLL32W
#else
#define DelNodeRunDLL32  DelNodeRunDLL32A
#endif // !UNICODE
#else
HRESULT WINAPI DelNodeRunDLL32(HWND hwnd, HINSTANCE hInstance, LPSTR pszParms, INT nShow);
#endif  // (_WIN32_IE >= 0x0605)


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: OpenINFEngine, TranslateINFStringEx, CloseINFEngine
//
// SYNOPSIS:    Three APIs give the caller the option to be more efficient when need
//              Advpack to translate INF file in a continue fashion.
//
// RETURNS:
//      S_OK    success
//      E_FAIL  failure
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI OpenINFEngineA(LPCSTR pszInfFilename, LPCSTR pszInstallSection, DWORD dwFlags, HINF* phInf, PVOID pvReserved);
HRESULT WINAPI OpenINFEngineW(LPCWSTR pszInfFilename, LPCWSTR pszInstallSection, DWORD dwFlags, HINF* phInf, PVOID pvReserved);
#ifdef UNICODE
#define OpenINFEngine  OpenINFEngineW
#else
#define OpenINFEngine  OpenINFEngineA
#endif // !UNICODE
#else
HRESULT WINAPI OpenINFEngine(LPCSTR pszInfFilename, LPCSTR pszInstallSection, DWORD dwFlags, HINF* phInf, PVOID pvReserved);
#endif  // (_WIN32_IE >= 0x0605)


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: OpenINFEngine, TranslateINFStringEx, CloseINFEngine
//
// SYNOPSIS:    
//
// RETURNS:
//      S_OK    success
//      E_FAIL  failure
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI TranslateInfStringExA(HINF hInf, LPCSTR pszInfFilename, LPCSTR pszTranslateSection, LPCSTR pszTranslateKey, __inout_ecount_part(dwBufferSize, *pdwRequiredSize) LPSTR pszBuffer, DWORD dwBufferSize, __out PDWORD pdwRequiredSize, __reserved PVOID pvReserved);
HRESULT WINAPI TranslateInfStringExW(HINF hInf, LPCWSTR pszInfFilename, LPCWSTR pszTranslateSection, LPCWSTR pszTranslateKey, __inout_ecount_part(dwBufferSize, *pdwRequiredSize) LPWSTR pszBuffer, DWORD dwBufferSize, __out PDWORD pdwRequiredSize, __reserved PVOID pvReserved);
#ifdef UNICODE
#define TranslateInfStringEx  TranslateInfStringExW
#else
#define TranslateInfStringEx  TranslateInfStringExA
#endif // !UNICODE
#else
HRESULT WINAPI TranslateInfStringEx(HINF hInf, LPCSTR pszInfFilename, LPCSTR pszTranslateSection, LPCSTR pszTranslateKey, LPSTR pszBuffer, DWORD dwBufferSize, PDWORD pdwRequiredSize, PVOID pvReserved);
#endif  // (_WIN32_IE >= 0x0605)


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: OpenINFEngine, TranslateINFStringEx, CloseINFEngine
//
// SYNOPSIS:    
//
// RETURNS:
//      S_OK    success
//      E_FAIL  failure
/////////////////////////////////////////////////////////////////////////////

HRESULT WINAPI CloseINFEngine(HINF hInf);


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: OpenINFEngine, TranslateINFStringEx, CloseINFEngine
//
// SYNOPSIS:    
//
// RETURNS:
//      S_OK    success
//      E_FAIL  failure
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI ExtractFilesA(LPCSTR pszCabName, LPCSTR pszExpandDir, DWORD dwFlags, LPCSTR pszFileList, LPVOID lpReserved, DWORD dwReserved);
HRESULT WINAPI ExtractFilesW(LPCWSTR pszCabName, LPCWSTR pszExpandDir, DWORD dwFlags, LPCWSTR pszFileList, LPVOID lpReserved, DWORD dwReserved);
#ifdef UNICODE
#define ExtractFiles  ExtractFilesW
#else
#define ExtractFiles  ExtractFilesA
#endif // !UNICODE
#else
HRESULT WINAPI ExtractFiles(LPCSTR pszCabName, LPCSTR pszExpandDir, DWORD dwFlags, LPCSTR pszFileList, LPVOID lpReserved, DWORD dwReserved);
#endif  // (_WIN32_IE >= 0x0605)


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: LaunchINFSection
//
// SYNOPSIS:    Install INF section WITHOUT BACKUP/ROLLBACK capabilities.
//
// RETURNS:     E_FAIL on failure, S_OK on success.
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
INT     WINAPI LaunchINFSectionA(HWND hwndOwner, HINSTANCE hInstance, __inout LPSTR pszParams, INT nShow);
INT     WINAPI LaunchINFSectionW(HWND hwndOwner, HINSTANCE hInstance, __inout LPWSTR pszParams, INT nShow);
#ifdef UNICODE
#define LaunchINFSection  LaunchINFSectionW
#else
#define LaunchINFSection  LaunchINFSectionA
#endif // !UNICODE
#else
INT     WINAPI LaunchINFSection(HWND hwndOwner, HINSTANCE hInstance, LPSTR pszParams, INT nShow);
#endif  // (_WIN32_IE >= 0x0605)

// LaunchINFSection flags
#define LIS_QUIET               0x0001      // Bit 0
#define LIS_NOGRPCONV           0x0002      // Bit 1

// Flags in Advanced INF RunPreSetupCommands and RunPostSetupCommands of the Install section
// Those flags can tell advpack how to run those commands, quiet or not quiet, wait or not wait.
// The Default for runing those commands are:  Not Quiet and Wait for finish before return the caller.
// I.E>  RunPostSetupCommands = MyCmdsSecA:1, MyCmdsSecB:2, MyCmdsSecC
#define RUNCMDS_QUIET       0x00000001
#define RUNCMDS_NOWAIT      0x00000002
#define RUNCMDS_DELAYPOSTCMD    0x00000004

/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: UserStubWrapper
//
// SYNOPSIS:    The function wrapper around the real per-user restore stub to 
//              do some generic/intelligent function on behalf of every component.
//
// RETURNS:     E_FAIL on failure, S_OK on success.
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI UserInstStubWrapperA(HWND hwnd, HINSTANCE hInstance, LPCSTR pszParms, INT nShow); 
HRESULT WINAPI UserInstStubWrapperW(HWND hwnd, HINSTANCE hInstance, LPCWSTR pszParms, INT nShow); 
#ifdef UNICODE
#define UserInstStubWrapper  UserInstStubWrapperW
#else
#define UserInstStubWrapper  UserInstStubWrapperA
#endif // !UNICODE
#else
HRESULT WINAPI UserInstStubWrapper(HWND hwnd, HINSTANCE hInstance, LPCSTR pszParms, INT nShow); 
#endif  // (_WIN32_IE >= 0x0605)


// ENTRY POINT: UserUnInstStubWrapper
//
// SYNOPSIS:    The function wrapper around the real per-user restore stub to 
//              do some generic/intelligent function on behalf of every component.
//
// RETURNS:     E_FAIL on failure, S_OK on success.
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
HRESULT WINAPI UserUnInstStubWrapperA(HWND hwnd, HINSTANCE hInstance, LPCSTR pszParms, INT nShow); 
HRESULT WINAPI UserUnInstStubWrapperW(HWND hwnd, HINSTANCE hInstance, LPCWSTR pszParms, INT nShow); 
#ifdef UNICODE
#define UserUnInstStubWrapper  UserUnInstStubWrapperW
#else
#define UserUnInstStubWrapper  UserUnInstStubWrapperA
#endif // !UNICODE
#else
HRESULT WINAPI UserUnInstStubWrapper(HWND hwnd, HINSTANCE hInstance, LPCSTR pszParms, INT nShow); 
#endif  // (_WIN32_IE >= 0x0605)


/////////////////////////////////////////////////////////////////////////////
// ENTRY POINT: SetPerUserInstValues
//
// SYNOPSIS:    The function set the per-user stub reg values under IsInstalled\{GUID} 
//              related key to ensure the later per-user process correctly.
//
// RETURNS:     E_FAIL on failure, S_OK on success.
/////////////////////////////////////////////////////////////////////////////

#if (_WIN32_IE >= 0x0605)
typedef struct _PERUSERSECTIONA {
    CHAR   szGUID[MAX_GUID_STRING_LEN + 20];
    CHAR   szDispName[128];
    CHAR   szLocale[10];
    CHAR   szStub[MAX_PATH*4];
    CHAR   szVersion[32];
    CHAR   szCompID[128]; 
    DWORD dwIsInstalled;
    BOOL  bRollback;
} PERUSERSECTIONA, *PPERUSERSECTIONA;
typedef struct _PERUSERSECTIONW {
    WCHAR  szGUID[MAX_GUID_STRING_LEN + 20];
    WCHAR  szDispName[128];
    WCHAR  szLocale[10];
    WCHAR  szStub[MAX_PATH*4];
    WCHAR  szVersion[32];
    WCHAR  szCompID[128]; 
    DWORD dwIsInstalled;
    BOOL  bRollback;
} PERUSERSECTIONW, *PPERUSERSECTIONW;
#ifdef UNICODE
typedef PERUSERSECTIONW PERUSERSECTION;
typedef PPERUSERSECTIONW PPERUSERSECTION;
#else
typedef PERUSERSECTIONA PERUSERSECTION;
typedef PPERUSERSECTIONA PPERUSERSECTION;
#endif // UNICODE

HRESULT WINAPI SetPerUserSecValuesA(PERUSERSECTIONA* pPerUser);
HRESULT WINAPI SetPerUserSecValuesW(PERUSERSECTIONW* pPerUser);
#ifdef UNICODE
#define SetPerUserSecValues  SetPerUserSecValuesW
#else
#define SetPerUserSecValues  SetPerUserSecValuesA
#endif // !UNICODE

#else

typedef struct _PERUSERSECTIONA {
    CHAR   szGUID[MAX_GUID_STRING_LEN + 20];
    CHAR   szDispName[128];
    CHAR   szLocale[10];
    CHAR   szStub[MAX_PATH*4];
    CHAR   szVersion[32];
    CHAR   szCompID[128];
    DWORD dwIsInstalled;
    BOOL  bRollback;
} PERUSERSECTIONA, *PPERUSERSECTIONA;

typedef PERUSERSECTIONA PERUSERSECTION;
typedef PPERUSERSECTIONA PPERUSERSECTION;

HRESULT WINAPI SetPerUserSecValues(PERUSERSECTIONA* pPerUser);
#endif  // (_WIN32_IE >= 0x0605)


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif // _ADVPUB_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AF_Irda.h ===
//
// Winsock1.1, IrDA1.1, WindowsNT5.0, Windows98 and WindowsCE1.0.
// Define one of _WIN32_WINNT, _WIN32_WINDOWS, _WIN32_WCE.
//  Copyright (C) Microsoft Corporation, 1994-1999.
//

#ifndef __AFIRDA__
#define __AFIRDA__

#if _MSC_VER > 1000
#pragma once
#endif

#if (NTDDI_VERSION >= NTDDI_WIN2K)

#ifndef _WINSOCKAPI_
typedef unsigned char   u_char;
typedef unsigned short  u_short;
typedef unsigned int    u_int;
typedef unsigned long   u_long;
#endif

#define WINDOWS_AF_IRDA         26
#define WINDOWS_PF_IRDA         WINDOWS_AF_IRDA

#define WCE_AF_IRDA             22
#define WCE_PF_IRDA             WCE_AF_IRDA



#ifndef AF_IRDA
#define AF_IRDA	                WINDOWS_AF_IRDA
#endif
#define IRDA_PROTO_SOCK_STREAM  1


#define PF_IRDA                 AF_IRDA

                            // WINNT, WIN98, WINCE
#define SOL_IRLMP		        0x00FF

#define IRLMP_ENUMDEVICES       0x00000010
#define IRLMP_IAS_SET           0x00000011
#define IRLMP_IAS_QUERY         0x00000012

                            // WINNT, WINCE
#define IRLMP_SEND_PDU_LEN      0x00000013
#define IRLMP_EXCLUSIVE_MODE    0x00000014
#define IRLMP_IRLPT_MODE        0x00000015
#define IRLMP_9WIRE_MODE        0x00000016

                            // WIN98
#define IRLMP_TINYTP_MODE       0x00000017
#define IRLMP_PARAMETERS		0x00000018
#define	IRLMP_DISCOVERY_MODE	0x00000019

                            // WINCE
#define IRLMP_SHARP_MODE        0x00000020

#define SIO_LAZY_DISCOVERY  _IOR('t', 127, u_long)	

#define IAS_ATTRIB_NO_CLASS     0x00000010
#define IAS_ATTRIB_NO_ATTRIB    0x00000000
#define IAS_ATTRIB_INT          0x00000001
#define IAS_ATTRIB_OCTETSEQ     0x00000002
#define IAS_ATTRIB_STR          0x00000003

#define	IAS_MAX_USER_STRING		256
#define	IAS_MAX_OCTET_STRING	1024
#define IAS_MAX_CLASSNAME		64
#define IAS_MAX_ATTRIBNAME		256

                            // WINNT, WIN98
enum
{
  LM_HB_Extension =             128,    // Any hint byte

  LM_HB1_PnP =                  1,      // First hint byte
  LM_HB1_PDA_Palmtop =          2,
  LM_HB1_Computer =             4,
  LM_HB1_Printer =              8,
  LM_HB1_Modem =                16,
  LM_HB1_Fax =                  32,
  LM_HB1_LANAccess =            64,

  LM_HB2_Telephony =            1,      // Second hint byte
  LM_HB2_FileServer =           2,
};

#define LmCharSetASCII          0
#define LmCharSetISO_8859_1     1
#define LmCharSetISO_8859_2     2
#define LmCharSetISO_8859_3     3
#define LmCharSetISO_8859_4     4
#define LmCharSetISO_8859_5     5
#define LmCharSetISO_8859_6     6
#define LmCharSetISO_8859_7     7
#define LmCharSetISO_8859_8     8
#define LmCharSetISO_8859_9     9
#define LmCharSetUNICODE        0xff

                            // WIN98
typedef u_long LM_BAUD_RATE;

#define  LM_BAUD_1200           1200
#define  LM_BAUD_2400           2400
#define  LM_BAUD_9600           9600
#define  LM_BAUD_19200          19200
#define  LM_BAUD_38400          38400
#define  LM_BAUD_57600          57600
#define  LM_BAUD_115200         115200
#define  LM_BAUD_576K           576000
#define  LM_BAUD_1152K          1152000
#define  LM_BAUD_4M             4000000
#define  LM_BAUD_16M           16000000

typedef struct
{
    u_long          nTXDataBytes;   // Max tx data bytes per packet
    u_long          nRXDataBytes;   // Max rx data bytes per packet
    LM_BAUD_RATE    nBaudRate;      // Negotiated baud rate
    u_long          thresholdTime;  // Threshold (ms)
    u_long          discTime;       // Disconnect (ms)
    u_short         nMSLinkTurn;    // Link turn around (ms)
    u_char          nTXPackets;     // Number packets in transmit window
    u_char          nRXPackets;     // Number packets in receive window
} LM_IRPARMS,*PLM_IRPARMS;

typedef struct _SOCKADDR_IRDA
{
	u_short irdaAddressFamily;
	u_char  irdaDeviceID[4];
	char	irdaServiceName[25];
} SOCKADDR_IRDA, *PSOCKADDR_IRDA, FAR *LPSOCKADDR_IRDA;

typedef struct _WINDOWS_IRDA_DEVICE_INFO
{
	u_char  irdaDeviceID[4];
	char	irdaDeviceName[22];
	u_char	irdaDeviceHints1;
	u_char  irdaDeviceHints2;
	u_char  irdaCharSet;
} WINDOWS_IRDA_DEVICE_INFO, *PWINDOWS_IRDA_DEVICE_INFO, FAR *LPWINDOWS_IRDA_DEVICE_INFO;

typedef struct _WCE_IRDA_DEVICE_INFO
{
	u_char  irdaDeviceID[4];
	char	irdaDeviceName[22];
    u_char  Reserved[2];
} WCE_IRDA_DEVICE_INFO, *PWCE_IRDA_DEVICE_INFO;

typedef WINDOWS_IRDA_DEVICE_INFO    IRDA_DEVICE_INFO, *PIRDA_DEVICE_INFO, FAR *LPIRDA_DEVICE_INFO;

typedef struct _WINDOWS_DEVICELIST
{
	ULONG                       numDevice;
	WINDOWS_IRDA_DEVICE_INFO    Device[1];
} WINDOWS_DEVICELIST, *PWINDOWS_DEVICELIST, FAR *LPWINDOWS_DEVICELIST;

typedef struct _WCE_DEVICELIST
{
	ULONG                       numDevice;
	WCE_IRDA_DEVICE_INFO        Device[1];
} WCE_DEVICELIST, *PWCE_DEVICELIST;

typedef WINDOWS_DEVICELIST      DEVICELIST, *PDEVICELIST, FAR *LPDEVICELIST;

typedef struct _WINDOWS_IAS_SET
{
    char    irdaClassName[IAS_MAX_CLASSNAME];
    char    irdaAttribName[IAS_MAX_ATTRIBNAME];
    u_long	irdaAttribType;
    union
    {
        LONG irdaAttribInt;
        struct
        {
            u_short	Len;
            u_char	OctetSeq[IAS_MAX_OCTET_STRING];
        } irdaAttribOctetSeq;
        struct
        {
            u_char	Len;
            u_char	CharSet;
            u_char	UsrStr[IAS_MAX_USER_STRING];
		} irdaAttribUsrStr;
    } irdaAttribute;
} WINDOWS_IAS_SET, *PWINDOWS_IAS_SET, FAR *LPWINDOWS_IAS_SET;

typedef struct _WINDOWS_IAS_QUERY
{
	u_char	irdaDeviceID[4];
    char    irdaClassName[IAS_MAX_CLASSNAME];
    char    irdaAttribName[IAS_MAX_ATTRIBNAME];
    u_long	irdaAttribType;
    union
    {
        LONG irdaAttribInt;
        struct
        {
            u_long  Len;
            u_char  OctetSeq[IAS_MAX_OCTET_STRING];
        } irdaAttribOctetSeq;
        struct
        {
            u_long  Len;
            u_long	CharSet;
            u_char	UsrStr[IAS_MAX_USER_STRING];
        } irdaAttribUsrStr;
    } irdaAttribute;
} WINDOWS_IAS_QUERY, *PWINDOWS_IAS_QUERY, FAR *LPWINDOWS_IAS_QUERY;


typedef WINDOWS_IAS_SET         IAS_SET, *PIAS_SET, FAR *LPIASSET;
typedef WINDOWS_IAS_QUERY       IAS_QUERY, *PIAS_QUERY, FAR *LPIASQUERY;

#endif //ntddi version

#endif // __AFIRDA__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AgtCtl_i.c ===
/**************************************************************************
*                                                                         *
* AgtCtl_i.c - Interface IID and CLSID definitions for Microsoft Agent    *
*              Control.                                                   *
*                                                                         *
* Copyright (c) 1996-1999, Microsoft Corp. All rights reserved.           *
*                                                                         *
**************************************************************************/

/* this file contains the actual definitions of */
/* the IIDs and CLSIDs */

/* link this file in with the server and any clients */


/* File created by MIDL compiler version 5.01.0164 */
/* at Tue Sep 15 16:56:03 1998
 */
/* Compiler settings for AgentControl.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
*/
//@@MIDL_FILE_HEADING(  )
#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __IID_DEFINED__
#define __IID_DEFINED__

typedef struct _IID
{
    unsigned long x;
    unsigned short s1;
    unsigned short s2;
    unsigned char  c[8];
} IID;

#endif // __IID_DEFINED__

#ifndef CLSID_DEFINED
#define CLSID_DEFINED
typedef IID CLSID;
#endif // CLSID_DEFINED

const IID IID_IAgentCtlRequest = {0x1DAB85C3,0x803A,0x11D0,{0xAC,0x63,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCtlUserInput = {0xC4ABF875,0x8100,0x11D0,{0xAC,0x63,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCtlBalloon = {0xF5BE8BD3,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlBalloonEx = {0x822DB1C0,0x8879,0x11d1,{0x9E,0xC6,0x00,0xC0,0x4F,0xD7,0x08,0x1F}};


const IID IID_IAgentCtlCommand = {0xF5BE8BE3,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlCommandEx = {0xB0913410,0x3B44,0x11d1,{0xAC,0xBA,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCtlCommands = {0xF5BE8BE1,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlCommandsEx = {0x6BA90C01,0x3910,0x11d1,{0xAC,0xB3,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCtlCharacter = {0xF5BE8BD9,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlAnimationNames = {0x8B77181C,0xD3EF,0x11d1,{0x85,0x00,0x00,0xC0,0x4F,0xA3,0x4A,0x14}};


const IID IID_IAgentCtlCharacterEx = {0xDE8EF600,0x2F82,0x11d1,{0xAC,0xAC,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCtlCharacters = {0xF5BE8BE8,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlAudioObject = {0xF5BE8BDB,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlAudioObjectEx = {0xF5BE8BF0,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlSpeechInput = {0xF5BE8BDD,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlPropertySheet = {0xF5BE8BDF,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlCommandsWindow = {0x6D0ECB27,0x9968,0x11D0,{0xAC,0x6E,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCtl = {0xF5BE8BD1,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentCtlEx = {0x8563FF20,0x8ECC,0x11d1,{0xB9,0xB4,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID LIBID_AgentObjects = {0xF5BE8BC2,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID DIID__AgentEvents = {0xF5BE8BD4,0x7DE6,0x11D0,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const CLSID CLSID_Agent = {0xD45FD31B,0x5C6E,0x11D1,{0x9E,0xC1,0x00,0xC0,0x4F,0xD7,0x08,0x1F}};


#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AgtErr.h ===
/**************************************************************************
*                                                                         *
* AgtErr.h - Error code definitions for Microsoft Agent                   *
*                                                                         *
* Copyright (c) 1996-1999, Microsoft Corp. All rights reserved.           *
*                                                                         *
**************************************************************************/

#ifndef _AgentError_h_
#define _AgentError_h_


// Microsoft Agent Error Macros

#define AGENTERROR(x)			MAKE_SCODE(SEVERITY_ERROR,   FACILITY_ITF, (x)+0x2000)
#define AGENTWARNING(x)			MAKE_SCODE(SEVERITY_SUCCESS, FACILITY_ITF, (x)+0x2000)
#define AGENTREQERROR(x)		MAKE_SCODE(SEVERITY_ERROR,   FACILITY_ITF, (x)+0x2100)
#define AGENTPROVIDERERROR(x)	MAKE_SCODE(SEVERITY_ERROR,   FACILITY_ITF, (x)+0x2200)
#define AGENTVOICEERROR(x)		MAKE_SCODE(SEVERITY_ERROR,   FACILITY_ITF, (x)+0x2300)
#define AGENTAUDIOERROR(x)		MAKE_SCODE(SEVERITY_ERROR,   FACILITY_ITF, (x)+0x2400)
#define AGENTCTLERROR(x)		MAKE_SCODE(SEVERITY_ERROR,   FACILITY_ITF, (x)+0x2500)
#define AGENTEXTERROR(x)		MAKE_SCODE(SEVERITY_ERROR,   FACILITY_ITF, (x)+0x2600)


// Agent Errors

#define AGENTERR_CLIENTINVALID							AGENTERROR(1)
#define AGENTERR_CHARACTERINVALID						AGENTERROR(2)
#define AGENTERR_ANIMATIONNOTFOUND						AGENTERROR(3)
#define AGENTERR_STATENOTFOUND							AGENTERROR(4)
#define AGENTERR_AUDIONOTFOUND							AGENTERROR(5)	// No longer used
#define AGENTERR_COMMANDNOTFOUND						AGENTERROR(6)
#define AGENTERR_COMMANDALREADYINUSE					AGENTERROR(7)
#define AGENTERR_MENUNOTFOUND							AGENTERROR(8)
#define AGENTERR_LOSTCONNECTION							AGENTERROR(9)
#define AGENTERR_CHARACTERNOTVISIBLE					AGENTERROR(10)
#define AGENTERR_CHARACTERALREADYLOADED					AGENTERROR(11)
#define AGENTERR_NOBALLOON								AGENTERROR(12)
#define AGENTERR_NOCOMMANDSWINDOW						AGENTERROR(13)
#define AGENTERR_INVALIDPREPARETYPE						AGENTERROR(14)
#define AGENTERR_INVALIDANIMATION						AGENTERROR(15)
#define AGENTERR_CANTMOVEDURINGDRAG						AGENTERROR(16)
#define AGENTERR_CHARACTERNOTACTIVE						AGENTERROR(17)
#define AGENTERR_LANGUAGENOTFOUND						AGENTERROR(18)
#define AGENTERR_TTSLANGUAGENOTFOUND					AGENTERROR(19)
#define AGENTERR_SRLANGUAGENOTFOUND						AGENTERROR(20)
#define AGENTERR_LANGUAGEMISMATCH						AGENTERROR(21)
#define AGENTERR_SPEAKINGDISABLED						AGENTERROR(22)
#define AGENTERR_NOCHARACTERS							AGENTERROR(23)
#define AGENTERR_DEFAULTCHARACTER						AGENTERROR(24)


// Warnings

#define AGENTWARNING_TTSENGINENOTFOUND					AGENTWARNING(1)
#define AGENTWARNING_ONLYCLIENT							AGENTWARNING(2)


// Request Errors

#define AGENTREQERR_OBJECTNOTFOUND						AGENTREQERROR(1)
#define AGENTREQERR_OBJECTINVALID						AGENTREQERROR(2)
#define AGENTREQERR_CANTSTOPOTHERS						AGENTREQERROR(3)
#define AGENTREQERR_CANTINTERRUPTSELF					AGENTREQERROR(4)
#define AGENTREQERR_CANTWAITONSELF						AGENTREQERROR(5)
#define AGENTREQERR_INVALIDBOOKMARK						AGENTREQERROR(6)
#define AGENTREQERR_SUSPENDED							AGENTREQERROR(7)	// No longer used
#define AGENTREQERR_REMOVED								AGENTREQERROR(8)

#define IS_INTERRUPT_ERROR(hRes)						((hRes >= AGENTREQERR_INTERRUPTEDLISTENKEY) && \
											 			 (hRes <= AGENTREQERR_INTERRUPTEDUSER))

#define AGENTREQERR_INTERRUPTEDLISTENKEY				AGENTREQERROR(10)
#define AGENTREQERR_INTERRUPTEDHEARING					AGENTREQERROR(11)
#define AGENTREQERR_INTERRUPTEDCODE						AGENTREQERROR(12)
#define AGENTREQERR_INTERRUPTEDUSER						AGENTREQERROR(13)

#define AGENTREQERR_INVALIDLASTTAG						AGENTREQERROR(14)


// Data Provider Errors

#define AGENTPROVERROR_INIT								AGENTPROVIDERERROR(1)
#define AGENTPROVERROR_CHARACTERVERSION					AGENTPROVIDERERROR(2)
#define AGENTPROVERROR_VERSION							AGENTPROVIDERERROR(3)
#define AGENTPROVERROR_MAGIC							AGENTPROVIDERERROR(4)
#define AGENTPROVERROR_CHARACTERINVALID					AGENTPROVIDERERROR(5)
#define AGENTPROVERROR_WAVEINVALID						AGENTPROVIDERERROR(6)
#define AGENTPROVERROR_WAVECORRUPT						AGENTPROVIDERERROR(7)
#define AGENTPROVERROR_MMIO								AGENTPROVIDERERROR(8)
#define AGENTPROVERROR_PROTOCOL							AGENTPROVIDERERROR(9)


// Audio Errors

#define AGENTAUDIOERROR_DEVICE							AGENTAUDIOERROR(1)
#define AGENTAUDIOERROR_TTSENUMERATOR					AGENTAUDIOERROR(2)
#define AGENTAUDIOERROR_TTSSELECT						AGENTAUDIOERROR(3)
#define AGENTAUDIOERROR_TTSREGISTER						AGENTAUDIOERROR(4)
#define AGENTAUDIOERROR_TTSUNEXPECTED					AGENTAUDIOERROR(5)
#define AGENTAUDIOERROR_LWVINIT							AGENTAUDIOERROR(6)
#define AGENTAUDIOERROR_LWVREGISTER						AGENTAUDIOERROR(7)
#define AGENTAUDIOERROR_LWVUNEXPECTED					AGENTAUDIOERROR(8)


// Agent Control Errors

#define AGENTCTLERROR_NOEVENTSAVAILABLE					AGENTCTLERROR(1)	// No longer used
#define AGENTCTLERROR_SERVERINIT						AGENTCTLERROR(2)
#define AGENTCTLERROR_LANGUAGE							AGENTCTLERROR(3)	// No longer used


// Speech Recognition Errors

#define AGENTVOICEERROR_COULDNTSTARTDEVICE				AGENTVOICEERROR(1)
#define AGENTVOICEERROR_NOTINSTALLED					AGENTVOICEERROR(2)
#define AGENTVOICEERROR_NOTINITIALIZED					AGENTVOICEERROR(3)
#define AGENTVOICEERROR_INVALIDMENU						AGENTVOICEERROR(4)
#define AGENTVOICEERROR_UNCLOSEDALTERNATIVE				AGENTVOICEERROR(5)
#define AGENTVOICEERROR_UNCLOSEDOPTIONAL				AGENTVOICEERROR(6)
#define AGENTVOICEERROR_UNEXPECTEDENDOFALTERNATIVE		AGENTVOICEERROR(7)
#define AGENTVOICEERROR_UNEXPECTEDENDOFOPTIONAL			AGENTVOICEERROR(8)
#define AGENTVOICEERROR_UNEXPECTEDALTERNATIVE			AGENTVOICEERROR(9)
#define AGENTVOICEERROR_NOSRMODE						AGENTVOICEERROR(10)	// No longer used
#define AGENTVOICEERROR_SRMODENOTFOUND					AGENTVOICEERROR(11)
#define AGENTVOICEERROR_SPEECHDISABLED					AGENTVOICEERROR(12)
#define AGENTVOICEERROR_UNEXPECTEDENDOFREPEAT			AGENTVOICEERROR(13)	// No longer used
#define AGENTVOICEERROR_UNCLOSEDREPEAT					AGENTVOICEERROR(14)	// No longer used
#define AGENTVOICEERROR_UNEXPECTEDREPEAT				AGENTVOICEERROR(15)

// Agent Extension Manager Errors

#define AGENTEXTERROR_EXTNOTFOUND						AGENTEXTERROR(1)
#define AGENTEXTERROR_INVALIDCLIENT						AGENTEXTERROR(2)


#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\ahadmin.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for ahadmin.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __ahadmin_h__
#define __ahadmin_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IAppHostMethodExtension_FWD_DEFINED__
#define __IAppHostMethodExtension_FWD_DEFINED__
typedef interface IAppHostMethodExtension IAppHostMethodExtension;
#endif 	/* __IAppHostMethodExtension_FWD_DEFINED__ */


#ifndef __IAppHostPropertyExtension_FWD_DEFINED__
#define __IAppHostPropertyExtension_FWD_DEFINED__
typedef interface IAppHostPropertyExtension IAppHostPropertyExtension;
#endif 	/* __IAppHostPropertyExtension_FWD_DEFINED__ */


#ifndef __IAppHostElementExtension_FWD_DEFINED__
#define __IAppHostElementExtension_FWD_DEFINED__
typedef interface IAppHostElementExtension IAppHostElementExtension;
#endif 	/* __IAppHostElementExtension_FWD_DEFINED__ */


#ifndef __IAppHostMappingExtension_FWD_DEFINED__
#define __IAppHostMappingExtension_FWD_DEFINED__
typedef interface IAppHostMappingExtension IAppHostMappingExtension;
#endif 	/* __IAppHostMappingExtension_FWD_DEFINED__ */


#ifndef __IAppHostChildElementCollection_FWD_DEFINED__
#define __IAppHostChildElementCollection_FWD_DEFINED__
typedef interface IAppHostChildElementCollection IAppHostChildElementCollection;
#endif 	/* __IAppHostChildElementCollection_FWD_DEFINED__ */


#ifndef __IAppHostPropertyCollection_FWD_DEFINED__
#define __IAppHostPropertyCollection_FWD_DEFINED__
typedef interface IAppHostPropertyCollection IAppHostPropertyCollection;
#endif 	/* __IAppHostPropertyCollection_FWD_DEFINED__ */


#ifndef __IAppHostConfigLocationCollection_FWD_DEFINED__
#define __IAppHostConfigLocationCollection_FWD_DEFINED__
typedef interface IAppHostConfigLocationCollection IAppHostConfigLocationCollection;
#endif 	/* __IAppHostConfigLocationCollection_FWD_DEFINED__ */


#ifndef __IAppHostMethodCollection_FWD_DEFINED__
#define __IAppHostMethodCollection_FWD_DEFINED__
typedef interface IAppHostMethodCollection IAppHostMethodCollection;
#endif 	/* __IAppHostMethodCollection_FWD_DEFINED__ */


#ifndef __IAppHostElementSchemaCollection_FWD_DEFINED__
#define __IAppHostElementSchemaCollection_FWD_DEFINED__
typedef interface IAppHostElementSchemaCollection IAppHostElementSchemaCollection;
#endif 	/* __IAppHostElementSchemaCollection_FWD_DEFINED__ */


#ifndef __IAppHostPropertySchemaCollection_FWD_DEFINED__
#define __IAppHostPropertySchemaCollection_FWD_DEFINED__
typedef interface IAppHostPropertySchemaCollection IAppHostPropertySchemaCollection;
#endif 	/* __IAppHostPropertySchemaCollection_FWD_DEFINED__ */


#ifndef __IAppHostConstantValueCollection_FWD_DEFINED__
#define __IAppHostConstantValueCollection_FWD_DEFINED__
typedef interface IAppHostConstantValueCollection IAppHostConstantValueCollection;
#endif 	/* __IAppHostConstantValueCollection_FWD_DEFINED__ */


#ifndef __IAppHostConstantValue_FWD_DEFINED__
#define __IAppHostConstantValue_FWD_DEFINED__
typedef interface IAppHostConstantValue IAppHostConstantValue;
#endif 	/* __IAppHostConstantValue_FWD_DEFINED__ */


#ifndef __IAppHostPropertySchema_FWD_DEFINED__
#define __IAppHostPropertySchema_FWD_DEFINED__
typedef interface IAppHostPropertySchema IAppHostPropertySchema;
#endif 	/* __IAppHostPropertySchema_FWD_DEFINED__ */


#ifndef __IAppHostCollectionSchema_FWD_DEFINED__
#define __IAppHostCollectionSchema_FWD_DEFINED__
typedef interface IAppHostCollectionSchema IAppHostCollectionSchema;
#endif 	/* __IAppHostCollectionSchema_FWD_DEFINED__ */


#ifndef __IAppHostElementSchema_FWD_DEFINED__
#define __IAppHostElementSchema_FWD_DEFINED__
typedef interface IAppHostElementSchema IAppHostElementSchema;
#endif 	/* __IAppHostElementSchema_FWD_DEFINED__ */


#ifndef __IAppHostMethodSchema_FWD_DEFINED__
#define __IAppHostMethodSchema_FWD_DEFINED__
typedef interface IAppHostMethodSchema IAppHostMethodSchema;
#endif 	/* __IAppHostMethodSchema_FWD_DEFINED__ */


#ifndef __IAppHostMethodInstance_FWD_DEFINED__
#define __IAppHostMethodInstance_FWD_DEFINED__
typedef interface IAppHostMethodInstance IAppHostMethodInstance;
#endif 	/* __IAppHostMethodInstance_FWD_DEFINED__ */


#ifndef __IAppHostMethod_FWD_DEFINED__
#define __IAppHostMethod_FWD_DEFINED__
typedef interface IAppHostMethod IAppHostMethod;
#endif 	/* __IAppHostMethod_FWD_DEFINED__ */


#ifndef __IAppHostConfigException_FWD_DEFINED__
#define __IAppHostConfigException_FWD_DEFINED__
typedef interface IAppHostConfigException IAppHostConfigException;
#endif 	/* __IAppHostConfigException_FWD_DEFINED__ */


#ifndef __IAppHostPropertyException_FWD_DEFINED__
#define __IAppHostPropertyException_FWD_DEFINED__
typedef interface IAppHostPropertyException IAppHostPropertyException;
#endif 	/* __IAppHostPropertyException_FWD_DEFINED__ */


#ifndef __IAppHostElementCollection_FWD_DEFINED__
#define __IAppHostElementCollection_FWD_DEFINED__
typedef interface IAppHostElementCollection IAppHostElementCollection;
#endif 	/* __IAppHostElementCollection_FWD_DEFINED__ */


#ifndef __IAppHostElement_FWD_DEFINED__
#define __IAppHostElement_FWD_DEFINED__
typedef interface IAppHostElement IAppHostElement;
#endif 	/* __IAppHostElement_FWD_DEFINED__ */


#ifndef __IAppHostProperty_FWD_DEFINED__
#define __IAppHostProperty_FWD_DEFINED__
typedef interface IAppHostProperty IAppHostProperty;
#endif 	/* __IAppHostProperty_FWD_DEFINED__ */


#ifndef __IAppHostConfigLocation_FWD_DEFINED__
#define __IAppHostConfigLocation_FWD_DEFINED__
typedef interface IAppHostConfigLocation IAppHostConfigLocation;
#endif 	/* __IAppHostConfigLocation_FWD_DEFINED__ */


#ifndef __IAppHostSectionDefinition_FWD_DEFINED__
#define __IAppHostSectionDefinition_FWD_DEFINED__
typedef interface IAppHostSectionDefinition IAppHostSectionDefinition;
#endif 	/* __IAppHostSectionDefinition_FWD_DEFINED__ */


#ifndef __IAppHostSectionDefinitionCollection_FWD_DEFINED__
#define __IAppHostSectionDefinitionCollection_FWD_DEFINED__
typedef interface IAppHostSectionDefinitionCollection IAppHostSectionDefinitionCollection;
#endif 	/* __IAppHostSectionDefinitionCollection_FWD_DEFINED__ */


#ifndef __IAppHostSectionGroup_FWD_DEFINED__
#define __IAppHostSectionGroup_FWD_DEFINED__
typedef interface IAppHostSectionGroup IAppHostSectionGroup;
#endif 	/* __IAppHostSectionGroup_FWD_DEFINED__ */


#ifndef __IAppHostConfigFile_FWD_DEFINED__
#define __IAppHostConfigFile_FWD_DEFINED__
typedef interface IAppHostConfigFile IAppHostConfigFile;
#endif 	/* __IAppHostConfigFile_FWD_DEFINED__ */


#ifndef __IAppHostPathMapper_FWD_DEFINED__
#define __IAppHostPathMapper_FWD_DEFINED__
typedef interface IAppHostPathMapper IAppHostPathMapper;
#endif 	/* __IAppHostPathMapper_FWD_DEFINED__ */


#ifndef __IAppHostPathMapper2_FWD_DEFINED__
#define __IAppHostPathMapper2_FWD_DEFINED__
typedef interface IAppHostPathMapper2 IAppHostPathMapper2;
#endif 	/* __IAppHostPathMapper2_FWD_DEFINED__ */


#ifndef __IAppHostChangeHandler_FWD_DEFINED__
#define __IAppHostChangeHandler_FWD_DEFINED__
typedef interface IAppHostChangeHandler IAppHostChangeHandler;
#endif 	/* __IAppHostChangeHandler_FWD_DEFINED__ */


#ifndef __IAppHostAdminManager_FWD_DEFINED__
#define __IAppHostAdminManager_FWD_DEFINED__
typedef interface IAppHostAdminManager IAppHostAdminManager;
#endif 	/* __IAppHostAdminManager_FWD_DEFINED__ */


#ifndef __IAppHostWritableAdminManager_FWD_DEFINED__
#define __IAppHostWritableAdminManager_FWD_DEFINED__
typedef interface IAppHostWritableAdminManager IAppHostWritableAdminManager;
#endif 	/* __IAppHostWritableAdminManager_FWD_DEFINED__ */


#ifndef __IAppHostConfigManager_FWD_DEFINED__
#define __IAppHostConfigManager_FWD_DEFINED__
typedef interface IAppHostConfigManager IAppHostConfigManager;
#endif 	/* __IAppHostConfigManager_FWD_DEFINED__ */


#ifndef __AppHostAdminManager_FWD_DEFINED__
#define __AppHostAdminManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class AppHostAdminManager AppHostAdminManager;
#else
typedef struct AppHostAdminManager AppHostAdminManager;
#endif /* __cplusplus */

#endif 	/* __AppHostAdminManager_FWD_DEFINED__ */


#ifndef __AppHostWritableAdminManager_FWD_DEFINED__
#define __AppHostWritableAdminManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class AppHostWritableAdminManager AppHostWritableAdminManager;
#else
typedef struct AppHostWritableAdminManager AppHostWritableAdminManager;
#endif /* __cplusplus */

#endif 	/* __AppHostWritableAdminManager_FWD_DEFINED__ */


#ifndef __IAppHostConfigException_FWD_DEFINED__
#define __IAppHostConfigException_FWD_DEFINED__
typedef interface IAppHostConfigException IAppHostConfigException;
#endif 	/* __IAppHostConfigException_FWD_DEFINED__ */


#ifndef __IAppHostPropertyException_FWD_DEFINED__
#define __IAppHostPropertyException_FWD_DEFINED__
typedef interface IAppHostPropertyException IAppHostPropertyException;
#endif 	/* __IAppHostPropertyException_FWD_DEFINED__ */


#ifndef __IAppHostMappingExtension_FWD_DEFINED__
#define __IAppHostMappingExtension_FWD_DEFINED__
typedef interface IAppHostMappingExtension IAppHostMappingExtension;
#endif 	/* __IAppHostMappingExtension_FWD_DEFINED__ */


#ifndef __IAppHostPathMapper_FWD_DEFINED__
#define __IAppHostPathMapper_FWD_DEFINED__
typedef interface IAppHostPathMapper IAppHostPathMapper;
#endif 	/* __IAppHostPathMapper_FWD_DEFINED__ */


#ifndef __IAppHostChangeHandler_FWD_DEFINED__
#define __IAppHostChangeHandler_FWD_DEFINED__
typedef interface IAppHostChangeHandler IAppHostChangeHandler;
#endif 	/* __IAppHostChangeHandler_FWD_DEFINED__ */


#ifndef __IAppHostPropertyExtension_FWD_DEFINED__
#define __IAppHostPropertyExtension_FWD_DEFINED__
typedef interface IAppHostPropertyExtension IAppHostPropertyExtension;
#endif 	/* __IAppHostPropertyExtension_FWD_DEFINED__ */


#ifndef __IAppHostElementExtension_FWD_DEFINED__
#define __IAppHostElementExtension_FWD_DEFINED__
typedef interface IAppHostElementExtension IAppHostElementExtension;
#endif 	/* __IAppHostElementExtension_FWD_DEFINED__ */


#ifndef __IAppHostMethodExtension_FWD_DEFINED__
#define __IAppHostMethodExtension_FWD_DEFINED__
typedef interface IAppHostMethodExtension IAppHostMethodExtension;
#endif 	/* __IAppHostMethodExtension_FWD_DEFINED__ */


#ifndef __IAppHostPathMapper2_FWD_DEFINED__
#define __IAppHostPathMapper2_FWD_DEFINED__
typedef interface IAppHostPathMapper2 IAppHostPathMapper2;
#endif 	/* __IAppHostPathMapper2_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"
#include "oaidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_ahadmin_0000_0000 */
/* [local] */ 




























extern RPC_IF_HANDLE __MIDL_itf_ahadmin_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_ahadmin_0000_0000_v0_0_s_ifspec;

#ifndef __IAppHostMethodExtension_INTERFACE_DEFINED__
#define __IAppHostMethodExtension_INTERFACE_DEFINED__

/* interface IAppHostMethodExtension */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostMethodExtension;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("70184ac9-7673-4770-96b1-445ce035cf70")
    IAppHostMethodExtension : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ProvideMethod( 
            /* [in] */ __RPC__in_opt IAppHostMethod *pMethod,
            /* [in] */ __RPC__in_opt IAppHostMethodInstance *pMethodInstance,
            /* [in] */ __RPC__in_opt IAppHostElement *pElement) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostMethodExtensionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostMethodExtension * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostMethodExtension * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostMethodExtension * This);
        
        HRESULT ( STDMETHODCALLTYPE *ProvideMethod )( 
            __RPC__in IAppHostMethodExtension * This,
            /* [in] */ __RPC__in_opt IAppHostMethod *pMethod,
            /* [in] */ __RPC__in_opt IAppHostMethodInstance *pMethodInstance,
            /* [in] */ __RPC__in_opt IAppHostElement *pElement);
        
        END_INTERFACE
    } IAppHostMethodExtensionVtbl;

    interface IAppHostMethodExtension
    {
        CONST_VTBL struct IAppHostMethodExtensionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostMethodExtension_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostMethodExtension_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostMethodExtension_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostMethodExtension_ProvideMethod(This,pMethod,pMethodInstance,pElement)	\
    ( (This)->lpVtbl -> ProvideMethod(This,pMethod,pMethodInstance,pElement) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostMethodExtension_INTERFACE_DEFINED__ */


#ifndef __IAppHostPropertyExtension_INTERFACE_DEFINED__
#define __IAppHostPropertyExtension_INTERFACE_DEFINED__

/* interface IAppHostPropertyExtension */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostPropertyExtension;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("88e220f3-33e8-4534-afac-b4a98eccf9ae")
    IAppHostPropertyExtension : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ProvideGetProperty( 
            /* [in] */ __RPC__in_opt IAppHostElement *pElement,
            /* [in] */ __RPC__in_opt IAppHostProperty *pProperty) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostPropertyExtensionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostPropertyExtension * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostPropertyExtension * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostPropertyExtension * This);
        
        HRESULT ( STDMETHODCALLTYPE *ProvideGetProperty )( 
            __RPC__in IAppHostPropertyExtension * This,
            /* [in] */ __RPC__in_opt IAppHostElement *pElement,
            /* [in] */ __RPC__in_opt IAppHostProperty *pProperty);
        
        END_INTERFACE
    } IAppHostPropertyExtensionVtbl;

    interface IAppHostPropertyExtension
    {
        CONST_VTBL struct IAppHostPropertyExtensionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostPropertyExtension_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostPropertyExtension_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostPropertyExtension_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostPropertyExtension_ProvideGetProperty(This,pElement,pProperty)	\
    ( (This)->lpVtbl -> ProvideGetProperty(This,pElement,pProperty) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostPropertyExtension_INTERFACE_DEFINED__ */


#ifndef __IAppHostElementExtension_INTERFACE_DEFINED__
#define __IAppHostElementExtension_INTERFACE_DEFINED__

/* interface IAppHostElementExtension */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostElementExtension;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("518eb37d-1ff4-42dd-86c3-3140bc35b823")
    IAppHostElementExtension : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ProvideElement( 
            /* [in] */ __RPC__in_opt IAppHostElement *pNewElement) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostElementExtensionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostElementExtension * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostElementExtension * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostElementExtension * This);
        
        HRESULT ( STDMETHODCALLTYPE *ProvideElement )( 
            __RPC__in IAppHostElementExtension * This,
            /* [in] */ __RPC__in_opt IAppHostElement *pNewElement);
        
        END_INTERFACE
    } IAppHostElementExtensionVtbl;

    interface IAppHostElementExtension
    {
        CONST_VTBL struct IAppHostElementExtensionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostElementExtension_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostElementExtension_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostElementExtension_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostElementExtension_ProvideElement(This,pNewElement)	\
    ( (This)->lpVtbl -> ProvideElement(This,pNewElement) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostElementExtension_INTERFACE_DEFINED__ */


#ifndef __IAppHostMappingExtension_INTERFACE_DEFINED__
#define __IAppHostMappingExtension_INTERFACE_DEFINED__

/* interface IAppHostMappingExtension */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostMappingExtension;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("31a83ea0-c0e4-4a2c-8a01-353cc2a4c60a")
    IAppHostMappingExtension : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSiteNameFromSiteId( 
            /* [in] */ DWORD dwSiteId,
            /* [string][retval][out] */ __RPC__deref_out_opt_string BSTR *pbstrSiteName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSiteIdFromSiteName( 
            /* [string][in] */ __RPC__in_string BSTR bstrSiteName,
            /* [retval][out] */ __RPC__out DWORD *pdwSiteId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSiteElementFromSiteId( 
            /* [in] */ DWORD dwSiteId,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppSiteElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MapPath( 
            /* [string][in] */ __RPC__in_string BSTR bstrSiteName,
            /* [string][in] */ __RPC__in_string BSTR bstrVirtualPath,
            /* [string][out] */ __RPC__deref_out_opt_string BSTR *pbstrPhysicalPath,
            /* [out] */ __RPC__deref_out_opt IAppHostElement **ppVirtualDirectoryElement,
            /* [out] */ __RPC__deref_out_opt IAppHostElement **ppApplicationElement) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostMappingExtensionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostMappingExtension * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostMappingExtension * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostMappingExtension * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetSiteNameFromSiteId )( 
            __RPC__in IAppHostMappingExtension * This,
            /* [in] */ DWORD dwSiteId,
            /* [string][retval][out] */ __RPC__deref_out_opt_string BSTR *pbstrSiteName);
        
        HRESULT ( STDMETHODCALLTYPE *GetSiteIdFromSiteName )( 
            __RPC__in IAppHostMappingExtension * This,
            /* [string][in] */ __RPC__in_string BSTR bstrSiteName,
            /* [retval][out] */ __RPC__out DWORD *pdwSiteId);
        
        HRESULT ( STDMETHODCALLTYPE *GetSiteElementFromSiteId )( 
            __RPC__in IAppHostMappingExtension * This,
            /* [in] */ DWORD dwSiteId,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppSiteElement);
        
        HRESULT ( STDMETHODCALLTYPE *MapPath )( 
            __RPC__in IAppHostMappingExtension * This,
            /* [string][in] */ __RPC__in_string BSTR bstrSiteName,
            /* [string][in] */ __RPC__in_string BSTR bstrVirtualPath,
            /* [string][out] */ __RPC__deref_out_opt_string BSTR *pbstrPhysicalPath,
            /* [out] */ __RPC__deref_out_opt IAppHostElement **ppVirtualDirectoryElement,
            /* [out] */ __RPC__deref_out_opt IAppHostElement **ppApplicationElement);
        
        END_INTERFACE
    } IAppHostMappingExtensionVtbl;

    interface IAppHostMappingExtension
    {
        CONST_VTBL struct IAppHostMappingExtensionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostMappingExtension_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostMappingExtension_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostMappingExtension_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostMappingExtension_GetSiteNameFromSiteId(This,dwSiteId,pbstrSiteName)	\
    ( (This)->lpVtbl -> GetSiteNameFromSiteId(This,dwSiteId,pbstrSiteName) ) 

#define IAppHostMappingExtension_GetSiteIdFromSiteName(This,bstrSiteName,pdwSiteId)	\
    ( (This)->lpVtbl -> GetSiteIdFromSiteName(This,bstrSiteName,pdwSiteId) ) 

#define IAppHostMappingExtension_GetSiteElementFromSiteId(This,dwSiteId,ppSiteElement)	\
    ( (This)->lpVtbl -> GetSiteElementFromSiteId(This,dwSiteId,ppSiteElement) ) 

#define IAppHostMappingExtension_MapPath(This,bstrSiteName,bstrVirtualPath,pbstrPhysicalPath,ppVirtualDirectoryElement,ppApplicationElement)	\
    ( (This)->lpVtbl -> MapPath(This,bstrSiteName,bstrVirtualPath,pbstrPhysicalPath,ppVirtualDirectoryElement,ppApplicationElement) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostMappingExtension_INTERFACE_DEFINED__ */


#ifndef __IAppHostChildElementCollection_INTERFACE_DEFINED__
#define __IAppHostChildElementCollection_INTERFACE_DEFINED__

/* interface IAppHostChildElementCollection */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostChildElementCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("08a90f5f-0702-48d6-b45f-02a9885a9768")
    IAppHostChildElementCollection : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out DWORD *pcCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppElement) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostChildElementCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostChildElementCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostChildElementCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostChildElementCollection * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAppHostChildElementCollection * This,
            /* [retval][out] */ __RPC__out DWORD *pcCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAppHostChildElementCollection * This,
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppElement);
        
        END_INTERFACE
    } IAppHostChildElementCollectionVtbl;

    interface IAppHostChildElementCollection
    {
        CONST_VTBL struct IAppHostChildElementCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostChildElementCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostChildElementCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostChildElementCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostChildElementCollection_get_Count(This,pcCount)	\
    ( (This)->lpVtbl -> get_Count(This,pcCount) ) 

#define IAppHostChildElementCollection_get_Item(This,cIndex,ppElement)	\
    ( (This)->lpVtbl -> get_Item(This,cIndex,ppElement) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostChildElementCollection_INTERFACE_DEFINED__ */


#ifndef __IAppHostPropertyCollection_INTERFACE_DEFINED__
#define __IAppHostPropertyCollection_INTERFACE_DEFINED__

/* interface IAppHostPropertyCollection */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostPropertyCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0191775e-bcff-445a-b4f4-3bdda54e2816")
    IAppHostPropertyCollection : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out DWORD *pcCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostProperty **ppProperty) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostPropertyCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostPropertyCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostPropertyCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostPropertyCollection * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAppHostPropertyCollection * This,
            /* [retval][out] */ __RPC__out DWORD *pcCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAppHostPropertyCollection * This,
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostProperty **ppProperty);
        
        END_INTERFACE
    } IAppHostPropertyCollectionVtbl;

    interface IAppHostPropertyCollection
    {
        CONST_VTBL struct IAppHostPropertyCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostPropertyCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostPropertyCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostPropertyCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostPropertyCollection_get_Count(This,pcCount)	\
    ( (This)->lpVtbl -> get_Count(This,pcCount) ) 

#define IAppHostPropertyCollection_get_Item(This,cIndex,ppProperty)	\
    ( (This)->lpVtbl -> get_Item(This,cIndex,ppProperty) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostPropertyCollection_INTERFACE_DEFINED__ */


#ifndef __IAppHostConfigLocationCollection_INTERFACE_DEFINED__
#define __IAppHostConfigLocationCollection_INTERFACE_DEFINED__

/* interface IAppHostConfigLocationCollection */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostConfigLocationCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("832a32f7-b3ea-4b8c-b260-9a2923001184")
    IAppHostConfigLocationCollection : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out DWORD *pcCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT varIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConfigLocation **ppLocation) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddLocation( 
            /* [string][in] */ __RPC__in_string BSTR bstrLocationPath,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConfigLocation **ppNewLocation) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteLocation( 
            /* [in] */ VARIANT cIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RenameLocation( 
            /* [in] */ VARIANT varIndex,
            /* [string][in] */ __RPC__in_string BSTR bstrLocationPath) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostConfigLocationCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostConfigLocationCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostConfigLocationCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostConfigLocationCollection * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAppHostConfigLocationCollection * This,
            /* [retval][out] */ __RPC__out DWORD *pcCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAppHostConfigLocationCollection * This,
            /* [in] */ VARIANT varIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConfigLocation **ppLocation);
        
        HRESULT ( STDMETHODCALLTYPE *AddLocation )( 
            __RPC__in IAppHostConfigLocationCollection * This,
            /* [string][in] */ __RPC__in_string BSTR bstrLocationPath,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConfigLocation **ppNewLocation);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteLocation )( 
            __RPC__in IAppHostConfigLocationCollection * This,
            /* [in] */ VARIANT cIndex);
        
        HRESULT ( STDMETHODCALLTYPE *RenameLocation )( 
            __RPC__in IAppHostConfigLocationCollection * This,
            /* [in] */ VARIANT varIndex,
            /* [string][in] */ __RPC__in_string BSTR bstrLocationPath);
        
        END_INTERFACE
    } IAppHostConfigLocationCollectionVtbl;

    interface IAppHostConfigLocationCollection
    {
        CONST_VTBL struct IAppHostConfigLocationCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostConfigLocationCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostConfigLocationCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostConfigLocationCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostConfigLocationCollection_get_Count(This,pcCount)	\
    ( (This)->lpVtbl -> get_Count(This,pcCount) ) 

#define IAppHostConfigLocationCollection_get_Item(This,varIndex,ppLocation)	\
    ( (This)->lpVtbl -> get_Item(This,varIndex,ppLocation) ) 

#define IAppHostConfigLocationCollection_AddLocation(This,bstrLocationPath,ppNewLocation)	\
    ( (This)->lpVtbl -> AddLocation(This,bstrLocationPath,ppNewLocation) ) 

#define IAppHostConfigLocationCollection_DeleteLocation(This,cIndex)	\
    ( (This)->lpVtbl -> DeleteLocation(This,cIndex) ) 

#define IAppHostConfigLocationCollection_RenameLocation(This,varIndex,bstrLocationPath)	\
    ( (This)->lpVtbl -> RenameLocation(This,varIndex,bstrLocationPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostConfigLocationCollection_INTERFACE_DEFINED__ */


#ifndef __IAppHostMethodCollection_INTERFACE_DEFINED__
#define __IAppHostMethodCollection_INTERFACE_DEFINED__

/* interface IAppHostMethodCollection */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostMethodCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d6c7cd8f-bb8d-4f96-b591-d3a5f1320269")
    IAppHostMethodCollection : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out DWORD *pcCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostMethod **ppMethod) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostMethodCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostMethodCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostMethodCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostMethodCollection * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAppHostMethodCollection * This,
            /* [retval][out] */ __RPC__out DWORD *pcCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAppHostMethodCollection * This,
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostMethod **ppMethod);
        
        END_INTERFACE
    } IAppHostMethodCollectionVtbl;

    interface IAppHostMethodCollection
    {
        CONST_VTBL struct IAppHostMethodCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostMethodCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostMethodCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostMethodCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostMethodCollection_get_Count(This,pcCount)	\
    ( (This)->lpVtbl -> get_Count(This,pcCount) ) 

#define IAppHostMethodCollection_get_Item(This,cIndex,ppMethod)	\
    ( (This)->lpVtbl -> get_Item(This,cIndex,ppMethod) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostMethodCollection_INTERFACE_DEFINED__ */


#ifndef __IAppHostElementSchemaCollection_INTERFACE_DEFINED__
#define __IAppHostElementSchemaCollection_INTERFACE_DEFINED__

/* interface IAppHostElementSchemaCollection */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostElementSchemaCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0344cdda-151e-4cbf-82da-66ae61e97754")
    IAppHostElementSchemaCollection : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out DWORD *pcCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchema **ppElementSchema) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostElementSchemaCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostElementSchemaCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostElementSchemaCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostElementSchemaCollection * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAppHostElementSchemaCollection * This,
            /* [retval][out] */ __RPC__out DWORD *pcCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAppHostElementSchemaCollection * This,
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchema **ppElementSchema);
        
        END_INTERFACE
    } IAppHostElementSchemaCollectionVtbl;

    interface IAppHostElementSchemaCollection
    {
        CONST_VTBL struct IAppHostElementSchemaCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostElementSchemaCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostElementSchemaCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostElementSchemaCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostElementSchemaCollection_get_Count(This,pcCount)	\
    ( (This)->lpVtbl -> get_Count(This,pcCount) ) 

#define IAppHostElementSchemaCollection_get_Item(This,cIndex,ppElementSchema)	\
    ( (This)->lpVtbl -> get_Item(This,cIndex,ppElementSchema) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostElementSchemaCollection_INTERFACE_DEFINED__ */


#ifndef __IAppHostPropertySchemaCollection_INTERFACE_DEFINED__
#define __IAppHostPropertySchemaCollection_INTERFACE_DEFINED__

/* interface IAppHostPropertySchemaCollection */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostPropertySchemaCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8bed2c68-a5fb-4b28-8581-a0dc5267419f")
    IAppHostPropertySchemaCollection : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out DWORD *pcCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostPropertySchema **ppPropertySchema) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostPropertySchemaCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostPropertySchemaCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostPropertySchemaCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostPropertySchemaCollection * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAppHostPropertySchemaCollection * This,
            /* [retval][out] */ __RPC__out DWORD *pcCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAppHostPropertySchemaCollection * This,
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostPropertySchema **ppPropertySchema);
        
        END_INTERFACE
    } IAppHostPropertySchemaCollectionVtbl;

    interface IAppHostPropertySchemaCollection
    {
        CONST_VTBL struct IAppHostPropertySchemaCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostPropertySchemaCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostPropertySchemaCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostPropertySchemaCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostPropertySchemaCollection_get_Count(This,pcCount)	\
    ( (This)->lpVtbl -> get_Count(This,pcCount) ) 

#define IAppHostPropertySchemaCollection_get_Item(This,cIndex,ppPropertySchema)	\
    ( (This)->lpVtbl -> get_Item(This,cIndex,ppPropertySchema) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostPropertySchemaCollection_INTERFACE_DEFINED__ */


#ifndef __IAppHostConstantValueCollection_INTERFACE_DEFINED__
#define __IAppHostConstantValueCollection_INTERFACE_DEFINED__

/* interface IAppHostConstantValueCollection */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostConstantValueCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5b5a68e6-8b9f-45e1-8199-a95ffccdffff")
    IAppHostConstantValueCollection : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out DWORD *pcCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConstantValue **ppConstantValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostConstantValueCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostConstantValueCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostConstantValueCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostConstantValueCollection * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAppHostConstantValueCollection * This,
            /* [retval][out] */ __RPC__out DWORD *pcCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAppHostConstantValueCollection * This,
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConstantValue **ppConstantValue);
        
        END_INTERFACE
    } IAppHostConstantValueCollectionVtbl;

    interface IAppHostConstantValueCollection
    {
        CONST_VTBL struct IAppHostConstantValueCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostConstantValueCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostConstantValueCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostConstantValueCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostConstantValueCollection_get_Count(This,pcCount)	\
    ( (This)->lpVtbl -> get_Count(This,pcCount) ) 

#define IAppHostConstantValueCollection_get_Item(This,cIndex,ppConstantValue)	\
    ( (This)->lpVtbl -> get_Item(This,cIndex,ppConstantValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostConstantValueCollection_INTERFACE_DEFINED__ */


#ifndef __IAppHostConstantValue_INTERFACE_DEFINED__
#define __IAppHostConstantValue_INTERFACE_DEFINED__

/* interface IAppHostConstantValue */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostConstantValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0716caf8-7d05-4a46-8099-77594be91394")
    IAppHostConstantValue : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ __RPC__out DWORD *pdwValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostConstantValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostConstantValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostConstantValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostConstantValue * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAppHostConstantValue * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in IAppHostConstantValue * This,
            /* [retval][out] */ __RPC__out DWORD *pdwValue);
        
        END_INTERFACE
    } IAppHostConstantValueVtbl;

    interface IAppHostConstantValue
    {
        CONST_VTBL struct IAppHostConstantValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostConstantValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostConstantValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostConstantValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostConstantValue_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAppHostConstantValue_get_Value(This,pdwValue)	\
    ( (This)->lpVtbl -> get_Value(This,pdwValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostConstantValue_INTERFACE_DEFINED__ */


#ifndef __IAppHostPropertySchema_INTERFACE_DEFINED__
#define __IAppHostPropertySchema_INTERFACE_DEFINED__

/* interface IAppHostPropertySchema */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostPropertySchema;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("450386db-7409-4667-935e-384dbbee2a9e")
    IAppHostPropertySchema : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrType) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DefaultValue( 
            /* [retval][out] */ __RPC__out VARIANT *pDefaultValue) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsRequired( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsRequired) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsUniqueKey( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsUniqueKey) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsCombinedKey( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsCombinedKey) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsExpanded( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsExpanded) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ValidationType( 
            /* [string][retval][out] */ __RPC__deref_out_opt_string BSTR *pbstrValidationType) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ValidationParameter( 
            /* [string][retval][out] */ __RPC__deref_out_opt_string BSTR *pbstrValidationParameter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMetadata( 
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsCaseSensitive( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsCaseSensitive) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PossibleValues( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConstantValueCollection **ppValues) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DoesAllowInfinite( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfAllowInfinite) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsEncrypted( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsEncrypted) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TimeSpanFormat( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrTimeSpanFormat) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostPropertySchemaVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostPropertySchema * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostPropertySchema * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrType);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultValue )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [retval][out] */ __RPC__out VARIANT *pDefaultValue);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsRequired )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsRequired);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsUniqueKey )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsUniqueKey);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsCombinedKey )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsCombinedKey);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsExpanded )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsExpanded);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ValidationType )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [string][retval][out] */ __RPC__deref_out_opt_string BSTR *pbstrValidationType);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ValidationParameter )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [string][retval][out] */ __RPC__deref_out_opt_string BSTR *pbstrValidationParameter);
        
        HRESULT ( STDMETHODCALLTYPE *GetMetadata )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsCaseSensitive )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsCaseSensitive);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PossibleValues )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConstantValueCollection **ppValues);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DoesAllowInfinite )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfAllowInfinite);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEncrypted )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsEncrypted);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeSpanFormat )( 
            __RPC__in IAppHostPropertySchema * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrTimeSpanFormat);
        
        END_INTERFACE
    } IAppHostPropertySchemaVtbl;

    interface IAppHostPropertySchema
    {
        CONST_VTBL struct IAppHostPropertySchemaVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostPropertySchema_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostPropertySchema_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostPropertySchema_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostPropertySchema_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAppHostPropertySchema_get_Type(This,pbstrType)	\
    ( (This)->lpVtbl -> get_Type(This,pbstrType) ) 

#define IAppHostPropertySchema_get_DefaultValue(This,pDefaultValue)	\
    ( (This)->lpVtbl -> get_DefaultValue(This,pDefaultValue) ) 

#define IAppHostPropertySchema_get_IsRequired(This,pfIsRequired)	\
    ( (This)->lpVtbl -> get_IsRequired(This,pfIsRequired) ) 

#define IAppHostPropertySchema_get_IsUniqueKey(This,pfIsUniqueKey)	\
    ( (This)->lpVtbl -> get_IsUniqueKey(This,pfIsUniqueKey) ) 

#define IAppHostPropertySchema_get_IsCombinedKey(This,pfIsCombinedKey)	\
    ( (This)->lpVtbl -> get_IsCombinedKey(This,pfIsCombinedKey) ) 

#define IAppHostPropertySchema_get_IsExpanded(This,pfIsExpanded)	\
    ( (This)->lpVtbl -> get_IsExpanded(This,pfIsExpanded) ) 

#define IAppHostPropertySchema_get_ValidationType(This,pbstrValidationType)	\
    ( (This)->lpVtbl -> get_ValidationType(This,pbstrValidationType) ) 

#define IAppHostPropertySchema_get_ValidationParameter(This,pbstrValidationParameter)	\
    ( (This)->lpVtbl -> get_ValidationParameter(This,pbstrValidationParameter) ) 

#define IAppHostPropertySchema_GetMetadata(This,bstrMetadataType,pValue)	\
    ( (This)->lpVtbl -> GetMetadata(This,bstrMetadataType,pValue) ) 

#define IAppHostPropertySchema_get_IsCaseSensitive(This,pfIsCaseSensitive)	\
    ( (This)->lpVtbl -> get_IsCaseSensitive(This,pfIsCaseSensitive) ) 

#define IAppHostPropertySchema_get_PossibleValues(This,ppValues)	\
    ( (This)->lpVtbl -> get_PossibleValues(This,ppValues) ) 

#define IAppHostPropertySchema_get_DoesAllowInfinite(This,pfAllowInfinite)	\
    ( (This)->lpVtbl -> get_DoesAllowInfinite(This,pfAllowInfinite) ) 

#define IAppHostPropertySchema_get_IsEncrypted(This,pfIsEncrypted)	\
    ( (This)->lpVtbl -> get_IsEncrypted(This,pfIsEncrypted) ) 

#define IAppHostPropertySchema_get_TimeSpanFormat(This,pbstrTimeSpanFormat)	\
    ( (This)->lpVtbl -> get_TimeSpanFormat(This,pbstrTimeSpanFormat) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostPropertySchema_INTERFACE_DEFINED__ */


#ifndef __IAppHostCollectionSchema_INTERFACE_DEFINED__
#define __IAppHostCollectionSchema_INTERFACE_DEFINED__

/* interface IAppHostCollectionSchema */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostCollectionSchema;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("de095db1-5368-4d11-81f6-efef619b7bcf")
    IAppHostCollectionSchema : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AddElementNames( 
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrElementName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAddElementSchema( 
            /* [string][in] */ __RPC__in_string BSTR bstrElementName,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchema **ppSchema) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RemoveElementSchema( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchema **ppSchema) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClearElementSchema( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchema **ppSchema) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsMergeAppend( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsMergeAppend) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMetadata( 
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DoesAllowDuplicates( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfAllowDuplicates) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostCollectionSchemaVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostCollectionSchema * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostCollectionSchema * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostCollectionSchema * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AddElementNames )( 
            __RPC__in IAppHostCollectionSchema * This,
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrElementName);
        
        HRESULT ( STDMETHODCALLTYPE *GetAddElementSchema )( 
            __RPC__in IAppHostCollectionSchema * This,
            /* [string][in] */ __RPC__in_string BSTR bstrElementName,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchema **ppSchema);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RemoveElementSchema )( 
            __RPC__in IAppHostCollectionSchema * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchema **ppSchema);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClearElementSchema )( 
            __RPC__in IAppHostCollectionSchema * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchema **ppSchema);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsMergeAppend )( 
            __RPC__in IAppHostCollectionSchema * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsMergeAppend);
        
        HRESULT ( STDMETHODCALLTYPE *GetMetadata )( 
            __RPC__in IAppHostCollectionSchema * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DoesAllowDuplicates )( 
            __RPC__in IAppHostCollectionSchema * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfAllowDuplicates);
        
        END_INTERFACE
    } IAppHostCollectionSchemaVtbl;

    interface IAppHostCollectionSchema
    {
        CONST_VTBL struct IAppHostCollectionSchemaVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostCollectionSchema_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostCollectionSchema_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostCollectionSchema_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostCollectionSchema_get_AddElementNames(This,pbstrElementName)	\
    ( (This)->lpVtbl -> get_AddElementNames(This,pbstrElementName) ) 

#define IAppHostCollectionSchema_GetAddElementSchema(This,bstrElementName,ppSchema)	\
    ( (This)->lpVtbl -> GetAddElementSchema(This,bstrElementName,ppSchema) ) 

#define IAppHostCollectionSchema_get_RemoveElementSchema(This,ppSchema)	\
    ( (This)->lpVtbl -> get_RemoveElementSchema(This,ppSchema) ) 

#define IAppHostCollectionSchema_get_ClearElementSchema(This,ppSchema)	\
    ( (This)->lpVtbl -> get_ClearElementSchema(This,ppSchema) ) 

#define IAppHostCollectionSchema_get_IsMergeAppend(This,pfIsMergeAppend)	\
    ( (This)->lpVtbl -> get_IsMergeAppend(This,pfIsMergeAppend) ) 

#define IAppHostCollectionSchema_GetMetadata(This,bstrMetadataType,pValue)	\
    ( (This)->lpVtbl -> GetMetadata(This,bstrMetadataType,pValue) ) 

#define IAppHostCollectionSchema_get_DoesAllowDuplicates(This,pfAllowDuplicates)	\
    ( (This)->lpVtbl -> get_DoesAllowDuplicates(This,pfAllowDuplicates) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostCollectionSchema_INTERFACE_DEFINED__ */


#ifndef __IAppHostElementSchema_INTERFACE_DEFINED__
#define __IAppHostElementSchema_INTERFACE_DEFINED__

/* interface IAppHostElementSchema */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostElementSchema;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ef13d885-642c-4709-99ec-b89561c6bc69")
    IAppHostElementSchema : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DoesAllowUnschematizedProperties( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfAllowUnschematized) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMetadata( 
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CollectionSchema( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostCollectionSchema **ppCollectionSchema) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ChildElementSchemas( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchemaCollection **ppChildSchemas) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PropertySchemas( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostPropertySchemaCollection **ppPropertySchemas) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsCollectionDefault( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsCollectionDefault) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostElementSchemaVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostElementSchema * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostElementSchema * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostElementSchema * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAppHostElementSchema * This,
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DoesAllowUnschematizedProperties )( 
            __RPC__in IAppHostElementSchema * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfAllowUnschematized);
        
        HRESULT ( STDMETHODCALLTYPE *GetMetadata )( 
            __RPC__in IAppHostElementSchema * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CollectionSchema )( 
            __RPC__in IAppHostElementSchema * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostCollectionSchema **ppCollectionSchema);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildElementSchemas )( 
            __RPC__in IAppHostElementSchema * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchemaCollection **ppChildSchemas);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PropertySchemas )( 
            __RPC__in IAppHostElementSchema * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostPropertySchemaCollection **ppPropertySchemas);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsCollectionDefault )( 
            __RPC__in IAppHostElementSchema * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsCollectionDefault);
        
        END_INTERFACE
    } IAppHostElementSchemaVtbl;

    interface IAppHostElementSchema
    {
        CONST_VTBL struct IAppHostElementSchemaVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostElementSchema_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostElementSchema_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostElementSchema_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostElementSchema_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAppHostElementSchema_get_DoesAllowUnschematizedProperties(This,pfAllowUnschematized)	\
    ( (This)->lpVtbl -> get_DoesAllowUnschematizedProperties(This,pfAllowUnschematized) ) 

#define IAppHostElementSchema_GetMetadata(This,bstrMetadataType,pValue)	\
    ( (This)->lpVtbl -> GetMetadata(This,bstrMetadataType,pValue) ) 

#define IAppHostElementSchema_get_CollectionSchema(This,ppCollectionSchema)	\
    ( (This)->lpVtbl -> get_CollectionSchema(This,ppCollectionSchema) ) 

#define IAppHostElementSchema_get_ChildElementSchemas(This,ppChildSchemas)	\
    ( (This)->lpVtbl -> get_ChildElementSchemas(This,ppChildSchemas) ) 

#define IAppHostElementSchema_get_PropertySchemas(This,ppPropertySchemas)	\
    ( (This)->lpVtbl -> get_PropertySchemas(This,ppPropertySchemas) ) 

#define IAppHostElementSchema_get_IsCollectionDefault(This,pfIsCollectionDefault)	\
    ( (This)->lpVtbl -> get_IsCollectionDefault(This,pfIsCollectionDefault) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostElementSchema_INTERFACE_DEFINED__ */


#ifndef __IAppHostMethodSchema_INTERFACE_DEFINED__
#define __IAppHostMethodSchema_INTERFACE_DEFINED__

/* interface IAppHostMethodSchema */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostMethodSchema;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2d9915fb-9d42-4328-b782-1b46819fab9e")
    IAppHostMethodSchema : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_InputSchema( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchema **ppInputSchema) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OutputSchema( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchema **ppOutputSchema) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMetadata( 
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostMethodSchemaVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostMethodSchema * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostMethodSchema * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostMethodSchema * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAppHostMethodSchema * This,
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_InputSchema )( 
            __RPC__in IAppHostMethodSchema * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchema **ppInputSchema);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OutputSchema )( 
            __RPC__in IAppHostMethodSchema * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchema **ppOutputSchema);
        
        HRESULT ( STDMETHODCALLTYPE *GetMetadata )( 
            __RPC__in IAppHostMethodSchema * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue);
        
        END_INTERFACE
    } IAppHostMethodSchemaVtbl;

    interface IAppHostMethodSchema
    {
        CONST_VTBL struct IAppHostMethodSchemaVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostMethodSchema_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostMethodSchema_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostMethodSchema_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostMethodSchema_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAppHostMethodSchema_get_InputSchema(This,ppInputSchema)	\
    ( (This)->lpVtbl -> get_InputSchema(This,ppInputSchema) ) 

#define IAppHostMethodSchema_get_OutputSchema(This,ppOutputSchema)	\
    ( (This)->lpVtbl -> get_OutputSchema(This,ppOutputSchema) ) 

#define IAppHostMethodSchema_GetMetadata(This,bstrMetadataType,pValue)	\
    ( (This)->lpVtbl -> GetMetadata(This,bstrMetadataType,pValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostMethodSchema_INTERFACE_DEFINED__ */


#ifndef __IAppHostMethodInstance_INTERFACE_DEFINED__
#define __IAppHostMethodInstance_INTERFACE_DEFINED__

/* interface IAppHostMethodInstance */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostMethodInstance;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b80f3c42-60e0-4ae0-9007-f52852d3dbed")
    IAppHostMethodInstance : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Input( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppInputElement) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Output( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppOutputElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Execute( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMetadata( 
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMetadata( 
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [in] */ VARIANT value) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostMethodInstanceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostMethodInstance * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostMethodInstance * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostMethodInstance * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Input )( 
            __RPC__in IAppHostMethodInstance * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppInputElement);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Output )( 
            __RPC__in IAppHostMethodInstance * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppOutputElement);
        
        HRESULT ( STDMETHODCALLTYPE *Execute )( 
            __RPC__in IAppHostMethodInstance * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMetadata )( 
            __RPC__in IAppHostMethodInstance * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetMetadata )( 
            __RPC__in IAppHostMethodInstance * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [in] */ VARIANT value);
        
        END_INTERFACE
    } IAppHostMethodInstanceVtbl;

    interface IAppHostMethodInstance
    {
        CONST_VTBL struct IAppHostMethodInstanceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostMethodInstance_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostMethodInstance_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostMethodInstance_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostMethodInstance_get_Input(This,ppInputElement)	\
    ( (This)->lpVtbl -> get_Input(This,ppInputElement) ) 

#define IAppHostMethodInstance_get_Output(This,ppOutputElement)	\
    ( (This)->lpVtbl -> get_Output(This,ppOutputElement) ) 

#define IAppHostMethodInstance_Execute(This)	\
    ( (This)->lpVtbl -> Execute(This) ) 

#define IAppHostMethodInstance_GetMetadata(This,bstrMetadataType,pValue)	\
    ( (This)->lpVtbl -> GetMetadata(This,bstrMetadataType,pValue) ) 

#define IAppHostMethodInstance_SetMetadata(This,bstrMetadataType,value)	\
    ( (This)->lpVtbl -> SetMetadata(This,bstrMetadataType,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostMethodInstance_INTERFACE_DEFINED__ */


#ifndef __IAppHostMethod_INTERFACE_DEFINED__
#define __IAppHostMethod_INTERFACE_DEFINED__

/* interface IAppHostMethod */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostMethod;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7883ca1c-1112-4447-84c3-52fbeb38069d")
    IAppHostMethod : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Schema( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostMethodSchema **ppMethodSchema) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostMethodInstance **ppMethodInstance) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostMethodVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostMethod * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostMethod * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostMethod * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAppHostMethod * This,
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Schema )( 
            __RPC__in IAppHostMethod * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostMethodSchema **ppMethodSchema);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in IAppHostMethod * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostMethodInstance **ppMethodInstance);
        
        END_INTERFACE
    } IAppHostMethodVtbl;

    interface IAppHostMethod
    {
        CONST_VTBL struct IAppHostMethodVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostMethod_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostMethod_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostMethod_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostMethod_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAppHostMethod_get_Schema(This,ppMethodSchema)	\
    ( (This)->lpVtbl -> get_Schema(This,ppMethodSchema) ) 

#define IAppHostMethod_CreateInstance(This,ppMethodInstance)	\
    ( (This)->lpVtbl -> CreateInstance(This,ppMethodInstance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostMethod_INTERFACE_DEFINED__ */


#ifndef __IAppHostConfigException_INTERFACE_DEFINED__
#define __IAppHostConfigException_INTERFACE_DEFINED__

/* interface IAppHostConfigException */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostConfigException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4dfa1df3-8900-4bc7-bbb5-d1a458c52410")
    IAppHostConfigException : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LineNumber( 
            /* [retval][out] */ __RPC__out ULONG *pcLineNumber) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrFileName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ConfigPath( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrConfigPath) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ErrorLine( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrErrorLine) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PreErrorLine( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrPreErrorLine) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PostErrorLine( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrPostErrorLine) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ErrorString( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrErrorString) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostConfigExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostConfigException * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostConfigException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostConfigException * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineNumber )( 
            __RPC__in IAppHostConfigException * This,
            /* [retval][out] */ __RPC__out ULONG *pcLineNumber);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            __RPC__in IAppHostConfigException * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrFileName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigPath )( 
            __RPC__in IAppHostConfigException * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrConfigPath);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorLine )( 
            __RPC__in IAppHostConfigException * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrErrorLine);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreErrorLine )( 
            __RPC__in IAppHostConfigException * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrPreErrorLine);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PostErrorLine )( 
            __RPC__in IAppHostConfigException * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrPostErrorLine);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorString )( 
            __RPC__in IAppHostConfigException * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrErrorString);
        
        END_INTERFACE
    } IAppHostConfigExceptionVtbl;

    interface IAppHostConfigException
    {
        CONST_VTBL struct IAppHostConfigExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostConfigException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostConfigException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostConfigException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostConfigException_get_LineNumber(This,pcLineNumber)	\
    ( (This)->lpVtbl -> get_LineNumber(This,pcLineNumber) ) 

#define IAppHostConfigException_get_FileName(This,pbstrFileName)	\
    ( (This)->lpVtbl -> get_FileName(This,pbstrFileName) ) 

#define IAppHostConfigException_get_ConfigPath(This,pbstrConfigPath)	\
    ( (This)->lpVtbl -> get_ConfigPath(This,pbstrConfigPath) ) 

#define IAppHostConfigException_get_ErrorLine(This,pbstrErrorLine)	\
    ( (This)->lpVtbl -> get_ErrorLine(This,pbstrErrorLine) ) 

#define IAppHostConfigException_get_PreErrorLine(This,pbstrPreErrorLine)	\
    ( (This)->lpVtbl -> get_PreErrorLine(This,pbstrPreErrorLine) ) 

#define IAppHostConfigException_get_PostErrorLine(This,pbstrPostErrorLine)	\
    ( (This)->lpVtbl -> get_PostErrorLine(This,pbstrPostErrorLine) ) 

#define IAppHostConfigException_get_ErrorString(This,pbstrErrorString)	\
    ( (This)->lpVtbl -> get_ErrorString(This,pbstrErrorString) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostConfigException_INTERFACE_DEFINED__ */


#ifndef __IAppHostPropertyException_INTERFACE_DEFINED__
#define __IAppHostPropertyException_INTERFACE_DEFINED__

/* interface IAppHostPropertyException */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostPropertyException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("eafe4895-a929-41ea-b14d-613e23f62b71")
    IAppHostPropertyException : public IAppHostConfigException
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_InvalidValue( 
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrValue) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ValidationFailureReason( 
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrValidationReason) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ValidationFailureParameters( 
            /* [retval][out] */ __RPC__deref_out_opt SAFEARRAY * *pParameterArray) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostPropertyExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostPropertyException * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostPropertyException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostPropertyException * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LineNumber )( 
            __RPC__in IAppHostPropertyException * This,
            /* [retval][out] */ __RPC__out ULONG *pcLineNumber);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            __RPC__in IAppHostPropertyException * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrFileName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigPath )( 
            __RPC__in IAppHostPropertyException * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrConfigPath);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorLine )( 
            __RPC__in IAppHostPropertyException * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrErrorLine);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreErrorLine )( 
            __RPC__in IAppHostPropertyException * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrPreErrorLine);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PostErrorLine )( 
            __RPC__in IAppHostPropertyException * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrPostErrorLine);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorString )( 
            __RPC__in IAppHostPropertyException * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrErrorString);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_InvalidValue )( 
            __RPC__in IAppHostPropertyException * This,
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrValue);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ValidationFailureReason )( 
            __RPC__in IAppHostPropertyException * This,
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrValidationReason);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ValidationFailureParameters )( 
            __RPC__in IAppHostPropertyException * This,
            /* [retval][out] */ __RPC__deref_out_opt SAFEARRAY * *pParameterArray);
        
        END_INTERFACE
    } IAppHostPropertyExceptionVtbl;

    interface IAppHostPropertyException
    {
        CONST_VTBL struct IAppHostPropertyExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostPropertyException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostPropertyException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostPropertyException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostPropertyException_get_LineNumber(This,pcLineNumber)	\
    ( (This)->lpVtbl -> get_LineNumber(This,pcLineNumber) ) 

#define IAppHostPropertyException_get_FileName(This,pbstrFileName)	\
    ( (This)->lpVtbl -> get_FileName(This,pbstrFileName) ) 

#define IAppHostPropertyException_get_ConfigPath(This,pbstrConfigPath)	\
    ( (This)->lpVtbl -> get_ConfigPath(This,pbstrConfigPath) ) 

#define IAppHostPropertyException_get_ErrorLine(This,pbstrErrorLine)	\
    ( (This)->lpVtbl -> get_ErrorLine(This,pbstrErrorLine) ) 

#define IAppHostPropertyException_get_PreErrorLine(This,pbstrPreErrorLine)	\
    ( (This)->lpVtbl -> get_PreErrorLine(This,pbstrPreErrorLine) ) 

#define IAppHostPropertyException_get_PostErrorLine(This,pbstrPostErrorLine)	\
    ( (This)->lpVtbl -> get_PostErrorLine(This,pbstrPostErrorLine) ) 

#define IAppHostPropertyException_get_ErrorString(This,pbstrErrorString)	\
    ( (This)->lpVtbl -> get_ErrorString(This,pbstrErrorString) ) 


#define IAppHostPropertyException_get_InvalidValue(This,pbstrValue)	\
    ( (This)->lpVtbl -> get_InvalidValue(This,pbstrValue) ) 

#define IAppHostPropertyException_get_ValidationFailureReason(This,pbstrValidationReason)	\
    ( (This)->lpVtbl -> get_ValidationFailureReason(This,pbstrValidationReason) ) 

#define IAppHostPropertyException_get_ValidationFailureParameters(This,pParameterArray)	\
    ( (This)->lpVtbl -> get_ValidationFailureParameters(This,pParameterArray) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostPropertyException_INTERFACE_DEFINED__ */


#ifndef __IAppHostElementCollection_INTERFACE_DEFINED__
#define __IAppHostElementCollection_INTERFACE_DEFINED__

/* interface IAppHostElementCollection */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostElementCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c8550bff-5281-4b1e-ac34-99b6fa38464d")
    IAppHostElementCollection : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out DWORD *pcElementCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddElement( 
            /* [in] */ __RPC__in_opt IAppHostElement *pElement,
            /* [defaultvalue][in] */ INT cPosition = -1) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteElement( 
            /* [in] */ VARIANT cIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateNewElement( 
            /* [defaultvalue][string][in] */ __RPC__in_string BSTR bstrElementName,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppElement) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Schema( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostCollectionSchema **ppSchema) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostElementCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostElementCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostElementCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostElementCollection * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAppHostElementCollection * This,
            /* [retval][out] */ __RPC__out DWORD *pcElementCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAppHostElementCollection * This,
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppElement);
        
        HRESULT ( STDMETHODCALLTYPE *AddElement )( 
            __RPC__in IAppHostElementCollection * This,
            /* [in] */ __RPC__in_opt IAppHostElement *pElement,
            /* [defaultvalue][in] */ INT cPosition);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteElement )( 
            __RPC__in IAppHostElementCollection * This,
            /* [in] */ VARIANT cIndex);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in IAppHostElementCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateNewElement )( 
            __RPC__in IAppHostElementCollection * This,
            /* [defaultvalue][string][in] */ __RPC__in_string BSTR bstrElementName,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppElement);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Schema )( 
            __RPC__in IAppHostElementCollection * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostCollectionSchema **ppSchema);
        
        END_INTERFACE
    } IAppHostElementCollectionVtbl;

    interface IAppHostElementCollection
    {
        CONST_VTBL struct IAppHostElementCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostElementCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostElementCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostElementCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostElementCollection_get_Count(This,pcElementCount)	\
    ( (This)->lpVtbl -> get_Count(This,pcElementCount) ) 

#define IAppHostElementCollection_get_Item(This,cIndex,ppElement)	\
    ( (This)->lpVtbl -> get_Item(This,cIndex,ppElement) ) 

#define IAppHostElementCollection_AddElement(This,pElement,cPosition)	\
    ( (This)->lpVtbl -> AddElement(This,pElement,cPosition) ) 

#define IAppHostElementCollection_DeleteElement(This,cIndex)	\
    ( (This)->lpVtbl -> DeleteElement(This,cIndex) ) 

#define IAppHostElementCollection_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define IAppHostElementCollection_CreateNewElement(This,bstrElementName,ppElement)	\
    ( (This)->lpVtbl -> CreateNewElement(This,bstrElementName,ppElement) ) 

#define IAppHostElementCollection_get_Schema(This,ppSchema)	\
    ( (This)->lpVtbl -> get_Schema(This,ppSchema) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostElementCollection_INTERFACE_DEFINED__ */


#ifndef __IAppHostElement_INTERFACE_DEFINED__
#define __IAppHostElement_INTERFACE_DEFINED__

/* interface IAppHostElement */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("64ff8ccc-b287-4dae-b08a-a72cbf45f453")
    IAppHostElement : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Collection( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementCollection **ppCollection) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Properties( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostPropertyCollection **ppProperties) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ChildElements( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostChildElementCollection **ppElements) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMetadata( 
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMetadata( 
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [in] */ VARIANT value) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Schema( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchema **ppSchema) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElementByName( 
            /* [string][in] */ __RPC__in_string BSTR bstrSubName,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPropertyByName( 
            /* [string][in] */ __RPC__in_string BSTR bstrSubName,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostProperty **ppProperty) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Methods( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostMethodCollection **ppMethods) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostElement * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAppHostElement * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Collection )( 
            __RPC__in IAppHostElement * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementCollection **ppCollection);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            __RPC__in IAppHostElement * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostPropertyCollection **ppProperties);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildElements )( 
            __RPC__in IAppHostElement * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostChildElementCollection **ppElements);
        
        HRESULT ( STDMETHODCALLTYPE *GetMetadata )( 
            __RPC__in IAppHostElement * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetMetadata )( 
            __RPC__in IAppHostElement * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [in] */ VARIANT value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Schema )( 
            __RPC__in IAppHostElement * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElementSchema **ppSchema);
        
        HRESULT ( STDMETHODCALLTYPE *GetElementByName )( 
            __RPC__in IAppHostElement * This,
            /* [string][in] */ __RPC__in_string BSTR bstrSubName,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppElement);
        
        HRESULT ( STDMETHODCALLTYPE *GetPropertyByName )( 
            __RPC__in IAppHostElement * This,
            /* [string][in] */ __RPC__in_string BSTR bstrSubName,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostProperty **ppProperty);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in IAppHostElement * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Methods )( 
            __RPC__in IAppHostElement * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostMethodCollection **ppMethods);
        
        END_INTERFACE
    } IAppHostElementVtbl;

    interface IAppHostElement
    {
        CONST_VTBL struct IAppHostElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostElement_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAppHostElement_get_Collection(This,ppCollection)	\
    ( (This)->lpVtbl -> get_Collection(This,ppCollection) ) 

#define IAppHostElement_get_Properties(This,ppProperties)	\
    ( (This)->lpVtbl -> get_Properties(This,ppProperties) ) 

#define IAppHostElement_get_ChildElements(This,ppElements)	\
    ( (This)->lpVtbl -> get_ChildElements(This,ppElements) ) 

#define IAppHostElement_GetMetadata(This,bstrMetadataType,pValue)	\
    ( (This)->lpVtbl -> GetMetadata(This,bstrMetadataType,pValue) ) 

#define IAppHostElement_SetMetadata(This,bstrMetadataType,value)	\
    ( (This)->lpVtbl -> SetMetadata(This,bstrMetadataType,value) ) 

#define IAppHostElement_get_Schema(This,ppSchema)	\
    ( (This)->lpVtbl -> get_Schema(This,ppSchema) ) 

#define IAppHostElement_GetElementByName(This,bstrSubName,ppElement)	\
    ( (This)->lpVtbl -> GetElementByName(This,bstrSubName,ppElement) ) 

#define IAppHostElement_GetPropertyByName(This,bstrSubName,ppProperty)	\
    ( (This)->lpVtbl -> GetPropertyByName(This,bstrSubName,ppProperty) ) 

#define IAppHostElement_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define IAppHostElement_get_Methods(This,ppMethods)	\
    ( (This)->lpVtbl -> get_Methods(This,ppMethods) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostElement_INTERFACE_DEFINED__ */


#ifndef __IAppHostProperty_INTERFACE_DEFINED__
#define __IAppHostProperty_INTERFACE_DEFINED__

/* interface IAppHostProperty */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ed35f7a1-5024-4e7b-a44d-07ddaf4b524d")
    IAppHostProperty : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ __RPC__out VARIANT *pVariant) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT value) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StringValue( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrValue) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Exception( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostPropertyException **ppException) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMetadata( 
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMetadata( 
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [in] */ VARIANT value) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Schema( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostPropertySchema **ppSchema) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostPropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostProperty * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostProperty * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAppHostProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in IAppHostProperty * This,
            /* [retval][out] */ __RPC__out VARIANT *pVariant);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in IAppHostProperty * This,
            /* [in] */ VARIANT value);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in IAppHostProperty * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StringValue )( 
            __RPC__in IAppHostProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrValue);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Exception )( 
            __RPC__in IAppHostProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostPropertyException **ppException);
        
        HRESULT ( STDMETHODCALLTYPE *GetMetadata )( 
            __RPC__in IAppHostProperty * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetMetadata )( 
            __RPC__in IAppHostProperty * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [in] */ VARIANT value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Schema )( 
            __RPC__in IAppHostProperty * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostPropertySchema **ppSchema);
        
        END_INTERFACE
    } IAppHostPropertyVtbl;

    interface IAppHostProperty
    {
        CONST_VTBL struct IAppHostPropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostProperty_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostProperty_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostProperty_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostProperty_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAppHostProperty_get_Value(This,pVariant)	\
    ( (This)->lpVtbl -> get_Value(This,pVariant) ) 

#define IAppHostProperty_put_Value(This,value)	\
    ( (This)->lpVtbl -> put_Value(This,value) ) 

#define IAppHostProperty_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define IAppHostProperty_get_StringValue(This,pbstrValue)	\
    ( (This)->lpVtbl -> get_StringValue(This,pbstrValue) ) 

#define IAppHostProperty_get_Exception(This,ppException)	\
    ( (This)->lpVtbl -> get_Exception(This,ppException) ) 

#define IAppHostProperty_GetMetadata(This,bstrMetadataType,pValue)	\
    ( (This)->lpVtbl -> GetMetadata(This,bstrMetadataType,pValue) ) 

#define IAppHostProperty_SetMetadata(This,bstrMetadataType,value)	\
    ( (This)->lpVtbl -> SetMetadata(This,bstrMetadataType,value) ) 

#define IAppHostProperty_get_Schema(This,ppSchema)	\
    ( (This)->lpVtbl -> get_Schema(This,ppSchema) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostProperty_INTERFACE_DEFINED__ */


#ifndef __IAppHostConfigLocation_INTERFACE_DEFINED__
#define __IAppHostConfigLocation_INTERFACE_DEFINED__

/* interface IAppHostConfigLocation */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostConfigLocation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("370af178-7758-4dad-8146-7391f6e18585")
    IAppHostConfigLocation : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrLocationPath) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out DWORD *pcCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppSection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddConfigSection( 
            /* [in] */ __RPC__in BSTR bstrSectionName,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppAdminElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteConfigSection( 
            /* [in] */ VARIANT cIndex) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostConfigLocationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostConfigLocation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostConfigLocation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostConfigLocation * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            __RPC__in IAppHostConfigLocation * This,
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrLocationPath);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAppHostConfigLocation * This,
            /* [retval][out] */ __RPC__out DWORD *pcCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAppHostConfigLocation * This,
            /* [in] */ VARIANT cIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppSection);
        
        HRESULT ( STDMETHODCALLTYPE *AddConfigSection )( 
            __RPC__in IAppHostConfigLocation * This,
            /* [in] */ __RPC__in BSTR bstrSectionName,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppAdminElement);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteConfigSection )( 
            __RPC__in IAppHostConfigLocation * This,
            /* [in] */ VARIANT cIndex);
        
        END_INTERFACE
    } IAppHostConfigLocationVtbl;

    interface IAppHostConfigLocation
    {
        CONST_VTBL struct IAppHostConfigLocationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostConfigLocation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostConfigLocation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostConfigLocation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostConfigLocation_get_Path(This,pbstrLocationPath)	\
    ( (This)->lpVtbl -> get_Path(This,pbstrLocationPath) ) 

#define IAppHostConfigLocation_get_Count(This,pcCount)	\
    ( (This)->lpVtbl -> get_Count(This,pcCount) ) 

#define IAppHostConfigLocation_get_Item(This,cIndex,ppSection)	\
    ( (This)->lpVtbl -> get_Item(This,cIndex,ppSection) ) 

#define IAppHostConfigLocation_AddConfigSection(This,bstrSectionName,ppAdminElement)	\
    ( (This)->lpVtbl -> AddConfigSection(This,bstrSectionName,ppAdminElement) ) 

#define IAppHostConfigLocation_DeleteConfigSection(This,cIndex)	\
    ( (This)->lpVtbl -> DeleteConfigSection(This,cIndex) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostConfigLocation_INTERFACE_DEFINED__ */


#ifndef __IAppHostSectionDefinition_INTERFACE_DEFINED__
#define __IAppHostSectionDefinition_INTERFACE_DEFINED__

/* interface IAppHostSectionDefinition */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostSectionDefinition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c5c04795-321c-4014-8fd6-d44658799393")
    IAppHostSectionDefinition : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ __RPC__in BSTR bstrType) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OverrideModeDefault( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrOverrideModeDefault) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OverrideModeDefault( 
            /* [in] */ __RPC__in BSTR bstrOverrideModeDefault) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AllowDefinition( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrAllowDefinition) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AllowDefinition( 
            /* [in] */ __RPC__in BSTR bstrAllowDefinition) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AllowLocation( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrAllowLocation) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AllowLocation( 
            /* [in] */ __RPC__in BSTR bstrAllowLocation) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RequirePermission( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfRequirePermission) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RequirePermission( 
            /* [in] */ VARIANT_BOOL pfRequirePermission) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostSectionDefinitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostSectionDefinition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostSectionDefinition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostSectionDefinition * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAppHostSectionDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            __RPC__in IAppHostSectionDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            __RPC__in IAppHostSectionDefinition * This,
            /* [in] */ __RPC__in BSTR bstrType);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OverrideModeDefault )( 
            __RPC__in IAppHostSectionDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrOverrideModeDefault);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OverrideModeDefault )( 
            __RPC__in IAppHostSectionDefinition * This,
            /* [in] */ __RPC__in BSTR bstrOverrideModeDefault);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowDefinition )( 
            __RPC__in IAppHostSectionDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrAllowDefinition);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowDefinition )( 
            __RPC__in IAppHostSectionDefinition * This,
            /* [in] */ __RPC__in BSTR bstrAllowDefinition);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowLocation )( 
            __RPC__in IAppHostSectionDefinition * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrAllowLocation);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowLocation )( 
            __RPC__in IAppHostSectionDefinition * This,
            /* [in] */ __RPC__in BSTR bstrAllowLocation);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RequirePermission )( 
            __RPC__in IAppHostSectionDefinition * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfRequirePermission);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RequirePermission )( 
            __RPC__in IAppHostSectionDefinition * This,
            /* [in] */ VARIANT_BOOL pfRequirePermission);
        
        END_INTERFACE
    } IAppHostSectionDefinitionVtbl;

    interface IAppHostSectionDefinition
    {
        CONST_VTBL struct IAppHostSectionDefinitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostSectionDefinition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostSectionDefinition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostSectionDefinition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostSectionDefinition_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAppHostSectionDefinition_get_Type(This,pbstrType)	\
    ( (This)->lpVtbl -> get_Type(This,pbstrType) ) 

#define IAppHostSectionDefinition_put_Type(This,bstrType)	\
    ( (This)->lpVtbl -> put_Type(This,bstrType) ) 

#define IAppHostSectionDefinition_get_OverrideModeDefault(This,pbstrOverrideModeDefault)	\
    ( (This)->lpVtbl -> get_OverrideModeDefault(This,pbstrOverrideModeDefault) ) 

#define IAppHostSectionDefinition_put_OverrideModeDefault(This,bstrOverrideModeDefault)	\
    ( (This)->lpVtbl -> put_OverrideModeDefault(This,bstrOverrideModeDefault) ) 

#define IAppHostSectionDefinition_get_AllowDefinition(This,pbstrAllowDefinition)	\
    ( (This)->lpVtbl -> get_AllowDefinition(This,pbstrAllowDefinition) ) 

#define IAppHostSectionDefinition_put_AllowDefinition(This,bstrAllowDefinition)	\
    ( (This)->lpVtbl -> put_AllowDefinition(This,bstrAllowDefinition) ) 

#define IAppHostSectionDefinition_get_AllowLocation(This,pbstrAllowLocation)	\
    ( (This)->lpVtbl -> get_AllowLocation(This,pbstrAllowLocation) ) 

#define IAppHostSectionDefinition_put_AllowLocation(This,bstrAllowLocation)	\
    ( (This)->lpVtbl -> put_AllowLocation(This,bstrAllowLocation) ) 

#define IAppHostSectionDefinition_get_RequirePermission(This,pfRequirePermission)	\
    ( (This)->lpVtbl -> get_RequirePermission(This,pfRequirePermission) ) 

#define IAppHostSectionDefinition_put_RequirePermission(This,pfRequirePermission)	\
    ( (This)->lpVtbl -> put_RequirePermission(This,pfRequirePermission) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostSectionDefinition_INTERFACE_DEFINED__ */


#ifndef __IAppHostSectionDefinitionCollection_INTERFACE_DEFINED__
#define __IAppHostSectionDefinitionCollection_INTERFACE_DEFINED__

/* interface IAppHostSectionDefinitionCollection */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostSectionDefinitionCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b7d381ee-8860-47a1-8af4-1f33b2b1f325")
    IAppHostSectionDefinitionCollection : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out ULONG *pcCount) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT varIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostSectionDefinition **ppConfigSection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddSection( 
            /* [string][in] */ __RPC__in_string BSTR bstrSectionName,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostSectionDefinition **ppConfigSection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteSection( 
            /* [in] */ VARIANT varIndex) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostSectionDefinitionCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostSectionDefinitionCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostSectionDefinitionCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostSectionDefinitionCollection * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAppHostSectionDefinitionCollection * This,
            /* [retval][out] */ __RPC__out ULONG *pcCount);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAppHostSectionDefinitionCollection * This,
            /* [in] */ VARIANT varIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostSectionDefinition **ppConfigSection);
        
        HRESULT ( STDMETHODCALLTYPE *AddSection )( 
            __RPC__in IAppHostSectionDefinitionCollection * This,
            /* [string][in] */ __RPC__in_string BSTR bstrSectionName,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostSectionDefinition **ppConfigSection);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteSection )( 
            __RPC__in IAppHostSectionDefinitionCollection * This,
            /* [in] */ VARIANT varIndex);
        
        END_INTERFACE
    } IAppHostSectionDefinitionCollectionVtbl;

    interface IAppHostSectionDefinitionCollection
    {
        CONST_VTBL struct IAppHostSectionDefinitionCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostSectionDefinitionCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostSectionDefinitionCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostSectionDefinitionCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostSectionDefinitionCollection_get_Count(This,pcCount)	\
    ( (This)->lpVtbl -> get_Count(This,pcCount) ) 

#define IAppHostSectionDefinitionCollection_get_Item(This,varIndex,ppConfigSection)	\
    ( (This)->lpVtbl -> get_Item(This,varIndex,ppConfigSection) ) 

#define IAppHostSectionDefinitionCollection_AddSection(This,bstrSectionName,ppConfigSection)	\
    ( (This)->lpVtbl -> AddSection(This,bstrSectionName,ppConfigSection) ) 

#define IAppHostSectionDefinitionCollection_DeleteSection(This,varIndex)	\
    ( (This)->lpVtbl -> DeleteSection(This,varIndex) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostSectionDefinitionCollection_INTERFACE_DEFINED__ */


#ifndef __IAppHostSectionGroup_INTERFACE_DEFINED__
#define __IAppHostSectionGroup_INTERFACE_DEFINED__

/* interface IAppHostSectionGroup */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostSectionGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0dd8a158-ebe6-4008-a1d9-b7ecc8f1104b")
    IAppHostSectionGroup : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out ULONG *pcSectionGroup) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT varIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostSectionGroup **ppSectionGroup) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Sections( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostSectionDefinitionCollection **ppSections) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddSectionGroup( 
            /* [string][in] */ __RPC__in_string BSTR bstrSectionGroupName,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostSectionGroup **ppSectionGroup) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteSectionGroup( 
            /* [in] */ VARIANT varIndex) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrType) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Type( 
            /* [in] */ __RPC__in BSTR bstrType) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostSectionGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostSectionGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostSectionGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostSectionGroup * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IAppHostSectionGroup * This,
            /* [retval][out] */ __RPC__out ULONG *pcSectionGroup);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IAppHostSectionGroup * This,
            /* [in] */ VARIANT varIndex,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostSectionGroup **ppSectionGroup);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Sections )( 
            __RPC__in IAppHostSectionGroup * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostSectionDefinitionCollection **ppSections);
        
        HRESULT ( STDMETHODCALLTYPE *AddSectionGroup )( 
            __RPC__in IAppHostSectionGroup * This,
            /* [string][in] */ __RPC__in_string BSTR bstrSectionGroupName,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostSectionGroup **ppSectionGroup);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteSectionGroup )( 
            __RPC__in IAppHostSectionGroup * This,
            /* [in] */ VARIANT varIndex);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAppHostSectionGroup * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            __RPC__in IAppHostSectionGroup * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrType);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            __RPC__in IAppHostSectionGroup * This,
            /* [in] */ __RPC__in BSTR bstrType);
        
        END_INTERFACE
    } IAppHostSectionGroupVtbl;

    interface IAppHostSectionGroup
    {
        CONST_VTBL struct IAppHostSectionGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostSectionGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostSectionGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostSectionGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostSectionGroup_get_Count(This,pcSectionGroup)	\
    ( (This)->lpVtbl -> get_Count(This,pcSectionGroup) ) 

#define IAppHostSectionGroup_get_Item(This,varIndex,ppSectionGroup)	\
    ( (This)->lpVtbl -> get_Item(This,varIndex,ppSectionGroup) ) 

#define IAppHostSectionGroup_get_Sections(This,ppSections)	\
    ( (This)->lpVtbl -> get_Sections(This,ppSections) ) 

#define IAppHostSectionGroup_AddSectionGroup(This,bstrSectionGroupName,ppSectionGroup)	\
    ( (This)->lpVtbl -> AddSectionGroup(This,bstrSectionGroupName,ppSectionGroup) ) 

#define IAppHostSectionGroup_DeleteSectionGroup(This,varIndex)	\
    ( (This)->lpVtbl -> DeleteSectionGroup(This,varIndex) ) 

#define IAppHostSectionGroup_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IAppHostSectionGroup_get_Type(This,pbstrType)	\
    ( (This)->lpVtbl -> get_Type(This,pbstrType) ) 

#define IAppHostSectionGroup_put_Type(This,bstrType)	\
    ( (This)->lpVtbl -> put_Type(This,bstrType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostSectionGroup_INTERFACE_DEFINED__ */


#ifndef __IAppHostConfigFile_INTERFACE_DEFINED__
#define __IAppHostConfigFile_INTERFACE_DEFINED__

/* interface IAppHostConfigFile */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostConfigFile;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ada4e6fb-e025-401e-a5d0-c3134a281f07")
    IAppHostConfigFile : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ConfigPath( 
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrConfigPath) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FilePath( 
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrFilePath) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Locations( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConfigLocationCollection **ppLocations) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAdminSection( 
            /* [string][in] */ __RPC__in_string BSTR bstrSectionName,
            /* [string][in] */ __RPC__in_string BSTR bstrPath,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppAdminSection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMetadata( 
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMetadata( 
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [in] */ VARIANT value) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ClearInvalidSections( void) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RootSectionGroup( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostSectionGroup **ppSectionGroups) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostConfigFileVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostConfigFile * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostConfigFile * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostConfigFile * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigPath )( 
            __RPC__in IAppHostConfigFile * This,
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrConfigPath);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FilePath )( 
            __RPC__in IAppHostConfigFile * This,
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrFilePath);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Locations )( 
            __RPC__in IAppHostConfigFile * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConfigLocationCollection **ppLocations);
        
        HRESULT ( STDMETHODCALLTYPE *GetAdminSection )( 
            __RPC__in IAppHostConfigFile * This,
            /* [string][in] */ __RPC__in_string BSTR bstrSectionName,
            /* [string][in] */ __RPC__in_string BSTR bstrPath,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppAdminSection);
        
        HRESULT ( STDMETHODCALLTYPE *GetMetadata )( 
            __RPC__in IAppHostConfigFile * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetMetadata )( 
            __RPC__in IAppHostConfigFile * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [in] */ VARIANT value);
        
        HRESULT ( STDMETHODCALLTYPE *ClearInvalidSections )( 
            __RPC__in IAppHostConfigFile * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RootSectionGroup )( 
            __RPC__in IAppHostConfigFile * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostSectionGroup **ppSectionGroups);
        
        END_INTERFACE
    } IAppHostConfigFileVtbl;

    interface IAppHostConfigFile
    {
        CONST_VTBL struct IAppHostConfigFileVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostConfigFile_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostConfigFile_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostConfigFile_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostConfigFile_get_ConfigPath(This,pbstrConfigPath)	\
    ( (This)->lpVtbl -> get_ConfigPath(This,pbstrConfigPath) ) 

#define IAppHostConfigFile_get_FilePath(This,pbstrFilePath)	\
    ( (This)->lpVtbl -> get_FilePath(This,pbstrFilePath) ) 

#define IAppHostConfigFile_get_Locations(This,ppLocations)	\
    ( (This)->lpVtbl -> get_Locations(This,ppLocations) ) 

#define IAppHostConfigFile_GetAdminSection(This,bstrSectionName,bstrPath,ppAdminSection)	\
    ( (This)->lpVtbl -> GetAdminSection(This,bstrSectionName,bstrPath,ppAdminSection) ) 

#define IAppHostConfigFile_GetMetadata(This,bstrMetadataType,pValue)	\
    ( (This)->lpVtbl -> GetMetadata(This,bstrMetadataType,pValue) ) 

#define IAppHostConfigFile_SetMetadata(This,bstrMetadataType,value)	\
    ( (This)->lpVtbl -> SetMetadata(This,bstrMetadataType,value) ) 

#define IAppHostConfigFile_ClearInvalidSections(This)	\
    ( (This)->lpVtbl -> ClearInvalidSections(This) ) 

#define IAppHostConfigFile_get_RootSectionGroup(This,ppSectionGroups)	\
    ( (This)->lpVtbl -> get_RootSectionGroup(This,ppSectionGroups) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostConfigFile_INTERFACE_DEFINED__ */


#ifndef __IAppHostPathMapper_INTERFACE_DEFINED__
#define __IAppHostPathMapper_INTERFACE_DEFINED__

/* interface IAppHostPathMapper */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostPathMapper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e7927575-5cc3-403b-822e-328a6b904bee")
    IAppHostPathMapper : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MapPath( 
            /* [string][in] */ __RPC__in_string BSTR bstrConfigPath,
            /* [string][in] */ __RPC__in_string BSTR bstrMappedPhysicalPath,
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrNewPhysicalPath) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostPathMapperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostPathMapper * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostPathMapper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostPathMapper * This);
        
        HRESULT ( STDMETHODCALLTYPE *MapPath )( 
            __RPC__in IAppHostPathMapper * This,
            /* [string][in] */ __RPC__in_string BSTR bstrConfigPath,
            /* [string][in] */ __RPC__in_string BSTR bstrMappedPhysicalPath,
            /* [retval][string][out] */ __RPC__deref_out_opt_string BSTR *pbstrNewPhysicalPath);
        
        END_INTERFACE
    } IAppHostPathMapperVtbl;

    interface IAppHostPathMapper
    {
        CONST_VTBL struct IAppHostPathMapperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostPathMapper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostPathMapper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostPathMapper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostPathMapper_MapPath(This,bstrConfigPath,bstrMappedPhysicalPath,pbstrNewPhysicalPath)	\
    ( (This)->lpVtbl -> MapPath(This,bstrConfigPath,bstrMappedPhysicalPath,pbstrNewPhysicalPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostPathMapper_INTERFACE_DEFINED__ */


#ifndef __IAppHostPathMapper2_INTERFACE_DEFINED__
#define __IAppHostPathMapper2_INTERFACE_DEFINED__

/* interface IAppHostPathMapper2 */
/* [helpstring][local][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostPathMapper2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0f80e901-8f4c-449a-bf90-13d5d082f187")
    IAppHostPathMapper2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MapPath( 
            /* [string][in] */ BSTR bstrConfigPath,
            /* [string][in] */ BSTR bstrMappedPhysicalPath,
            /* [string][out] */ BSTR *pbstrNewPhysicalPath,
            /* [out] */ HANDLE *phImpersonationToken) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostPathMapper2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAppHostPathMapper2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAppHostPathMapper2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAppHostPathMapper2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *MapPath )( 
            IAppHostPathMapper2 * This,
            /* [string][in] */ BSTR bstrConfigPath,
            /* [string][in] */ BSTR bstrMappedPhysicalPath,
            /* [string][out] */ BSTR *pbstrNewPhysicalPath,
            /* [out] */ HANDLE *phImpersonationToken);
        
        END_INTERFACE
    } IAppHostPathMapper2Vtbl;

    interface IAppHostPathMapper2
    {
        CONST_VTBL struct IAppHostPathMapper2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostPathMapper2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostPathMapper2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostPathMapper2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostPathMapper2_MapPath(This,bstrConfigPath,bstrMappedPhysicalPath,pbstrNewPhysicalPath,phImpersonationToken)	\
    ( (This)->lpVtbl -> MapPath(This,bstrConfigPath,bstrMappedPhysicalPath,pbstrNewPhysicalPath,phImpersonationToken) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostPathMapper2_INTERFACE_DEFINED__ */


#ifndef __IAppHostChangeHandler_INTERFACE_DEFINED__
#define __IAppHostChangeHandler_INTERFACE_DEFINED__

/* interface IAppHostChangeHandler */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostChangeHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("09829352-87c2-418d-8d79-4133969a489d")
    IAppHostChangeHandler : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnSectionChanges( 
            /* [string][in] */ __RPC__in_string BSTR bstrSectionName,
            /* [string][in] */ __RPC__in_string BSTR bstrConfigPath) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostChangeHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostChangeHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostChangeHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostChangeHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnSectionChanges )( 
            __RPC__in IAppHostChangeHandler * This,
            /* [string][in] */ __RPC__in_string BSTR bstrSectionName,
            /* [string][in] */ __RPC__in_string BSTR bstrConfigPath);
        
        END_INTERFACE
    } IAppHostChangeHandlerVtbl;

    interface IAppHostChangeHandler
    {
        CONST_VTBL struct IAppHostChangeHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostChangeHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostChangeHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostChangeHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostChangeHandler_OnSectionChanges(This,bstrSectionName,bstrConfigPath)	\
    ( (This)->lpVtbl -> OnSectionChanges(This,bstrSectionName,bstrConfigPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostChangeHandler_INTERFACE_DEFINED__ */


#ifndef __IAppHostAdminManager_INTERFACE_DEFINED__
#define __IAppHostAdminManager_INTERFACE_DEFINED__

/* interface IAppHostAdminManager */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostAdminManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9be77978-73ed-4a9a-87fd-13f09fec1b13")
    IAppHostAdminManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAdminSection( 
            /* [string][in] */ __RPC__in_string BSTR bstrSectionName,
            /* [string][in] */ __RPC__in_string BSTR bstrPath,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppAdminSection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMetadata( 
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMetadata( 
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [in] */ VARIANT value) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ConfigManager( 
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConfigManager **ppConfigManager) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostAdminManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostAdminManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostAdminManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostAdminManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetAdminSection )( 
            __RPC__in IAppHostAdminManager * This,
            /* [string][in] */ __RPC__in_string BSTR bstrSectionName,
            /* [string][in] */ __RPC__in_string BSTR bstrPath,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppAdminSection);
        
        HRESULT ( STDMETHODCALLTYPE *GetMetadata )( 
            __RPC__in IAppHostAdminManager * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetMetadata )( 
            __RPC__in IAppHostAdminManager * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [in] */ VARIANT value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigManager )( 
            __RPC__in IAppHostAdminManager * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConfigManager **ppConfigManager);
        
        END_INTERFACE
    } IAppHostAdminManagerVtbl;

    interface IAppHostAdminManager
    {
        CONST_VTBL struct IAppHostAdminManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostAdminManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostAdminManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostAdminManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostAdminManager_GetAdminSection(This,bstrSectionName,bstrPath,ppAdminSection)	\
    ( (This)->lpVtbl -> GetAdminSection(This,bstrSectionName,bstrPath,ppAdminSection) ) 

#define IAppHostAdminManager_GetMetadata(This,bstrMetadataType,pValue)	\
    ( (This)->lpVtbl -> GetMetadata(This,bstrMetadataType,pValue) ) 

#define IAppHostAdminManager_SetMetadata(This,bstrMetadataType,value)	\
    ( (This)->lpVtbl -> SetMetadata(This,bstrMetadataType,value) ) 

#define IAppHostAdminManager_get_ConfigManager(This,ppConfigManager)	\
    ( (This)->lpVtbl -> get_ConfigManager(This,ppConfigManager) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostAdminManager_INTERFACE_DEFINED__ */


#ifndef __IAppHostWritableAdminManager_INTERFACE_DEFINED__
#define __IAppHostWritableAdminManager_INTERFACE_DEFINED__

/* interface IAppHostWritableAdminManager */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostWritableAdminManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fa7660f6-7b3f-4237-a8bf-ed0ad0dcbbd9")
    IAppHostWritableAdminManager : public IAppHostAdminManager
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CommitChanges( void) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CommitPath( 
            /* [string][retval][out] */ __RPC__deref_out_opt_string BSTR *pbstrCommitPath) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CommitPath( 
            /* [string][in] */ __RPC__in_string BSTR bstrCommitPath) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostWritableAdminManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostWritableAdminManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostWritableAdminManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostWritableAdminManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetAdminSection )( 
            __RPC__in IAppHostWritableAdminManager * This,
            /* [string][in] */ __RPC__in_string BSTR bstrSectionName,
            /* [string][in] */ __RPC__in_string BSTR bstrPath,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostElement **ppAdminSection);
        
        HRESULT ( STDMETHODCALLTYPE *GetMetadata )( 
            __RPC__in IAppHostWritableAdminManager * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [retval][out] */ __RPC__out VARIANT *pValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetMetadata )( 
            __RPC__in IAppHostWritableAdminManager * This,
            /* [string][in] */ __RPC__in_string BSTR bstrMetadataType,
            /* [in] */ VARIANT value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigManager )( 
            __RPC__in IAppHostWritableAdminManager * This,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConfigManager **ppConfigManager);
        
        HRESULT ( STDMETHODCALLTYPE *CommitChanges )( 
            __RPC__in IAppHostWritableAdminManager * This);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CommitPath )( 
            __RPC__in IAppHostWritableAdminManager * This,
            /* [string][retval][out] */ __RPC__deref_out_opt_string BSTR *pbstrCommitPath);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CommitPath )( 
            __RPC__in IAppHostWritableAdminManager * This,
            /* [string][in] */ __RPC__in_string BSTR bstrCommitPath);
        
        END_INTERFACE
    } IAppHostWritableAdminManagerVtbl;

    interface IAppHostWritableAdminManager
    {
        CONST_VTBL struct IAppHostWritableAdminManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostWritableAdminManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostWritableAdminManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostWritableAdminManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostWritableAdminManager_GetAdminSection(This,bstrSectionName,bstrPath,ppAdminSection)	\
    ( (This)->lpVtbl -> GetAdminSection(This,bstrSectionName,bstrPath,ppAdminSection) ) 

#define IAppHostWritableAdminManager_GetMetadata(This,bstrMetadataType,pValue)	\
    ( (This)->lpVtbl -> GetMetadata(This,bstrMetadataType,pValue) ) 

#define IAppHostWritableAdminManager_SetMetadata(This,bstrMetadataType,value)	\
    ( (This)->lpVtbl -> SetMetadata(This,bstrMetadataType,value) ) 

#define IAppHostWritableAdminManager_get_ConfigManager(This,ppConfigManager)	\
    ( (This)->lpVtbl -> get_ConfigManager(This,ppConfigManager) ) 


#define IAppHostWritableAdminManager_CommitChanges(This)	\
    ( (This)->lpVtbl -> CommitChanges(This) ) 

#define IAppHostWritableAdminManager_get_CommitPath(This,pbstrCommitPath)	\
    ( (This)->lpVtbl -> get_CommitPath(This,pbstrCommitPath) ) 

#define IAppHostWritableAdminManager_put_CommitPath(This,bstrCommitPath)	\
    ( (This)->lpVtbl -> put_CommitPath(This,bstrCommitPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostWritableAdminManager_INTERFACE_DEFINED__ */


#ifndef __IAppHostConfigManager_INTERFACE_DEFINED__
#define __IAppHostConfigManager_INTERFACE_DEFINED__

/* interface IAppHostConfigManager */
/* [helpstring][unique][uuid][object] */ 


EXTERN_C const IID IID_IAppHostConfigManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8f6d760f-f0cb-4d69-b5f6-848b33e9bdc6")
    IAppHostConfigManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetConfigFile( 
            /* [string][in] */ __RPC__in_string BSTR bstrConfigPath,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConfigFile **ppConfigFile) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUniqueConfigPath( 
            /* [string][in] */ __RPC__in_string BSTR bstrConfigPath,
            /* [string][retval][out] */ __RPC__deref_out_opt_string BSTR *pbstrUniquePath) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAppHostConfigManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAppHostConfigManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAppHostConfigManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAppHostConfigManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetConfigFile )( 
            __RPC__in IAppHostConfigManager * This,
            /* [string][in] */ __RPC__in_string BSTR bstrConfigPath,
            /* [retval][out] */ __RPC__deref_out_opt IAppHostConfigFile **ppConfigFile);
        
        HRESULT ( STDMETHODCALLTYPE *GetUniqueConfigPath )( 
            __RPC__in IAppHostConfigManager * This,
            /* [string][in] */ __RPC__in_string BSTR bstrConfigPath,
            /* [string][retval][out] */ __RPC__deref_out_opt_string BSTR *pbstrUniquePath);
        
        END_INTERFACE
    } IAppHostConfigManagerVtbl;

    interface IAppHostConfigManager
    {
        CONST_VTBL struct IAppHostConfigManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppHostConfigManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppHostConfigManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppHostConfigManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppHostConfigManager_GetConfigFile(This,bstrConfigPath,ppConfigFile)	\
    ( (This)->lpVtbl -> GetConfigFile(This,bstrConfigPath,ppConfigFile) ) 

#define IAppHostConfigManager_GetUniqueConfigPath(This,bstrConfigPath,pbstrUniquePath)	\
    ( (This)->lpVtbl -> GetUniqueConfigPath(This,bstrConfigPath,pbstrUniquePath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppHostConfigManager_INTERFACE_DEFINED__ */



#ifndef __AppHostAdminLibrary_LIBRARY_DEFINED__
#define __AppHostAdminLibrary_LIBRARY_DEFINED__

/* library AppHostAdminLibrary */
/* [helpstring][version][uuid] */ 











EXTERN_C const IID LIBID_AppHostAdminLibrary;

EXTERN_C const CLSID CLSID_AppHostAdminManager;

#ifdef __cplusplus

class DECLSPEC_UUID("228fb8f7-fb53-4fd5-8c7b-ff59de606c5b")
AppHostAdminManager;
#endif

EXTERN_C const CLSID CLSID_AppHostWritableAdminManager;

#ifdef __cplusplus

class DECLSPEC_UUID("2b72133b-3f5b-4602-8952-803546ce3344")
AppHostWritableAdminManager;
#endif
#endif /* __AppHostAdminLibrary_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  LPSAFEARRAY_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in LPSAFEARRAY * ); 
unsigned char * __RPC_USER  LPSAFEARRAY_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in LPSAFEARRAY * ); 
unsigned char * __RPC_USER  LPSAFEARRAY_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out LPSAFEARRAY * ); 
void                      __RPC_USER  LPSAFEARRAY_UserFree(     __RPC__in unsigned long *, __RPC__in LPSAFEARRAY * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  LPSAFEARRAY_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in LPSAFEARRAY * ); 
unsigned char * __RPC_USER  LPSAFEARRAY_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in LPSAFEARRAY * ); 
unsigned char * __RPC_USER  LPSAFEARRAY_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out LPSAFEARRAY * ); 
void                      __RPC_USER  LPSAFEARRAY_UserFree64(     __RPC__in unsigned long *, __RPC__in LPSAFEARRAY * ); 

unsigned long             __RPC_USER  VARIANT_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree64(     __RPC__in unsigned long *, __RPC__in VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AgtSvr_i.c ===
/**************************************************************************
*                                                                         *
* AgtSvr_i.c - Interface IID and CLSID definitions for Microsoft Agent    *
*              Server.                                                    *
*                                                                         *
* Copyright (c) 1996-1999, Microsoft Corp. All rights reserved.           *
*                                                                         *
**************************************************************************/

/* this file contains the actual definitions of */
/* the IIDs and CLSIDs */

/* link this file in with the server and any clients */


/* File created by MIDL compiler version 5.01.0164 */
/* at Tue Sep 15 16:56:07 1998
 */
/* Compiler settings for AgentServer.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
*/
//@@MIDL_FILE_HEADING(  )
#ifdef __cplusplus
extern "C"{
#endif 


#ifndef __IID_DEFINED__
#define __IID_DEFINED__

typedef struct _IID
{
    unsigned long x;
    unsigned short s1;
    unsigned short s2;
    unsigned char  c[8];
} IID;

#endif // __IID_DEFINED__

#ifndef CLSID_DEFINED
#define CLSID_DEFINED
typedef IID CLSID;
#endif // CLSID_DEFINED

const IID IID_IAgentUserInput = {0xA7B93C80,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCommand = {0xA7B93C83,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCommandEx = {0xB0913412,0x3B44,0x11d1,{0xAC,0xBA,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCommands = {0xA7B93C85,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCommandsEx = {0x6BA90C00,0x3910,0x11d1,{0xAC,0xB3,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCommandWindow = {0x6D0ECB23,0x9968,0x11D0,{0xAC,0x6E,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentSpeechInputProperties = {0xA7B93C87,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentAudioOutputProperties = {0xA7B93C89,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentAudioOutputPropertiesEx = {0xA7B93CA0,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentPropertySheet = {0xA7B93C8B,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentBalloon = {0xA7B93C8D,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentBalloonEx = {0xD7A6D440,0x8872,0x11d1,{0x9E,0xC6,0x00,0xC0,0x4F,0xD7,0x08,0x1F}};


const IID IID_IAgentCharacter = {0xA7B93C8F,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCharacterEx = {0x98BBE491,0x2EED,0x11d1,{0xAC,0xAC,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgent = {0xA7B93C91,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentEx = {0x48D12BA0,0x5B77,0x11d1,{0x9E,0xC1,0x00,0xC0,0x4F,0xD7,0x08,0x1F}};


const IID IID_IAgentNotifySink = {0x00D18159,0x8466,0x11D0,{0xAC,0x63,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentNotifySinkEx = {0x08C75162,0x3C9C,0x11d1,{0x91,0xFE,0x00,0xC0,0x4F,0xD7,0x01,0xA5}};


const IID IID_IAgentPrivateNotifySink = {0xB741B760,0x8EA6,0x11d0,{0xAC,0x6A,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID IID_IAgentCustomMarshalMaker = {0x408D7542,0xC8FC,0x11d1,{0xAA,0x83,0x00,0xC0,0x4F,0xA3,0x4D,0x72}};


const IID IID_IAgentClientStatus = {0xC5649F70,0x7AED,0x11d1,{0xB9,0xA8,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const IID LIBID_AgentServerObjects = {0xA7B93C73,0x7B81,0x11D0,{0xAC,0x5F,0x00,0xC0,0x4F,0xD9,0x75,0x75}};


const CLSID CLSID_AgentServer = {0xD45FD2FC,0x5C6E,0x11D1,{0x9E,0xC1,0x00,0xC0,0x4F,0xD7,0x08,0x1F}};


#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AgtSvr.h ===
/**************************************************************************
*                                                                         *
* AgtSvr.h - Microsoft Agent Server                                       *
*                                                                         *
* Copyright (c) 1996-1999, Microsoft Corp. All rights reserved.           *
*                                                                         *
**************************************************************************/

#if _MSC_VER < 1200

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 3.01.75 */
/* at Mon Aug 31 17:00:38 1998
 */
/* Compiler settings for AgentServer.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: none
*/
//@@MIDL_FILE_HEADING(  )
#include "rpc.h"
#include "rpcndr.h"
#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __AgtSvrV5_h__
#define __AgtSvrV5_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __IAgentUserInput_FWD_DEFINED__
#define __IAgentUserInput_FWD_DEFINED__
typedef interface IAgentUserInput IAgentUserInput;
#endif 	/* __IAgentUserInput_FWD_DEFINED__ */


#ifndef __IAgentCommand_FWD_DEFINED__
#define __IAgentCommand_FWD_DEFINED__
typedef interface IAgentCommand IAgentCommand;
#endif 	/* __IAgentCommand_FWD_DEFINED__ */


#ifndef __IAgentCommandEx_FWD_DEFINED__
#define __IAgentCommandEx_FWD_DEFINED__
typedef interface IAgentCommandEx IAgentCommandEx;
#endif 	/* __IAgentCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCommands_FWD_DEFINED__
#define __IAgentCommands_FWD_DEFINED__
typedef interface IAgentCommands IAgentCommands;
#endif 	/* __IAgentCommands_FWD_DEFINED__ */


#ifndef __IAgentCommandsEx_FWD_DEFINED__
#define __IAgentCommandsEx_FWD_DEFINED__
typedef interface IAgentCommandsEx IAgentCommandsEx;
#endif 	/* __IAgentCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentCommandWindow_FWD_DEFINED__
#define __IAgentCommandWindow_FWD_DEFINED__
typedef interface IAgentCommandWindow IAgentCommandWindow;
#endif 	/* __IAgentCommandWindow_FWD_DEFINED__ */


#ifndef __IAgentSpeechInputProperties_FWD_DEFINED__
#define __IAgentSpeechInputProperties_FWD_DEFINED__
typedef interface IAgentSpeechInputProperties IAgentSpeechInputProperties;
#endif 	/* __IAgentSpeechInputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputProperties_FWD_DEFINED__
#define __IAgentAudioOutputProperties_FWD_DEFINED__
typedef interface IAgentAudioOutputProperties IAgentAudioOutputProperties;
#endif 	/* __IAgentAudioOutputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
#define __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
typedef interface IAgentAudioOutputPropertiesEx IAgentAudioOutputPropertiesEx;
#endif 	/* __IAgentAudioOutputPropertiesEx_FWD_DEFINED__ */


#ifndef __IAgentPropertySheet_FWD_DEFINED__
#define __IAgentPropertySheet_FWD_DEFINED__
typedef interface IAgentPropertySheet IAgentPropertySheet;
#endif 	/* __IAgentPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentBalloon_FWD_DEFINED__
#define __IAgentBalloon_FWD_DEFINED__
typedef interface IAgentBalloon IAgentBalloon;
#endif 	/* __IAgentBalloon_FWD_DEFINED__ */


#ifndef __IAgentBalloonEx_FWD_DEFINED__
#define __IAgentBalloonEx_FWD_DEFINED__
typedef interface IAgentBalloonEx IAgentBalloonEx;
#endif 	/* __IAgentBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCharacter_FWD_DEFINED__
#define __IAgentCharacter_FWD_DEFINED__
typedef interface IAgentCharacter IAgentCharacter;
#endif 	/* __IAgentCharacter_FWD_DEFINED__ */


#ifndef __IAgentCharacterEx_FWD_DEFINED__
#define __IAgentCharacterEx_FWD_DEFINED__
typedef interface IAgentCharacterEx IAgentCharacterEx;
#endif 	/* __IAgentCharacterEx_FWD_DEFINED__ */


#ifndef __IAgent_FWD_DEFINED__
#define __IAgent_FWD_DEFINED__
typedef interface IAgent IAgent;
#endif 	/* __IAgent_FWD_DEFINED__ */


#ifndef __IAgentEx_FWD_DEFINED__
#define __IAgentEx_FWD_DEFINED__
typedef interface IAgentEx IAgentEx;
#endif 	/* __IAgentEx_FWD_DEFINED__ */


#ifndef __IAgentNotifySink_FWD_DEFINED__
#define __IAgentNotifySink_FWD_DEFINED__
typedef interface IAgentNotifySink IAgentNotifySink;
#endif 	/* __IAgentNotifySink_FWD_DEFINED__ */


#ifndef __IAgentNotifySinkEx_FWD_DEFINED__
#define __IAgentNotifySinkEx_FWD_DEFINED__
typedef interface IAgentNotifySinkEx IAgentNotifySinkEx;
#endif 	/* __IAgentNotifySinkEx_FWD_DEFINED__ */


#ifndef __IAgentPrivateNotifySink_FWD_DEFINED__
#define __IAgentPrivateNotifySink_FWD_DEFINED__
typedef interface IAgentPrivateNotifySink IAgentPrivateNotifySink;
#endif 	/* __IAgentPrivateNotifySink_FWD_DEFINED__ */


#ifndef __IAgentCustomMarshalMaker_FWD_DEFINED__
#define __IAgentCustomMarshalMaker_FWD_DEFINED__
typedef interface IAgentCustomMarshalMaker IAgentCustomMarshalMaker;
#endif 	/* __IAgentCustomMarshalMaker_FWD_DEFINED__ */


#ifndef __IAgentClientStatus_FWD_DEFINED__
#define __IAgentClientStatus_FWD_DEFINED__
typedef interface IAgentClientStatus IAgentClientStatus;
#endif 	/* __IAgentClientStatus_FWD_DEFINED__ */


#ifndef __AgentServer_FWD_DEFINED__
#define __AgentServer_FWD_DEFINED__

#ifdef __cplusplus
typedef class AgentServer AgentServer;
#else
typedef struct AgentServer AgentServer;
#endif /* __cplusplus */

#endif 	/* __AgentServer_FWD_DEFINED__ */


#ifndef __IAgentUserInput_FWD_DEFINED__
#define __IAgentUserInput_FWD_DEFINED__
typedef interface IAgentUserInput IAgentUserInput;
#endif 	/* __IAgentUserInput_FWD_DEFINED__ */


#ifndef __IAgentCommand_FWD_DEFINED__
#define __IAgentCommand_FWD_DEFINED__
typedef interface IAgentCommand IAgentCommand;
#endif 	/* __IAgentCommand_FWD_DEFINED__ */


#ifndef __IAgentCommandEx_FWD_DEFINED__
#define __IAgentCommandEx_FWD_DEFINED__
typedef interface IAgentCommandEx IAgentCommandEx;
#endif 	/* __IAgentCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCommands_FWD_DEFINED__
#define __IAgentCommands_FWD_DEFINED__
typedef interface IAgentCommands IAgentCommands;
#endif 	/* __IAgentCommands_FWD_DEFINED__ */


#ifndef __IAgentCommandsEx_FWD_DEFINED__
#define __IAgentCommandsEx_FWD_DEFINED__
typedef interface IAgentCommandsEx IAgentCommandsEx;
#endif 	/* __IAgentCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentSpeechInputProperties_FWD_DEFINED__
#define __IAgentSpeechInputProperties_FWD_DEFINED__
typedef interface IAgentSpeechInputProperties IAgentSpeechInputProperties;
#endif 	/* __IAgentSpeechInputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputProperties_FWD_DEFINED__
#define __IAgentAudioOutputProperties_FWD_DEFINED__
typedef interface IAgentAudioOutputProperties IAgentAudioOutputProperties;
#endif 	/* __IAgentAudioOutputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
#define __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
typedef interface IAgentAudioOutputPropertiesEx IAgentAudioOutputPropertiesEx;
#endif 	/* __IAgentAudioOutputPropertiesEx_FWD_DEFINED__ */


#ifndef __IAgentPropertySheet_FWD_DEFINED__
#define __IAgentPropertySheet_FWD_DEFINED__
typedef interface IAgentPropertySheet IAgentPropertySheet;
#endif 	/* __IAgentPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentBalloon_FWD_DEFINED__
#define __IAgentBalloon_FWD_DEFINED__
typedef interface IAgentBalloon IAgentBalloon;
#endif 	/* __IAgentBalloon_FWD_DEFINED__ */


#ifndef __IAgentBalloonEx_FWD_DEFINED__
#define __IAgentBalloonEx_FWD_DEFINED__
typedef interface IAgentBalloonEx IAgentBalloonEx;
#endif 	/* __IAgentBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCharacter_FWD_DEFINED__
#define __IAgentCharacter_FWD_DEFINED__
typedef interface IAgentCharacter IAgentCharacter;
#endif 	/* __IAgentCharacter_FWD_DEFINED__ */


#ifndef __IAgentCharacterEx_FWD_DEFINED__
#define __IAgentCharacterEx_FWD_DEFINED__
typedef interface IAgentCharacterEx IAgentCharacterEx;
#endif 	/* __IAgentCharacterEx_FWD_DEFINED__ */


#ifndef __IAgent_FWD_DEFINED__
#define __IAgent_FWD_DEFINED__
typedef interface IAgent IAgent;
#endif 	/* __IAgent_FWD_DEFINED__ */


#ifndef __IAgentEx_FWD_DEFINED__
#define __IAgentEx_FWD_DEFINED__
typedef interface IAgentEx IAgentEx;
#endif 	/* __IAgentEx_FWD_DEFINED__ */


#ifndef __IAgentNotifySink_FWD_DEFINED__
#define __IAgentNotifySink_FWD_DEFINED__
typedef interface IAgentNotifySink IAgentNotifySink;
#endif 	/* __IAgentNotifySink_FWD_DEFINED__ */


#ifndef __IAgentNotifySinkEx_FWD_DEFINED__
#define __IAgentNotifySinkEx_FWD_DEFINED__
typedef interface IAgentNotifySinkEx IAgentNotifySinkEx;
#endif 	/* __IAgentNotifySinkEx_FWD_DEFINED__ */


#ifndef __IAgentCommandWindow_FWD_DEFINED__
#define __IAgentCommandWindow_FWD_DEFINED__
typedef interface IAgentCommandWindow IAgentCommandWindow;
#endif 	/* __IAgentCommandWindow_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/****************************************
 * Generated header for interface: __MIDL_itf_AgentServer_0000
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [local] */ 


#define	NeverMoved	( 0 )

#define	UserMoved	( 1 )

#define	ProgramMoved	( 2 )

#define	OtherProgramMoved	( 3 )

#define	SystemMoved	( 4 )

#define	NeverShown	( 0 )

#define	UserHid	( 1 )

#define	UserShowed	( 2 )

#define	ProgramHid	( 3 )

#define	ProgramShowed	( 4 )

#define	OtherProgramHid	( 5 )

#define	OtherProgramShowed	( 6 )

#define	UserHidViaCharacterMenu	( 7 )

#define	UserHidViaTaskbarIcon	( UserHid )

#define	CSHELPCAUSE_COMMAND	( 1 )

#define	CSHELPCAUSE_OTHERPROGRAM	( 2 )

#define	CSHELPCAUSE_OPENCOMMANDSWINDOW	( 3 )

#define	CSHELPCAUSE_CLOSECOMMANDSWINDOW	( 4 )

#define	CSHELPCAUSE_SHOWCHARACTER	( 5 )

#define	CSHELPCAUSE_HIDECHARACTER	( 6 )

#define	CSHELPCAUSE_CHARACTER	( 7 )

#define	ACTIVATE_NOTTOPMOST	( 0 )

#define	ACTIVATE_TOPMOST	( 1 )

#define	ACTIVATE_NOTACTIVE	( 0 )

#define	ACTIVATE_ACTIVE	( 1 )

#define	ACTIVATE_INPUTACTIVE	( 2 )

#define	PREPARE_ANIMATION	( 0 )

#define	PREPARE_STATE	( 1 )

#define	PREPARE_WAVE	( 2 )

#define	STOP_TYPE_PLAY	( 0x1 )

#define	STOP_TYPE_MOVE	( 0x2 )

#define	STOP_TYPE_SPEAK	( 0x4 )

#define	STOP_TYPE_PREPARE	( 0x8 )

#define	STOP_TYPE_NONQUEUEDPREPARE	( 0x10 )

#define	STOP_TYPE_VISIBLE	( 0x20 )

#define	STOP_TYPE_ALL	( 0xffffffff )

#define	BALLOON_STYLE_BALLOON_ON	( 0x1 )

#define	BALLOON_STYLE_SIZETOTEXT	( 0x2 )

#define	BALLOON_STYLE_AUTOHIDE	( 0x4 )

#define	BALLOON_STYLE_AUTOPACE	( 0x8 )

#define	AUDIO_STATUS_AVAILABLE	( 0 )

#define	AUDIO_STATUS_NOAUDIO	( 1 )

#define	AUDIO_STATUS_CANTOPENAUDIO	( 2 )

#define	AUDIO_STATUS_USERSPEAKING	( 3 )

#define	AUDIO_STATUS_CHARACTERSPEAKING	( 4 )

#define	AUDIO_STATUS_SROVERRIDEABLE	( 5 )

#define	AUDIO_STATUS_ERROR	( 6 )

#define	LISTEN_STATUS_CANLISTEN	( 0 )

#define	LISTEN_STATUS_NOAUDIO	( 1 )

#define	LISTEN_STATUS_NOTACTIVE	( 2 )

#define	LISTEN_STATUS_CANTOPENAUDIO	( 3 )

#define	LISTEN_STATUS_COULDNTINITIALIZESPEECH	( 4 )

#define	LISTEN_STATUS_SPEECHDISABLED	( 5 )

#define	LISTEN_STATUS_ERROR	( 6 )

#define	MK_ICON	( 0x1000 )

#define	LSCOMPLETE_CAUSE_PROGRAMDISABLED	( 1 )

#define	LSCOMPLETE_CAUSE_PROGRAMTIMEDOUT	( 2 )

#define	LSCOMPLETE_CAUSE_USERTIMEDOUT	( 3 )

#define	LSCOMPLETE_CAUSE_USERRELEASEDKEY	( 4 )

#define	LSCOMPLETE_CAUSE_USERUTTERANCEENDED	( 5 )

#define	LSCOMPLETE_CAUSE_CLIENTDEACTIVATED	( 6 )

#define	LSCOMPLETE_CAUSE_DEFAULTCHARCHANGE	( 7 )

#define	LSCOMPLETE_CAUSE_USERDISABLED	( 8 )



extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0000_v0_0_s_ifspec;

#ifndef __IAgentUserInput_INTERFACE_DEFINED__
#define __IAgentUserInput_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentUserInput
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentUserInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C80-7B81-11D0-AC5F-00C04FD97575")
    IAgentUserInput : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ long __RPC_FAR *pdwCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemID( 
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *pdwCommandID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemConfidence( 
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *plConfidence) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemText( 
            /* [in] */ long dwItemIndex,
            /* [out] */ BSTR __RPC_FAR *pbszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAllItemData( 
            /* [out] */ VARIANT __RPC_FAR *pdwItemIndices,
            /* [out] */ VARIANT __RPC_FAR *plConfidences,
            /* [out] */ VARIANT __RPC_FAR *pbszText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentUserInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentUserInput __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentUserInput __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentUserInput __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            IAgentUserInput __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemID )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *pdwCommandID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemConfidence )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *plConfidence);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemText )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ long dwItemIndex,
            /* [out] */ BSTR __RPC_FAR *pbszText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAllItemData )( 
            IAgentUserInput __RPC_FAR * This,
            /* [out] */ VARIANT __RPC_FAR *pdwItemIndices,
            /* [out] */ VARIANT __RPC_FAR *plConfidences,
            /* [out] */ VARIANT __RPC_FAR *pbszText);
        
        END_INTERFACE
    } IAgentUserInputVtbl;

    interface IAgentUserInput
    {
        CONST_VTBL struct IAgentUserInputVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentUserInput_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentUserInput_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentUserInput_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentUserInput_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentUserInput_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentUserInput_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentUserInput_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentUserInput_GetCount(This,pdwCount)	\
    (This)->lpVtbl -> GetCount(This,pdwCount)

#define IAgentUserInput_GetItemID(This,dwItemIndex,pdwCommandID)	\
    (This)->lpVtbl -> GetItemID(This,dwItemIndex,pdwCommandID)

#define IAgentUserInput_GetItemConfidence(This,dwItemIndex,plConfidence)	\
    (This)->lpVtbl -> GetItemConfidence(This,dwItemIndex,plConfidence)

#define IAgentUserInput_GetItemText(This,dwItemIndex,pbszText)	\
    (This)->lpVtbl -> GetItemText(This,dwItemIndex,pbszText)

#define IAgentUserInput_GetAllItemData(This,pdwItemIndices,plConfidences,pbszText)	\
    (This)->lpVtbl -> GetAllItemData(This,pdwItemIndices,plConfidences,pbszText)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentUserInput_GetCount_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCount);


void __RPC_STUB IAgentUserInput_GetCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetItemID_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [in] */ long dwItemIndex,
    /* [out] */ long __RPC_FAR *pdwCommandID);


void __RPC_STUB IAgentUserInput_GetItemID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetItemConfidence_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [in] */ long dwItemIndex,
    /* [out] */ long __RPC_FAR *plConfidence);


void __RPC_STUB IAgentUserInput_GetItemConfidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetItemText_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [in] */ long dwItemIndex,
    /* [out] */ BSTR __RPC_FAR *pbszText);


void __RPC_STUB IAgentUserInput_GetItemText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetAllItemData_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [out] */ VARIANT __RPC_FAR *pdwItemIndices,
    /* [out] */ VARIANT __RPC_FAR *plConfidences,
    /* [out] */ VARIANT __RPC_FAR *pbszText);


void __RPC_STUB IAgentUserInput_GetAllItemData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentUserInput_INTERFACE_DEFINED__ */


#ifndef __IAgentCommand_INTERFACE_DEFINED__
#define __IAgentCommand_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCommand
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCommand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C83-7B81-11D0-AC5F-00C04FD97575")
    IAgentCommand : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetCaption( 
            /* [in] */ BSTR bszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCaption( 
            /* [out] */ BSTR __RPC_FAR *pbszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoice( 
            /* [in] */ BSTR bszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoice( 
            /* [out] */ BSTR __RPC_FAR *pbszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEnabled( 
            /* [in] */ long bEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetConfidenceThreshold( 
            /* [in] */ long lThreshold) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConfidenceThreshold( 
            /* [out] */ long __RPC_FAR *plThreshold) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetConfidenceText( 
            /* [in] */ BSTR bszTipText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConfidenceText( 
            /* [out] */ BSTR __RPC_FAR *pbszTipText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetID( 
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEnabled )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ long bEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceThreshold )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ long lThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceThreshold )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceText )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ BSTR bszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceText )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetID )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwID);
        
        END_INTERFACE
    } IAgentCommandVtbl;

    interface IAgentCommand
    {
        CONST_VTBL struct IAgentCommandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommand_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommand_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommand_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommand_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommand_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommand_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommand_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommand_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommand_SetEnabled(This,bEnabled)	\
    (This)->lpVtbl -> SetEnabled(This,bEnabled)

#define IAgentCommand_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentCommand_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommand_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommand_SetConfidenceThreshold(This,lThreshold)	\
    (This)->lpVtbl -> SetConfidenceThreshold(This,lThreshold)

#define IAgentCommand_GetConfidenceThreshold(This,plThreshold)	\
    (This)->lpVtbl -> GetConfidenceThreshold(This,plThreshold)

#define IAgentCommand_SetConfidenceText(This,bszTipText)	\
    (This)->lpVtbl -> SetConfidenceText(This,bszTipText)

#define IAgentCommand_GetConfidenceText(This,pbszTipText)	\
    (This)->lpVtbl -> GetConfidenceText(This,pbszTipText)

#define IAgentCommand_GetID(This,pdwID)	\
    (This)->lpVtbl -> GetID(This,pdwID)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommand_SetCaption_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ BSTR bszCaption);


void __RPC_STUB IAgentCommand_SetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetCaption_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszCaption);


void __RPC_STUB IAgentCommand_GetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetVoice_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ BSTR bszVoice);


void __RPC_STUB IAgentCommand_SetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetVoice_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszVoice);


void __RPC_STUB IAgentCommand_GetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetEnabled_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ long bEnabled);


void __RPC_STUB IAgentCommand_SetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetEnabled_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentCommand_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetVisible_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentCommand_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetVisible_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCommand_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetConfidenceThreshold_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ long lThreshold);


void __RPC_STUB IAgentCommand_SetConfidenceThreshold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetConfidenceThreshold_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plThreshold);


void __RPC_STUB IAgentCommand_GetConfidenceThreshold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetConfidenceText_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ BSTR bszTipText);


void __RPC_STUB IAgentCommand_SetConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetConfidenceText_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszTipText);


void __RPC_STUB IAgentCommand_GetConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetID_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommand_GetID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommand_INTERFACE_DEFINED__ */


#ifndef __IAgentCommandEx_INTERFACE_DEFINED__
#define __IAgentCommandEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCommandEx
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCommandEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("B0913412-3B44-11d1-ACBA-00C04FD97575")
    IAgentCommandEx : public IAgentCommand
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetHelpContextID( 
            /* [in] */ long ulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpContextID( 
            /* [out] */ long __RPC_FAR *pulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoiceCaption( 
            /* [in] */ BSTR bszVoiceCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoiceCaption( 
            /* [out] */ BSTR __RPC_FAR *pbszVoiceCaption) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommandEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommandEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEnabled )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long bEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceThreshold )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long lThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceThreshold )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceText )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceText )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetID )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpContextID )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long ulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpContextID )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoiceCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoiceCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoiceCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoiceCaption);
        
        END_INTERFACE
    } IAgentCommandExVtbl;

    interface IAgentCommandEx
    {
        CONST_VTBL struct IAgentCommandExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommandEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommandEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommandEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommandEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommandEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommandEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommandEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommandEx_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommandEx_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommandEx_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommandEx_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommandEx_SetEnabled(This,bEnabled)	\
    (This)->lpVtbl -> SetEnabled(This,bEnabled)

#define IAgentCommandEx_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentCommandEx_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommandEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommandEx_SetConfidenceThreshold(This,lThreshold)	\
    (This)->lpVtbl -> SetConfidenceThreshold(This,lThreshold)

#define IAgentCommandEx_GetConfidenceThreshold(This,plThreshold)	\
    (This)->lpVtbl -> GetConfidenceThreshold(This,plThreshold)

#define IAgentCommandEx_SetConfidenceText(This,bszTipText)	\
    (This)->lpVtbl -> SetConfidenceText(This,bszTipText)

#define IAgentCommandEx_GetConfidenceText(This,pbszTipText)	\
    (This)->lpVtbl -> GetConfidenceText(This,pbszTipText)

#define IAgentCommandEx_GetID(This,pdwID)	\
    (This)->lpVtbl -> GetID(This,pdwID)


#define IAgentCommandEx_SetHelpContextID(This,ulID)	\
    (This)->lpVtbl -> SetHelpContextID(This,ulID)

#define IAgentCommandEx_GetHelpContextID(This,pulID)	\
    (This)->lpVtbl -> GetHelpContextID(This,pulID)

#define IAgentCommandEx_SetVoiceCaption(This,bszVoiceCaption)	\
    (This)->lpVtbl -> SetVoiceCaption(This,bszVoiceCaption)

#define IAgentCommandEx_GetVoiceCaption(This,pbszVoiceCaption)	\
    (This)->lpVtbl -> GetVoiceCaption(This,pbszVoiceCaption)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommandEx_SetHelpContextID_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [in] */ long ulID);


void __RPC_STUB IAgentCommandEx_SetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandEx_GetHelpContextID_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pulID);


void __RPC_STUB IAgentCommandEx_GetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandEx_SetVoiceCaption_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [in] */ BSTR bszVoiceCaption);


void __RPC_STUB IAgentCommandEx_SetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandEx_GetVoiceCaption_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszVoiceCaption);


void __RPC_STUB IAgentCommandEx_GetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommandEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCommands_INTERFACE_DEFINED__
#define __IAgentCommands_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCommands
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCommands;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C85-7B81-11D0-AC5F-00C04FD97575")
    IAgentCommands : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCommand( 
            /* [in] */ long dwCommandID,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ long __RPC_FAR *pdwCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCaption( 
            /* [in] */ BSTR bszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCaption( 
            /* [out] */ BSTR __RPC_FAR *pbszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoice( 
            /* [in] */ BSTR bszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoice( 
            /* [out] */ BSTR __RPC_FAR *pbszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long dwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommands __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommands __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommand )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ long dwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCommands __RPC_FAR * This);
        
        END_INTERFACE
    } IAgentCommandsVtbl;

    interface IAgentCommands
    {
        CONST_VTBL struct IAgentCommandsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommands_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommands_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommands_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommands_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommands_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommands_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommands_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommands_GetCommand(This,dwCommandID,ppunkCommand)	\
    (This)->lpVtbl -> GetCommand(This,dwCommandID,ppunkCommand)

#define IAgentCommands_GetCount(This,pdwCount)	\
    (This)->lpVtbl -> GetCount(This,pdwCount)

#define IAgentCommands_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommands_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommands_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommands_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommands_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommands_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommands_Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)	\
    (This)->lpVtbl -> Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)

#define IAgentCommands_Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)	\
    (This)->lpVtbl -> Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)

#define IAgentCommands_Remove(This,dwID)	\
    (This)->lpVtbl -> Remove(This,dwID)

#define IAgentCommands_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommands_GetCommand_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ long dwCommandID,
    /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand);


void __RPC_STUB IAgentCommands_GetCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetCount_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCount);


void __RPC_STUB IAgentCommands_GetCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_SetCaption_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszCaption);


void __RPC_STUB IAgentCommands_SetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetCaption_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszCaption);


void __RPC_STUB IAgentCommands_GetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_SetVoice_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszVoice);


void __RPC_STUB IAgentCommands_SetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetVoice_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszVoice);


void __RPC_STUB IAgentCommands_GetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_SetVisible_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentCommands_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetVisible_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCommands_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_Add_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommands_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_Insert_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [in] */ long dwRefID,
    /* [in] */ long bBefore,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommands_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_Remove_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ long dwID);


void __RPC_STUB IAgentCommands_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_RemoveAll_Proxy( 
    IAgentCommands __RPC_FAR * This);


void __RPC_STUB IAgentCommands_RemoveAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommands_INTERFACE_DEFINED__ */


#ifndef __IAgentCommandsEx_INTERFACE_DEFINED__
#define __IAgentCommandsEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCommandsEx
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCommandsEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("6BA90C00-3910-11d1-ACB3-00C04FD97575")
    IAgentCommandsEx : public IAgentCommands
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCommandEx( 
            /* [in] */ long dwCommandID,
            /* [out] */ IAgentCommandEx __RPC_FAR *__RPC_FAR *ppCommandEx) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDefaultID( 
            /* [in] */ long dwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultID( 
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpContextID( 
            /* [in] */ long ulHelpID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpContextID( 
            /* [out] */ long __RPC_FAR *pulHelpID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontName( 
            /* [in] */ BSTR bszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontName( 
            /* [out] */ BSTR __RPC_FAR *pbszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontSize( 
            /* [in] */ long lFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontSize( 
            /* [out] */ long __RPC_FAR *lFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoiceCaption( 
            /* [in] */ BSTR bszVoiceCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoiceCaption( 
            /* [out] */ BSTR __RPC_FAR *bszVoiceCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddEx( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertEx( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetGlobalVoiceCommandsEnabled( 
            /* [in] */ long bEnable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGlobalVoiceCommandsEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandsExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommandsEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommandsEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommand )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCommandsEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommandEx )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [out] */ IAgentCommandEx __RPC_FAR *__RPC_FAR *ppCommandEx);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDefaultID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpContextID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long ulHelpID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpContextID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pulHelpID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontName )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontName )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontSize )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontSize )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoiceCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoiceCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoiceCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *bszVoiceCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddEx )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InsertEx )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetGlobalVoiceCommandsEnabled )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long bEnable);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetGlobalVoiceCommandsEnabled )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        END_INTERFACE
    } IAgentCommandsExVtbl;

    interface IAgentCommandsEx
    {
        CONST_VTBL struct IAgentCommandsExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommandsEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommandsEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommandsEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommandsEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommandsEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommandsEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommandsEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommandsEx_GetCommand(This,dwCommandID,ppunkCommand)	\
    (This)->lpVtbl -> GetCommand(This,dwCommandID,ppunkCommand)

#define IAgentCommandsEx_GetCount(This,pdwCount)	\
    (This)->lpVtbl -> GetCount(This,pdwCount)

#define IAgentCommandsEx_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommandsEx_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommandsEx_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommandsEx_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommandsEx_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommandsEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommandsEx_Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)	\
    (This)->lpVtbl -> Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)

#define IAgentCommandsEx_Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)	\
    (This)->lpVtbl -> Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)

#define IAgentCommandsEx_Remove(This,dwID)	\
    (This)->lpVtbl -> Remove(This,dwID)

#define IAgentCommandsEx_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)


#define IAgentCommandsEx_GetCommandEx(This,dwCommandID,ppCommandEx)	\
    (This)->lpVtbl -> GetCommandEx(This,dwCommandID,ppCommandEx)

#define IAgentCommandsEx_SetDefaultID(This,dwID)	\
    (This)->lpVtbl -> SetDefaultID(This,dwID)

#define IAgentCommandsEx_GetDefaultID(This,pdwID)	\
    (This)->lpVtbl -> GetDefaultID(This,pdwID)

#define IAgentCommandsEx_SetHelpContextID(This,ulHelpID)	\
    (This)->lpVtbl -> SetHelpContextID(This,ulHelpID)

#define IAgentCommandsEx_GetHelpContextID(This,pulHelpID)	\
    (This)->lpVtbl -> GetHelpContextID(This,pulHelpID)

#define IAgentCommandsEx_SetFontName(This,bszFontName)	\
    (This)->lpVtbl -> SetFontName(This,bszFontName)

#define IAgentCommandsEx_GetFontName(This,pbszFontName)	\
    (This)->lpVtbl -> GetFontName(This,pbszFontName)

#define IAgentCommandsEx_SetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> SetFontSize(This,lFontSize)

#define IAgentCommandsEx_GetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> GetFontSize(This,lFontSize)

#define IAgentCommandsEx_SetVoiceCaption(This,bszVoiceCaption)	\
    (This)->lpVtbl -> SetVoiceCaption(This,bszVoiceCaption)

#define IAgentCommandsEx_GetVoiceCaption(This,bszVoiceCaption)	\
    (This)->lpVtbl -> GetVoiceCaption(This,bszVoiceCaption)

#define IAgentCommandsEx_AddEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,pdwID)	\
    (This)->lpVtbl -> AddEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,pdwID)

#define IAgentCommandsEx_InsertEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,dwRefID,bBefore,pdwID)	\
    (This)->lpVtbl -> InsertEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,dwRefID,bBefore,pdwID)

#define IAgentCommandsEx_SetGlobalVoiceCommandsEnabled(This,bEnable)	\
    (This)->lpVtbl -> SetGlobalVoiceCommandsEnabled(This,bEnable)

#define IAgentCommandsEx_GetGlobalVoiceCommandsEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetGlobalVoiceCommandsEnabled(This,pbEnabled)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetCommandEx_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long dwCommandID,
    /* [out] */ IAgentCommandEx __RPC_FAR *__RPC_FAR *ppCommandEx);


void __RPC_STUB IAgentCommandsEx_GetCommandEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetDefaultID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long dwID);


void __RPC_STUB IAgentCommandsEx_SetDefaultID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetDefaultID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommandsEx_GetDefaultID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetHelpContextID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long ulHelpID);


void __RPC_STUB IAgentCommandsEx_SetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetHelpContextID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pulHelpID);


void __RPC_STUB IAgentCommandsEx_GetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetFontName_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszFontName);


void __RPC_STUB IAgentCommandsEx_SetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetFontName_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszFontName);


void __RPC_STUB IAgentCommandsEx_GetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetFontSize_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long lFontSize);


void __RPC_STUB IAgentCommandsEx_SetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetFontSize_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *lFontSize);


void __RPC_STUB IAgentCommandsEx_GetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetVoiceCaption_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszVoiceCaption);


void __RPC_STUB IAgentCommandsEx_SetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetVoiceCaption_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *bszVoiceCaption);


void __RPC_STUB IAgentCommandsEx_GetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_AddEx_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ BSTR bszVoiceCaption,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [in] */ long ulHelpId,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommandsEx_AddEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_InsertEx_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ BSTR bszVoiceCaption,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [in] */ long ulHelpId,
    /* [in] */ long dwRefID,
    /* [in] */ long bBefore,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommandsEx_InsertEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetGlobalVoiceCommandsEnabled_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long bEnable);


void __RPC_STUB IAgentCommandsEx_SetGlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetGlobalVoiceCommandsEnabled_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentCommandsEx_GetGlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommandsEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCommandWindow_INTERFACE_DEFINED__
#define __IAgentCommandWindow_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCommandWindow
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCommandWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("6D0ECB23-9968-11D0-AC6E-00C04FD97575")
    IAgentCommandWindow : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommandWindow __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommandWindow __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        END_INTERFACE
    } IAgentCommandWindowVtbl;

    interface IAgentCommandWindow
    {
        CONST_VTBL struct IAgentCommandWindowVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommandWindow_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommandWindow_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommandWindow_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommandWindow_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommandWindow_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommandWindow_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommandWindow_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommandWindow_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommandWindow_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommandWindow_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentCommandWindow_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommandWindow_SetVisible_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentCommandWindow_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandWindow_GetVisible_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCommandWindow_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandWindow_GetPosition_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLeft,
    /* [out] */ long __RPC_FAR *plTop);


void __RPC_STUB IAgentCommandWindow_GetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandWindow_GetSize_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentCommandWindow_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommandWindow_INTERFACE_DEFINED__ */


#ifndef __IAgentSpeechInputProperties_INTERFACE_DEFINED__
#define __IAgentSpeechInputProperties_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentSpeechInputProperties
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentSpeechInputProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C87-7B81-11D0-AC5F-00C04FD97575")
    IAgentSpeechInputProperties : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetInstalled( 
            /* [out] */ long __RPC_FAR *pbInstalled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHotKey( 
            /* [out] */ BSTR __RPC_FAR *pbszHotCharKey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLCID( 
            /* [out] */ LCID __RPC_FAR *plcidCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEngine( 
            /* [out] */ BSTR __RPC_FAR *pbszEngine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEngine( 
            /* [in] */ BSTR bszEngine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetListeningTip( 
            /* [out] */ long __RPC_FAR *pbListeningTip) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentSpeechInputPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentSpeechInputProperties __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentSpeechInputProperties __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetInstalled )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbInstalled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHotKey )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszHotCharKey);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLCID )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ LCID __RPC_FAR *plcidCurrent);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEngine )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszEngine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEngine )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ BSTR bszEngine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetListeningTip )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbListeningTip);
        
        END_INTERFACE
    } IAgentSpeechInputPropertiesVtbl;

    interface IAgentSpeechInputProperties
    {
        CONST_VTBL struct IAgentSpeechInputPropertiesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentSpeechInputProperties_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentSpeechInputProperties_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentSpeechInputProperties_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentSpeechInputProperties_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentSpeechInputProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentSpeechInputProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentSpeechInputProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentSpeechInputProperties_GetInstalled(This,pbInstalled)	\
    (This)->lpVtbl -> GetInstalled(This,pbInstalled)

#define IAgentSpeechInputProperties_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentSpeechInputProperties_GetHotKey(This,pbszHotCharKey)	\
    (This)->lpVtbl -> GetHotKey(This,pbszHotCharKey)

#define IAgentSpeechInputProperties_GetLCID(This,plcidCurrent)	\
    (This)->lpVtbl -> GetLCID(This,plcidCurrent)

#define IAgentSpeechInputProperties_GetEngine(This,pbszEngine)	\
    (This)->lpVtbl -> GetEngine(This,pbszEngine)

#define IAgentSpeechInputProperties_SetEngine(This,bszEngine)	\
    (This)->lpVtbl -> SetEngine(This,bszEngine)

#define IAgentSpeechInputProperties_GetListeningTip(This,pbListeningTip)	\
    (This)->lpVtbl -> GetListeningTip(This,pbListeningTip)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetInstalled_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbInstalled);


void __RPC_STUB IAgentSpeechInputProperties_GetInstalled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetEnabled_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentSpeechInputProperties_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetHotKey_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszHotCharKey);


void __RPC_STUB IAgentSpeechInputProperties_GetHotKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetLCID_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ LCID __RPC_FAR *plcidCurrent);


void __RPC_STUB IAgentSpeechInputProperties_GetLCID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetEngine_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszEngine);


void __RPC_STUB IAgentSpeechInputProperties_GetEngine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_SetEngine_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [in] */ BSTR bszEngine);


void __RPC_STUB IAgentSpeechInputProperties_SetEngine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetListeningTip_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbListeningTip);


void __RPC_STUB IAgentSpeechInputProperties_GetListeningTip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentSpeechInputProperties_INTERFACE_DEFINED__ */


#ifndef __IAgentAudioOutputProperties_INTERFACE_DEFINED__
#define __IAgentAudioOutputProperties_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentAudioOutputProperties
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentAudioOutputProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C89-7B81-11D0-AC5F-00C04FD97575")
    IAgentAudioOutputProperties : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUsingSoundEffects( 
            /* [out] */ long __RPC_FAR *pbUsingSoundEffects) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentAudioOutputPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentAudioOutputProperties __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentAudioOutputProperties __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUsingSoundEffects )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbUsingSoundEffects);
        
        END_INTERFACE
    } IAgentAudioOutputPropertiesVtbl;

    interface IAgentAudioOutputProperties
    {
        CONST_VTBL struct IAgentAudioOutputPropertiesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentAudioOutputProperties_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentAudioOutputProperties_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentAudioOutputProperties_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentAudioOutputProperties_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentAudioOutputProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentAudioOutputProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentAudioOutputProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentAudioOutputProperties_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentAudioOutputProperties_GetUsingSoundEffects(This,pbUsingSoundEffects)	\
    (This)->lpVtbl -> GetUsingSoundEffects(This,pbUsingSoundEffects)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentAudioOutputProperties_GetEnabled_Proxy( 
    IAgentAudioOutputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentAudioOutputProperties_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentAudioOutputProperties_GetUsingSoundEffects_Proxy( 
    IAgentAudioOutputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbUsingSoundEffects);


void __RPC_STUB IAgentAudioOutputProperties_GetUsingSoundEffects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentAudioOutputProperties_INTERFACE_DEFINED__ */


#ifndef __IAgentAudioOutputPropertiesEx_INTERFACE_DEFINED__
#define __IAgentAudioOutputPropertiesEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentAudioOutputPropertiesEx
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentAudioOutputPropertiesEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93CA0-7B81-11D0-AC5F-00C04FD97575")
    IAgentAudioOutputPropertiesEx : public IAgentAudioOutputProperties
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStatus( 
            /* [out] */ long __RPC_FAR *plStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentAudioOutputPropertiesExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUsingSoundEffects )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbUsingSoundEffects);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetStatus )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plStatus);
        
        END_INTERFACE
    } IAgentAudioOutputPropertiesExVtbl;

    interface IAgentAudioOutputPropertiesEx
    {
        CONST_VTBL struct IAgentAudioOutputPropertiesExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentAudioOutputPropertiesEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentAudioOutputPropertiesEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentAudioOutputPropertiesEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentAudioOutputPropertiesEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentAudioOutputPropertiesEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentAudioOutputPropertiesEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentAudioOutputPropertiesEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentAudioOutputPropertiesEx_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentAudioOutputPropertiesEx_GetUsingSoundEffects(This,pbUsingSoundEffects)	\
    (This)->lpVtbl -> GetUsingSoundEffects(This,pbUsingSoundEffects)


#define IAgentAudioOutputPropertiesEx_GetStatus(This,plStatus)	\
    (This)->lpVtbl -> GetStatus(This,plStatus)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentAudioOutputPropertiesEx_GetStatus_Proxy( 
    IAgentAudioOutputPropertiesEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plStatus);


void __RPC_STUB IAgentAudioOutputPropertiesEx_GetStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentAudioOutputPropertiesEx_INTERFACE_DEFINED__ */


#ifndef __IAgentPropertySheet_INTERFACE_DEFINED__
#define __IAgentPropertySheet_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentPropertySheet
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentPropertySheet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C8B-7B81-11D0-AC5F-00C04FD97575")
    IAgentPropertySheet : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPage( 
            /* [out] */ BSTR __RPC_FAR *pbszPage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPage( 
            /* [in] */ BSTR bszPage) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentPropertySheetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentPropertySheet __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentPropertySheet __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPage )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszPage);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPage )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ BSTR bszPage);
        
        END_INTERFACE
    } IAgentPropertySheetVtbl;

    interface IAgentPropertySheet
    {
        CONST_VTBL struct IAgentPropertySheetVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentPropertySheet_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentPropertySheet_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentPropertySheet_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentPropertySheet_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentPropertySheet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentPropertySheet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentPropertySheet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentPropertySheet_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentPropertySheet_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentPropertySheet_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentPropertySheet_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#define IAgentPropertySheet_GetPage(This,pbszPage)	\
    (This)->lpVtbl -> GetPage(This,pbszPage)

#define IAgentPropertySheet_SetPage(This,bszPage)	\
    (This)->lpVtbl -> SetPage(This,bszPage)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetVisible_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentPropertySheet_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_SetVisible_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentPropertySheet_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetPosition_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLeft,
    /* [out] */ long __RPC_FAR *plTop);


void __RPC_STUB IAgentPropertySheet_GetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetSize_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentPropertySheet_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetPage_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszPage);


void __RPC_STUB IAgentPropertySheet_GetPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_SetPage_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [in] */ BSTR bszPage);


void __RPC_STUB IAgentPropertySheet_SetPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentPropertySheet_INTERFACE_DEFINED__ */


#ifndef __IAgentBalloon_INTERFACE_DEFINED__
#define __IAgentBalloon_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentBalloon
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentBalloon;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C8D-7B81-11D0-AC5F-00C04FD97575")
    IAgentBalloon : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumLines( 
            /* [out] */ long __RPC_FAR *plLines) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumCharsPerLine( 
            /* [out] */ long __RPC_FAR *plCharsPerLine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontName( 
            /* [out] */ BSTR __RPC_FAR *pbszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontSize( 
            /* [out] */ long __RPC_FAR *plFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontBold( 
            /* [out] */ long __RPC_FAR *pbFontBold) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontItalic( 
            /* [out] */ long __RPC_FAR *pbFontItalic) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontStrikethru( 
            /* [out] */ long __RPC_FAR *pbFontStrikethru) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontUnderline( 
            /* [out] */ long __RPC_FAR *pbFontUnderline) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetForeColor( 
            /* [out] */ long __RPC_FAR *plFGColor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBackColor( 
            /* [out] */ long __RPC_FAR *plBGColor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBorderColor( 
            /* [out] */ long __RPC_FAR *plBorderColor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontName( 
            /* [in] */ BSTR bszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontSize( 
            /* [in] */ long lFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontCharSet( 
            /* [in] */ short sFontCharSet) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontCharSet( 
            /* [out] */ short __RPC_FAR *psFontCharSet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentBalloonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentBalloon __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentBalloon __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumLines )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLines);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumCharsPerLine )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plCharsPerLine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontName )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontSize )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontBold )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontBold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontItalic )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontItalic);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontStrikethru )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontStrikethru);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontUnderline )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontUnderline);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetForeColor )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBackColor )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBorderColor )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBorderColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontName )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ BSTR bszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontSize )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ long lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontCharSet )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ short sFontCharSet);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontCharSet )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psFontCharSet);
        
        END_INTERFACE
    } IAgentBalloonVtbl;

    interface IAgentBalloon
    {
        CONST_VTBL struct IAgentBalloonVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentBalloon_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentBalloon_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentBalloon_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentBalloon_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentBalloon_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentBalloon_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentBalloon_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentBalloon_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentBalloon_GetNumLines(This,plLines)	\
    (This)->lpVtbl -> GetNumLines(This,plLines)

#define IAgentBalloon_GetNumCharsPerLine(This,plCharsPerLine)	\
    (This)->lpVtbl -> GetNumCharsPerLine(This,plCharsPerLine)

#define IAgentBalloon_GetFontName(This,pbszFontName)	\
    (This)->lpVtbl -> GetFontName(This,pbszFontName)

#define IAgentBalloon_GetFontSize(This,plFontSize)	\
    (This)->lpVtbl -> GetFontSize(This,plFontSize)

#define IAgentBalloon_GetFontBold(This,pbFontBold)	\
    (This)->lpVtbl -> GetFontBold(This,pbFontBold)

#define IAgentBalloon_GetFontItalic(This,pbFontItalic)	\
    (This)->lpVtbl -> GetFontItalic(This,pbFontItalic)

#define IAgentBalloon_GetFontStrikethru(This,pbFontStrikethru)	\
    (This)->lpVtbl -> GetFontStrikethru(This,pbFontStrikethru)

#define IAgentBalloon_GetFontUnderline(This,pbFontUnderline)	\
    (This)->lpVtbl -> GetFontUnderline(This,pbFontUnderline)

#define IAgentBalloon_GetForeColor(This,plFGColor)	\
    (This)->lpVtbl -> GetForeColor(This,plFGColor)

#define IAgentBalloon_GetBackColor(This,plBGColor)	\
    (This)->lpVtbl -> GetBackColor(This,plBGColor)

#define IAgentBalloon_GetBorderColor(This,plBorderColor)	\
    (This)->lpVtbl -> GetBorderColor(This,plBorderColor)

#define IAgentBalloon_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentBalloon_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentBalloon_SetFontName(This,bszFontName)	\
    (This)->lpVtbl -> SetFontName(This,bszFontName)

#define IAgentBalloon_SetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> SetFontSize(This,lFontSize)

#define IAgentBalloon_SetFontCharSet(This,sFontCharSet)	\
    (This)->lpVtbl -> SetFontCharSet(This,sFontCharSet)

#define IAgentBalloon_GetFontCharSet(This,psFontCharSet)	\
    (This)->lpVtbl -> GetFontCharSet(This,psFontCharSet)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentBalloon_GetEnabled_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentBalloon_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetNumLines_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLines);


void __RPC_STUB IAgentBalloon_GetNumLines_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetNumCharsPerLine_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plCharsPerLine);


void __RPC_STUB IAgentBalloon_GetNumCharsPerLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontName_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszFontName);


void __RPC_STUB IAgentBalloon_GetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontSize_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plFontSize);


void __RPC_STUB IAgentBalloon_GetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontBold_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontBold);


void __RPC_STUB IAgentBalloon_GetFontBold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontItalic_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontItalic);


void __RPC_STUB IAgentBalloon_GetFontItalic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontStrikethru_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontStrikethru);


void __RPC_STUB IAgentBalloon_GetFontStrikethru_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontUnderline_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontUnderline);


void __RPC_STUB IAgentBalloon_GetFontUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetForeColor_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plFGColor);


void __RPC_STUB IAgentBalloon_GetForeColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetBackColor_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plBGColor);


void __RPC_STUB IAgentBalloon_GetBackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetBorderColor_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plBorderColor);


void __RPC_STUB IAgentBalloon_GetBorderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetVisible_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentBalloon_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetVisible_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentBalloon_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetFontName_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ BSTR bszFontName);


void __RPC_STUB IAgentBalloon_SetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetFontSize_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ long lFontSize);


void __RPC_STUB IAgentBalloon_SetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetFontCharSet_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ short sFontCharSet);


void __RPC_STUB IAgentBalloon_SetFontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontCharSet_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psFontCharSet);


void __RPC_STUB IAgentBalloon_GetFontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentBalloon_INTERFACE_DEFINED__ */


#ifndef __IAgentBalloonEx_INTERFACE_DEFINED__
#define __IAgentBalloonEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentBalloonEx
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentBalloonEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("D7A6D440-8872-11d1-9EC6-00C04FD7081F")
    IAgentBalloonEx : public IAgentBalloon
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetStyle( 
            /* [in] */ long lStyle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStyle( 
            /* [out] */ long __RPC_FAR *plStyle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNumLines( 
            /* [in] */ long lLines) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNumCharsPerLine( 
            /* [in] */ long lCharsPerLine) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentBalloonExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentBalloonEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentBalloonEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumLines )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLines);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumCharsPerLine )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plCharsPerLine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontName )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontSize )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontBold )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontBold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontItalic )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontItalic);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontStrikethru )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontStrikethru);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontUnderline )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontUnderline);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetForeColor )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBackColor )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBorderColor )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBorderColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontName )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ BSTR bszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontSize )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontCharSet )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ short sFontCharSet);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontCharSet )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psFontCharSet);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetStyle )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lStyle);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetStyle )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plStyle);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNumLines )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lLines);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNumCharsPerLine )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lCharsPerLine);
        
        END_INTERFACE
    } IAgentBalloonExVtbl;

    interface IAgentBalloonEx
    {
        CONST_VTBL struct IAgentBalloonExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentBalloonEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentBalloonEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentBalloonEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentBalloonEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentBalloonEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentBalloonEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentBalloonEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentBalloonEx_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentBalloonEx_GetNumLines(This,plLines)	\
    (This)->lpVtbl -> GetNumLines(This,plLines)

#define IAgentBalloonEx_GetNumCharsPerLine(This,plCharsPerLine)	\
    (This)->lpVtbl -> GetNumCharsPerLine(This,plCharsPerLine)

#define IAgentBalloonEx_GetFontName(This,pbszFontName)	\
    (This)->lpVtbl -> GetFontName(This,pbszFontName)

#define IAgentBalloonEx_GetFontSize(This,plFontSize)	\
    (This)->lpVtbl -> GetFontSize(This,plFontSize)

#define IAgentBalloonEx_GetFontBold(This,pbFontBold)	\
    (This)->lpVtbl -> GetFontBold(This,pbFontBold)

#define IAgentBalloonEx_GetFontItalic(This,pbFontItalic)	\
    (This)->lpVtbl -> GetFontItalic(This,pbFontItalic)

#define IAgentBalloonEx_GetFontStrikethru(This,pbFontStrikethru)	\
    (This)->lpVtbl -> GetFontStrikethru(This,pbFontStrikethru)

#define IAgentBalloonEx_GetFontUnderline(This,pbFontUnderline)	\
    (This)->lpVtbl -> GetFontUnderline(This,pbFontUnderline)

#define IAgentBalloonEx_GetForeColor(This,plFGColor)	\
    (This)->lpVtbl -> GetForeColor(This,plFGColor)

#define IAgentBalloonEx_GetBackColor(This,plBGColor)	\
    (This)->lpVtbl -> GetBackColor(This,plBGColor)

#define IAgentBalloonEx_GetBorderColor(This,plBorderColor)	\
    (This)->lpVtbl -> GetBorderColor(This,plBorderColor)

#define IAgentBalloonEx_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentBalloonEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentBalloonEx_SetFontName(This,bszFontName)	\
    (This)->lpVtbl -> SetFontName(This,bszFontName)

#define IAgentBalloonEx_SetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> SetFontSize(This,lFontSize)

#define IAgentBalloonEx_SetFontCharSet(This,sFontCharSet)	\
    (This)->lpVtbl -> SetFontCharSet(This,sFontCharSet)

#define IAgentBalloonEx_GetFontCharSet(This,psFontCharSet)	\
    (This)->lpVtbl -> GetFontCharSet(This,psFontCharSet)


#define IAgentBalloonEx_SetStyle(This,lStyle)	\
    (This)->lpVtbl -> SetStyle(This,lStyle)

#define IAgentBalloonEx_GetStyle(This,plStyle)	\
    (This)->lpVtbl -> GetStyle(This,plStyle)

#define IAgentBalloonEx_SetNumLines(This,lLines)	\
    (This)->lpVtbl -> SetNumLines(This,lLines)

#define IAgentBalloonEx_SetNumCharsPerLine(This,lCharsPerLine)	\
    (This)->lpVtbl -> SetNumCharsPerLine(This,lCharsPerLine)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentBalloonEx_SetStyle_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [in] */ long lStyle);


void __RPC_STUB IAgentBalloonEx_SetStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloonEx_GetStyle_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plStyle);


void __RPC_STUB IAgentBalloonEx_GetStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloonEx_SetNumLines_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [in] */ long lLines);


void __RPC_STUB IAgentBalloonEx_SetNumLines_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloonEx_SetNumCharsPerLine_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [in] */ long lCharsPerLine);


void __RPC_STUB IAgentBalloonEx_SetNumCharsPerLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentBalloonEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCharacter_INTERFACE_DEFINED__
#define __IAgentCharacter_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCharacter
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCharacter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C8F-7B81-11D0-AC5F-00C04FD97575")
    IAgentCharacter : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPosition( 
            /* [in] */ long lLeft,
            /* [in] */ long lTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSize( 
            /* [in] */ long lWidth,
            /* [in] */ long lHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetName( 
            /* [out] */ BSTR __RPC_FAR *pbszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDescription( 
            /* [out] */ BSTR __RPC_FAR *pbszDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTTSSpeed( 
            /* [out] */ long __RPC_FAR *pdwSpeed) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTTSPitch( 
            /* [out] */ short __RPC_FAR *pwPitch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Activate( 
            /* [in] */ short sState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIdleOn( 
            /* [in] */ long bOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIdleOn( 
            /* [out] */ long __RPC_FAR *pbOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Prepare( 
            /* [in] */ long dwType,
            /* [in] */ BSTR bszName,
            /* [in] */ long bQueue,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Play( 
            /* [in] */ BSTR bszAnimation,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( 
            /* [in] */ long dwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StopAll( 
            /* [in] */ long lTypes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Wait( 
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Interrupt( 
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Show( 
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Hide( 
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Speak( 
            /* [in] */ BSTR bszText,
            /* [in] */ BSTR bszUrl,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveTo( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long lSpeed,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GestureAt( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMoveCause( 
            /* [out] */ long __RPC_FAR *pdwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisibilityCause( 
            /* [out] */ long __RPC_FAR *pdwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HasOtherClients( 
            /* [out] */ long __RPC_FAR *plNumOtherClients) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSoundEffectsOn( 
            /* [in] */ long bOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSoundEffectsOn( 
            /* [out] */ long __RPC_FAR *pbOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetName( 
            /* [in] */ BSTR bszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDescription( 
            /* [in] */ BSTR bszDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExtraData( 
            /* [out] */ BSTR __RPC_FAR *pbszExtraData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCharacterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCharacter __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCharacter __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPosition )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long lLeft,
            /* [in] */ long lTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSize )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetName )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDescription )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSSpeed )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwSpeed);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSPitch )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *pwPitch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ short sState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIdleOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIdleOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Prepare )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwType,
            /* [in] */ BSTR bszName,
            /* [in] */ long bQueue,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszAnimation,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long lTypes);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszText,
            /* [in] */ BSTR bszUrl,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long lSpeed,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMoveCause )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisibilityCause )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HasOtherClients )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plNumOtherClients);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSoundEffectsOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSoundEffectsOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetName )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDescription )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetExtraData )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszExtraData);
        
        END_INTERFACE
    } IAgentCharacterVtbl;

    interface IAgentCharacter
    {
        CONST_VTBL struct IAgentCharacterVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCharacter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCharacter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCharacter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCharacter_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCharacter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCharacter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCharacter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCharacter_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCharacter_SetPosition(This,lLeft,lTop)	\
    (This)->lpVtbl -> SetPosition(This,lLeft,lTop)

#define IAgentCharacter_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentCharacter_SetSize(This,lWidth,lHeight)	\
    (This)->lpVtbl -> SetSize(This,lWidth,lHeight)

#define IAgentCharacter_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#define IAgentCharacter_GetName(This,pbszName)	\
    (This)->lpVtbl -> GetName(This,pbszName)

#define IAgentCharacter_GetDescription(This,pbszDescription)	\
    (This)->lpVtbl -> GetDescription(This,pbszDescription)

#define IAgentCharacter_GetTTSSpeed(This,pdwSpeed)	\
    (This)->lpVtbl -> GetTTSSpeed(This,pdwSpeed)

#define IAgentCharacter_GetTTSPitch(This,pwPitch)	\
    (This)->lpVtbl -> GetTTSPitch(This,pwPitch)

#define IAgentCharacter_Activate(This,sState)	\
    (This)->lpVtbl -> Activate(This,sState)

#define IAgentCharacter_SetIdleOn(This,bOn)	\
    (This)->lpVtbl -> SetIdleOn(This,bOn)

#define IAgentCharacter_GetIdleOn(This,pbOn)	\
    (This)->lpVtbl -> GetIdleOn(This,pbOn)

#define IAgentCharacter_Prepare(This,dwType,bszName,bQueue,pdwReqID)	\
    (This)->lpVtbl -> Prepare(This,dwType,bszName,bQueue,pdwReqID)

#define IAgentCharacter_Play(This,bszAnimation,pdwReqID)	\
    (This)->lpVtbl -> Play(This,bszAnimation,pdwReqID)

#define IAgentCharacter_Stop(This,dwReqID)	\
    (This)->lpVtbl -> Stop(This,dwReqID)

#define IAgentCharacter_StopAll(This,lTypes)	\
    (This)->lpVtbl -> StopAll(This,lTypes)

#define IAgentCharacter_Wait(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Wait(This,dwReqID,pdwReqID)

#define IAgentCharacter_Interrupt(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Interrupt(This,dwReqID,pdwReqID)

#define IAgentCharacter_Show(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Show(This,bFast,pdwReqID)

#define IAgentCharacter_Hide(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Hide(This,bFast,pdwReqID)

#define IAgentCharacter_Speak(This,bszText,bszUrl,pdwReqID)	\
    (This)->lpVtbl -> Speak(This,bszText,bszUrl,pdwReqID)

#define IAgentCharacter_MoveTo(This,x,y,lSpeed,pdwReqID)	\
    (This)->lpVtbl -> MoveTo(This,x,y,lSpeed,pdwReqID)

#define IAgentCharacter_GestureAt(This,x,y,pdwReqID)	\
    (This)->lpVtbl -> GestureAt(This,x,y,pdwReqID)

#define IAgentCharacter_GetMoveCause(This,pdwCause)	\
    (This)->lpVtbl -> GetMoveCause(This,pdwCause)

#define IAgentCharacter_GetVisibilityCause(This,pdwCause)	\
    (This)->lpVtbl -> GetVisibilityCause(This,pdwCause)

#define IAgentCharacter_HasOtherClients(This,plNumOtherClients)	\
    (This)->lpVtbl -> HasOtherClients(This,plNumOtherClients)

#define IAgentCharacter_SetSoundEffectsOn(This,bOn)	\
    (This)->lpVtbl -> SetSoundEffectsOn(This,bOn)

#define IAgentCharacter_GetSoundEffectsOn(This,pbOn)	\
    (This)->lpVtbl -> GetSoundEffectsOn(This,pbOn)

#define IAgentCharacter_SetName(This,bszName)	\
    (This)->lpVtbl -> SetName(This,bszName)

#define IAgentCharacter_SetDescription(This,bszDescription)	\
    (This)->lpVtbl -> SetDescription(This,bszDescription)

#define IAgentCharacter_GetExtraData(This,pbszExtraData)	\
    (This)->lpVtbl -> GetExtraData(This,pbszExtraData)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCharacter_GetVisible_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCharacter_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetPosition_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long lLeft,
    /* [in] */ long lTop);


void __RPC_STUB IAgentCharacter_SetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetPosition_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLeft,
    /* [out] */ long __RPC_FAR *plTop);


void __RPC_STUB IAgentCharacter_GetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetSize_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long lWidth,
    /* [in] */ long lHeight);


void __RPC_STUB IAgentCharacter_SetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetSize_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentCharacter_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetName_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszName);


void __RPC_STUB IAgentCharacter_GetName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetDescription_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszDescription);


void __RPC_STUB IAgentCharacter_GetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetTTSSpeed_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwSpeed);


void __RPC_STUB IAgentCharacter_GetTTSSpeed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetTTSPitch_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *pwPitch);


void __RPC_STUB IAgentCharacter_GetTTSPitch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Activate_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ short sState);


void __RPC_STUB IAgentCharacter_Activate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetIdleOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bOn);


void __RPC_STUB IAgentCharacter_SetIdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetIdleOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbOn);


void __RPC_STUB IAgentCharacter_GetIdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Prepare_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwType,
    /* [in] */ BSTR bszName,
    /* [in] */ long bQueue,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Prepare_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Play_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszAnimation,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Play_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Stop_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwReqID);


void __RPC_STUB IAgentCharacter_Stop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_StopAll_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long lTypes);


void __RPC_STUB IAgentCharacter_StopAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Wait_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwReqID,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Wait_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Interrupt_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwReqID,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Interrupt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Show_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bFast,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Hide_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bFast,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Hide_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Speak_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszText,
    /* [in] */ BSTR bszUrl,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Speak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_MoveTo_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [in] */ long lSpeed,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_MoveTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GestureAt_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_GestureAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetMoveCause_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCause);


void __RPC_STUB IAgentCharacter_GetMoveCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetVisibilityCause_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCause);


void __RPC_STUB IAgentCharacter_GetVisibilityCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_HasOtherClients_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plNumOtherClients);


void __RPC_STUB IAgentCharacter_HasOtherClients_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetSoundEffectsOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bOn);


void __RPC_STUB IAgentCharacter_SetSoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetSoundEffectsOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbOn);


void __RPC_STUB IAgentCharacter_GetSoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetName_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszName);


void __RPC_STUB IAgentCharacter_SetName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetDescription_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszDescription);


void __RPC_STUB IAgentCharacter_SetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetExtraData_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszExtraData);


void __RPC_STUB IAgentCharacter_GetExtraData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCharacter_INTERFACE_DEFINED__ */


#ifndef __IAgentCharacterEx_INTERFACE_DEFINED__
#define __IAgentCharacterEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCharacterEx
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCharacterEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("98BBE491-2EED-11d1-ACAC-00C04FD97575")
    IAgentCharacterEx : public IAgentCharacter
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ShowPopupMenu( 
            /* [in] */ short x,
            /* [in] */ short y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAutoPopupMenu( 
            /* [in] */ long bAutoPopupMenu) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAutoPopupMenu( 
            /* [out] */ long __RPC_FAR *pbAutoPopupMenu) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpFileName( 
            /* [out] */ BSTR __RPC_FAR *pbszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpFileName( 
            /* [in] */ BSTR bszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpModeOn( 
            /* [in] */ long bHelpModeOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpModeOn( 
            /* [out] */ long __RPC_FAR *pbHelpModeOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpContextID( 
            /* [in] */ long ulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpContextID( 
            /* [out] */ long __RPC_FAR *pulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetActive( 
            /* [out] */ short __RPC_FAR *psState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Listen( 
            /* [in] */ long bListen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetLanguageID( 
            /* [in] */ long langid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLanguageID( 
            /* [out] */ long __RPC_FAR *plangid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTTSModeID( 
            /* [out] */ BSTR __RPC_FAR *pbszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTTSModeID( 
            /* [in] */ BSTR bszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSRModeID( 
            /* [out] */ BSTR __RPC_FAR *pbszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSRModeID( 
            /* [in] */ BSTR bszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGUID( 
            /* [out] */ BSTR __RPC_FAR *pbszID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOriginalSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Think( 
            /* [in] */ BSTR bszText,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVersion( 
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAnimationNames( 
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *punkEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSRStatus( 
            /* [out] */ long __RPC_FAR *plStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCharacterExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCharacterEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCharacterEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPosition )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long lLeft,
            /* [in] */ long lTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSize )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDescription )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSSpeed )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwSpeed);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSPitch )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *pwPitch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short sState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIdleOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIdleOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Prepare )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwType,
            /* [in] */ BSTR bszName,
            /* [in] */ long bQueue,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszAnimation,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long lTypes);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszText,
            /* [in] */ BSTR bszUrl,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long lSpeed,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMoveCause )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisibilityCause )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HasOtherClients )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plNumOtherClients);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSoundEffectsOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSoundEffectsOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDescription )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetExtraData )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszExtraData);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowPopupMenu )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetAutoPopupMenu )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bAutoPopupMenu);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAutoPopupMenu )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbAutoPopupMenu);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpFileName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpFileName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpModeOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bHelpModeOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpModeOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbHelpModeOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpContextID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long ulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpContextID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetActive )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Listen )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bListen);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLanguageID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long langid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLanguageID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plangid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTTSModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSRModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSRModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetGUID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetOriginalSize )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Think )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszText,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVersion )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAnimationNames )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *punkEnum);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSRStatus )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plStatus);
        
        END_INTERFACE
    } IAgentCharacterExVtbl;

    interface IAgentCharacterEx
    {
        CONST_VTBL struct IAgentCharacterExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCharacterEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCharacterEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCharacterEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCharacterEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCharacterEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCharacterEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCharacterEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCharacterEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCharacterEx_SetPosition(This,lLeft,lTop)	\
    (This)->lpVtbl -> SetPosition(This,lLeft,lTop)

#define IAgentCharacterEx_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentCharacterEx_SetSize(This,lWidth,lHeight)	\
    (This)->lpVtbl -> SetSize(This,lWidth,lHeight)

#define IAgentCharacterEx_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#define IAgentCharacterEx_GetName(This,pbszName)	\
    (This)->lpVtbl -> GetName(This,pbszName)

#define IAgentCharacterEx_GetDescription(This,pbszDescription)	\
    (This)->lpVtbl -> GetDescription(This,pbszDescription)

#define IAgentCharacterEx_GetTTSSpeed(This,pdwSpeed)	\
    (This)->lpVtbl -> GetTTSSpeed(This,pdwSpeed)

#define IAgentCharacterEx_GetTTSPitch(This,pwPitch)	\
    (This)->lpVtbl -> GetTTSPitch(This,pwPitch)

#define IAgentCharacterEx_Activate(This,sState)	\
    (This)->lpVtbl -> Activate(This,sState)

#define IAgentCharacterEx_SetIdleOn(This,bOn)	\
    (This)->lpVtbl -> SetIdleOn(This,bOn)

#define IAgentCharacterEx_GetIdleOn(This,pbOn)	\
    (This)->lpVtbl -> GetIdleOn(This,pbOn)

#define IAgentCharacterEx_Prepare(This,dwType,bszName,bQueue,pdwReqID)	\
    (This)->lpVtbl -> Prepare(This,dwType,bszName,bQueue,pdwReqID)

#define IAgentCharacterEx_Play(This,bszAnimation,pdwReqID)	\
    (This)->lpVtbl -> Play(This,bszAnimation,pdwReqID)

#define IAgentCharacterEx_Stop(This,dwReqID)	\
    (This)->lpVtbl -> Stop(This,dwReqID)

#define IAgentCharacterEx_StopAll(This,lTypes)	\
    (This)->lpVtbl -> StopAll(This,lTypes)

#define IAgentCharacterEx_Wait(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Wait(This,dwReqID,pdwReqID)

#define IAgentCharacterEx_Interrupt(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Interrupt(This,dwReqID,pdwReqID)

#define IAgentCharacterEx_Show(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Show(This,bFast,pdwReqID)

#define IAgentCharacterEx_Hide(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Hide(This,bFast,pdwReqID)

#define IAgentCharacterEx_Speak(This,bszText,bszUrl,pdwReqID)	\
    (This)->lpVtbl -> Speak(This,bszText,bszUrl,pdwReqID)

#define IAgentCharacterEx_MoveTo(This,x,y,lSpeed,pdwReqID)	\
    (This)->lpVtbl -> MoveTo(This,x,y,lSpeed,pdwReqID)

#define IAgentCharacterEx_GestureAt(This,x,y,pdwReqID)	\
    (This)->lpVtbl -> GestureAt(This,x,y,pdwReqID)

#define IAgentCharacterEx_GetMoveCause(This,pdwCause)	\
    (This)->lpVtbl -> GetMoveCause(This,pdwCause)

#define IAgentCharacterEx_GetVisibilityCause(This,pdwCause)	\
    (This)->lpVtbl -> GetVisibilityCause(This,pdwCause)

#define IAgentCharacterEx_HasOtherClients(This,plNumOtherClients)	\
    (This)->lpVtbl -> HasOtherClients(This,plNumOtherClients)

#define IAgentCharacterEx_SetSoundEffectsOn(This,bOn)	\
    (This)->lpVtbl -> SetSoundEffectsOn(This,bOn)

#define IAgentCharacterEx_GetSoundEffectsOn(This,pbOn)	\
    (This)->lpVtbl -> GetSoundEffectsOn(This,pbOn)

#define IAgentCharacterEx_SetName(This,bszName)	\
    (This)->lpVtbl -> SetName(This,bszName)

#define IAgentCharacterEx_SetDescription(This,bszDescription)	\
    (This)->lpVtbl -> SetDescription(This,bszDescription)

#define IAgentCharacterEx_GetExtraData(This,pbszExtraData)	\
    (This)->lpVtbl -> GetExtraData(This,pbszExtraData)


#define IAgentCharacterEx_ShowPopupMenu(This,x,y)	\
    (This)->lpVtbl -> ShowPopupMenu(This,x,y)

#define IAgentCharacterEx_SetAutoPopupMenu(This,bAutoPopupMenu)	\
    (This)->lpVtbl -> SetAutoPopupMenu(This,bAutoPopupMenu)

#define IAgentCharacterEx_GetAutoPopupMenu(This,pbAutoPopupMenu)	\
    (This)->lpVtbl -> GetAutoPopupMenu(This,pbAutoPopupMenu)

#define IAgentCharacterEx_GetHelpFileName(This,pbszName)	\
    (This)->lpVtbl -> GetHelpFileName(This,pbszName)

#define IAgentCharacterEx_SetHelpFileName(This,bszName)	\
    (This)->lpVtbl -> SetHelpFileName(This,bszName)

#define IAgentCharacterEx_SetHelpModeOn(This,bHelpModeOn)	\
    (This)->lpVtbl -> SetHelpModeOn(This,bHelpModeOn)

#define IAgentCharacterEx_GetHelpModeOn(This,pbHelpModeOn)	\
    (This)->lpVtbl -> GetHelpModeOn(This,pbHelpModeOn)

#define IAgentCharacterEx_SetHelpContextID(This,ulID)	\
    (This)->lpVtbl -> SetHelpContextID(This,ulID)

#define IAgentCharacterEx_GetHelpContextID(This,pulID)	\
    (This)->lpVtbl -> GetHelpContextID(This,pulID)

#define IAgentCharacterEx_GetActive(This,psState)	\
    (This)->lpVtbl -> GetActive(This,psState)

#define IAgentCharacterEx_Listen(This,bListen)	\
    (This)->lpVtbl -> Listen(This,bListen)

#define IAgentCharacterEx_SetLanguageID(This,langid)	\
    (This)->lpVtbl -> SetLanguageID(This,langid)

#define IAgentCharacterEx_GetLanguageID(This,plangid)	\
    (This)->lpVtbl -> GetLanguageID(This,plangid)

#define IAgentCharacterEx_GetTTSModeID(This,pbszModeID)	\
    (This)->lpVtbl -> GetTTSModeID(This,pbszModeID)

#define IAgentCharacterEx_SetTTSModeID(This,bszModeID)	\
    (This)->lpVtbl -> SetTTSModeID(This,bszModeID)

#define IAgentCharacterEx_GetSRModeID(This,pbszModeID)	\
    (This)->lpVtbl -> GetSRModeID(This,pbszModeID)

#define IAgentCharacterEx_SetSRModeID(This,bszModeID)	\
    (This)->lpVtbl -> SetSRModeID(This,bszModeID)

#define IAgentCharacterEx_GetGUID(This,pbszID)	\
    (This)->lpVtbl -> GetGUID(This,pbszID)

#define IAgentCharacterEx_GetOriginalSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetOriginalSize(This,plWidth,plHeight)

#define IAgentCharacterEx_Think(This,bszText,pdwReqID)	\
    (This)->lpVtbl -> Think(This,bszText,pdwReqID)

#define IAgentCharacterEx_GetVersion(This,psMajor,psMinor)	\
    (This)->lpVtbl -> GetVersion(This,psMajor,psMinor)

#define IAgentCharacterEx_GetAnimationNames(This,punkEnum)	\
    (This)->lpVtbl -> GetAnimationNames(This,punkEnum)

#define IAgentCharacterEx_GetSRStatus(This,plStatus)	\
    (This)->lpVtbl -> GetSRStatus(This,plStatus)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCharacterEx_ShowPopupMenu_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y);


void __RPC_STUB IAgentCharacterEx_ShowPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetAutoPopupMenu_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long bAutoPopupMenu);


void __RPC_STUB IAgentCharacterEx_SetAutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetAutoPopupMenu_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbAutoPopupMenu);


void __RPC_STUB IAgentCharacterEx_GetAutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetHelpFileName_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszName);


void __RPC_STUB IAgentCharacterEx_GetHelpFileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetHelpFileName_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszName);


void __RPC_STUB IAgentCharacterEx_SetHelpFileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetHelpModeOn_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long bHelpModeOn);


void __RPC_STUB IAgentCharacterEx_SetHelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetHelpModeOn_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbHelpModeOn);


void __RPC_STUB IAgentCharacterEx_GetHelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetHelpContextID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long ulID);


void __RPC_STUB IAgentCharacterEx_SetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetHelpContextID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pulID);


void __RPC_STUB IAgentCharacterEx_GetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetActive_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psState);


void __RPC_STUB IAgentCharacterEx_GetActive_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_Listen_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long bListen);


void __RPC_STUB IAgentCharacterEx_Listen_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetLanguageID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long langid);


void __RPC_STUB IAgentCharacterEx_SetLanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetLanguageID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plangid);


void __RPC_STUB IAgentCharacterEx_GetLanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetTTSModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszModeID);


void __RPC_STUB IAgentCharacterEx_GetTTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetTTSModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszModeID);


void __RPC_STUB IAgentCharacterEx_SetTTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetSRModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszModeID);


void __RPC_STUB IAgentCharacterEx_GetSRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetSRModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszModeID);


void __RPC_STUB IAgentCharacterEx_SetSRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetGUID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszID);


void __RPC_STUB IAgentCharacterEx_GetGUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetOriginalSize_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentCharacterEx_GetOriginalSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_Think_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszText,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacterEx_Think_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetVersion_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psMajor,
    /* [out] */ short __RPC_FAR *psMinor);


void __RPC_STUB IAgentCharacterEx_GetVersion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetAnimationNames_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *punkEnum);


void __RPC_STUB IAgentCharacterEx_GetAnimationNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetSRStatus_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plStatus);


void __RPC_STUB IAgentCharacterEx_GetSRStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCharacterEx_INTERFACE_DEFINED__ */


#ifndef __IAgent_INTERFACE_DEFINED__
#define __IAgent_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgent
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("A7B93C91-7B81-11D0-AC5F-00C04FD97575")
    IAgent : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ VARIANT vLoadKey,
            /* [out] */ long __RPC_FAR *pdwCharID,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unload( 
            /* [in] */ long dwCharID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Register( 
            /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
            /* [out] */ long __RPC_FAR *pdwSinkID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unregister( 
            /* [in] */ long dwSinkID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCharacter( 
            /* [in] */ long dwCharID,
            /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSuspended( 
            /* [out] */ long __RPC_FAR *pbSuspended) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgent __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgent __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgent __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgent __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgent __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgent __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgent __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Load )( 
            IAgent __RPC_FAR * This,
            /* [in] */ VARIANT vLoadKey,
            /* [out] */ long __RPC_FAR *pdwCharID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unload )( 
            IAgent __RPC_FAR * This,
            /* [in] */ long dwCharID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Register )( 
            IAgent __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
            /* [out] */ long __RPC_FAR *pdwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unregister )( 
            IAgent __RPC_FAR * This,
            /* [in] */ long dwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCharacter )( 
            IAgent __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSuspended )( 
            IAgent __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbSuspended);
        
        END_INTERFACE
    } IAgentVtbl;

    interface IAgent
    {
        CONST_VTBL struct IAgentVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgent_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgent_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgent_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgent_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgent_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgent_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgent_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgent_Load(This,vLoadKey,pdwCharID,pdwReqID)	\
    (This)->lpVtbl -> Load(This,vLoadKey,pdwCharID,pdwReqID)

#define IAgent_Unload(This,dwCharID)	\
    (This)->lpVtbl -> Unload(This,dwCharID)

#define IAgent_Register(This,punkNotifySink,pdwSinkID)	\
    (This)->lpVtbl -> Register(This,punkNotifySink,pdwSinkID)

#define IAgent_Unregister(This,dwSinkID)	\
    (This)->lpVtbl -> Unregister(This,dwSinkID)

#define IAgent_GetCharacter(This,dwCharID,ppunkCharacter)	\
    (This)->lpVtbl -> GetCharacter(This,dwCharID,ppunkCharacter)

#define IAgent_GetSuspended(This,pbSuspended)	\
    (This)->lpVtbl -> GetSuspended(This,pbSuspended)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgent_Load_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ VARIANT vLoadKey,
    /* [out] */ long __RPC_FAR *pdwCharID,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgent_Load_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_Unload_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ long dwCharID);


void __RPC_STUB IAgent_Unload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_Register_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
    /* [out] */ long __RPC_FAR *pdwSinkID);


void __RPC_STUB IAgent_Register_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_Unregister_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ long dwSinkID);


void __RPC_STUB IAgent_Unregister_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_GetCharacter_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter);


void __RPC_STUB IAgent_GetCharacter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_GetSuspended_Proxy( 
    IAgent __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbSuspended);


void __RPC_STUB IAgent_GetSuspended_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgent_INTERFACE_DEFINED__ */


#ifndef __IAgentEx_INTERFACE_DEFINED__
#define __IAgentEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentEx
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("48D12BA0-5B77-11d1-9EC1-00C04FD7081F")
    IAgentEx : public IAgent
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCharacterEx( 
            /* [in] */ long dwCharID,
            /* [out] */ IAgentCharacterEx __RPC_FAR *__RPC_FAR *ppCharacterEx) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVersion( 
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ShowDefaultCharacterProperties( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long bUseDefaultPosition) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Load )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ VARIANT vLoadKey,
            /* [out] */ long __RPC_FAR *pdwCharID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unload )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwCharID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Register )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
            /* [out] */ long __RPC_FAR *pdwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unregister )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCharacter )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSuspended )( 
            IAgentEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbSuspended);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCharacterEx )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [out] */ IAgentCharacterEx __RPC_FAR *__RPC_FAR *ppCharacterEx);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVersion )( 
            IAgentEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowDefaultCharacterProperties )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long bUseDefaultPosition);
        
        END_INTERFACE
    } IAgentExVtbl;

    interface IAgentEx
    {
        CONST_VTBL struct IAgentExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentEx_Load(This,vLoadKey,pdwCharID,pdwReqID)	\
    (This)->lpVtbl -> Load(This,vLoadKey,pdwCharID,pdwReqID)

#define IAgentEx_Unload(This,dwCharID)	\
    (This)->lpVtbl -> Unload(This,dwCharID)

#define IAgentEx_Register(This,punkNotifySink,pdwSinkID)	\
    (This)->lpVtbl -> Register(This,punkNotifySink,pdwSinkID)

#define IAgentEx_Unregister(This,dwSinkID)	\
    (This)->lpVtbl -> Unregister(This,dwSinkID)

#define IAgentEx_GetCharacter(This,dwCharID,ppunkCharacter)	\
    (This)->lpVtbl -> GetCharacter(This,dwCharID,ppunkCharacter)

#define IAgentEx_GetSuspended(This,pbSuspended)	\
    (This)->lpVtbl -> GetSuspended(This,pbSuspended)


#define IAgentEx_GetCharacterEx(This,dwCharID,ppCharacterEx)	\
    (This)->lpVtbl -> GetCharacterEx(This,dwCharID,ppCharacterEx)

#define IAgentEx_GetVersion(This,psMajor,psMinor)	\
    (This)->lpVtbl -> GetVersion(This,psMajor,psMinor)

#define IAgentEx_ShowDefaultCharacterProperties(This,x,y,bUseDefaultPosition)	\
    (This)->lpVtbl -> ShowDefaultCharacterProperties(This,x,y,bUseDefaultPosition)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentEx_GetCharacterEx_Proxy( 
    IAgentEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [out] */ IAgentCharacterEx __RPC_FAR *__RPC_FAR *ppCharacterEx);


void __RPC_STUB IAgentEx_GetCharacterEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentEx_GetVersion_Proxy( 
    IAgentEx __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psMajor,
    /* [out] */ short __RPC_FAR *psMinor);


void __RPC_STUB IAgentEx_GetVersion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentEx_ShowDefaultCharacterProperties_Proxy( 
    IAgentEx __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [in] */ long bUseDefaultPosition);


void __RPC_STUB IAgentEx_ShowDefaultCharacterProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentEx_INTERFACE_DEFINED__ */


#ifndef __IAgentNotifySink_INTERFACE_DEFINED__
#define __IAgentNotifySink_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentNotifySink
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentNotifySink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("00D18159-8466-11D0-AC63-00C04FD97575")
    IAgentNotifySink : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Command( 
            /* [in] */ long dwCommandID,
            /* [in] */ IUnknown __RPC_FAR *punkUserInput) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ActivateInputState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bActivated) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Restart( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Shutdown( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE VisibleState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Click( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DblClick( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DragStart( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DragComplete( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RequestStart( 
            /* [in] */ long dwRequestID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RequestComplete( 
            /* [in] */ long dwRequestID,
            /* [in] */ long hrStatus) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BookMark( 
            /* [in] */ long dwBookMarkID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Idle( 
            /* [in] */ long dwCharID,
            /* [in] */ long bStart) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ long dwCharID,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Size( 
            /* [in] */ long dwCharID,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BalloonVisibleState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentNotifySinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentNotifySink __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [in] */ IUnknown __RPC_FAR *punkUserInput);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ActivateInputState )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bActivated);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Restart )( 
            IAgentNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Shutdown )( 
            IAgentNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *VisibleState )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Click )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DblClick )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragStart )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragComplete )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestStart )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwRequestID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestComplete )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwRequestID,
            /* [in] */ long hrStatus);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BookMark )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwBookMarkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Idle )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bStart);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Move )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Size )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BalloonVisibleState )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible);
        
        END_INTERFACE
    } IAgentNotifySinkVtbl;

    interface IAgentNotifySink
    {
        CONST_VTBL struct IAgentNotifySinkVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentNotifySink_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentNotifySink_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentNotifySink_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentNotifySink_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentNotifySink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentNotifySink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentNotifySink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentNotifySink_Command(This,dwCommandID,punkUserInput)	\
    (This)->lpVtbl -> Command(This,dwCommandID,punkUserInput)

#define IAgentNotifySink_ActivateInputState(This,dwCharID,bActivated)	\
    (This)->lpVtbl -> ActivateInputState(This,dwCharID,bActivated)

#define IAgentNotifySink_Restart(This)	\
    (This)->lpVtbl -> Restart(This)

#define IAgentNotifySink_Shutdown(This)	\
    (This)->lpVtbl -> Shutdown(This)

#define IAgentNotifySink_VisibleState(This,dwCharID,bVisible,dwCause)	\
    (This)->lpVtbl -> VisibleState(This,dwCharID,bVisible,dwCause)

#define IAgentNotifySink_Click(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> Click(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_DblClick(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DblClick(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_DragStart(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragStart(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_DragComplete(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragComplete(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_RequestStart(This,dwRequestID)	\
    (This)->lpVtbl -> RequestStart(This,dwRequestID)

#define IAgentNotifySink_RequestComplete(This,dwRequestID,hrStatus)	\
    (This)->lpVtbl -> RequestComplete(This,dwRequestID,hrStatus)

#define IAgentNotifySink_BookMark(This,dwBookMarkID)	\
    (This)->lpVtbl -> BookMark(This,dwBookMarkID)

#define IAgentNotifySink_Idle(This,dwCharID,bStart)	\
    (This)->lpVtbl -> Idle(This,dwCharID,bStart)

#define IAgentNotifySink_Move(This,dwCharID,x,y,dwCause)	\
    (This)->lpVtbl -> Move(This,dwCharID,x,y,dwCause)

#define IAgentNotifySink_Size(This,dwCharID,lWidth,lHeight)	\
    (This)->lpVtbl -> Size(This,dwCharID,lWidth,lHeight)

#define IAgentNotifySink_BalloonVisibleState(This,dwCharID,bVisible)	\
    (This)->lpVtbl -> BalloonVisibleState(This,dwCharID,bVisible)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentNotifySink_Command_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCommandID,
    /* [in] */ IUnknown __RPC_FAR *punkUserInput);


void __RPC_STUB IAgentNotifySink_Command_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_ActivateInputState_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bActivated);


void __RPC_STUB IAgentNotifySink_ActivateInputState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Restart_Proxy( 
    IAgentNotifySink __RPC_FAR * This);


void __RPC_STUB IAgentNotifySink_Restart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Shutdown_Proxy( 
    IAgentNotifySink __RPC_FAR * This);


void __RPC_STUB IAgentNotifySink_Shutdown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_VisibleState_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bVisible,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySink_VisibleState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Click_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_Click_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_DblClick_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_DblClick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_DragStart_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_DragStart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_DragComplete_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_DragComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_RequestStart_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwRequestID);


void __RPC_STUB IAgentNotifySink_RequestStart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_RequestComplete_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwRequestID,
    /* [in] */ long hrStatus);


void __RPC_STUB IAgentNotifySink_RequestComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_BookMark_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwBookMarkID);


void __RPC_STUB IAgentNotifySink_BookMark_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Idle_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bStart);


void __RPC_STUB IAgentNotifySink_Idle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Move_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long x,
    /* [in] */ long y,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySink_Move_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Size_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long lWidth,
    /* [in] */ long lHeight);


void __RPC_STUB IAgentNotifySink_Size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_BalloonVisibleState_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentNotifySink_BalloonVisibleState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentNotifySink_INTERFACE_DEFINED__ */


#ifndef __IAgentNotifySinkEx_INTERFACE_DEFINED__
#define __IAgentNotifySinkEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentNotifySinkEx
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentNotifySinkEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("08C75162-3C9C-11d1-91FE-00C04FD701A5")
    IAgentNotifySinkEx : public IAgentNotifySink
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE HelpComplete( 
            /* [in] */ long dwCharID,
            /* [in] */ long dwCommandID,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ListeningState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bListening,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DefaultCharacterChange( 
            /* [in] */ BSTR bszGUID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AgentPropertyChange( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ActiveClientChange( 
            /* [in] */ long dwCharID,
            /* [in] */ long lStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentNotifySinkExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [in] */ IUnknown __RPC_FAR *punkUserInput);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ActivateInputState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bActivated);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Restart )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Shutdown )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *VisibleState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Click )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DblClick )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragStart )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragComplete )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestStart )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwRequestID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestComplete )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwRequestID,
            /* [in] */ long hrStatus);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BookMark )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwBookMarkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Idle )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bStart);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Move )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Size )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BalloonVisibleState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HelpComplete )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long dwCommandID,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ListeningState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bListening,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DefaultCharacterChange )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ BSTR bszGUID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AgentPropertyChange )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ActiveClientChange )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long lStatus);
        
        END_INTERFACE
    } IAgentNotifySinkExVtbl;

    interface IAgentNotifySinkEx
    {
        CONST_VTBL struct IAgentNotifySinkExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentNotifySinkEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentNotifySinkEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentNotifySinkEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentNotifySinkEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentNotifySinkEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentNotifySinkEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentNotifySinkEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentNotifySinkEx_Command(This,dwCommandID,punkUserInput)	\
    (This)->lpVtbl -> Command(This,dwCommandID,punkUserInput)

#define IAgentNotifySinkEx_ActivateInputState(This,dwCharID,bActivated)	\
    (This)->lpVtbl -> ActivateInputState(This,dwCharID,bActivated)

#define IAgentNotifySinkEx_Restart(This)	\
    (This)->lpVtbl -> Restart(This)

#define IAgentNotifySinkEx_Shutdown(This)	\
    (This)->lpVtbl -> Shutdown(This)

#define IAgentNotifySinkEx_VisibleState(This,dwCharID,bVisible,dwCause)	\
    (This)->lpVtbl -> VisibleState(This,dwCharID,bVisible,dwCause)

#define IAgentNotifySinkEx_Click(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> Click(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_DblClick(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DblClick(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_DragStart(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragStart(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_DragComplete(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragComplete(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_RequestStart(This,dwRequestID)	\
    (This)->lpVtbl -> RequestStart(This,dwRequestID)

#define IAgentNotifySinkEx_RequestComplete(This,dwRequestID,hrStatus)	\
    (This)->lpVtbl -> RequestComplete(This,dwRequestID,hrStatus)

#define IAgentNotifySinkEx_BookMark(This,dwBookMarkID)	\
    (This)->lpVtbl -> BookMark(This,dwBookMarkID)

#define IAgentNotifySinkEx_Idle(This,dwCharID,bStart)	\
    (This)->lpVtbl -> Idle(This,dwCharID,bStart)

#define IAgentNotifySinkEx_Move(This,dwCharID,x,y,dwCause)	\
    (This)->lpVtbl -> Move(This,dwCharID,x,y,dwCause)

#define IAgentNotifySinkEx_Size(This,dwCharID,lWidth,lHeight)	\
    (This)->lpVtbl -> Size(This,dwCharID,lWidth,lHeight)

#define IAgentNotifySinkEx_BalloonVisibleState(This,dwCharID,bVisible)	\
    (This)->lpVtbl -> BalloonVisibleState(This,dwCharID,bVisible)


#define IAgentNotifySinkEx_HelpComplete(This,dwCharID,dwCommandID,dwCause)	\
    (This)->lpVtbl -> HelpComplete(This,dwCharID,dwCommandID,dwCause)

#define IAgentNotifySinkEx_ListeningState(This,dwCharID,bListening,dwCause)	\
    (This)->lpVtbl -> ListeningState(This,dwCharID,bListening,dwCause)

#define IAgentNotifySinkEx_DefaultCharacterChange(This,bszGUID)	\
    (This)->lpVtbl -> DefaultCharacterChange(This,bszGUID)

#define IAgentNotifySinkEx_AgentPropertyChange(This)	\
    (This)->lpVtbl -> AgentPropertyChange(This)

#define IAgentNotifySinkEx_ActiveClientChange(This,dwCharID,lStatus)	\
    (This)->lpVtbl -> ActiveClientChange(This,dwCharID,lStatus)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_HelpComplete_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long dwCommandID,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySinkEx_HelpComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_ListeningState_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bListening,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySinkEx_ListeningState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_DefaultCharacterChange_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ BSTR bszGUID);


void __RPC_STUB IAgentNotifySinkEx_DefaultCharacterChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_AgentPropertyChange_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This);


void __RPC_STUB IAgentNotifySinkEx_AgentPropertyChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_ActiveClientChange_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long lStatus);


void __RPC_STUB IAgentNotifySinkEx_ActiveClientChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentNotifySinkEx_INTERFACE_DEFINED__ */


#ifndef __IAgentPrivateNotifySink_INTERFACE_DEFINED__
#define __IAgentPrivateNotifySink_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentPrivateNotifySink
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][uuid][local][object] */ 



EXTERN_C const IID IID_IAgentPrivateNotifySink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("B741B760-8EA6-11d0-AC6A-00C04FD97575")
    IAgentPrivateNotifySink : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ReleaseAll( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseOne( 
            void __RPC_FAR *pnNotify) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetClientID( 
            DWORD __RPC_FAR *pdwClientID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentPrivateNotifySinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentPrivateNotifySink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentPrivateNotifySink __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentPrivateNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReleaseAll )( 
            IAgentPrivateNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReleaseOne )( 
            IAgentPrivateNotifySink __RPC_FAR * This,
            void __RPC_FAR *pnNotify);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetClientID )( 
            IAgentPrivateNotifySink __RPC_FAR * This,
            DWORD __RPC_FAR *pdwClientID);
        
        END_INTERFACE
    } IAgentPrivateNotifySinkVtbl;

    interface IAgentPrivateNotifySink
    {
        CONST_VTBL struct IAgentPrivateNotifySinkVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentPrivateNotifySink_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentPrivateNotifySink_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentPrivateNotifySink_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentPrivateNotifySink_ReleaseAll(This)	\
    (This)->lpVtbl -> ReleaseAll(This)

#define IAgentPrivateNotifySink_ReleaseOne(This,pnNotify)	\
    (This)->lpVtbl -> ReleaseOne(This,pnNotify)

#define IAgentPrivateNotifySink_GetClientID(This,pdwClientID)	\
    (This)->lpVtbl -> GetClientID(This,pdwClientID)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentPrivateNotifySink_ReleaseAll_Proxy( 
    IAgentPrivateNotifySink __RPC_FAR * This);


void __RPC_STUB IAgentPrivateNotifySink_ReleaseAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPrivateNotifySink_ReleaseOne_Proxy( 
    IAgentPrivateNotifySink __RPC_FAR * This,
    void __RPC_FAR *pnNotify);


void __RPC_STUB IAgentPrivateNotifySink_ReleaseOne_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPrivateNotifySink_GetClientID_Proxy( 
    IAgentPrivateNotifySink __RPC_FAR * This,
    DWORD __RPC_FAR *pdwClientID);


void __RPC_STUB IAgentPrivateNotifySink_GetClientID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentPrivateNotifySink_INTERFACE_DEFINED__ */


#ifndef __IAgentCustomMarshalMaker_INTERFACE_DEFINED__
#define __IAgentCustomMarshalMaker_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCustomMarshalMaker
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][uuid][hidden][local][object] */ 



EXTERN_C const IID IID_IAgentCustomMarshalMaker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("408D7542-C8FC-11d1-AA83-00C04FA34D72")
    IAgentCustomMarshalMaker : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Create( 
            /* [in] */ IUnknown __RPC_FAR *pSink,
            /* [in] */ REFIID riidSink,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *pMarshaledSink) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCustomMarshalMakerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCustomMarshalMaker __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCustomMarshalMaker __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCustomMarshalMaker __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Create )( 
            IAgentCustomMarshalMaker __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *pSink,
            /* [in] */ REFIID riidSink,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *pMarshaledSink);
        
        END_INTERFACE
    } IAgentCustomMarshalMakerVtbl;

    interface IAgentCustomMarshalMaker
    {
        CONST_VTBL struct IAgentCustomMarshalMakerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCustomMarshalMaker_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCustomMarshalMaker_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCustomMarshalMaker_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCustomMarshalMaker_Create(This,pSink,riidSink,pMarshaledSink)	\
    (This)->lpVtbl -> Create(This,pSink,riidSink,pMarshaledSink)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCustomMarshalMaker_Create_Proxy( 
    IAgentCustomMarshalMaker __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *pSink,
    /* [in] */ REFIID riidSink,
    /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *pMarshaledSink);


void __RPC_STUB IAgentCustomMarshalMaker_Create_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCustomMarshalMaker_INTERFACE_DEFINED__ */


#ifndef __IAgentClientStatus_INTERFACE_DEFINED__
#define __IAgentClientStatus_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentClientStatus
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][uuid][local][object] */ 



EXTERN_C const IID IID_IAgentClientStatus;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("C5649F70-7AED-11d1-B9A8-00C04FD97575")
    IAgentClientStatus : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Ping( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentClientStatusVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentClientStatus __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentClientStatus __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentClientStatus __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Ping )( 
            IAgentClientStatus __RPC_FAR * This);
        
        END_INTERFACE
    } IAgentClientStatusVtbl;

    interface IAgentClientStatus
    {
        CONST_VTBL struct IAgentClientStatusVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentClientStatus_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentClientStatus_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentClientStatus_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentClientStatus_Ping(This)	\
    (This)->lpVtbl -> Ping(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentClientStatus_Ping_Proxy( 
    IAgentClientStatus __RPC_FAR * This);


void __RPC_STUB IAgentClientStatus_Ping_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentClientStatus_INTERFACE_DEFINED__ */


/****************************************
 * Generated header for interface: __MIDL_itf_AgentServer_0156
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [local] */ 


#define	AGENT_VERSION_MAJOR	( 2 )

#define	AGENT_VERSION_MINOR	( 0 )



extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0156_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0156_v0_0_s_ifspec;


#ifndef __AgentServerObjects_LIBRARY_DEFINED__
#define __AgentServerObjects_LIBRARY_DEFINED__

/****************************************
 * Generated header for library: AgentServerObjects
 * at Mon Aug 31 17:00:38 1998
 * using MIDL 3.01.75
 ****************************************/
/* [helpstring][version][uuid] */ 





















EXTERN_C const IID LIBID_AgentServerObjects;

#ifdef __cplusplus
EXTERN_C const CLSID CLSID_AgentServer;

class DECLSPEC_UUID("D45FD2FC-5C6E-11D1-9EC1-00C04FD7081F")
AgentServer;
#endif
#endif /* __AgentServerObjects_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif

#else // _MSC_VER >= 1200

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 5.01.0164 */
/* at Tue Sep 15 16:56:07 1998
 */
/* Compiler settings for AgentServer.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __AgentServer_h__
#define __AgentServer_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __IAgentUserInput_FWD_DEFINED__
#define __IAgentUserInput_FWD_DEFINED__
typedef interface IAgentUserInput IAgentUserInput;
#endif 	/* __IAgentUserInput_FWD_DEFINED__ */


#ifndef __IAgentCommand_FWD_DEFINED__
#define __IAgentCommand_FWD_DEFINED__
typedef interface IAgentCommand IAgentCommand;
#endif 	/* __IAgentCommand_FWD_DEFINED__ */


#ifndef __IAgentCommandEx_FWD_DEFINED__
#define __IAgentCommandEx_FWD_DEFINED__
typedef interface IAgentCommandEx IAgentCommandEx;
#endif 	/* __IAgentCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCommands_FWD_DEFINED__
#define __IAgentCommands_FWD_DEFINED__
typedef interface IAgentCommands IAgentCommands;
#endif 	/* __IAgentCommands_FWD_DEFINED__ */


#ifndef __IAgentCommandsEx_FWD_DEFINED__
#define __IAgentCommandsEx_FWD_DEFINED__
typedef interface IAgentCommandsEx IAgentCommandsEx;
#endif 	/* __IAgentCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentCommandWindow_FWD_DEFINED__
#define __IAgentCommandWindow_FWD_DEFINED__
typedef interface IAgentCommandWindow IAgentCommandWindow;
#endif 	/* __IAgentCommandWindow_FWD_DEFINED__ */


#ifndef __IAgentSpeechInputProperties_FWD_DEFINED__
#define __IAgentSpeechInputProperties_FWD_DEFINED__
typedef interface IAgentSpeechInputProperties IAgentSpeechInputProperties;
#endif 	/* __IAgentSpeechInputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputProperties_FWD_DEFINED__
#define __IAgentAudioOutputProperties_FWD_DEFINED__
typedef interface IAgentAudioOutputProperties IAgentAudioOutputProperties;
#endif 	/* __IAgentAudioOutputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
#define __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
typedef interface IAgentAudioOutputPropertiesEx IAgentAudioOutputPropertiesEx;
#endif 	/* __IAgentAudioOutputPropertiesEx_FWD_DEFINED__ */


#ifndef __IAgentPropertySheet_FWD_DEFINED__
#define __IAgentPropertySheet_FWD_DEFINED__
typedef interface IAgentPropertySheet IAgentPropertySheet;
#endif 	/* __IAgentPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentBalloon_FWD_DEFINED__
#define __IAgentBalloon_FWD_DEFINED__
typedef interface IAgentBalloon IAgentBalloon;
#endif 	/* __IAgentBalloon_FWD_DEFINED__ */


#ifndef __IAgentBalloonEx_FWD_DEFINED__
#define __IAgentBalloonEx_FWD_DEFINED__
typedef interface IAgentBalloonEx IAgentBalloonEx;
#endif 	/* __IAgentBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCharacter_FWD_DEFINED__
#define __IAgentCharacter_FWD_DEFINED__
typedef interface IAgentCharacter IAgentCharacter;
#endif 	/* __IAgentCharacter_FWD_DEFINED__ */


#ifndef __IAgentCharacterEx_FWD_DEFINED__
#define __IAgentCharacterEx_FWD_DEFINED__
typedef interface IAgentCharacterEx IAgentCharacterEx;
#endif 	/* __IAgentCharacterEx_FWD_DEFINED__ */


#ifndef __IAgent_FWD_DEFINED__
#define __IAgent_FWD_DEFINED__
typedef interface IAgent IAgent;
#endif 	/* __IAgent_FWD_DEFINED__ */


#ifndef __IAgentEx_FWD_DEFINED__
#define __IAgentEx_FWD_DEFINED__
typedef interface IAgentEx IAgentEx;
#endif 	/* __IAgentEx_FWD_DEFINED__ */


#ifndef __IAgentNotifySink_FWD_DEFINED__
#define __IAgentNotifySink_FWD_DEFINED__
typedef interface IAgentNotifySink IAgentNotifySink;
#endif 	/* __IAgentNotifySink_FWD_DEFINED__ */


#ifndef __IAgentNotifySinkEx_FWD_DEFINED__
#define __IAgentNotifySinkEx_FWD_DEFINED__
typedef interface IAgentNotifySinkEx IAgentNotifySinkEx;
#endif 	/* __IAgentNotifySinkEx_FWD_DEFINED__ */


#ifndef __IAgentPrivateNotifySink_FWD_DEFINED__
#define __IAgentPrivateNotifySink_FWD_DEFINED__
typedef interface IAgentPrivateNotifySink IAgentPrivateNotifySink;
#endif 	/* __IAgentPrivateNotifySink_FWD_DEFINED__ */


#ifndef __IAgentCustomMarshalMaker_FWD_DEFINED__
#define __IAgentCustomMarshalMaker_FWD_DEFINED__
typedef interface IAgentCustomMarshalMaker IAgentCustomMarshalMaker;
#endif 	/* __IAgentCustomMarshalMaker_FWD_DEFINED__ */


#ifndef __IAgentClientStatus_FWD_DEFINED__
#define __IAgentClientStatus_FWD_DEFINED__
typedef interface IAgentClientStatus IAgentClientStatus;
#endif 	/* __IAgentClientStatus_FWD_DEFINED__ */


#ifndef __AgentServer_FWD_DEFINED__
#define __AgentServer_FWD_DEFINED__

#ifdef __cplusplus
typedef class AgentServer AgentServer;
#else
typedef struct AgentServer AgentServer;
#endif /* __cplusplus */

#endif 	/* __AgentServer_FWD_DEFINED__ */


#ifndef __IAgentUserInput_FWD_DEFINED__
#define __IAgentUserInput_FWD_DEFINED__
typedef interface IAgentUserInput IAgentUserInput;
#endif 	/* __IAgentUserInput_FWD_DEFINED__ */


#ifndef __IAgentCommand_FWD_DEFINED__
#define __IAgentCommand_FWD_DEFINED__
typedef interface IAgentCommand IAgentCommand;
#endif 	/* __IAgentCommand_FWD_DEFINED__ */


#ifndef __IAgentCommandEx_FWD_DEFINED__
#define __IAgentCommandEx_FWD_DEFINED__
typedef interface IAgentCommandEx IAgentCommandEx;
#endif 	/* __IAgentCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCommands_FWD_DEFINED__
#define __IAgentCommands_FWD_DEFINED__
typedef interface IAgentCommands IAgentCommands;
#endif 	/* __IAgentCommands_FWD_DEFINED__ */


#ifndef __IAgentCommandsEx_FWD_DEFINED__
#define __IAgentCommandsEx_FWD_DEFINED__
typedef interface IAgentCommandsEx IAgentCommandsEx;
#endif 	/* __IAgentCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentSpeechInputProperties_FWD_DEFINED__
#define __IAgentSpeechInputProperties_FWD_DEFINED__
typedef interface IAgentSpeechInputProperties IAgentSpeechInputProperties;
#endif 	/* __IAgentSpeechInputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputProperties_FWD_DEFINED__
#define __IAgentAudioOutputProperties_FWD_DEFINED__
typedef interface IAgentAudioOutputProperties IAgentAudioOutputProperties;
#endif 	/* __IAgentAudioOutputProperties_FWD_DEFINED__ */


#ifndef __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
#define __IAgentAudioOutputPropertiesEx_FWD_DEFINED__
typedef interface IAgentAudioOutputPropertiesEx IAgentAudioOutputPropertiesEx;
#endif 	/* __IAgentAudioOutputPropertiesEx_FWD_DEFINED__ */


#ifndef __IAgentPropertySheet_FWD_DEFINED__
#define __IAgentPropertySheet_FWD_DEFINED__
typedef interface IAgentPropertySheet IAgentPropertySheet;
#endif 	/* __IAgentPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentBalloon_FWD_DEFINED__
#define __IAgentBalloon_FWD_DEFINED__
typedef interface IAgentBalloon IAgentBalloon;
#endif 	/* __IAgentBalloon_FWD_DEFINED__ */


#ifndef __IAgentBalloonEx_FWD_DEFINED__
#define __IAgentBalloonEx_FWD_DEFINED__
typedef interface IAgentBalloonEx IAgentBalloonEx;
#endif 	/* __IAgentBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCharacter_FWD_DEFINED__
#define __IAgentCharacter_FWD_DEFINED__
typedef interface IAgentCharacter IAgentCharacter;
#endif 	/* __IAgentCharacter_FWD_DEFINED__ */


#ifndef __IAgentCharacterEx_FWD_DEFINED__
#define __IAgentCharacterEx_FWD_DEFINED__
typedef interface IAgentCharacterEx IAgentCharacterEx;
#endif 	/* __IAgentCharacterEx_FWD_DEFINED__ */


#ifndef __IAgent_FWD_DEFINED__
#define __IAgent_FWD_DEFINED__
typedef interface IAgent IAgent;
#endif 	/* __IAgent_FWD_DEFINED__ */


#ifndef __IAgentEx_FWD_DEFINED__
#define __IAgentEx_FWD_DEFINED__
typedef interface IAgentEx IAgentEx;
#endif 	/* __IAgentEx_FWD_DEFINED__ */


#ifndef __IAgentNotifySink_FWD_DEFINED__
#define __IAgentNotifySink_FWD_DEFINED__
typedef interface IAgentNotifySink IAgentNotifySink;
#endif 	/* __IAgentNotifySink_FWD_DEFINED__ */


#ifndef __IAgentNotifySinkEx_FWD_DEFINED__
#define __IAgentNotifySinkEx_FWD_DEFINED__
typedef interface IAgentNotifySinkEx IAgentNotifySinkEx;
#endif 	/* __IAgentNotifySinkEx_FWD_DEFINED__ */


#ifndef __IAgentCommandWindow_FWD_DEFINED__
#define __IAgentCommandWindow_FWD_DEFINED__
typedef interface IAgentCommandWindow IAgentCommandWindow;
#endif 	/* __IAgentCommandWindow_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/* interface __MIDL_itf_AgentServer_0000 */
/* [local] */ 

#define	NeverMoved	( 0 )

#define	UserMoved	( 1 )

#define	ProgramMoved	( 2 )

#define	OtherProgramMoved	( 3 )

#define	SystemMoved	( 4 )

#define	NeverShown	( 0 )

#define	UserHid	( 1 )

#define	UserShowed	( 2 )

#define	ProgramHid	( 3 )

#define	ProgramShowed	( 4 )

#define	OtherProgramHid	( 5 )

#define	OtherProgramShowed	( 6 )

#define	UserHidViaCharacterMenu	( 7 )

#define	UserHidViaTaskbarIcon	( UserHid )

#define	CSHELPCAUSE_COMMAND	( 1 )

#define	CSHELPCAUSE_OTHERPROGRAM	( 2 )

#define	CSHELPCAUSE_OPENCOMMANDSWINDOW	( 3 )

#define	CSHELPCAUSE_CLOSECOMMANDSWINDOW	( 4 )

#define	CSHELPCAUSE_SHOWCHARACTER	( 5 )

#define	CSHELPCAUSE_HIDECHARACTER	( 6 )

#define	CSHELPCAUSE_CHARACTER	( 7 )

#define	ACTIVATE_NOTTOPMOST	( 0 )

#define	ACTIVATE_TOPMOST	( 1 )

#define	ACTIVATE_NOTACTIVE	( 0 )

#define	ACTIVATE_ACTIVE	( 1 )

#define	ACTIVATE_INPUTACTIVE	( 2 )

#define	PREPARE_ANIMATION	( 0 )

#define	PREPARE_STATE	( 1 )

#define	PREPARE_WAVE	( 2 )

#define	STOP_TYPE_PLAY	( 0x1 )

#define	STOP_TYPE_MOVE	( 0x2 )

#define	STOP_TYPE_SPEAK	( 0x4 )

#define	STOP_TYPE_PREPARE	( 0x8 )

#define	STOP_TYPE_NONQUEUEDPREPARE	( 0x10 )

#define	STOP_TYPE_VISIBLE	( 0x20 )

#define	STOP_TYPE_ALL	( 0xffffffff )

#define	BALLOON_STYLE_BALLOON_ON	( 0x1 )

#define	BALLOON_STYLE_SIZETOTEXT	( 0x2 )

#define	BALLOON_STYLE_AUTOHIDE	( 0x4 )

#define	BALLOON_STYLE_AUTOPACE	( 0x8 )

#define	AUDIO_STATUS_AVAILABLE	( 0 )

#define	AUDIO_STATUS_NOAUDIO	( 1 )

#define	AUDIO_STATUS_CANTOPENAUDIO	( 2 )

#define	AUDIO_STATUS_USERSPEAKING	( 3 )

#define	AUDIO_STATUS_CHARACTERSPEAKING	( 4 )

#define	AUDIO_STATUS_SROVERRIDEABLE	( 5 )

#define	AUDIO_STATUS_ERROR	( 6 )

#define	LISTEN_STATUS_CANLISTEN	( 0 )

#define	LISTEN_STATUS_NOAUDIO	( 1 )

#define	LISTEN_STATUS_NOTACTIVE	( 2 )

#define	LISTEN_STATUS_CANTOPENAUDIO	( 3 )

#define	LISTEN_STATUS_COULDNTINITIALIZESPEECH	( 4 )

#define	LISTEN_STATUS_SPEECHDISABLED	( 5 )

#define	LISTEN_STATUS_ERROR	( 6 )

#define	MK_ICON	( 0x1000 )

#define	LSCOMPLETE_CAUSE_PROGRAMDISABLED	( 1 )

#define	LSCOMPLETE_CAUSE_PROGRAMTIMEDOUT	( 2 )

#define	LSCOMPLETE_CAUSE_USERTIMEDOUT	( 3 )

#define	LSCOMPLETE_CAUSE_USERRELEASEDKEY	( 4 )

#define	LSCOMPLETE_CAUSE_USERUTTERANCEENDED	( 5 )

#define	LSCOMPLETE_CAUSE_CLIENTDEACTIVATED	( 6 )

#define	LSCOMPLETE_CAUSE_DEFAULTCHARCHANGE	( 7 )

#define	LSCOMPLETE_CAUSE_USERDISABLED	( 8 )



extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0000_v0_0_s_ifspec;

#ifndef __IAgentUserInput_INTERFACE_DEFINED__
#define __IAgentUserInput_INTERFACE_DEFINED__

/* interface IAgentUserInput */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentUserInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C80-7B81-11D0-AC5F-00C04FD97575")
    IAgentUserInput : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ long __RPC_FAR *pdwCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemID( 
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *pdwCommandID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemConfidence( 
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *plConfidence) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetItemText( 
            /* [in] */ long dwItemIndex,
            /* [out] */ BSTR __RPC_FAR *pbszText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAllItemData( 
            /* [out] */ VARIANT __RPC_FAR *pdwItemIndices,
            /* [out] */ VARIANT __RPC_FAR *plConfidences,
            /* [out] */ VARIANT __RPC_FAR *pbszText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentUserInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentUserInput __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentUserInput __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentUserInput __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            IAgentUserInput __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemID )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *pdwCommandID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemConfidence )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ long dwItemIndex,
            /* [out] */ long __RPC_FAR *plConfidence);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetItemText )( 
            IAgentUserInput __RPC_FAR * This,
            /* [in] */ long dwItemIndex,
            /* [out] */ BSTR __RPC_FAR *pbszText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAllItemData )( 
            IAgentUserInput __RPC_FAR * This,
            /* [out] */ VARIANT __RPC_FAR *pdwItemIndices,
            /* [out] */ VARIANT __RPC_FAR *plConfidences,
            /* [out] */ VARIANT __RPC_FAR *pbszText);
        
        END_INTERFACE
    } IAgentUserInputVtbl;

    interface IAgentUserInput
    {
        CONST_VTBL struct IAgentUserInputVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentUserInput_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentUserInput_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentUserInput_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentUserInput_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentUserInput_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentUserInput_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentUserInput_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentUserInput_GetCount(This,pdwCount)	\
    (This)->lpVtbl -> GetCount(This,pdwCount)

#define IAgentUserInput_GetItemID(This,dwItemIndex,pdwCommandID)	\
    (This)->lpVtbl -> GetItemID(This,dwItemIndex,pdwCommandID)

#define IAgentUserInput_GetItemConfidence(This,dwItemIndex,plConfidence)	\
    (This)->lpVtbl -> GetItemConfidence(This,dwItemIndex,plConfidence)

#define IAgentUserInput_GetItemText(This,dwItemIndex,pbszText)	\
    (This)->lpVtbl -> GetItemText(This,dwItemIndex,pbszText)

#define IAgentUserInput_GetAllItemData(This,pdwItemIndices,plConfidences,pbszText)	\
    (This)->lpVtbl -> GetAllItemData(This,pdwItemIndices,plConfidences,pbszText)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentUserInput_GetCount_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCount);


void __RPC_STUB IAgentUserInput_GetCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetItemID_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [in] */ long dwItemIndex,
    /* [out] */ long __RPC_FAR *pdwCommandID);


void __RPC_STUB IAgentUserInput_GetItemID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetItemConfidence_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [in] */ long dwItemIndex,
    /* [out] */ long __RPC_FAR *plConfidence);


void __RPC_STUB IAgentUserInput_GetItemConfidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetItemText_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [in] */ long dwItemIndex,
    /* [out] */ BSTR __RPC_FAR *pbszText);


void __RPC_STUB IAgentUserInput_GetItemText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentUserInput_GetAllItemData_Proxy( 
    IAgentUserInput __RPC_FAR * This,
    /* [out] */ VARIANT __RPC_FAR *pdwItemIndices,
    /* [out] */ VARIANT __RPC_FAR *plConfidences,
    /* [out] */ VARIANT __RPC_FAR *pbszText);


void __RPC_STUB IAgentUserInput_GetAllItemData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentUserInput_INTERFACE_DEFINED__ */


#ifndef __IAgentCommand_INTERFACE_DEFINED__
#define __IAgentCommand_INTERFACE_DEFINED__

/* interface IAgentCommand */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCommand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C83-7B81-11D0-AC5F-00C04FD97575")
    IAgentCommand : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetCaption( 
            /* [in] */ BSTR bszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCaption( 
            /* [out] */ BSTR __RPC_FAR *pbszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoice( 
            /* [in] */ BSTR bszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoice( 
            /* [out] */ BSTR __RPC_FAR *pbszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEnabled( 
            /* [in] */ long bEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetConfidenceThreshold( 
            /* [in] */ long lThreshold) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConfidenceThreshold( 
            /* [out] */ long __RPC_FAR *plThreshold) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetConfidenceText( 
            /* [in] */ BSTR bszTipText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConfidenceText( 
            /* [out] */ BSTR __RPC_FAR *pbszTipText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetID( 
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEnabled )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ long bEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceThreshold )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ long lThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceThreshold )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceText )( 
            IAgentCommand __RPC_FAR * This,
            /* [in] */ BSTR bszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceText )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetID )( 
            IAgentCommand __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwID);
        
        END_INTERFACE
    } IAgentCommandVtbl;

    interface IAgentCommand
    {
        CONST_VTBL struct IAgentCommandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommand_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommand_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommand_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommand_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommand_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommand_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommand_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommand_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommand_SetEnabled(This,bEnabled)	\
    (This)->lpVtbl -> SetEnabled(This,bEnabled)

#define IAgentCommand_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentCommand_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommand_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommand_SetConfidenceThreshold(This,lThreshold)	\
    (This)->lpVtbl -> SetConfidenceThreshold(This,lThreshold)

#define IAgentCommand_GetConfidenceThreshold(This,plThreshold)	\
    (This)->lpVtbl -> GetConfidenceThreshold(This,plThreshold)

#define IAgentCommand_SetConfidenceText(This,bszTipText)	\
    (This)->lpVtbl -> SetConfidenceText(This,bszTipText)

#define IAgentCommand_GetConfidenceText(This,pbszTipText)	\
    (This)->lpVtbl -> GetConfidenceText(This,pbszTipText)

#define IAgentCommand_GetID(This,pdwID)	\
    (This)->lpVtbl -> GetID(This,pdwID)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommand_SetCaption_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ BSTR bszCaption);


void __RPC_STUB IAgentCommand_SetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetCaption_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszCaption);


void __RPC_STUB IAgentCommand_GetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetVoice_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ BSTR bszVoice);


void __RPC_STUB IAgentCommand_SetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetVoice_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszVoice);


void __RPC_STUB IAgentCommand_GetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetEnabled_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ long bEnabled);


void __RPC_STUB IAgentCommand_SetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetEnabled_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentCommand_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetVisible_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentCommand_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetVisible_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCommand_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetConfidenceThreshold_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ long lThreshold);


void __RPC_STUB IAgentCommand_SetConfidenceThreshold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetConfidenceThreshold_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plThreshold);


void __RPC_STUB IAgentCommand_GetConfidenceThreshold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_SetConfidenceText_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [in] */ BSTR bszTipText);


void __RPC_STUB IAgentCommand_SetConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetConfidenceText_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszTipText);


void __RPC_STUB IAgentCommand_GetConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommand_GetID_Proxy( 
    IAgentCommand __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommand_GetID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommand_INTERFACE_DEFINED__ */


#ifndef __IAgentCommandEx_INTERFACE_DEFINED__
#define __IAgentCommandEx_INTERFACE_DEFINED__

/* interface IAgentCommandEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCommandEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B0913412-3B44-11d1-ACBA-00C04FD97575")
    IAgentCommandEx : public IAgentCommand
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetHelpContextID( 
            /* [in] */ long ulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpContextID( 
            /* [out] */ long __RPC_FAR *pulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoiceCaption( 
            /* [in] */ BSTR bszVoiceCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoiceCaption( 
            /* [out] */ BSTR __RPC_FAR *pbszVoiceCaption) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommandEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommandEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEnabled )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long bEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceThreshold )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long lThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceThreshold )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plThreshold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetConfidenceText )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConfidenceText )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszTipText);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetID )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpContextID )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ long ulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpContextID )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoiceCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoiceCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoiceCaption )( 
            IAgentCommandEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoiceCaption);
        
        END_INTERFACE
    } IAgentCommandExVtbl;

    interface IAgentCommandEx
    {
        CONST_VTBL struct IAgentCommandExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommandEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommandEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommandEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommandEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommandEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommandEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommandEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommandEx_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommandEx_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommandEx_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommandEx_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommandEx_SetEnabled(This,bEnabled)	\
    (This)->lpVtbl -> SetEnabled(This,bEnabled)

#define IAgentCommandEx_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentCommandEx_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommandEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommandEx_SetConfidenceThreshold(This,lThreshold)	\
    (This)->lpVtbl -> SetConfidenceThreshold(This,lThreshold)

#define IAgentCommandEx_GetConfidenceThreshold(This,plThreshold)	\
    (This)->lpVtbl -> GetConfidenceThreshold(This,plThreshold)

#define IAgentCommandEx_SetConfidenceText(This,bszTipText)	\
    (This)->lpVtbl -> SetConfidenceText(This,bszTipText)

#define IAgentCommandEx_GetConfidenceText(This,pbszTipText)	\
    (This)->lpVtbl -> GetConfidenceText(This,pbszTipText)

#define IAgentCommandEx_GetID(This,pdwID)	\
    (This)->lpVtbl -> GetID(This,pdwID)


#define IAgentCommandEx_SetHelpContextID(This,ulID)	\
    (This)->lpVtbl -> SetHelpContextID(This,ulID)

#define IAgentCommandEx_GetHelpContextID(This,pulID)	\
    (This)->lpVtbl -> GetHelpContextID(This,pulID)

#define IAgentCommandEx_SetVoiceCaption(This,bszVoiceCaption)	\
    (This)->lpVtbl -> SetVoiceCaption(This,bszVoiceCaption)

#define IAgentCommandEx_GetVoiceCaption(This,pbszVoiceCaption)	\
    (This)->lpVtbl -> GetVoiceCaption(This,pbszVoiceCaption)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommandEx_SetHelpContextID_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [in] */ long ulID);


void __RPC_STUB IAgentCommandEx_SetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandEx_GetHelpContextID_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pulID);


void __RPC_STUB IAgentCommandEx_GetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandEx_SetVoiceCaption_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [in] */ BSTR bszVoiceCaption);


void __RPC_STUB IAgentCommandEx_SetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandEx_GetVoiceCaption_Proxy( 
    IAgentCommandEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszVoiceCaption);


void __RPC_STUB IAgentCommandEx_GetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommandEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCommands_INTERFACE_DEFINED__
#define __IAgentCommands_INTERFACE_DEFINED__

/* interface IAgentCommands */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCommands;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C85-7B81-11D0-AC5F-00C04FD97575")
    IAgentCommands : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCommand( 
            /* [in] */ long dwCommandID,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ long __RPC_FAR *pdwCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCaption( 
            /* [in] */ BSTR bszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCaption( 
            /* [out] */ BSTR __RPC_FAR *pbszCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoice( 
            /* [in] */ BSTR bszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoice( 
            /* [out] */ BSTR __RPC_FAR *pbszVoice) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ long dwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommands __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommands __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommand )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommands __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCommands __RPC_FAR * This,
            /* [in] */ long dwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCommands __RPC_FAR * This);
        
        END_INTERFACE
    } IAgentCommandsVtbl;

    interface IAgentCommands
    {
        CONST_VTBL struct IAgentCommandsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommands_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommands_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommands_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommands_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommands_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommands_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommands_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommands_GetCommand(This,dwCommandID,ppunkCommand)	\
    (This)->lpVtbl -> GetCommand(This,dwCommandID,ppunkCommand)

#define IAgentCommands_GetCount(This,pdwCount)	\
    (This)->lpVtbl -> GetCount(This,pdwCount)

#define IAgentCommands_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommands_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommands_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommands_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommands_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommands_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommands_Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)	\
    (This)->lpVtbl -> Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)

#define IAgentCommands_Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)	\
    (This)->lpVtbl -> Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)

#define IAgentCommands_Remove(This,dwID)	\
    (This)->lpVtbl -> Remove(This,dwID)

#define IAgentCommands_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommands_GetCommand_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ long dwCommandID,
    /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand);


void __RPC_STUB IAgentCommands_GetCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetCount_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCount);


void __RPC_STUB IAgentCommands_GetCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_SetCaption_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszCaption);


void __RPC_STUB IAgentCommands_SetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetCaption_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszCaption);


void __RPC_STUB IAgentCommands_GetCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_SetVoice_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszVoice);


void __RPC_STUB IAgentCommands_SetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetVoice_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszVoice);


void __RPC_STUB IAgentCommands_GetVoice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_SetVisible_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentCommands_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_GetVisible_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCommands_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_Add_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommands_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_Insert_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [in] */ long dwRefID,
    /* [in] */ long bBefore,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommands_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_Remove_Proxy( 
    IAgentCommands __RPC_FAR * This,
    /* [in] */ long dwID);


void __RPC_STUB IAgentCommands_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommands_RemoveAll_Proxy( 
    IAgentCommands __RPC_FAR * This);


void __RPC_STUB IAgentCommands_RemoveAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommands_INTERFACE_DEFINED__ */


#ifndef __IAgentCommandsEx_INTERFACE_DEFINED__
#define __IAgentCommandsEx_INTERFACE_DEFINED__

/* interface IAgentCommandsEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCommandsEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6BA90C00-3910-11d1-ACB3-00C04FD97575")
    IAgentCommandsEx : public IAgentCommands
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCommandEx( 
            /* [in] */ long dwCommandID,
            /* [out] */ IAgentCommandEx __RPC_FAR *__RPC_FAR *ppCommandEx) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDefaultID( 
            /* [in] */ long dwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultID( 
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpContextID( 
            /* [in] */ long ulHelpID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpContextID( 
            /* [out] */ long __RPC_FAR *pulHelpID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontName( 
            /* [in] */ BSTR bszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontName( 
            /* [out] */ BSTR __RPC_FAR *pbszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontSize( 
            /* [in] */ long lFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontSize( 
            /* [out] */ long __RPC_FAR *lFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVoiceCaption( 
            /* [in] */ BSTR bszVoiceCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVoiceCaption( 
            /* [out] */ BSTR __RPC_FAR *bszVoiceCaption) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddEx( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertEx( 
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetGlobalVoiceCommandsEnabled( 
            /* [in] */ long bEnable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGlobalVoiceCommandsEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandsExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommandsEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommandsEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommand )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkCommand);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCount )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoice )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoice )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszVoice);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCommandsEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCommandEx )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [out] */ IAgentCommandEx __RPC_FAR *__RPC_FAR *ppCommandEx);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDefaultID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long dwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDefaultID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpContextID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long ulHelpID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpContextID )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pulHelpID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontName )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontName )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontSize )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontSize )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVoiceCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszVoiceCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVoiceCaption )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *bszVoiceCaption);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AddEx )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InsertEx )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR bszCaption,
            /* [in] */ BSTR bszVoice,
            /* [in] */ BSTR bszVoiceCaption,
            /* [in] */ long bEnabled,
            /* [in] */ long bVisible,
            /* [in] */ long ulHelpId,
            /* [in] */ long dwRefID,
            /* [in] */ long bBefore,
            /* [out] */ long __RPC_FAR *pdwID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetGlobalVoiceCommandsEnabled )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [in] */ long bEnable);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetGlobalVoiceCommandsEnabled )( 
            IAgentCommandsEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        END_INTERFACE
    } IAgentCommandsExVtbl;

    interface IAgentCommandsEx
    {
        CONST_VTBL struct IAgentCommandsExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommandsEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommandsEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommandsEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommandsEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommandsEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommandsEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommandsEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommandsEx_GetCommand(This,dwCommandID,ppunkCommand)	\
    (This)->lpVtbl -> GetCommand(This,dwCommandID,ppunkCommand)

#define IAgentCommandsEx_GetCount(This,pdwCount)	\
    (This)->lpVtbl -> GetCount(This,pdwCount)

#define IAgentCommandsEx_SetCaption(This,bszCaption)	\
    (This)->lpVtbl -> SetCaption(This,bszCaption)

#define IAgentCommandsEx_GetCaption(This,pbszCaption)	\
    (This)->lpVtbl -> GetCaption(This,pbszCaption)

#define IAgentCommandsEx_SetVoice(This,bszVoice)	\
    (This)->lpVtbl -> SetVoice(This,bszVoice)

#define IAgentCommandsEx_GetVoice(This,pbszVoice)	\
    (This)->lpVtbl -> GetVoice(This,pbszVoice)

#define IAgentCommandsEx_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommandsEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommandsEx_Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)	\
    (This)->lpVtbl -> Add(This,bszCaption,bszVoice,bEnabled,bVisible,pdwID)

#define IAgentCommandsEx_Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)	\
    (This)->lpVtbl -> Insert(This,bszCaption,bszVoice,bEnabled,bVisible,dwRefID,bBefore,pdwID)

#define IAgentCommandsEx_Remove(This,dwID)	\
    (This)->lpVtbl -> Remove(This,dwID)

#define IAgentCommandsEx_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)


#define IAgentCommandsEx_GetCommandEx(This,dwCommandID,ppCommandEx)	\
    (This)->lpVtbl -> GetCommandEx(This,dwCommandID,ppCommandEx)

#define IAgentCommandsEx_SetDefaultID(This,dwID)	\
    (This)->lpVtbl -> SetDefaultID(This,dwID)

#define IAgentCommandsEx_GetDefaultID(This,pdwID)	\
    (This)->lpVtbl -> GetDefaultID(This,pdwID)

#define IAgentCommandsEx_SetHelpContextID(This,ulHelpID)	\
    (This)->lpVtbl -> SetHelpContextID(This,ulHelpID)

#define IAgentCommandsEx_GetHelpContextID(This,pulHelpID)	\
    (This)->lpVtbl -> GetHelpContextID(This,pulHelpID)

#define IAgentCommandsEx_SetFontName(This,bszFontName)	\
    (This)->lpVtbl -> SetFontName(This,bszFontName)

#define IAgentCommandsEx_GetFontName(This,pbszFontName)	\
    (This)->lpVtbl -> GetFontName(This,pbszFontName)

#define IAgentCommandsEx_SetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> SetFontSize(This,lFontSize)

#define IAgentCommandsEx_GetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> GetFontSize(This,lFontSize)

#define IAgentCommandsEx_SetVoiceCaption(This,bszVoiceCaption)	\
    (This)->lpVtbl -> SetVoiceCaption(This,bszVoiceCaption)

#define IAgentCommandsEx_GetVoiceCaption(This,bszVoiceCaption)	\
    (This)->lpVtbl -> GetVoiceCaption(This,bszVoiceCaption)

#define IAgentCommandsEx_AddEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,pdwID)	\
    (This)->lpVtbl -> AddEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,pdwID)

#define IAgentCommandsEx_InsertEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,dwRefID,bBefore,pdwID)	\
    (This)->lpVtbl -> InsertEx(This,bszCaption,bszVoice,bszVoiceCaption,bEnabled,bVisible,ulHelpId,dwRefID,bBefore,pdwID)

#define IAgentCommandsEx_SetGlobalVoiceCommandsEnabled(This,bEnable)	\
    (This)->lpVtbl -> SetGlobalVoiceCommandsEnabled(This,bEnable)

#define IAgentCommandsEx_GetGlobalVoiceCommandsEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetGlobalVoiceCommandsEnabled(This,pbEnabled)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetCommandEx_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long dwCommandID,
    /* [out] */ IAgentCommandEx __RPC_FAR *__RPC_FAR *ppCommandEx);


void __RPC_STUB IAgentCommandsEx_GetCommandEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetDefaultID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long dwID);


void __RPC_STUB IAgentCommandsEx_SetDefaultID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetDefaultID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommandsEx_GetDefaultID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetHelpContextID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long ulHelpID);


void __RPC_STUB IAgentCommandsEx_SetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetHelpContextID_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pulHelpID);


void __RPC_STUB IAgentCommandsEx_GetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetFontName_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszFontName);


void __RPC_STUB IAgentCommandsEx_SetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetFontName_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszFontName);


void __RPC_STUB IAgentCommandsEx_GetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetFontSize_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long lFontSize);


void __RPC_STUB IAgentCommandsEx_SetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetFontSize_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *lFontSize);


void __RPC_STUB IAgentCommandsEx_GetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetVoiceCaption_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszVoiceCaption);


void __RPC_STUB IAgentCommandsEx_SetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetVoiceCaption_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *bszVoiceCaption);


void __RPC_STUB IAgentCommandsEx_GetVoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_AddEx_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ BSTR bszVoiceCaption,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [in] */ long ulHelpId,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommandsEx_AddEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_InsertEx_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR bszCaption,
    /* [in] */ BSTR bszVoice,
    /* [in] */ BSTR bszVoiceCaption,
    /* [in] */ long bEnabled,
    /* [in] */ long bVisible,
    /* [in] */ long ulHelpId,
    /* [in] */ long dwRefID,
    /* [in] */ long bBefore,
    /* [out] */ long __RPC_FAR *pdwID);


void __RPC_STUB IAgentCommandsEx_InsertEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_SetGlobalVoiceCommandsEnabled_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [in] */ long bEnable);


void __RPC_STUB IAgentCommandsEx_SetGlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandsEx_GetGlobalVoiceCommandsEnabled_Proxy( 
    IAgentCommandsEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentCommandsEx_GetGlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommandsEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCommandWindow_INTERFACE_DEFINED__
#define __IAgentCommandWindow_INTERFACE_DEFINED__

/* interface IAgentCommandWindow */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCommandWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6D0ECB23-9968-11D0-AC6E-00C04FD97575")
    IAgentCommandWindow : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCommandWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCommandWindow __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCommandWindow __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentCommandWindow __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        END_INTERFACE
    } IAgentCommandWindowVtbl;

    interface IAgentCommandWindow
    {
        CONST_VTBL struct IAgentCommandWindowVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCommandWindow_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCommandWindow_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCommandWindow_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCommandWindow_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCommandWindow_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCommandWindow_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCommandWindow_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCommandWindow_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentCommandWindow_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCommandWindow_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentCommandWindow_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCommandWindow_SetVisible_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentCommandWindow_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandWindow_GetVisible_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCommandWindow_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandWindow_GetPosition_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLeft,
    /* [out] */ long __RPC_FAR *plTop);


void __RPC_STUB IAgentCommandWindow_GetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCommandWindow_GetSize_Proxy( 
    IAgentCommandWindow __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentCommandWindow_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCommandWindow_INTERFACE_DEFINED__ */


#ifndef __IAgentSpeechInputProperties_INTERFACE_DEFINED__
#define __IAgentSpeechInputProperties_INTERFACE_DEFINED__

/* interface IAgentSpeechInputProperties */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentSpeechInputProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C87-7B81-11D0-AC5F-00C04FD97575")
    IAgentSpeechInputProperties : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetInstalled( 
            /* [out] */ long __RPC_FAR *pbInstalled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHotKey( 
            /* [out] */ BSTR __RPC_FAR *pbszHotCharKey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLCID( 
            /* [out] */ LCID __RPC_FAR *plcidCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEngine( 
            /* [out] */ BSTR __RPC_FAR *pbszEngine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEngine( 
            /* [in] */ BSTR bszEngine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetListeningTip( 
            /* [out] */ long __RPC_FAR *pbListeningTip) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentSpeechInputPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentSpeechInputProperties __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentSpeechInputProperties __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetInstalled )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbInstalled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHotKey )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszHotCharKey);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLCID )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ LCID __RPC_FAR *plcidCurrent);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEngine )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszEngine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetEngine )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [in] */ BSTR bszEngine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetListeningTip )( 
            IAgentSpeechInputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbListeningTip);
        
        END_INTERFACE
    } IAgentSpeechInputPropertiesVtbl;

    interface IAgentSpeechInputProperties
    {
        CONST_VTBL struct IAgentSpeechInputPropertiesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentSpeechInputProperties_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentSpeechInputProperties_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentSpeechInputProperties_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentSpeechInputProperties_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentSpeechInputProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentSpeechInputProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentSpeechInputProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentSpeechInputProperties_GetInstalled(This,pbInstalled)	\
    (This)->lpVtbl -> GetInstalled(This,pbInstalled)

#define IAgentSpeechInputProperties_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentSpeechInputProperties_GetHotKey(This,pbszHotCharKey)	\
    (This)->lpVtbl -> GetHotKey(This,pbszHotCharKey)

#define IAgentSpeechInputProperties_GetLCID(This,plcidCurrent)	\
    (This)->lpVtbl -> GetLCID(This,plcidCurrent)

#define IAgentSpeechInputProperties_GetEngine(This,pbszEngine)	\
    (This)->lpVtbl -> GetEngine(This,pbszEngine)

#define IAgentSpeechInputProperties_SetEngine(This,bszEngine)	\
    (This)->lpVtbl -> SetEngine(This,bszEngine)

#define IAgentSpeechInputProperties_GetListeningTip(This,pbListeningTip)	\
    (This)->lpVtbl -> GetListeningTip(This,pbListeningTip)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetInstalled_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbInstalled);


void __RPC_STUB IAgentSpeechInputProperties_GetInstalled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetEnabled_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentSpeechInputProperties_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetHotKey_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszHotCharKey);


void __RPC_STUB IAgentSpeechInputProperties_GetHotKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetLCID_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ LCID __RPC_FAR *plcidCurrent);


void __RPC_STUB IAgentSpeechInputProperties_GetLCID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetEngine_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszEngine);


void __RPC_STUB IAgentSpeechInputProperties_GetEngine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_SetEngine_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [in] */ BSTR bszEngine);


void __RPC_STUB IAgentSpeechInputProperties_SetEngine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentSpeechInputProperties_GetListeningTip_Proxy( 
    IAgentSpeechInputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbListeningTip);


void __RPC_STUB IAgentSpeechInputProperties_GetListeningTip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentSpeechInputProperties_INTERFACE_DEFINED__ */


#ifndef __IAgentAudioOutputProperties_INTERFACE_DEFINED__
#define __IAgentAudioOutputProperties_INTERFACE_DEFINED__

/* interface IAgentAudioOutputProperties */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentAudioOutputProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C89-7B81-11D0-AC5F-00C04FD97575")
    IAgentAudioOutputProperties : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetUsingSoundEffects( 
            /* [out] */ long __RPC_FAR *pbUsingSoundEffects) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentAudioOutputPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentAudioOutputProperties __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentAudioOutputProperties __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUsingSoundEffects )( 
            IAgentAudioOutputProperties __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbUsingSoundEffects);
        
        END_INTERFACE
    } IAgentAudioOutputPropertiesVtbl;

    interface IAgentAudioOutputProperties
    {
        CONST_VTBL struct IAgentAudioOutputPropertiesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentAudioOutputProperties_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentAudioOutputProperties_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentAudioOutputProperties_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentAudioOutputProperties_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentAudioOutputProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentAudioOutputProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentAudioOutputProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentAudioOutputProperties_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentAudioOutputProperties_GetUsingSoundEffects(This,pbUsingSoundEffects)	\
    (This)->lpVtbl -> GetUsingSoundEffects(This,pbUsingSoundEffects)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentAudioOutputProperties_GetEnabled_Proxy( 
    IAgentAudioOutputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentAudioOutputProperties_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentAudioOutputProperties_GetUsingSoundEffects_Proxy( 
    IAgentAudioOutputProperties __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbUsingSoundEffects);


void __RPC_STUB IAgentAudioOutputProperties_GetUsingSoundEffects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentAudioOutputProperties_INTERFACE_DEFINED__ */


#ifndef __IAgentAudioOutputPropertiesEx_INTERFACE_DEFINED__
#define __IAgentAudioOutputPropertiesEx_INTERFACE_DEFINED__

/* interface IAgentAudioOutputPropertiesEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentAudioOutputPropertiesEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93CA0-7B81-11D0-AC5F-00C04FD97575")
    IAgentAudioOutputPropertiesEx : public IAgentAudioOutputProperties
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetStatus( 
            /* [out] */ long __RPC_FAR *plStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentAudioOutputPropertiesExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUsingSoundEffects )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbUsingSoundEffects);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetStatus )( 
            IAgentAudioOutputPropertiesEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plStatus);
        
        END_INTERFACE
    } IAgentAudioOutputPropertiesExVtbl;

    interface IAgentAudioOutputPropertiesEx
    {
        CONST_VTBL struct IAgentAudioOutputPropertiesExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentAudioOutputPropertiesEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentAudioOutputPropertiesEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentAudioOutputPropertiesEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentAudioOutputPropertiesEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentAudioOutputPropertiesEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentAudioOutputPropertiesEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentAudioOutputPropertiesEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentAudioOutputPropertiesEx_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentAudioOutputPropertiesEx_GetUsingSoundEffects(This,pbUsingSoundEffects)	\
    (This)->lpVtbl -> GetUsingSoundEffects(This,pbUsingSoundEffects)


#define IAgentAudioOutputPropertiesEx_GetStatus(This,plStatus)	\
    (This)->lpVtbl -> GetStatus(This,plStatus)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentAudioOutputPropertiesEx_GetStatus_Proxy( 
    IAgentAudioOutputPropertiesEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plStatus);


void __RPC_STUB IAgentAudioOutputPropertiesEx_GetStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentAudioOutputPropertiesEx_INTERFACE_DEFINED__ */


#ifndef __IAgentPropertySheet_INTERFACE_DEFINED__
#define __IAgentPropertySheet_INTERFACE_DEFINED__

/* interface IAgentPropertySheet */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentPropertySheet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C8B-7B81-11D0-AC5F-00C04FD97575")
    IAgentPropertySheet : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPage( 
            /* [out] */ BSTR __RPC_FAR *pbszPage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPage( 
            /* [in] */ BSTR bszPage) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentPropertySheetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentPropertySheet __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentPropertySheet __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPage )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszPage);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPage )( 
            IAgentPropertySheet __RPC_FAR * This,
            /* [in] */ BSTR bszPage);
        
        END_INTERFACE
    } IAgentPropertySheetVtbl;

    interface IAgentPropertySheet
    {
        CONST_VTBL struct IAgentPropertySheetVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentPropertySheet_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentPropertySheet_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentPropertySheet_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentPropertySheet_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentPropertySheet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentPropertySheet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentPropertySheet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentPropertySheet_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentPropertySheet_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentPropertySheet_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentPropertySheet_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#define IAgentPropertySheet_GetPage(This,pbszPage)	\
    (This)->lpVtbl -> GetPage(This,pbszPage)

#define IAgentPropertySheet_SetPage(This,bszPage)	\
    (This)->lpVtbl -> SetPage(This,bszPage)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetVisible_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentPropertySheet_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_SetVisible_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentPropertySheet_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetPosition_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLeft,
    /* [out] */ long __RPC_FAR *plTop);


void __RPC_STUB IAgentPropertySheet_GetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetSize_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentPropertySheet_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_GetPage_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszPage);


void __RPC_STUB IAgentPropertySheet_GetPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPropertySheet_SetPage_Proxy( 
    IAgentPropertySheet __RPC_FAR * This,
    /* [in] */ BSTR bszPage);


void __RPC_STUB IAgentPropertySheet_SetPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentPropertySheet_INTERFACE_DEFINED__ */


#ifndef __IAgentBalloon_INTERFACE_DEFINED__
#define __IAgentBalloon_INTERFACE_DEFINED__

/* interface IAgentBalloon */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentBalloon;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C8D-7B81-11D0-AC5F-00C04FD97575")
    IAgentBalloon : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEnabled( 
            /* [out] */ long __RPC_FAR *pbEnabled) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumLines( 
            /* [out] */ long __RPC_FAR *plLines) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumCharsPerLine( 
            /* [out] */ long __RPC_FAR *plCharsPerLine) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontName( 
            /* [out] */ BSTR __RPC_FAR *pbszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontSize( 
            /* [out] */ long __RPC_FAR *plFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontBold( 
            /* [out] */ long __RPC_FAR *pbFontBold) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontItalic( 
            /* [out] */ long __RPC_FAR *pbFontItalic) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontStrikethru( 
            /* [out] */ long __RPC_FAR *pbFontStrikethru) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontUnderline( 
            /* [out] */ long __RPC_FAR *pbFontUnderline) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetForeColor( 
            /* [out] */ long __RPC_FAR *plFGColor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBackColor( 
            /* [out] */ long __RPC_FAR *plBGColor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBorderColor( 
            /* [out] */ long __RPC_FAR *plBorderColor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetVisible( 
            /* [in] */ long bVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontName( 
            /* [in] */ BSTR bszFontName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontSize( 
            /* [in] */ long lFontSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFontCharSet( 
            /* [in] */ short sFontCharSet) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFontCharSet( 
            /* [out] */ short __RPC_FAR *psFontCharSet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentBalloonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentBalloon __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentBalloon __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumLines )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLines);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumCharsPerLine )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plCharsPerLine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontName )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontSize )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontBold )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontBold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontItalic )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontItalic);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontStrikethru )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontStrikethru);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontUnderline )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontUnderline);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetForeColor )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBackColor )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBorderColor )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBorderColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontName )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ BSTR bszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontSize )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ long lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontCharSet )( 
            IAgentBalloon __RPC_FAR * This,
            /* [in] */ short sFontCharSet);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontCharSet )( 
            IAgentBalloon __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psFontCharSet);
        
        END_INTERFACE
    } IAgentBalloonVtbl;

    interface IAgentBalloon
    {
        CONST_VTBL struct IAgentBalloonVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentBalloon_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentBalloon_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentBalloon_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentBalloon_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentBalloon_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentBalloon_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentBalloon_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentBalloon_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentBalloon_GetNumLines(This,plLines)	\
    (This)->lpVtbl -> GetNumLines(This,plLines)

#define IAgentBalloon_GetNumCharsPerLine(This,plCharsPerLine)	\
    (This)->lpVtbl -> GetNumCharsPerLine(This,plCharsPerLine)

#define IAgentBalloon_GetFontName(This,pbszFontName)	\
    (This)->lpVtbl -> GetFontName(This,pbszFontName)

#define IAgentBalloon_GetFontSize(This,plFontSize)	\
    (This)->lpVtbl -> GetFontSize(This,plFontSize)

#define IAgentBalloon_GetFontBold(This,pbFontBold)	\
    (This)->lpVtbl -> GetFontBold(This,pbFontBold)

#define IAgentBalloon_GetFontItalic(This,pbFontItalic)	\
    (This)->lpVtbl -> GetFontItalic(This,pbFontItalic)

#define IAgentBalloon_GetFontStrikethru(This,pbFontStrikethru)	\
    (This)->lpVtbl -> GetFontStrikethru(This,pbFontStrikethru)

#define IAgentBalloon_GetFontUnderline(This,pbFontUnderline)	\
    (This)->lpVtbl -> GetFontUnderline(This,pbFontUnderline)

#define IAgentBalloon_GetForeColor(This,plFGColor)	\
    (This)->lpVtbl -> GetForeColor(This,plFGColor)

#define IAgentBalloon_GetBackColor(This,plBGColor)	\
    (This)->lpVtbl -> GetBackColor(This,plBGColor)

#define IAgentBalloon_GetBorderColor(This,plBorderColor)	\
    (This)->lpVtbl -> GetBorderColor(This,plBorderColor)

#define IAgentBalloon_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentBalloon_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentBalloon_SetFontName(This,bszFontName)	\
    (This)->lpVtbl -> SetFontName(This,bszFontName)

#define IAgentBalloon_SetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> SetFontSize(This,lFontSize)

#define IAgentBalloon_SetFontCharSet(This,sFontCharSet)	\
    (This)->lpVtbl -> SetFontCharSet(This,sFontCharSet)

#define IAgentBalloon_GetFontCharSet(This,psFontCharSet)	\
    (This)->lpVtbl -> GetFontCharSet(This,psFontCharSet)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentBalloon_GetEnabled_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbEnabled);


void __RPC_STUB IAgentBalloon_GetEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetNumLines_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLines);


void __RPC_STUB IAgentBalloon_GetNumLines_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetNumCharsPerLine_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plCharsPerLine);


void __RPC_STUB IAgentBalloon_GetNumCharsPerLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontName_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszFontName);


void __RPC_STUB IAgentBalloon_GetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontSize_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plFontSize);


void __RPC_STUB IAgentBalloon_GetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontBold_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontBold);


void __RPC_STUB IAgentBalloon_GetFontBold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontItalic_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontItalic);


void __RPC_STUB IAgentBalloon_GetFontItalic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontStrikethru_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontStrikethru);


void __RPC_STUB IAgentBalloon_GetFontStrikethru_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontUnderline_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbFontUnderline);


void __RPC_STUB IAgentBalloon_GetFontUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetForeColor_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plFGColor);


void __RPC_STUB IAgentBalloon_GetForeColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetBackColor_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plBGColor);


void __RPC_STUB IAgentBalloon_GetBackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetBorderColor_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plBorderColor);


void __RPC_STUB IAgentBalloon_GetBorderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetVisible_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentBalloon_SetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetVisible_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentBalloon_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetFontName_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ BSTR bszFontName);


void __RPC_STUB IAgentBalloon_SetFontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetFontSize_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ long lFontSize);


void __RPC_STUB IAgentBalloon_SetFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_SetFontCharSet_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [in] */ short sFontCharSet);


void __RPC_STUB IAgentBalloon_SetFontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloon_GetFontCharSet_Proxy( 
    IAgentBalloon __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psFontCharSet);


void __RPC_STUB IAgentBalloon_GetFontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentBalloon_INTERFACE_DEFINED__ */


#ifndef __IAgentBalloonEx_INTERFACE_DEFINED__
#define __IAgentBalloonEx_INTERFACE_DEFINED__

/* interface IAgentBalloonEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentBalloonEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D7A6D440-8872-11d1-9EC6-00C04FD7081F")
    IAgentBalloonEx : public IAgentBalloon
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetStyle( 
            /* [in] */ long lStyle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStyle( 
            /* [out] */ long __RPC_FAR *plStyle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNumLines( 
            /* [in] */ long lLines) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetNumCharsPerLine( 
            /* [in] */ long lCharsPerLine) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentBalloonExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentBalloonEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentBalloonEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEnabled )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbEnabled);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumLines )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLines);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetNumCharsPerLine )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plCharsPerLine);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontName )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontSize )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontBold )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontBold);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontItalic )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontItalic);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontStrikethru )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontStrikethru);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontUnderline )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbFontUnderline);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetForeColor )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plFGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBackColor )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBGColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetBorderColor )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plBorderColor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetVisible )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontName )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ BSTR bszFontName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontSize )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lFontSize);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetFontCharSet )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ short sFontCharSet);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetFontCharSet )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psFontCharSet);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetStyle )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lStyle);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetStyle )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plStyle);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNumLines )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lLines);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetNumCharsPerLine )( 
            IAgentBalloonEx __RPC_FAR * This,
            /* [in] */ long lCharsPerLine);
        
        END_INTERFACE
    } IAgentBalloonExVtbl;

    interface IAgentBalloonEx
    {
        CONST_VTBL struct IAgentBalloonExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentBalloonEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentBalloonEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentBalloonEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentBalloonEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentBalloonEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentBalloonEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentBalloonEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentBalloonEx_GetEnabled(This,pbEnabled)	\
    (This)->lpVtbl -> GetEnabled(This,pbEnabled)

#define IAgentBalloonEx_GetNumLines(This,plLines)	\
    (This)->lpVtbl -> GetNumLines(This,plLines)

#define IAgentBalloonEx_GetNumCharsPerLine(This,plCharsPerLine)	\
    (This)->lpVtbl -> GetNumCharsPerLine(This,plCharsPerLine)

#define IAgentBalloonEx_GetFontName(This,pbszFontName)	\
    (This)->lpVtbl -> GetFontName(This,pbszFontName)

#define IAgentBalloonEx_GetFontSize(This,plFontSize)	\
    (This)->lpVtbl -> GetFontSize(This,plFontSize)

#define IAgentBalloonEx_GetFontBold(This,pbFontBold)	\
    (This)->lpVtbl -> GetFontBold(This,pbFontBold)

#define IAgentBalloonEx_GetFontItalic(This,pbFontItalic)	\
    (This)->lpVtbl -> GetFontItalic(This,pbFontItalic)

#define IAgentBalloonEx_GetFontStrikethru(This,pbFontStrikethru)	\
    (This)->lpVtbl -> GetFontStrikethru(This,pbFontStrikethru)

#define IAgentBalloonEx_GetFontUnderline(This,pbFontUnderline)	\
    (This)->lpVtbl -> GetFontUnderline(This,pbFontUnderline)

#define IAgentBalloonEx_GetForeColor(This,plFGColor)	\
    (This)->lpVtbl -> GetForeColor(This,plFGColor)

#define IAgentBalloonEx_GetBackColor(This,plBGColor)	\
    (This)->lpVtbl -> GetBackColor(This,plBGColor)

#define IAgentBalloonEx_GetBorderColor(This,plBorderColor)	\
    (This)->lpVtbl -> GetBorderColor(This,plBorderColor)

#define IAgentBalloonEx_SetVisible(This,bVisible)	\
    (This)->lpVtbl -> SetVisible(This,bVisible)

#define IAgentBalloonEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentBalloonEx_SetFontName(This,bszFontName)	\
    (This)->lpVtbl -> SetFontName(This,bszFontName)

#define IAgentBalloonEx_SetFontSize(This,lFontSize)	\
    (This)->lpVtbl -> SetFontSize(This,lFontSize)

#define IAgentBalloonEx_SetFontCharSet(This,sFontCharSet)	\
    (This)->lpVtbl -> SetFontCharSet(This,sFontCharSet)

#define IAgentBalloonEx_GetFontCharSet(This,psFontCharSet)	\
    (This)->lpVtbl -> GetFontCharSet(This,psFontCharSet)


#define IAgentBalloonEx_SetStyle(This,lStyle)	\
    (This)->lpVtbl -> SetStyle(This,lStyle)

#define IAgentBalloonEx_GetStyle(This,plStyle)	\
    (This)->lpVtbl -> GetStyle(This,plStyle)

#define IAgentBalloonEx_SetNumLines(This,lLines)	\
    (This)->lpVtbl -> SetNumLines(This,lLines)

#define IAgentBalloonEx_SetNumCharsPerLine(This,lCharsPerLine)	\
    (This)->lpVtbl -> SetNumCharsPerLine(This,lCharsPerLine)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentBalloonEx_SetStyle_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [in] */ long lStyle);


void __RPC_STUB IAgentBalloonEx_SetStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloonEx_GetStyle_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plStyle);


void __RPC_STUB IAgentBalloonEx_GetStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloonEx_SetNumLines_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [in] */ long lLines);


void __RPC_STUB IAgentBalloonEx_SetNumLines_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentBalloonEx_SetNumCharsPerLine_Proxy( 
    IAgentBalloonEx __RPC_FAR * This,
    /* [in] */ long lCharsPerLine);


void __RPC_STUB IAgentBalloonEx_SetNumCharsPerLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentBalloonEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCharacter_INTERFACE_DEFINED__
#define __IAgentCharacter_INTERFACE_DEFINED__

/* interface IAgentCharacter */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCharacter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C8F-7B81-11D0-AC5F-00C04FD97575")
    IAgentCharacter : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetVisible( 
            /* [out] */ long __RPC_FAR *pbVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPosition( 
            /* [in] */ long lLeft,
            /* [in] */ long lTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSize( 
            /* [in] */ long lWidth,
            /* [in] */ long lHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetName( 
            /* [out] */ BSTR __RPC_FAR *pbszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDescription( 
            /* [out] */ BSTR __RPC_FAR *pbszDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTTSSpeed( 
            /* [out] */ long __RPC_FAR *pdwSpeed) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTTSPitch( 
            /* [out] */ short __RPC_FAR *pwPitch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Activate( 
            /* [in] */ short sState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIdleOn( 
            /* [in] */ long bOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIdleOn( 
            /* [out] */ long __RPC_FAR *pbOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Prepare( 
            /* [in] */ long dwType,
            /* [in] */ BSTR bszName,
            /* [in] */ long bQueue,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Play( 
            /* [in] */ BSTR bszAnimation,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( 
            /* [in] */ long dwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StopAll( 
            /* [in] */ long lTypes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Wait( 
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Interrupt( 
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Show( 
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Hide( 
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Speak( 
            /* [in] */ BSTR bszText,
            /* [in] */ BSTR bszUrl,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveTo( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long lSpeed,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GestureAt( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMoveCause( 
            /* [out] */ long __RPC_FAR *pdwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVisibilityCause( 
            /* [out] */ long __RPC_FAR *pdwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HasOtherClients( 
            /* [out] */ long __RPC_FAR *plNumOtherClients) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSoundEffectsOn( 
            /* [in] */ long bOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSoundEffectsOn( 
            /* [out] */ long __RPC_FAR *pbOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetName( 
            /* [in] */ BSTR bszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDescription( 
            /* [in] */ BSTR bszDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExtraData( 
            /* [out] */ BSTR __RPC_FAR *pbszExtraData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCharacterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCharacter __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCharacter __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPosition )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long lLeft,
            /* [in] */ long lTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSize )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetName )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDescription )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSSpeed )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwSpeed);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSPitch )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *pwPitch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ short sState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIdleOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIdleOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Prepare )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwType,
            /* [in] */ BSTR bszName,
            /* [in] */ long bQueue,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszAnimation,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long lTypes);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszText,
            /* [in] */ BSTR bszUrl,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long lSpeed,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMoveCause )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisibilityCause )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HasOtherClients )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plNumOtherClients);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSoundEffectsOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSoundEffectsOn )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetName )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDescription )( 
            IAgentCharacter __RPC_FAR * This,
            /* [in] */ BSTR bszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetExtraData )( 
            IAgentCharacter __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszExtraData);
        
        END_INTERFACE
    } IAgentCharacterVtbl;

    interface IAgentCharacter
    {
        CONST_VTBL struct IAgentCharacterVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCharacter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCharacter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCharacter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCharacter_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCharacter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCharacter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCharacter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCharacter_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCharacter_SetPosition(This,lLeft,lTop)	\
    (This)->lpVtbl -> SetPosition(This,lLeft,lTop)

#define IAgentCharacter_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentCharacter_SetSize(This,lWidth,lHeight)	\
    (This)->lpVtbl -> SetSize(This,lWidth,lHeight)

#define IAgentCharacter_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#define IAgentCharacter_GetName(This,pbszName)	\
    (This)->lpVtbl -> GetName(This,pbszName)

#define IAgentCharacter_GetDescription(This,pbszDescription)	\
    (This)->lpVtbl -> GetDescription(This,pbszDescription)

#define IAgentCharacter_GetTTSSpeed(This,pdwSpeed)	\
    (This)->lpVtbl -> GetTTSSpeed(This,pdwSpeed)

#define IAgentCharacter_GetTTSPitch(This,pwPitch)	\
    (This)->lpVtbl -> GetTTSPitch(This,pwPitch)

#define IAgentCharacter_Activate(This,sState)	\
    (This)->lpVtbl -> Activate(This,sState)

#define IAgentCharacter_SetIdleOn(This,bOn)	\
    (This)->lpVtbl -> SetIdleOn(This,bOn)

#define IAgentCharacter_GetIdleOn(This,pbOn)	\
    (This)->lpVtbl -> GetIdleOn(This,pbOn)

#define IAgentCharacter_Prepare(This,dwType,bszName,bQueue,pdwReqID)	\
    (This)->lpVtbl -> Prepare(This,dwType,bszName,bQueue,pdwReqID)

#define IAgentCharacter_Play(This,bszAnimation,pdwReqID)	\
    (This)->lpVtbl -> Play(This,bszAnimation,pdwReqID)

#define IAgentCharacter_Stop(This,dwReqID)	\
    (This)->lpVtbl -> Stop(This,dwReqID)

#define IAgentCharacter_StopAll(This,lTypes)	\
    (This)->lpVtbl -> StopAll(This,lTypes)

#define IAgentCharacter_Wait(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Wait(This,dwReqID,pdwReqID)

#define IAgentCharacter_Interrupt(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Interrupt(This,dwReqID,pdwReqID)

#define IAgentCharacter_Show(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Show(This,bFast,pdwReqID)

#define IAgentCharacter_Hide(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Hide(This,bFast,pdwReqID)

#define IAgentCharacter_Speak(This,bszText,bszUrl,pdwReqID)	\
    (This)->lpVtbl -> Speak(This,bszText,bszUrl,pdwReqID)

#define IAgentCharacter_MoveTo(This,x,y,lSpeed,pdwReqID)	\
    (This)->lpVtbl -> MoveTo(This,x,y,lSpeed,pdwReqID)

#define IAgentCharacter_GestureAt(This,x,y,pdwReqID)	\
    (This)->lpVtbl -> GestureAt(This,x,y,pdwReqID)

#define IAgentCharacter_GetMoveCause(This,pdwCause)	\
    (This)->lpVtbl -> GetMoveCause(This,pdwCause)

#define IAgentCharacter_GetVisibilityCause(This,pdwCause)	\
    (This)->lpVtbl -> GetVisibilityCause(This,pdwCause)

#define IAgentCharacter_HasOtherClients(This,plNumOtherClients)	\
    (This)->lpVtbl -> HasOtherClients(This,plNumOtherClients)

#define IAgentCharacter_SetSoundEffectsOn(This,bOn)	\
    (This)->lpVtbl -> SetSoundEffectsOn(This,bOn)

#define IAgentCharacter_GetSoundEffectsOn(This,pbOn)	\
    (This)->lpVtbl -> GetSoundEffectsOn(This,pbOn)

#define IAgentCharacter_SetName(This,bszName)	\
    (This)->lpVtbl -> SetName(This,bszName)

#define IAgentCharacter_SetDescription(This,bszDescription)	\
    (This)->lpVtbl -> SetDescription(This,bszDescription)

#define IAgentCharacter_GetExtraData(This,pbszExtraData)	\
    (This)->lpVtbl -> GetExtraData(This,pbszExtraData)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCharacter_GetVisible_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbVisible);


void __RPC_STUB IAgentCharacter_GetVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetPosition_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long lLeft,
    /* [in] */ long lTop);


void __RPC_STUB IAgentCharacter_SetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetPosition_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plLeft,
    /* [out] */ long __RPC_FAR *plTop);


void __RPC_STUB IAgentCharacter_GetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetSize_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long lWidth,
    /* [in] */ long lHeight);


void __RPC_STUB IAgentCharacter_SetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetSize_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentCharacter_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetName_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszName);


void __RPC_STUB IAgentCharacter_GetName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetDescription_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszDescription);


void __RPC_STUB IAgentCharacter_GetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetTTSSpeed_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwSpeed);


void __RPC_STUB IAgentCharacter_GetTTSSpeed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetTTSPitch_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *pwPitch);


void __RPC_STUB IAgentCharacter_GetTTSPitch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Activate_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ short sState);


void __RPC_STUB IAgentCharacter_Activate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetIdleOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bOn);


void __RPC_STUB IAgentCharacter_SetIdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetIdleOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbOn);


void __RPC_STUB IAgentCharacter_GetIdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Prepare_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwType,
    /* [in] */ BSTR bszName,
    /* [in] */ long bQueue,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Prepare_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Play_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszAnimation,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Play_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Stop_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwReqID);


void __RPC_STUB IAgentCharacter_Stop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_StopAll_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long lTypes);


void __RPC_STUB IAgentCharacter_StopAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Wait_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwReqID,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Wait_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Interrupt_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long dwReqID,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Interrupt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Show_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bFast,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Hide_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bFast,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Hide_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_Speak_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszText,
    /* [in] */ BSTR bszUrl,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_Speak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_MoveTo_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [in] */ long lSpeed,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_MoveTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GestureAt_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacter_GestureAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetMoveCause_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCause);


void __RPC_STUB IAgentCharacter_GetMoveCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetVisibilityCause_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pdwCause);


void __RPC_STUB IAgentCharacter_GetVisibilityCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_HasOtherClients_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plNumOtherClients);


void __RPC_STUB IAgentCharacter_HasOtherClients_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetSoundEffectsOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ long bOn);


void __RPC_STUB IAgentCharacter_SetSoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetSoundEffectsOn_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbOn);


void __RPC_STUB IAgentCharacter_GetSoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetName_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszName);


void __RPC_STUB IAgentCharacter_SetName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_SetDescription_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [in] */ BSTR bszDescription);


void __RPC_STUB IAgentCharacter_SetDescription_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacter_GetExtraData_Proxy( 
    IAgentCharacter __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszExtraData);


void __RPC_STUB IAgentCharacter_GetExtraData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCharacter_INTERFACE_DEFINED__ */


#ifndef __IAgentCharacterEx_INTERFACE_DEFINED__
#define __IAgentCharacterEx_INTERFACE_DEFINED__

/* interface IAgentCharacterEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCharacterEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("98BBE491-2EED-11d1-ACAC-00C04FD97575")
    IAgentCharacterEx : public IAgentCharacter
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ShowPopupMenu( 
            /* [in] */ short x,
            /* [in] */ short y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAutoPopupMenu( 
            /* [in] */ long bAutoPopupMenu) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAutoPopupMenu( 
            /* [out] */ long __RPC_FAR *pbAutoPopupMenu) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpFileName( 
            /* [out] */ BSTR __RPC_FAR *pbszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpFileName( 
            /* [in] */ BSTR bszName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpModeOn( 
            /* [in] */ long bHelpModeOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpModeOn( 
            /* [out] */ long __RPC_FAR *pbHelpModeOn) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetHelpContextID( 
            /* [in] */ long ulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHelpContextID( 
            /* [out] */ long __RPC_FAR *pulID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetActive( 
            /* [out] */ short __RPC_FAR *psState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Listen( 
            /* [in] */ long bListen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetLanguageID( 
            /* [in] */ long langid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLanguageID( 
            /* [out] */ long __RPC_FAR *plangid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTTSModeID( 
            /* [out] */ BSTR __RPC_FAR *pbszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTTSModeID( 
            /* [in] */ BSTR bszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSRModeID( 
            /* [out] */ BSTR __RPC_FAR *pbszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSRModeID( 
            /* [in] */ BSTR bszModeID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGUID( 
            /* [out] */ BSTR __RPC_FAR *pbszID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOriginalSize( 
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Think( 
            /* [in] */ BSTR bszText,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVersion( 
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAnimationNames( 
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *punkEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSRStatus( 
            /* [out] */ long __RPC_FAR *plStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCharacterExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCharacterEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCharacterEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisible )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetPosition )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long lLeft,
            /* [in] */ long lTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPosition )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plLeft,
            /* [out] */ long __RPC_FAR *plTop);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSize )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSize )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetDescription )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSSpeed )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwSpeed);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSPitch )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *pwPitch);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short sState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetIdleOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIdleOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Prepare )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwType,
            /* [in] */ BSTR bszName,
            /* [in] */ long bQueue,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszAnimation,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long lTypes);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long dwReqID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bFast,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszText,
            /* [in] */ BSTR bszUrl,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long lSpeed,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetMoveCause )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVisibilityCause )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pdwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HasOtherClients )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plNumOtherClients);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSoundEffectsOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSoundEffectsOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetDescription )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszDescription);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetExtraData )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszExtraData);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowPopupMenu )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetAutoPopupMenu )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bAutoPopupMenu);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAutoPopupMenu )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbAutoPopupMenu);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpFileName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpFileName )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszName);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpModeOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bHelpModeOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpModeOn )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbHelpModeOn);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetHelpContextID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long ulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHelpContextID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pulID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetActive )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psState);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Listen )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long bListen);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetLanguageID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ long langid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetLanguageID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plangid);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTTSModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetTTSModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSRModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetSRModeID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszModeID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetGUID )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ BSTR __RPC_FAR *pbszID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetOriginalSize )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plWidth,
            /* [out] */ long __RPC_FAR *plHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Think )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR bszText,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVersion )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAnimationNames )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *punkEnum);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSRStatus )( 
            IAgentCharacterEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *plStatus);
        
        END_INTERFACE
    } IAgentCharacterExVtbl;

    interface IAgentCharacterEx
    {
        CONST_VTBL struct IAgentCharacterExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCharacterEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCharacterEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCharacterEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCharacterEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCharacterEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCharacterEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCharacterEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCharacterEx_GetVisible(This,pbVisible)	\
    (This)->lpVtbl -> GetVisible(This,pbVisible)

#define IAgentCharacterEx_SetPosition(This,lLeft,lTop)	\
    (This)->lpVtbl -> SetPosition(This,lLeft,lTop)

#define IAgentCharacterEx_GetPosition(This,plLeft,plTop)	\
    (This)->lpVtbl -> GetPosition(This,plLeft,plTop)

#define IAgentCharacterEx_SetSize(This,lWidth,lHeight)	\
    (This)->lpVtbl -> SetSize(This,lWidth,lHeight)

#define IAgentCharacterEx_GetSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetSize(This,plWidth,plHeight)

#define IAgentCharacterEx_GetName(This,pbszName)	\
    (This)->lpVtbl -> GetName(This,pbszName)

#define IAgentCharacterEx_GetDescription(This,pbszDescription)	\
    (This)->lpVtbl -> GetDescription(This,pbszDescription)

#define IAgentCharacterEx_GetTTSSpeed(This,pdwSpeed)	\
    (This)->lpVtbl -> GetTTSSpeed(This,pdwSpeed)

#define IAgentCharacterEx_GetTTSPitch(This,pwPitch)	\
    (This)->lpVtbl -> GetTTSPitch(This,pwPitch)

#define IAgentCharacterEx_Activate(This,sState)	\
    (This)->lpVtbl -> Activate(This,sState)

#define IAgentCharacterEx_SetIdleOn(This,bOn)	\
    (This)->lpVtbl -> SetIdleOn(This,bOn)

#define IAgentCharacterEx_GetIdleOn(This,pbOn)	\
    (This)->lpVtbl -> GetIdleOn(This,pbOn)

#define IAgentCharacterEx_Prepare(This,dwType,bszName,bQueue,pdwReqID)	\
    (This)->lpVtbl -> Prepare(This,dwType,bszName,bQueue,pdwReqID)

#define IAgentCharacterEx_Play(This,bszAnimation,pdwReqID)	\
    (This)->lpVtbl -> Play(This,bszAnimation,pdwReqID)

#define IAgentCharacterEx_Stop(This,dwReqID)	\
    (This)->lpVtbl -> Stop(This,dwReqID)

#define IAgentCharacterEx_StopAll(This,lTypes)	\
    (This)->lpVtbl -> StopAll(This,lTypes)

#define IAgentCharacterEx_Wait(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Wait(This,dwReqID,pdwReqID)

#define IAgentCharacterEx_Interrupt(This,dwReqID,pdwReqID)	\
    (This)->lpVtbl -> Interrupt(This,dwReqID,pdwReqID)

#define IAgentCharacterEx_Show(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Show(This,bFast,pdwReqID)

#define IAgentCharacterEx_Hide(This,bFast,pdwReqID)	\
    (This)->lpVtbl -> Hide(This,bFast,pdwReqID)

#define IAgentCharacterEx_Speak(This,bszText,bszUrl,pdwReqID)	\
    (This)->lpVtbl -> Speak(This,bszText,bszUrl,pdwReqID)

#define IAgentCharacterEx_MoveTo(This,x,y,lSpeed,pdwReqID)	\
    (This)->lpVtbl -> MoveTo(This,x,y,lSpeed,pdwReqID)

#define IAgentCharacterEx_GestureAt(This,x,y,pdwReqID)	\
    (This)->lpVtbl -> GestureAt(This,x,y,pdwReqID)

#define IAgentCharacterEx_GetMoveCause(This,pdwCause)	\
    (This)->lpVtbl -> GetMoveCause(This,pdwCause)

#define IAgentCharacterEx_GetVisibilityCause(This,pdwCause)	\
    (This)->lpVtbl -> GetVisibilityCause(This,pdwCause)

#define IAgentCharacterEx_HasOtherClients(This,plNumOtherClients)	\
    (This)->lpVtbl -> HasOtherClients(This,plNumOtherClients)

#define IAgentCharacterEx_SetSoundEffectsOn(This,bOn)	\
    (This)->lpVtbl -> SetSoundEffectsOn(This,bOn)

#define IAgentCharacterEx_GetSoundEffectsOn(This,pbOn)	\
    (This)->lpVtbl -> GetSoundEffectsOn(This,pbOn)

#define IAgentCharacterEx_SetName(This,bszName)	\
    (This)->lpVtbl -> SetName(This,bszName)

#define IAgentCharacterEx_SetDescription(This,bszDescription)	\
    (This)->lpVtbl -> SetDescription(This,bszDescription)

#define IAgentCharacterEx_GetExtraData(This,pbszExtraData)	\
    (This)->lpVtbl -> GetExtraData(This,pbszExtraData)


#define IAgentCharacterEx_ShowPopupMenu(This,x,y)	\
    (This)->lpVtbl -> ShowPopupMenu(This,x,y)

#define IAgentCharacterEx_SetAutoPopupMenu(This,bAutoPopupMenu)	\
    (This)->lpVtbl -> SetAutoPopupMenu(This,bAutoPopupMenu)

#define IAgentCharacterEx_GetAutoPopupMenu(This,pbAutoPopupMenu)	\
    (This)->lpVtbl -> GetAutoPopupMenu(This,pbAutoPopupMenu)

#define IAgentCharacterEx_GetHelpFileName(This,pbszName)	\
    (This)->lpVtbl -> GetHelpFileName(This,pbszName)

#define IAgentCharacterEx_SetHelpFileName(This,bszName)	\
    (This)->lpVtbl -> SetHelpFileName(This,bszName)

#define IAgentCharacterEx_SetHelpModeOn(This,bHelpModeOn)	\
    (This)->lpVtbl -> SetHelpModeOn(This,bHelpModeOn)

#define IAgentCharacterEx_GetHelpModeOn(This,pbHelpModeOn)	\
    (This)->lpVtbl -> GetHelpModeOn(This,pbHelpModeOn)

#define IAgentCharacterEx_SetHelpContextID(This,ulID)	\
    (This)->lpVtbl -> SetHelpContextID(This,ulID)

#define IAgentCharacterEx_GetHelpContextID(This,pulID)	\
    (This)->lpVtbl -> GetHelpContextID(This,pulID)

#define IAgentCharacterEx_GetActive(This,psState)	\
    (This)->lpVtbl -> GetActive(This,psState)

#define IAgentCharacterEx_Listen(This,bListen)	\
    (This)->lpVtbl -> Listen(This,bListen)

#define IAgentCharacterEx_SetLanguageID(This,langid)	\
    (This)->lpVtbl -> SetLanguageID(This,langid)

#define IAgentCharacterEx_GetLanguageID(This,plangid)	\
    (This)->lpVtbl -> GetLanguageID(This,plangid)

#define IAgentCharacterEx_GetTTSModeID(This,pbszModeID)	\
    (This)->lpVtbl -> GetTTSModeID(This,pbszModeID)

#define IAgentCharacterEx_SetTTSModeID(This,bszModeID)	\
    (This)->lpVtbl -> SetTTSModeID(This,bszModeID)

#define IAgentCharacterEx_GetSRModeID(This,pbszModeID)	\
    (This)->lpVtbl -> GetSRModeID(This,pbszModeID)

#define IAgentCharacterEx_SetSRModeID(This,bszModeID)	\
    (This)->lpVtbl -> SetSRModeID(This,bszModeID)

#define IAgentCharacterEx_GetGUID(This,pbszID)	\
    (This)->lpVtbl -> GetGUID(This,pbszID)

#define IAgentCharacterEx_GetOriginalSize(This,plWidth,plHeight)	\
    (This)->lpVtbl -> GetOriginalSize(This,plWidth,plHeight)

#define IAgentCharacterEx_Think(This,bszText,pdwReqID)	\
    (This)->lpVtbl -> Think(This,bszText,pdwReqID)

#define IAgentCharacterEx_GetVersion(This,psMajor,psMinor)	\
    (This)->lpVtbl -> GetVersion(This,psMajor,psMinor)

#define IAgentCharacterEx_GetAnimationNames(This,punkEnum)	\
    (This)->lpVtbl -> GetAnimationNames(This,punkEnum)

#define IAgentCharacterEx_GetSRStatus(This,plStatus)	\
    (This)->lpVtbl -> GetSRStatus(This,plStatus)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCharacterEx_ShowPopupMenu_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y);


void __RPC_STUB IAgentCharacterEx_ShowPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetAutoPopupMenu_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long bAutoPopupMenu);


void __RPC_STUB IAgentCharacterEx_SetAutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetAutoPopupMenu_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbAutoPopupMenu);


void __RPC_STUB IAgentCharacterEx_GetAutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetHelpFileName_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszName);


void __RPC_STUB IAgentCharacterEx_GetHelpFileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetHelpFileName_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszName);


void __RPC_STUB IAgentCharacterEx_SetHelpFileName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetHelpModeOn_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long bHelpModeOn);


void __RPC_STUB IAgentCharacterEx_SetHelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetHelpModeOn_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbHelpModeOn);


void __RPC_STUB IAgentCharacterEx_GetHelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetHelpContextID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long ulID);


void __RPC_STUB IAgentCharacterEx_SetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetHelpContextID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pulID);


void __RPC_STUB IAgentCharacterEx_GetHelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetActive_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psState);


void __RPC_STUB IAgentCharacterEx_GetActive_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_Listen_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long bListen);


void __RPC_STUB IAgentCharacterEx_Listen_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetLanguageID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ long langid);


void __RPC_STUB IAgentCharacterEx_SetLanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetLanguageID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plangid);


void __RPC_STUB IAgentCharacterEx_GetLanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetTTSModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszModeID);


void __RPC_STUB IAgentCharacterEx_GetTTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetTTSModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszModeID);


void __RPC_STUB IAgentCharacterEx_SetTTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetSRModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszModeID);


void __RPC_STUB IAgentCharacterEx_GetSRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_SetSRModeID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszModeID);


void __RPC_STUB IAgentCharacterEx_SetSRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetGUID_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ BSTR __RPC_FAR *pbszID);


void __RPC_STUB IAgentCharacterEx_GetGUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetOriginalSize_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plWidth,
    /* [out] */ long __RPC_FAR *plHeight);


void __RPC_STUB IAgentCharacterEx_GetOriginalSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_Think_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR bszText,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgentCharacterEx_Think_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetVersion_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psMajor,
    /* [out] */ short __RPC_FAR *psMinor);


void __RPC_STUB IAgentCharacterEx_GetVersion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetAnimationNames_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *punkEnum);


void __RPC_STUB IAgentCharacterEx_GetAnimationNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentCharacterEx_GetSRStatus_Proxy( 
    IAgentCharacterEx __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *plStatus);


void __RPC_STUB IAgentCharacterEx_GetSRStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCharacterEx_INTERFACE_DEFINED__ */


#ifndef __IAgent_INTERFACE_DEFINED__
#define __IAgent_INTERFACE_DEFINED__

/* interface IAgent */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7B93C91-7B81-11D0-AC5F-00C04FD97575")
    IAgent : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ VARIANT vLoadKey,
            /* [out] */ long __RPC_FAR *pdwCharID,
            /* [out] */ long __RPC_FAR *pdwReqID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unload( 
            /* [in] */ long dwCharID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Register( 
            /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
            /* [out] */ long __RPC_FAR *pdwSinkID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unregister( 
            /* [in] */ long dwSinkID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCharacter( 
            /* [in] */ long dwCharID,
            /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSuspended( 
            /* [out] */ long __RPC_FAR *pbSuspended) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgent __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgent __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgent __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgent __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgent __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgent __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgent __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Load )( 
            IAgent __RPC_FAR * This,
            /* [in] */ VARIANT vLoadKey,
            /* [out] */ long __RPC_FAR *pdwCharID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unload )( 
            IAgent __RPC_FAR * This,
            /* [in] */ long dwCharID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Register )( 
            IAgent __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
            /* [out] */ long __RPC_FAR *pdwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unregister )( 
            IAgent __RPC_FAR * This,
            /* [in] */ long dwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCharacter )( 
            IAgent __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSuspended )( 
            IAgent __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbSuspended);
        
        END_INTERFACE
    } IAgentVtbl;

    interface IAgent
    {
        CONST_VTBL struct IAgentVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgent_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgent_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgent_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgent_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgent_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgent_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgent_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgent_Load(This,vLoadKey,pdwCharID,pdwReqID)	\
    (This)->lpVtbl -> Load(This,vLoadKey,pdwCharID,pdwReqID)

#define IAgent_Unload(This,dwCharID)	\
    (This)->lpVtbl -> Unload(This,dwCharID)

#define IAgent_Register(This,punkNotifySink,pdwSinkID)	\
    (This)->lpVtbl -> Register(This,punkNotifySink,pdwSinkID)

#define IAgent_Unregister(This,dwSinkID)	\
    (This)->lpVtbl -> Unregister(This,dwSinkID)

#define IAgent_GetCharacter(This,dwCharID,ppunkCharacter)	\
    (This)->lpVtbl -> GetCharacter(This,dwCharID,ppunkCharacter)

#define IAgent_GetSuspended(This,pbSuspended)	\
    (This)->lpVtbl -> GetSuspended(This,pbSuspended)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgent_Load_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ VARIANT vLoadKey,
    /* [out] */ long __RPC_FAR *pdwCharID,
    /* [out] */ long __RPC_FAR *pdwReqID);


void __RPC_STUB IAgent_Load_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_Unload_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ long dwCharID);


void __RPC_STUB IAgent_Unload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_Register_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
    /* [out] */ long __RPC_FAR *pdwSinkID);


void __RPC_STUB IAgent_Register_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_Unregister_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ long dwSinkID);


void __RPC_STUB IAgent_Unregister_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_GetCharacter_Proxy( 
    IAgent __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter);


void __RPC_STUB IAgent_GetCharacter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgent_GetSuspended_Proxy( 
    IAgent __RPC_FAR * This,
    /* [out] */ long __RPC_FAR *pbSuspended);


void __RPC_STUB IAgent_GetSuspended_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgent_INTERFACE_DEFINED__ */


#ifndef __IAgentEx_INTERFACE_DEFINED__
#define __IAgentEx_INTERFACE_DEFINED__

/* interface IAgentEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("48D12BA0-5B77-11d1-9EC1-00C04FD7081F")
    IAgentEx : public IAgent
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCharacterEx( 
            /* [in] */ long dwCharID,
            /* [out] */ IAgentCharacterEx __RPC_FAR *__RPC_FAR *ppCharacterEx) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVersion( 
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ShowDefaultCharacterProperties( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long bUseDefaultPosition) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Load )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ VARIANT vLoadKey,
            /* [out] */ long __RPC_FAR *pdwCharID,
            /* [out] */ long __RPC_FAR *pdwReqID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unload )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwCharID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Register )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *punkNotifySink,
            /* [out] */ long __RPC_FAR *pdwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unregister )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwSinkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCharacter )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppunkCharacter);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetSuspended )( 
            IAgentEx __RPC_FAR * This,
            /* [out] */ long __RPC_FAR *pbSuspended);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCharacterEx )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [out] */ IAgentCharacterEx __RPC_FAR *__RPC_FAR *ppCharacterEx);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetVersion )( 
            IAgentEx __RPC_FAR * This,
            /* [out] */ short __RPC_FAR *psMajor,
            /* [out] */ short __RPC_FAR *psMinor);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowDefaultCharacterProperties )( 
            IAgentEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [in] */ long bUseDefaultPosition);
        
        END_INTERFACE
    } IAgentExVtbl;

    interface IAgentEx
    {
        CONST_VTBL struct IAgentExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentEx_Load(This,vLoadKey,pdwCharID,pdwReqID)	\
    (This)->lpVtbl -> Load(This,vLoadKey,pdwCharID,pdwReqID)

#define IAgentEx_Unload(This,dwCharID)	\
    (This)->lpVtbl -> Unload(This,dwCharID)

#define IAgentEx_Register(This,punkNotifySink,pdwSinkID)	\
    (This)->lpVtbl -> Register(This,punkNotifySink,pdwSinkID)

#define IAgentEx_Unregister(This,dwSinkID)	\
    (This)->lpVtbl -> Unregister(This,dwSinkID)

#define IAgentEx_GetCharacter(This,dwCharID,ppunkCharacter)	\
    (This)->lpVtbl -> GetCharacter(This,dwCharID,ppunkCharacter)

#define IAgentEx_GetSuspended(This,pbSuspended)	\
    (This)->lpVtbl -> GetSuspended(This,pbSuspended)


#define IAgentEx_GetCharacterEx(This,dwCharID,ppCharacterEx)	\
    (This)->lpVtbl -> GetCharacterEx(This,dwCharID,ppCharacterEx)

#define IAgentEx_GetVersion(This,psMajor,psMinor)	\
    (This)->lpVtbl -> GetVersion(This,psMajor,psMinor)

#define IAgentEx_ShowDefaultCharacterProperties(This,x,y,bUseDefaultPosition)	\
    (This)->lpVtbl -> ShowDefaultCharacterProperties(This,x,y,bUseDefaultPosition)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentEx_GetCharacterEx_Proxy( 
    IAgentEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [out] */ IAgentCharacterEx __RPC_FAR *__RPC_FAR *ppCharacterEx);


void __RPC_STUB IAgentEx_GetCharacterEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentEx_GetVersion_Proxy( 
    IAgentEx __RPC_FAR * This,
    /* [out] */ short __RPC_FAR *psMajor,
    /* [out] */ short __RPC_FAR *psMinor);


void __RPC_STUB IAgentEx_GetVersion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentEx_ShowDefaultCharacterProperties_Proxy( 
    IAgentEx __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [in] */ long bUseDefaultPosition);


void __RPC_STUB IAgentEx_ShowDefaultCharacterProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentEx_INTERFACE_DEFINED__ */


#ifndef __IAgentNotifySink_INTERFACE_DEFINED__
#define __IAgentNotifySink_INTERFACE_DEFINED__

/* interface IAgentNotifySink */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentNotifySink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00D18159-8466-11D0-AC63-00C04FD97575")
    IAgentNotifySink : public IDispatch
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Command( 
            /* [in] */ long dwCommandID,
            /* [in] */ IUnknown __RPC_FAR *punkUserInput) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ActivateInputState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bActivated) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Restart( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Shutdown( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE VisibleState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Click( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DblClick( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DragStart( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DragComplete( 
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RequestStart( 
            /* [in] */ long dwRequestID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RequestComplete( 
            /* [in] */ long dwRequestID,
            /* [in] */ long hrStatus) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BookMark( 
            /* [in] */ long dwBookMarkID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Idle( 
            /* [in] */ long dwCharID,
            /* [in] */ long bStart) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ long dwCharID,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Size( 
            /* [in] */ long dwCharID,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BalloonVisibleState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentNotifySinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentNotifySink __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [in] */ IUnknown __RPC_FAR *punkUserInput);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ActivateInputState )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bActivated);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Restart )( 
            IAgentNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Shutdown )( 
            IAgentNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *VisibleState )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Click )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DblClick )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragStart )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragComplete )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestStart )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwRequestID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestComplete )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwRequestID,
            /* [in] */ long hrStatus);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BookMark )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwBookMarkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Idle )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bStart);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Move )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Size )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BalloonVisibleState )( 
            IAgentNotifySink __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible);
        
        END_INTERFACE
    } IAgentNotifySinkVtbl;

    interface IAgentNotifySink
    {
        CONST_VTBL struct IAgentNotifySinkVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentNotifySink_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentNotifySink_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentNotifySink_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentNotifySink_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentNotifySink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentNotifySink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentNotifySink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentNotifySink_Command(This,dwCommandID,punkUserInput)	\
    (This)->lpVtbl -> Command(This,dwCommandID,punkUserInput)

#define IAgentNotifySink_ActivateInputState(This,dwCharID,bActivated)	\
    (This)->lpVtbl -> ActivateInputState(This,dwCharID,bActivated)

#define IAgentNotifySink_Restart(This)	\
    (This)->lpVtbl -> Restart(This)

#define IAgentNotifySink_Shutdown(This)	\
    (This)->lpVtbl -> Shutdown(This)

#define IAgentNotifySink_VisibleState(This,dwCharID,bVisible,dwCause)	\
    (This)->lpVtbl -> VisibleState(This,dwCharID,bVisible,dwCause)

#define IAgentNotifySink_Click(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> Click(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_DblClick(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DblClick(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_DragStart(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragStart(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_DragComplete(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragComplete(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySink_RequestStart(This,dwRequestID)	\
    (This)->lpVtbl -> RequestStart(This,dwRequestID)

#define IAgentNotifySink_RequestComplete(This,dwRequestID,hrStatus)	\
    (This)->lpVtbl -> RequestComplete(This,dwRequestID,hrStatus)

#define IAgentNotifySink_BookMark(This,dwBookMarkID)	\
    (This)->lpVtbl -> BookMark(This,dwBookMarkID)

#define IAgentNotifySink_Idle(This,dwCharID,bStart)	\
    (This)->lpVtbl -> Idle(This,dwCharID,bStart)

#define IAgentNotifySink_Move(This,dwCharID,x,y,dwCause)	\
    (This)->lpVtbl -> Move(This,dwCharID,x,y,dwCause)

#define IAgentNotifySink_Size(This,dwCharID,lWidth,lHeight)	\
    (This)->lpVtbl -> Size(This,dwCharID,lWidth,lHeight)

#define IAgentNotifySink_BalloonVisibleState(This,dwCharID,bVisible)	\
    (This)->lpVtbl -> BalloonVisibleState(This,dwCharID,bVisible)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentNotifySink_Command_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCommandID,
    /* [in] */ IUnknown __RPC_FAR *punkUserInput);


void __RPC_STUB IAgentNotifySink_Command_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_ActivateInputState_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bActivated);


void __RPC_STUB IAgentNotifySink_ActivateInputState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Restart_Proxy( 
    IAgentNotifySink __RPC_FAR * This);


void __RPC_STUB IAgentNotifySink_Restart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Shutdown_Proxy( 
    IAgentNotifySink __RPC_FAR * This);


void __RPC_STUB IAgentNotifySink_Shutdown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_VisibleState_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bVisible,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySink_VisibleState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Click_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_Click_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_DblClick_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_DblClick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_DragStart_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_DragStart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_DragComplete_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ short fwKeys,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IAgentNotifySink_DragComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_RequestStart_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwRequestID);


void __RPC_STUB IAgentNotifySink_RequestStart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_RequestComplete_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwRequestID,
    /* [in] */ long hrStatus);


void __RPC_STUB IAgentNotifySink_RequestComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_BookMark_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwBookMarkID);


void __RPC_STUB IAgentNotifySink_BookMark_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Idle_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bStart);


void __RPC_STUB IAgentNotifySink_Idle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Move_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long x,
    /* [in] */ long y,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySink_Move_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_Size_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long lWidth,
    /* [in] */ long lHeight);


void __RPC_STUB IAgentNotifySink_Size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySink_BalloonVisibleState_Proxy( 
    IAgentNotifySink __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bVisible);


void __RPC_STUB IAgentNotifySink_BalloonVisibleState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentNotifySink_INTERFACE_DEFINED__ */


#ifndef __IAgentNotifySinkEx_INTERFACE_DEFINED__
#define __IAgentNotifySinkEx_INTERFACE_DEFINED__

/* interface IAgentNotifySinkEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentNotifySinkEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("08C75162-3C9C-11d1-91FE-00C04FD701A5")
    IAgentNotifySinkEx : public IAgentNotifySink
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE HelpComplete( 
            /* [in] */ long dwCharID,
            /* [in] */ long dwCommandID,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ListeningState( 
            /* [in] */ long dwCharID,
            /* [in] */ long bListening,
            /* [in] */ long dwCause) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DefaultCharacterChange( 
            /* [in] */ BSTR bszGUID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AgentPropertyChange( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ActiveClientChange( 
            /* [in] */ long dwCharID,
            /* [in] */ long lStatus) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentNotifySinkExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCommandID,
            /* [in] */ IUnknown __RPC_FAR *punkUserInput);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ActivateInputState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bActivated);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Restart )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Shutdown )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *VisibleState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Click )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DblClick )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragStart )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DragComplete )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ short fwKeys,
            /* [in] */ long x,
            /* [in] */ long y);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestStart )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwRequestID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestComplete )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwRequestID,
            /* [in] */ long hrStatus);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BookMark )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwBookMarkID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Idle )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bStart);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Move )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long x,
            /* [in] */ long y,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Size )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long lWidth,
            /* [in] */ long lHeight);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *BalloonVisibleState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bVisible);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *HelpComplete )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long dwCommandID,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ListeningState )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long bListening,
            /* [in] */ long dwCause);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DefaultCharacterChange )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ BSTR bszGUID);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AgentPropertyChange )( 
            IAgentNotifySinkEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ActiveClientChange )( 
            IAgentNotifySinkEx __RPC_FAR * This,
            /* [in] */ long dwCharID,
            /* [in] */ long lStatus);
        
        END_INTERFACE
    } IAgentNotifySinkExVtbl;

    interface IAgentNotifySinkEx
    {
        CONST_VTBL struct IAgentNotifySinkExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentNotifySinkEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentNotifySinkEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentNotifySinkEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentNotifySinkEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentNotifySinkEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentNotifySinkEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentNotifySinkEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentNotifySinkEx_Command(This,dwCommandID,punkUserInput)	\
    (This)->lpVtbl -> Command(This,dwCommandID,punkUserInput)

#define IAgentNotifySinkEx_ActivateInputState(This,dwCharID,bActivated)	\
    (This)->lpVtbl -> ActivateInputState(This,dwCharID,bActivated)

#define IAgentNotifySinkEx_Restart(This)	\
    (This)->lpVtbl -> Restart(This)

#define IAgentNotifySinkEx_Shutdown(This)	\
    (This)->lpVtbl -> Shutdown(This)

#define IAgentNotifySinkEx_VisibleState(This,dwCharID,bVisible,dwCause)	\
    (This)->lpVtbl -> VisibleState(This,dwCharID,bVisible,dwCause)

#define IAgentNotifySinkEx_Click(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> Click(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_DblClick(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DblClick(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_DragStart(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragStart(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_DragComplete(This,dwCharID,fwKeys,x,y)	\
    (This)->lpVtbl -> DragComplete(This,dwCharID,fwKeys,x,y)

#define IAgentNotifySinkEx_RequestStart(This,dwRequestID)	\
    (This)->lpVtbl -> RequestStart(This,dwRequestID)

#define IAgentNotifySinkEx_RequestComplete(This,dwRequestID,hrStatus)	\
    (This)->lpVtbl -> RequestComplete(This,dwRequestID,hrStatus)

#define IAgentNotifySinkEx_BookMark(This,dwBookMarkID)	\
    (This)->lpVtbl -> BookMark(This,dwBookMarkID)

#define IAgentNotifySinkEx_Idle(This,dwCharID,bStart)	\
    (This)->lpVtbl -> Idle(This,dwCharID,bStart)

#define IAgentNotifySinkEx_Move(This,dwCharID,x,y,dwCause)	\
    (This)->lpVtbl -> Move(This,dwCharID,x,y,dwCause)

#define IAgentNotifySinkEx_Size(This,dwCharID,lWidth,lHeight)	\
    (This)->lpVtbl -> Size(This,dwCharID,lWidth,lHeight)

#define IAgentNotifySinkEx_BalloonVisibleState(This,dwCharID,bVisible)	\
    (This)->lpVtbl -> BalloonVisibleState(This,dwCharID,bVisible)


#define IAgentNotifySinkEx_HelpComplete(This,dwCharID,dwCommandID,dwCause)	\
    (This)->lpVtbl -> HelpComplete(This,dwCharID,dwCommandID,dwCause)

#define IAgentNotifySinkEx_ListeningState(This,dwCharID,bListening,dwCause)	\
    (This)->lpVtbl -> ListeningState(This,dwCharID,bListening,dwCause)

#define IAgentNotifySinkEx_DefaultCharacterChange(This,bszGUID)	\
    (This)->lpVtbl -> DefaultCharacterChange(This,bszGUID)

#define IAgentNotifySinkEx_AgentPropertyChange(This)	\
    (This)->lpVtbl -> AgentPropertyChange(This)

#define IAgentNotifySinkEx_ActiveClientChange(This,dwCharID,lStatus)	\
    (This)->lpVtbl -> ActiveClientChange(This,dwCharID,lStatus)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_HelpComplete_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long dwCommandID,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySinkEx_HelpComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_ListeningState_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long bListening,
    /* [in] */ long dwCause);


void __RPC_STUB IAgentNotifySinkEx_ListeningState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_DefaultCharacterChange_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ BSTR bszGUID);


void __RPC_STUB IAgentNotifySinkEx_DefaultCharacterChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_AgentPropertyChange_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This);


void __RPC_STUB IAgentNotifySinkEx_AgentPropertyChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentNotifySinkEx_ActiveClientChange_Proxy( 
    IAgentNotifySinkEx __RPC_FAR * This,
    /* [in] */ long dwCharID,
    /* [in] */ long lStatus);


void __RPC_STUB IAgentNotifySinkEx_ActiveClientChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentNotifySinkEx_INTERFACE_DEFINED__ */


#ifndef __IAgentPrivateNotifySink_INTERFACE_DEFINED__
#define __IAgentPrivateNotifySink_INTERFACE_DEFINED__

/* interface IAgentPrivateNotifySink */
/* [unique][helpstring][uuid][local][object] */ 


EXTERN_C const IID IID_IAgentPrivateNotifySink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B741B760-8EA6-11d0-AC6A-00C04FD97575")
    IAgentPrivateNotifySink : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ReleaseAll( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseOne( 
            void __RPC_FAR *pnNotify) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetClientID( 
            DWORD __RPC_FAR *pdwClientID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentPrivateNotifySinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentPrivateNotifySink __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentPrivateNotifySink __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentPrivateNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReleaseAll )( 
            IAgentPrivateNotifySink __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ReleaseOne )( 
            IAgentPrivateNotifySink __RPC_FAR * This,
            void __RPC_FAR *pnNotify);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetClientID )( 
            IAgentPrivateNotifySink __RPC_FAR * This,
            DWORD __RPC_FAR *pdwClientID);
        
        END_INTERFACE
    } IAgentPrivateNotifySinkVtbl;

    interface IAgentPrivateNotifySink
    {
        CONST_VTBL struct IAgentPrivateNotifySinkVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentPrivateNotifySink_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentPrivateNotifySink_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentPrivateNotifySink_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentPrivateNotifySink_ReleaseAll(This)	\
    (This)->lpVtbl -> ReleaseAll(This)

#define IAgentPrivateNotifySink_ReleaseOne(This,pnNotify)	\
    (This)->lpVtbl -> ReleaseOne(This,pnNotify)

#define IAgentPrivateNotifySink_GetClientID(This,pdwClientID)	\
    (This)->lpVtbl -> GetClientID(This,pdwClientID)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentPrivateNotifySink_ReleaseAll_Proxy( 
    IAgentPrivateNotifySink __RPC_FAR * This);


void __RPC_STUB IAgentPrivateNotifySink_ReleaseAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPrivateNotifySink_ReleaseOne_Proxy( 
    IAgentPrivateNotifySink __RPC_FAR * This,
    void __RPC_FAR *pnNotify);


void __RPC_STUB IAgentPrivateNotifySink_ReleaseOne_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IAgentPrivateNotifySink_GetClientID_Proxy( 
    IAgentPrivateNotifySink __RPC_FAR * This,
    DWORD __RPC_FAR *pdwClientID);


void __RPC_STUB IAgentPrivateNotifySink_GetClientID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentPrivateNotifySink_INTERFACE_DEFINED__ */


#ifndef __IAgentCustomMarshalMaker_INTERFACE_DEFINED__
#define __IAgentCustomMarshalMaker_INTERFACE_DEFINED__

/* interface IAgentCustomMarshalMaker */
/* [unique][helpstring][uuid][hidden][local][object] */ 


EXTERN_C const IID IID_IAgentCustomMarshalMaker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("408D7542-C8FC-11d1-AA83-00C04FA34D72")
    IAgentCustomMarshalMaker : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Create( 
            /* [in] */ IUnknown __RPC_FAR *pSink,
            /* [in] */ REFIID riidSink,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *pMarshaledSink) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCustomMarshalMakerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCustomMarshalMaker __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCustomMarshalMaker __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCustomMarshalMaker __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Create )( 
            IAgentCustomMarshalMaker __RPC_FAR * This,
            /* [in] */ IUnknown __RPC_FAR *pSink,
            /* [in] */ REFIID riidSink,
            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *pMarshaledSink);
        
        END_INTERFACE
    } IAgentCustomMarshalMakerVtbl;

    interface IAgentCustomMarshalMaker
    {
        CONST_VTBL struct IAgentCustomMarshalMakerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCustomMarshalMaker_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCustomMarshalMaker_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCustomMarshalMaker_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCustomMarshalMaker_Create(This,pSink,riidSink,pMarshaledSink)	\
    (This)->lpVtbl -> Create(This,pSink,riidSink,pMarshaledSink)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentCustomMarshalMaker_Create_Proxy( 
    IAgentCustomMarshalMaker __RPC_FAR * This,
    /* [in] */ IUnknown __RPC_FAR *pSink,
    /* [in] */ REFIID riidSink,
    /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *pMarshaledSink);


void __RPC_STUB IAgentCustomMarshalMaker_Create_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCustomMarshalMaker_INTERFACE_DEFINED__ */


#ifndef __IAgentClientStatus_INTERFACE_DEFINED__
#define __IAgentClientStatus_INTERFACE_DEFINED__

/* interface IAgentClientStatus */
/* [unique][helpstring][uuid][local][object] */ 


EXTERN_C const IID IID_IAgentClientStatus;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C5649F70-7AED-11d1-B9A8-00C04FD97575")
    IAgentClientStatus : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Ping( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentClientStatusVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentClientStatus __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentClientStatus __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentClientStatus __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Ping )( 
            IAgentClientStatus __RPC_FAR * This);
        
        END_INTERFACE
    } IAgentClientStatusVtbl;

    interface IAgentClientStatus
    {
        CONST_VTBL struct IAgentClientStatusVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentClientStatus_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentClientStatus_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentClientStatus_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentClientStatus_Ping(This)	\
    (This)->lpVtbl -> Ping(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IAgentClientStatus_Ping_Proxy( 
    IAgentClientStatus __RPC_FAR * This);


void __RPC_STUB IAgentClientStatus_Ping_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentClientStatus_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_AgentServer_0229 */
/* [local] */ 

#define	AGENT_VERSION_MAJOR	( 2 )

#define	AGENT_VERSION_MINOR	( 0 )



extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0229_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentServer_0229_v0_0_s_ifspec;


#ifndef __AgentServerObjects_LIBRARY_DEFINED__
#define __AgentServerObjects_LIBRARY_DEFINED__

/* library AgentServerObjects */
/* [helpstring][version][uuid] */ 




















EXTERN_C const IID LIBID_AgentServerObjects;

EXTERN_C const CLSID CLSID_AgentServer;

#ifdef __cplusplus

class DECLSPEC_UUID("D45FD2FC-5C6E-11D1-9EC1-00C04FD7081F")
AgentServer;
#endif
#endif /* __AgentServerObjects_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif

#endif // _MSC_VER < 1200
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\alg.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for alg.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __alg_h__
#define __alg_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IAdapterInfo_FWD_DEFINED__
#define __IAdapterInfo_FWD_DEFINED__
typedef interface IAdapterInfo IAdapterInfo;
#endif 	/* __IAdapterInfo_FWD_DEFINED__ */


#ifndef __IPendingProxyConnection_FWD_DEFINED__
#define __IPendingProxyConnection_FWD_DEFINED__
typedef interface IPendingProxyConnection IPendingProxyConnection;
#endif 	/* __IPendingProxyConnection_FWD_DEFINED__ */


#ifndef __IDataChannel_FWD_DEFINED__
#define __IDataChannel_FWD_DEFINED__
typedef interface IDataChannel IDataChannel;
#endif 	/* __IDataChannel_FWD_DEFINED__ */


#ifndef __IPersistentDataChannel_FWD_DEFINED__
#define __IPersistentDataChannel_FWD_DEFINED__
typedef interface IPersistentDataChannel IPersistentDataChannel;
#endif 	/* __IPersistentDataChannel_FWD_DEFINED__ */


#ifndef __IPrimaryControlChannel_FWD_DEFINED__
#define __IPrimaryControlChannel_FWD_DEFINED__
typedef interface IPrimaryControlChannel IPrimaryControlChannel;
#endif 	/* __IPrimaryControlChannel_FWD_DEFINED__ */


#ifndef __ISecondaryControlChannel_FWD_DEFINED__
#define __ISecondaryControlChannel_FWD_DEFINED__
typedef interface ISecondaryControlChannel ISecondaryControlChannel;
#endif 	/* __ISecondaryControlChannel_FWD_DEFINED__ */


#ifndef __IEnumAdapterInfo_FWD_DEFINED__
#define __IEnumAdapterInfo_FWD_DEFINED__
typedef interface IEnumAdapterInfo IEnumAdapterInfo;
#endif 	/* __IEnumAdapterInfo_FWD_DEFINED__ */


#ifndef __IAdapterNotificationSink_FWD_DEFINED__
#define __IAdapterNotificationSink_FWD_DEFINED__
typedef interface IAdapterNotificationSink IAdapterNotificationSink;
#endif 	/* __IAdapterNotificationSink_FWD_DEFINED__ */


#ifndef __IApplicationGatewayServices_FWD_DEFINED__
#define __IApplicationGatewayServices_FWD_DEFINED__
typedef interface IApplicationGatewayServices IApplicationGatewayServices;
#endif 	/* __IApplicationGatewayServices_FWD_DEFINED__ */


#ifndef __IApplicationGateway_FWD_DEFINED__
#define __IApplicationGateway_FWD_DEFINED__
typedef interface IApplicationGateway IApplicationGateway;
#endif 	/* __IApplicationGateway_FWD_DEFINED__ */


#ifndef __ApplicationGatewayServices_FWD_DEFINED__
#define __ApplicationGatewayServices_FWD_DEFINED__

#ifdef __cplusplus
typedef class ApplicationGatewayServices ApplicationGatewayServices;
#else
typedef struct ApplicationGatewayServices ApplicationGatewayServices;
#endif /* __cplusplus */

#endif 	/* __ApplicationGatewayServices_FWD_DEFINED__ */


#ifndef __PrimaryControlChannel_FWD_DEFINED__
#define __PrimaryControlChannel_FWD_DEFINED__

#ifdef __cplusplus
typedef class PrimaryControlChannel PrimaryControlChannel;
#else
typedef struct PrimaryControlChannel PrimaryControlChannel;
#endif /* __cplusplus */

#endif 	/* __PrimaryControlChannel_FWD_DEFINED__ */


#ifndef __SecondaryControlChannel_FWD_DEFINED__
#define __SecondaryControlChannel_FWD_DEFINED__

#ifdef __cplusplus
typedef class SecondaryControlChannel SecondaryControlChannel;
#else
typedef struct SecondaryControlChannel SecondaryControlChannel;
#endif /* __cplusplus */

#endif 	/* __SecondaryControlChannel_FWD_DEFINED__ */


#ifndef __AdapterInfo_FWD_DEFINED__
#define __AdapterInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class AdapterInfo AdapterInfo;
#else
typedef struct AdapterInfo AdapterInfo;
#endif /* __cplusplus */

#endif 	/* __AdapterInfo_FWD_DEFINED__ */


#ifndef __EnumAdapterInfo_FWD_DEFINED__
#define __EnumAdapterInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class EnumAdapterInfo EnumAdapterInfo;
#else
typedef struct EnumAdapterInfo EnumAdapterInfo;
#endif /* __cplusplus */

#endif 	/* __EnumAdapterInfo_FWD_DEFINED__ */


#ifndef __PendingProxyConnection_FWD_DEFINED__
#define __PendingProxyConnection_FWD_DEFINED__

#ifdef __cplusplus
typedef class PendingProxyConnection PendingProxyConnection;
#else
typedef struct PendingProxyConnection PendingProxyConnection;
#endif /* __cplusplus */

#endif 	/* __PendingProxyConnection_FWD_DEFINED__ */


#ifndef __DataChannel_FWD_DEFINED__
#define __DataChannel_FWD_DEFINED__

#ifdef __cplusplus
typedef class DataChannel DataChannel;
#else
typedef struct DataChannel DataChannel;
#endif /* __cplusplus */

#endif 	/* __DataChannel_FWD_DEFINED__ */


#ifndef __PersistentDataChannel_FWD_DEFINED__
#define __PersistentDataChannel_FWD_DEFINED__

#ifdef __cplusplus
typedef class PersistentDataChannel PersistentDataChannel;
#else
typedef struct PersistentDataChannel PersistentDataChannel;
#endif /* __cplusplus */

#endif 	/* __PersistentDataChannel_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_alg_0000_0000 */
/* [local] */ 

//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (C) Microsoft Corporation, 1992-2001.
//
//--------------------------------------------------------------------------
//  MODULE: alg.h
//
#define	ALG_MAXIMUM_PORT_RANGE_SIZE	( 10 )

typedef 
enum _ALG_PROTOCOL
    {	eALG_TCP	= 0x1,
	eALG_UDP	= 0x2
    } 	ALG_PROTOCOL;

typedef 
enum _ALG_CAPTURE
    {	eALG_SOURCE_CAPTURE	= 0x1,
	eALG_DESTINATION_CAPTURE	= 0x2
    } 	ALG_CAPTURE;

typedef 
enum _ALG_DIRECTION
    {	eALG_INBOUND	= 0x1,
	eALG_OUTBOUND	= 0x2,
	eALG_BOTH	= 0x3
    } 	ALG_DIRECTION;

typedef 
enum _ALG_ADAPTER_TYPE
    {	eALG_PRIVATE	= 0x1,
	eALG_BOUNDARY	= 0x2,
	eALG_FIREWALLED	= 0x4
    } 	ALG_ADAPTER_TYPE;

typedef 
enum _ALG_NOTIFICATION
    {	eALG_NONE	= 0,
	eALG_SESSION_CREATION	= 0x1,
	eALG_SESSION_DELETION	= 0x2,
	eALG_SESSION_BOTH	= 0x3
    } 	ALG_NOTIFICATION;

typedef struct _ALG_PRIMARY_CHANNEL_PROPERTIES
    {
    ALG_PROTOCOL eProtocol;
    USHORT usCapturePort;
    ALG_CAPTURE eCaptureType;
    BOOL fCaptureInbound;
    ULONG ulListeningAddress;
    USHORT usListeningPort;
    ULONG ulAdapterIndex;
    } 	ALG_PRIMARY_CHANNEL_PROPERTIES;

typedef struct _ALG_SECONDARY_CHANNEL_PROPERTIES
    {
    ALG_PROTOCOL eProtocol;
    ULONG ulPrivateAddress;
    USHORT usPrivatePort;
    ULONG ulPublicAddress;
    USHORT usPublicPort;
    ULONG ulRemoteAddress;
    USHORT usRemotePort;
    ULONG ulListenAddress;
    USHORT usListenPort;
    ALG_DIRECTION eDirection;
    BOOL fPersistent;
    } 	ALG_SECONDARY_CHANNEL_PROPERTIES;

typedef struct _ALG_DATA_CHANNEL_PROPERTIES
    {
    ALG_PROTOCOL eProtocol;
    ULONG ulPrivateAddress;
    USHORT usPrivatePort;
    ULONG ulPublicAddress;
    USHORT usPublicPort;
    ULONG ulRemoteAddress;
    USHORT usRemotePort;
    ALG_DIRECTION eDirection;
    ALG_NOTIFICATION eDesiredNotification;
    } 	ALG_DATA_CHANNEL_PROPERTIES;

typedef struct _ALG_PERSISTENT_DATA_CHANNEL_PROPERTIES
    {
    ALG_PROTOCOL eProtocol;
    ULONG ulPrivateAddress;
    USHORT usPrivatePort;
    ULONG ulPublicAddress;
    USHORT usPublicPort;
    ULONG ulRemoteAddress;
    USHORT usRemotePort;
    ALG_DIRECTION eDirection;
    } 	ALG_PERSISTENT_DATA_CHANNEL_PROPERTIES;



extern RPC_IF_HANDLE __MIDL_itf_alg_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_alg_0000_0000_v0_0_s_ifspec;

#ifndef __IAdapterInfo_INTERFACE_DEFINED__
#define __IAdapterInfo_INTERFACE_DEFINED__

/* interface IAdapterInfo */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IAdapterInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("480BF94A-09FD-4F8A-A3E0-B0700282D84D")
    IAdapterInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAdapterIndex( 
            /* [out] */ __RPC__out ULONG *pulIndex) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAdapterType( 
            /* [out] */ __RPC__out ALG_ADAPTER_TYPE *pAdapterType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAdapterAddresses( 
            /* [out] */ __RPC__out ULONG *pulAddressCount,
            /* [out] */ __RPC__deref_out_opt ULONG **prgAddresses) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAdapterInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAdapterInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAdapterInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAdapterInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetAdapterIndex )( 
            __RPC__in IAdapterInfo * This,
            /* [out] */ __RPC__out ULONG *pulIndex);
        
        HRESULT ( STDMETHODCALLTYPE *GetAdapterType )( 
            __RPC__in IAdapterInfo * This,
            /* [out] */ __RPC__out ALG_ADAPTER_TYPE *pAdapterType);
        
        HRESULT ( STDMETHODCALLTYPE *GetAdapterAddresses )( 
            __RPC__in IAdapterInfo * This,
            /* [out] */ __RPC__out ULONG *pulAddressCount,
            /* [out] */ __RPC__deref_out_opt ULONG **prgAddresses);
        
        END_INTERFACE
    } IAdapterInfoVtbl;

    interface IAdapterInfo
    {
        CONST_VTBL struct IAdapterInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAdapterInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAdapterInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAdapterInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAdapterInfo_GetAdapterIndex(This,pulIndex)	\
    ( (This)->lpVtbl -> GetAdapterIndex(This,pulIndex) ) 

#define IAdapterInfo_GetAdapterType(This,pAdapterType)	\
    ( (This)->lpVtbl -> GetAdapterType(This,pAdapterType) ) 

#define IAdapterInfo_GetAdapterAddresses(This,pulAddressCount,prgAddresses)	\
    ( (This)->lpVtbl -> GetAdapterAddresses(This,pulAddressCount,prgAddresses) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAdapterInfo_INTERFACE_DEFINED__ */


#ifndef __IPendingProxyConnection_INTERFACE_DEFINED__
#define __IPendingProxyConnection_INTERFACE_DEFINED__

/* interface IPendingProxyConnection */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IPendingProxyConnection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B68E5043-3E3D-4CC2-B9C1-5F8F88FEE81C")
    IPendingProxyConnection : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Cancel( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPendingProxyConnectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IPendingProxyConnection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IPendingProxyConnection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IPendingProxyConnection * This);
        
        HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            __RPC__in IPendingProxyConnection * This);
        
        END_INTERFACE
    } IPendingProxyConnectionVtbl;

    interface IPendingProxyConnection
    {
        CONST_VTBL struct IPendingProxyConnectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPendingProxyConnection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPendingProxyConnection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPendingProxyConnection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPendingProxyConnection_Cancel(This)	\
    ( (This)->lpVtbl -> Cancel(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPendingProxyConnection_INTERFACE_DEFINED__ */


#ifndef __IDataChannel_INTERFACE_DEFINED__
#define __IDataChannel_INTERFACE_DEFINED__

/* interface IDataChannel */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IDataChannel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AD42D12A-4AD0-4856-919E-E854C91D1856")
    IDataChannel : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Cancel( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetChannelProperties( 
            /* [out] */ ALG_DATA_CHANNEL_PROPERTIES **ppProperties) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSessionCreationEventHandle( 
            /* [out] */ HANDLE *pHandle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSessionDeletionEventHandle( 
            /* [out] */ HANDLE *pHandle) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDataChannelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDataChannel * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDataChannel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDataChannel * This);
        
        HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            IDataChannel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetChannelProperties )( 
            IDataChannel * This,
            /* [out] */ ALG_DATA_CHANNEL_PROPERTIES **ppProperties);
        
        HRESULT ( STDMETHODCALLTYPE *GetSessionCreationEventHandle )( 
            IDataChannel * This,
            /* [out] */ HANDLE *pHandle);
        
        HRESULT ( STDMETHODCALLTYPE *GetSessionDeletionEventHandle )( 
            IDataChannel * This,
            /* [out] */ HANDLE *pHandle);
        
        END_INTERFACE
    } IDataChannelVtbl;

    interface IDataChannel
    {
        CONST_VTBL struct IDataChannelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDataChannel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDataChannel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDataChannel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDataChannel_Cancel(This)	\
    ( (This)->lpVtbl -> Cancel(This) ) 

#define IDataChannel_GetChannelProperties(This,ppProperties)	\
    ( (This)->lpVtbl -> GetChannelProperties(This,ppProperties) ) 

#define IDataChannel_GetSessionCreationEventHandle(This,pHandle)	\
    ( (This)->lpVtbl -> GetSessionCreationEventHandle(This,pHandle) ) 

#define IDataChannel_GetSessionDeletionEventHandle(This,pHandle)	\
    ( (This)->lpVtbl -> GetSessionDeletionEventHandle(This,pHandle) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDataChannel_INTERFACE_DEFINED__ */


#ifndef __IPersistentDataChannel_INTERFACE_DEFINED__
#define __IPersistentDataChannel_INTERFACE_DEFINED__

/* interface IPersistentDataChannel */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IPersistentDataChannel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A180E934-D92A-415D-9144-759F8054E8F6")
    IPersistentDataChannel : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Cancel( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetChannelProperties( 
            /* [out] */ __RPC__deref_out_opt ALG_PERSISTENT_DATA_CHANNEL_PROPERTIES **ppProperties) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPersistentDataChannelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IPersistentDataChannel * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IPersistentDataChannel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IPersistentDataChannel * This);
        
        HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            __RPC__in IPersistentDataChannel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetChannelProperties )( 
            __RPC__in IPersistentDataChannel * This,
            /* [out] */ __RPC__deref_out_opt ALG_PERSISTENT_DATA_CHANNEL_PROPERTIES **ppProperties);
        
        END_INTERFACE
    } IPersistentDataChannelVtbl;

    interface IPersistentDataChannel
    {
        CONST_VTBL struct IPersistentDataChannelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPersistentDataChannel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPersistentDataChannel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPersistentDataChannel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPersistentDataChannel_Cancel(This)	\
    ( (This)->lpVtbl -> Cancel(This) ) 

#define IPersistentDataChannel_GetChannelProperties(This,ppProperties)	\
    ( (This)->lpVtbl -> GetChannelProperties(This,ppProperties) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPersistentDataChannel_INTERFACE_DEFINED__ */


#ifndef __IPrimaryControlChannel_INTERFACE_DEFINED__
#define __IPrimaryControlChannel_INTERFACE_DEFINED__

/* interface IPrimaryControlChannel */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IPrimaryControlChannel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1A2E8B62-9012-4BE6-84AE-32BD66BA657A")
    IPrimaryControlChannel : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Cancel( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetChannelProperties( 
            /* [out] */ __RPC__deref_out_opt ALG_PRIMARY_CHANNEL_PROPERTIES **ppProperties) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOriginalDestinationInformation( 
            /* [in] */ ULONG ulSourceAddress,
            /* [in] */ USHORT usSourcePort,
            /* [out] */ __RPC__out ULONG *pulOriginalDestinationAddress,
            /* [out] */ __RPC__out USHORT *pusOriginalDestinationPort,
            /* [out] */ __RPC__out ULONG *pulRemapDestinationAddress,
            /* [out] */ __RPC__out USHORT *pulRemapDestinationPort,
            /* [out] */ __RPC__deref_out_opt IAdapterInfo **ppReceiveAdapter) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPrimaryControlChannelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IPrimaryControlChannel * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IPrimaryControlChannel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IPrimaryControlChannel * This);
        
        HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            __RPC__in IPrimaryControlChannel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetChannelProperties )( 
            __RPC__in IPrimaryControlChannel * This,
            /* [out] */ __RPC__deref_out_opt ALG_PRIMARY_CHANNEL_PROPERTIES **ppProperties);
        
        HRESULT ( STDMETHODCALLTYPE *GetOriginalDestinationInformation )( 
            __RPC__in IPrimaryControlChannel * This,
            /* [in] */ ULONG ulSourceAddress,
            /* [in] */ USHORT usSourcePort,
            /* [out] */ __RPC__out ULONG *pulOriginalDestinationAddress,
            /* [out] */ __RPC__out USHORT *pusOriginalDestinationPort,
            /* [out] */ __RPC__out ULONG *pulRemapDestinationAddress,
            /* [out] */ __RPC__out USHORT *pulRemapDestinationPort,
            /* [out] */ __RPC__deref_out_opt IAdapterInfo **ppReceiveAdapter);
        
        END_INTERFACE
    } IPrimaryControlChannelVtbl;

    interface IPrimaryControlChannel
    {
        CONST_VTBL struct IPrimaryControlChannelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPrimaryControlChannel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPrimaryControlChannel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPrimaryControlChannel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPrimaryControlChannel_Cancel(This)	\
    ( (This)->lpVtbl -> Cancel(This) ) 

#define IPrimaryControlChannel_GetChannelProperties(This,ppProperties)	\
    ( (This)->lpVtbl -> GetChannelProperties(This,ppProperties) ) 

#define IPrimaryControlChannel_GetOriginalDestinationInformation(This,ulSourceAddress,usSourcePort,pulOriginalDestinationAddress,pusOriginalDestinationPort,pulRemapDestinationAddress,pulRemapDestinationPort,ppReceiveAdapter)	\
    ( (This)->lpVtbl -> GetOriginalDestinationInformation(This,ulSourceAddress,usSourcePort,pulOriginalDestinationAddress,pusOriginalDestinationPort,pulRemapDestinationAddress,pulRemapDestinationPort,ppReceiveAdapter) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPrimaryControlChannel_INTERFACE_DEFINED__ */


#ifndef __ISecondaryControlChannel_INTERFACE_DEFINED__
#define __ISecondaryControlChannel_INTERFACE_DEFINED__

/* interface ISecondaryControlChannel */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_ISecondaryControlChannel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A23F9D10-714C-41FE-8471-FFB19BC28454")
    ISecondaryControlChannel : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Cancel( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetChannelProperties( 
            /* [out] */ __RPC__deref_out_opt ALG_SECONDARY_CHANNEL_PROPERTIES **ppProperties) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOriginalDestinationInformation( 
            /* [in] */ ULONG ulSourceAddress,
            /* [in] */ USHORT usSourcePort,
            /* [out] */ __RPC__out ULONG *pulOriginalDestinationAddress,
            /* [out] */ __RPC__out USHORT *pusOriginalDestinationPort,
            /* [out] */ __RPC__deref_out_opt IAdapterInfo **ppReceiveAdapter) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISecondaryControlChannelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ISecondaryControlChannel * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ISecondaryControlChannel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ISecondaryControlChannel * This);
        
        HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            __RPC__in ISecondaryControlChannel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetChannelProperties )( 
            __RPC__in ISecondaryControlChannel * This,
            /* [out] */ __RPC__deref_out_opt ALG_SECONDARY_CHANNEL_PROPERTIES **ppProperties);
        
        HRESULT ( STDMETHODCALLTYPE *GetOriginalDestinationInformation )( 
            __RPC__in ISecondaryControlChannel * This,
            /* [in] */ ULONG ulSourceAddress,
            /* [in] */ USHORT usSourcePort,
            /* [out] */ __RPC__out ULONG *pulOriginalDestinationAddress,
            /* [out] */ __RPC__out USHORT *pusOriginalDestinationPort,
            /* [out] */ __RPC__deref_out_opt IAdapterInfo **ppReceiveAdapter);
        
        END_INTERFACE
    } ISecondaryControlChannelVtbl;

    interface ISecondaryControlChannel
    {
        CONST_VTBL struct ISecondaryControlChannelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISecondaryControlChannel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISecondaryControlChannel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISecondaryControlChannel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISecondaryControlChannel_Cancel(This)	\
    ( (This)->lpVtbl -> Cancel(This) ) 

#define ISecondaryControlChannel_GetChannelProperties(This,ppProperties)	\
    ( (This)->lpVtbl -> GetChannelProperties(This,ppProperties) ) 

#define ISecondaryControlChannel_GetOriginalDestinationInformation(This,ulSourceAddress,usSourcePort,pulOriginalDestinationAddress,pusOriginalDestinationPort,ppReceiveAdapter)	\
    ( (This)->lpVtbl -> GetOriginalDestinationInformation(This,ulSourceAddress,usSourcePort,pulOriginalDestinationAddress,pusOriginalDestinationPort,ppReceiveAdapter) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISecondaryControlChannel_INTERFACE_DEFINED__ */


#ifndef __IEnumAdapterInfo_INTERFACE_DEFINED__
#define __IEnumAdapterInfo_INTERFACE_DEFINED__

/* interface IEnumAdapterInfo */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IEnumAdapterInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A23F9D11-714C-41FE-8471-FFB19BC28454")
    IEnumAdapterInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pCeltFetched) IAdapterInfo **rgAI,
            /* [out] */ __RPC__out ULONG *pCeltFetched) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Skip( 
            /* [in] */ ULONG celt) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clone( 
            /* [out] */ __RPC__deref_out_opt IEnumAdapterInfo **ppEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IEnumAdapterInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IEnumAdapterInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IEnumAdapterInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IEnumAdapterInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *Next )( 
            __RPC__in IEnumAdapterInfo * This,
            /* [in] */ ULONG celt,
            /* [length_is][size_is][out] */ __RPC__out_ecount_part(celt, *pCeltFetched) IAdapterInfo **rgAI,
            /* [out] */ __RPC__out ULONG *pCeltFetched);
        
        HRESULT ( STDMETHODCALLTYPE *Skip )( 
            __RPC__in IEnumAdapterInfo * This,
            /* [in] */ ULONG celt);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in IEnumAdapterInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clone )( 
            __RPC__in IEnumAdapterInfo * This,
            /* [out] */ __RPC__deref_out_opt IEnumAdapterInfo **ppEnum);
        
        END_INTERFACE
    } IEnumAdapterInfoVtbl;

    interface IEnumAdapterInfo
    {
        CONST_VTBL struct IEnumAdapterInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumAdapterInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumAdapterInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumAdapterInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumAdapterInfo_Next(This,celt,rgAI,pCeltFetched)	\
    ( (This)->lpVtbl -> Next(This,celt,rgAI,pCeltFetched) ) 

#define IEnumAdapterInfo_Skip(This,celt)	\
    ( (This)->lpVtbl -> Skip(This,celt) ) 

#define IEnumAdapterInfo_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IEnumAdapterInfo_Clone(This,ppEnum)	\
    ( (This)->lpVtbl -> Clone(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumAdapterInfo_INTERFACE_DEFINED__ */


#ifndef __IAdapterNotificationSink_INTERFACE_DEFINED__
#define __IAdapterNotificationSink_INTERFACE_DEFINED__

/* interface IAdapterNotificationSink */
/* [unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IAdapterNotificationSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("44AB2DC3-23B2-47DE-8228-2E1CCEEB9911")
    IAdapterNotificationSink : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AdapterAdded( 
            __RPC__in_opt IAdapterInfo *pAdapter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AdapterRemoved( 
            __RPC__in_opt IAdapterInfo *pAdapter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AdapterModified( 
            __RPC__in_opt IAdapterInfo *pAdapter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AdapterUpdatePortMapping( 
            __RPC__in_opt IAdapterInfo *pAdapter) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAdapterNotificationSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAdapterNotificationSink * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAdapterNotificationSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAdapterNotificationSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *AdapterAdded )( 
            __RPC__in IAdapterNotificationSink * This,
            __RPC__in_opt IAdapterInfo *pAdapter);
        
        HRESULT ( STDMETHODCALLTYPE *AdapterRemoved )( 
            __RPC__in IAdapterNotificationSink * This,
            __RPC__in_opt IAdapterInfo *pAdapter);
        
        HRESULT ( STDMETHODCALLTYPE *AdapterModified )( 
            __RPC__in IAdapterNotificationSink * This,
            __RPC__in_opt IAdapterInfo *pAdapter);
        
        HRESULT ( STDMETHODCALLTYPE *AdapterUpdatePortMapping )( 
            __RPC__in IAdapterNotificationSink * This,
            __RPC__in_opt IAdapterInfo *pAdapter);
        
        END_INTERFACE
    } IAdapterNotificationSinkVtbl;

    interface IAdapterNotificationSink
    {
        CONST_VTBL struct IAdapterNotificationSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAdapterNotificationSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAdapterNotificationSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAdapterNotificationSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAdapterNotificationSink_AdapterAdded(This,pAdapter)	\
    ( (This)->lpVtbl -> AdapterAdded(This,pAdapter) ) 

#define IAdapterNotificationSink_AdapterRemoved(This,pAdapter)	\
    ( (This)->lpVtbl -> AdapterRemoved(This,pAdapter) ) 

#define IAdapterNotificationSink_AdapterModified(This,pAdapter)	\
    ( (This)->lpVtbl -> AdapterModified(This,pAdapter) ) 

#define IAdapterNotificationSink_AdapterUpdatePortMapping(This,pAdapter)	\
    ( (This)->lpVtbl -> AdapterUpdatePortMapping(This,pAdapter) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAdapterNotificationSink_INTERFACE_DEFINED__ */


#ifndef __IApplicationGatewayServices_INTERFACE_DEFINED__
#define __IApplicationGatewayServices_INTERFACE_DEFINED__

/* interface IApplicationGatewayServices */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IApplicationGatewayServices;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5134842A-FDCE-485D-93CD-DE1640643BBE")
    IApplicationGatewayServices : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreatePrimaryControlChannel( 
            /* [in] */ ULONG uAdapterIndex,
            /* [in] */ ALG_PROTOCOL eProtocol,
            /* [in] */ USHORT usPortToCapture,
            /* [in] */ ALG_CAPTURE eCaptureType,
            /* [in] */ BOOL fCaptureInbound,
            /* [in] */ ULONG ulListenAddress,
            /* [in] */ USHORT usListenPort,
            /* [out] */ __RPC__deref_out_opt IPrimaryControlChannel **ppIControlChannel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateSecondaryControlChannel( 
            /* [in] */ ALG_PROTOCOL eProtocol,
            /* [in] */ ULONG ulPrivateAddress,
            /* [in] */ USHORT usPrivatePort,
            /* [in] */ ULONG ulPublicAddress,
            /* [in] */ USHORT usPublicPort,
            /* [in] */ ULONG ulRemoteAddress,
            /* [in] */ USHORT usRemotePort,
            /* [in] */ ULONG ulListenAddress,
            /* [in] */ USHORT usListenPort,
            /* [in] */ ALG_DIRECTION eDirection,
            /* [in] */ BOOL fPersistent,
            /* [out] */ __RPC__deref_out_opt ISecondaryControlChannel **ppControlChannel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBestSourceAddressForDestinationAddress( 
            /* [in] */ ULONG ulDstAddress,
            /* [in] */ BOOL fDemandDial,
            /* [out] */ __RPC__out ULONG *pulBestSrcAddress) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PrepareProxyConnection( 
            /* [in] */ ALG_PROTOCOL eProtocol,
            /* [in] */ ULONG ulSrcAddress,
            /* [in] */ USHORT usSrcPort,
            /* [in] */ ULONG ulDstAddress,
            /* [in] */ USHORT usDstPort,
            /* [in] */ BOOL fNoTimeout,
            /* [out] */ __RPC__deref_out_opt IPendingProxyConnection **ppPendingConnection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PrepareSourceModifiedProxyConnection( 
            /* [in] */ ALG_PROTOCOL eProtocol,
            /* [in] */ ULONG ulSrcAddress,
            /* [in] */ USHORT usSrcPort,
            /* [in] */ ULONG ulDstAddress,
            /* [in] */ USHORT usDstPort,
            /* [in] */ ULONG ulNewSrcAddress,
            /* [in] */ USHORT usNewSourcePort,
            /* [out] */ __RPC__deref_out_opt IPendingProxyConnection **ppPendingConnection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateDataChannel( 
            /* [in] */ ALG_PROTOCOL eProtocol,
            /* [in] */ ULONG ulPrivateAddress,
            /* [in] */ USHORT usPrivatePort,
            /* [in] */ ULONG ulPublicAddress,
            /* [in] */ USHORT usPublicPort,
            /* [in] */ ULONG ulRemoteAddress,
            /* [in] */ USHORT usRemotePort,
            /* [in] */ ALG_DIRECTION eDirection,
            /* [in] */ ALG_NOTIFICATION eDesiredNotification,
            /* [in] */ BOOL fNoTimeout,
            /* [out] */ __RPC__deref_out_opt IDataChannel **ppDataChannel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreatePersistentDataChannel( 
            /* [in] */ ALG_PROTOCOL eProtocol,
            /* [in] */ ULONG ulPrivateAddress,
            /* [in] */ USHORT usPrivatePort,
            /* [in] */ ULONG ulPublicAddress,
            /* [in] */ USHORT usPublicPort,
            /* [in] */ ULONG ulRemoteAddress,
            /* [in] */ USHORT usRemotePort,
            /* [in] */ ALG_DIRECTION eDirection,
            /* [out] */ __RPC__deref_out_opt IPersistentDataChannel **ppIPersistentDataChannel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReservePort( 
            /* [in] */ USHORT usPortCount,
            /* [out] */ __RPC__out USHORT *pusReservedPort) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseReservedPort( 
            /* [in] */ USHORT usReservedPortBase,
            /* [in] */ USHORT usPortCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumerateAdapters( 
            /* [out] */ __RPC__deref_out_opt IEnumAdapterInfo **ppIEnumAdapterInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StartAdapterNotifications( 
            /* [in] */ __RPC__in_opt IAdapterNotificationSink *pSink,
            /* [in] */ __RPC__in DWORD *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StopAdapterNotifications( 
            /* [in] */ DWORD dwCookieOfSink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LookupAdapterPortMapping( 
            /* [in] */ ULONG ulAdapterIndex,
            /* [in] */ UCHAR Protocol,
            /* [in] */ ULONG ulDestinationAddress,
            /* [in] */ USHORT usDestinationPort,
            /* [out] */ __RPC__out ULONG *pulRemapAddress,
            /* [out] */ __RPC__out USHORT *pusRemapPort) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IApplicationGatewayServicesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IApplicationGatewayServices * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IApplicationGatewayServices * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IApplicationGatewayServices * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreatePrimaryControlChannel )( 
            __RPC__in IApplicationGatewayServices * This,
            /* [in] */ ULONG uAdapterIndex,
            /* [in] */ ALG_PROTOCOL eProtocol,
            /* [in] */ USHORT usPortToCapture,
            /* [in] */ ALG_CAPTURE eCaptureType,
            /* [in] */ BOOL fCaptureInbound,
            /* [in] */ ULONG ulListenAddress,
            /* [in] */ USHORT usListenPort,
            /* [out] */ __RPC__deref_out_opt IPrimaryControlChannel **ppIControlChannel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateSecondaryControlChannel )( 
            __RPC__in IApplicationGatewayServices * This,
            /* [in] */ ALG_PROTOCOL eProtocol,
            /* [in] */ ULONG ulPrivateAddress,
            /* [in] */ USHORT usPrivatePort,
            /* [in] */ ULONG ulPublicAddress,
            /* [in] */ USHORT usPublicPort,
            /* [in] */ ULONG ulRemoteAddress,
            /* [in] */ USHORT usRemotePort,
            /* [in] */ ULONG ulListenAddress,
            /* [in] */ USHORT usListenPort,
            /* [in] */ ALG_DIRECTION eDirection,
            /* [in] */ BOOL fPersistent,
            /* [out] */ __RPC__deref_out_opt ISecondaryControlChannel **ppControlChannel);
        
        HRESULT ( STDMETHODCALLTYPE *GetBestSourceAddressForDestinationAddress )( 
            __RPC__in IApplicationGatewayServices * This,
            /* [in] */ ULONG ulDstAddress,
            /* [in] */ BOOL fDemandDial,
            /* [out] */ __RPC__out ULONG *pulBestSrcAddress);
        
        HRESULT ( STDMETHODCALLTYPE *PrepareProxyConnection )( 
            __RPC__in IApplicationGatewayServices * This,
            /* [in] */ ALG_PROTOCOL eProtocol,
            /* [in] */ ULONG ulSrcAddress,
            /* [in] */ USHORT usSrcPort,
            /* [in] */ ULONG ulDstAddress,
            /* [in] */ USHORT usDstPort,
            /* [in] */ BOOL fNoTimeout,
            /* [out] */ __RPC__deref_out_opt IPendingProxyConnection **ppPendingConnection);
        
        HRESULT ( STDMETHODCALLTYPE *PrepareSourceModifiedProxyConnection )( 
            __RPC__in IApplicationGatewayServices * This,
            /* [in] */ ALG_PROTOCOL eProtocol,
            /* [in] */ ULONG ulSrcAddress,
            /* [in] */ USHORT usSrcPort,
            /* [in] */ ULONG ulDstAddress,
            /* [in] */ USHORT usDstPort,
            /* [in] */ ULONG ulNewSrcAddress,
            /* [in] */ USHORT usNewSourcePort,
            /* [out] */ __RPC__deref_out_opt IPendingProxyConnection **ppPendingConnection);
        
        HRESULT ( STDMETHODCALLTYPE *CreateDataChannel )( 
            __RPC__in IApplicationGatewayServices * This,
            /* [in] */ ALG_PROTOCOL eProtocol,
            /* [in] */ ULONG ulPrivateAddress,
            /* [in] */ USHORT usPrivatePort,
            /* [in] */ ULONG ulPublicAddress,
            /* [in] */ USHORT usPublicPort,
            /* [in] */ ULONG ulRemoteAddress,
            /* [in] */ USHORT usRemotePort,
            /* [in] */ ALG_DIRECTION eDirection,
            /* [in] */ ALG_NOTIFICATION eDesiredNotification,
            /* [in] */ BOOL fNoTimeout,
            /* [out] */ __RPC__deref_out_opt IDataChannel **ppDataChannel);
        
        HRESULT ( STDMETHODCALLTYPE *CreatePersistentDataChannel )( 
            __RPC__in IApplicationGatewayServices * This,
            /* [in] */ ALG_PROTOCOL eProtocol,
            /* [in] */ ULONG ulPrivateAddress,
            /* [in] */ USHORT usPrivatePort,
            /* [in] */ ULONG ulPublicAddress,
            /* [in] */ USHORT usPublicPort,
            /* [in] */ ULONG ulRemoteAddress,
            /* [in] */ USHORT usRemotePort,
            /* [in] */ ALG_DIRECTION eDirection,
            /* [out] */ __RPC__deref_out_opt IPersistentDataChannel **ppIPersistentDataChannel);
        
        HRESULT ( STDMETHODCALLTYPE *ReservePort )( 
            __RPC__in IApplicationGatewayServices * This,
            /* [in] */ USHORT usPortCount,
            /* [out] */ __RPC__out USHORT *pusReservedPort);
        
        HRESULT ( STDMETHODCALLTYPE *ReleaseReservedPort )( 
            __RPC__in IApplicationGatewayServices * This,
            /* [in] */ USHORT usReservedPortBase,
            /* [in] */ USHORT usPortCount);
        
        HRESULT ( STDMETHODCALLTYPE *EnumerateAdapters )( 
            __RPC__in IApplicationGatewayServices * This,
            /* [out] */ __RPC__deref_out_opt IEnumAdapterInfo **ppIEnumAdapterInfo);
        
        HRESULT ( STDMETHODCALLTYPE *StartAdapterNotifications )( 
            __RPC__in IApplicationGatewayServices * This,
            /* [in] */ __RPC__in_opt IAdapterNotificationSink *pSink,
            /* [in] */ __RPC__in DWORD *pdwCookie);
        
        HRESULT ( STDMETHODCALLTYPE *StopAdapterNotifications )( 
            __RPC__in IApplicationGatewayServices * This,
            /* [in] */ DWORD dwCookieOfSink);
        
        HRESULT ( STDMETHODCALLTYPE *LookupAdapterPortMapping )( 
            __RPC__in IApplicationGatewayServices * This,
            /* [in] */ ULONG ulAdapterIndex,
            /* [in] */ UCHAR Protocol,
            /* [in] */ ULONG ulDestinationAddress,
            /* [in] */ USHORT usDestinationPort,
            /* [out] */ __RPC__out ULONG *pulRemapAddress,
            /* [out] */ __RPC__out USHORT *pusRemapPort);
        
        END_INTERFACE
    } IApplicationGatewayServicesVtbl;

    interface IApplicationGatewayServices
    {
        CONST_VTBL struct IApplicationGatewayServicesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IApplicationGatewayServices_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IApplicationGatewayServices_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IApplicationGatewayServices_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IApplicationGatewayServices_CreatePrimaryControlChannel(This,uAdapterIndex,eProtocol,usPortToCapture,eCaptureType,fCaptureInbound,ulListenAddress,usListenPort,ppIControlChannel)	\
    ( (This)->lpVtbl -> CreatePrimaryControlChannel(This,uAdapterIndex,eProtocol,usPortToCapture,eCaptureType,fCaptureInbound,ulListenAddress,usListenPort,ppIControlChannel) ) 

#define IApplicationGatewayServices_CreateSecondaryControlChannel(This,eProtocol,ulPrivateAddress,usPrivatePort,ulPublicAddress,usPublicPort,ulRemoteAddress,usRemotePort,ulListenAddress,usListenPort,eDirection,fPersistent,ppControlChannel)	\
    ( (This)->lpVtbl -> CreateSecondaryControlChannel(This,eProtocol,ulPrivateAddress,usPrivatePort,ulPublicAddress,usPublicPort,ulRemoteAddress,usRemotePort,ulListenAddress,usListenPort,eDirection,fPersistent,ppControlChannel) ) 

#define IApplicationGatewayServices_GetBestSourceAddressForDestinationAddress(This,ulDstAddress,fDemandDial,pulBestSrcAddress)	\
    ( (This)->lpVtbl -> GetBestSourceAddressForDestinationAddress(This,ulDstAddress,fDemandDial,pulBestSrcAddress) ) 

#define IApplicationGatewayServices_PrepareProxyConnection(This,eProtocol,ulSrcAddress,usSrcPort,ulDstAddress,usDstPort,fNoTimeout,ppPendingConnection)	\
    ( (This)->lpVtbl -> PrepareProxyConnection(This,eProtocol,ulSrcAddress,usSrcPort,ulDstAddress,usDstPort,fNoTimeout,ppPendingConnection) ) 

#define IApplicationGatewayServices_PrepareSourceModifiedProxyConnection(This,eProtocol,ulSrcAddress,usSrcPort,ulDstAddress,usDstPort,ulNewSrcAddress,usNewSourcePort,ppPendingConnection)	\
    ( (This)->lpVtbl -> PrepareSourceModifiedProxyConnection(This,eProtocol,ulSrcAddress,usSrcPort,ulDstAddress,usDstPort,ulNewSrcAddress,usNewSourcePort,ppPendingConnection) ) 

#define IApplicationGatewayServices_CreateDataChannel(This,eProtocol,ulPrivateAddress,usPrivatePort,ulPublicAddress,usPublicPort,ulRemoteAddress,usRemotePort,eDirection,eDesiredNotification,fNoTimeout,ppDataChannel)	\
    ( (This)->lpVtbl -> CreateDataChannel(This,eProtocol,ulPrivateAddress,usPrivatePort,ulPublicAddress,usPublicPort,ulRemoteAddress,usRemotePort,eDirection,eDesiredNotification,fNoTimeout,ppDataChannel) ) 

#define IApplicationGatewayServices_CreatePersistentDataChannel(This,eProtocol,ulPrivateAddress,usPrivatePort,ulPublicAddress,usPublicPort,ulRemoteAddress,usRemotePort,eDirection,ppIPersistentDataChannel)	\
    ( (This)->lpVtbl -> CreatePersistentDataChannel(This,eProtocol,ulPrivateAddress,usPrivatePort,ulPublicAddress,usPublicPort,ulRemoteAddress,usRemotePort,eDirection,ppIPersistentDataChannel) ) 

#define IApplicationGatewayServices_ReservePort(This,usPortCount,pusReservedPort)	\
    ( (This)->lpVtbl -> ReservePort(This,usPortCount,pusReservedPort) ) 

#define IApplicationGatewayServices_ReleaseReservedPort(This,usReservedPortBase,usPortCount)	\
    ( (This)->lpVtbl -> ReleaseReservedPort(This,usReservedPortBase,usPortCount) ) 

#define IApplicationGatewayServices_EnumerateAdapters(This,ppIEnumAdapterInfo)	\
    ( (This)->lpVtbl -> EnumerateAdapters(This,ppIEnumAdapterInfo) ) 

#define IApplicationGatewayServices_StartAdapterNotifications(This,pSink,pdwCookie)	\
    ( (This)->lpVtbl -> StartAdapterNotifications(This,pSink,pdwCookie) ) 

#define IApplicationGatewayServices_StopAdapterNotifications(This,dwCookieOfSink)	\
    ( (This)->lpVtbl -> StopAdapterNotifications(This,dwCookieOfSink) ) 

#define IApplicationGatewayServices_LookupAdapterPortMapping(This,ulAdapterIndex,Protocol,ulDestinationAddress,usDestinationPort,pulRemapAddress,pusRemapPort)	\
    ( (This)->lpVtbl -> LookupAdapterPortMapping(This,ulAdapterIndex,Protocol,ulDestinationAddress,usDestinationPort,pulRemapAddress,pusRemapPort) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IApplicationGatewayServices_INTERFACE_DEFINED__ */


#ifndef __IApplicationGateway_INTERFACE_DEFINED__
#define __IApplicationGateway_INTERFACE_DEFINED__

/* interface IApplicationGateway */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IApplicationGateway;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5134842B-FDCE-485D-93CD-DE1640643BBE")
    IApplicationGateway : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt IApplicationGatewayServices *pAlgServices) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IApplicationGatewayVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IApplicationGateway * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IApplicationGateway * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IApplicationGateway * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IApplicationGateway * This,
            /* [in] */ __RPC__in_opt IApplicationGatewayServices *pAlgServices);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            __RPC__in IApplicationGateway * This);
        
        END_INTERFACE
    } IApplicationGatewayVtbl;

    interface IApplicationGateway
    {
        CONST_VTBL struct IApplicationGatewayVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IApplicationGateway_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IApplicationGateway_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IApplicationGateway_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IApplicationGateway_Initialize(This,pAlgServices)	\
    ( (This)->lpVtbl -> Initialize(This,pAlgServices) ) 

#define IApplicationGateway_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IApplicationGateway_INTERFACE_DEFINED__ */



#ifndef __ALGLib_LIBRARY_DEFINED__
#define __ALGLib_LIBRARY_DEFINED__

/* library ALGLib */
/* [helpstring][version][uuid] */ 


EXTERN_C const IID LIBID_ALGLib;

EXTERN_C const CLSID CLSID_ApplicationGatewayServices;

#ifdef __cplusplus

class DECLSPEC_UUID("F8ADE1D3-49DF-4B75-9005-EF9508E6A337")
ApplicationGatewayServices;
#endif

EXTERN_C const CLSID CLSID_PrimaryControlChannel;

#ifdef __cplusplus

class DECLSPEC_UUID("3CEB5509-C1CD-432F-9D8F-65D1E286AA80")
PrimaryControlChannel;
#endif

EXTERN_C const CLSID CLSID_SecondaryControlChannel;

#ifdef __cplusplus

class DECLSPEC_UUID("7B3181A0-C92F-4567-B0FA-CD9A10ECD7D1")
SecondaryControlChannel;
#endif

EXTERN_C const CLSID CLSID_AdapterInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("6F9942C9-C1B1-4AB5-93DA-6058991DC8F3")
AdapterInfo;
#endif

EXTERN_C const CLSID CLSID_EnumAdapterInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("6F9942CA-C1B1-4AB5-93DA-6058991DC8F3")
EnumAdapterInfo;
#endif

EXTERN_C const CLSID CLSID_PendingProxyConnection;

#ifdef __cplusplus

class DECLSPEC_UUID("D8A68E5E-2B37-426C-A329-C117C14C429E")
PendingProxyConnection;
#endif

EXTERN_C const CLSID CLSID_DataChannel;

#ifdef __cplusplus

class DECLSPEC_UUID("BBB36F15-408D-4056-8C27-920843D40BE5")
DataChannel;
#endif

EXTERN_C const CLSID CLSID_PersistentDataChannel;

#ifdef __cplusplus

class DECLSPEC_UUID("BC9B54AB-7883-4C13-909F-033D03267990")
PersistentDataChannel;
#endif
#endif /* __ALGLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AgtCtl.h ===
/**************************************************************************
*                                                                         *
* AgtCtl.h - Microsoft Agent Control                                      *
*                                                                         *
* Copyright (c) 1996-1999, Microsoft Corp. All rights reserved.           *
*                                                                         *
**************************************************************************/

#if _MSC_VER < 1200

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 3.01.75 */
/* at Tue Sep 01 10:41:00 1998
 */
/* Compiler settings for AgentControl.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: none
*/
//@@MIDL_FILE_HEADING(  )
#include "rpc.h"
#include "rpcndr.h"
#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __AgtCtlVC5_h__
#define __AgtCtlVC5_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __IAgentCtlRequest_FWD_DEFINED__
#define __IAgentCtlRequest_FWD_DEFINED__
typedef interface IAgentCtlRequest IAgentCtlRequest;
#endif 	/* __IAgentCtlRequest_FWD_DEFINED__ */


#ifndef __IAgentCtlUserInput_FWD_DEFINED__
#define __IAgentCtlUserInput_FWD_DEFINED__
typedef interface IAgentCtlUserInput IAgentCtlUserInput;
#endif 	/* __IAgentCtlUserInput_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloon_FWD_DEFINED__
#define __IAgentCtlBalloon_FWD_DEFINED__
typedef interface IAgentCtlBalloon IAgentCtlBalloon;
#endif 	/* __IAgentCtlBalloon_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloonEx_FWD_DEFINED__
#define __IAgentCtlBalloonEx_FWD_DEFINED__
typedef interface IAgentCtlBalloonEx IAgentCtlBalloonEx;
#endif 	/* __IAgentCtlBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCommand_FWD_DEFINED__
#define __IAgentCtlCommand_FWD_DEFINED__
typedef interface IAgentCtlCommand IAgentCtlCommand;
#endif 	/* __IAgentCtlCommand_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandEx_FWD_DEFINED__
#define __IAgentCtlCommandEx_FWD_DEFINED__
typedef interface IAgentCtlCommandEx IAgentCtlCommandEx;
#endif 	/* __IAgentCtlCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCommands_FWD_DEFINED__
#define __IAgentCtlCommands_FWD_DEFINED__
typedef interface IAgentCtlCommands IAgentCtlCommands;
#endif 	/* __IAgentCtlCommands_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsEx_FWD_DEFINED__
#define __IAgentCtlCommandsEx_FWD_DEFINED__
typedef interface IAgentCtlCommandsEx IAgentCtlCommandsEx;
#endif 	/* __IAgentCtlCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacter_FWD_DEFINED__
#define __IAgentCtlCharacter_FWD_DEFINED__
typedef interface IAgentCtlCharacter IAgentCtlCharacter;
#endif 	/* __IAgentCtlCharacter_FWD_DEFINED__ */


#ifndef __IAgentCtlAnimationNames_FWD_DEFINED__
#define __IAgentCtlAnimationNames_FWD_DEFINED__
typedef interface IAgentCtlAnimationNames IAgentCtlAnimationNames;
#endif 	/* __IAgentCtlAnimationNames_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacterEx_FWD_DEFINED__
#define __IAgentCtlCharacterEx_FWD_DEFINED__
typedef interface IAgentCtlCharacterEx IAgentCtlCharacterEx;
#endif 	/* __IAgentCtlCharacterEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacters_FWD_DEFINED__
#define __IAgentCtlCharacters_FWD_DEFINED__
typedef interface IAgentCtlCharacters IAgentCtlCharacters;
#endif 	/* __IAgentCtlCharacters_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObject_FWD_DEFINED__
#define __IAgentCtlAudioObject_FWD_DEFINED__
typedef interface IAgentCtlAudioObject IAgentCtlAudioObject;
#endif 	/* __IAgentCtlAudioObject_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObjectEx_FWD_DEFINED__
#define __IAgentCtlAudioObjectEx_FWD_DEFINED__
typedef interface IAgentCtlAudioObjectEx IAgentCtlAudioObjectEx;
#endif 	/* __IAgentCtlAudioObjectEx_FWD_DEFINED__ */


#ifndef __IAgentCtlSpeechInput_FWD_DEFINED__
#define __IAgentCtlSpeechInput_FWD_DEFINED__
typedef interface IAgentCtlSpeechInput IAgentCtlSpeechInput;
#endif 	/* __IAgentCtlSpeechInput_FWD_DEFINED__ */


#ifndef __IAgentCtlPropertySheet_FWD_DEFINED__
#define __IAgentCtlPropertySheet_FWD_DEFINED__
typedef interface IAgentCtlPropertySheet IAgentCtlPropertySheet;
#endif 	/* __IAgentCtlPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsWindow_FWD_DEFINED__
#define __IAgentCtlCommandsWindow_FWD_DEFINED__
typedef interface IAgentCtlCommandsWindow IAgentCtlCommandsWindow;
#endif 	/* __IAgentCtlCommandsWindow_FWD_DEFINED__ */


#ifndef __IAgentCtl_FWD_DEFINED__
#define __IAgentCtl_FWD_DEFINED__
typedef interface IAgentCtl IAgentCtl;
#endif 	/* __IAgentCtl_FWD_DEFINED__ */


#ifndef __IAgentCtlEx_FWD_DEFINED__
#define __IAgentCtlEx_FWD_DEFINED__
typedef interface IAgentCtlEx IAgentCtlEx;
#endif 	/* __IAgentCtlEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacters_FWD_DEFINED__
#define __IAgentCtlCharacters_FWD_DEFINED__
typedef interface IAgentCtlCharacters IAgentCtlCharacters;
#endif 	/* __IAgentCtlCharacters_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloon_FWD_DEFINED__
#define __IAgentCtlBalloon_FWD_DEFINED__
typedef interface IAgentCtlBalloon IAgentCtlBalloon;
#endif 	/* __IAgentCtlBalloon_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloonEx_FWD_DEFINED__
#define __IAgentCtlBalloonEx_FWD_DEFINED__
typedef interface IAgentCtlBalloonEx IAgentCtlBalloonEx;
#endif 	/* __IAgentCtlBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacter_FWD_DEFINED__
#define __IAgentCtlCharacter_FWD_DEFINED__
typedef interface IAgentCtlCharacter IAgentCtlCharacter;
#endif 	/* __IAgentCtlCharacter_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacterEx_FWD_DEFINED__
#define __IAgentCtlCharacterEx_FWD_DEFINED__
typedef interface IAgentCtlCharacterEx IAgentCtlCharacterEx;
#endif 	/* __IAgentCtlCharacterEx_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObject_FWD_DEFINED__
#define __IAgentCtlAudioObject_FWD_DEFINED__
typedef interface IAgentCtlAudioObject IAgentCtlAudioObject;
#endif 	/* __IAgentCtlAudioObject_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObjectEx_FWD_DEFINED__
#define __IAgentCtlAudioObjectEx_FWD_DEFINED__
typedef interface IAgentCtlAudioObjectEx IAgentCtlAudioObjectEx;
#endif 	/* __IAgentCtlAudioObjectEx_FWD_DEFINED__ */


#ifndef __IAgentCtlSpeechInput_FWD_DEFINED__
#define __IAgentCtlSpeechInput_FWD_DEFINED__
typedef interface IAgentCtlSpeechInput IAgentCtlSpeechInput;
#endif 	/* __IAgentCtlSpeechInput_FWD_DEFINED__ */


#ifndef __IAgentCtlPropertySheet_FWD_DEFINED__
#define __IAgentCtlPropertySheet_FWD_DEFINED__
typedef interface IAgentCtlPropertySheet IAgentCtlPropertySheet;
#endif 	/* __IAgentCtlPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentCtlCommands_FWD_DEFINED__
#define __IAgentCtlCommands_FWD_DEFINED__
typedef interface IAgentCtlCommands IAgentCtlCommands;
#endif 	/* __IAgentCtlCommands_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsEx_FWD_DEFINED__
#define __IAgentCtlCommandsEx_FWD_DEFINED__
typedef interface IAgentCtlCommandsEx IAgentCtlCommandsEx;
#endif 	/* __IAgentCtlCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCommand_FWD_DEFINED__
#define __IAgentCtlCommand_FWD_DEFINED__
typedef interface IAgentCtlCommand IAgentCtlCommand;
#endif 	/* __IAgentCtlCommand_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandEx_FWD_DEFINED__
#define __IAgentCtlCommandEx_FWD_DEFINED__
typedef interface IAgentCtlCommandEx IAgentCtlCommandEx;
#endif 	/* __IAgentCtlCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCtlRequest_FWD_DEFINED__
#define __IAgentCtlRequest_FWD_DEFINED__
typedef interface IAgentCtlRequest IAgentCtlRequest;
#endif 	/* __IAgentCtlRequest_FWD_DEFINED__ */


#ifndef __IAgentCtlUserInput_FWD_DEFINED__
#define __IAgentCtlUserInput_FWD_DEFINED__
typedef interface IAgentCtlUserInput IAgentCtlUserInput;
#endif 	/* __IAgentCtlUserInput_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsWindow_FWD_DEFINED__
#define __IAgentCtlCommandsWindow_FWD_DEFINED__
typedef interface IAgentCtlCommandsWindow IAgentCtlCommandsWindow;
#endif 	/* __IAgentCtlCommandsWindow_FWD_DEFINED__ */


#ifndef __IAgentCtl_FWD_DEFINED__
#define __IAgentCtl_FWD_DEFINED__
typedef interface IAgentCtl IAgentCtl;
#endif 	/* __IAgentCtl_FWD_DEFINED__ */


#ifndef __IAgentCtlEx_FWD_DEFINED__
#define __IAgentCtlEx_FWD_DEFINED__
typedef interface IAgentCtlEx IAgentCtlEx;
#endif 	/* __IAgentCtlEx_FWD_DEFINED__ */


#ifndef ___AgentEvents_FWD_DEFINED__
#define ___AgentEvents_FWD_DEFINED__
typedef interface _AgentEvents _AgentEvents;
#endif 	/* ___AgentEvents_FWD_DEFINED__ */


#ifndef __Agent_FWD_DEFINED__
#define __Agent_FWD_DEFINED__

#ifdef __cplusplus
typedef class Agent Agent;
#else
typedef struct Agent Agent;
#endif /* __cplusplus */

#endif 	/* __Agent_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/****************************************
 * Generated header for interface: __MIDL_itf_AgentControl_0000
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [local] */ 


#define	RequestSuccess	( 0 )

#define	RequestFailed	( 1 )

#define	RequestPending	( 2 )

#define	RequestInterrupted	( 3 )

#define	RequestInProgress	( 4 )



extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0000_v0_0_s_ifspec;

#ifndef __IAgentCtlRequest_INTERFACE_DEFINED__
#define __IAgentCtlRequest_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlRequest
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlRequest;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("1DAB85C3-803A-11D0-AC63-00C04FD97575")
    IAgentCtlRequest : public IDispatch
    {
    public:
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ long __RPC_FAR *Status) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR __RPC_FAR *Description) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Number( 
            /* [retval][out] */ long __RPC_FAR *Number) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlRequestVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlRequest __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlRequest __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ID )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Status )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Status);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Number )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Number);
        
        END_INTERFACE
    } IAgentCtlRequestVtbl;

    interface IAgentCtlRequest
    {
        CONST_VTBL struct IAgentCtlRequestVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlRequest_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlRequest_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlRequest_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlRequest_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlRequest_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlRequest_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlRequest_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlRequest_get_ID(This,ID)	\
    (This)->lpVtbl -> get_ID(This,ID)

#define IAgentCtlRequest_get_Status(This,Status)	\
    (This)->lpVtbl -> get_Status(This,Status)

#define IAgentCtlRequest_get_Description(This,Description)	\
    (This)->lpVtbl -> get_Description(This,Description)

#define IAgentCtlRequest_get_Number(This,Number)	\
    (This)->lpVtbl -> get_Number(This,Number)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_ID_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlRequest_get_ID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_Status_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Status);


void __RPC_STUB IAgentCtlRequest_get_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_Description_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Description);


void __RPC_STUB IAgentCtlRequest_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_Number_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Number);


void __RPC_STUB IAgentCtlRequest_get_Number_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlRequest_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlUserInput_INTERFACE_DEFINED__
#define __IAgentCtlUserInput_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlUserInput
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [object][dual][uuid] */ 



EXTERN_C const IID IID_IAgentCtlUserInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("C4ABF875-8100-11D0-AC63-00C04FD97575")
    IAgentCtlUserInput : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ short __RPC_FAR *pCount) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CharacterID( 
            /* [retval][out] */ BSTR __RPC_FAR *pCharacterID) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Confidence( 
            /* [retval][out] */ long __RPC_FAR *pConfidence) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *pVoice) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt1Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Name) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt1Confidence( 
            /* [retval][out] */ long __RPC_FAR *pAlt1Confidence) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt1Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Voice) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt2Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Name) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt2Confidence( 
            /* [retval][out] */ long __RPC_FAR *pAlt2Confidence) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt2Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Voice) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlUserInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlUserInput __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlUserInput __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *pCount);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CharacterID )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pCharacterID);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Confidence )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pConfidence);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVoice);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt1Name )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Name);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt1Confidence )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pAlt1Confidence);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt1Voice )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Voice);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt2Name )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Name);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt2Confidence )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pAlt2Confidence);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt2Voice )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Voice);
        
        END_INTERFACE
    } IAgentCtlUserInputVtbl;

    interface IAgentCtlUserInput
    {
        CONST_VTBL struct IAgentCtlUserInputVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlUserInput_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlUserInput_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlUserInput_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlUserInput_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlUserInput_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlUserInput_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlUserInput_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlUserInput_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAgentCtlUserInput_get_Name(This,pName)	\
    (This)->lpVtbl -> get_Name(This,pName)

#define IAgentCtlUserInput_get_CharacterID(This,pCharacterID)	\
    (This)->lpVtbl -> get_CharacterID(This,pCharacterID)

#define IAgentCtlUserInput_get_Confidence(This,pConfidence)	\
    (This)->lpVtbl -> get_Confidence(This,pConfidence)

#define IAgentCtlUserInput_get_Voice(This,pVoice)	\
    (This)->lpVtbl -> get_Voice(This,pVoice)

#define IAgentCtlUserInput_get_Alt1Name(This,pAlt1Name)	\
    (This)->lpVtbl -> get_Alt1Name(This,pAlt1Name)

#define IAgentCtlUserInput_get_Alt1Confidence(This,pAlt1Confidence)	\
    (This)->lpVtbl -> get_Alt1Confidence(This,pAlt1Confidence)

#define IAgentCtlUserInput_get_Alt1Voice(This,pAlt1Voice)	\
    (This)->lpVtbl -> get_Alt1Voice(This,pAlt1Voice)

#define IAgentCtlUserInput_get_Alt2Name(This,pAlt2Name)	\
    (This)->lpVtbl -> get_Alt2Name(This,pAlt2Name)

#define IAgentCtlUserInput_get_Alt2Confidence(This,pAlt2Confidence)	\
    (This)->lpVtbl -> get_Alt2Confidence(This,pAlt2Confidence)

#define IAgentCtlUserInput_get_Alt2Voice(This,pAlt2Voice)	\
    (This)->lpVtbl -> get_Alt2Voice(This,pAlt2Voice)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Count_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *pCount);


void __RPC_STUB IAgentCtlUserInput_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Name_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pName);


void __RPC_STUB IAgentCtlUserInput_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_CharacterID_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pCharacterID);


void __RPC_STUB IAgentCtlUserInput_get_CharacterID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Confidence_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pConfidence);


void __RPC_STUB IAgentCtlUserInput_get_Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Voice_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVoice);


void __RPC_STUB IAgentCtlUserInput_get_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt1Name_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt1Name);


void __RPC_STUB IAgentCtlUserInput_get_Alt1Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt1Confidence_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pAlt1Confidence);


void __RPC_STUB IAgentCtlUserInput_get_Alt1Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt1Voice_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt1Voice);


void __RPC_STUB IAgentCtlUserInput_get_Alt1Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt2Name_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt2Name);


void __RPC_STUB IAgentCtlUserInput_get_Alt2Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt2Confidence_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pAlt2Confidence);


void __RPC_STUB IAgentCtlUserInput_get_Alt2Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt2Voice_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt2Voice);


void __RPC_STUB IAgentCtlUserInput_get_Alt2Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlUserInput_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlBalloon_INTERFACE_DEFINED__
#define __IAgentCtlBalloon_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlBalloon
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlBalloon;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BD3-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlBalloon : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_NumberOfLines( 
            /* [retval][out] */ long __RPC_FAR *Lines) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CharsPerLine( 
            /* [retval][out] */ long __RPC_FAR *CharsPerLine) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontName( 
            /* [retval][out] */ BSTR __RPC_FAR *FontName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
            /* [retval][out] */ long __RPC_FAR *FontSize) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontBold( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontItalic( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontStrikethru( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontUnderline( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ long __RPC_FAR *ForeColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ long __RPC_FAR *BackColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BorderColor( 
            /* [retval][out] */ long __RPC_FAR *BorderColor) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontName( 
            /* [in] */ BSTR FontName) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
            /* [in] */ long FontSize) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontCharSet( 
            /* [in] */ short FontCharSet) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontCharSet( 
            /* [retval][out] */ short __RPC_FAR *FontCharSet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlBalloonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlBalloon __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlBalloon __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_NumberOfLines )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Lines);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CharsPerLine )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *CharsPerLine);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontName )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontSize )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *FontSize);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontBold )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontItalic )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontStrikethru )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontUnderline )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ForeColor )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ForeColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BackColor )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BackColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BorderColor )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BorderColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontName )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ BSTR FontName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontSize )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ long FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontCharSet )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ short FontCharSet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontCharSet )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *FontCharSet);
        
        END_INTERFACE
    } IAgentCtlBalloonVtbl;

    interface IAgentCtlBalloon
    {
        CONST_VTBL struct IAgentCtlBalloonVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlBalloon_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlBalloon_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlBalloon_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlBalloon_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlBalloon_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlBalloon_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlBalloon_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlBalloon_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlBalloon_get_NumberOfLines(This,Lines)	\
    (This)->lpVtbl -> get_NumberOfLines(This,Lines)

#define IAgentCtlBalloon_get_CharsPerLine(This,CharsPerLine)	\
    (This)->lpVtbl -> get_CharsPerLine(This,CharsPerLine)

#define IAgentCtlBalloon_get_FontName(This,FontName)	\
    (This)->lpVtbl -> get_FontName(This,FontName)

#define IAgentCtlBalloon_get_FontSize(This,FontSize)	\
    (This)->lpVtbl -> get_FontSize(This,FontSize)

#define IAgentCtlBalloon_get_FontBold(This,FontBold)	\
    (This)->lpVtbl -> get_FontBold(This,FontBold)

#define IAgentCtlBalloon_get_FontItalic(This,FontItalic)	\
    (This)->lpVtbl -> get_FontItalic(This,FontItalic)

#define IAgentCtlBalloon_get_FontStrikethru(This,FontStrikethru)	\
    (This)->lpVtbl -> get_FontStrikethru(This,FontStrikethru)

#define IAgentCtlBalloon_get_FontUnderline(This,FontUnderline)	\
    (This)->lpVtbl -> get_FontUnderline(This,FontUnderline)

#define IAgentCtlBalloon_get_ForeColor(This,ForeColor)	\
    (This)->lpVtbl -> get_ForeColor(This,ForeColor)

#define IAgentCtlBalloon_get_BackColor(This,BackColor)	\
    (This)->lpVtbl -> get_BackColor(This,BackColor)

#define IAgentCtlBalloon_get_BorderColor(This,BorderColor)	\
    (This)->lpVtbl -> get_BorderColor(This,BorderColor)

#define IAgentCtlBalloon_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlBalloon_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlBalloon_put_FontName(This,FontName)	\
    (This)->lpVtbl -> put_FontName(This,FontName)

#define IAgentCtlBalloon_put_FontSize(This,FontSize)	\
    (This)->lpVtbl -> put_FontSize(This,FontSize)

#define IAgentCtlBalloon_put_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> put_FontCharSet(This,FontCharSet)

#define IAgentCtlBalloon_get_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> get_FontCharSet(This,FontCharSet)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_Enabled_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);


void __RPC_STUB IAgentCtlBalloon_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_NumberOfLines_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Lines);


void __RPC_STUB IAgentCtlBalloon_get_NumberOfLines_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_CharsPerLine_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *CharsPerLine);


void __RPC_STUB IAgentCtlBalloon_get_CharsPerLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontName_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *FontName);


void __RPC_STUB IAgentCtlBalloon_get_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontSize_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *FontSize);


void __RPC_STUB IAgentCtlBalloon_get_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontBold_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold);


void __RPC_STUB IAgentCtlBalloon_get_FontBold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontItalic_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic);


void __RPC_STUB IAgentCtlBalloon_get_FontItalic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontStrikethru_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru);


void __RPC_STUB IAgentCtlBalloon_get_FontStrikethru_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontUnderline_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline);


void __RPC_STUB IAgentCtlBalloon_get_FontUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_ForeColor_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ForeColor);


void __RPC_STUB IAgentCtlBalloon_get_ForeColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_BackColor_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *BackColor);


void __RPC_STUB IAgentCtlBalloon_get_BackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_BorderColor_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *BorderColor);


void __RPC_STUB IAgentCtlBalloon_get_BorderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_Visible_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlBalloon_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_Visible_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlBalloon_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_FontName_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ BSTR FontName);


void __RPC_STUB IAgentCtlBalloon_put_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_FontSize_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ long FontSize);


void __RPC_STUB IAgentCtlBalloon_put_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_FontCharSet_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ short FontCharSet);


void __RPC_STUB IAgentCtlBalloon_put_FontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontCharSet_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *FontCharSet);


void __RPC_STUB IAgentCtlBalloon_get_FontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlBalloon_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlBalloonEx_INTERFACE_DEFINED__
#define __IAgentCtlBalloonEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlBalloonEx
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlBalloonEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("822DB1C0-8879-11d1-9EC6-00C04FD7081F")
    IAgentCtlBalloonEx : public IAgentCtlBalloon
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Style( 
            /* [in] */ long Style) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Style( 
            /* [retval][out] */ long __RPC_FAR *Style) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlBalloonExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlBalloonEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlBalloonEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_NumberOfLines )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Lines);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CharsPerLine )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *CharsPerLine);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontName )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontSize )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *FontSize);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontBold )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontItalic )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontStrikethru )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontUnderline )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ForeColor )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ForeColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BackColor )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BackColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BorderColor )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BorderColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontName )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ BSTR FontName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontSize )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ long FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontCharSet )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ short FontCharSet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontCharSet )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *FontCharSet);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Style )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ long Style);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Style )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Style);
        
        END_INTERFACE
    } IAgentCtlBalloonExVtbl;

    interface IAgentCtlBalloonEx
    {
        CONST_VTBL struct IAgentCtlBalloonExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlBalloonEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlBalloonEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlBalloonEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlBalloonEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlBalloonEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlBalloonEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlBalloonEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlBalloonEx_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlBalloonEx_get_NumberOfLines(This,Lines)	\
    (This)->lpVtbl -> get_NumberOfLines(This,Lines)

#define IAgentCtlBalloonEx_get_CharsPerLine(This,CharsPerLine)	\
    (This)->lpVtbl -> get_CharsPerLine(This,CharsPerLine)

#define IAgentCtlBalloonEx_get_FontName(This,FontName)	\
    (This)->lpVtbl -> get_FontName(This,FontName)

#define IAgentCtlBalloonEx_get_FontSize(This,FontSize)	\
    (This)->lpVtbl -> get_FontSize(This,FontSize)

#define IAgentCtlBalloonEx_get_FontBold(This,FontBold)	\
    (This)->lpVtbl -> get_FontBold(This,FontBold)

#define IAgentCtlBalloonEx_get_FontItalic(This,FontItalic)	\
    (This)->lpVtbl -> get_FontItalic(This,FontItalic)

#define IAgentCtlBalloonEx_get_FontStrikethru(This,FontStrikethru)	\
    (This)->lpVtbl -> get_FontStrikethru(This,FontStrikethru)

#define IAgentCtlBalloonEx_get_FontUnderline(This,FontUnderline)	\
    (This)->lpVtbl -> get_FontUnderline(This,FontUnderline)

#define IAgentCtlBalloonEx_get_ForeColor(This,ForeColor)	\
    (This)->lpVtbl -> get_ForeColor(This,ForeColor)

#define IAgentCtlBalloonEx_get_BackColor(This,BackColor)	\
    (This)->lpVtbl -> get_BackColor(This,BackColor)

#define IAgentCtlBalloonEx_get_BorderColor(This,BorderColor)	\
    (This)->lpVtbl -> get_BorderColor(This,BorderColor)

#define IAgentCtlBalloonEx_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlBalloonEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlBalloonEx_put_FontName(This,FontName)	\
    (This)->lpVtbl -> put_FontName(This,FontName)

#define IAgentCtlBalloonEx_put_FontSize(This,FontSize)	\
    (This)->lpVtbl -> put_FontSize(This,FontSize)

#define IAgentCtlBalloonEx_put_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> put_FontCharSet(This,FontCharSet)

#define IAgentCtlBalloonEx_get_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> get_FontCharSet(This,FontCharSet)


#define IAgentCtlBalloonEx_put_Style(This,Style)	\
    (This)->lpVtbl -> put_Style(This,Style)

#define IAgentCtlBalloonEx_get_Style(This,Style)	\
    (This)->lpVtbl -> get_Style(This,Style)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloonEx_put_Style_Proxy( 
    IAgentCtlBalloonEx __RPC_FAR * This,
    /* [in] */ long Style);


void __RPC_STUB IAgentCtlBalloonEx_put_Style_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloonEx_get_Style_Proxy( 
    IAgentCtlBalloonEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Style);


void __RPC_STUB IAgentCtlBalloonEx_get_Style_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlBalloonEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommand_INTERFACE_DEFINED__
#define __IAgentCtlCommand_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCommand
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCommand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BE3-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCommand : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *Voice) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Voice( 
            /* [in] */ BSTR Voice) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR __RPC_FAR *Caption) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR Caption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Confidence( 
            /* [retval][out] */ long __RPC_FAR *Confidence) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Confidence( 
            /* [in] */ long Confidence) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ConfidenceText( 
            /* [retval][out] */ BSTR __RPC_FAR *Text) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ConfidenceText( 
            /* [in] */ BSTR Text) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Enabled )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Confidence )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Confidence);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Confidence )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ long Confidence);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ConfidenceText )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Text);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ConfidenceText )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ BSTR Text);
        
        END_INTERFACE
    } IAgentCtlCommandVtbl;

    interface IAgentCtlCommand
    {
        CONST_VTBL struct IAgentCtlCommandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommand_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommand_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommand_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommand_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommand_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommand_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommand_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommand_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommand_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlCommand_put_Enabled(This,Enabled)	\
    (This)->lpVtbl -> put_Enabled(This,Enabled)

#define IAgentCtlCommand_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommand_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommand_get_Confidence(This,Confidence)	\
    (This)->lpVtbl -> get_Confidence(This,Confidence)

#define IAgentCtlCommand_put_Confidence(This,Confidence)	\
    (This)->lpVtbl -> put_Confidence(This,Confidence)

#define IAgentCtlCommand_get_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> get_ConfidenceText(This,Text)

#define IAgentCtlCommand_put_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> put_ConfidenceText(This,Text)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Voice_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Voice);


void __RPC_STUB IAgentCtlCommand_get_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Voice_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ BSTR Voice);


void __RPC_STUB IAgentCtlCommand_put_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Caption_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Caption);


void __RPC_STUB IAgentCtlCommand_get_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Caption_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ BSTR Caption);


void __RPC_STUB IAgentCtlCommand_put_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Enabled_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);


void __RPC_STUB IAgentCtlCommand_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Enabled_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Enabled);


void __RPC_STUB IAgentCtlCommand_put_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Visible_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCommand_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Visible_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlCommand_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Confidence_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Confidence);


void __RPC_STUB IAgentCtlCommand_get_Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Confidence_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ long Confidence);


void __RPC_STUB IAgentCtlCommand_put_Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_ConfidenceText_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Text);


void __RPC_STUB IAgentCtlCommand_get_ConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_ConfidenceText_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ BSTR Text);


void __RPC_STUB IAgentCtlCommand_put_ConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommand_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommandEx_INTERFACE_DEFINED__
#define __IAgentCtlCommandEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCommandEx
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCommandEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("B0913410-3B44-11d1-ACBA-00C04FD97575")
    IAgentCtlCommandEx : public IAgentCtlCommand
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpContextID( 
            /* [in] */ long ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpContextID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_VoiceCaption( 
            /* [in] */ BSTR VoiceCaption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_VoiceCaption( 
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommandEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommandEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Enabled )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Confidence )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Confidence);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Confidence )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ long Confidence);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ConfidenceText )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Text);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ConfidenceText )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR Text);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpContextID )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ long ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpContextID )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_VoiceCaption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR VoiceCaption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VoiceCaption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);
        
        END_INTERFACE
    } IAgentCtlCommandExVtbl;

    interface IAgentCtlCommandEx
    {
        CONST_VTBL struct IAgentCtlCommandExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommandEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommandEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommandEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommandEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommandEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommandEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommandEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommandEx_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommandEx_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommandEx_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommandEx_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommandEx_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlCommandEx_put_Enabled(This,Enabled)	\
    (This)->lpVtbl -> put_Enabled(This,Enabled)

#define IAgentCtlCommandEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommandEx_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommandEx_get_Confidence(This,Confidence)	\
    (This)->lpVtbl -> get_Confidence(This,Confidence)

#define IAgentCtlCommandEx_put_Confidence(This,Confidence)	\
    (This)->lpVtbl -> put_Confidence(This,Confidence)

#define IAgentCtlCommandEx_get_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> get_ConfidenceText(This,Text)

#define IAgentCtlCommandEx_put_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> put_ConfidenceText(This,Text)


#define IAgentCtlCommandEx_put_HelpContextID(This,ID)	\
    (This)->lpVtbl -> put_HelpContextID(This,ID)

#define IAgentCtlCommandEx_get_HelpContextID(This,ID)	\
    (This)->lpVtbl -> get_HelpContextID(This,ID)

#define IAgentCtlCommandEx_put_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> put_VoiceCaption(This,VoiceCaption)

#define IAgentCtlCommandEx_get_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> get_VoiceCaption(This,VoiceCaption)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_put_HelpContextID_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [in] */ long ID);


void __RPC_STUB IAgentCtlCommandEx_put_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_get_HelpContextID_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlCommandEx_get_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_put_VoiceCaption_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [in] */ BSTR VoiceCaption);


void __RPC_STUB IAgentCtlCommandEx_put_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_get_VoiceCaption_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);


void __RPC_STUB IAgentCtlCommandEx_get_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommandEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommands_INTERFACE_DEFINED__
#define __IAgentCtlCommands_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCommands
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCommands;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BE1-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCommands : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Command( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *Count) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR __RPC_FAR *Caption) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR Caption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *Voice) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Voice( 
            /* [in] */ BSTR Voice) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ BSTR Name,
            /* [in] */ BSTR RefName,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommands __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommands __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [in] */ BSTR RefName,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCtlCommands __RPC_FAR * This);
        
        END_INTERFACE
    } IAgentCtlCommandsVtbl;

    interface IAgentCtlCommands
    {
        CONST_VTBL struct IAgentCtlCommandsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommands_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommands_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommands_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommands_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommands_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommands_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommands_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommands_get_Item(This,Name,Item)	\
    (This)->lpVtbl -> get_Item(This,Name,Item)

#define IAgentCtlCommands_Command(This,Name,Item)	\
    (This)->lpVtbl -> Command(This,Name,Item)

#define IAgentCtlCommands_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IAgentCtlCommands_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommands_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommands_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommands_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommands_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommands_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommands_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#define IAgentCtlCommands_Add(This,Name,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Add(This,Name,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommands_Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommands_Remove(This,Name)	\
    (This)->lpVtbl -> Remove(This,Name)

#define IAgentCtlCommands_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Item_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);


void __RPC_STUB IAgentCtlCommands_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Command_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);


void __RPC_STUB IAgentCtlCommands_Command_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Count_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Count);


void __RPC_STUB IAgentCtlCommands_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Caption_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Caption);


void __RPC_STUB IAgentCtlCommands_get_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_put_Caption_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Caption);


void __RPC_STUB IAgentCtlCommands_put_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Voice_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Voice);


void __RPC_STUB IAgentCtlCommands_get_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_put_Voice_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Voice);


void __RPC_STUB IAgentCtlCommands_put_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Visible_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCommands_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_put_Visible_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlCommands_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Enum_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);


void __RPC_STUB IAgentCtlCommands_get_Enum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Add_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [optional][in] */ VARIANT Caption,
    /* [optional][in] */ VARIANT Voice,
    /* [optional][in] */ VARIANT Enabled,
    /* [optional][in] */ VARIANT Visible,
    /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);


void __RPC_STUB IAgentCtlCommands_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Insert_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [in] */ BSTR RefName,
    /* [optional][in] */ VARIANT Before,
    /* [optional][in] */ VARIANT Caption,
    /* [optional][in] */ VARIANT Voice,
    /* [optional][in] */ VARIANT Enabled,
    /* [optional][in] */ VARIANT Visible,
    /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);


void __RPC_STUB IAgentCtlCommands_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Remove_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAgentCtlCommands_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_RemoveAll_Proxy( 
    IAgentCtlCommands __RPC_FAR * This);


void __RPC_STUB IAgentCtlCommands_RemoveAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommands_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommandsEx_INTERFACE_DEFINED__
#define __IAgentCtlCommandsEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCommandsEx
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCommandsEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("6BA90C01-3910-11d1-ACB3-00C04FD97575")
    IAgentCtlCommandsEx : public IAgentCtlCommands
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_DefaultCommand( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultCommand( 
            /* [retval][out] */ BSTR __RPC_FAR *Name) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpContextID( 
            /* [in] */ long ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpContextID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontName( 
            /* [in] */ BSTR FontName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontName( 
            /* [retval][out] */ BSTR __RPC_FAR *FontName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
            /* [retval][out] */ long __RPC_FAR *FontSize) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
            /* [in] */ long FontSize) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_VoiceCaption( 
            /* [in] */ BSTR VoiceCaption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_VoiceCaption( 
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_GlobalVoiceCommandsEnabled( 
            /* [in] */ VARIANT_BOOL Enable) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GlobalVoiceCommandsEnabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandsExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommandsEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommandsEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [in] */ BSTR RefName,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCtlCommandsEx __RPC_FAR * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DefaultCommand )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DefaultCommand )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpContextID )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ long ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpContextID )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontName )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontName )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontSize )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontSize )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ long FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_VoiceCaption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR VoiceCaption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VoiceCaption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_GlobalVoiceCommandsEnabled )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Enable);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_GlobalVoiceCommandsEnabled )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enable);
        
        END_INTERFACE
    } IAgentCtlCommandsExVtbl;

    interface IAgentCtlCommandsEx
    {
        CONST_VTBL struct IAgentCtlCommandsExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommandsEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommandsEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommandsEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommandsEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommandsEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommandsEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommandsEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommandsEx_get_Item(This,Name,Item)	\
    (This)->lpVtbl -> get_Item(This,Name,Item)

#define IAgentCtlCommandsEx_Command(This,Name,Item)	\
    (This)->lpVtbl -> Command(This,Name,Item)

#define IAgentCtlCommandsEx_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IAgentCtlCommandsEx_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommandsEx_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommandsEx_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommandsEx_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommandsEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommandsEx_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommandsEx_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#define IAgentCtlCommandsEx_Add(This,Name,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Add(This,Name,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommandsEx_Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommandsEx_Remove(This,Name)	\
    (This)->lpVtbl -> Remove(This,Name)

#define IAgentCtlCommandsEx_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)


#define IAgentCtlCommandsEx_put_DefaultCommand(This,Name)	\
    (This)->lpVtbl -> put_DefaultCommand(This,Name)

#define IAgentCtlCommandsEx_get_DefaultCommand(This,Name)	\
    (This)->lpVtbl -> get_DefaultCommand(This,Name)

#define IAgentCtlCommandsEx_put_HelpContextID(This,ID)	\
    (This)->lpVtbl -> put_HelpContextID(This,ID)

#define IAgentCtlCommandsEx_get_HelpContextID(This,ID)	\
    (This)->lpVtbl -> get_HelpContextID(This,ID)

#define IAgentCtlCommandsEx_put_FontName(This,FontName)	\
    (This)->lpVtbl -> put_FontName(This,FontName)

#define IAgentCtlCommandsEx_get_FontName(This,FontName)	\
    (This)->lpVtbl -> get_FontName(This,FontName)

#define IAgentCtlCommandsEx_get_FontSize(This,FontSize)	\
    (This)->lpVtbl -> get_FontSize(This,FontSize)

#define IAgentCtlCommandsEx_put_FontSize(This,FontSize)	\
    (This)->lpVtbl -> put_FontSize(This,FontSize)

#define IAgentCtlCommandsEx_put_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> put_VoiceCaption(This,VoiceCaption)

#define IAgentCtlCommandsEx_get_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> get_VoiceCaption(This,VoiceCaption)

#define IAgentCtlCommandsEx_put_GlobalVoiceCommandsEnabled(This,Enable)	\
    (This)->lpVtbl -> put_GlobalVoiceCommandsEnabled(This,Enable)

#define IAgentCtlCommandsEx_get_GlobalVoiceCommandsEnabled(This,Enable)	\
    (This)->lpVtbl -> get_GlobalVoiceCommandsEnabled(This,Enable)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_DefaultCommand_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAgentCtlCommandsEx_put_DefaultCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_DefaultCommand_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Name);


void __RPC_STUB IAgentCtlCommandsEx_get_DefaultCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_HelpContextID_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ long ID);


void __RPC_STUB IAgentCtlCommandsEx_put_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_HelpContextID_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlCommandsEx_get_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_FontName_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR FontName);


void __RPC_STUB IAgentCtlCommandsEx_put_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_FontName_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *FontName);


void __RPC_STUB IAgentCtlCommandsEx_get_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_FontSize_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *FontSize);


void __RPC_STUB IAgentCtlCommandsEx_get_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_FontSize_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ long FontSize);


void __RPC_STUB IAgentCtlCommandsEx_put_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_VoiceCaption_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR VoiceCaption);


void __RPC_STUB IAgentCtlCommandsEx_put_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_VoiceCaption_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);


void __RPC_STUB IAgentCtlCommandsEx_get_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_GlobalVoiceCommandsEnabled_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Enable);


void __RPC_STUB IAgentCtlCommandsEx_put_GlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_GlobalVoiceCommandsEnabled_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enable);


void __RPC_STUB IAgentCtlCommandsEx_get_GlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommandsEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCharacter_INTERFACE_DEFINED__
#define __IAgentCtlCharacter_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCharacter
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCharacter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BD9-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCharacter : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Balloon( 
            /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Commands( 
            /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *Name) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR __RPC_FAR *Description) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Left( 
            short Left) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ short __RPC_FAR *Left) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Top( 
            short Top) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ short __RPC_FAR *Top) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            short Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            short Width) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Speed( 
            /* [retval][out] */ long __RPC_FAR *Speed) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Pitch( 
            /* [retval][out] */ long __RPC_FAR *Pitch) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_IdleOn( 
            VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_IdleOn( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Activate( 
            /* [optional][in] */ VARIANT State,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Play( 
            /* [in] */ BSTR Animation,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Get( 
            /* [in] */ BSTR Type,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Queue,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Stop( 
            /* [optional][in] */ VARIANT Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Wait( 
            /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Interrupt( 
            /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Speak( 
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Url,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GestureAt( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE MoveTo( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [optional][in] */ VARIANT Speed,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Hide( 
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Show( 
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StopAll( 
            /* [optional][in] */ VARIANT Types) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_MoveCause( 
            /* [retval][out] */ short __RPC_FAR *MoveCause) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_VisibilityCause( 
            /* [retval][out] */ short __RPC_FAR *VisibilityCause) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HasOtherClients( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_SoundEffectsOn( 
            VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SoundEffectsOn( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR Description) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtraData( 
            /* [retval][out] */ BSTR __RPC_FAR *ExtraData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCharacterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCharacter __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCharacter __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Balloon )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Commands )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Left )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Top )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Height )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Width )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Speed )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Speed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Pitch )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Pitch);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_IdleOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_IdleOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT State,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Animation,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Get )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Type,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Queue,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Url,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [optional][in] */ VARIANT Speed,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Types);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_MoveCause )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *MoveCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VisibilityCause )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *VisibilityCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HasOtherClients )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SoundEffectsOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffectsOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Name )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Description )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExtraData )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *ExtraData);
        
        END_INTERFACE
    } IAgentCtlCharacterVtbl;

    interface IAgentCtlCharacter
    {
        CONST_VTBL struct IAgentCtlCharacterVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCharacter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCharacter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCharacter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCharacter_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCharacter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCharacter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCharacter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCharacter_get_Balloon(This,ppidBalloon)	\
    (This)->lpVtbl -> get_Balloon(This,ppidBalloon)

#define IAgentCtlCharacter_get_Commands(This,ppidCommands)	\
    (This)->lpVtbl -> get_Commands(This,ppidCommands)

#define IAgentCtlCharacter_get_Name(This,Name)	\
    (This)->lpVtbl -> get_Name(This,Name)

#define IAgentCtlCharacter_get_Description(This,Description)	\
    (This)->lpVtbl -> get_Description(This,Description)

#define IAgentCtlCharacter_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCharacter_put_Left(This,Left)	\
    (This)->lpVtbl -> put_Left(This,Left)

#define IAgentCtlCharacter_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlCharacter_put_Top(This,Top)	\
    (This)->lpVtbl -> put_Top(This,Top)

#define IAgentCtlCharacter_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlCharacter_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAgentCtlCharacter_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlCharacter_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAgentCtlCharacter_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAgentCtlCharacter_get_Speed(This,Speed)	\
    (This)->lpVtbl -> get_Speed(This,Speed)

#define IAgentCtlCharacter_get_Pitch(This,Pitch)	\
    (This)->lpVtbl -> get_Pitch(This,Pitch)

#define IAgentCtlCharacter_put_IdleOn(This,On)	\
    (This)->lpVtbl -> put_IdleOn(This,On)

#define IAgentCtlCharacter_get_IdleOn(This,On)	\
    (This)->lpVtbl -> get_IdleOn(This,On)

#define IAgentCtlCharacter_Activate(This,State,Success)	\
    (This)->lpVtbl -> Activate(This,State,Success)

#define IAgentCtlCharacter_Play(This,Animation,Request)	\
    (This)->lpVtbl -> Play(This,Animation,Request)

#define IAgentCtlCharacter_Get(This,Type,Name,Queue,Request)	\
    (This)->lpVtbl -> Get(This,Type,Name,Queue,Request)

#define IAgentCtlCharacter_Stop(This,Request)	\
    (This)->lpVtbl -> Stop(This,Request)

#define IAgentCtlCharacter_Wait(This,WaitForRequest,Request)	\
    (This)->lpVtbl -> Wait(This,WaitForRequest,Request)

#define IAgentCtlCharacter_Interrupt(This,InterruptRequest,Request)	\
    (This)->lpVtbl -> Interrupt(This,InterruptRequest,Request)

#define IAgentCtlCharacter_Speak(This,Text,Url,Request)	\
    (This)->lpVtbl -> Speak(This,Text,Url,Request)

#define IAgentCtlCharacter_GestureAt(This,x,y,Request)	\
    (This)->lpVtbl -> GestureAt(This,x,y,Request)

#define IAgentCtlCharacter_MoveTo(This,x,y,Speed,Request)	\
    (This)->lpVtbl -> MoveTo(This,x,y,Speed,Request)

#define IAgentCtlCharacter_Hide(This,Fast,Request)	\
    (This)->lpVtbl -> Hide(This,Fast,Request)

#define IAgentCtlCharacter_Show(This,Fast,Request)	\
    (This)->lpVtbl -> Show(This,Fast,Request)

#define IAgentCtlCharacter_StopAll(This,Types)	\
    (This)->lpVtbl -> StopAll(This,Types)

#define IAgentCtlCharacter_get_MoveCause(This,MoveCause)	\
    (This)->lpVtbl -> get_MoveCause(This,MoveCause)

#define IAgentCtlCharacter_get_VisibilityCause(This,VisibilityCause)	\
    (This)->lpVtbl -> get_VisibilityCause(This,VisibilityCause)

#define IAgentCtlCharacter_get_HasOtherClients(This,HasOtherClients)	\
    (This)->lpVtbl -> get_HasOtherClients(This,HasOtherClients)

#define IAgentCtlCharacter_put_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> put_SoundEffectsOn(This,On)

#define IAgentCtlCharacter_get_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> get_SoundEffectsOn(This,On)

#define IAgentCtlCharacter_put_Name(This,Name)	\
    (This)->lpVtbl -> put_Name(This,Name)

#define IAgentCtlCharacter_put_Description(This,Description)	\
    (This)->lpVtbl -> put_Description(This,Description)

#define IAgentCtlCharacter_get_ExtraData(This,ExtraData)	\
    (This)->lpVtbl -> get_ExtraData(This,ExtraData)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Balloon_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon);


void __RPC_STUB IAgentCtlCharacter_get_Balloon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Commands_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands);


void __RPC_STUB IAgentCtlCharacter_get_Commands_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Name_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Name);


void __RPC_STUB IAgentCtlCharacter_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Description_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Description);


void __RPC_STUB IAgentCtlCharacter_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Visible_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCharacter_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Left_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Left);


void __RPC_STUB IAgentCtlCharacter_put_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Left_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Left);


void __RPC_STUB IAgentCtlCharacter_get_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Top_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Top);


void __RPC_STUB IAgentCtlCharacter_put_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Top_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Top);


void __RPC_STUB IAgentCtlCharacter_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Height_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Height);


void __RPC_STUB IAgentCtlCharacter_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Height_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlCharacter_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Width_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Width);


void __RPC_STUB IAgentCtlCharacter_put_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Width_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlCharacter_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Speed_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Speed);


void __RPC_STUB IAgentCtlCharacter_get_Speed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Pitch_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Pitch);


void __RPC_STUB IAgentCtlCharacter_get_Pitch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_IdleOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacter_put_IdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_IdleOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacter_get_IdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Activate_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT State,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success);


void __RPC_STUB IAgentCtlCharacter_Activate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Play_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Animation,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Play_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Get_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Type,
    /* [in] */ BSTR Name,
    /* [optional][in] */ VARIANT Queue,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Get_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Stop_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Request);


void __RPC_STUB IAgentCtlCharacter_Stop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Wait_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Wait_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Interrupt_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Interrupt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Speak_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Text,
    /* [optional][in] */ VARIANT Url,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Speak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_GestureAt_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_GestureAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_MoveTo_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [optional][in] */ VARIANT Speed,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_MoveTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Hide_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Fast,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Hide_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Show_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Fast,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_StopAll_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Types);


void __RPC_STUB IAgentCtlCharacter_StopAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_MoveCause_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *MoveCause);


void __RPC_STUB IAgentCtlCharacter_get_MoveCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_VisibilityCause_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *VisibilityCause);


void __RPC_STUB IAgentCtlCharacter_get_VisibilityCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_HasOtherClients_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients);


void __RPC_STUB IAgentCtlCharacter_get_HasOtherClients_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_SoundEffectsOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacter_put_SoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_SoundEffectsOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacter_get_SoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Name_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAgentCtlCharacter_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Description_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Description);


void __RPC_STUB IAgentCtlCharacter_put_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_ExtraData_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *ExtraData);


void __RPC_STUB IAgentCtlCharacter_get_ExtraData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCharacter_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlAnimationNames_INTERFACE_DEFINED__
#define __IAgentCtlAnimationNames_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlAnimationNames
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlAnimationNames;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("8B77181C-D3EF-11d1-8500-00C04FA34A14")
    IAgentCtlAnimationNames : public IDispatch
    {
    public:
        virtual /* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlAnimationNamesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlAnimationNames __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlAnimationNames __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        END_INTERFACE
    } IAgentCtlAnimationNamesVtbl;

    interface IAgentCtlAnimationNames
    {
        CONST_VTBL struct IAgentCtlAnimationNamesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlAnimationNames_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlAnimationNames_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlAnimationNames_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlAnimationNames_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlAnimationNames_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlAnimationNames_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlAnimationNames_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlAnimationNames_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAnimationNames_get_Enum_Proxy( 
    IAgentCtlAnimationNames __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);


void __RPC_STUB IAgentCtlAnimationNames_get_Enum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlAnimationNames_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCharacterEx_INTERFACE_DEFINED__
#define __IAgentCtlCharacterEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCharacterEx
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCharacterEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("DE8EF600-2F82-11d1-ACAC-00C04FD97575")
    IAgentCtlCharacterEx : public IAgentCtlCharacter
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ShowPopupMenu( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Showed) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoPopupMenu( 
            /* [in] */ VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoPopupMenu( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpModeOn( 
            /* [in] */ VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpModeOn( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpContextID( 
            /* [in] */ long ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpContextID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Active( 
            /* [retval][out] */ short __RPC_FAR *State) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Listen( 
            /* [in] */ VARIANT_BOOL Listen,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *StartedListening) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_LanguageID( 
            /* [in] */ long LanguageID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LanguageID( 
            /* [retval][out] */ long __RPC_FAR *LanguageID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SRModeID( 
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_SRModeID( 
            /* [in] */ BSTR EngineModeId) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TTSModeID( 
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_TTSModeID( 
            /* [in] */ BSTR EngineModeId) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpFile( 
            /* [retval][out] */ BSTR __RPC_FAR *File) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpFile( 
            /* [in] */ BSTR File) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GUID( 
            /* [retval][out] */ BSTR __RPC_FAR *GUID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginalHeight( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginalWidth( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Think( 
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ BSTR __RPC_FAR *Version) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AnimationNames( 
            /* [retval][out] */ IAgentCtlAnimationNames __RPC_FAR *__RPC_FAR *Names) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SRStatus( 
            /* [retval][out] */ long __RPC_FAR *Status) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCharacterExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCharacterEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCharacterEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Balloon )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Commands )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Left )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Top )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Height )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Width )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Speed )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Speed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Pitch )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Pitch);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_IdleOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_IdleOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT State,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Animation,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Get )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Type,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Queue,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Url,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [optional][in] */ VARIANT Speed,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Types);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_MoveCause )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *MoveCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VisibilityCause )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *VisibilityCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HasOtherClients )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SoundEffectsOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffectsOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Name )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Description )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExtraData )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *ExtraData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowPopupMenu )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Showed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_AutoPopupMenu )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AutoPopupMenu )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpModeOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpModeOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpContextID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ long ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpContextID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Active )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *State);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Listen )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Listen,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *StartedListening);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_LanguageID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ long LanguageID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LanguageID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *LanguageID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SRModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SRModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR EngineModeId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_TTSModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_TTSModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR EngineModeId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpFile )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *File);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpFile )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR File);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_GUID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *GUID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_OriginalHeight )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_OriginalWidth )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Think )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Version )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Version);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AnimationNames )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlAnimationNames __RPC_FAR *__RPC_FAR *Names);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SRStatus )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Status);
        
        END_INTERFACE
    } IAgentCtlCharacterExVtbl;

    interface IAgentCtlCharacterEx
    {
        CONST_VTBL struct IAgentCtlCharacterExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCharacterEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCharacterEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCharacterEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCharacterEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCharacterEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCharacterEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCharacterEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCharacterEx_get_Balloon(This,ppidBalloon)	\
    (This)->lpVtbl -> get_Balloon(This,ppidBalloon)

#define IAgentCtlCharacterEx_get_Commands(This,ppidCommands)	\
    (This)->lpVtbl -> get_Commands(This,ppidCommands)

#define IAgentCtlCharacterEx_get_Name(This,Name)	\
    (This)->lpVtbl -> get_Name(This,Name)

#define IAgentCtlCharacterEx_get_Description(This,Description)	\
    (This)->lpVtbl -> get_Description(This,Description)

#define IAgentCtlCharacterEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCharacterEx_put_Left(This,Left)	\
    (This)->lpVtbl -> put_Left(This,Left)

#define IAgentCtlCharacterEx_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlCharacterEx_put_Top(This,Top)	\
    (This)->lpVtbl -> put_Top(This,Top)

#define IAgentCtlCharacterEx_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlCharacterEx_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAgentCtlCharacterEx_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlCharacterEx_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAgentCtlCharacterEx_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAgentCtlCharacterEx_get_Speed(This,Speed)	\
    (This)->lpVtbl -> get_Speed(This,Speed)

#define IAgentCtlCharacterEx_get_Pitch(This,Pitch)	\
    (This)->lpVtbl -> get_Pitch(This,Pitch)

#define IAgentCtlCharacterEx_put_IdleOn(This,On)	\
    (This)->lpVtbl -> put_IdleOn(This,On)

#define IAgentCtlCharacterEx_get_IdleOn(This,On)	\
    (This)->lpVtbl -> get_IdleOn(This,On)

#define IAgentCtlCharacterEx_Activate(This,State,Success)	\
    (This)->lpVtbl -> Activate(This,State,Success)

#define IAgentCtlCharacterEx_Play(This,Animation,Request)	\
    (This)->lpVtbl -> Play(This,Animation,Request)

#define IAgentCtlCharacterEx_Get(This,Type,Name,Queue,Request)	\
    (This)->lpVtbl -> Get(This,Type,Name,Queue,Request)

#define IAgentCtlCharacterEx_Stop(This,Request)	\
    (This)->lpVtbl -> Stop(This,Request)

#define IAgentCtlCharacterEx_Wait(This,WaitForRequest,Request)	\
    (This)->lpVtbl -> Wait(This,WaitForRequest,Request)

#define IAgentCtlCharacterEx_Interrupt(This,InterruptRequest,Request)	\
    (This)->lpVtbl -> Interrupt(This,InterruptRequest,Request)

#define IAgentCtlCharacterEx_Speak(This,Text,Url,Request)	\
    (This)->lpVtbl -> Speak(This,Text,Url,Request)

#define IAgentCtlCharacterEx_GestureAt(This,x,y,Request)	\
    (This)->lpVtbl -> GestureAt(This,x,y,Request)

#define IAgentCtlCharacterEx_MoveTo(This,x,y,Speed,Request)	\
    (This)->lpVtbl -> MoveTo(This,x,y,Speed,Request)

#define IAgentCtlCharacterEx_Hide(This,Fast,Request)	\
    (This)->lpVtbl -> Hide(This,Fast,Request)

#define IAgentCtlCharacterEx_Show(This,Fast,Request)	\
    (This)->lpVtbl -> Show(This,Fast,Request)

#define IAgentCtlCharacterEx_StopAll(This,Types)	\
    (This)->lpVtbl -> StopAll(This,Types)

#define IAgentCtlCharacterEx_get_MoveCause(This,MoveCause)	\
    (This)->lpVtbl -> get_MoveCause(This,MoveCause)

#define IAgentCtlCharacterEx_get_VisibilityCause(This,VisibilityCause)	\
    (This)->lpVtbl -> get_VisibilityCause(This,VisibilityCause)

#define IAgentCtlCharacterEx_get_HasOtherClients(This,HasOtherClients)	\
    (This)->lpVtbl -> get_HasOtherClients(This,HasOtherClients)

#define IAgentCtlCharacterEx_put_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> put_SoundEffectsOn(This,On)

#define IAgentCtlCharacterEx_get_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> get_SoundEffectsOn(This,On)

#define IAgentCtlCharacterEx_put_Name(This,Name)	\
    (This)->lpVtbl -> put_Name(This,Name)

#define IAgentCtlCharacterEx_put_Description(This,Description)	\
    (This)->lpVtbl -> put_Description(This,Description)

#define IAgentCtlCharacterEx_get_ExtraData(This,ExtraData)	\
    (This)->lpVtbl -> get_ExtraData(This,ExtraData)


#define IAgentCtlCharacterEx_ShowPopupMenu(This,x,y,Showed)	\
    (This)->lpVtbl -> ShowPopupMenu(This,x,y,Showed)

#define IAgentCtlCharacterEx_put_AutoPopupMenu(This,On)	\
    (This)->lpVtbl -> put_AutoPopupMenu(This,On)

#define IAgentCtlCharacterEx_get_AutoPopupMenu(This,On)	\
    (This)->lpVtbl -> get_AutoPopupMenu(This,On)

#define IAgentCtlCharacterEx_put_HelpModeOn(This,On)	\
    (This)->lpVtbl -> put_HelpModeOn(This,On)

#define IAgentCtlCharacterEx_get_HelpModeOn(This,On)	\
    (This)->lpVtbl -> get_HelpModeOn(This,On)

#define IAgentCtlCharacterEx_put_HelpContextID(This,ID)	\
    (This)->lpVtbl -> put_HelpContextID(This,ID)

#define IAgentCtlCharacterEx_get_HelpContextID(This,ID)	\
    (This)->lpVtbl -> get_HelpContextID(This,ID)

#define IAgentCtlCharacterEx_get_Active(This,State)	\
    (This)->lpVtbl -> get_Active(This,State)

#define IAgentCtlCharacterEx_Listen(This,Listen,StartedListening)	\
    (This)->lpVtbl -> Listen(This,Listen,StartedListening)

#define IAgentCtlCharacterEx_put_LanguageID(This,LanguageID)	\
    (This)->lpVtbl -> put_LanguageID(This,LanguageID)

#define IAgentCtlCharacterEx_get_LanguageID(This,LanguageID)	\
    (This)->lpVtbl -> get_LanguageID(This,LanguageID)

#define IAgentCtlCharacterEx_get_SRModeID(This,EngineModeId)	\
    (This)->lpVtbl -> get_SRModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_put_SRModeID(This,EngineModeId)	\
    (This)->lpVtbl -> put_SRModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_get_TTSModeID(This,EngineModeId)	\
    (This)->lpVtbl -> get_TTSModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_put_TTSModeID(This,EngineModeId)	\
    (This)->lpVtbl -> put_TTSModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_get_HelpFile(This,File)	\
    (This)->lpVtbl -> get_HelpFile(This,File)

#define IAgentCtlCharacterEx_put_HelpFile(This,File)	\
    (This)->lpVtbl -> put_HelpFile(This,File)

#define IAgentCtlCharacterEx_get_GUID(This,GUID)	\
    (This)->lpVtbl -> get_GUID(This,GUID)

#define IAgentCtlCharacterEx_get_OriginalHeight(This,Height)	\
    (This)->lpVtbl -> get_OriginalHeight(This,Height)

#define IAgentCtlCharacterEx_get_OriginalWidth(This,Width)	\
    (This)->lpVtbl -> get_OriginalWidth(This,Width)

#define IAgentCtlCharacterEx_Think(This,Text,Request)	\
    (This)->lpVtbl -> Think(This,Text,Request)

#define IAgentCtlCharacterEx_get_Version(This,Version)	\
    (This)->lpVtbl -> get_Version(This,Version)

#define IAgentCtlCharacterEx_get_AnimationNames(This,Names)	\
    (This)->lpVtbl -> get_AnimationNames(This,Names)

#define IAgentCtlCharacterEx_get_SRStatus(This,Status)	\
    (This)->lpVtbl -> get_SRStatus(This,Status)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_ShowPopupMenu_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Showed);


void __RPC_STUB IAgentCtlCharacterEx_ShowPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_AutoPopupMenu_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacterEx_put_AutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_AutoPopupMenu_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacterEx_get_AutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_HelpModeOn_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacterEx_put_HelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_HelpModeOn_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacterEx_get_HelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_HelpContextID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ long ID);


void __RPC_STUB IAgentCtlCharacterEx_put_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_HelpContextID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlCharacterEx_get_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_Active_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *State);


void __RPC_STUB IAgentCtlCharacterEx_get_Active_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_Listen_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Listen,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *StartedListening);


void __RPC_STUB IAgentCtlCharacterEx_Listen_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_LanguageID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ long LanguageID);


void __RPC_STUB IAgentCtlCharacterEx_put_LanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_LanguageID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *LanguageID);


void __RPC_STUB IAgentCtlCharacterEx_get_LanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_SRModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_get_SRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_SRModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_put_SRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_TTSModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_get_TTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_TTSModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_put_TTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_HelpFile_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *File);


void __RPC_STUB IAgentCtlCharacterEx_get_HelpFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_HelpFile_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR File);


void __RPC_STUB IAgentCtlCharacterEx_put_HelpFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_GUID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *GUID);


void __RPC_STUB IAgentCtlCharacterEx_get_GUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_OriginalHeight_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlCharacterEx_get_OriginalHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_OriginalWidth_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlCharacterEx_get_OriginalWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_Think_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR Text,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacterEx_Think_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_Version_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Version);


void __RPC_STUB IAgentCtlCharacterEx_get_Version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_AnimationNames_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlAnimationNames __RPC_FAR *__RPC_FAR *Names);


void __RPC_STUB IAgentCtlCharacterEx_get_AnimationNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_SRStatus_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Status);


void __RPC_STUB IAgentCtlCharacterEx_get_SRStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCharacterEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCharacters_INTERFACE_DEFINED__
#define __IAgentCtlCharacters_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCharacters
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCharacters;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BE8-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCharacters : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Character( 
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem) = 0;
        
        virtual /* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Unload( 
            /* [in] */ BSTR CharacterID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ BSTR CharacterID,
            /* [optional][in] */ VARIANT LoadKey,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *ppidRequest) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCharactersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCharacters __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCharacters __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Character )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unload )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Load )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID,
            /* [optional][in] */ VARIANT LoadKey,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *ppidRequest);
        
        END_INTERFACE
    } IAgentCtlCharactersVtbl;

    interface IAgentCtlCharacters
    {
        CONST_VTBL struct IAgentCtlCharactersVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCharacters_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCharacters_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCharacters_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCharacters_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCharacters_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCharacters_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCharacters_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCharacters_get_Item(This,CharacterID,ppidItem)	\
    (This)->lpVtbl -> get_Item(This,CharacterID,ppidItem)

#define IAgentCtlCharacters_Character(This,CharacterID,ppidItem)	\
    (This)->lpVtbl -> Character(This,CharacterID,ppidItem)

#define IAgentCtlCharacters_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#define IAgentCtlCharacters_Unload(This,CharacterID)	\
    (This)->lpVtbl -> Unload(This,CharacterID)

#define IAgentCtlCharacters_Load(This,CharacterID,LoadKey,ppidRequest)	\
    (This)->lpVtbl -> Load(This,CharacterID,LoadKey,ppidRequest)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_get_Item_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID,
    /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);


void __RPC_STUB IAgentCtlCharacters_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_Character_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID,
    /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);


void __RPC_STUB IAgentCtlCharacters_Character_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_get_Enum_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);


void __RPC_STUB IAgentCtlCharacters_get_Enum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_Unload_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID);


void __RPC_STUB IAgentCtlCharacters_Unload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_Load_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID,
    /* [optional][in] */ VARIANT LoadKey,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *ppidRequest);


void __RPC_STUB IAgentCtlCharacters_Load_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCharacters_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlAudioObject_INTERFACE_DEFINED__
#define __IAgentCtlAudioObject_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlAudioObject
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlAudioObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BDB-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlAudioObject : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SoundEffects( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlAudioObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlAudioObject __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlAudioObject __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffects )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects);
        
        END_INTERFACE
    } IAgentCtlAudioObjectVtbl;

    interface IAgentCtlAudioObject
    {
        CONST_VTBL struct IAgentCtlAudioObjectVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlAudioObject_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlAudioObject_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlAudioObject_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlAudioObject_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlAudioObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlAudioObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlAudioObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlAudioObject_get_Enabled(This,AudioEnabled)	\
    (This)->lpVtbl -> get_Enabled(This,AudioEnabled)

#define IAgentCtlAudioObject_get_SoundEffects(This,SoundEffects)	\
    (This)->lpVtbl -> get_SoundEffects(This,SoundEffects)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAudioObject_get_Enabled_Proxy( 
    IAgentCtlAudioObject __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled);


void __RPC_STUB IAgentCtlAudioObject_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAudioObject_get_SoundEffects_Proxy( 
    IAgentCtlAudioObject __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects);


void __RPC_STUB IAgentCtlAudioObject_get_SoundEffects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlAudioObject_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlAudioObjectEx_INTERFACE_DEFINED__
#define __IAgentCtlAudioObjectEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlAudioObjectEx
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlAudioObjectEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BF0-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlAudioObjectEx : public IAgentCtlAudioObject
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ short __RPC_FAR *Available) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlAudioObjectExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffects )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Status )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Available);
        
        END_INTERFACE
    } IAgentCtlAudioObjectExVtbl;

    interface IAgentCtlAudioObjectEx
    {
        CONST_VTBL struct IAgentCtlAudioObjectExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlAudioObjectEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlAudioObjectEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlAudioObjectEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlAudioObjectEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlAudioObjectEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlAudioObjectEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlAudioObjectEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlAudioObjectEx_get_Enabled(This,AudioEnabled)	\
    (This)->lpVtbl -> get_Enabled(This,AudioEnabled)

#define IAgentCtlAudioObjectEx_get_SoundEffects(This,SoundEffects)	\
    (This)->lpVtbl -> get_SoundEffects(This,SoundEffects)


#define IAgentCtlAudioObjectEx_get_Status(This,Available)	\
    (This)->lpVtbl -> get_Status(This,Available)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAudioObjectEx_get_Status_Proxy( 
    IAgentCtlAudioObjectEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Available);


void __RPC_STUB IAgentCtlAudioObjectEx_get_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlAudioObjectEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlSpeechInput_INTERFACE_DEFINED__
#define __IAgentCtlSpeechInput_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlSpeechInput
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlSpeechInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BDD-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlSpeechInput : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceEnabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ BSTR __RPC_FAR *Language) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HotKey( 
            /* [retval][out] */ BSTR __RPC_FAR *HotKey) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Installed( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceInstalled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Engine( 
            /* [retval][out] */ BSTR __RPC_FAR *Engine) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Engine( 
            /* [in] */ BSTR Engine) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ListeningTip( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *ListeningTip) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlSpeechInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlSpeechInput __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlSpeechInput __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceEnabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Language )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Language);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HotKey )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *HotKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Installed )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceInstalled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Engine )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Engine);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Engine )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ BSTR Engine);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ListeningTip )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *ListeningTip);
        
        END_INTERFACE
    } IAgentCtlSpeechInputVtbl;

    interface IAgentCtlSpeechInput
    {
        CONST_VTBL struct IAgentCtlSpeechInputVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlSpeechInput_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlSpeechInput_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlSpeechInput_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlSpeechInput_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlSpeechInput_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlSpeechInput_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlSpeechInput_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlSpeechInput_get_Enabled(This,VoiceEnabled)	\
    (This)->lpVtbl -> get_Enabled(This,VoiceEnabled)

#define IAgentCtlSpeechInput_get_Language(This,Language)	\
    (This)->lpVtbl -> get_Language(This,Language)

#define IAgentCtlSpeechInput_get_HotKey(This,HotKey)	\
    (This)->lpVtbl -> get_HotKey(This,HotKey)

#define IAgentCtlSpeechInput_get_Installed(This,VoiceInstalled)	\
    (This)->lpVtbl -> get_Installed(This,VoiceInstalled)

#define IAgentCtlSpeechInput_get_Engine(This,Engine)	\
    (This)->lpVtbl -> get_Engine(This,Engine)

#define IAgentCtlSpeechInput_put_Engine(This,Engine)	\
    (This)->lpVtbl -> put_Engine(This,Engine)

#define IAgentCtlSpeechInput_get_ListeningTip(This,ListeningTip)	\
    (This)->lpVtbl -> get_ListeningTip(This,ListeningTip)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Enabled_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceEnabled);


void __RPC_STUB IAgentCtlSpeechInput_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Language_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Language);


void __RPC_STUB IAgentCtlSpeechInput_get_Language_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_HotKey_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *HotKey);


void __RPC_STUB IAgentCtlSpeechInput_get_HotKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Installed_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceInstalled);


void __RPC_STUB IAgentCtlSpeechInput_get_Installed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Engine_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Engine);


void __RPC_STUB IAgentCtlSpeechInput_get_Engine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_put_Engine_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [in] */ BSTR Engine);


void __RPC_STUB IAgentCtlSpeechInput_put_Engine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_ListeningTip_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *ListeningTip);


void __RPC_STUB IAgentCtlSpeechInput_get_ListeningTip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlSpeechInput_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlPropertySheet_INTERFACE_DEFINED__
#define __IAgentCtlPropertySheet_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlPropertySheet
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlPropertySheet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BDF-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlPropertySheet : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ short __RPC_FAR *Left) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ short __RPC_FAR *Top) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Page( 
            /* [in] */ BSTR Page) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Page( 
            /* [retval][out] */ BSTR __RPC_FAR *Page) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlPropertySheetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlPropertySheet __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlPropertySheet __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Page )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ BSTR Page);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Page )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Page);
        
        END_INTERFACE
    } IAgentCtlPropertySheetVtbl;

    interface IAgentCtlPropertySheet
    {
        CONST_VTBL struct IAgentCtlPropertySheetVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlPropertySheet_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlPropertySheet_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlPropertySheet_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlPropertySheet_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlPropertySheet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlPropertySheet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlPropertySheet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlPropertySheet_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlPropertySheet_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlPropertySheet_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlPropertySheet_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAgentCtlPropertySheet_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlPropertySheet_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlPropertySheet_put_Page(This,Page)	\
    (This)->lpVtbl -> put_Page(This,Page)

#define IAgentCtlPropertySheet_get_Page(This,Page)	\
    (This)->lpVtbl -> get_Page(This,Page)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Left_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Left);


void __RPC_STUB IAgentCtlPropertySheet_get_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Top_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Top);


void __RPC_STUB IAgentCtlPropertySheet_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Height_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlPropertySheet_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Width_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlPropertySheet_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_put_Visible_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlPropertySheet_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Visible_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlPropertySheet_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_put_Page_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [in] */ BSTR Page);


void __RPC_STUB IAgentCtlPropertySheet_put_Page_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Page_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Page);


void __RPC_STUB IAgentCtlPropertySheet_get_Page_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlPropertySheet_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommandsWindow_INTERFACE_DEFINED__
#define __IAgentCtlCommandsWindow_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlCommandsWindow
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlCommandsWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("6D0ECB27-9968-11D0-AC6E-00C04FD97575")
    IAgentCtlCommandsWindow : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ short __RPC_FAR *Left) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ short __RPC_FAR *Top) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandsWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommandsWindow __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommandsWindow __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        END_INTERFACE
    } IAgentCtlCommandsWindowVtbl;

    interface IAgentCtlCommandsWindow
    {
        CONST_VTBL struct IAgentCtlCommandsWindowVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommandsWindow_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommandsWindow_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommandsWindow_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommandsWindow_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommandsWindow_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommandsWindow_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommandsWindow_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommandsWindow_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommandsWindow_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommandsWindow_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlCommandsWindow_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlCommandsWindow_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlCommandsWindow_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Visible_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCommandsWindow_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_put_Visible_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlCommandsWindow_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Left_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Left);


void __RPC_STUB IAgentCtlCommandsWindow_get_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Top_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Top);


void __RPC_STUB IAgentCtlCommandsWindow_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Height_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlCommandsWindow_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Width_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlCommandsWindow_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommandsWindow_INTERFACE_DEFINED__ */


#ifndef __IAgentCtl_INTERFACE_DEFINED__
#define __IAgentCtl_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtl
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("F5BE8BD1-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtl : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Characters( 
            /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AudioOutput( 
            /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SpeechInput( 
            /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertySheet( 
            /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandsWindow( 
            /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Connected( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Connected( 
            /* [in] */ VARIANT_BOOL Connected) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Suspended( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtl __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtl __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtl __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Characters )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AudioOutput )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SpeechInput )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PropertySheet )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CommandsWindow )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Connected )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Connected )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Connected);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Suspended )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended);
        
        END_INTERFACE
    } IAgentCtlVtbl;

    interface IAgentCtl
    {
        CONST_VTBL struct IAgentCtlVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtl_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtl_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtl_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtl_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtl_get_Characters(This,Characters)	\
    (This)->lpVtbl -> get_Characters(This,Characters)

#define IAgentCtl_get_AudioOutput(This,AudioOutput)	\
    (This)->lpVtbl -> get_AudioOutput(This,AudioOutput)

#define IAgentCtl_get_SpeechInput(This,SpeechInput)	\
    (This)->lpVtbl -> get_SpeechInput(This,SpeechInput)

#define IAgentCtl_get_PropertySheet(This,PropSheet)	\
    (This)->lpVtbl -> get_PropertySheet(This,PropSheet)

#define IAgentCtl_get_CommandsWindow(This,CommandsWindow)	\
    (This)->lpVtbl -> get_CommandsWindow(This,CommandsWindow)

#define IAgentCtl_get_Connected(This,Connected)	\
    (This)->lpVtbl -> get_Connected(This,Connected)

#define IAgentCtl_put_Connected(This,Connected)	\
    (This)->lpVtbl -> put_Connected(This,Connected)

#define IAgentCtl_get_Suspended(This,Suspended)	\
    (This)->lpVtbl -> get_Suspended(This,Suspended)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_Characters_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters);


void __RPC_STUB IAgentCtl_get_Characters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_AudioOutput_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput);


void __RPC_STUB IAgentCtl_get_AudioOutput_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_SpeechInput_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput);


void __RPC_STUB IAgentCtl_get_SpeechInput_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_PropertySheet_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet);


void __RPC_STUB IAgentCtl_get_PropertySheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_CommandsWindow_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow);


void __RPC_STUB IAgentCtl_get_CommandsWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_Connected_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected);


void __RPC_STUB IAgentCtl_get_Connected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_put_Connected_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Connected);


void __RPC_STUB IAgentCtl_put_Connected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_Suspended_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended);


void __RPC_STUB IAgentCtl_get_Suspended_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtl_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlEx_INTERFACE_DEFINED__
#define __IAgentCtlEx_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: IAgentCtlEx
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [unique][helpstring][dual][uuid][object] */ 



EXTERN_C const IID IID_IAgentCtlEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("8563FF20-8ECC-11d1-B9B4-00C04FD97575")
    IAgentCtlEx : public IAgentCtl
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ShowDefaultCharacterProperties( 
            /* [optional][in] */ VARIANT x,
            /* [optional][in] */ VARIANT y) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_RaiseRequestErrors( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *RaiseErrors) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_RaiseRequestErrors( 
            /* [in] */ VARIANT_BOOL RaiseErrors) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Characters )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AudioOutput )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SpeechInput )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PropertySheet )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CommandsWindow )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Connected )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Connected )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Connected);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Suspended )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowDefaultCharacterProperties )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT x,
            /* [optional][in] */ VARIANT y);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_RaiseRequestErrors )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *RaiseErrors);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_RaiseRequestErrors )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL RaiseErrors);
        
        END_INTERFACE
    } IAgentCtlExVtbl;

    interface IAgentCtlEx
    {
        CONST_VTBL struct IAgentCtlExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlEx_get_Characters(This,Characters)	\
    (This)->lpVtbl -> get_Characters(This,Characters)

#define IAgentCtlEx_get_AudioOutput(This,AudioOutput)	\
    (This)->lpVtbl -> get_AudioOutput(This,AudioOutput)

#define IAgentCtlEx_get_SpeechInput(This,SpeechInput)	\
    (This)->lpVtbl -> get_SpeechInput(This,SpeechInput)

#define IAgentCtlEx_get_PropertySheet(This,PropSheet)	\
    (This)->lpVtbl -> get_PropertySheet(This,PropSheet)

#define IAgentCtlEx_get_CommandsWindow(This,CommandsWindow)	\
    (This)->lpVtbl -> get_CommandsWindow(This,CommandsWindow)

#define IAgentCtlEx_get_Connected(This,Connected)	\
    (This)->lpVtbl -> get_Connected(This,Connected)

#define IAgentCtlEx_put_Connected(This,Connected)	\
    (This)->lpVtbl -> put_Connected(This,Connected)

#define IAgentCtlEx_get_Suspended(This,Suspended)	\
    (This)->lpVtbl -> get_Suspended(This,Suspended)


#define IAgentCtlEx_ShowDefaultCharacterProperties(This,x,y)	\
    (This)->lpVtbl -> ShowDefaultCharacterProperties(This,x,y)

#define IAgentCtlEx_get_RaiseRequestErrors(This,RaiseErrors)	\
    (This)->lpVtbl -> get_RaiseRequestErrors(This,RaiseErrors)

#define IAgentCtlEx_put_RaiseRequestErrors(This,RaiseErrors)	\
    (This)->lpVtbl -> put_RaiseRequestErrors(This,RaiseErrors)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlEx_ShowDefaultCharacterProperties_Proxy( 
    IAgentCtlEx __RPC_FAR * This,
    /* [optional][in] */ VARIANT x,
    /* [optional][in] */ VARIANT y);


void __RPC_STUB IAgentCtlEx_ShowDefaultCharacterProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlEx_get_RaiseRequestErrors_Proxy( 
    IAgentCtlEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *RaiseErrors);


void __RPC_STUB IAgentCtlEx_get_RaiseRequestErrors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlEx_put_RaiseRequestErrors_Proxy( 
    IAgentCtlEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL RaiseErrors);


void __RPC_STUB IAgentCtlEx_put_RaiseRequestErrors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlEx_INTERFACE_DEFINED__ */


/****************************************
 * Generated header for interface: __MIDL_itf_AgentControl_0154
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [local] */ 


#define	CONTROL_MAJOR_VERSION	( 2 )

#define	CONTROL_MINOR_VERSION	( 0 )



extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0154_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0154_v0_0_s_ifspec;


#ifndef __AgentObjects_LIBRARY_DEFINED__
#define __AgentObjects_LIBRARY_DEFINED__

/****************************************
 * Generated header for library: AgentObjects
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [helpstring][version][uuid] */ 






















EXTERN_C const IID LIBID_AgentObjects;

#ifndef ___AgentEvents_DISPINTERFACE_DEFINED__
#define ___AgentEvents_DISPINTERFACE_DEFINED__

/****************************************
 * Generated header for dispinterface: _AgentEvents
 * at Tue Sep 01 10:41:00 1998
 * using MIDL 3.01.75
 ****************************************/
/* [helpstring][uuid] */ 



EXTERN_C const IID DIID__AgentEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    interface DECLSPEC_UUID("F5BE8BD4-7DE6-11D0-91FE-00C04FD701A5")
    _AgentEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _AgentEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            _AgentEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            _AgentEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            _AgentEvents __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } _AgentEventsVtbl;

    interface _AgentEvents
    {
        CONST_VTBL struct _AgentEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AgentEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define _AgentEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define _AgentEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define _AgentEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define _AgentEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define _AgentEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define _AgentEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___AgentEvents_DISPINTERFACE_DEFINED__ */


#ifdef __cplusplus
EXTERN_C const CLSID CLSID_Agent;

class DECLSPEC_UUID("D45FD31B-5C6E-11D1-9EC1-00C04FD7081F")
Agent;
#endif
#endif /* __AgentObjects_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif

#else // _MSC_VER >= 1200

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 5.01.0164 */
/* at Tue Sep 15 16:56:03 1998
 */
/* Compiler settings for AgentControl.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __AgentControl_h__
#define __AgentControl_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __IAgentCtlRequest_FWD_DEFINED__
#define __IAgentCtlRequest_FWD_DEFINED__
typedef interface IAgentCtlRequest IAgentCtlRequest;
#endif 	/* __IAgentCtlRequest_FWD_DEFINED__ */


#ifndef __IAgentCtlUserInput_FWD_DEFINED__
#define __IAgentCtlUserInput_FWD_DEFINED__
typedef interface IAgentCtlUserInput IAgentCtlUserInput;
#endif 	/* __IAgentCtlUserInput_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloon_FWD_DEFINED__
#define __IAgentCtlBalloon_FWD_DEFINED__
typedef interface IAgentCtlBalloon IAgentCtlBalloon;
#endif 	/* __IAgentCtlBalloon_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloonEx_FWD_DEFINED__
#define __IAgentCtlBalloonEx_FWD_DEFINED__
typedef interface IAgentCtlBalloonEx IAgentCtlBalloonEx;
#endif 	/* __IAgentCtlBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCommand_FWD_DEFINED__
#define __IAgentCtlCommand_FWD_DEFINED__
typedef interface IAgentCtlCommand IAgentCtlCommand;
#endif 	/* __IAgentCtlCommand_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandEx_FWD_DEFINED__
#define __IAgentCtlCommandEx_FWD_DEFINED__
typedef interface IAgentCtlCommandEx IAgentCtlCommandEx;
#endif 	/* __IAgentCtlCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCommands_FWD_DEFINED__
#define __IAgentCtlCommands_FWD_DEFINED__
typedef interface IAgentCtlCommands IAgentCtlCommands;
#endif 	/* __IAgentCtlCommands_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsEx_FWD_DEFINED__
#define __IAgentCtlCommandsEx_FWD_DEFINED__
typedef interface IAgentCtlCommandsEx IAgentCtlCommandsEx;
#endif 	/* __IAgentCtlCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacter_FWD_DEFINED__
#define __IAgentCtlCharacter_FWD_DEFINED__
typedef interface IAgentCtlCharacter IAgentCtlCharacter;
#endif 	/* __IAgentCtlCharacter_FWD_DEFINED__ */


#ifndef __IAgentCtlAnimationNames_FWD_DEFINED__
#define __IAgentCtlAnimationNames_FWD_DEFINED__
typedef interface IAgentCtlAnimationNames IAgentCtlAnimationNames;
#endif 	/* __IAgentCtlAnimationNames_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacterEx_FWD_DEFINED__
#define __IAgentCtlCharacterEx_FWD_DEFINED__
typedef interface IAgentCtlCharacterEx IAgentCtlCharacterEx;
#endif 	/* __IAgentCtlCharacterEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacters_FWD_DEFINED__
#define __IAgentCtlCharacters_FWD_DEFINED__
typedef interface IAgentCtlCharacters IAgentCtlCharacters;
#endif 	/* __IAgentCtlCharacters_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObject_FWD_DEFINED__
#define __IAgentCtlAudioObject_FWD_DEFINED__
typedef interface IAgentCtlAudioObject IAgentCtlAudioObject;
#endif 	/* __IAgentCtlAudioObject_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObjectEx_FWD_DEFINED__
#define __IAgentCtlAudioObjectEx_FWD_DEFINED__
typedef interface IAgentCtlAudioObjectEx IAgentCtlAudioObjectEx;
#endif 	/* __IAgentCtlAudioObjectEx_FWD_DEFINED__ */


#ifndef __IAgentCtlSpeechInput_FWD_DEFINED__
#define __IAgentCtlSpeechInput_FWD_DEFINED__
typedef interface IAgentCtlSpeechInput IAgentCtlSpeechInput;
#endif 	/* __IAgentCtlSpeechInput_FWD_DEFINED__ */


#ifndef __IAgentCtlPropertySheet_FWD_DEFINED__
#define __IAgentCtlPropertySheet_FWD_DEFINED__
typedef interface IAgentCtlPropertySheet IAgentCtlPropertySheet;
#endif 	/* __IAgentCtlPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsWindow_FWD_DEFINED__
#define __IAgentCtlCommandsWindow_FWD_DEFINED__
typedef interface IAgentCtlCommandsWindow IAgentCtlCommandsWindow;
#endif 	/* __IAgentCtlCommandsWindow_FWD_DEFINED__ */


#ifndef __IAgentCtl_FWD_DEFINED__
#define __IAgentCtl_FWD_DEFINED__
typedef interface IAgentCtl IAgentCtl;
#endif 	/* __IAgentCtl_FWD_DEFINED__ */


#ifndef __IAgentCtlEx_FWD_DEFINED__
#define __IAgentCtlEx_FWD_DEFINED__
typedef interface IAgentCtlEx IAgentCtlEx;
#endif 	/* __IAgentCtlEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacters_FWD_DEFINED__
#define __IAgentCtlCharacters_FWD_DEFINED__
typedef interface IAgentCtlCharacters IAgentCtlCharacters;
#endif 	/* __IAgentCtlCharacters_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloon_FWD_DEFINED__
#define __IAgentCtlBalloon_FWD_DEFINED__
typedef interface IAgentCtlBalloon IAgentCtlBalloon;
#endif 	/* __IAgentCtlBalloon_FWD_DEFINED__ */


#ifndef __IAgentCtlBalloonEx_FWD_DEFINED__
#define __IAgentCtlBalloonEx_FWD_DEFINED__
typedef interface IAgentCtlBalloonEx IAgentCtlBalloonEx;
#endif 	/* __IAgentCtlBalloonEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacter_FWD_DEFINED__
#define __IAgentCtlCharacter_FWD_DEFINED__
typedef interface IAgentCtlCharacter IAgentCtlCharacter;
#endif 	/* __IAgentCtlCharacter_FWD_DEFINED__ */


#ifndef __IAgentCtlCharacterEx_FWD_DEFINED__
#define __IAgentCtlCharacterEx_FWD_DEFINED__
typedef interface IAgentCtlCharacterEx IAgentCtlCharacterEx;
#endif 	/* __IAgentCtlCharacterEx_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObject_FWD_DEFINED__
#define __IAgentCtlAudioObject_FWD_DEFINED__
typedef interface IAgentCtlAudioObject IAgentCtlAudioObject;
#endif 	/* __IAgentCtlAudioObject_FWD_DEFINED__ */


#ifndef __IAgentCtlAudioObjectEx_FWD_DEFINED__
#define __IAgentCtlAudioObjectEx_FWD_DEFINED__
typedef interface IAgentCtlAudioObjectEx IAgentCtlAudioObjectEx;
#endif 	/* __IAgentCtlAudioObjectEx_FWD_DEFINED__ */


#ifndef __IAgentCtlSpeechInput_FWD_DEFINED__
#define __IAgentCtlSpeechInput_FWD_DEFINED__
typedef interface IAgentCtlSpeechInput IAgentCtlSpeechInput;
#endif 	/* __IAgentCtlSpeechInput_FWD_DEFINED__ */


#ifndef __IAgentCtlPropertySheet_FWD_DEFINED__
#define __IAgentCtlPropertySheet_FWD_DEFINED__
typedef interface IAgentCtlPropertySheet IAgentCtlPropertySheet;
#endif 	/* __IAgentCtlPropertySheet_FWD_DEFINED__ */


#ifndef __IAgentCtlCommands_FWD_DEFINED__
#define __IAgentCtlCommands_FWD_DEFINED__
typedef interface IAgentCtlCommands IAgentCtlCommands;
#endif 	/* __IAgentCtlCommands_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsEx_FWD_DEFINED__
#define __IAgentCtlCommandsEx_FWD_DEFINED__
typedef interface IAgentCtlCommandsEx IAgentCtlCommandsEx;
#endif 	/* __IAgentCtlCommandsEx_FWD_DEFINED__ */


#ifndef __IAgentCtlCommand_FWD_DEFINED__
#define __IAgentCtlCommand_FWD_DEFINED__
typedef interface IAgentCtlCommand IAgentCtlCommand;
#endif 	/* __IAgentCtlCommand_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandEx_FWD_DEFINED__
#define __IAgentCtlCommandEx_FWD_DEFINED__
typedef interface IAgentCtlCommandEx IAgentCtlCommandEx;
#endif 	/* __IAgentCtlCommandEx_FWD_DEFINED__ */


#ifndef __IAgentCtlRequest_FWD_DEFINED__
#define __IAgentCtlRequest_FWD_DEFINED__
typedef interface IAgentCtlRequest IAgentCtlRequest;
#endif 	/* __IAgentCtlRequest_FWD_DEFINED__ */


#ifndef __IAgentCtlUserInput_FWD_DEFINED__
#define __IAgentCtlUserInput_FWD_DEFINED__
typedef interface IAgentCtlUserInput IAgentCtlUserInput;
#endif 	/* __IAgentCtlUserInput_FWD_DEFINED__ */


#ifndef __IAgentCtlCommandsWindow_FWD_DEFINED__
#define __IAgentCtlCommandsWindow_FWD_DEFINED__
typedef interface IAgentCtlCommandsWindow IAgentCtlCommandsWindow;
#endif 	/* __IAgentCtlCommandsWindow_FWD_DEFINED__ */


#ifndef __IAgentCtl_FWD_DEFINED__
#define __IAgentCtl_FWD_DEFINED__
typedef interface IAgentCtl IAgentCtl;
#endif 	/* __IAgentCtl_FWD_DEFINED__ */


#ifndef __IAgentCtlEx_FWD_DEFINED__
#define __IAgentCtlEx_FWD_DEFINED__
typedef interface IAgentCtlEx IAgentCtlEx;
#endif 	/* __IAgentCtlEx_FWD_DEFINED__ */


#ifndef ___AgentEvents_FWD_DEFINED__
#define ___AgentEvents_FWD_DEFINED__
typedef interface _AgentEvents _AgentEvents;
#endif 	/* ___AgentEvents_FWD_DEFINED__ */


#ifndef __Agent_FWD_DEFINED__
#define __Agent_FWD_DEFINED__

#ifdef __cplusplus
typedef class Agent Agent;
#else
typedef struct Agent Agent;
#endif /* __cplusplus */

#endif 	/* __Agent_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/* interface __MIDL_itf_AgentControl_0000 */
/* [local] */ 

#define	RequestSuccess	( 0 )

#define	RequestFailed	( 1 )

#define	RequestPending	( 2 )

#define	RequestInterrupted	( 3 )

#define	RequestInProgress	( 4 )



extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0000_v0_0_s_ifspec;

#ifndef __IAgentCtlRequest_INTERFACE_DEFINED__
#define __IAgentCtlRequest_INTERFACE_DEFINED__

/* interface IAgentCtlRequest */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlRequest;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1DAB85C3-803A-11D0-AC63-00C04FD97575")
    IAgentCtlRequest : public IDispatch
    {
    public:
        virtual /* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ long __RPC_FAR *Status) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR __RPC_FAR *Description) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Number( 
            /* [retval][out] */ long __RPC_FAR *Number) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlRequestVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlRequest __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlRequest __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ID )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Status )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Status);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Number )( 
            IAgentCtlRequest __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Number);
        
        END_INTERFACE
    } IAgentCtlRequestVtbl;

    interface IAgentCtlRequest
    {
        CONST_VTBL struct IAgentCtlRequestVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlRequest_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlRequest_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlRequest_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlRequest_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlRequest_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlRequest_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlRequest_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlRequest_get_ID(This,ID)	\
    (This)->lpVtbl -> get_ID(This,ID)

#define IAgentCtlRequest_get_Status(This,Status)	\
    (This)->lpVtbl -> get_Status(This,Status)

#define IAgentCtlRequest_get_Description(This,Description)	\
    (This)->lpVtbl -> get_Description(This,Description)

#define IAgentCtlRequest_get_Number(This,Number)	\
    (This)->lpVtbl -> get_Number(This,Number)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [hidden][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_ID_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlRequest_get_ID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_Status_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Status);


void __RPC_STUB IAgentCtlRequest_get_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_Description_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Description);


void __RPC_STUB IAgentCtlRequest_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlRequest_get_Number_Proxy( 
    IAgentCtlRequest __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Number);


void __RPC_STUB IAgentCtlRequest_get_Number_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlRequest_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlUserInput_INTERFACE_DEFINED__
#define __IAgentCtlUserInput_INTERFACE_DEFINED__

/* interface IAgentCtlUserInput */
/* [object][dual][uuid] */ 


EXTERN_C const IID IID_IAgentCtlUserInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C4ABF875-8100-11D0-AC63-00C04FD97575")
    IAgentCtlUserInput : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ short __RPC_FAR *pCount) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CharacterID( 
            /* [retval][out] */ BSTR __RPC_FAR *pCharacterID) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Confidence( 
            /* [retval][out] */ long __RPC_FAR *pConfidence) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *pVoice) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt1Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Name) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt1Confidence( 
            /* [retval][out] */ long __RPC_FAR *pAlt1Confidence) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt1Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Voice) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt2Name( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Name) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt2Confidence( 
            /* [retval][out] */ long __RPC_FAR *pAlt2Confidence) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Alt2Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Voice) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlUserInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlUserInput __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlUserInput __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *pCount);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CharacterID )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pCharacterID);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Confidence )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pConfidence);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pVoice);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt1Name )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Name);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt1Confidence )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pAlt1Confidence);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt1Voice )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt1Voice);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt2Name )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Name);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt2Confidence )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pAlt2Confidence);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Alt2Voice )( 
            IAgentCtlUserInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pAlt2Voice);
        
        END_INTERFACE
    } IAgentCtlUserInputVtbl;

    interface IAgentCtlUserInput
    {
        CONST_VTBL struct IAgentCtlUserInputVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlUserInput_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlUserInput_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlUserInput_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlUserInput_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlUserInput_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlUserInput_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlUserInput_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlUserInput_get_Count(This,pCount)	\
    (This)->lpVtbl -> get_Count(This,pCount)

#define IAgentCtlUserInput_get_Name(This,pName)	\
    (This)->lpVtbl -> get_Name(This,pName)

#define IAgentCtlUserInput_get_CharacterID(This,pCharacterID)	\
    (This)->lpVtbl -> get_CharacterID(This,pCharacterID)

#define IAgentCtlUserInput_get_Confidence(This,pConfidence)	\
    (This)->lpVtbl -> get_Confidence(This,pConfidence)

#define IAgentCtlUserInput_get_Voice(This,pVoice)	\
    (This)->lpVtbl -> get_Voice(This,pVoice)

#define IAgentCtlUserInput_get_Alt1Name(This,pAlt1Name)	\
    (This)->lpVtbl -> get_Alt1Name(This,pAlt1Name)

#define IAgentCtlUserInput_get_Alt1Confidence(This,pAlt1Confidence)	\
    (This)->lpVtbl -> get_Alt1Confidence(This,pAlt1Confidence)

#define IAgentCtlUserInput_get_Alt1Voice(This,pAlt1Voice)	\
    (This)->lpVtbl -> get_Alt1Voice(This,pAlt1Voice)

#define IAgentCtlUserInput_get_Alt2Name(This,pAlt2Name)	\
    (This)->lpVtbl -> get_Alt2Name(This,pAlt2Name)

#define IAgentCtlUserInput_get_Alt2Confidence(This,pAlt2Confidence)	\
    (This)->lpVtbl -> get_Alt2Confidence(This,pAlt2Confidence)

#define IAgentCtlUserInput_get_Alt2Voice(This,pAlt2Voice)	\
    (This)->lpVtbl -> get_Alt2Voice(This,pAlt2Voice)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Count_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *pCount);


void __RPC_STUB IAgentCtlUserInput_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Name_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pName);


void __RPC_STUB IAgentCtlUserInput_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_CharacterID_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pCharacterID);


void __RPC_STUB IAgentCtlUserInput_get_CharacterID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Confidence_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pConfidence);


void __RPC_STUB IAgentCtlUserInput_get_Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Voice_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pVoice);


void __RPC_STUB IAgentCtlUserInput_get_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt1Name_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt1Name);


void __RPC_STUB IAgentCtlUserInput_get_Alt1Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt1Confidence_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pAlt1Confidence);


void __RPC_STUB IAgentCtlUserInput_get_Alt1Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt1Voice_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt1Voice);


void __RPC_STUB IAgentCtlUserInput_get_Alt1Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt2Name_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt2Name);


void __RPC_STUB IAgentCtlUserInput_get_Alt2Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt2Confidence_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pAlt2Confidence);


void __RPC_STUB IAgentCtlUserInput_get_Alt2Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget] */ HRESULT STDMETHODCALLTYPE IAgentCtlUserInput_get_Alt2Voice_Proxy( 
    IAgentCtlUserInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pAlt2Voice);


void __RPC_STUB IAgentCtlUserInput_get_Alt2Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlUserInput_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlBalloon_INTERFACE_DEFINED__
#define __IAgentCtlBalloon_INTERFACE_DEFINED__

/* interface IAgentCtlBalloon */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlBalloon;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BD3-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlBalloon : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_NumberOfLines( 
            /* [retval][out] */ long __RPC_FAR *Lines) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CharsPerLine( 
            /* [retval][out] */ long __RPC_FAR *CharsPerLine) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontName( 
            /* [retval][out] */ BSTR __RPC_FAR *FontName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
            /* [retval][out] */ long __RPC_FAR *FontSize) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontBold( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontItalic( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontStrikethru( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontUnderline( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ForeColor( 
            /* [retval][out] */ long __RPC_FAR *ForeColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BackColor( 
            /* [retval][out] */ long __RPC_FAR *BackColor) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BorderColor( 
            /* [retval][out] */ long __RPC_FAR *BorderColor) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontName( 
            /* [in] */ BSTR FontName) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
            /* [in] */ long FontSize) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontCharSet( 
            /* [in] */ short FontCharSet) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontCharSet( 
            /* [retval][out] */ short __RPC_FAR *FontCharSet) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlBalloonVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlBalloon __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlBalloon __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_NumberOfLines )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Lines);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CharsPerLine )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *CharsPerLine);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontName )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontSize )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *FontSize);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontBold )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontItalic )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontStrikethru )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontUnderline )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ForeColor )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ForeColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BackColor )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BackColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BorderColor )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BorderColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontName )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ BSTR FontName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontSize )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ long FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontCharSet )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [in] */ short FontCharSet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontCharSet )( 
            IAgentCtlBalloon __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *FontCharSet);
        
        END_INTERFACE
    } IAgentCtlBalloonVtbl;

    interface IAgentCtlBalloon
    {
        CONST_VTBL struct IAgentCtlBalloonVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlBalloon_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlBalloon_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlBalloon_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlBalloon_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlBalloon_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlBalloon_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlBalloon_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlBalloon_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlBalloon_get_NumberOfLines(This,Lines)	\
    (This)->lpVtbl -> get_NumberOfLines(This,Lines)

#define IAgentCtlBalloon_get_CharsPerLine(This,CharsPerLine)	\
    (This)->lpVtbl -> get_CharsPerLine(This,CharsPerLine)

#define IAgentCtlBalloon_get_FontName(This,FontName)	\
    (This)->lpVtbl -> get_FontName(This,FontName)

#define IAgentCtlBalloon_get_FontSize(This,FontSize)	\
    (This)->lpVtbl -> get_FontSize(This,FontSize)

#define IAgentCtlBalloon_get_FontBold(This,FontBold)	\
    (This)->lpVtbl -> get_FontBold(This,FontBold)

#define IAgentCtlBalloon_get_FontItalic(This,FontItalic)	\
    (This)->lpVtbl -> get_FontItalic(This,FontItalic)

#define IAgentCtlBalloon_get_FontStrikethru(This,FontStrikethru)	\
    (This)->lpVtbl -> get_FontStrikethru(This,FontStrikethru)

#define IAgentCtlBalloon_get_FontUnderline(This,FontUnderline)	\
    (This)->lpVtbl -> get_FontUnderline(This,FontUnderline)

#define IAgentCtlBalloon_get_ForeColor(This,ForeColor)	\
    (This)->lpVtbl -> get_ForeColor(This,ForeColor)

#define IAgentCtlBalloon_get_BackColor(This,BackColor)	\
    (This)->lpVtbl -> get_BackColor(This,BackColor)

#define IAgentCtlBalloon_get_BorderColor(This,BorderColor)	\
    (This)->lpVtbl -> get_BorderColor(This,BorderColor)

#define IAgentCtlBalloon_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlBalloon_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlBalloon_put_FontName(This,FontName)	\
    (This)->lpVtbl -> put_FontName(This,FontName)

#define IAgentCtlBalloon_put_FontSize(This,FontSize)	\
    (This)->lpVtbl -> put_FontSize(This,FontSize)

#define IAgentCtlBalloon_put_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> put_FontCharSet(This,FontCharSet)

#define IAgentCtlBalloon_get_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> get_FontCharSet(This,FontCharSet)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_Enabled_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);


void __RPC_STUB IAgentCtlBalloon_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_NumberOfLines_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Lines);


void __RPC_STUB IAgentCtlBalloon_get_NumberOfLines_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_CharsPerLine_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *CharsPerLine);


void __RPC_STUB IAgentCtlBalloon_get_CharsPerLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontName_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *FontName);


void __RPC_STUB IAgentCtlBalloon_get_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontSize_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *FontSize);


void __RPC_STUB IAgentCtlBalloon_get_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontBold_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold);


void __RPC_STUB IAgentCtlBalloon_get_FontBold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontItalic_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic);


void __RPC_STUB IAgentCtlBalloon_get_FontItalic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontStrikethru_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru);


void __RPC_STUB IAgentCtlBalloon_get_FontStrikethru_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontUnderline_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline);


void __RPC_STUB IAgentCtlBalloon_get_FontUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_ForeColor_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ForeColor);


void __RPC_STUB IAgentCtlBalloon_get_ForeColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_BackColor_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *BackColor);


void __RPC_STUB IAgentCtlBalloon_get_BackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_BorderColor_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *BorderColor);


void __RPC_STUB IAgentCtlBalloon_get_BorderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_Visible_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlBalloon_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_Visible_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlBalloon_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_FontName_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ BSTR FontName);


void __RPC_STUB IAgentCtlBalloon_put_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_FontSize_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ long FontSize);


void __RPC_STUB IAgentCtlBalloon_put_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_put_FontCharSet_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [in] */ short FontCharSet);


void __RPC_STUB IAgentCtlBalloon_put_FontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloon_get_FontCharSet_Proxy( 
    IAgentCtlBalloon __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *FontCharSet);


void __RPC_STUB IAgentCtlBalloon_get_FontCharSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlBalloon_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlBalloonEx_INTERFACE_DEFINED__
#define __IAgentCtlBalloonEx_INTERFACE_DEFINED__

/* interface IAgentCtlBalloonEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlBalloonEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("822DB1C0-8879-11d1-9EC6-00C04FD7081F")
    IAgentCtlBalloonEx : public IAgentCtlBalloon
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Style( 
            /* [in] */ long Style) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Style( 
            /* [retval][out] */ long __RPC_FAR *Style) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlBalloonExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlBalloonEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlBalloonEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_NumberOfLines )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Lines);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CharsPerLine )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *CharsPerLine);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontName )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontSize )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *FontSize);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontBold )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontBold);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontItalic )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontItalic);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontStrikethru )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontStrikethru);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontUnderline )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *FontUnderline);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ForeColor )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ForeColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BackColor )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BackColor);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_BorderColor )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *BorderColor);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontName )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ BSTR FontName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontSize )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ long FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontCharSet )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ short FontCharSet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontCharSet )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *FontCharSet);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Style )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [in] */ long Style);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Style )( 
            IAgentCtlBalloonEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Style);
        
        END_INTERFACE
    } IAgentCtlBalloonExVtbl;

    interface IAgentCtlBalloonEx
    {
        CONST_VTBL struct IAgentCtlBalloonExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlBalloonEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlBalloonEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlBalloonEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlBalloonEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlBalloonEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlBalloonEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlBalloonEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlBalloonEx_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlBalloonEx_get_NumberOfLines(This,Lines)	\
    (This)->lpVtbl -> get_NumberOfLines(This,Lines)

#define IAgentCtlBalloonEx_get_CharsPerLine(This,CharsPerLine)	\
    (This)->lpVtbl -> get_CharsPerLine(This,CharsPerLine)

#define IAgentCtlBalloonEx_get_FontName(This,FontName)	\
    (This)->lpVtbl -> get_FontName(This,FontName)

#define IAgentCtlBalloonEx_get_FontSize(This,FontSize)	\
    (This)->lpVtbl -> get_FontSize(This,FontSize)

#define IAgentCtlBalloonEx_get_FontBold(This,FontBold)	\
    (This)->lpVtbl -> get_FontBold(This,FontBold)

#define IAgentCtlBalloonEx_get_FontItalic(This,FontItalic)	\
    (This)->lpVtbl -> get_FontItalic(This,FontItalic)

#define IAgentCtlBalloonEx_get_FontStrikethru(This,FontStrikethru)	\
    (This)->lpVtbl -> get_FontStrikethru(This,FontStrikethru)

#define IAgentCtlBalloonEx_get_FontUnderline(This,FontUnderline)	\
    (This)->lpVtbl -> get_FontUnderline(This,FontUnderline)

#define IAgentCtlBalloonEx_get_ForeColor(This,ForeColor)	\
    (This)->lpVtbl -> get_ForeColor(This,ForeColor)

#define IAgentCtlBalloonEx_get_BackColor(This,BackColor)	\
    (This)->lpVtbl -> get_BackColor(This,BackColor)

#define IAgentCtlBalloonEx_get_BorderColor(This,BorderColor)	\
    (This)->lpVtbl -> get_BorderColor(This,BorderColor)

#define IAgentCtlBalloonEx_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlBalloonEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlBalloonEx_put_FontName(This,FontName)	\
    (This)->lpVtbl -> put_FontName(This,FontName)

#define IAgentCtlBalloonEx_put_FontSize(This,FontSize)	\
    (This)->lpVtbl -> put_FontSize(This,FontSize)

#define IAgentCtlBalloonEx_put_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> put_FontCharSet(This,FontCharSet)

#define IAgentCtlBalloonEx_get_FontCharSet(This,FontCharSet)	\
    (This)->lpVtbl -> get_FontCharSet(This,FontCharSet)


#define IAgentCtlBalloonEx_put_Style(This,Style)	\
    (This)->lpVtbl -> put_Style(This,Style)

#define IAgentCtlBalloonEx_get_Style(This,Style)	\
    (This)->lpVtbl -> get_Style(This,Style)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloonEx_put_Style_Proxy( 
    IAgentCtlBalloonEx __RPC_FAR * This,
    /* [in] */ long Style);


void __RPC_STUB IAgentCtlBalloonEx_put_Style_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlBalloonEx_get_Style_Proxy( 
    IAgentCtlBalloonEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Style);


void __RPC_STUB IAgentCtlBalloonEx_get_Style_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlBalloonEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommand_INTERFACE_DEFINED__
#define __IAgentCtlCommand_INTERFACE_DEFINED__

/* interface IAgentCtlCommand */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCommand;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BE3-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCommand : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *Voice) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Voice( 
            /* [in] */ BSTR Voice) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR __RPC_FAR *Caption) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR Caption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL Enabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Confidence( 
            /* [retval][out] */ long __RPC_FAR *Confidence) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Confidence( 
            /* [in] */ long Confidence) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ConfidenceText( 
            /* [retval][out] */ BSTR __RPC_FAR *Text) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ConfidenceText( 
            /* [in] */ BSTR Text) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommand __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommand __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Enabled )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Confidence )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Confidence);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Confidence )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ long Confidence);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ConfidenceText )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Text);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ConfidenceText )( 
            IAgentCtlCommand __RPC_FAR * This,
            /* [in] */ BSTR Text);
        
        END_INTERFACE
    } IAgentCtlCommandVtbl;

    interface IAgentCtlCommand
    {
        CONST_VTBL struct IAgentCtlCommandVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommand_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommand_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommand_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommand_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommand_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommand_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommand_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommand_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommand_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommand_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommand_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommand_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlCommand_put_Enabled(This,Enabled)	\
    (This)->lpVtbl -> put_Enabled(This,Enabled)

#define IAgentCtlCommand_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommand_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommand_get_Confidence(This,Confidence)	\
    (This)->lpVtbl -> get_Confidence(This,Confidence)

#define IAgentCtlCommand_put_Confidence(This,Confidence)	\
    (This)->lpVtbl -> put_Confidence(This,Confidence)

#define IAgentCtlCommand_get_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> get_ConfidenceText(This,Text)

#define IAgentCtlCommand_put_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> put_ConfidenceText(This,Text)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Voice_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Voice);


void __RPC_STUB IAgentCtlCommand_get_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Voice_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ BSTR Voice);


void __RPC_STUB IAgentCtlCommand_put_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Caption_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Caption);


void __RPC_STUB IAgentCtlCommand_get_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Caption_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ BSTR Caption);


void __RPC_STUB IAgentCtlCommand_put_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Enabled_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);


void __RPC_STUB IAgentCtlCommand_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Enabled_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Enabled);


void __RPC_STUB IAgentCtlCommand_put_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Visible_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCommand_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Visible_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlCommand_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_Confidence_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Confidence);


void __RPC_STUB IAgentCtlCommand_get_Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_Confidence_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ long Confidence);


void __RPC_STUB IAgentCtlCommand_put_Confidence_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_get_ConfidenceText_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Text);


void __RPC_STUB IAgentCtlCommand_get_ConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommand_put_ConfidenceText_Proxy( 
    IAgentCtlCommand __RPC_FAR * This,
    /* [in] */ BSTR Text);


void __RPC_STUB IAgentCtlCommand_put_ConfidenceText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommand_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommandEx_INTERFACE_DEFINED__
#define __IAgentCtlCommandEx_INTERFACE_DEFINED__

/* interface IAgentCtlCommandEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCommandEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B0913410-3B44-11d1-ACBA-00C04FD97575")
    IAgentCtlCommandEx : public IAgentCtlCommand
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpContextID( 
            /* [in] */ long ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpContextID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_VoiceCaption( 
            /* [in] */ BSTR VoiceCaption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_VoiceCaption( 
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommandEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommandEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enabled);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Enabled )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Enabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Confidence )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Confidence);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Confidence )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ long Confidence);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ConfidenceText )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Text);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ConfidenceText )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR Text);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpContextID )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ long ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpContextID )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_VoiceCaption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [in] */ BSTR VoiceCaption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VoiceCaption )( 
            IAgentCtlCommandEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);
        
        END_INTERFACE
    } IAgentCtlCommandExVtbl;

    interface IAgentCtlCommandEx
    {
        CONST_VTBL struct IAgentCtlCommandExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommandEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommandEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommandEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommandEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommandEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommandEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommandEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommandEx_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommandEx_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommandEx_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommandEx_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommandEx_get_Enabled(This,Enabled)	\
    (This)->lpVtbl -> get_Enabled(This,Enabled)

#define IAgentCtlCommandEx_put_Enabled(This,Enabled)	\
    (This)->lpVtbl -> put_Enabled(This,Enabled)

#define IAgentCtlCommandEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommandEx_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommandEx_get_Confidence(This,Confidence)	\
    (This)->lpVtbl -> get_Confidence(This,Confidence)

#define IAgentCtlCommandEx_put_Confidence(This,Confidence)	\
    (This)->lpVtbl -> put_Confidence(This,Confidence)

#define IAgentCtlCommandEx_get_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> get_ConfidenceText(This,Text)

#define IAgentCtlCommandEx_put_ConfidenceText(This,Text)	\
    (This)->lpVtbl -> put_ConfidenceText(This,Text)


#define IAgentCtlCommandEx_put_HelpContextID(This,ID)	\
    (This)->lpVtbl -> put_HelpContextID(This,ID)

#define IAgentCtlCommandEx_get_HelpContextID(This,ID)	\
    (This)->lpVtbl -> get_HelpContextID(This,ID)

#define IAgentCtlCommandEx_put_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> put_VoiceCaption(This,VoiceCaption)

#define IAgentCtlCommandEx_get_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> get_VoiceCaption(This,VoiceCaption)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_put_HelpContextID_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [in] */ long ID);


void __RPC_STUB IAgentCtlCommandEx_put_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_get_HelpContextID_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlCommandEx_get_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_put_VoiceCaption_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [in] */ BSTR VoiceCaption);


void __RPC_STUB IAgentCtlCommandEx_put_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandEx_get_VoiceCaption_Proxy( 
    IAgentCtlCommandEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);


void __RPC_STUB IAgentCtlCommandEx_get_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommandEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommands_INTERFACE_DEFINED__
#define __IAgentCtlCommands_INTERFACE_DEFINED__

/* interface IAgentCtlCommands */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCommands;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BE1-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCommands : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Command( 
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long __RPC_FAR *Count) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR __RPC_FAR *Caption) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR Caption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Voice( 
            /* [retval][out] */ BSTR __RPC_FAR *Voice) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Voice( 
            /* [in] */ BSTR Voice) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ BSTR Name,
            /* [in] */ BSTR RefName,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommands __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommands __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [in] */ BSTR RefName,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCtlCommands __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCtlCommands __RPC_FAR * This);
        
        END_INTERFACE
    } IAgentCtlCommandsVtbl;

    interface IAgentCtlCommands
    {
        CONST_VTBL struct IAgentCtlCommandsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommands_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommands_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommands_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommands_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommands_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommands_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommands_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommands_get_Item(This,Name,Item)	\
    (This)->lpVtbl -> get_Item(This,Name,Item)

#define IAgentCtlCommands_Command(This,Name,Item)	\
    (This)->lpVtbl -> Command(This,Name,Item)

#define IAgentCtlCommands_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IAgentCtlCommands_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommands_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommands_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommands_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommands_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommands_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommands_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#define IAgentCtlCommands_Add(This,Name,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Add(This,Name,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommands_Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommands_Remove(This,Name)	\
    (This)->lpVtbl -> Remove(This,Name)

#define IAgentCtlCommands_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Item_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);


void __RPC_STUB IAgentCtlCommands_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Command_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);


void __RPC_STUB IAgentCtlCommands_Command_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Count_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Count);


void __RPC_STUB IAgentCtlCommands_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Caption_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Caption);


void __RPC_STUB IAgentCtlCommands_get_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_put_Caption_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Caption);


void __RPC_STUB IAgentCtlCommands_put_Caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Voice_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Voice);


void __RPC_STUB IAgentCtlCommands_get_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_put_Voice_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Voice);


void __RPC_STUB IAgentCtlCommands_put_Voice_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Visible_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCommands_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_put_Visible_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlCommands_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_get_Enum_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);


void __RPC_STUB IAgentCtlCommands_get_Enum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Add_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [optional][in] */ VARIANT Caption,
    /* [optional][in] */ VARIANT Voice,
    /* [optional][in] */ VARIANT Enabled,
    /* [optional][in] */ VARIANT Visible,
    /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);


void __RPC_STUB IAgentCtlCommands_Add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Insert_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name,
    /* [in] */ BSTR RefName,
    /* [optional][in] */ VARIANT Before,
    /* [optional][in] */ VARIANT Caption,
    /* [optional][in] */ VARIANT Voice,
    /* [optional][in] */ VARIANT Enabled,
    /* [optional][in] */ VARIANT Visible,
    /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);


void __RPC_STUB IAgentCtlCommands_Insert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_Remove_Proxy( 
    IAgentCtlCommands __RPC_FAR * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAgentCtlCommands_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommands_RemoveAll_Proxy( 
    IAgentCtlCommands __RPC_FAR * This);


void __RPC_STUB IAgentCtlCommands_RemoveAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommands_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommandsEx_INTERFACE_DEFINED__
#define __IAgentCtlCommandsEx_INTERFACE_DEFINED__

/* interface IAgentCtlCommandsEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCommandsEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6BA90C01-3910-11d1-ACB3-00C04FD97575")
    IAgentCtlCommandsEx : public IAgentCtlCommands
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_DefaultCommand( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultCommand( 
            /* [retval][out] */ BSTR __RPC_FAR *Name) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpContextID( 
            /* [in] */ long ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpContextID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontName( 
            /* [in] */ BSTR FontName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontName( 
            /* [retval][out] */ BSTR __RPC_FAR *FontName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FontSize( 
            /* [retval][out] */ long __RPC_FAR *FontSize) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FontSize( 
            /* [in] */ long FontSize) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_VoiceCaption( 
            /* [in] */ BSTR VoiceCaption) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_VoiceCaption( 
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_GlobalVoiceCommandsEnabled( 
            /* [in] */ VARIANT_BOOL Enable) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GlobalVoiceCommandsEnabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enable) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandsExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommandsEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommandsEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Command )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [retval][out] */ IAgentCtlCommandEx __RPC_FAR *__RPC_FAR *Item);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Count);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Caption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Caption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Caption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Caption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Voice )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Voice);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Voice )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Voice);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Insert )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name,
            /* [in] */ BSTR RefName,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT Caption,
            /* [optional][in] */ VARIANT Voice,
            /* [optional][in] */ VARIANT Enabled,
            /* [optional][in] */ VARIANT Visible,
            /* [retval][out] */ IAgentCtlCommand __RPC_FAR *__RPC_FAR *Command);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveAll )( 
            IAgentCtlCommandsEx __RPC_FAR * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_DefaultCommand )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DefaultCommand )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpContextID )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ long ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpContextID )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontName )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontName )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *FontName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FontSize )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_FontSize )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ long FontSize);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_VoiceCaption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ BSTR VoiceCaption);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VoiceCaption )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_GlobalVoiceCommandsEnabled )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Enable);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_GlobalVoiceCommandsEnabled )( 
            IAgentCtlCommandsEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enable);
        
        END_INTERFACE
    } IAgentCtlCommandsExVtbl;

    interface IAgentCtlCommandsEx
    {
        CONST_VTBL struct IAgentCtlCommandsExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommandsEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommandsEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommandsEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommandsEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommandsEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommandsEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommandsEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommandsEx_get_Item(This,Name,Item)	\
    (This)->lpVtbl -> get_Item(This,Name,Item)

#define IAgentCtlCommandsEx_Command(This,Name,Item)	\
    (This)->lpVtbl -> Command(This,Name,Item)

#define IAgentCtlCommandsEx_get_Count(This,Count)	\
    (This)->lpVtbl -> get_Count(This,Count)

#define IAgentCtlCommandsEx_get_Caption(This,Caption)	\
    (This)->lpVtbl -> get_Caption(This,Caption)

#define IAgentCtlCommandsEx_put_Caption(This,Caption)	\
    (This)->lpVtbl -> put_Caption(This,Caption)

#define IAgentCtlCommandsEx_get_Voice(This,Voice)	\
    (This)->lpVtbl -> get_Voice(This,Voice)

#define IAgentCtlCommandsEx_put_Voice(This,Voice)	\
    (This)->lpVtbl -> put_Voice(This,Voice)

#define IAgentCtlCommandsEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommandsEx_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommandsEx_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#define IAgentCtlCommandsEx_Add(This,Name,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Add(This,Name,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommandsEx_Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)	\
    (This)->lpVtbl -> Insert(This,Name,RefName,Before,Caption,Voice,Enabled,Visible,Command)

#define IAgentCtlCommandsEx_Remove(This,Name)	\
    (This)->lpVtbl -> Remove(This,Name)

#define IAgentCtlCommandsEx_RemoveAll(This)	\
    (This)->lpVtbl -> RemoveAll(This)


#define IAgentCtlCommandsEx_put_DefaultCommand(This,Name)	\
    (This)->lpVtbl -> put_DefaultCommand(This,Name)

#define IAgentCtlCommandsEx_get_DefaultCommand(This,Name)	\
    (This)->lpVtbl -> get_DefaultCommand(This,Name)

#define IAgentCtlCommandsEx_put_HelpContextID(This,ID)	\
    (This)->lpVtbl -> put_HelpContextID(This,ID)

#define IAgentCtlCommandsEx_get_HelpContextID(This,ID)	\
    (This)->lpVtbl -> get_HelpContextID(This,ID)

#define IAgentCtlCommandsEx_put_FontName(This,FontName)	\
    (This)->lpVtbl -> put_FontName(This,FontName)

#define IAgentCtlCommandsEx_get_FontName(This,FontName)	\
    (This)->lpVtbl -> get_FontName(This,FontName)

#define IAgentCtlCommandsEx_get_FontSize(This,FontSize)	\
    (This)->lpVtbl -> get_FontSize(This,FontSize)

#define IAgentCtlCommandsEx_put_FontSize(This,FontSize)	\
    (This)->lpVtbl -> put_FontSize(This,FontSize)

#define IAgentCtlCommandsEx_put_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> put_VoiceCaption(This,VoiceCaption)

#define IAgentCtlCommandsEx_get_VoiceCaption(This,VoiceCaption)	\
    (This)->lpVtbl -> get_VoiceCaption(This,VoiceCaption)

#define IAgentCtlCommandsEx_put_GlobalVoiceCommandsEnabled(This,Enable)	\
    (This)->lpVtbl -> put_GlobalVoiceCommandsEnabled(This,Enable)

#define IAgentCtlCommandsEx_get_GlobalVoiceCommandsEnabled(This,Enable)	\
    (This)->lpVtbl -> get_GlobalVoiceCommandsEnabled(This,Enable)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_DefaultCommand_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAgentCtlCommandsEx_put_DefaultCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_DefaultCommand_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Name);


void __RPC_STUB IAgentCtlCommandsEx_get_DefaultCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_HelpContextID_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ long ID);


void __RPC_STUB IAgentCtlCommandsEx_put_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_HelpContextID_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlCommandsEx_get_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_FontName_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR FontName);


void __RPC_STUB IAgentCtlCommandsEx_put_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_FontName_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *FontName);


void __RPC_STUB IAgentCtlCommandsEx_get_FontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_FontSize_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *FontSize);


void __RPC_STUB IAgentCtlCommandsEx_get_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_FontSize_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ long FontSize);


void __RPC_STUB IAgentCtlCommandsEx_put_FontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_VoiceCaption_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ BSTR VoiceCaption);


void __RPC_STUB IAgentCtlCommandsEx_put_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_VoiceCaption_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *VoiceCaption);


void __RPC_STUB IAgentCtlCommandsEx_get_VoiceCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_put_GlobalVoiceCommandsEnabled_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Enable);


void __RPC_STUB IAgentCtlCommandsEx_put_GlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsEx_get_GlobalVoiceCommandsEnabled_Proxy( 
    IAgentCtlCommandsEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Enable);


void __RPC_STUB IAgentCtlCommandsEx_get_GlobalVoiceCommandsEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommandsEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCharacter_INTERFACE_DEFINED__
#define __IAgentCtlCharacter_INTERFACE_DEFINED__

/* interface IAgentCtlCharacter */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCharacter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BD9-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCharacter : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Balloon( 
            /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Commands( 
            /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR __RPC_FAR *Name) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR __RPC_FAR *Description) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Left( 
            short Left) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ short __RPC_FAR *Left) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Top( 
            short Top) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ short __RPC_FAR *Top) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            short Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            short Width) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Speed( 
            /* [retval][out] */ long __RPC_FAR *Speed) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Pitch( 
            /* [retval][out] */ long __RPC_FAR *Pitch) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_IdleOn( 
            VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_IdleOn( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Activate( 
            /* [optional][in] */ VARIANT State,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Play( 
            /* [in] */ BSTR Animation,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Get( 
            /* [in] */ BSTR Type,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Queue,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Stop( 
            /* [optional][in] */ VARIANT Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Wait( 
            /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Interrupt( 
            /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Speak( 
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Url,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GestureAt( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE MoveTo( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [optional][in] */ VARIANT Speed,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Hide( 
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Show( 
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StopAll( 
            /* [optional][in] */ VARIANT Types) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_MoveCause( 
            /* [retval][out] */ short __RPC_FAR *MoveCause) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_VisibilityCause( 
            /* [retval][out] */ short __RPC_FAR *VisibilityCause) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HasOtherClients( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_SoundEffectsOn( 
            VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SoundEffectsOn( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR Name) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR Description) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtraData( 
            /* [retval][out] */ BSTR __RPC_FAR *ExtraData) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCharacterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCharacter __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCharacter __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Balloon )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Commands )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Left )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Top )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Height )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Width )( 
            IAgentCtlCharacter __RPC_FAR * This,
            short Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Speed )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Speed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Pitch )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Pitch);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_IdleOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_IdleOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT State,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Animation,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Get )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Type,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Queue,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Url,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [optional][in] */ VARIANT Speed,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [optional][in] */ VARIANT Types);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_MoveCause )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *MoveCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VisibilityCause )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *VisibilityCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HasOtherClients )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SoundEffectsOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffectsOn )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Name )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Description )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [in] */ BSTR Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExtraData )( 
            IAgentCtlCharacter __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *ExtraData);
        
        END_INTERFACE
    } IAgentCtlCharacterVtbl;

    interface IAgentCtlCharacter
    {
        CONST_VTBL struct IAgentCtlCharacterVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCharacter_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCharacter_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCharacter_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCharacter_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCharacter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCharacter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCharacter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCharacter_get_Balloon(This,ppidBalloon)	\
    (This)->lpVtbl -> get_Balloon(This,ppidBalloon)

#define IAgentCtlCharacter_get_Commands(This,ppidCommands)	\
    (This)->lpVtbl -> get_Commands(This,ppidCommands)

#define IAgentCtlCharacter_get_Name(This,Name)	\
    (This)->lpVtbl -> get_Name(This,Name)

#define IAgentCtlCharacter_get_Description(This,Description)	\
    (This)->lpVtbl -> get_Description(This,Description)

#define IAgentCtlCharacter_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCharacter_put_Left(This,Left)	\
    (This)->lpVtbl -> put_Left(This,Left)

#define IAgentCtlCharacter_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlCharacter_put_Top(This,Top)	\
    (This)->lpVtbl -> put_Top(This,Top)

#define IAgentCtlCharacter_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlCharacter_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAgentCtlCharacter_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlCharacter_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAgentCtlCharacter_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAgentCtlCharacter_get_Speed(This,Speed)	\
    (This)->lpVtbl -> get_Speed(This,Speed)

#define IAgentCtlCharacter_get_Pitch(This,Pitch)	\
    (This)->lpVtbl -> get_Pitch(This,Pitch)

#define IAgentCtlCharacter_put_IdleOn(This,On)	\
    (This)->lpVtbl -> put_IdleOn(This,On)

#define IAgentCtlCharacter_get_IdleOn(This,On)	\
    (This)->lpVtbl -> get_IdleOn(This,On)

#define IAgentCtlCharacter_Activate(This,State,Success)	\
    (This)->lpVtbl -> Activate(This,State,Success)

#define IAgentCtlCharacter_Play(This,Animation,Request)	\
    (This)->lpVtbl -> Play(This,Animation,Request)

#define IAgentCtlCharacter_Get(This,Type,Name,Queue,Request)	\
    (This)->lpVtbl -> Get(This,Type,Name,Queue,Request)

#define IAgentCtlCharacter_Stop(This,Request)	\
    (This)->lpVtbl -> Stop(This,Request)

#define IAgentCtlCharacter_Wait(This,WaitForRequest,Request)	\
    (This)->lpVtbl -> Wait(This,WaitForRequest,Request)

#define IAgentCtlCharacter_Interrupt(This,InterruptRequest,Request)	\
    (This)->lpVtbl -> Interrupt(This,InterruptRequest,Request)

#define IAgentCtlCharacter_Speak(This,Text,Url,Request)	\
    (This)->lpVtbl -> Speak(This,Text,Url,Request)

#define IAgentCtlCharacter_GestureAt(This,x,y,Request)	\
    (This)->lpVtbl -> GestureAt(This,x,y,Request)

#define IAgentCtlCharacter_MoveTo(This,x,y,Speed,Request)	\
    (This)->lpVtbl -> MoveTo(This,x,y,Speed,Request)

#define IAgentCtlCharacter_Hide(This,Fast,Request)	\
    (This)->lpVtbl -> Hide(This,Fast,Request)

#define IAgentCtlCharacter_Show(This,Fast,Request)	\
    (This)->lpVtbl -> Show(This,Fast,Request)

#define IAgentCtlCharacter_StopAll(This,Types)	\
    (This)->lpVtbl -> StopAll(This,Types)

#define IAgentCtlCharacter_get_MoveCause(This,MoveCause)	\
    (This)->lpVtbl -> get_MoveCause(This,MoveCause)

#define IAgentCtlCharacter_get_VisibilityCause(This,VisibilityCause)	\
    (This)->lpVtbl -> get_VisibilityCause(This,VisibilityCause)

#define IAgentCtlCharacter_get_HasOtherClients(This,HasOtherClients)	\
    (This)->lpVtbl -> get_HasOtherClients(This,HasOtherClients)

#define IAgentCtlCharacter_put_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> put_SoundEffectsOn(This,On)

#define IAgentCtlCharacter_get_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> get_SoundEffectsOn(This,On)

#define IAgentCtlCharacter_put_Name(This,Name)	\
    (This)->lpVtbl -> put_Name(This,Name)

#define IAgentCtlCharacter_put_Description(This,Description)	\
    (This)->lpVtbl -> put_Description(This,Description)

#define IAgentCtlCharacter_get_ExtraData(This,ExtraData)	\
    (This)->lpVtbl -> get_ExtraData(This,ExtraData)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Balloon_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon);


void __RPC_STUB IAgentCtlCharacter_get_Balloon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Commands_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands);


void __RPC_STUB IAgentCtlCharacter_get_Commands_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Name_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Name);


void __RPC_STUB IAgentCtlCharacter_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Description_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Description);


void __RPC_STUB IAgentCtlCharacter_get_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Visible_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCharacter_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Left_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Left);


void __RPC_STUB IAgentCtlCharacter_put_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Left_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Left);


void __RPC_STUB IAgentCtlCharacter_get_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Top_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Top);


void __RPC_STUB IAgentCtlCharacter_put_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Top_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Top);


void __RPC_STUB IAgentCtlCharacter_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Height_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Height);


void __RPC_STUB IAgentCtlCharacter_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Height_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlCharacter_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Width_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    short Width);


void __RPC_STUB IAgentCtlCharacter_put_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Width_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlCharacter_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Speed_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Speed);


void __RPC_STUB IAgentCtlCharacter_get_Speed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_Pitch_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Pitch);


void __RPC_STUB IAgentCtlCharacter_get_Pitch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_IdleOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacter_put_IdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_IdleOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacter_get_IdleOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Activate_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT State,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success);


void __RPC_STUB IAgentCtlCharacter_Activate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Play_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Animation,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Play_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Get_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Type,
    /* [in] */ BSTR Name,
    /* [optional][in] */ VARIANT Queue,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Get_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Stop_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Request);


void __RPC_STUB IAgentCtlCharacter_Stop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Wait_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Wait_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Interrupt_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Interrupt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Speak_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Text,
    /* [optional][in] */ VARIANT Url,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Speak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_GestureAt_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_GestureAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_MoveTo_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [optional][in] */ VARIANT Speed,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_MoveTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Hide_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Fast,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Hide_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_Show_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Fast,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacter_Show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_StopAll_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [optional][in] */ VARIANT Types);


void __RPC_STUB IAgentCtlCharacter_StopAll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_MoveCause_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *MoveCause);


void __RPC_STUB IAgentCtlCharacter_get_MoveCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_VisibilityCause_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *VisibilityCause);


void __RPC_STUB IAgentCtlCharacter_get_VisibilityCause_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_HasOtherClients_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients);


void __RPC_STUB IAgentCtlCharacter_get_HasOtherClients_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_SoundEffectsOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacter_put_SoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_SoundEffectsOn_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacter_get_SoundEffectsOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Name_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Name);


void __RPC_STUB IAgentCtlCharacter_put_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_put_Description_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [in] */ BSTR Description);


void __RPC_STUB IAgentCtlCharacter_put_Description_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacter_get_ExtraData_Proxy( 
    IAgentCtlCharacter __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *ExtraData);


void __RPC_STUB IAgentCtlCharacter_get_ExtraData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCharacter_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlAnimationNames_INTERFACE_DEFINED__
#define __IAgentCtlAnimationNames_INTERFACE_DEFINED__

/* interface IAgentCtlAnimationNames */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlAnimationNames;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8B77181C-D3EF-11d1-8500-00C04FA34A14")
    IAgentCtlAnimationNames : public IDispatch
    {
    public:
        virtual /* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlAnimationNamesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlAnimationNames __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlAnimationNames __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlAnimationNames __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        END_INTERFACE
    } IAgentCtlAnimationNamesVtbl;

    interface IAgentCtlAnimationNames
    {
        CONST_VTBL struct IAgentCtlAnimationNamesVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlAnimationNames_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlAnimationNames_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlAnimationNames_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlAnimationNames_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlAnimationNames_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlAnimationNames_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlAnimationNames_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlAnimationNames_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAnimationNames_get_Enum_Proxy( 
    IAgentCtlAnimationNames __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);


void __RPC_STUB IAgentCtlAnimationNames_get_Enum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlAnimationNames_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCharacterEx_INTERFACE_DEFINED__
#define __IAgentCtlCharacterEx_INTERFACE_DEFINED__

/* interface IAgentCtlCharacterEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCharacterEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DE8EF600-2F82-11d1-ACAC-00C04FD97575")
    IAgentCtlCharacterEx : public IAgentCtlCharacter
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ShowPopupMenu( 
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Showed) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoPopupMenu( 
            /* [in] */ VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoPopupMenu( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpModeOn( 
            /* [in] */ VARIANT_BOOL On) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpModeOn( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpContextID( 
            /* [in] */ long ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpContextID( 
            /* [retval][out] */ long __RPC_FAR *ID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Active( 
            /* [retval][out] */ short __RPC_FAR *State) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Listen( 
            /* [in] */ VARIANT_BOOL Listen,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *StartedListening) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_LanguageID( 
            /* [in] */ long LanguageID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LanguageID( 
            /* [retval][out] */ long __RPC_FAR *LanguageID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SRModeID( 
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_SRModeID( 
            /* [in] */ BSTR EngineModeId) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TTSModeID( 
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_TTSModeID( 
            /* [in] */ BSTR EngineModeId) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpFile( 
            /* [retval][out] */ BSTR __RPC_FAR *File) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpFile( 
            /* [in] */ BSTR File) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GUID( 
            /* [retval][out] */ BSTR __RPC_FAR *GUID) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginalHeight( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OriginalWidth( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Think( 
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ BSTR __RPC_FAR *Version) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AnimationNames( 
            /* [retval][out] */ IAgentCtlAnimationNames __RPC_FAR *__RPC_FAR *Names) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SRStatus( 
            /* [retval][out] */ long __RPC_FAR *Status) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCharacterExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCharacterEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCharacterEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Balloon )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlBalloonEx __RPC_FAR *__RPC_FAR *ppidBalloon);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Commands )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsEx __RPC_FAR *__RPC_FAR *ppidCommands);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Name);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Description )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Left )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Top )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Height )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Width )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            short Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Speed )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Speed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Pitch )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Pitch);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_IdleOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_IdleOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Activate )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT State,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Success);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Play )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Animation,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Get )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Type,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Queue,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Stop )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Wait )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *WaitForRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Interrupt )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ IDispatch __RPC_FAR *InterruptRequest,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Speak )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Url,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GestureAt )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *MoveTo )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [optional][in] */ VARIANT Speed,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Hide )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Show )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Fast,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *StopAll )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT Types);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_MoveCause )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *MoveCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_VisibilityCause )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *VisibilityCause);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HasOtherClients )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *HasOtherClients);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SoundEffectsOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffectsOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Name )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Name);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Description )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Description);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ExtraData )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *ExtraData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowPopupMenu )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ short x,
            /* [in] */ short y,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Showed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_AutoPopupMenu )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AutoPopupMenu )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpModeOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL On);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpModeOn )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpContextID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ long ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpContextID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *ID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Active )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *State);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Listen )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Listen,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *StartedListening);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_LanguageID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ long LanguageID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_LanguageID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *LanguageID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SRModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_SRModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR EngineModeId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_TTSModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_TTSModeID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR EngineModeId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HelpFile )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *File);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HelpFile )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR File);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_GUID )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *GUID);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_OriginalHeight )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_OriginalWidth )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Think )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [in] */ BSTR Text,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Version )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Version);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AnimationNames )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlAnimationNames __RPC_FAR *__RPC_FAR *Names);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SRStatus )( 
            IAgentCtlCharacterEx __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *Status);
        
        END_INTERFACE
    } IAgentCtlCharacterExVtbl;

    interface IAgentCtlCharacterEx
    {
        CONST_VTBL struct IAgentCtlCharacterExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCharacterEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCharacterEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCharacterEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCharacterEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCharacterEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCharacterEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCharacterEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCharacterEx_get_Balloon(This,ppidBalloon)	\
    (This)->lpVtbl -> get_Balloon(This,ppidBalloon)

#define IAgentCtlCharacterEx_get_Commands(This,ppidCommands)	\
    (This)->lpVtbl -> get_Commands(This,ppidCommands)

#define IAgentCtlCharacterEx_get_Name(This,Name)	\
    (This)->lpVtbl -> get_Name(This,Name)

#define IAgentCtlCharacterEx_get_Description(This,Description)	\
    (This)->lpVtbl -> get_Description(This,Description)

#define IAgentCtlCharacterEx_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCharacterEx_put_Left(This,Left)	\
    (This)->lpVtbl -> put_Left(This,Left)

#define IAgentCtlCharacterEx_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlCharacterEx_put_Top(This,Top)	\
    (This)->lpVtbl -> put_Top(This,Top)

#define IAgentCtlCharacterEx_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlCharacterEx_put_Height(This,Height)	\
    (This)->lpVtbl -> put_Height(This,Height)

#define IAgentCtlCharacterEx_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlCharacterEx_put_Width(This,Width)	\
    (This)->lpVtbl -> put_Width(This,Width)

#define IAgentCtlCharacterEx_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAgentCtlCharacterEx_get_Speed(This,Speed)	\
    (This)->lpVtbl -> get_Speed(This,Speed)

#define IAgentCtlCharacterEx_get_Pitch(This,Pitch)	\
    (This)->lpVtbl -> get_Pitch(This,Pitch)

#define IAgentCtlCharacterEx_put_IdleOn(This,On)	\
    (This)->lpVtbl -> put_IdleOn(This,On)

#define IAgentCtlCharacterEx_get_IdleOn(This,On)	\
    (This)->lpVtbl -> get_IdleOn(This,On)

#define IAgentCtlCharacterEx_Activate(This,State,Success)	\
    (This)->lpVtbl -> Activate(This,State,Success)

#define IAgentCtlCharacterEx_Play(This,Animation,Request)	\
    (This)->lpVtbl -> Play(This,Animation,Request)

#define IAgentCtlCharacterEx_Get(This,Type,Name,Queue,Request)	\
    (This)->lpVtbl -> Get(This,Type,Name,Queue,Request)

#define IAgentCtlCharacterEx_Stop(This,Request)	\
    (This)->lpVtbl -> Stop(This,Request)

#define IAgentCtlCharacterEx_Wait(This,WaitForRequest,Request)	\
    (This)->lpVtbl -> Wait(This,WaitForRequest,Request)

#define IAgentCtlCharacterEx_Interrupt(This,InterruptRequest,Request)	\
    (This)->lpVtbl -> Interrupt(This,InterruptRequest,Request)

#define IAgentCtlCharacterEx_Speak(This,Text,Url,Request)	\
    (This)->lpVtbl -> Speak(This,Text,Url,Request)

#define IAgentCtlCharacterEx_GestureAt(This,x,y,Request)	\
    (This)->lpVtbl -> GestureAt(This,x,y,Request)

#define IAgentCtlCharacterEx_MoveTo(This,x,y,Speed,Request)	\
    (This)->lpVtbl -> MoveTo(This,x,y,Speed,Request)

#define IAgentCtlCharacterEx_Hide(This,Fast,Request)	\
    (This)->lpVtbl -> Hide(This,Fast,Request)

#define IAgentCtlCharacterEx_Show(This,Fast,Request)	\
    (This)->lpVtbl -> Show(This,Fast,Request)

#define IAgentCtlCharacterEx_StopAll(This,Types)	\
    (This)->lpVtbl -> StopAll(This,Types)

#define IAgentCtlCharacterEx_get_MoveCause(This,MoveCause)	\
    (This)->lpVtbl -> get_MoveCause(This,MoveCause)

#define IAgentCtlCharacterEx_get_VisibilityCause(This,VisibilityCause)	\
    (This)->lpVtbl -> get_VisibilityCause(This,VisibilityCause)

#define IAgentCtlCharacterEx_get_HasOtherClients(This,HasOtherClients)	\
    (This)->lpVtbl -> get_HasOtherClients(This,HasOtherClients)

#define IAgentCtlCharacterEx_put_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> put_SoundEffectsOn(This,On)

#define IAgentCtlCharacterEx_get_SoundEffectsOn(This,On)	\
    (This)->lpVtbl -> get_SoundEffectsOn(This,On)

#define IAgentCtlCharacterEx_put_Name(This,Name)	\
    (This)->lpVtbl -> put_Name(This,Name)

#define IAgentCtlCharacterEx_put_Description(This,Description)	\
    (This)->lpVtbl -> put_Description(This,Description)

#define IAgentCtlCharacterEx_get_ExtraData(This,ExtraData)	\
    (This)->lpVtbl -> get_ExtraData(This,ExtraData)


#define IAgentCtlCharacterEx_ShowPopupMenu(This,x,y,Showed)	\
    (This)->lpVtbl -> ShowPopupMenu(This,x,y,Showed)

#define IAgentCtlCharacterEx_put_AutoPopupMenu(This,On)	\
    (This)->lpVtbl -> put_AutoPopupMenu(This,On)

#define IAgentCtlCharacterEx_get_AutoPopupMenu(This,On)	\
    (This)->lpVtbl -> get_AutoPopupMenu(This,On)

#define IAgentCtlCharacterEx_put_HelpModeOn(This,On)	\
    (This)->lpVtbl -> put_HelpModeOn(This,On)

#define IAgentCtlCharacterEx_get_HelpModeOn(This,On)	\
    (This)->lpVtbl -> get_HelpModeOn(This,On)

#define IAgentCtlCharacterEx_put_HelpContextID(This,ID)	\
    (This)->lpVtbl -> put_HelpContextID(This,ID)

#define IAgentCtlCharacterEx_get_HelpContextID(This,ID)	\
    (This)->lpVtbl -> get_HelpContextID(This,ID)

#define IAgentCtlCharacterEx_get_Active(This,State)	\
    (This)->lpVtbl -> get_Active(This,State)

#define IAgentCtlCharacterEx_Listen(This,Listen,StartedListening)	\
    (This)->lpVtbl -> Listen(This,Listen,StartedListening)

#define IAgentCtlCharacterEx_put_LanguageID(This,LanguageID)	\
    (This)->lpVtbl -> put_LanguageID(This,LanguageID)

#define IAgentCtlCharacterEx_get_LanguageID(This,LanguageID)	\
    (This)->lpVtbl -> get_LanguageID(This,LanguageID)

#define IAgentCtlCharacterEx_get_SRModeID(This,EngineModeId)	\
    (This)->lpVtbl -> get_SRModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_put_SRModeID(This,EngineModeId)	\
    (This)->lpVtbl -> put_SRModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_get_TTSModeID(This,EngineModeId)	\
    (This)->lpVtbl -> get_TTSModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_put_TTSModeID(This,EngineModeId)	\
    (This)->lpVtbl -> put_TTSModeID(This,EngineModeId)

#define IAgentCtlCharacterEx_get_HelpFile(This,File)	\
    (This)->lpVtbl -> get_HelpFile(This,File)

#define IAgentCtlCharacterEx_put_HelpFile(This,File)	\
    (This)->lpVtbl -> put_HelpFile(This,File)

#define IAgentCtlCharacterEx_get_GUID(This,GUID)	\
    (This)->lpVtbl -> get_GUID(This,GUID)

#define IAgentCtlCharacterEx_get_OriginalHeight(This,Height)	\
    (This)->lpVtbl -> get_OriginalHeight(This,Height)

#define IAgentCtlCharacterEx_get_OriginalWidth(This,Width)	\
    (This)->lpVtbl -> get_OriginalWidth(This,Width)

#define IAgentCtlCharacterEx_Think(This,Text,Request)	\
    (This)->lpVtbl -> Think(This,Text,Request)

#define IAgentCtlCharacterEx_get_Version(This,Version)	\
    (This)->lpVtbl -> get_Version(This,Version)

#define IAgentCtlCharacterEx_get_AnimationNames(This,Names)	\
    (This)->lpVtbl -> get_AnimationNames(This,Names)

#define IAgentCtlCharacterEx_get_SRStatus(This,Status)	\
    (This)->lpVtbl -> get_SRStatus(This,Status)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_ShowPopupMenu_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ short x,
    /* [in] */ short y,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Showed);


void __RPC_STUB IAgentCtlCharacterEx_ShowPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_AutoPopupMenu_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacterEx_put_AutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_AutoPopupMenu_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacterEx_get_AutoPopupMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_HelpModeOn_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL On);


void __RPC_STUB IAgentCtlCharacterEx_put_HelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_HelpModeOn_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *On);


void __RPC_STUB IAgentCtlCharacterEx_get_HelpModeOn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_HelpContextID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ long ID);


void __RPC_STUB IAgentCtlCharacterEx_put_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_HelpContextID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *ID);


void __RPC_STUB IAgentCtlCharacterEx_get_HelpContextID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_Active_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *State);


void __RPC_STUB IAgentCtlCharacterEx_get_Active_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_Listen_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Listen,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *StartedListening);


void __RPC_STUB IAgentCtlCharacterEx_Listen_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_LanguageID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ long LanguageID);


void __RPC_STUB IAgentCtlCharacterEx_put_LanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_LanguageID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *LanguageID);


void __RPC_STUB IAgentCtlCharacterEx_get_LanguageID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_SRModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_get_SRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_SRModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_put_SRModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_TTSModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_get_TTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_TTSModeID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR EngineModeId);


void __RPC_STUB IAgentCtlCharacterEx_put_TTSModeID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_HelpFile_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *File);


void __RPC_STUB IAgentCtlCharacterEx_get_HelpFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_put_HelpFile_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR File);


void __RPC_STUB IAgentCtlCharacterEx_put_HelpFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_GUID_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *GUID);


void __RPC_STUB IAgentCtlCharacterEx_get_GUID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_OriginalHeight_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlCharacterEx_get_OriginalHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_OriginalWidth_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlCharacterEx_get_OriginalWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_Think_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [in] */ BSTR Text,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *Request);


void __RPC_STUB IAgentCtlCharacterEx_Think_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_Version_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Version);


void __RPC_STUB IAgentCtlCharacterEx_get_Version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_AnimationNames_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlAnimationNames __RPC_FAR *__RPC_FAR *Names);


void __RPC_STUB IAgentCtlCharacterEx_get_AnimationNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacterEx_get_SRStatus_Proxy( 
    IAgentCtlCharacterEx __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *Status);


void __RPC_STUB IAgentCtlCharacterEx_get_SRStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCharacterEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCharacters_INTERFACE_DEFINED__
#define __IAgentCtlCharacters_INTERFACE_DEFINED__

/* interface IAgentCtlCharacters */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCharacters;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BE8-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlCharacters : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Character( 
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem) = 0;
        
        virtual /* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE get_Enum( 
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Unload( 
            /* [in] */ BSTR CharacterID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Load( 
            /* [in] */ BSTR CharacterID,
            /* [optional][in] */ VARIANT LoadKey,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *ppidRequest) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCharactersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCharacters __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCharacters __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Character )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID,
            /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);
        
        /* [restricted][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enum )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Unload )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Load )( 
            IAgentCtlCharacters __RPC_FAR * This,
            /* [in] */ BSTR CharacterID,
            /* [optional][in] */ VARIANT LoadKey,
            /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *ppidRequest);
        
        END_INTERFACE
    } IAgentCtlCharactersVtbl;

    interface IAgentCtlCharacters
    {
        CONST_VTBL struct IAgentCtlCharactersVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCharacters_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCharacters_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCharacters_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCharacters_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCharacters_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCharacters_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCharacters_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCharacters_get_Item(This,CharacterID,ppidItem)	\
    (This)->lpVtbl -> get_Item(This,CharacterID,ppidItem)

#define IAgentCtlCharacters_Character(This,CharacterID,ppidItem)	\
    (This)->lpVtbl -> Character(This,CharacterID,ppidItem)

#define IAgentCtlCharacters_get_Enum(This,ppunkEnum)	\
    (This)->lpVtbl -> get_Enum(This,ppunkEnum)

#define IAgentCtlCharacters_Unload(This,CharacterID)	\
    (This)->lpVtbl -> Unload(This,CharacterID)

#define IAgentCtlCharacters_Load(This,CharacterID,LoadKey,ppidRequest)	\
    (This)->lpVtbl -> Load(This,CharacterID,LoadKey,ppidRequest)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_get_Item_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID,
    /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);


void __RPC_STUB IAgentCtlCharacters_get_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_Character_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID,
    /* [retval][out] */ IAgentCtlCharacterEx __RPC_FAR *__RPC_FAR *ppidItem);


void __RPC_STUB IAgentCtlCharacters_Character_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_get_Enum_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppunkEnum);


void __RPC_STUB IAgentCtlCharacters_get_Enum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_Unload_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID);


void __RPC_STUB IAgentCtlCharacters_Unload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCharacters_Load_Proxy( 
    IAgentCtlCharacters __RPC_FAR * This,
    /* [in] */ BSTR CharacterID,
    /* [optional][in] */ VARIANT LoadKey,
    /* [retval][out] */ IAgentCtlRequest __RPC_FAR *__RPC_FAR *ppidRequest);


void __RPC_STUB IAgentCtlCharacters_Load_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCharacters_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlAudioObject_INTERFACE_DEFINED__
#define __IAgentCtlAudioObject_INTERFACE_DEFINED__

/* interface IAgentCtlAudioObject */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlAudioObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BDB-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlAudioObject : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SoundEffects( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlAudioObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlAudioObject __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlAudioObject __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffects )( 
            IAgentCtlAudioObject __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects);
        
        END_INTERFACE
    } IAgentCtlAudioObjectVtbl;

    interface IAgentCtlAudioObject
    {
        CONST_VTBL struct IAgentCtlAudioObjectVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlAudioObject_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlAudioObject_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlAudioObject_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlAudioObject_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlAudioObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlAudioObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlAudioObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlAudioObject_get_Enabled(This,AudioEnabled)	\
    (This)->lpVtbl -> get_Enabled(This,AudioEnabled)

#define IAgentCtlAudioObject_get_SoundEffects(This,SoundEffects)	\
    (This)->lpVtbl -> get_SoundEffects(This,SoundEffects)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAudioObject_get_Enabled_Proxy( 
    IAgentCtlAudioObject __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled);


void __RPC_STUB IAgentCtlAudioObject_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAudioObject_get_SoundEffects_Proxy( 
    IAgentCtlAudioObject __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects);


void __RPC_STUB IAgentCtlAudioObject_get_SoundEffects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlAudioObject_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlAudioObjectEx_INTERFACE_DEFINED__
#define __IAgentCtlAudioObjectEx_INTERFACE_DEFINED__

/* interface IAgentCtlAudioObjectEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlAudioObjectEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BF0-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlAudioObjectEx : public IAgentCtlAudioObject
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ short __RPC_FAR *Available) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlAudioObjectExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *AudioEnabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SoundEffects )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *SoundEffects);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Status )( 
            IAgentCtlAudioObjectEx __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Available);
        
        END_INTERFACE
    } IAgentCtlAudioObjectExVtbl;

    interface IAgentCtlAudioObjectEx
    {
        CONST_VTBL struct IAgentCtlAudioObjectExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlAudioObjectEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlAudioObjectEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlAudioObjectEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlAudioObjectEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlAudioObjectEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlAudioObjectEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlAudioObjectEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlAudioObjectEx_get_Enabled(This,AudioEnabled)	\
    (This)->lpVtbl -> get_Enabled(This,AudioEnabled)

#define IAgentCtlAudioObjectEx_get_SoundEffects(This,SoundEffects)	\
    (This)->lpVtbl -> get_SoundEffects(This,SoundEffects)


#define IAgentCtlAudioObjectEx_get_Status(This,Available)	\
    (This)->lpVtbl -> get_Status(This,Available)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlAudioObjectEx_get_Status_Proxy( 
    IAgentCtlAudioObjectEx __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Available);


void __RPC_STUB IAgentCtlAudioObjectEx_get_Status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlAudioObjectEx_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlSpeechInput_INTERFACE_DEFINED__
#define __IAgentCtlSpeechInput_INTERFACE_DEFINED__

/* interface IAgentCtlSpeechInput */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlSpeechInput;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BDD-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlSpeechInput : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceEnabled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ BSTR __RPC_FAR *Language) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HotKey( 
            /* [retval][out] */ BSTR __RPC_FAR *HotKey) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Installed( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceInstalled) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Engine( 
            /* [retval][out] */ BSTR __RPC_FAR *Engine) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Engine( 
            /* [in] */ BSTR Engine) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ListeningTip( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *ListeningTip) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlSpeechInputVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlSpeechInput __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlSpeechInput __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Enabled )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceEnabled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Language )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Language);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HotKey )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *HotKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Installed )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceInstalled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Engine )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Engine);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Engine )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [in] */ BSTR Engine);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ListeningTip )( 
            IAgentCtlSpeechInput __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *ListeningTip);
        
        END_INTERFACE
    } IAgentCtlSpeechInputVtbl;

    interface IAgentCtlSpeechInput
    {
        CONST_VTBL struct IAgentCtlSpeechInputVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlSpeechInput_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlSpeechInput_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlSpeechInput_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlSpeechInput_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlSpeechInput_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlSpeechInput_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlSpeechInput_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlSpeechInput_get_Enabled(This,VoiceEnabled)	\
    (This)->lpVtbl -> get_Enabled(This,VoiceEnabled)

#define IAgentCtlSpeechInput_get_Language(This,Language)	\
    (This)->lpVtbl -> get_Language(This,Language)

#define IAgentCtlSpeechInput_get_HotKey(This,HotKey)	\
    (This)->lpVtbl -> get_HotKey(This,HotKey)

#define IAgentCtlSpeechInput_get_Installed(This,VoiceInstalled)	\
    (This)->lpVtbl -> get_Installed(This,VoiceInstalled)

#define IAgentCtlSpeechInput_get_Engine(This,Engine)	\
    (This)->lpVtbl -> get_Engine(This,Engine)

#define IAgentCtlSpeechInput_put_Engine(This,Engine)	\
    (This)->lpVtbl -> put_Engine(This,Engine)

#define IAgentCtlSpeechInput_get_ListeningTip(This,ListeningTip)	\
    (This)->lpVtbl -> get_ListeningTip(This,ListeningTip)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Enabled_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceEnabled);


void __RPC_STUB IAgentCtlSpeechInput_get_Enabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Language_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Language);


void __RPC_STUB IAgentCtlSpeechInput_get_Language_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_HotKey_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *HotKey);


void __RPC_STUB IAgentCtlSpeechInput_get_HotKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Installed_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *VoiceInstalled);


void __RPC_STUB IAgentCtlSpeechInput_get_Installed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_Engine_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Engine);


void __RPC_STUB IAgentCtlSpeechInput_get_Engine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_put_Engine_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [in] */ BSTR Engine);


void __RPC_STUB IAgentCtlSpeechInput_put_Engine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlSpeechInput_get_ListeningTip_Proxy( 
    IAgentCtlSpeechInput __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *ListeningTip);


void __RPC_STUB IAgentCtlSpeechInput_get_ListeningTip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlSpeechInput_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlPropertySheet_INTERFACE_DEFINED__
#define __IAgentCtlPropertySheet_INTERFACE_DEFINED__

/* interface IAgentCtlPropertySheet */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlPropertySheet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BDF-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtlPropertySheet : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ short __RPC_FAR *Left) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ short __RPC_FAR *Top) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Page( 
            /* [in] */ BSTR Page) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Page( 
            /* [retval][out] */ BSTR __RPC_FAR *Page) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlPropertySheetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlPropertySheet __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlPropertySheet __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Page )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [in] */ BSTR Page);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Page )( 
            IAgentCtlPropertySheet __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *Page);
        
        END_INTERFACE
    } IAgentCtlPropertySheetVtbl;

    interface IAgentCtlPropertySheet
    {
        CONST_VTBL struct IAgentCtlPropertySheetVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlPropertySheet_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlPropertySheet_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlPropertySheet_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlPropertySheet_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlPropertySheet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlPropertySheet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlPropertySheet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlPropertySheet_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlPropertySheet_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlPropertySheet_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlPropertySheet_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#define IAgentCtlPropertySheet_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlPropertySheet_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlPropertySheet_put_Page(This,Page)	\
    (This)->lpVtbl -> put_Page(This,Page)

#define IAgentCtlPropertySheet_get_Page(This,Page)	\
    (This)->lpVtbl -> get_Page(This,Page)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Left_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Left);


void __RPC_STUB IAgentCtlPropertySheet_get_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Top_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Top);


void __RPC_STUB IAgentCtlPropertySheet_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Height_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlPropertySheet_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Width_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlPropertySheet_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_put_Visible_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlPropertySheet_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Visible_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlPropertySheet_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_put_Page_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [in] */ BSTR Page);


void __RPC_STUB IAgentCtlPropertySheet_put_Page_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlPropertySheet_get_Page_Proxy( 
    IAgentCtlPropertySheet __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *Page);


void __RPC_STUB IAgentCtlPropertySheet_get_Page_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlPropertySheet_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlCommandsWindow_INTERFACE_DEFINED__
#define __IAgentCtlCommandsWindow_INTERFACE_DEFINED__

/* interface IAgentCtlCommandsWindow */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlCommandsWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6D0ECB27-9968-11D0-AC6E-00C04FD97575")
    IAgentCtlCommandsWindow : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [in] */ VARIANT_BOOL Visible) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [retval][out] */ short __RPC_FAR *Left) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [retval][out] */ short __RPC_FAR *Top) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [retval][out] */ short __RPC_FAR *Height) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [retval][out] */ short __RPC_FAR *Width) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlCommandsWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlCommandsWindow __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlCommandsWindow __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Visible )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Visible )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Visible);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Left )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Left);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Top )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Top);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Height )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Height);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Width )( 
            IAgentCtlCommandsWindow __RPC_FAR * This,
            /* [retval][out] */ short __RPC_FAR *Width);
        
        END_INTERFACE
    } IAgentCtlCommandsWindowVtbl;

    interface IAgentCtlCommandsWindow
    {
        CONST_VTBL struct IAgentCtlCommandsWindowVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlCommandsWindow_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlCommandsWindow_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlCommandsWindow_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlCommandsWindow_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlCommandsWindow_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlCommandsWindow_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlCommandsWindow_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlCommandsWindow_get_Visible(This,Visible)	\
    (This)->lpVtbl -> get_Visible(This,Visible)

#define IAgentCtlCommandsWindow_put_Visible(This,Visible)	\
    (This)->lpVtbl -> put_Visible(This,Visible)

#define IAgentCtlCommandsWindow_get_Left(This,Left)	\
    (This)->lpVtbl -> get_Left(This,Left)

#define IAgentCtlCommandsWindow_get_Top(This,Top)	\
    (This)->lpVtbl -> get_Top(This,Top)

#define IAgentCtlCommandsWindow_get_Height(This,Height)	\
    (This)->lpVtbl -> get_Height(This,Height)

#define IAgentCtlCommandsWindow_get_Width(This,Width)	\
    (This)->lpVtbl -> get_Width(This,Width)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Visible_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Visible);


void __RPC_STUB IAgentCtlCommandsWindow_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_put_Visible_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Visible);


void __RPC_STUB IAgentCtlCommandsWindow_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Left_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Left);


void __RPC_STUB IAgentCtlCommandsWindow_get_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Top_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Top);


void __RPC_STUB IAgentCtlCommandsWindow_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Height_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Height);


void __RPC_STUB IAgentCtlCommandsWindow_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlCommandsWindow_get_Width_Proxy( 
    IAgentCtlCommandsWindow __RPC_FAR * This,
    /* [retval][out] */ short __RPC_FAR *Width);


void __RPC_STUB IAgentCtlCommandsWindow_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlCommandsWindow_INTERFACE_DEFINED__ */


#ifndef __IAgentCtl_INTERFACE_DEFINED__
#define __IAgentCtl_INTERFACE_DEFINED__

/* interface IAgentCtl */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5BE8BD1-7DE6-11D0-91FE-00C04FD701A5")
    IAgentCtl : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Characters( 
            /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AudioOutput( 
            /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SpeechInput( 
            /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertySheet( 
            /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandsWindow( 
            /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Connected( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Connected( 
            /* [in] */ VARIANT_BOOL Connected) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Suspended( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtl __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtl __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtl __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Characters )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AudioOutput )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SpeechInput )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PropertySheet )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CommandsWindow )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Connected )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Connected )( 
            IAgentCtl __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Connected);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Suspended )( 
            IAgentCtl __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended);
        
        END_INTERFACE
    } IAgentCtlVtbl;

    interface IAgentCtl
    {
        CONST_VTBL struct IAgentCtlVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtl_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtl_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtl_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtl_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtl_get_Characters(This,Characters)	\
    (This)->lpVtbl -> get_Characters(This,Characters)

#define IAgentCtl_get_AudioOutput(This,AudioOutput)	\
    (This)->lpVtbl -> get_AudioOutput(This,AudioOutput)

#define IAgentCtl_get_SpeechInput(This,SpeechInput)	\
    (This)->lpVtbl -> get_SpeechInput(This,SpeechInput)

#define IAgentCtl_get_PropertySheet(This,PropSheet)	\
    (This)->lpVtbl -> get_PropertySheet(This,PropSheet)

#define IAgentCtl_get_CommandsWindow(This,CommandsWindow)	\
    (This)->lpVtbl -> get_CommandsWindow(This,CommandsWindow)

#define IAgentCtl_get_Connected(This,Connected)	\
    (This)->lpVtbl -> get_Connected(This,Connected)

#define IAgentCtl_put_Connected(This,Connected)	\
    (This)->lpVtbl -> put_Connected(This,Connected)

#define IAgentCtl_get_Suspended(This,Suspended)	\
    (This)->lpVtbl -> get_Suspended(This,Suspended)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_Characters_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters);


void __RPC_STUB IAgentCtl_get_Characters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_AudioOutput_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput);


void __RPC_STUB IAgentCtl_get_AudioOutput_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_SpeechInput_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput);


void __RPC_STUB IAgentCtl_get_SpeechInput_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_PropertySheet_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet);


void __RPC_STUB IAgentCtl_get_PropertySheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_CommandsWindow_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow);


void __RPC_STUB IAgentCtl_get_CommandsWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_Connected_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected);


void __RPC_STUB IAgentCtl_get_Connected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_put_Connected_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL Connected);


void __RPC_STUB IAgentCtl_put_Connected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtl_get_Suspended_Proxy( 
    IAgentCtl __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended);


void __RPC_STUB IAgentCtl_get_Suspended_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtl_INTERFACE_DEFINED__ */


#ifndef __IAgentCtlEx_INTERFACE_DEFINED__
#define __IAgentCtlEx_INTERFACE_DEFINED__

/* interface IAgentCtlEx */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAgentCtlEx;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8563FF20-8ECC-11d1-B9B4-00C04FD97575")
    IAgentCtlEx : public IAgentCtl
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ShowDefaultCharacterProperties( 
            /* [optional][in] */ VARIANT x,
            /* [optional][in] */ VARIANT y) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_RaiseRequestErrors( 
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *RaiseErrors) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_RaiseRequestErrors( 
            /* [in] */ VARIANT_BOOL RaiseErrors) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAgentCtlExVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IAgentCtlEx __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IAgentCtlEx __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Characters )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCharacters __RPC_FAR *__RPC_FAR *Characters);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AudioOutput )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlAudioObjectEx __RPC_FAR *__RPC_FAR *AudioOutput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_SpeechInput )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlSpeechInput __RPC_FAR *__RPC_FAR *SpeechInput);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PropertySheet )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlPropertySheet __RPC_FAR *__RPC_FAR *PropSheet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CommandsWindow )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ IAgentCtlCommandsWindow __RPC_FAR *__RPC_FAR *CommandsWindow);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Connected )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Connected);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Connected )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL Connected);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Suspended )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *Suspended);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShowDefaultCharacterProperties )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [optional][in] */ VARIANT x,
            /* [optional][in] */ VARIANT y);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_RaiseRequestErrors )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *RaiseErrors);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_RaiseRequestErrors )( 
            IAgentCtlEx __RPC_FAR * This,
            /* [in] */ VARIANT_BOOL RaiseErrors);
        
        END_INTERFACE
    } IAgentCtlExVtbl;

    interface IAgentCtlEx
    {
        CONST_VTBL struct IAgentCtlExVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAgentCtlEx_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IAgentCtlEx_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IAgentCtlEx_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IAgentCtlEx_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IAgentCtlEx_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IAgentCtlEx_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IAgentCtlEx_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IAgentCtlEx_get_Characters(This,Characters)	\
    (This)->lpVtbl -> get_Characters(This,Characters)

#define IAgentCtlEx_get_AudioOutput(This,AudioOutput)	\
    (This)->lpVtbl -> get_AudioOutput(This,AudioOutput)

#define IAgentCtlEx_get_SpeechInput(This,SpeechInput)	\
    (This)->lpVtbl -> get_SpeechInput(This,SpeechInput)

#define IAgentCtlEx_get_PropertySheet(This,PropSheet)	\
    (This)->lpVtbl -> get_PropertySheet(This,PropSheet)

#define IAgentCtlEx_get_CommandsWindow(This,CommandsWindow)	\
    (This)->lpVtbl -> get_CommandsWindow(This,CommandsWindow)

#define IAgentCtlEx_get_Connected(This,Connected)	\
    (This)->lpVtbl -> get_Connected(This,Connected)

#define IAgentCtlEx_put_Connected(This,Connected)	\
    (This)->lpVtbl -> put_Connected(This,Connected)

#define IAgentCtlEx_get_Suspended(This,Suspended)	\
    (This)->lpVtbl -> get_Suspended(This,Suspended)


#define IAgentCtlEx_ShowDefaultCharacterProperties(This,x,y)	\
    (This)->lpVtbl -> ShowDefaultCharacterProperties(This,x,y)

#define IAgentCtlEx_get_RaiseRequestErrors(This,RaiseErrors)	\
    (This)->lpVtbl -> get_RaiseRequestErrors(This,RaiseErrors)

#define IAgentCtlEx_put_RaiseRequestErrors(This,RaiseErrors)	\
    (This)->lpVtbl -> put_RaiseRequestErrors(This,RaiseErrors)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IAgentCtlEx_ShowDefaultCharacterProperties_Proxy( 
    IAgentCtlEx __RPC_FAR * This,
    /* [optional][in] */ VARIANT x,
    /* [optional][in] */ VARIANT y);


void __RPC_STUB IAgentCtlEx_ShowDefaultCharacterProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propget][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlEx_get_RaiseRequestErrors_Proxy( 
    IAgentCtlEx __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *RaiseErrors);


void __RPC_STUB IAgentCtlEx_get_RaiseRequestErrors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [propput][id] */ HRESULT STDMETHODCALLTYPE IAgentCtlEx_put_RaiseRequestErrors_Proxy( 
    IAgentCtlEx __RPC_FAR * This,
    /* [in] */ VARIANT_BOOL RaiseErrors);


void __RPC_STUB IAgentCtlEx_put_RaiseRequestErrors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IAgentCtlEx_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_AgentControl_0227 */
/* [local] */ 

#define	CONTROL_MAJOR_VERSION	( 2 )

#define	CONTROL_MINOR_VERSION	( 0 )



extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0227_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_AgentControl_0227_v0_0_s_ifspec;


#ifndef __AgentObjects_LIBRARY_DEFINED__
#define __AgentObjects_LIBRARY_DEFINED__

/* library AgentObjects */
/* [helpstring][version][uuid] */ 





















EXTERN_C const IID LIBID_AgentObjects;

#ifndef ___AgentEvents_DISPINTERFACE_DEFINED__
#define ___AgentEvents_DISPINTERFACE_DEFINED__

/* dispinterface _AgentEvents */
/* [helpstring][uuid] */ 


EXTERN_C const IID DIID__AgentEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("F5BE8BD4-7DE6-11D0-91FE-00C04FD701A5")
    _AgentEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _AgentEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            _AgentEvents __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            _AgentEvents __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            _AgentEvents __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            _AgentEvents __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        END_INTERFACE
    } _AgentEventsVtbl;

    interface _AgentEvents
    {
        CONST_VTBL struct _AgentEventsVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AgentEvents_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define _AgentEvents_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define _AgentEvents_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define _AgentEvents_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define _AgentEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define _AgentEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define _AgentEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___AgentEvents_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_Agent;

#ifdef __cplusplus

class DECLSPEC_UUID("D45FD31B-5C6E-11D1-9EC1-00C04FD7081F")
Agent;
#endif
#endif /* __AgentObjects_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif

#endif // _MSC_VER < 1200
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\ahadmin_i.c ===
/* this ALWAYS GENERATED file contains the IIDs and CLSIDs */

/* link this file in with the server and any clients */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for ahadmin.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


#ifdef __cplusplus
extern "C"{
#endif 


#include <rpc.h>
#include <rpcndr.h>

#ifdef _MIDL_USE_GUIDDEF_

#ifndef INITGUID
#define INITGUID
#include <guiddef.h>
#undef INITGUID
#else
#include <guiddef.h>
#endif

#define MIDL_DEFINE_GUID(type,name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) \
        DEFINE_GUID(name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)

#else // !_MIDL_USE_GUIDDEF_

#ifndef __IID_DEFINED__
#define __IID_DEFINED__

typedef struct _IID
{
    unsigned long x;
    unsigned short s1;
    unsigned short s2;
    unsigned char  c[8];
} IID;

#endif // __IID_DEFINED__

#ifndef CLSID_DEFINED
#define CLSID_DEFINED
typedef IID CLSID;
#endif // CLSID_DEFINED

#define MIDL_DEFINE_GUID(type,name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) \
        const type name = {l,w1,w2,{b1,b2,b3,b4,b5,b6,b7,b8}}

#endif !_MIDL_USE_GUIDDEF_

MIDL_DEFINE_GUID(IID, IID_IAppHostMethodExtension,0x70184ac9,0x7673,0x4770,0x96,0xb1,0x44,0x5c,0xe0,0x35,0xcf,0x70);


MIDL_DEFINE_GUID(IID, IID_IAppHostPropertyExtension,0x88e220f3,0x33e8,0x4534,0xaf,0xac,0xb4,0xa9,0x8e,0xcc,0xf9,0xae);


MIDL_DEFINE_GUID(IID, IID_IAppHostElementExtension,0x518eb37d,0x1ff4,0x42dd,0x86,0xc3,0x31,0x40,0xbc,0x35,0xb8,0x23);


MIDL_DEFINE_GUID(IID, IID_IAppHostMappingExtension,0x31a83ea0,0xc0e4,0x4a2c,0x8a,0x01,0x35,0x3c,0xc2,0xa4,0xc6,0x0a);


MIDL_DEFINE_GUID(IID, IID_IAppHostChildElementCollection,0x08a90f5f,0x0702,0x48d6,0xb4,0x5f,0x02,0xa9,0x88,0x5a,0x97,0x68);


MIDL_DEFINE_GUID(IID, IID_IAppHostPropertyCollection,0x0191775e,0xbcff,0x445a,0xb4,0xf4,0x3b,0xdd,0xa5,0x4e,0x28,0x16);


MIDL_DEFINE_GUID(IID, IID_IAppHostConfigLocationCollection,0x832a32f7,0xb3ea,0x4b8c,0xb2,0x60,0x9a,0x29,0x23,0x00,0x11,0x84);


MIDL_DEFINE_GUID(IID, IID_IAppHostMethodCollection,0xd6c7cd8f,0xbb8d,0x4f96,0xb5,0x91,0xd3,0xa5,0xf1,0x32,0x02,0x69);


MIDL_DEFINE_GUID(IID, IID_IAppHostElementSchemaCollection,0x0344cdda,0x151e,0x4cbf,0x82,0xda,0x66,0xae,0x61,0xe9,0x77,0x54);


MIDL_DEFINE_GUID(IID, IID_IAppHostPropertySchemaCollection,0x8bed2c68,0xa5fb,0x4b28,0x85,0x81,0xa0,0xdc,0x52,0x67,0x41,0x9f);


MIDL_DEFINE_GUID(IID, IID_IAppHostConstantValueCollection,0x5b5a68e6,0x8b9f,0x45e1,0x81,0x99,0xa9,0x5f,0xfc,0xcd,0xff,0xff);


MIDL_DEFINE_GUID(IID, IID_IAppHostConstantValue,0x0716caf8,0x7d05,0x4a46,0x80,0x99,0x77,0x59,0x4b,0xe9,0x13,0x94);


MIDL_DEFINE_GUID(IID, IID_IAppHostPropertySchema,0x450386db,0x7409,0x4667,0x93,0x5e,0x38,0x4d,0xbb,0xee,0x2a,0x9e);


MIDL_DEFINE_GUID(IID, IID_IAppHostCollectionSchema,0xde095db1,0x5368,0x4d11,0x81,0xf6,0xef,0xef,0x61,0x9b,0x7b,0xcf);


MIDL_DEFINE_GUID(IID, IID_IAppHostElementSchema,0xef13d885,0x642c,0x4709,0x99,0xec,0xb8,0x95,0x61,0xc6,0xbc,0x69);


MIDL_DEFINE_GUID(IID, IID_IAppHostMethodSchema,0x2d9915fb,0x9d42,0x4328,0xb7,0x82,0x1b,0x46,0x81,0x9f,0xab,0x9e);


MIDL_DEFINE_GUID(IID, IID_IAppHostMethodInstance,0xb80f3c42,0x60e0,0x4ae0,0x90,0x07,0xf5,0x28,0x52,0xd3,0xdb,0xed);


MIDL_DEFINE_GUID(IID, IID_IAppHostMethod,0x7883ca1c,0x1112,0x4447,0x84,0xc3,0x52,0xfb,0xeb,0x38,0x06,0x9d);


MIDL_DEFINE_GUID(IID, IID_IAppHostConfigException,0x4dfa1df3,0x8900,0x4bc7,0xbb,0xb5,0xd1,0xa4,0x58,0xc5,0x24,0x10);


MIDL_DEFINE_GUID(IID, IID_IAppHostPropertyException,0xeafe4895,0xa929,0x41ea,0xb1,0x4d,0x61,0x3e,0x23,0xf6,0x2b,0x71);


MIDL_DEFINE_GUID(IID, IID_IAppHostElementCollection,0xc8550bff,0x5281,0x4b1e,0xac,0x34,0x99,0xb6,0xfa,0x38,0x46,0x4d);


MIDL_DEFINE_GUID(IID, IID_IAppHostElement,0x64ff8ccc,0xb287,0x4dae,0xb0,0x8a,0xa7,0x2c,0xbf,0x45,0xf4,0x53);


MIDL_DEFINE_GUID(IID, IID_IAppHostProperty,0xed35f7a1,0x5024,0x4e7b,0xa4,0x4d,0x07,0xdd,0xaf,0x4b,0x52,0x4d);


MIDL_DEFINE_GUID(IID, IID_IAppHostConfigLocation,0x370af178,0x7758,0x4dad,0x81,0x46,0x73,0x91,0xf6,0xe1,0x85,0x85);


MIDL_DEFINE_GUID(IID, IID_IAppHostSectionDefinition,0xc5c04795,0x321c,0x4014,0x8f,0xd6,0xd4,0x46,0x58,0x79,0x93,0x93);


MIDL_DEFINE_GUID(IID, IID_IAppHostSectionDefinitionCollection,0xb7d381ee,0x8860,0x47a1,0x8a,0xf4,0x1f,0x33,0xb2,0xb1,0xf3,0x25);


MIDL_DEFINE_GUID(IID, IID_IAppHostSectionGroup,0x0dd8a158,0xebe6,0x4008,0xa1,0xd9,0xb7,0xec,0xc8,0xf1,0x10,0x4b);


MIDL_DEFINE_GUID(IID, IID_IAppHostConfigFile,0xada4e6fb,0xe025,0x401e,0xa5,0xd0,0xc3,0x13,0x4a,0x28,0x1f,0x07);


MIDL_DEFINE_GUID(IID, IID_IAppHostPathMapper,0xe7927575,0x5cc3,0x403b,0x82,0x2e,0x32,0x8a,0x6b,0x90,0x4b,0xee);


MIDL_DEFINE_GUID(IID, IID_IAppHostPathMapper2,0x0f80e901,0x8f4c,0x449a,0xbf,0x90,0x13,0xd5,0xd0,0x82,0xf1,0x87);


MIDL_DEFINE_GUID(IID, IID_IAppHostChangeHandler,0x09829352,0x87c2,0x418d,0x8d,0x79,0x41,0x33,0x96,0x9a,0x48,0x9d);


MIDL_DEFINE_GUID(IID, IID_IAppHostAdminManager,0x9be77978,0x73ed,0x4a9a,0x87,0xfd,0x13,0xf0,0x9f,0xec,0x1b,0x13);


MIDL_DEFINE_GUID(IID, IID_IAppHostWritableAdminManager,0xfa7660f6,0x7b3f,0x4237,0xa8,0xbf,0xed,0x0a,0xd0,0xdc,0xbb,0xd9);


MIDL_DEFINE_GUID(IID, IID_IAppHostConfigManager,0x8f6d760f,0xf0cb,0x4d69,0xb5,0xf6,0x84,0x8b,0x33,0xe9,0xbd,0xc6);


MIDL_DEFINE_GUID(IID, LIBID_AppHostAdminLibrary,0x598f9c7d,0xd2d7,0x4980,0xb2,0x34,0xf1,0xe7,0x53,0xcd,0x9f,0xd9);


MIDL_DEFINE_GUID(CLSID, CLSID_AppHostAdminManager,0x228fb8f7,0xfb53,0x4fd5,0x8c,0x7b,0xff,0x59,0xde,0x60,0x6c,0x5b);


MIDL_DEFINE_GUID(CLSID, CLSID_AppHostWritableAdminManager,0x2b72133b,0x3f5b,0x4602,0x89,0x52,0x80,0x35,0x46,0xce,0x33,0x44);

#undef MIDL_DEFINE_GUID

#ifdef __cplusplus
}
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\amaudio.h ===
//------------------------------------------------------------------------------
// File: AMAudio.h
//
// Desc: Audio related definitions and interfaces for ActiveMovie.
//
// Copyright (c) 1992 - 2001, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#ifndef __AMAUDIO__
#define __AMAUDIO__

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

#include <mmsystem.h>
#include <dsound.h>

// This is the interface the audio renderer supports to give the application
// access to the direct sound object and buffers it is using, to allow the
// application to use things like the 3D features of Direct Sound for the
// soundtrack of a movie being played with Active Movie

// be nice to our friends in C
#undef INTERFACE
#define INTERFACE IAMDirectSound

DECLARE_INTERFACE_(IAMDirectSound,IUnknown)
{
    /* IUnknown methods */

    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef)(THIS) PURE;
    STDMETHOD_(ULONG,Release)(THIS) PURE;

    /* IAMDirectSound methods */

    STDMETHOD(GetDirectSoundInterface)(THIS_ LPDIRECTSOUND *lplpds) PURE;
    STDMETHOD(GetPrimaryBufferInterface)(THIS_ LPDIRECTSOUNDBUFFER *lplpdsb) PURE;
    STDMETHOD(GetSecondaryBufferInterface)(THIS_ LPDIRECTSOUNDBUFFER *lplpdsb) PURE;
    STDMETHOD(ReleaseDirectSoundInterface)(THIS_ LPDIRECTSOUND lpds) PURE;
    STDMETHOD(ReleasePrimaryBufferInterface)(THIS_ LPDIRECTSOUNDBUFFER lpdsb) PURE;
    STDMETHOD(ReleaseSecondaryBufferInterface)(THIS_ LPDIRECTSOUNDBUFFER lpdsb) PURE;
    STDMETHOD(SetFocusWindow)(THIS_ HWND, BOOL) PURE ;
    STDMETHOD(GetFocusWindow)(THIS_ HWND *, BOOL*) PURE ;
};

//  Validate WAVEFORMATEX block of length cb
__inline HRESULT AMValidateAndFixWaveFormatEx(__inout_bcount(cb) WAVEFORMATEX *pwfx, DWORD cb)
{
    if (cb < sizeof(PCMWAVEFORMAT)) {
        return E_INVALIDARG;
    }
    if (pwfx->wFormatTag != WAVE_FORMAT_PCM) {
        if (cb < sizeof(WAVEFORMATEX)) {
            return E_INVALIDARG;
        }
        if (cb < sizeof(WAVEFORMATEX) + pwfx->cbSize ) {
            pwfx->cbSize = 0;
        }
    }

    // Sanity check
    if (pwfx->nAvgBytesPerSec > 10000000 || pwfx->nAvgBytesPerSec == 0) {
        pwfx->nAvgBytesPerSec = 176400;
    }

    if (pwfx->nChannels > 32) {
        pwfx->nChannels = 1;
    }

    return S_OK;
}

#ifdef __cplusplus
}
#endif // __cplusplus
#endif // __AMAUDIO__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\amparse.h ===
//------------------------------------------------------------------------------
// File: AMParse.h
//
// Desc: Interface to the parser to get current time.  This is useful for
//       multifile playback.
//
// Copyright (c) 1996 - 2001, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#ifndef __AMPARSE__
#define __AMPARSE__

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus


DEFINE_GUID(IID_IAMParse,
0xc47a3420, 0x005c, 0x11d2, 0x90, 0x38, 0x00, 0xa0, 0xc9, 0x69, 0x72, 0x98);

//
//  Parser interface - supported by MPEG-2 splitter filter
//
DECLARE_INTERFACE_(IAMParse, IUnknown) {
    STDMETHOD(GetParseTime) (THIS_
                             __out REFERENCE_TIME *prtCurrent
                            ) PURE;
    STDMETHOD(SetParseTime) (THIS_
                             REFERENCE_TIME rtCurrent
                            ) PURE;
    STDMETHOD(Flush) (THIS) PURE;
};

#ifdef __cplusplus
}
#endif // __cplusplus
#endif // __AMPARSE__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\amva.h ===
//------------------------------------------------------------------------------
// File: AMVA.h
//
// Desc: DirectShowMotionComp include file.
//
// Copyright (c) 1997 - 2001, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#ifndef __AMVA_INCLUDED__
#define __AMVA_INCLUDED__

#ifdef __cplusplus
extern "C" {
#endif


#define AMVA_TYPEINDEX_OUTPUTFRAME 0xFFFFFFFF

//  Flags for QueryRenderStatus
#define AMVA_QUERYRENDERSTATUSF_READ     0x00000001  // Query for read
                                                     // set this bit to 0
                                                     // if query for update

typedef struct _tag_AMVAUncompBufferInfo
{
 DWORD                   dwMinNumSurfaces;           // IN   min number of surfaces to be allocated
 DWORD                   dwMaxNumSurfaces;           // IN   max number of surfaces to be allocated
 DDPIXELFORMAT           ddUncompPixelFormat;        // IN   pixel format of surfaces to be allocated
} AMVAUncompBufferInfo, *LPAMVAUncompBufferInfo;

typedef struct _tag_AMVAUncompDataInfo
{
    DWORD                   dwUncompWidth;              // [in]     width of uncompressed data
    DWORD                   dwUncompHeight;             // [in]     height of uncompressed data
    DDPIXELFORMAT           ddUncompPixelFormat;        // [in]     pixel-format of uncompressed data
} AMVAUncompDataInfo, *LPAMVAUncompDataInfo;

typedef struct _tag_AMVAInternalMemInfo
{
    DWORD                   dwScratchMemAlloc;          // [out]    amount of scratch memory will the hal allocate for its private use
} AMVAInternalMemInfo, *LPAMVAInternalMemInfo;


typedef struct _tag_AMVACompBufferInfo
{
    DWORD                   dwNumCompBuffers;           // [out]    number of buffers reqd for compressed data
    DWORD                   dwWidthToCreate;            // [out]    Width of surface to create
    DWORD                   dwHeightToCreate;           // [out]    Height of surface to create
    DWORD                   dwBytesToAllocate;          // [out]    Total number of bytes used by each surface
    DDSCAPS2                ddCompCaps;                 // [out]    caps to create surfaces to store compressed data
    DDPIXELFORMAT           ddPixelFormat;              // [out]    fourcc to create surfaces to store compressed data
} AMVACompBufferInfo, *LPAMVACompBufferInfo;


// Note that you are NOT allowed to store any pointer in pMiscData
typedef struct _tag_AMVABeginFrameInfo
{
    DWORD                dwDestSurfaceIndex;         // IN  destination buffer in which to decoding this frame
    LPVOID               pInputData;                 // IN  pointer to misc data
    DWORD                dwSizeInputData;            // IN  size of other misc data to begin frame
    LPVOID               pOutputData;                // OUT pointer to data which the VGA is going to fill
    DWORD                dwSizeOutputData;           // IN  size of data which the VGA is going to fill
} AMVABeginFrameInfo, *LPAMVABeginFrameInfo;

// Note that you are NOT allowed to store any pointer in pMiscData
typedef struct _tag_AMVAEndFrameInfo
{
    DWORD                   dwSizeMiscData;             // [in]     size of other misc data to begin frame
    LPVOID                  pMiscData;                  // [in]     pointer to misc data
} AMVAEndFrameInfo, *LPAMVAEndFrameInfo;

typedef struct _tag_AMVABUFFERINFO
{
    DWORD                   dwTypeIndex;                // [in]    Type of buffer
    DWORD                   dwBufferIndex;              // [in]    Buffer index
    DWORD                   dwDataOffset;               // [in]    offset of relevant data from the beginning of buffer
    DWORD                   dwDataSize;                 // [in]    size of relevant data
} AMVABUFFERINFO, *LPAMVABUFFERINFO;

#ifdef __cplusplus
};
#endif

#endif // _AMVA_INCLUDED
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\amxmlgraphbuilder.h ===
// Copyright (c) Microsoft Corporation.  All Rights Reserved.

// {1BB05960-5FBF-11d2-A521-44DF07C10000}
DEFINE_GUID(IID_IXMLGraphBuilder, 
0x1bb05960, 0x5fbf, 0x11d2, 0xa5, 0x21, 0x44, 0xdf, 0x7, 0xc1, 0x0, 0x0);

interface IXMLGraphBuilder : IUnknown
{
    STDMETHOD(BuildFromXML) (IGraphBuilder *pGraph, IXMLElement *pxml) = 0;
    STDMETHOD(SaveToXML) (IGraphBuilder *pGraph, BSTR *pbstrxml) = 0;
    STDMETHOD(BuildFromXMLFile) (IGraphBuilder *pGraph, LPCWSTR wszFileName, LPCWSTR wszBaseURL) = 0;
};

// CLSID_XMLGraphBuilder
// {1BB05961-5FBF-11d2-A521-44DF07C10000}
DEFINE_GUID(CLSID_XMLGraphBuilder, 
0x1bb05961, 0x5fbf, 0x11d2, 0xa5, 0x21, 0x44, 0xdf, 0x7, 0xc1, 0x0, 0x0);
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\appcompatapi.h ===
/*************************************************************************************
*                                                                                    *
* AppCompat.h -- Appcompat procedure declarations, constant definitions and macros   *
*                                                                                    *
* Copyright (c) Microsoft Corporation. All rights reserved.                          *
*                                                                                    *
**************************************************************************************/


#ifndef __APPCOMPAT_H_
#define __APPCOMPAT_H_

#ifdef __cplusplus
extern "C" {
#endif

#ifndef SDBAPI
#define SDBAPI STDAPICALLTYPE
#endif

BOOL
SDBAPI
ApphelpCheckShellObject(
    __in  REFCLSID    ObjectCLSID,
    __in  BOOL        bShimIfNecessary,
    __out ULONGLONG*  pullFlags
    );


#ifdef __cplusplus
}
#endif

#endif // __APPCOMPAT_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\amstream.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for amstream.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __amstream_h__
#define __amstream_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IAMMultiMediaStream_FWD_DEFINED__
#define __IAMMultiMediaStream_FWD_DEFINED__
typedef interface IAMMultiMediaStream IAMMultiMediaStream;
#endif 	/* __IAMMultiMediaStream_FWD_DEFINED__ */


#ifndef __IAMMediaStream_FWD_DEFINED__
#define __IAMMediaStream_FWD_DEFINED__
typedef interface IAMMediaStream IAMMediaStream;
#endif 	/* __IAMMediaStream_FWD_DEFINED__ */


#ifndef __IMediaStreamFilter_FWD_DEFINED__
#define __IMediaStreamFilter_FWD_DEFINED__
typedef interface IMediaStreamFilter IMediaStreamFilter;
#endif 	/* __IMediaStreamFilter_FWD_DEFINED__ */


#ifndef __IDirectDrawMediaSampleAllocator_FWD_DEFINED__
#define __IDirectDrawMediaSampleAllocator_FWD_DEFINED__
typedef interface IDirectDrawMediaSampleAllocator IDirectDrawMediaSampleAllocator;
#endif 	/* __IDirectDrawMediaSampleAllocator_FWD_DEFINED__ */


#ifndef __IDirectDrawMediaSample_FWD_DEFINED__
#define __IDirectDrawMediaSample_FWD_DEFINED__
typedef interface IDirectDrawMediaSample IDirectDrawMediaSample;
#endif 	/* __IDirectDrawMediaSample_FWD_DEFINED__ */


#ifndef __IAMMediaTypeStream_FWD_DEFINED__
#define __IAMMediaTypeStream_FWD_DEFINED__
typedef interface IAMMediaTypeStream IAMMediaTypeStream;
#endif 	/* __IAMMediaTypeStream_FWD_DEFINED__ */


#ifndef __IAMMediaTypeSample_FWD_DEFINED__
#define __IAMMediaTypeSample_FWD_DEFINED__
typedef interface IAMMediaTypeSample IAMMediaTypeSample;
#endif 	/* __IAMMediaTypeSample_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"
#include "mmstream.h"
#include "strmif.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_amstream_0000_0000 */
/* [local] */ 

#include <ddraw.h>
#include <mmsystem.h>
#include <mmstream.h>
#include <ddstream.h>
#include <austream.h>








enum __MIDL___MIDL_itf_amstream_0000_0000_0001
    {	AMMSF_NOGRAPHTHREAD	= 0x1
    } ;

enum __MIDL___MIDL_itf_amstream_0000_0000_0002
    {	AMMSF_ADDDEFAULTRENDERER	= 0x1,
	AMMSF_CREATEPEER	= 0x2,
	AMMSF_STOPIFNOSAMPLES	= 0x4,
	AMMSF_NOSTALL	= 0x8
    } ;

enum __MIDL___MIDL_itf_amstream_0000_0000_0003
    {	AMMSF_RENDERTYPEMASK	= 0x3,
	AMMSF_RENDERTOEXISTING	= 0,
	AMMSF_RENDERALLSTREAMS	= 0x1,
	AMMSF_NORENDER	= 0x2,
	AMMSF_NOCLOCK	= 0x4,
	AMMSF_RUN	= 0x8
    } ;
typedef /* [public][v1_enum] */ 
enum __MIDL___MIDL_itf_amstream_0000_0000_0004
    {	Disabled	= 0,
	ReadData	= 1,
	RenderData	= 2
    } 	OUTPUT_STATE;



extern RPC_IF_HANDLE __MIDL_itf_amstream_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_amstream_0000_0000_v0_0_s_ifspec;

#ifndef __IAMMultiMediaStream_INTERFACE_DEFINED__
#define __IAMMultiMediaStream_INTERFACE_DEFINED__

/* interface IAMMultiMediaStream */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IAMMultiMediaStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BEBE595C-9A6F-11d0-8FDE-00C04FD9189D")
    IAMMultiMediaStream : public IMultiMediaStream
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ STREAM_TYPE StreamType,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IGraphBuilder *pFilterGraph) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFilterGraph( 
            /* [out] */ __RPC__deref_out_opt IGraphBuilder **ppGraphBuilder) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFilter( 
            /* [out] */ __RPC__deref_out_opt IMediaStreamFilter **ppFilter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddMediaStream( 
            /* [in] */ __RPC__in_opt IUnknown *pStreamObject,
            /* [in] */ __RPC__in const MSPID *PurposeId,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IMediaStream **ppNewStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenFile( 
            /* [in] */ __RPC__in LPCWSTR pszFileName,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenMoniker( 
            /* [in] */ __RPC__in_opt IBindCtx *pCtx,
            /* [in] */ __RPC__in_opt IMoniker *pMoniker,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Render( 
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAMMultiMediaStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAMMultiMediaStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAMMultiMediaStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetInformation )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [out] */ __RPC__out DWORD *pdwFlags,
            /* [out] */ __RPC__out STREAM_TYPE *pStreamType);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaStream )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [in] */ __RPC__in REFMSPID idPurpose,
            /* [out] */ __RPC__deref_out_opt IMediaStream **ppMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *EnumMediaStreams )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [in] */ long Index,
            /* [out] */ __RPC__deref_out_opt IMediaStream **ppMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [out] */ __RPC__out STREAM_STATE *pCurrentState);
        
        HRESULT ( STDMETHODCALLTYPE *SetState )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [in] */ STREAM_STATE NewState);
        
        HRESULT ( STDMETHODCALLTYPE *GetTime )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [out] */ __RPC__out STREAM_TIME *pCurrentTime);
        
        HRESULT ( STDMETHODCALLTYPE *GetDuration )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [out] */ __RPC__out STREAM_TIME *pDuration);
        
        HRESULT ( STDMETHODCALLTYPE *Seek )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [in] */ STREAM_TIME SeekTime);
        
        HRESULT ( STDMETHODCALLTYPE *GetEndOfStreamEventHandle )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [out] */ __RPC__deref_out_opt HANDLE *phEOS);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [in] */ STREAM_TYPE StreamType,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in_opt IGraphBuilder *pFilterGraph);
        
        HRESULT ( STDMETHODCALLTYPE *GetFilterGraph )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [out] */ __RPC__deref_out_opt IGraphBuilder **ppGraphBuilder);
        
        HRESULT ( STDMETHODCALLTYPE *GetFilter )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [out] */ __RPC__deref_out_opt IMediaStreamFilter **ppFilter);
        
        HRESULT ( STDMETHODCALLTYPE *AddMediaStream )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [in] */ __RPC__in_opt IUnknown *pStreamObject,
            /* [in] */ __RPC__in const MSPID *PurposeId,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IMediaStream **ppNewStream);
        
        HRESULT ( STDMETHODCALLTYPE *OpenFile )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [in] */ __RPC__in LPCWSTR pszFileName,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *OpenMoniker )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [in] */ __RPC__in_opt IBindCtx *pCtx,
            /* [in] */ __RPC__in_opt IMoniker *pMoniker,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *Render )( 
            __RPC__in IAMMultiMediaStream * This,
            /* [in] */ DWORD dwFlags);
        
        END_INTERFACE
    } IAMMultiMediaStreamVtbl;

    interface IAMMultiMediaStream
    {
        CONST_VTBL struct IAMMultiMediaStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAMMultiMediaStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAMMultiMediaStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAMMultiMediaStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAMMultiMediaStream_GetInformation(This,pdwFlags,pStreamType)	\
    ( (This)->lpVtbl -> GetInformation(This,pdwFlags,pStreamType) ) 

#define IAMMultiMediaStream_GetMediaStream(This,idPurpose,ppMediaStream)	\
    ( (This)->lpVtbl -> GetMediaStream(This,idPurpose,ppMediaStream) ) 

#define IAMMultiMediaStream_EnumMediaStreams(This,Index,ppMediaStream)	\
    ( (This)->lpVtbl -> EnumMediaStreams(This,Index,ppMediaStream) ) 

#define IAMMultiMediaStream_GetState(This,pCurrentState)	\
    ( (This)->lpVtbl -> GetState(This,pCurrentState) ) 

#define IAMMultiMediaStream_SetState(This,NewState)	\
    ( (This)->lpVtbl -> SetState(This,NewState) ) 

#define IAMMultiMediaStream_GetTime(This,pCurrentTime)	\
    ( (This)->lpVtbl -> GetTime(This,pCurrentTime) ) 

#define IAMMultiMediaStream_GetDuration(This,pDuration)	\
    ( (This)->lpVtbl -> GetDuration(This,pDuration) ) 

#define IAMMultiMediaStream_Seek(This,SeekTime)	\
    ( (This)->lpVtbl -> Seek(This,SeekTime) ) 

#define IAMMultiMediaStream_GetEndOfStreamEventHandle(This,phEOS)	\
    ( (This)->lpVtbl -> GetEndOfStreamEventHandle(This,phEOS) ) 


#define IAMMultiMediaStream_Initialize(This,StreamType,dwFlags,pFilterGraph)	\
    ( (This)->lpVtbl -> Initialize(This,StreamType,dwFlags,pFilterGraph) ) 

#define IAMMultiMediaStream_GetFilterGraph(This,ppGraphBuilder)	\
    ( (This)->lpVtbl -> GetFilterGraph(This,ppGraphBuilder) ) 

#define IAMMultiMediaStream_GetFilter(This,ppFilter)	\
    ( (This)->lpVtbl -> GetFilter(This,ppFilter) ) 

#define IAMMultiMediaStream_AddMediaStream(This,pStreamObject,PurposeId,dwFlags,ppNewStream)	\
    ( (This)->lpVtbl -> AddMediaStream(This,pStreamObject,PurposeId,dwFlags,ppNewStream) ) 

#define IAMMultiMediaStream_OpenFile(This,pszFileName,dwFlags)	\
    ( (This)->lpVtbl -> OpenFile(This,pszFileName,dwFlags) ) 

#define IAMMultiMediaStream_OpenMoniker(This,pCtx,pMoniker,dwFlags)	\
    ( (This)->lpVtbl -> OpenMoniker(This,pCtx,pMoniker,dwFlags) ) 

#define IAMMultiMediaStream_Render(This,dwFlags)	\
    ( (This)->lpVtbl -> Render(This,dwFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAMMultiMediaStream_INTERFACE_DEFINED__ */


#ifndef __IAMMediaStream_INTERFACE_DEFINED__
#define __IAMMediaStream_INTERFACE_DEFINED__

/* interface IAMMediaStream */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IAMMediaStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BEBE595D-9A6F-11d0-8FDE-00C04FD9189D")
    IAMMediaStream : public IMediaStream
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt IUnknown *pSourceObject,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in REFMSPID PurposeId,
            /* [in] */ const STREAM_TYPE StreamType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetState( 
            /* [in] */ FILTER_STATE State) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE JoinAMMultiMediaStream( 
            /* [in] */ __RPC__in_opt IAMMultiMediaStream *pAMMultiMediaStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE JoinFilter( 
            /* [in] */ __RPC__in_opt IMediaStreamFilter *pMediaStreamFilter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE JoinFilterGraph( 
            /* [in] */ __RPC__in_opt IFilterGraph *pFilterGraph) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAMMediaStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAMMediaStream * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAMMediaStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAMMediaStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMultiMediaStream )( 
            __RPC__in IAMMediaStream * This,
            /* [out] */ __RPC__deref_out_opt IMultiMediaStream **ppMultiMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetInformation )( 
            __RPC__in IAMMediaStream * This,
            /* [out] */ __RPC__out MSPID *pPurposeId,
            /* [out] */ __RPC__out STREAM_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *SetSameFormat )( 
            __RPC__in IAMMediaStream * This,
            /* [in] */ __RPC__in_opt IMediaStream *pStreamThatHasDesiredFormat,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *AllocateSample )( 
            __RPC__in IAMMediaStream * This,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IStreamSample **ppSample);
        
        HRESULT ( STDMETHODCALLTYPE *CreateSharedSample )( 
            __RPC__in IAMMediaStream * This,
            /* [in] */ __RPC__in_opt IStreamSample *pExistingSample,
            /* [in] */ DWORD dwFlags,
            /* [out] */ __RPC__deref_out_opt IStreamSample **ppNewSample);
        
        HRESULT ( STDMETHODCALLTYPE *SendEndOfStream )( 
            __RPC__in IAMMediaStream * This,
            DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IAMMediaStream * This,
            /* [in] */ __RPC__in_opt IUnknown *pSourceObject,
            /* [in] */ DWORD dwFlags,
            /* [in] */ __RPC__in REFMSPID PurposeId,
            /* [in] */ const STREAM_TYPE StreamType);
        
        HRESULT ( STDMETHODCALLTYPE *SetState )( 
            __RPC__in IAMMediaStream * This,
            /* [in] */ FILTER_STATE State);
        
        HRESULT ( STDMETHODCALLTYPE *JoinAMMultiMediaStream )( 
            __RPC__in IAMMediaStream * This,
            /* [in] */ __RPC__in_opt IAMMultiMediaStream *pAMMultiMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *JoinFilter )( 
            __RPC__in IAMMediaStream * This,
            /* [in] */ __RPC__in_opt IMediaStreamFilter *pMediaStreamFilter);
        
        HRESULT ( STDMETHODCALLTYPE *JoinFilterGraph )( 
            __RPC__in IAMMediaStream * This,
            /* [in] */ __RPC__in_opt IFilterGraph *pFilterGraph);
        
        END_INTERFACE
    } IAMMediaStreamVtbl;

    interface IAMMediaStream
    {
        CONST_VTBL struct IAMMediaStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAMMediaStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAMMediaStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAMMediaStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAMMediaStream_GetMultiMediaStream(This,ppMultiMediaStream)	\
    ( (This)->lpVtbl -> GetMultiMediaStream(This,ppMultiMediaStream) ) 

#define IAMMediaStream_GetInformation(This,pPurposeId,pType)	\
    ( (This)->lpVtbl -> GetInformation(This,pPurposeId,pType) ) 

#define IAMMediaStream_SetSameFormat(This,pStreamThatHasDesiredFormat,dwFlags)	\
    ( (This)->lpVtbl -> SetSameFormat(This,pStreamThatHasDesiredFormat,dwFlags) ) 

#define IAMMediaStream_AllocateSample(This,dwFlags,ppSample)	\
    ( (This)->lpVtbl -> AllocateSample(This,dwFlags,ppSample) ) 

#define IAMMediaStream_CreateSharedSample(This,pExistingSample,dwFlags,ppNewSample)	\
    ( (This)->lpVtbl -> CreateSharedSample(This,pExistingSample,dwFlags,ppNewSample) ) 

#define IAMMediaStream_SendEndOfStream(This,dwFlags)	\
    ( (This)->lpVtbl -> SendEndOfStream(This,dwFlags) ) 


#define IAMMediaStream_Initialize(This,pSourceObject,dwFlags,PurposeId,StreamType)	\
    ( (This)->lpVtbl -> Initialize(This,pSourceObject,dwFlags,PurposeId,StreamType) ) 

#define IAMMediaStream_SetState(This,State)	\
    ( (This)->lpVtbl -> SetState(This,State) ) 

#define IAMMediaStream_JoinAMMultiMediaStream(This,pAMMultiMediaStream)	\
    ( (This)->lpVtbl -> JoinAMMultiMediaStream(This,pAMMultiMediaStream) ) 

#define IAMMediaStream_JoinFilter(This,pMediaStreamFilter)	\
    ( (This)->lpVtbl -> JoinFilter(This,pMediaStreamFilter) ) 

#define IAMMediaStream_JoinFilterGraph(This,pFilterGraph)	\
    ( (This)->lpVtbl -> JoinFilterGraph(This,pFilterGraph) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAMMediaStream_INTERFACE_DEFINED__ */


#ifndef __IMediaStreamFilter_INTERFACE_DEFINED__
#define __IMediaStreamFilter_INTERFACE_DEFINED__

/* interface IMediaStreamFilter */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IMediaStreamFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BEBE595E-9A6F-11d0-8FDE-00C04FD9189D")
    IMediaStreamFilter : public IBaseFilter
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddMediaStream( 
            /* [in] */ IAMMediaStream *pAMMediaStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMediaStream( 
            /* [in] */ REFMSPID idPurpose,
            /* [out] */ IMediaStream **ppMediaStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumMediaStreams( 
            /* [in] */ long Index,
            /* [out] */ IMediaStream **ppMediaStream) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SupportSeeking( 
            /* [in] */ BOOL bRenderer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReferenceTimeToStreamTime( 
            /* [out][in] */ REFERENCE_TIME *pTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentStreamTime( 
            /* [out] */ REFERENCE_TIME *pCurrentStreamTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE WaitUntil( 
            /* [in] */ REFERENCE_TIME WaitStreamTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Flush( 
            /* [in] */ BOOL bCancelEOS) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndOfStream( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IMediaStreamFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMediaStreamFilter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMediaStreamFilter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMediaStreamFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassID )( 
            IMediaStreamFilter * This,
            /* [out] */ CLSID *pClassID);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IMediaStreamFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *Pause )( 
            IMediaStreamFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *Run )( 
            IMediaStreamFilter * This,
            REFERENCE_TIME tStart);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IMediaStreamFilter * This,
            /* [in] */ DWORD dwMilliSecsTimeout,
            /* [annotation][out] */ 
            __out  FILTER_STATE *State);
        
        HRESULT ( STDMETHODCALLTYPE *SetSyncSource )( 
            IMediaStreamFilter * This,
            /* [annotation][in] */ 
            __in_opt  IReferenceClock *pClock);
        
        HRESULT ( STDMETHODCALLTYPE *GetSyncSource )( 
            IMediaStreamFilter * This,
            /* [annotation][out] */ 
            __deref_out_opt  IReferenceClock **pClock);
        
        HRESULT ( STDMETHODCALLTYPE *EnumPins )( 
            IMediaStreamFilter * This,
            /* [annotation][out] */ 
            __out  IEnumPins **ppEnum);
        
        HRESULT ( STDMETHODCALLTYPE *FindPin )( 
            IMediaStreamFilter * This,
            /* [string][in] */ LPCWSTR Id,
            /* [annotation][out] */ 
            __out  IPin **ppPin);
        
        HRESULT ( STDMETHODCALLTYPE *QueryFilterInfo )( 
            IMediaStreamFilter * This,
            /* [annotation][out] */ 
            __out  FILTER_INFO *pInfo);
        
        HRESULT ( STDMETHODCALLTYPE *JoinFilterGraph )( 
            IMediaStreamFilter * This,
            /* [annotation][in] */ 
            __in_opt  IFilterGraph *pGraph,
            /* [annotation][string][in] */ 
            __in_opt  LPCWSTR pName);
        
        HRESULT ( STDMETHODCALLTYPE *QueryVendorInfo )( 
            IMediaStreamFilter * This,
            /* [annotation][string][out] */ 
            __out  LPWSTR *pVendorInfo);
        
        HRESULT ( STDMETHODCALLTYPE *AddMediaStream )( 
            IMediaStreamFilter * This,
            /* [in] */ IAMMediaStream *pAMMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaStream )( 
            IMediaStreamFilter * This,
            /* [in] */ REFMSPID idPurpose,
            /* [out] */ IMediaStream **ppMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *EnumMediaStreams )( 
            IMediaStreamFilter * This,
            /* [in] */ long Index,
            /* [out] */ IMediaStream **ppMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *SupportSeeking )( 
            IMediaStreamFilter * This,
            /* [in] */ BOOL bRenderer);
        
        HRESULT ( STDMETHODCALLTYPE *ReferenceTimeToStreamTime )( 
            IMediaStreamFilter * This,
            /* [out][in] */ REFERENCE_TIME *pTime);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentStreamTime )( 
            IMediaStreamFilter * This,
            /* [out] */ REFERENCE_TIME *pCurrentStreamTime);
        
        HRESULT ( STDMETHODCALLTYPE *WaitUntil )( 
            IMediaStreamFilter * This,
            /* [in] */ REFERENCE_TIME WaitStreamTime);
        
        HRESULT ( STDMETHODCALLTYPE *Flush )( 
            IMediaStreamFilter * This,
            /* [in] */ BOOL bCancelEOS);
        
        HRESULT ( STDMETHODCALLTYPE *EndOfStream )( 
            IMediaStreamFilter * This);
        
        END_INTERFACE
    } IMediaStreamFilterVtbl;

    interface IMediaStreamFilter
    {
        CONST_VTBL struct IMediaStreamFilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMediaStreamFilter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMediaStreamFilter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMediaStreamFilter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMediaStreamFilter_GetClassID(This,pClassID)	\
    ( (This)->lpVtbl -> GetClassID(This,pClassID) ) 


#define IMediaStreamFilter_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IMediaStreamFilter_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define IMediaStreamFilter_Run(This,tStart)	\
    ( (This)->lpVtbl -> Run(This,tStart) ) 

#define IMediaStreamFilter_GetState(This,dwMilliSecsTimeout,State)	\
    ( (This)->lpVtbl -> GetState(This,dwMilliSecsTimeout,State) ) 

#define IMediaStreamFilter_SetSyncSource(This,pClock)	\
    ( (This)->lpVtbl -> SetSyncSource(This,pClock) ) 

#define IMediaStreamFilter_GetSyncSource(This,pClock)	\
    ( (This)->lpVtbl -> GetSyncSource(This,pClock) ) 


#define IMediaStreamFilter_EnumPins(This,ppEnum)	\
    ( (This)->lpVtbl -> EnumPins(This,ppEnum) ) 

#define IMediaStreamFilter_FindPin(This,Id,ppPin)	\
    ( (This)->lpVtbl -> FindPin(This,Id,ppPin) ) 

#define IMediaStreamFilter_QueryFilterInfo(This,pInfo)	\
    ( (This)->lpVtbl -> QueryFilterInfo(This,pInfo) ) 

#define IMediaStreamFilter_JoinFilterGraph(This,pGraph,pName)	\
    ( (This)->lpVtbl -> JoinFilterGraph(This,pGraph,pName) ) 

#define IMediaStreamFilter_QueryVendorInfo(This,pVendorInfo)	\
    ( (This)->lpVtbl -> QueryVendorInfo(This,pVendorInfo) ) 


#define IMediaStreamFilter_AddMediaStream(This,pAMMediaStream)	\
    ( (This)->lpVtbl -> AddMediaStream(This,pAMMediaStream) ) 

#define IMediaStreamFilter_GetMediaStream(This,idPurpose,ppMediaStream)	\
    ( (This)->lpVtbl -> GetMediaStream(This,idPurpose,ppMediaStream) ) 

#define IMediaStreamFilter_EnumMediaStreams(This,Index,ppMediaStream)	\
    ( (This)->lpVtbl -> EnumMediaStreams(This,Index,ppMediaStream) ) 

#define IMediaStreamFilter_SupportSeeking(This,bRenderer)	\
    ( (This)->lpVtbl -> SupportSeeking(This,bRenderer) ) 

#define IMediaStreamFilter_ReferenceTimeToStreamTime(This,pTime)	\
    ( (This)->lpVtbl -> ReferenceTimeToStreamTime(This,pTime) ) 

#define IMediaStreamFilter_GetCurrentStreamTime(This,pCurrentStreamTime)	\
    ( (This)->lpVtbl -> GetCurrentStreamTime(This,pCurrentStreamTime) ) 

#define IMediaStreamFilter_WaitUntil(This,WaitStreamTime)	\
    ( (This)->lpVtbl -> WaitUntil(This,WaitStreamTime) ) 

#define IMediaStreamFilter_Flush(This,bCancelEOS)	\
    ( (This)->lpVtbl -> Flush(This,bCancelEOS) ) 

#define IMediaStreamFilter_EndOfStream(This)	\
    ( (This)->lpVtbl -> EndOfStream(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMediaStreamFilter_INTERFACE_DEFINED__ */


#ifndef __IDirectDrawMediaSampleAllocator_INTERFACE_DEFINED__
#define __IDirectDrawMediaSampleAllocator_INTERFACE_DEFINED__

/* interface IDirectDrawMediaSampleAllocator */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IDirectDrawMediaSampleAllocator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AB6B4AFC-F6E4-11d0-900D-00C04FD9189D")
    IDirectDrawMediaSampleAllocator : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDirectDraw( 
            IDirectDraw **ppDirectDraw) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDirectDrawMediaSampleAllocatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDirectDrawMediaSampleAllocator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDirectDrawMediaSampleAllocator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDirectDrawMediaSampleAllocator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetDirectDraw )( 
            IDirectDrawMediaSampleAllocator * This,
            IDirectDraw **ppDirectDraw);
        
        END_INTERFACE
    } IDirectDrawMediaSampleAllocatorVtbl;

    interface IDirectDrawMediaSampleAllocator
    {
        CONST_VTBL struct IDirectDrawMediaSampleAllocatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDirectDrawMediaSampleAllocator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDirectDrawMediaSampleAllocator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDirectDrawMediaSampleAllocator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDirectDrawMediaSampleAllocator_GetDirectDraw(This,ppDirectDraw)	\
    ( (This)->lpVtbl -> GetDirectDraw(This,ppDirectDraw) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDirectDrawMediaSampleAllocator_INTERFACE_DEFINED__ */


#ifndef __IDirectDrawMediaSample_INTERFACE_DEFINED__
#define __IDirectDrawMediaSample_INTERFACE_DEFINED__

/* interface IDirectDrawMediaSample */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IDirectDrawMediaSample;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AB6B4AFE-F6E4-11d0-900D-00C04FD9189D")
    IDirectDrawMediaSample : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSurfaceAndReleaseLock( 
            /* [out] */ IDirectDrawSurface **ppDirectDrawSurface,
            /* [out] */ RECT *pRect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE LockMediaSamplePointer( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IDirectDrawMediaSampleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDirectDrawMediaSample * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDirectDrawMediaSample * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDirectDrawMediaSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetSurfaceAndReleaseLock )( 
            IDirectDrawMediaSample * This,
            /* [out] */ IDirectDrawSurface **ppDirectDrawSurface,
            /* [out] */ RECT *pRect);
        
        HRESULT ( STDMETHODCALLTYPE *LockMediaSamplePointer )( 
            IDirectDrawMediaSample * This);
        
        END_INTERFACE
    } IDirectDrawMediaSampleVtbl;

    interface IDirectDrawMediaSample
    {
        CONST_VTBL struct IDirectDrawMediaSampleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDirectDrawMediaSample_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDirectDrawMediaSample_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDirectDrawMediaSample_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDirectDrawMediaSample_GetSurfaceAndReleaseLock(This,ppDirectDrawSurface,pRect)	\
    ( (This)->lpVtbl -> GetSurfaceAndReleaseLock(This,ppDirectDrawSurface,pRect) ) 

#define IDirectDrawMediaSample_LockMediaSamplePointer(This)	\
    ( (This)->lpVtbl -> LockMediaSamplePointer(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDirectDrawMediaSample_INTERFACE_DEFINED__ */


#ifndef __IAMMediaTypeStream_INTERFACE_DEFINED__
#define __IAMMediaTypeStream_INTERFACE_DEFINED__

/* interface IAMMediaTypeStream */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IAMMediaTypeStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AB6B4AFA-F6E4-11d0-900D-00C04FD9189D")
    IAMMediaTypeStream : public IMediaStream
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFormat( 
            /* [out] */ AM_MEDIA_TYPE *pMediaType,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetFormat( 
            /* [in] */ AM_MEDIA_TYPE *pMediaType,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateSample( 
            /* [in] */ long lSampleSize,
            /* [in] */ BYTE *pbBuffer,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IUnknown *pUnkOuter,
            /* [out] */ IAMMediaTypeSample **ppAMMediaTypeSample) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStreamAllocatorRequirements( 
            /* [out] */ ALLOCATOR_PROPERTIES *pProps) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStreamAllocatorRequirements( 
            /* [in] */ ALLOCATOR_PROPERTIES *pProps) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAMMediaTypeStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAMMediaTypeStream * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAMMediaTypeStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAMMediaTypeStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMultiMediaStream )( 
            IAMMediaTypeStream * This,
            /* [out] */ IMultiMediaStream **ppMultiMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetInformation )( 
            IAMMediaTypeStream * This,
            /* [out] */ MSPID *pPurposeId,
            /* [out] */ STREAM_TYPE *pType);
        
        HRESULT ( STDMETHODCALLTYPE *SetSameFormat )( 
            IAMMediaTypeStream * This,
            /* [in] */ IMediaStream *pStreamThatHasDesiredFormat,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *AllocateSample )( 
            IAMMediaTypeStream * This,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IStreamSample **ppSample);
        
        HRESULT ( STDMETHODCALLTYPE *CreateSharedSample )( 
            IAMMediaTypeStream * This,
            /* [in] */ IStreamSample *pExistingSample,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IStreamSample **ppNewSample);
        
        HRESULT ( STDMETHODCALLTYPE *SendEndOfStream )( 
            IAMMediaTypeStream * This,
            DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *GetFormat )( 
            IAMMediaTypeStream * This,
            /* [out] */ AM_MEDIA_TYPE *pMediaType,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetFormat )( 
            IAMMediaTypeStream * This,
            /* [in] */ AM_MEDIA_TYPE *pMediaType,
            /* [in] */ DWORD dwFlags);
        
        HRESULT ( STDMETHODCALLTYPE *CreateSample )( 
            IAMMediaTypeStream * This,
            /* [in] */ long lSampleSize,
            /* [in] */ BYTE *pbBuffer,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IUnknown *pUnkOuter,
            /* [out] */ IAMMediaTypeSample **ppAMMediaTypeSample);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamAllocatorRequirements )( 
            IAMMediaTypeStream * This,
            /* [out] */ ALLOCATOR_PROPERTIES *pProps);
        
        HRESULT ( STDMETHODCALLTYPE *SetStreamAllocatorRequirements )( 
            IAMMediaTypeStream * This,
            /* [in] */ ALLOCATOR_PROPERTIES *pProps);
        
        END_INTERFACE
    } IAMMediaTypeStreamVtbl;

    interface IAMMediaTypeStream
    {
        CONST_VTBL struct IAMMediaTypeStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAMMediaTypeStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAMMediaTypeStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAMMediaTypeStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAMMediaTypeStream_GetMultiMediaStream(This,ppMultiMediaStream)	\
    ( (This)->lpVtbl -> GetMultiMediaStream(This,ppMultiMediaStream) ) 

#define IAMMediaTypeStream_GetInformation(This,pPurposeId,pType)	\
    ( (This)->lpVtbl -> GetInformation(This,pPurposeId,pType) ) 

#define IAMMediaTypeStream_SetSameFormat(This,pStreamThatHasDesiredFormat,dwFlags)	\
    ( (This)->lpVtbl -> SetSameFormat(This,pStreamThatHasDesiredFormat,dwFlags) ) 

#define IAMMediaTypeStream_AllocateSample(This,dwFlags,ppSample)	\
    ( (This)->lpVtbl -> AllocateSample(This,dwFlags,ppSample) ) 

#define IAMMediaTypeStream_CreateSharedSample(This,pExistingSample,dwFlags,ppNewSample)	\
    ( (This)->lpVtbl -> CreateSharedSample(This,pExistingSample,dwFlags,ppNewSample) ) 

#define IAMMediaTypeStream_SendEndOfStream(This,dwFlags)	\
    ( (This)->lpVtbl -> SendEndOfStream(This,dwFlags) ) 


#define IAMMediaTypeStream_GetFormat(This,pMediaType,dwFlags)	\
    ( (This)->lpVtbl -> GetFormat(This,pMediaType,dwFlags) ) 

#define IAMMediaTypeStream_SetFormat(This,pMediaType,dwFlags)	\
    ( (This)->lpVtbl -> SetFormat(This,pMediaType,dwFlags) ) 

#define IAMMediaTypeStream_CreateSample(This,lSampleSize,pbBuffer,dwFlags,pUnkOuter,ppAMMediaTypeSample)	\
    ( (This)->lpVtbl -> CreateSample(This,lSampleSize,pbBuffer,dwFlags,pUnkOuter,ppAMMediaTypeSample) ) 

#define IAMMediaTypeStream_GetStreamAllocatorRequirements(This,pProps)	\
    ( (This)->lpVtbl -> GetStreamAllocatorRequirements(This,pProps) ) 

#define IAMMediaTypeStream_SetStreamAllocatorRequirements(This,pProps)	\
    ( (This)->lpVtbl -> SetStreamAllocatorRequirements(This,pProps) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAMMediaTypeStream_INTERFACE_DEFINED__ */


#ifndef __IAMMediaTypeSample_INTERFACE_DEFINED__
#define __IAMMediaTypeSample_INTERFACE_DEFINED__

/* interface IAMMediaTypeSample */
/* [unique][uuid][local][object] */ 


EXTERN_C const IID IID_IAMMediaTypeSample;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AB6B4AFB-F6E4-11d0-900D-00C04FD9189D")
    IAMMediaTypeSample : public IStreamSample
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetPointer( 
            /* [size_is][in] */ BYTE *pBuffer,
            /* [in] */ long lSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPointer( 
            /* [out] */ BYTE **ppBuffer) = 0;
        
        virtual long STDMETHODCALLTYPE GetSize( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTime( 
            /* [out] */ REFERENCE_TIME *pTimeStart,
            /* [out] */ REFERENCE_TIME *pTimeEnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetTime( 
            /* [in] */ REFERENCE_TIME *pTimeStart,
            /* [in] */ REFERENCE_TIME *pTimeEnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsSyncPoint( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetSyncPoint( 
            BOOL bIsSyncPoint) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsPreroll( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPreroll( 
            BOOL bIsPreroll) = 0;
        
        virtual long STDMETHODCALLTYPE GetActualDataLength( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetActualDataLength( 
            long __MIDL__IAMMediaTypeSample0000) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMediaType( 
            /* [out] */ AM_MEDIA_TYPE **ppMediaType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMediaType( 
            /* [in] */ AM_MEDIA_TYPE *pMediaType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsDiscontinuity( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDiscontinuity( 
            BOOL bDiscontinuity) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMediaTime( 
            /* [out] */ LONGLONG *pTimeStart,
            /* [out] */ LONGLONG *pTimeEnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMediaTime( 
            /* [in] */ LONGLONG *pTimeStart,
            /* [in] */ LONGLONG *pTimeEnd) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAMMediaTypeSampleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAMMediaTypeSample * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAMMediaTypeSample * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAMMediaTypeSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaStream )( 
            IAMMediaTypeSample * This,
            /* [in] */ IMediaStream **ppMediaStream);
        
        HRESULT ( STDMETHODCALLTYPE *GetSampleTimes )( 
            IAMMediaTypeSample * This,
            /* [out] */ STREAM_TIME *pStartTime,
            /* [out] */ STREAM_TIME *pEndTime,
            /* [out] */ STREAM_TIME *pCurrentTime);
        
        HRESULT ( STDMETHODCALLTYPE *SetSampleTimes )( 
            IAMMediaTypeSample * This,
            /* [in] */ const STREAM_TIME *pStartTime,
            /* [in] */ const STREAM_TIME *pEndTime);
        
        HRESULT ( STDMETHODCALLTYPE *Update )( 
            IAMMediaTypeSample * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ HANDLE hEvent,
            /* [in] */ PAPCFUNC pfnAPC,
            /* [in] */ DWORD_PTR dwAPCData);
        
        HRESULT ( STDMETHODCALLTYPE *CompletionStatus )( 
            IAMMediaTypeSample * This,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwMilliseconds);
        
        HRESULT ( STDMETHODCALLTYPE *SetPointer )( 
            IAMMediaTypeSample * This,
            /* [size_is][in] */ BYTE *pBuffer,
            /* [in] */ long lSize);
        
        HRESULT ( STDMETHODCALLTYPE *GetPointer )( 
            IAMMediaTypeSample * This,
            /* [out] */ BYTE **ppBuffer);
        
        long ( STDMETHODCALLTYPE *GetSize )( 
            IAMMediaTypeSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTime )( 
            IAMMediaTypeSample * This,
            /* [out] */ REFERENCE_TIME *pTimeStart,
            /* [out] */ REFERENCE_TIME *pTimeEnd);
        
        HRESULT ( STDMETHODCALLTYPE *SetTime )( 
            IAMMediaTypeSample * This,
            /* [in] */ REFERENCE_TIME *pTimeStart,
            /* [in] */ REFERENCE_TIME *pTimeEnd);
        
        HRESULT ( STDMETHODCALLTYPE *IsSyncPoint )( 
            IAMMediaTypeSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetSyncPoint )( 
            IAMMediaTypeSample * This,
            BOOL bIsSyncPoint);
        
        HRESULT ( STDMETHODCALLTYPE *IsPreroll )( 
            IAMMediaTypeSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetPreroll )( 
            IAMMediaTypeSample * This,
            BOOL bIsPreroll);
        
        long ( STDMETHODCALLTYPE *GetActualDataLength )( 
            IAMMediaTypeSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetActualDataLength )( 
            IAMMediaTypeSample * This,
            long __MIDL__IAMMediaTypeSample0000);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaType )( 
            IAMMediaTypeSample * This,
            /* [out] */ AM_MEDIA_TYPE **ppMediaType);
        
        HRESULT ( STDMETHODCALLTYPE *SetMediaType )( 
            IAMMediaTypeSample * This,
            /* [in] */ AM_MEDIA_TYPE *pMediaType);
        
        HRESULT ( STDMETHODCALLTYPE *IsDiscontinuity )( 
            IAMMediaTypeSample * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetDiscontinuity )( 
            IAMMediaTypeSample * This,
            BOOL bDiscontinuity);
        
        HRESULT ( STDMETHODCALLTYPE *GetMediaTime )( 
            IAMMediaTypeSample * This,
            /* [out] */ LONGLONG *pTimeStart,
            /* [out] */ LONGLONG *pTimeEnd);
        
        HRESULT ( STDMETHODCALLTYPE *SetMediaTime )( 
            IAMMediaTypeSample * This,
            /* [in] */ LONGLONG *pTimeStart,
            /* [in] */ LONGLONG *pTimeEnd);
        
        END_INTERFACE
    } IAMMediaTypeSampleVtbl;

    interface IAMMediaTypeSample
    {
        CONST_VTBL struct IAMMediaTypeSampleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAMMediaTypeSample_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAMMediaTypeSample_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAMMediaTypeSample_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAMMediaTypeSample_GetMediaStream(This,ppMediaStream)	\
    ( (This)->lpVtbl -> GetMediaStream(This,ppMediaStream) ) 

#define IAMMediaTypeSample_GetSampleTimes(This,pStartTime,pEndTime,pCurrentTime)	\
    ( (This)->lpVtbl -> GetSampleTimes(This,pStartTime,pEndTime,pCurrentTime) ) 

#define IAMMediaTypeSample_SetSampleTimes(This,pStartTime,pEndTime)	\
    ( (This)->lpVtbl -> SetSampleTimes(This,pStartTime,pEndTime) ) 

#define IAMMediaTypeSample_Update(This,dwFlags,hEvent,pfnAPC,dwAPCData)	\
    ( (This)->lpVtbl -> Update(This,dwFlags,hEvent,pfnAPC,dwAPCData) ) 

#define IAMMediaTypeSample_CompletionStatus(This,dwFlags,dwMilliseconds)	\
    ( (This)->lpVtbl -> CompletionStatus(This,dwFlags,dwMilliseconds) ) 


#define IAMMediaTypeSample_SetPointer(This,pBuffer,lSize)	\
    ( (This)->lpVtbl -> SetPointer(This,pBuffer,lSize) ) 

#define IAMMediaTypeSample_GetPointer(This,ppBuffer)	\
    ( (This)->lpVtbl -> GetPointer(This,ppBuffer) ) 

#define IAMMediaTypeSample_GetSize(This)	\
    ( (This)->lpVtbl -> GetSize(This) ) 

#define IAMMediaTypeSample_GetTime(This,pTimeStart,pTimeEnd)	\
    ( (This)->lpVtbl -> GetTime(This,pTimeStart,pTimeEnd) ) 

#define IAMMediaTypeSample_SetTime(This,pTimeStart,pTimeEnd)	\
    ( (This)->lpVtbl -> SetTime(This,pTimeStart,pTimeEnd) ) 

#define IAMMediaTypeSample_IsSyncPoint(This)	\
    ( (This)->lpVtbl -> IsSyncPoint(This) ) 

#define IAMMediaTypeSample_SetSyncPoint(This,bIsSyncPoint)	\
    ( (This)->lpVtbl -> SetSyncPoint(This,bIsSyncPoint) ) 

#define IAMMediaTypeSample_IsPreroll(This)	\
    ( (This)->lpVtbl -> IsPreroll(This) ) 

#define IAMMediaTypeSample_SetPreroll(This,bIsPreroll)	\
    ( (This)->lpVtbl -> SetPreroll(This,bIsPreroll) ) 

#define IAMMediaTypeSample_GetActualDataLength(This)	\
    ( (This)->lpVtbl -> GetActualDataLength(This) ) 

#define IAMMediaTypeSample_SetActualDataLength(This,__MIDL__IAMMediaTypeSample0000)	\
    ( (This)->lpVtbl -> SetActualDataLength(This,__MIDL__IAMMediaTypeSample0000) ) 

#define IAMMediaTypeSample_GetMediaType(This,ppMediaType)	\
    ( (This)->lpVtbl -> GetMediaType(This,ppMediaType) ) 

#define IAMMediaTypeSample_SetMediaType(This,pMediaType)	\
    ( (This)->lpVtbl -> SetMediaType(This,pMediaType) ) 

#define IAMMediaTypeSample_IsDiscontinuity(This)	\
    ( (This)->lpVtbl -> IsDiscontinuity(This) ) 

#define IAMMediaTypeSample_SetDiscontinuity(This,bDiscontinuity)	\
    ( (This)->lpVtbl -> SetDiscontinuity(This,bDiscontinuity) ) 

#define IAMMediaTypeSample_GetMediaTime(This,pTimeStart,pTimeEnd)	\
    ( (This)->lpVtbl -> GetMediaTime(This,pTimeStart,pTimeEnd) ) 

#define IAMMediaTypeSample_SetMediaTime(This,pTimeStart,pTimeEnd)	\
    ( (This)->lpVtbl -> SetMediaTime(This,pTimeStart,pTimeEnd) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAMMediaTypeSample_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_amstream_0000_0007 */
/* [local] */ 

DEFINE_GUID(CLSID_AMMultiMediaStream, /* 49c47ce5-9ba4-11d0-8212-00c04fc32c45 */
0x49c47ce5, 0x9ba4, 0x11d0, 0x82, 0x12, 0x00, 0xc0, 0x4f, 0xc3, 0x2c, 0x45);
DEFINE_GUID(CLSID_AMDirectDrawStream, /* 49c47ce4-9ba4-11d0-8212-00c04fc32c45 */
0x49c47ce4, 0x9ba4, 0x11d0, 0x82, 0x12, 0x00, 0xc0, 0x4f, 0xc3, 0x2c, 0x45);
DEFINE_GUID(CLSID_AMAudioStream, /* 8496e040-af4c-11d0-8212-00c04fc32c45 */
0x8496e040, 0xaf4c, 0x11d0, 0x82, 0x12, 0x00, 0xc0, 0x4f, 0xc3, 0x2c, 0x45);
DEFINE_GUID(CLSID_AMAudioData, /* f2468580-af8a-11d0-8212-00c04fc32c45 */
0xf2468580, 0xaf8a, 0x11d0, 0x82, 0x12, 0x00, 0xc0, 0x4f, 0xc3, 0x2c, 0x45);
DEFINE_GUID(CLSID_AMMediaTypeStream, /* CF0F2F7C-F7BF-11d0-900D-00C04FD9189D */
0xcf0f2f7c, 0xf7bf, 0x11d0, 0x90, 0xd, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0x9d);


extern RPC_IF_HANDLE __MIDL_itf_amstream_0000_0007_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_amstream_0000_0007_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AtalkWsh.h ===
/*++

Copyright (c) 1992-1999  Microsoft Corporation

Module Name:

    wshatalk.h

Abstract:

	This is the header file for application using Windows Sockets for
	Appletalk.

Revision History:
    10 Jul 1992     Initial Version

--*/

#ifndef	_ATALKWSH_
#define	_ATALKWSH_

#if _MSC_VER > 1000
#pragma once
#endif

//
//  All protocol types should be specified in the Decimal base
//

#define DECIMAL_BASE    			10

//
//  Protocol number 0 is invalid in the Appletalk case
//

#define	ATPROTO_BASE				(1000 * AF_APPLETALK)
#define	SOL_APPLETALK				(ATPROTO_BASE)

#define DDPPROTO_RTMP   			(ATPROTO_BASE + 1)
#define DDPPROTO_NBP    			(ATPROTO_BASE + 2)
#define DDPPROTO_ATP    			(ATPROTO_BASE + 3)
#define DDPPROTO_AEP    			(ATPROTO_BASE + 4)
#define DDPPROTO_RTMPRQ 			(ATPROTO_BASE + 5)
#define DDPPROTO_ZIP    			(ATPROTO_BASE + 6)
#define DDPPROTO_ADSP   			(ATPROTO_BASE + 7)

#define DDPPROTO_MAX    			(ATPROTO_BASE + 255)

//
//  Define the higher layer appletalk protocol types
//

#define ATPROTO_ADSP        		(DDPPROTO_MAX + 1)
#define ATPROTO_ATP         		(DDPPROTO_MAX + 2)
#define ATPROTO_ASP         		(DDPPROTO_MAX + 3)
#define ATPROTO_PAP         		(DDPPROTO_MAX + 4)

#define SO_REGISTER_NAME     		0xA000
#define SO_DEREGISTER_NAME   		0xA001
#define SO_REMOVE_NAME				SO_DEREGISTER_NAME
#define SO_LOOKUP_NAME       		0xA002
#define SO_CONFIRM_NAME       		0xA003
#define	SO_LOOKUP_MYZONE			0xA004
#define	SO_GETMYZONE				SO_LOOKUP_MYZONE
#define SO_LOOKUP_ZONES      		0xA005
#define SO_GETZONELIST				SO_LOOKUP_ZONES
#define	SO_LOOKUP_ZONES_ON_ADAPTER	0xA006
#define	SO_GETLOCALZONES			SO_LOOKUP_ZONES_ON_ADAPTER
#define	SO_LOOKUP_NETDEF_ON_ADAPTER	0xA007
#define	SO_GETNETINFO				SO_LOOKUP_NETDEF_ON_ADAPTER

//
//  PAP-specific options
//

#define SO_PAP_SET_SERVER_STATUS	0xA007
#define SO_PAP_GET_SERVER_STATUS	0xA008
#define	SO_PAP_PRIME_READ			0xA009


#define ATADDR_ANY             		0            // Dynamic socket (=0)
#define ATADDR_BROADCAST       		0xFF         // Broadcast node id (=ff)

//
//	Define flags/error codes peculiar to Appletalk
//

#define	WSAEMSGPARTIAL				(WSABASEERR+100)


//	Maximum pap status size
#define	MAX_PAP_STATUS_SIZE			255
#define	MIN_PAP_READ_BUF_SIZE		4096

//	These are the unused 4 bytes returned in the PAP status packet. If ever
//	they are to be interpreted, they will be available.
#define	PAP_UNUSED_STATUS_BYTES		4


//
//  SOCKADDR_AT structure
//

typedef struct sockaddr_at
{
    USHORT    sat_family;
    USHORT    sat_net;
    UCHAR     sat_node;
    UCHAR     sat_socket;
} SOCKADDR_AT, *PSOCKADDR_AT;


//
//	***WARNING***
//	This is defined to be the same as the ATALK ADDRESS defined in atalktdi.h
//	Change this if the other changes.
//

typedef	union
{
	struct
	{
		USHORT		Network;
		UCHAR		Node;
		UCHAR       Socket;
	};
	ULONG			Address;
} WSH_ATALK_ADDRESS, *PWSH_ATALK_ADDRESS;

//
//  Typedefs for the various options
//

//
//  ***WARNING***:
//  This should be exactly the same as NBP_NAME defined in atalktdi.h
//

#define MAX_ENTITY  32
typedef struct
{
    CHAR    ObjectNameLen;
    CHAR    ObjectName[MAX_ENTITY];
    CHAR    TypeNameLen;
    CHAR    TypeName[MAX_ENTITY];
    CHAR    ZoneNameLen;
    CHAR    ZoneName[MAX_ENTITY];
} WSH_NBP_NAME, *PWSH_NBP_NAME;

typedef struct
{
	WSH_ATALK_ADDRESS		Address;
	USHORT					Enumerator;
	WSH_NBP_NAME			NbpName;
} WSH_NBP_TUPLE, *PWSH_NBP_TUPLE;

typedef WSH_NBP_NAME    WSH_REGISTER_NAME, *PWSH_REGISTER_NAME;
typedef WSH_NBP_NAME    WSH_DEREGISTER_NAME, *PWSH_DEREGISTER_NAME;
typedef WSH_NBP_NAME    WSH_REMOVE_NAME, *PWSH_REMOVE_NAME;

typedef struct _WSH_LOOKUP_ZONES
{
    ULONG   NoZones;

    //
    //  CHAR    Zones[] - null separated zones
    //

} WSH_LOOKUP_ZONES, *PWSH_LOOKUP_ZONES;

typedef struct _WSH_LOOKUP_NETDEF_ON_ADAPTER
{
	USHORT	NetworkRangeLowerEnd;
	USHORT	NetworkRangeUpperEnd;

	//	This will be followed by a null terminated ansi default zone.
	//	PUCHAR	DefaultZone[]

} WSH_LOOKUP_NETDEF_ON_ADAPTER , *PWSH_LOOKUP_NETDEF_ON_ADAPTER;

typedef struct _WSH_LOOKUP_NAME
{
    WSH_NBP_TUPLE    LookupTuple;
    ULONG   NoTuples;

    //
    //  Array of NoTuple WSH_NBP_TUPLEs
    //

} WSH_LOOKUP_NAME, *PWSH_LOOKUP_NAME;

typedef struct _WSH_PAP_GET_SERVER_STATUS
{
	SOCKADDR_AT			ServerAddr;
	UCHAR				Reserved[PAP_UNUSED_STATUS_BYTES];
	UCHAR				ServerStatus[MAX_PAP_STATUS_SIZE+1];

} WSH_PAP_GET_SERVER_STATUS, *PWSH_PAP_GET_SERVER_STATUS;

#endif	// _ATALKWSH_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\amvideo.h ===
//------------------------------------------------------------------------------
// File: AMVideo.h
//
// Desc: Video related definitions and interfaces for ActiveMovie.
//
// Copyright (c) 1992 - 2001, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#ifndef __AMVIDEO__
#define __AMVIDEO__

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

#include <ddraw.h>

//  Duplicate DirectShow definition
typedef LONGLONG REFERENCE_TIME;

// This is an interface on the video renderer that provides information about
// DirectDraw with respect to its use by the renderer. For example it allows
// an application to get details of the surface and any hardware capabilities
// that are available. It also allows someone to adjust the surfaces that the
// renderer should use and furthermore even set the DirectDraw instance. We
// allow someone to set the DirectDraw instance because DirectDraw can only
// be opened once per process so it helps resolve conflicts. There is some
// duplication in this interface as the hardware/emulated/FOURCCs available
// can all be found through the IDirectDraw interface, this interface allows
// simple access to that information without calling the DirectDraw provider
// itself. The AMDDS prefix is ActiveMovie DirectDraw Switches abbreviated.

#define AMDDS_NONE 0x00             // No use for DCI/DirectDraw
#define AMDDS_DCIPS 0x01            // Use DCI primary surface
#define AMDDS_PS 0x02               // Use DirectDraw primary
#define AMDDS_RGBOVR 0x04           // RGB overlay surfaces
#define AMDDS_YUVOVR 0x08           // YUV overlay surfaces
#define AMDDS_RGBOFF 0x10           // RGB offscreen surfaces
#define AMDDS_YUVOFF 0x20           // YUV offscreen surfaces
#define AMDDS_RGBFLP 0x40           // RGB flipping surfaces
#define AMDDS_YUVFLP 0x80           // YUV flipping surfaces
#define AMDDS_ALL 0xFF              // ALL the previous flags
#define AMDDS_DEFAULT AMDDS_ALL     // Use all available surfaces

#define AMDDS_YUV (AMDDS_YUVOFF | AMDDS_YUVOVR | AMDDS_YUVFLP)
#define AMDDS_RGB (AMDDS_RGBOFF | AMDDS_RGBOVR | AMDDS_RGBFLP)
#define AMDDS_PRIMARY (AMDDS_DCIPS | AMDDS_PS)

// be nice to our friends in C
#undef INTERFACE
#define INTERFACE IDirectDrawVideo

DECLARE_INTERFACE_(IDirectDrawVideo, IUnknown)
{
    // IUnknown methods

    STDMETHOD(QueryInterface)(THIS_ REFIID riid, __deref_out LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef)(THIS) PURE;
    STDMETHOD_(ULONG,Release)(THIS) PURE;

    // IDirectDrawVideo methods

    STDMETHOD(GetSwitches)(THIS_ __out DWORD *pSwitches) PURE;
    STDMETHOD(SetSwitches)(THIS_ DWORD Switches) PURE;
    STDMETHOD(GetCaps)(THIS_ __out DDCAPS *pCaps) PURE;
    STDMETHOD(GetEmulatedCaps)(THIS_ __out DDCAPS *pCaps) PURE;
    STDMETHOD(GetSurfaceDesc)(THIS_ __inout DDSURFACEDESC *pSurfaceDesc) PURE;
    STDMETHOD(GetFourCCCodes)(THIS_ __out DWORD *pCount,__out DWORD *pCodes) PURE;
    STDMETHOD(SetDirectDraw)(THIS_ LPDIRECTDRAW pDirectDraw) PURE;
    STDMETHOD(GetDirectDraw)(THIS_ __deref_out LPDIRECTDRAW *ppDirectDraw) PURE;
    STDMETHOD(GetSurfaceType)(THIS_ __out DWORD *pSurfaceType) PURE;
    STDMETHOD(SetDefault)(THIS) PURE;
    STDMETHOD(UseScanLine)(THIS_ long UseScanLine) PURE;
    STDMETHOD(CanUseScanLine)(THIS_ __out long *UseScanLine) PURE;
    STDMETHOD(UseOverlayStretch)(THIS_ long UseOverlayStretch) PURE;
    STDMETHOD(CanUseOverlayStretch)(THIS_ __out long *UseOverlayStretch) PURE;
    STDMETHOD(UseWhenFullScreen)(THIS_ long UseWhenFullScreen) PURE;
    STDMETHOD(WillUseFullScreen)(THIS_ __out long *UseWhenFullScreen) PURE;
};


// be nice to our friends in C
#undef INTERFACE
#define INTERFACE IQualProp

DECLARE_INTERFACE_(IQualProp, IUnknown)
{
    // IUnknown methods

    STDMETHOD(QueryInterface)(THIS_ REFIID riid, __deref_out LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef)(THIS) PURE;
    STDMETHOD_(ULONG,Release)(THIS) PURE;

    // Compare these with the functions in class CGargle in gargle.h

    STDMETHOD(get_FramesDroppedInRenderer)(THIS_ __out int *pcFrames) PURE;  // Out
    STDMETHOD(get_FramesDrawn)(THIS_ __out int *pcFramesDrawn) PURE;         // Out
    STDMETHOD(get_AvgFrameRate)(THIS_ __out int *piAvgFrameRate) PURE;       // Out
    STDMETHOD(get_Jitter)(THIS_ __out int *iJitter) PURE;                    // Out
    STDMETHOD(get_AvgSyncOffset)(THIS_ __out int *piAvg) PURE;               // Out
    STDMETHOD(get_DevSyncOffset)(THIS_ __out int *piDev) PURE;               // Out
};


// This interface allows an application or plug in distributor to control a
// full screen renderer. The Modex renderer supports this interface. When
// connected a renderer should load the display modes it has available
// The number of modes available can be obtained through CountModes. Then
// information on each individual mode is available by calling GetModeInfo
// and IsModeAvailable. An application may enable and disable any modes
// by calling the SetEnabled flag with OATRUE or OAFALSE (not C/C++ TRUE
// and FALSE values) - the current value may be queried by IsModeEnabled

// A more generic way of setting the modes enabled that is easier to use
// when writing applications is the clip loss factor. This defines the
// amount of video that can be lost when deciding which display mode to
// use. Assuming the decoder cannot compress the video then playing an
// MPEG file (say 352x288) into a 320x200 display will lose about 25% of
// the image. The clip loss factor specifies the upper range permissible.
// To allow typical MPEG video to be played in 320x200 it defaults to 25%

// be nice to our friends in C
#undef INTERFACE
#define INTERFACE IFullScreenVideo

DECLARE_INTERFACE_(IFullScreenVideo, IUnknown)
{
    // IUnknown methods

    STDMETHOD(QueryInterface)(THIS_ REFIID riid, __deref_out LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef)(THIS) PURE;
    STDMETHOD_(ULONG,Release)(THIS) PURE;

    // IFullScreenVideo methods

    STDMETHOD(CountModes)(THIS_ __out long *pModes) PURE;
    STDMETHOD(GetModeInfo)(THIS_ long Mode,__out long *pWidth,__out long *pHeight,__out long *pDepth) PURE;
    STDMETHOD(GetCurrentMode)(THIS_ __out long *pMode) PURE;
    STDMETHOD(IsModeAvailable)(THIS_ long Mode) PURE;
    STDMETHOD(IsModeEnabled)(THIS_ long Mode) PURE;
    STDMETHOD(SetEnabled)(THIS_ long Mode,long bEnabled) PURE;
    STDMETHOD(GetClipFactor)(THIS_ __out long *pClipFactor) PURE;
    STDMETHOD(SetClipFactor)(THIS_ long ClipFactor) PURE;
    STDMETHOD(SetMessageDrain)(THIS_ HWND hwnd) PURE;
    STDMETHOD(GetMessageDrain)(THIS_ __out HWND *hwnd) PURE;
    STDMETHOD(SetMonitor)(THIS_ long Monitor) PURE;
    STDMETHOD(GetMonitor)(THIS_ __out long *Monitor) PURE;
    STDMETHOD(HideOnDeactivate)(THIS_ long Hide) PURE;
    STDMETHOD(IsHideOnDeactivate)(THIS) PURE;
    STDMETHOD(SetCaption)(THIS_ __in BSTR strCaption) PURE;
    STDMETHOD(GetCaption)(THIS_ __deref_out BSTR *pstrCaption) PURE;
    STDMETHOD(SetDefault)(THIS) PURE;
};


// This adds the accelerator table capabilities in fullscreen. This is being
// added between the original runtime release and the full SDK release. We
// cannot just add the method to IFullScreenVideo as we don't want to force
// applications to have to ship the ActiveMovie support DLLs - this is very
// important to applications that plan on being downloaded over the Internet

// be nice to our friends in C
#undef INTERFACE
#define INTERFACE IFullScreenVideoEx

DECLARE_INTERFACE_(IFullScreenVideoEx, IFullScreenVideo)
{
    // IUnknown methods

    STDMETHOD(QueryInterface)(THIS_ REFIID riid, __deref_out LPVOID *ppvObj) PURE;
    STDMETHOD_(ULONG,AddRef)(THIS) PURE;
    STDMETHOD_(ULONG,Release)(THIS) PURE;

    // IFullScreenVideo methods

    STDMETHOD(CountModes)(THIS_ __out long *pModes) PURE;
    STDMETHOD(GetModeInfo)(THIS_ long Mode,__out long *pWidth,__out long *pHeight,__out long *pDepth) PURE;
    STDMETHOD(GetCurrentMode)(THIS_ __out long *pMode) PURE;
    STDMETHOD(IsModeAvailable)(THIS_ long Mode) PURE;
    STDMETHOD(IsModeEnabled)(THIS_ long Mode) PURE;
    STDMETHOD(SetEnabled)(THIS_ long Mode,long bEnabled) PURE;
    STDMETHOD(GetClipFactor)(THIS_ __out long *pClipFactor) PURE;
    STDMETHOD(SetClipFactor)(THIS_ long ClipFactor) PURE;
    STDMETHOD(SetMessageDrain)(THIS_ HWND hwnd) PURE;
    STDMETHOD(GetMessageDrain)(THIS_ __out HWND *hwnd) PURE;
    STDMETHOD(SetMonitor)(THIS_ long Monitor) PURE;
    STDMETHOD(GetMonitor)(THIS_ __out long *Monitor) PURE;
    STDMETHOD(HideOnDeactivate)(THIS_ long Hide) PURE;
    STDMETHOD(IsHideOnDeactivate)(THIS) PURE;
    STDMETHOD(SetCaption)(THIS_ __in BSTR strCaption) PURE;
    STDMETHOD(GetCaption)(THIS_ __deref_out BSTR *pstrCaption) PURE;
    STDMETHOD(SetDefault)(THIS) PURE;

    // IFullScreenVideoEx

    STDMETHOD(SetAcceleratorTable)(THIS_ HWND hwnd,HACCEL hAccel) PURE;
    STDMETHOD(GetAcceleratorTable)(THIS_ __out HWND *phwnd,HACCEL *phAccel) PURE;
    STDMETHOD(KeepPixelAspectRatio)(THIS_ long KeepAspect) PURE;
    STDMETHOD(IsKeepPixelAspectRatio)(THIS_ __out long *pKeepAspect) PURE;
};


// The SDK base classes contain a base video mixer class. Video mixing in a
// software environment is tricky because we typically have multiple streams
// each sending data at unpredictable times. To work with this we defined a
// pin that is the lead pin, when data arrives on this pin we do a mix. As
// an alternative we may not want to have a lead pin but output samples at
// predefined spaces, like one every 1/15 of a second, this interfaces also
// supports that mode of operations (there is a working video mixer sample)

// be nice to our friends in C
#undef INTERFACE
#define INTERFACE IBaseVideoMixer

DECLARE_INTERFACE_(IBaseVideoMixer, IUnknown)
{
    STDMETHOD(SetLeadPin)(THIS_ int iPin) PURE;
    STDMETHOD(GetLeadPin)(THIS_ __out int *piPin) PURE;
    STDMETHOD(GetInputPinCount)(THIS_ __out int *piPinCount) PURE;
    STDMETHOD(IsUsingClock)(THIS_ __out int *pbValue) PURE;
    STDMETHOD(SetUsingClock)(THIS_ int bValue) PURE;
    STDMETHOD(GetClockPeriod)(THIS_ __out int *pbValue) PURE;
    STDMETHOD(SetClockPeriod)(THIS_ int bValue) PURE;
};

#define iPALETTE_COLORS 256     // Maximum colours in palette
#define iEGA_COLORS 16          // Number colours in EGA palette
#define iMASK_COLORS 3          // Maximum three components
#define iTRUECOLOR 16           // Minimum true colour device
#define iRED 0                  // Index position for RED mask
#define iGREEN 1                // Index position for GREEN mask
#define iBLUE 2                 // Index position for BLUE mask
#define iPALETTE 8              // Maximum colour depth using a palette
#define iMAXBITS 8              // Maximum bits per colour component


// Used for true colour images that also have a palette

typedef struct tag_TRUECOLORINFO {
    DWORD   dwBitMasks[iMASK_COLORS];
    RGBQUAD bmiColors[iPALETTE_COLORS];
} TRUECOLORINFO;


// The BITMAPINFOHEADER contains all the details about the video stream such
// as the actual image dimensions and their pixel depth. A source filter may
// also request that the sink take only a section of the video by providing a
// clipping rectangle in rcSource. In the worst case where the sink filter
// forgets to check this on connection it will simply render the whole thing
// which isn't a disaster. Ideally a sink filter will check the rcSource and
// if it doesn't support image extraction and the rectangle is not empty then
// it will reject the connection. A filter should use SetRectEmpty to reset a
// rectangle to all zeroes (and IsRectEmpty to later check the rectangle).
// The rcTarget specifies the destination rectangle for the video, for most
// source filters they will set this to all zeroes, a downstream filter may
// request that the video be placed in a particular area of the buffers it
// supplies in which case it will call QueryAccept with a non empty target

typedef struct tagVIDEOINFOHEADER {

    RECT            rcSource;          // The bit we really want to use
    RECT            rcTarget;          // Where the video should go
    DWORD           dwBitRate;         // Approximate bit data rate
    DWORD           dwBitErrorRate;    // Bit error rate for this stream
    REFERENCE_TIME  AvgTimePerFrame;   // Average time per frame (100ns units)

    BITMAPINFOHEADER bmiHeader;

} VIDEOINFOHEADER;

// make sure the pbmi is initialized before using these macros
#define TRUECOLOR(pbmi)  ((TRUECOLORINFO *)(((LPBYTE)&((pbmi)->bmiHeader)) \
					+ (pbmi)->bmiHeader.biSize))
#define COLORS(pbmi)	((RGBQUAD *)(((LPBYTE)&((pbmi)->bmiHeader)) 	\
					+ (pbmi)->bmiHeader.biSize))
#define BITMASKS(pbmi)	((DWORD *)(((LPBYTE)&((pbmi)->bmiHeader)) 	\
					+ (pbmi)->bmiHeader.biSize))

// All the image based filters use this to communicate their media types. It's
// centred principally around the BITMAPINFO. This structure always contains a
// BITMAPINFOHEADER followed by a number of other fields depending on what the
// BITMAPINFOHEADER contains. If it contains details of a palettised format it
// will be followed by one or more RGBQUADs defining the palette. If it holds
// details of a true colour format then it may be followed by a set of three
// DWORD bit masks that specify where the RGB data can be found in the image
// (For more information regarding BITMAPINFOs see the Win32 documentation)

// The rcSource and rcTarget fields are not for use by filters supplying the
// data. The destination (target) rectangle should be set to all zeroes. The
// source may also be zero filled or set with the dimensions of the video. So
// if the video is 352x288 pixels then set it to (0,0,352,288). These fields
// are mainly used by downstream filters that want to ask the source filter
// to place the image in a different position in an output buffer. So when
// using for example the primary surface the video renderer may ask a filter
// to place the video images in a destination position of (100,100,452,388)
// on the display since that's where the window is positioned on the display

// !!! WARNING !!!
// DO NOT use this structure unless you are sure that the BITMAPINFOHEADER
// has a normal biSize == sizeof(BITMAPINFOHEADER) !
// !!! WARNING !!!

typedef struct tagVIDEOINFO {

    RECT            rcSource;          // The bit we really want to use
    RECT            rcTarget;          // Where the video should go
    DWORD           dwBitRate;         // Approximate bit data rate
    DWORD           dwBitErrorRate;    // Bit error rate for this stream
    REFERENCE_TIME  AvgTimePerFrame;   // Average time per frame (100ns units)

    BITMAPINFOHEADER bmiHeader;

    union {
        RGBQUAD         bmiColors[iPALETTE_COLORS];     // Colour palette
        DWORD           dwBitMasks[iMASK_COLORS];       // True colour masks
        TRUECOLORINFO   TrueColorInfo;                  // Both of the above
    };

} VIDEOINFO;

// These macros define some standard bitmap format sizes

#define SIZE_EGA_PALETTE (iEGA_COLORS * sizeof(RGBQUAD))
#define SIZE_PALETTE (iPALETTE_COLORS * sizeof(RGBQUAD))
#define SIZE_MASKS (iMASK_COLORS * sizeof(DWORD))
#define SIZE_PREHEADER (FIELD_OFFSET(VIDEOINFOHEADER,bmiHeader))
#define SIZE_VIDEOHEADER (sizeof(BITMAPINFOHEADER) + SIZE_PREHEADER)
// !!! for abnormal biSizes
// #define SIZE_VIDEOHEADER(pbmi) ((pbmi)->bmiHeader.biSize + SIZE_PREHEADER)

// DIBSIZE calculates the number of bytes required by an image

#define WIDTHBYTES(bits) ((DWORD)(((bits)+31) & (~31)) / 8)
#define DIBWIDTHBYTES(bi) (DWORD)WIDTHBYTES((DWORD)(bi).biWidth * (DWORD)(bi).biBitCount)
#define _DIBSIZE(bi) (DIBWIDTHBYTES(bi) * (DWORD)(bi).biHeight)
#define DIBSIZE(bi) ((bi).biHeight < 0 ? (-1)*(_DIBSIZE(bi)) : _DIBSIZE(bi))

#ifdef _INTSAFE_H_INCLUDED_
__inline HRESULT SAFE_DIBWIDTHBYTES(__in const BITMAPINFOHEADER *pbi, __out DWORD *pcbWidth)
{
    DWORD dw;
    HRESULT hr;
    if (pbi->biWidth < 0 || pbi->biBitCount <= 0) {
        return E_INVALIDARG;
    }
    //  Calculate width in bits
    hr = DWordMult((DWORD)pbi->biWidth, (DWORD)pbi->biBitCount, &dw);
    if (FAILED(hr)) {
        return hr;
    }
    //  Round up to bytes
    dw = (dw & 7) ? dw / 8 + 1: dw / 8;

    //  Round up to a multiple of 4 bytes
    if (dw & 3) {
        dw += 4 - (dw & 3);
    }

    *pcbWidth = dw;
    return S_OK;
}

__inline HRESULT SAFE_DIBSIZE(__in const BITMAPINFOHEADER *pbi, __out DWORD *pcbSize)
{
    DWORD dw;
    DWORD dwWidthBytes;
    HRESULT hr;
    if (pbi->biHeight == 0x80000000) {
        return E_INVALIDARG;
    }
    hr = SAFE_DIBWIDTHBYTES(pbi, &dwWidthBytes);
    if (FAILED(hr)) {
        return hr;
    }
    dw = abs(pbi->biHeight);
    hr = DWordMult(dw, dwWidthBytes, &dw);
    if (FAILED(hr)) {
        return hr;
    }
    *pcbSize = dw;
    return S_OK;
}

#endif // _INTSAFE_H_INCLUDED

// This compares the bit masks between two VIDEOINFOHEADERs

#define BIT_MASKS_MATCH(pbmi1,pbmi2)                                \
    (((pbmi1)->dwBitMasks[iRED] == (pbmi2)->dwBitMasks[iRED]) &&        \
     ((pbmi1)->dwBitMasks[iGREEN] == (pbmi2)->dwBitMasks[iGREEN]) &&    \
     ((pbmi1)->dwBitMasks[iBLUE] == (pbmi2)->dwBitMasks[iBLUE]))

// These zero fill different parts of the VIDEOINFOHEADER structure

// Only use these macros for pbmi's with a normal BITMAPINFOHEADER biSize
#define RESET_MASKS(pbmi) (ZeroMemory((PVOID)(pbmi)->dwBitFields,SIZE_MASKS))
#define RESET_HEADER(pbmi) (ZeroMemory((PVOID)(pbmi),SIZE_VIDEOHEADER))
#define RESET_PALETTE(pbmi) (ZeroMemory((PVOID)(pbmi)->bmiColors,SIZE_PALETTE));

#if 0
// !!! This is the right way to do it, but may break existing code
#define RESET_MASKS(pbmi) (ZeroMemory((PVOID)(((LPBYTE)(pbmi)->bmiHeader) + \
			(pbmi)->bmiHeader.biSize,SIZE_MASKS)))
#define RESET_HEADER(pbmi) (ZeroMemory((PVOID)(pbmi), SIZE_PREHEADER +	    \
			sizeof(BITMAPINFOHEADER)))
#define RESET_PALETTE(pbmi) (ZeroMemory((PVOID)(((LPBYTE)(pbmi)->bmiHeader) + \
			(pbmi)->bmiHeader.biSize,SIZE_PALETTE))
#endif

// Other (hopefully) useful bits and bobs

#define PALETTISED(pbmi) ((pbmi)->bmiHeader.biBitCount <= iPALETTE)
#define PALETTE_ENTRIES(pbmi) ((DWORD) 1 << (pbmi)->bmiHeader.biBitCount)

// Returns the address of the BITMAPINFOHEADER from the VIDEOINFOHEADER
#define HEADER(pVideoInfo) (&(((VIDEOINFOHEADER *) (pVideoInfo))->bmiHeader))


// MPEG variant - includes a DWORD length followed by the
// video sequence header after the video header.
//
// The sequence header includes the sequence header start code and the
// quantization matrices associated with the first sequence header in the
// stream so is a maximum of 140 bytes long.

typedef struct tagMPEG1VIDEOINFO {

    VIDEOINFOHEADER hdr;                    // Compatible with VIDEOINFO
    DWORD           dwStartTimeCode;        // 25-bit Group of pictures time code
                                            // at start of data
    DWORD           cbSequenceHeader;       // Length in bytes of bSequenceHeader
    BYTE            bSequenceHeader[1];     // Sequence header including
                                            // quantization matrices if any
} MPEG1VIDEOINFO;

#define MAX_SIZE_MPEG1_SEQUENCE_INFO 140
#define SIZE_MPEG1VIDEOINFO(pv) (FIELD_OFFSET(MPEG1VIDEOINFO, bSequenceHeader[0]) + (pv)->cbSequenceHeader)
#define MPEG1_SEQUENCE_INFO(pv) ((const BYTE *)(pv)->bSequenceHeader)


// Analog video variant - Use this when the format is FORMAT_AnalogVideo
//
// rcSource defines the portion of the active video signal to use
// rcTarget defines the destination rectangle
//    both of the above are relative to the dwActiveWidth and dwActiveHeight fields
// dwActiveWidth is currently set to 720 for all formats (but could change for HDTV)
// dwActiveHeight is 483 for NTSC and 575 for PAL/SECAM  (but could change for HDTV)

typedef struct tagAnalogVideoInfo {
    RECT            rcSource;           // Width max is 720, height varies w/ TransmissionStd
    RECT            rcTarget;           // Where the video should go
    DWORD           dwActiveWidth;      // Always 720 (CCIR-601 active samples per line)
    DWORD           dwActiveHeight;     // 483 for NTSC, 575 for PAL/SECAM
    REFERENCE_TIME  AvgTimePerFrame;    // Normal ActiveMovie units (100 nS)
} ANALOGVIDEOINFO;

//
// AM_KSPROPSETID_FrameStep property set definitions
//
typedef enum {
        //  Step
	AM_PROPERTY_FRAMESTEP_STEP   = 0x01,
	AM_PROPERTY_FRAMESTEP_CANCEL = 0x02,

        //  S_OK for these 2 means we can - S_FALSE if we can't
        AM_PROPERTY_FRAMESTEP_CANSTEP = 0x03,
        AM_PROPERTY_FRAMESTEP_CANSTEPMULTIPLE = 0x04
} AM_PROPERTY_FRAMESTEP;

typedef struct _AM_FRAMESTEP_STEP
{
    //  1 means step 1 frame forward
    //  0 is invalid
    //  n (n > 1) means skip n - 1 frames and show the nth
    DWORD dwFramesToStep;
} AM_FRAMESTEP_STEP;

#ifdef __cplusplus
}
#endif // __cplusplus
#endif // __AMVIDEO__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\anchorsyncdeviceservice.h ===
/*
 *  AnchorSyncDeviceService.h
 *
 *  Contains definitions for the Anchor Sync Device Service
 *
 *  Copyright (c) Microsoft Corporation, All Rights Reserved.
 *
 */

#ifndef _ANCHORSYNCSERVICE_H_
#define _ANCHORSYNCSERVICE_H_

#include <DeviceServices.h>
#include <SyncDeviceService.h>

/*****************************************************************************/
/*  Anchor Sync Service Info                                                 */
/*****************************************************************************/

DEFINE_DEVSVCGUID(SERVICE_AnchorSync,
    0x056d8b9e, 0xad7a, 0x44fc, 0x94, 0x6f, 0x1d, 0x63, 0xa2, 0x5c, 0xda, 0x9a);

#define NAME_AnchorSyncSvc                  L"AnchorSync"
#define TYPE_AnchorSyncSvc                  DEVSVCTYPE_ABSTRACT

/*****************************************************************************/
/*  Anchor Sync Service Properties                                           */
/*****************************************************************************/

DEFINE_DEVSVCGUID(NAMESPACE_AnchorSyncSvc,
    0xe65b8fb7, 0x8fc7, 0x4278, 0xb9, 0xa3, 0xba, 0x14, 0xc2, 0xdb, 0x40, 0xfa);

/*  PKEY_AnchorSyncSvc_VersionProps
 *
 *  Provides information about change units and version properties.  The
 *  format for the dataset is
 *
 *      UINT32      Number of change units
 *      UINT128     Namespace GUID for first change unit property key
 *      UINT32      Namespace ID for the first change unit property key
 *      UINT32      Number of properties associated with this change unit
 *      UINT128     Namespace GUID for first property key in change unit
 *      UINT32      Namespace ID for first property key in change unit
 *                  ...  Repeat for number of property keys
 *                  ...  Repeat for number of change units
 *
 *  NOTE: If all change units use the same property key specify a namespace
 *  GUID of GUID_NULL (all 0's) and a namespace ID of 0.
 *
 *  Type: AUInt8
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_AnchorSyncSvc_VersionProps,
    0xe65b8fb7, 0x8fc7, 0x4278, 0xb9, 0xa3, 0xba, 0x14, 0xc2, 0xdb, 0x40, 0xfa,
    2);

#define NAME_AnchorSyncSvc_VersionProps         L"AnchorVersionProps"


/*  PKEY_AnchorSyncSvc_ReplicaID
 *
 *  Contains the GUID representing this replica in the sync community.
 *
 *  Type: UInt128
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_AnchorSyncSvc_ReplicaID,
    0xe65b8fb7, 0x8fc7, 0x4278, 0xb9, 0xa3, 0xba, 0x14, 0xc2, 0xdb, 0x40, 0xfa,
    3);

#define NAME_AnchorSyncSvc_ReplicaID            L"AnchorReplicaID"


/*  PKEY_AnchorSyncSvc_KnowledgeObjectID
 *
 *  Object ID to be used for the knowledge object
 *
 *  Type: UInt32
 *  Form: Object ID
 */

DEFINE_DEVSVCPROPKEY(PKEY_AnchorSyncSvc_KnowledgeObjectID,
    0xe65b8fb7, 0x8fc7, 0x4278, 0xb9, 0xa3, 0xba, 0x14, 0xc2, 0xdb, 0x40, 0xfa,
    4);

#define NAME_AnchorSyncSvc_KnowledgeObjectID    L"AnchorKnowledgeObjectID"


/*  PKEY_AnchorSyncSvc_LastSyncProxyID
 *
 *  Contains a GUID indicating the last sync proxy to perform a sync operation
 *
 *  Type: UInt128
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_AnchorSyncSvc_LastSyncProxyID,
    0xe65b8fb7, 0x8fc7, 0x4278, 0xb9, 0xa3, 0xba, 0x14, 0xc2, 0xdb, 0x40, 0xfa,
    5);

#define NAME_AnchorSyncSvc_LastSyncProxyID      L"AnchorLastSyncProxyID"


/*  PKEY_AnchorSyncSvc_CurrentAnchor
 *
 *  Contains a blob of data representing the current anchor for the device.
 *  As the anchor may be transient depending on the current state of the sync
 *  the value of PKEY_AnchorSyncSvc_CurrentAnchor may not reflect the current
 *  state of the database unless the current session holds a lock (via the
 *  BeginSync method) on the service.
 *
 *  Type: AUInt8
 *  Form: BinaryArray
 */

DEFINE_DEVSVCPROPKEY(PKEY_AnchorSyncSvc_CurrentAnchor,
    0xe65b8fb7, 0x8fc7, 0x4278, 0xb9, 0xa3, 0xba, 0x14, 0xc2, 0xdb, 0x40, 0xfa,
    6);

#define NAME_AnchorSyncSvc_CurrentAnchor        L"AnchorCurrentAnchor"


/*  PKEY_AnchorSyncSvc_ProviderVersion
 *
 *  Contains a device defined value giving the version of the provider
 *  currently in use on the device.  This version must be incremented whenever
 *  new properties are added to the device implementation so that they will
 *  be recognized and managed as part of synchronization.  0 is reserved.
 *
 *  Type: UInt16
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_AnchorSyncSvc_ProviderVersion,
    0xe65b8fb7, 0x8fc7, 0x4278, 0xb9, 0xa3, 0xba, 0x14, 0xc2, 0xdb, 0x40, 0xfa,
    7);

#define NAME_AnchorSyncSvc_ProviderVersion      L"AnchorProviderVersion"


/*  PKEY_AnchorSyncSvc_SyncFormat
 *
 *  Indicates the format GUID for the object format that is to be used in the
 *  sync operation.
 *
 *  Type: UInt128
 *  Form: None
 */

#define PKEY_AnchorSyncSvc_SyncFormat           PKEY_SyncSvc_SyncFormat
#define NAME_AnchorSyncSvc_SyncFormat           NAME_SyncSvc_SyncFormat


/*  PKEY_AnchorSyncSvc_LocalOnlyDelete
 *
 *  Boolean flag indicating whether deletes of objects on the service host
 *  should be treated as "local only" and not propogated to other sync
 *  participants.  The alternative is "true sync" in which deletes on the
 *  service host are propogated to all other sync participants.
 *
 *  Type: UInt8
 *  Form: None
 */

#define PKEY_AnchorSyncSvc_LocalOnlyDelete      PKEY_SyncSvc_LocalOnlyDelete
#define NAME_AnchorSyncSvc_LocalOnlyDelete      NAME_SyncSvc_LocalOnlyDelete


/*  PKEY_AnchorSyncSvc_FilterType
 *
 *  Boolean flag indicating whether the default filter is being applied to
 *  this endpoint.  Note that the meaning of the default filter is determined
 *  by the content type service.
 *
 *  Type: UInt8
 *  Form: None
 */

#define PKEY_AnchorSyncSvc_FilterType           PKEY_SyncSvc_FilterType
#define NAME_AnchorSyncSvc_FilterType           NAME_SyncSvc_FilterType


/*****************************************************************************/
/*  Anchor Sync Service Object Formats                                       */
/*****************************************************************************/

/*  FORMAT_AnchorSyncKnowledge
 */

DEFINE_DEVSVCGUID(FORMAT_AnchorSyncKnowledge,
    0x37c550bc, 0xf231, 0x4727, 0xbb, 0xbc, 0x4c, 0xb3, 0x3a, 0x3f, 0x3e, 0xcd);

#define NAME_AnchorSyncKnowledge            L"AnchorSyncKnowledge"

/*  FORMAT_AnchorSyncSvc_AnchorResults
 *
 *  GetChangesSinceAnchor results format
 */

DEFINE_DEVSVCGUID(FORMAT_AnchorSyncSvc_AnchorResults,
    0xf35527c1, 0xce4a, 0x487a, 0x9d, 0x29, 0x93, 0x83, 0x35, 0x69, 0x32, 0x1e);

#define NAME_AnchorResults                  L"AnchorResults"

/*****************************************************************************/
/*  Anchor Sync Service Object Property Keys                                 */
/*****************************************************************************/


DEFINE_DEVSVCGUID(NAMESPACE_AnchorResults,
    0x516b5dce, 0x8d45, 0x430f, 0x80, 0x5c, 0x25, 0xe5, 0x10, 0x6d, 0x8b, 0x1f);

/*  PKEY_AnchorResults_AnchorState
 *
 *  Output parameter from GetChangesSinceAnchor method.  Contains the state
 *  of the current anchor result:
 *
 *  Type: UInt32
 *  Form: Enum
 */

DEFINE_DEVSVCPROPKEY(PKEY_AnchorResults_AnchorState,
    0x516b5dce, 0x8d45, 0x430f, 0x80, 0x5c, 0x25, 0xe5, 0x10, 0x6d, 0x8b, 0x1f,
    2);

#define NAME_AnchorResults_AnchorState      L"AnchorState"

#define ENUM_AnchorResults_AnchorStateNormal    0x00000000
#define ENUM_AnchorResults_AnchorStateInvalid   0x00000001
#define ENUM_AnchorResults_AnchorStateOld       0x00000002


/*  PKEY_AnchorResults_Anchor
 *
 *  Input parameter for GetChangesSinceAnchor method.  Contains the anchor for
 *  which data is being requested.
 *
 *  Type: AUInt8
 *  Form: None
 */

DEFINE_DEVSVCPROPKEY(PKEY_AnchorResults_Anchor,
    0x516b5dce, 0x8d45, 0x430f, 0x80, 0x5c, 0x25, 0xe5, 0x10, 0x6d, 0x8b, 0x1f,
    3);

#define NAME_AnchorResults_Anchor           L"Anchor"


/*  PKEY_AnchorResults_ResultObjectID
 *
 *  Output parameter from GetChangesSinceAnchor method.  Contains the object
 *  ID of the AnchorResults object that has the results of the
 *  GetChangesSinceAnchor operation.
 *
 *  Type: UInt32
 *  Form: Object ID
 */

DEFINE_DEVSVCPROPKEY(PKEY_AnchorResults_ResultObjectID,
    0x516b5dce, 0x8d45, 0x430f, 0x80, 0x5c, 0x25, 0xe5, 0x10, 0x6d, 0x8b, 0x1f,
    4);

#define NAME_AnchorResults_ResultObjectID   L"ResultObjectID"


/*****************************************************************************/
/*  Anchor Sync Service Methods                                              */
/*****************************************************************************/

/*  METHOD_AnchorSyncSvc_GetChangesSinceAnchor
 */

DEFINE_DEVSVCGUID(METHOD_AnchorSyncSvc_GetChangesSinceAnchor,
    0x37c550bc, 0xf231, 0x4727, 0xbb, 0xbc, 0x4c, 0xb3, 0x3a, 0x3f, 0x3e, 0xcd);

#define NAME_AnchorSyncSvc_GetChangesSinceAnchor    L"GetChangesSinceAnchor"

/*  Inherited methods
 */

#define METHOD_AnchorSyncSvc_BeginSync      METHOD_SyncSvc_BeginSync
#define NAME_AnchorSyncSvc_BeginSync        NAME_SyncSvc_BeginSync

#define METHOD_AnchorSyncSvc_EndSync        METHOD_SyncSvc_EndSync
#define NAME_AnchorSyncSvc_EndSync          NAME_SyncSvc_EndSync


/*****************************************************************************/
/*  Anchor Sync Service Additional Defines                                   */
/*****************************************************************************/

/*  ENUM_AnchorResults_ItemState*
 *
 *  This enum is used when encoding the Anchor results stream.  It defines the
 *  current state of an object.  If a device is capable of distinguishing
 *  between item update and create operations the *_ItemStateCreated and
 *  *_ItemStateUpdated enumerations should be used.  If the device cannot
 *  distinuish between a create and an up updated the *_ItemStateChanged result
 *  should be used.
 *
 *  Type: UInt32
 *  Form: Enum
 */

#define ENUM_AnchorResults_ItemStateInvalid 0x00000000
#define ENUM_AnchorResults_ItemStateDeleted 0x00000001
#define ENUM_AnchorResults_ItemStateCreated 0x00000002
#define ENUM_AnchorResults_ItemStateUpdated 0x00000003
#define ENUM_AnchorResults_ItemStateChanged 0x00000004

#endif  /* _ANCHORSYNCSERVICE_H_ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\asferr.h ===
///////////////////////////////////////////////////////////////////////////
//
// ASFErr.h - definition of ASF HRESULT codes
//
//=========================================================================
//
//  Microsoft Windows Media Technologies
//  Copyright (C) Microsoft Corporation.  All Rights Reserved.
//
//=========================================================================
//
// This file is generated by the MC tool from ASFErr.mc
//

#ifndef _ASFERR_H
#define _ASFERR_H


#define STATUS_SEVERITY(hr)  (((hr) >> 30) & 0x3)

#ifdef RC_INVOKED
#define _ASF_HRESULT_TYPEDEF_(_sc) _sc
#else // RC_INVOKED
#define _ASF_HRESULT_TYPEDEF_(_sc) ((HRESULT)_sc)
#endif // RC_INVOKED


///////////////////////////////////////////////////////////////////////////
//
// Advanced Streaming Format (ASF) Errors (2000 - 2999)
//
//
//  Values are 32 bit values layed out as follows:
//
//   3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
//   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
//  +---+-+-+-----------------------+-------------------------------+
//  |Sev|C|R|     Facility          |               Code            |
//  +---+-+-+-----------------------+-------------------------------+
//
//  where
//
//      Sev - is the severity code
//
//          00 - Success
//          01 - Informational
//          10 - Warning
//          11 - Error
//
//      C - is the Customer code flag
//
//      R - is a reserved bit
//
//      Facility - is the facility code
//
//      Code - is the facility's status code
//
//
// Define the facility codes
//
#define FACILITY_NS                      0xD


//
// Define the severity codes
//
#define STATUS_SEVERITY_WARNING          0x2
#define STATUS_SEVERITY_SUCCESS          0x0
#define STATUS_SEVERITY_INFORMATIONAL    0x1
#define STATUS_SEVERITY_ERROR            0x3


//
// MessageId: ASF_E_BUFFEROVERRUN
//
// MessageText:
//
//  An attempt was made to seek or position past the end of a buffer.%0
//
#define ASF_E_BUFFEROVERRUN              _ASF_HRESULT_TYPEDEF_(0xC00D07D0L)

//
// MessageId: ASF_E_BUFFERTOOSMALL
//
// MessageText:
//
//  The supplied input or output buffer was too small.%0
//
#define ASF_E_BUFFERTOOSMALL             _ASF_HRESULT_TYPEDEF_(0xC00D07D1L)

//
// MessageId: ASF_E_BADLANGUAGEID
//
// MessageText:
//
//  The language ID was not found.%0
//
#define ASF_E_BADLANGUAGEID              _ASF_HRESULT_TYPEDEF_(0xC00D07D2L)

//
// MessageId: ASF_E_NOPAYLOADLENGTH
//
// MessageText:
//
//  The multiple payload packet is missing the payload length.%0
//
#define ASF_E_NOPAYLOADLENGTH            _ASF_HRESULT_TYPEDEF_(0xC00D07DBL)

//
// MessageId: ASF_E_TOOMANYPAYLOADS
//
// MessageText:
//
//  The packet contains too many payloads.%0
//
#define ASF_E_TOOMANYPAYLOADS            _ASF_HRESULT_TYPEDEF_(0xC00D07DCL)

//
// MessageId: ASF_E_PACKETCONTENTTOOLARGE
//
// MessageText:
//
//  ASF_E_PACKETCONTENTTOOLARGE
//
#define ASF_E_PACKETCONTENTTOOLARGE      _ASF_HRESULT_TYPEDEF_(0xC00D07DEL)

//
// MessageId: ASF_E_UNKNOWNPACKETSIZE
//
// MessageText:
//
//  Expecting a fixed packet size but min. and max. are not equal.%0
//
#define ASF_E_UNKNOWNPACKETSIZE          _ASF_HRESULT_TYPEDEF_(0xC00D07E0L)

//
// MessageId: ASF_E_INVALIDHEADER
//
// MessageText:
//
//  ASF_E_INVALIDHEADER
//
#define ASF_E_INVALIDHEADER              _ASF_HRESULT_TYPEDEF_(0xC00D07E2L)

//
// MessageId: ASF_E_NOCLOCKOBJECT
//
// MessageText:
//
//  The object does not have a valid clock object.%0
//
#define ASF_E_NOCLOCKOBJECT              _ASF_HRESULT_TYPEDEF_(0xC00D07E6L)

//
// MessageId: ASF_E_UNKNOWNCLOCKTYPE
//
// MessageText:
//
//  ASF_E_UNKNOWNCLOCKTYPE
//
#define ASF_E_UNKNOWNCLOCKTYPE           _ASF_HRESULT_TYPEDEF_(0xC00D07EBL)

//
// MessageId: ASF_E_OPAQUEPACKET
//
// MessageText:
//
//  An attempt was made to restore or access an opaque packet.%0
//
#define ASF_E_OPAQUEPACKET               _ASF_HRESULT_TYPEDEF_(0xC00D07EDL)

//
// MessageId: ASF_E_WRONGVERSION
//
// MessageText:
//
//  ASF_E_WRONGVERSION
//
#define ASF_E_WRONGVERSION               _ASF_HRESULT_TYPEDEF_(0xC00D07EEL)

//
// MessageId: ASF_E_OVERFLOW
//
// MessageText:
//
//  An attempt was made to store a value which was larger than then destination's maximum value.%0
//
#define ASF_E_OVERFLOW                   _ASF_HRESULT_TYPEDEF_(0xC00D07EFL)

//
// MessageId: ASF_E_NOTFOUND
//
// MessageText:
//
//  The object was not found.%0
//
#define ASF_E_NOTFOUND                   _ASF_HRESULT_TYPEDEF_(0xC00D07F0L)

//
// Someone else is using MessageIds 2033 & 2034, so we skip them
// 
// 2033 = NS_E_NOTHING_TO_DO
// 2034 = NS_E_NO_MULTICAST

//
// MessageId: ASF_E_OBJECTTOOBIG
//
// MessageText:
//
//  The object is too large to be processed in the requested manner.%0
//
#define ASF_E_OBJECTTOOBIG               _ASF_HRESULT_TYPEDEF_(0xC00D07F3L)

//
// MessageId: ASF_E_UNEXPECTEDVALUE
//
// MessageText:
//
//  A value was not set as expected.%0
//
#define ASF_E_UNEXPECTEDVALUE            _ASF_HRESULT_TYPEDEF_(0xC00D07F4L)

//
// MessageId: ASF_E_INVALIDSTATE
//
// MessageText:
//
//  The request is not valid in the object's current state.%0
//
#define ASF_E_INVALIDSTATE               _ASF_HRESULT_TYPEDEF_(0xC00D07F5L)

//
// MessageId: ASF_E_NOLIBRARY
//
// MessageText:
//
//  This object does not have a valid library pointer; it was not properly created or it has been Shutdown().%0
//
#define ASF_E_NOLIBRARY                  _ASF_HRESULT_TYPEDEF_(0xC00D07F6L)

//
// MessageId: ASF_E_ALREADYINITIALIZED
//
// MessageText:
//
//  This object has already been initialized; the setting cannot be changed.%0
//
#define ASF_E_ALREADYINITIALIZED         _ASF_HRESULT_TYPEDEF_(0xC00D07F7L)

//
// MessageId: ASF_E_INVALIDINIT
//
// MessageText:
//
//  This object has not been initialized properly; that operation cannot be performed.%0
//
#define ASF_E_INVALIDINIT                _ASF_HRESULT_TYPEDEF_(0xC00D07F8L)

//
// MessageId: ASF_E_NOHEADEROBJECT
//
// MessageText:
//
//  The ASF Header object could not be found.%0
//
#define ASF_E_NOHEADEROBJECT             _ASF_HRESULT_TYPEDEF_(0xC00D07F9L)

//
// MessageId: ASF_E_NODATAOBJECT
//
// MessageText:
//
//  The ASF Data object could not be found.%0
//
#define ASF_E_NODATAOBJECT               _ASF_HRESULT_TYPEDEF_(0xC00D07FAL)

//
// MessageId: ASF_E_NOINDEXOBJECT
//
// MessageText:
//
//  The ASF Index object could not be found.%0
//
#define ASF_E_NOINDEXOBJECT              _ASF_HRESULT_TYPEDEF_(0xC00D07FBL)

//
// MessageId: ASF_E_NOSTREAMPROPS
//
// MessageText:
//
//  A Stream Properties object with the correct stream number could not be found.%0
//
#define ASF_E_NOSTREAMPROPS              _ASF_HRESULT_TYPEDEF_(0xC00D07FCL)

//
// MessageId: ASF_E_NOFILEPROPS
//
// MessageText:
//
//  The File Properties object could not be found.%0
//
#define ASF_E_NOFILEPROPS                _ASF_HRESULT_TYPEDEF_(0xC00D07FDL)

//
// MessageId: ASF_E_NOLANGUAGELIST
//
// MessageText:
//
//  The Language List object could not be found.%0
//
#define ASF_E_NOLANGUAGELIST             _ASF_HRESULT_TYPEDEF_(0xC00D07FEL)

//
// MessageId: ASF_E_NOINDEXPARAMETERS
//
// MessageText:
//
//  The Index Parameters object could not be found.%0
//
#define ASF_E_NOINDEXPARAMETERS          _ASF_HRESULT_TYPEDEF_(0xC00D07FFL)

//
// MessageId: ASF_E_UNSUPPORTEDERRORCONCEALMENT
//
// MessageText:
//
//  The requested error concealment strategy is not supported by this component.%0
//
#define ASF_E_UNSUPPORTEDERRORCONCEALMENT _ASF_HRESULT_TYPEDEF_(0xC00D0800L)

//
// MessageId: ASF_E_INVALIDFLAGS
//
// MessageText:
//
//  The flags for this object or set of objects are not properly set.%0
//
#define ASF_E_INVALIDFLAGS               _ASF_HRESULT_TYPEDEF_(0xC00D0801L)

//
// MessageId: ASF_E_BADDATADESCRIPTOR
//
// MessageText:
//
//  One or more data descriptors is not properly set.%0
//
#define ASF_E_BADDATADESCRIPTOR          _ASF_HRESULT_TYPEDEF_(0xC00D0802L)

//
// MessageId: ASF_E_BADINDEXINTERVAL
//
// MessageText:
//
//  The index has an invalid time interval (probably zero).%0
//
#define ASF_E_BADINDEXINTERVAL           _ASF_HRESULT_TYPEDEF_(0xC00D0803L)

//
// MessageId: ASF_E_INVALIDTIME
//
// MessageText:
//
//  The given time value is not valid.%0
//
#define ASF_E_INVALIDTIME                _ASF_HRESULT_TYPEDEF_(0xC00D0804L)

//
// MessageId: ASF_E_INVALIDINDEX
//
// MessageText:
//
//  The given index value is not valid.%0
//
#define ASF_E_INVALIDINDEX               _ASF_HRESULT_TYPEDEF_(0xC00D0805L)

//
// MessageId: ASF_E_STREAMNUMBERINUSE
//
// MessageText:
//
//  The specified stream number is already in use.%0
//
#define ASF_E_STREAMNUMBERINUSE          _ASF_HRESULT_TYPEDEF_(0xC00D0806L)

//
// MessageId: ASF_E_BADMEDIATYPE
//
// MessageText:
//
//  The specified media type does not work with this component.%0
//
#define ASF_E_BADMEDIATYPE               _ASF_HRESULT_TYPEDEF_(0xC00D0807L)

//
// MessageId: ASF_E_WRITEFAILED
//
// MessageText:
//
//  The object could not be written as specified.%0
//
#define ASF_E_WRITEFAILED                _ASF_HRESULT_TYPEDEF_(0xC00D0808L)

//
// MessageId: ASF_E_NOTENOUGHDESCRIPTORS
//
// MessageText:
//
//  The given data unit requires a larger number of descriptors to be fully parsed.%0
//
#define ASF_E_NOTENOUGHDESCRIPTORS       _ASF_HRESULT_TYPEDEF_(0xC00D0809L)

//
// MessageId: ASF_E_INDEXBLOCKUNLOADED
//
// MessageText:
//
//  The index entries for the specified index block have been unloaded from memory and are not available.%0
//
#define ASF_E_INDEXBLOCKUNLOADED         _ASF_HRESULT_TYPEDEF_(0xC00D080AL)

//
// MessageId: ASF_E_NOTENOUGHBANDWIDTH
//
// MessageText:
//
//  The specified bandwidth is not large enough.%0
//
#define ASF_E_NOTENOUGHBANDWIDTH         _ASF_HRESULT_TYPEDEF_(0xC00D080BL)

//
// MessageId: ASF_E_EXCEEDEDMAXIMUMOBJECTSIZE
//
// MessageText:
//
//  The object has exceeded its maximum size.%0
//
#define ASF_E_EXCEEDEDMAXIMUMOBJECTSIZE  _ASF_HRESULT_TYPEDEF_(0xC00D080CL)

//
// MessageId: ASF_E_BADDATAUNIT
//
// MessageText:
//
//  The given data unit is corrupted, badly formatted, or otherwise not valid.%0
//
#define ASF_E_BADDATAUNIT                _ASF_HRESULT_TYPEDEF_(0xC00D080DL)

//
// MessageId: ASF_E_HEADERSIZE
//
// MessageText:
//
//  The ASF header has exceeded the specified maximum size.%0
//
#define ASF_E_HEADERSIZE                 _ASF_HRESULT_TYPEDEF_(0xC00D080EL)


///////////////////////////////////////////////////////////////////////////
//
// Advanced Streaming Format (ASF) Success Codes (2000 - 2999)
//

//
// MessageId: ASF_S_OPAQUEPACKET
//
// MessageText:
//
//  ASF_S_OPAQUEPACKET
//
#define ASF_S_OPAQUEPACKET               _ASF_HRESULT_TYPEDEF_(0x000D07F0L)


///////////////////////////////////////////////////////////////////////////
//
// Advanced Streaming Format (ASF) Warnings (2000 - 2999)
//


#endif // _ASFERR_H
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AqAdmTyp.h ===
/*
        @doc ADVANCED QUEUEING DATA TYPES
        @module aqadmtyp.h | Data types used in advanced queueing interfaces
*/

/*++/

Copyright (c) 1999  Microsoft Corporation

Module Name:

    aqadmtyp.h

Abstract:

    This module defines data types used in advanced queueing interfaces


--*/
#ifndef __AQADMTYP_H__
#define __AQADMTYP_H__

#ifdef __midl
#define MIDL(x) x
#else
#define MIDL(x)
#endif

// max *required* size of buffer returned by implementor of QAPI
// If the size of the requested information exceeds this constant,
// then QAPI *may* truncate the buffer.
#define QUEUE_ADMIN_MAX_BUFFER_REQUIRED  200

// @enum QUEUE_ADMIN_VERSIONS | Enum specify current and supported
//  queue admin versions.
// @emem CURRENT_QUEUE_ADMIN_VERSION | The current queue admin version
//  that all structures should have this value in their dwVersion field.
typedef enum tagQUEUE_ADMIN_VERSIONS {
    CURRENT_QUEUE_ADMIN_VERSION = 4,
} QUEUE_ADMIN_VERSIONS;


// 
// @struct MESSAGE_FILTER | Structure describing criteria for selecting 
// messages
// @field DWORD | dwVersion | Version of MESSAGE_FILTER struct - must be CURRENT_QUEUE_ADMIN_VERSION
// @field DWORD | fFlags | <t MESSAGE_FILTER_FLAGS> indicating which 
//  fields of filter are specified
// @field LPCWSTR | szMessageId | Message ID, as returned in a MESSAGE_INFO 
// struct
// @field LPCWSTR | szMessageSender | Messages sent by this sender match
// @field LPCWSTR | szMessageRecipient | Messages sent to this recipient match
// @field DWORD | dwLargerThanSize | Messages larger than this value match
// @field SYSTEMTIME | stOlderThan | Messages older than this value match
//
typedef struct tagMESSAGE_FILTER {
                    DWORD dwVersion; 
                    DWORD fFlags;
    MIDL([string])  LPCWSTR szMessageId;
    MIDL([string])  LPCWSTR szMessageSender;
    MIDL([string])  LPCWSTR szMessageRecipient;
                    DWORD  dwLargerThanSize;
                    SYSTEMTIME stOlderThan;
} MESSAGE_FILTER, *PMESSAGE_FILTER;

// @enum MESSAGE_FILTER_FLAGS | Type specifying the type of filter 
// requested.  These are bitflags and can be OR'd together.
// @emem MF_MESSAGEID | The <e MESSAGE_FILTER.szMessageId> is specified
// @emem MF_SENDER | The <e MESSAGE_FILTER.szMessageSender> is specified
// @emem MF_RECIPIENT | The <e MESSAGE_FILTER.szMessageRecipient> is specified
// @emem MF_SIZE | The <e MESSAGE_FILTER.dwLargerThanSize> is specified
// @emem MF_TIME | The <e MESSAGE_FILTER.stOlderThan> is specified
// @emem MF_FROZEN | The <e MESSAGE_FILTER.fFrozen> is specified
// @emem MF_FAILED | Selects messages that have had a failed delivery attempt
// @emem MF_INVERTSENSE | If set, indicates that the negation of the filter
// @emem MF_ALL | Select all messages
typedef enum tagMESSAGE_FILTER_FLAGS {
                    MF_MESSAGEID                = 0x00000001,
                    MF_SENDER                   = 0x00000002,
                    MF_RECIPIENT                = 0x00000004,
                    MF_SIZE                     = 0x00000008,
                    MF_TIME                     = 0x00000010,
                    MF_FROZEN                   = 0x00000020,
                    MF_FAILED                   = 0x00000100,
                    MF_ALL                      = 0x40000000,
                    MF_INVERTSENSE              = 0x80000000
} MESSAGE_FILTER_FLAGS;

// @enum MESSAGE_ACTION | Type specifying possible administrative actions
//      that may be applied to messages in a virtual server, link, or queue
// @emem MA_DELETE | Remove message from the virtual server, link, or queue
// @emem MA_DELETE_SILENT | Remove message without generating an NDR
// @emem MA_FREEZE | Freeze the message in the virtual server, link, or queue
// @emem MA_THAW | Un-freeze the message in the virtual server, link, or queue
// @emem MA_COUNT | Null operation, does not affect messages, but does return count.
typedef enum tagMESSAGE_ACTION {
                    MA_THAW_GLOBAL              = 0x00000001, 
                    MA_COUNT                    = 0x00000002,
                    MA_FREEZE_GLOBAL            = 0x00000004,
            		MA_DELETE                   = 0x00000008,
                    MA_DELETE_SILENT            = 0x00000010
} MESSAGE_ACTION;

// @enum MESSAGE_ENUM_FILTER_TYPE | Type specifying the type of filter 
// requested.  These are bitflags and can be OR'd together.
// @emem MEF_FIRST_N_MESSAGES | Return the first 
// <e MESSAGE_ENUM_FILTER.cMessages> messages
// @emem MEF_N_LARGEST_MESSAGES | Return the largest 
// <e MESSAGE_ENUM_FILTER.cMessages> messages
// @emem MEF_N_OLDEST_MESSAGES | Return the oldest
// <e MESSAGE_ENUM_FILTER.cMessages> messages
// @emem MF_SENDER | The <e MESSAGE_ENUM_FILTER.szMessageSender> is specified
// @emem MF_RECIPIENT | The <e MESSAGE_ENUM_FILTER.szMessageRecipient> is specified
// @emem MEF_OLDER_THAN | Return messages older than 
// <e MESSAGE_ENUM_FILTER.stDate>
// @emem MEF_LARGER_THAN | Return messages larger than 
// <e MESSAGE_ENUM_FILTER.cbSize> bytes
// @emem MEF_FROZEN | Return messages that are frozen
// @emem MEF_INVERTSENSE  | Invert the meaning of the filter
// @emem MEF_ALL | Select all messages
// @emem MEF_FAILED | Return only messages that have had failed delivery
// attempts.
typedef enum tagMESSAGE_ENUM_FILTER_TYPE {
                    MEF_FIRST_N_MESSAGES        = 0x00000001,
                    MEF_SENDER                  = 0x00000002,
                    MEF_RECIPIENT               = 0x00000004,
                    MEF_LARGER_THAN             = 0x00000008,
                    MEF_OLDER_THAN              = 0x00000010,
                    MEF_FROZEN                  = 0x00000020,
                    MEF_N_LARGEST_MESSAGES      = 0x00000040,
                    MEF_N_OLDEST_MESSAGES       = 0x00000080,
                    MEF_FAILED                  = 0x00000100,
                    MEF_ALL                     = 0x40000000,
                    MEF_INVERTSENSE             = 0x80000000,
} MESSAGE_ENUM_FILTER_TYPE;

// @struct MESSAGE_ENUM_FILTER | Structure describing criteria for enumerating
// messages
// @field DWORD | dwVersion | Version of filter - must be CURRENT_QUEUE_ADMIN_VERSION
// @field MESSAGE_ENUM_FILTER_TYPE | mefType | <t MESSAGE_ENUM_FILTER_TYPE> Flags for filter.
// @field DWORD | cMessages | Number of messages to return
// @field DWORD | cbSize | Size parameter of messages
// @field DWORD | cSkipMessages | Number of messages at front of queue to skip.
//  This is provided to allow "paged" queries to the server.
// @field SYSTEMTIME | stDate | Date/Time parameter of messages
typedef struct tagMESSAGE_ENUM_FILTER {
                    DWORD dwVersion;
                    DWORD mefType;
                    DWORD cMessages;
                    DWORD cbSize;
                    DWORD cSkipMessages;
                    SYSTEMTIME stDate;
    MIDL([string])  LPCWSTR szMessageSender;
    MIDL([string])  LPCWSTR szMessageRecipient;
} MESSAGE_ENUM_FILTER, *PMESSAGE_ENUM_FILTER;


// @enum LINK_INFO_FLAGS | Type specifying the state of the link 
// @emem LI_ACTIVE | Link has an active connection transferring mail
// @emem LI_READY | Link is ready for a connection, but there are no connections
// @emem LI_RETRY | Link is waiting for the retry interval to elapse
// @emem LI_SCHEDULED | Link is waiting for the next scheduled time
// @emem LI_REMOTE | Link is to be activated by remote server. A connection
//  will not be made unless requested by a remote server.
// @emem LI_FROZEN | Link was frozen by administrative action
// @emem LI_TYPE_REMOTE_DELIVERY | Messages on link are being delivered
//  remotely.  This is the default type of link.
// @emem LI_TYPE_LOCAL_DELIVERY | Messages on this link are being delivered
//  locally.
// @emem LI_TYPE_PENDING_CAT | Messages on this link are pending message
//  categorization.
// @emem LI_TYPE_PENDING_ROUTING | Messages on this link have not been routed
//  to their next hop.
// @emem LI_TYPE_CURRENTLY_UNREACHABLE | Messages on this link do not have an 
//  available route to their final destination.  This is due to transient 
//  network or server errors.  These messages will be retried when a route
//  becomes available.
// @emem LI_TYPE_INTERNAL | This link is an internal link not described 
//  by the above.
typedef enum tagLINK_INFO_FLAGS {
                    LI_ACTIVE                       = 0x00000001,
                    LI_READY                        = 0x00000002,
                    LI_RETRY                        = 0x00000004,
                    LI_SCHEDULED                    = 0x00000008,
                    LI_REMOTE                       = 0x00000010,
                    LI_FROZEN                       = 0x00000020,
                    LI_TYPE_REMOTE_DELIVERY         = 0x00000100,
                    LI_TYPE_LOCAL_DELIVERY          = 0x00000200,
                    LI_TYPE_PENDING_ROUTING         = 0x00000400,
                    LI_TYPE_PENDING_CAT             = 0x00000800,
                    LI_TYPE_CURRENTLY_UNREACHABLE   = 0x00001000,
                    LI_TYPE_DEFERRED_DELIVERY       = 0x00002000,
                    LI_TYPE_INTERNAL                = 0x00004000,
                    LI_TYPE_PENDING_SUBMIT          = 0x00008000,
} LINK_INFO_FLAGS;

// @enum LINK_ACTION | Actions that can be applied to a link
// @emem LA_KICK | Force a connection to be made for this link. 
//  This will even work for connections pending retry or a scheduled connection.
// @emem LA_FREEZE | Prevent outbound connections from being made for a link
// @emem LA_THAW | Undo a previous admin freeze action.
typedef enum tagLINK_ACTION {
                    LA_INTERNAL                 = 0x00000000,
                    LA_KICK                     = 0x00000001,
                    LA_FREEZE                   = 0x00000020,
                    LA_THAW                     = 0x00000040,
} LINK_ACTION;

//
// @struct LINK_INFO | Structure describing state of a virtual server AQ link
// @field DWORD | dwVersion | Version of LINK_INFO structure - will be CURRENT_QUEUE_ADMIN_VERSION
// @field LPWSTR | szLinkName | Name of next-hop
// @field DWORD | cMessages | Number of messages queued up for this link
// @field DWORD | fStateFlags | <t LINK_INFO_FLAGS> indicating Link State
// @field SYSTEMTIME | stNextScheduledConnection | The time at which the next
// connection will be attempted.
// @field SYSTEMTIME | stOldestMessage | The oldest message on this link
// @field ULARGE_INTEGER | cbLinkVolume | Total number of bytes on link
// @field LPWSTR | szLinkDN | DN associated with this link by routing.  Can be NULL.
// @field LPWSTR | szExtendedStateInfo | If present, this provides additional state
// information about why a link is in <t LI_RETRY> state.
// @field DWORD | dwSupportedLinkActions | Tells which <t LINK_ACTIONS> are supported
// by this link.
typedef struct tagLINK_INFO {
                    DWORD dwVersion; 
    MIDL([string])  LPWSTR szLinkName;
                    DWORD cMessages;
                    DWORD fStateFlags;
                    SYSTEMTIME stNextScheduledConnection;
                    SYSTEMTIME stOldestMessage;
                    ULARGE_INTEGER cbLinkVolume;
    MIDL([string])  LPWSTR szLinkDN;
    MIDL([string])  LPWSTR szExtendedStateInfo;
                    DWORD  dwSupportedLinkActions;
} LINK_INFO, *PLINK_INFO;

//
// @struct QUEUE_INFO | Structure describing state of a virtual server link 
// queue
// @field DWORD | dwVersion | Version of LINK_INFO structure - will be CURRENT_QUEUE_ADMIN_VERSION
// @field LPWSTR | szQueueName | Name of queue
// @field LPWSTR | szLinkName | Name of link that is servicing this queue
// @field DWORD | cMessages | Number of messages on this queue
// @field ULARGE_INTEGER | cbQueueVolume | Total number of bytes on queue
// @field DWORD | dwMsgEnumFlagsSupported | The types of message enumeration supported
typedef struct tagQUEUE_INFO {
                    DWORD dwVersion; 
    MIDL([string])  LPWSTR szQueueName;
    MIDL([string])  LPWSTR szLinkName;
                    DWORD cMessages;
                    ULARGE_INTEGER cbQueueVolume;
                    DWORD dwMsgEnumFlagsSupported;
} QUEUE_INFO, *PQUEUE_INFO;

//
// @enum AQ_MESSAGE_FLAGS | Flags describing message properties
// @flag MP_HIGH | High Priority Message
// @flag MP_NORMAL | Normal Priority Message
// @flag MP_LOW | Low Priority Message
// @flag MP_MSG_FROZEN | Message has been frozen by admin.
// @flag MP_MSG_RETRY | Delivery has been attempted and failed at least once
//  for this message.
// @flag MP_MSG_CONTENT_AVAILABLE | The content for this message can be 
//  accessed through the QAPI.
typedef enum tagAQ_MESSAGE_FLAGS {
                    MP_HIGH                     = 0x00000001,
                    MP_NORMAL                   = 0x00000002,
                    MP_LOW                      = 0x00000004,
                    MP_MSG_FROZEN               = 0x00000008,
                    MP_MSG_RETRY                = 0x00000010,
                    MP_MSG_CONTENT_AVAILABLE    = 0x00000020,
} AQ_MESSAGE_FLAGS;

// @struct MESSAGE_INFO | Structure describing a single mail message
// @field DWORD | dwVersion | Version of LINK_INFO structure - will be CURRENT_QUEUE_ADMIN_VERSION
// @field LPWSTR | szMessageId | Message ID
// @field LPWSTR | szSender | Sender Address, from "From:" header
// @field LPWSTR | szSubject | Message Subject
// @field DWORD | cRecipients | Number of recipients
// @field LPWSTR | szRecipients | Recipient Addresses, from "To:" header
// @field DWORD | cCCRecipients | Number of CC recipients
// @field LPWSTR | szCCRecipients | CC Recipient Addresses, from "CC:" header
// @field DWORD | cBCCRecipients | Number of BCC recipients
// @field LPWSTR | szBCCRecipients | BCC Recipient Addresses, from "BCC:" header
// @field DWORD | cbMessageSize | size of message in bytes
// @field DWORD | fMsgFlags | <t AQ_MESSAGE_FLAGS> describing message properties.
// @field SYSTEMTIME | stSubmission | Time of message submission
// @field SYSTEMTIME | stReceived | Time message was received by this server
// @field SYSTEMTIME | stExpiry | Time message will expire by if not delivered
// to all recipients, thus generating an NDR
// @field DWORD | cFailures | The number of failured delivery attempts for 
// this message
// @field DWORD | cEnvRecipients | The number of envelope recipeints
// @field DWORD | cbEnvRecipients | The size in bytes of the envelope recipients
// @field WCHAR * | mszEnvRecipients | A multi-string UNICODE buffer containing
// a NULL-terminated string for each recipient.  The buffer itself is terminated
// by an additional NULL.  Each recipient string will be formatted in the proxy
// address format of 'addr-type ":" address'.  The addr-type should match
// the address type found in the DS (ie SMTP).  The address should be returned 
// in it's native format.
typedef struct tagMESSAGE_INFO {
                                    DWORD dwVersion; 
    MIDL([string])                  LPWSTR szMessageId;
    MIDL([string])                  LPWSTR szSender;
    MIDL([string])                  LPWSTR szSubject;
                                    DWORD cRecipients;
    MIDL([string])                  LPWSTR szRecipients;
                                    DWORD cCCRecipients;
    MIDL([string])                  LPWSTR szCCRecipients;
                                    DWORD cBCCRecipients;
    MIDL([string])                  LPWSTR szBCCRecipients;
                                    DWORD fMsgFlags;
                                    DWORD cbMessageSize;
                                    SYSTEMTIME stSubmission;
                                    SYSTEMTIME stReceived;
                                    SYSTEMTIME stExpiry;
                                    DWORD cFailures;
                                    DWORD cEnvRecipients;
                                    DWORD cbEnvRecipients;
    MIDL([size_is(cbEnvRecipients/sizeof(WCHAR))]) WCHAR *mszEnvRecipients;
} MESSAGE_INFO, *PMESSAGE_INFO;

typedef enum tagQUEUELINK_TYPE {
                    QLT_QUEUE,
                    QLT_LINK,
                    QLT_NONE
} QUEUELINK_TYPE;

typedef struct tagQUEUELINK_ID {
                    GUID            uuid;
    MIDL([string])  LPWSTR          szName;
                    DWORD           dwId;
                    QUEUELINK_TYPE  qltType;
} QUEUELINK_ID;

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\atacct.h ===
/*++

Copyright (c) 2002  Microsoft Corporation

Module Name:

    atacct.h

Abstract:

    Prototypes for the AT Service Account API.

Revision History:

--*/

#ifndef _ATACCT_H_
#define _ATACCT_H_

#ifdef __cplusplus
extern "C" {
#endif

STDAPI
GetNetScheduleAccountInformation(
    IN    LPCWSTR pwszServerName,
    OUT   DWORD ccAccount,
    OUT __out_ecount(ccAccount)  WCHAR wszAccount[]
    );

STDAPI
SetNetScheduleAccountInformation(
    IN    LPCWSTR pwszServerName,
    IN    LPCWSTR pwszAccount,
    IN    LPCWSTR pwszPassword
    );

#ifdef __cplusplus
}
#endif

#endif // _ATACCT_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\atscpsipparser.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for atscpsipparser.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __atscpsipparser_h__
#define __atscpsipparser_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IAtscPsipParser_FWD_DEFINED__
#define __IAtscPsipParser_FWD_DEFINED__
typedef interface IAtscPsipParser IAtscPsipParser;
#endif 	/* __IAtscPsipParser_FWD_DEFINED__ */


#ifndef __IATSC_MGT_FWD_DEFINED__
#define __IATSC_MGT_FWD_DEFINED__
typedef interface IATSC_MGT IATSC_MGT;
#endif 	/* __IATSC_MGT_FWD_DEFINED__ */


#ifndef __IATSC_VCT_FWD_DEFINED__
#define __IATSC_VCT_FWD_DEFINED__
typedef interface IATSC_VCT IATSC_VCT;
#endif 	/* __IATSC_VCT_FWD_DEFINED__ */


#ifndef __IATSC_EIT_FWD_DEFINED__
#define __IATSC_EIT_FWD_DEFINED__
typedef interface IATSC_EIT IATSC_EIT;
#endif 	/* __IATSC_EIT_FWD_DEFINED__ */


#ifndef __IATSC_ETT_FWD_DEFINED__
#define __IATSC_ETT_FWD_DEFINED__
typedef interface IATSC_ETT IATSC_ETT;
#endif 	/* __IATSC_ETT_FWD_DEFINED__ */


#ifndef __IATSC_STT_FWD_DEFINED__
#define __IATSC_STT_FWD_DEFINED__
typedef interface IATSC_STT IATSC_STT;
#endif 	/* __IATSC_STT_FWD_DEFINED__ */


#ifndef __ISCTE_EAS_FWD_DEFINED__
#define __ISCTE_EAS_FWD_DEFINED__
typedef interface ISCTE_EAS ISCTE_EAS;
#endif 	/* __ISCTE_EAS_FWD_DEFINED__ */


#ifndef __IAtscContentAdvisoryDescriptor_FWD_DEFINED__
#define __IAtscContentAdvisoryDescriptor_FWD_DEFINED__
typedef interface IAtscContentAdvisoryDescriptor IAtscContentAdvisoryDescriptor;
#endif 	/* __IAtscContentAdvisoryDescriptor_FWD_DEFINED__ */


#ifndef __ICaptionServiceDescriptor_FWD_DEFINED__
#define __ICaptionServiceDescriptor_FWD_DEFINED__
typedef interface ICaptionServiceDescriptor ICaptionServiceDescriptor;
#endif 	/* __ICaptionServiceDescriptor_FWD_DEFINED__ */


#ifndef __IServiceLocationDescriptor_FWD_DEFINED__
#define __IServiceLocationDescriptor_FWD_DEFINED__
typedef interface IServiceLocationDescriptor IServiceLocationDescriptor;
#endif 	/* __IServiceLocationDescriptor_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "mpeg2structs.h"
#include "mpeg2data.h"
#include "mpeg2psiparser.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_atscpsipparser_0000_0000 */
/* [local] */ 











#define ATSC_ETM_LOCATION_NOT_PRESENT        0x00
#define ATSC_ETM_LOCATION_IN_PTC_FOR_PSIP    0x01
#define ATSC_ETM_LOCATION_IN_PTC_FOR_EVENT   0x02
#define ATSC_ETM_LOCATION_RESERVED           0x03


extern RPC_IF_HANDLE __MIDL_itf_atscpsipparser_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_atscpsipparser_0000_0000_v0_0_s_ifspec;

#ifndef __IAtscPsipParser_INTERFACE_DEFINED__
#define __IAtscPsipParser_INTERFACE_DEFINED__

/* interface IAtscPsipParser */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IAtscPsipParser;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B2C98995-5EB2-4fb1-B406-F3E8E2026A9A")
    IAtscPsipParser : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt IUnknown *punkMpeg2Data) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPAT( 
            /* [out] */ __RPC__deref_out_opt IPAT **ppPAT) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCAT( 
            /* [in] */ DWORD dwTimeout,
            /* [out] */ __RPC__deref_out_opt ICAT **ppCAT) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPMT( 
            /* [in] */ PID pid,
            /* [in] */ __RPC__in WORD *pwProgramNumber,
            /* [out] */ __RPC__deref_out_opt IPMT **ppPMT) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTSDT( 
            /* [out] */ __RPC__deref_out_opt ITSDT **ppTSDT) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMGT( 
            /* [out] */ __RPC__deref_out_opt IATSC_MGT **ppMGT) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVCT( 
            /* [in] */ TID tableId,
            /* [in] */ BOOL fGetNextTable,
            /* [out] */ __RPC__deref_out_opt IATSC_VCT **ppVCT) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEIT( 
            /* [in] */ PID pid,
            /* [in] */ __RPC__in WORD *pwSourceId,
            /* [in] */ DWORD dwTimeout,
            /* [out] */ __RPC__deref_out_opt IATSC_EIT **ppEIT) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetETT( 
            /* [in] */ PID pid,
            /* [in] */ __RPC__in WORD *wSourceId,
            /* [in] */ __RPC__in WORD *pwEventId,
            /* [out] */ __RPC__deref_out_opt IATSC_ETT **ppETT) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSTT( 
            /* [out] */ __RPC__deref_out_opt IATSC_STT **ppSTT) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEAS( 
            /* [in] */ PID pid,
            /* [out] */ __RPC__deref_out_opt ISCTE_EAS **ppEAS) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAtscPsipParserVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAtscPsipParser * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAtscPsipParser * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAtscPsipParser * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IAtscPsipParser * This,
            /* [in] */ __RPC__in_opt IUnknown *punkMpeg2Data);
        
        HRESULT ( STDMETHODCALLTYPE *GetPAT )( 
            __RPC__in IAtscPsipParser * This,
            /* [out] */ __RPC__deref_out_opt IPAT **ppPAT);
        
        HRESULT ( STDMETHODCALLTYPE *GetCAT )( 
            __RPC__in IAtscPsipParser * This,
            /* [in] */ DWORD dwTimeout,
            /* [out] */ __RPC__deref_out_opt ICAT **ppCAT);
        
        HRESULT ( STDMETHODCALLTYPE *GetPMT )( 
            __RPC__in IAtscPsipParser * This,
            /* [in] */ PID pid,
            /* [in] */ __RPC__in WORD *pwProgramNumber,
            /* [out] */ __RPC__deref_out_opt IPMT **ppPMT);
        
        HRESULT ( STDMETHODCALLTYPE *GetTSDT )( 
            __RPC__in IAtscPsipParser * This,
            /* [out] */ __RPC__deref_out_opt ITSDT **ppTSDT);
        
        HRESULT ( STDMETHODCALLTYPE *GetMGT )( 
            __RPC__in IAtscPsipParser * This,
            /* [out] */ __RPC__deref_out_opt IATSC_MGT **ppMGT);
        
        HRESULT ( STDMETHODCALLTYPE *GetVCT )( 
            __RPC__in IAtscPsipParser * This,
            /* [in] */ TID tableId,
            /* [in] */ BOOL fGetNextTable,
            /* [out] */ __RPC__deref_out_opt IATSC_VCT **ppVCT);
        
        HRESULT ( STDMETHODCALLTYPE *GetEIT )( 
            __RPC__in IAtscPsipParser * This,
            /* [in] */ PID pid,
            /* [in] */ __RPC__in WORD *pwSourceId,
            /* [in] */ DWORD dwTimeout,
            /* [out] */ __RPC__deref_out_opt IATSC_EIT **ppEIT);
        
        HRESULT ( STDMETHODCALLTYPE *GetETT )( 
            __RPC__in IAtscPsipParser * This,
            /* [in] */ PID pid,
            /* [in] */ __RPC__in WORD *wSourceId,
            /* [in] */ __RPC__in WORD *pwEventId,
            /* [out] */ __RPC__deref_out_opt IATSC_ETT **ppETT);
        
        HRESULT ( STDMETHODCALLTYPE *GetSTT )( 
            __RPC__in IAtscPsipParser * This,
            /* [out] */ __RPC__deref_out_opt IATSC_STT **ppSTT);
        
        HRESULT ( STDMETHODCALLTYPE *GetEAS )( 
            __RPC__in IAtscPsipParser * This,
            /* [in] */ PID pid,
            /* [out] */ __RPC__deref_out_opt ISCTE_EAS **ppEAS);
        
        END_INTERFACE
    } IAtscPsipParserVtbl;

    interface IAtscPsipParser
    {
        CONST_VTBL struct IAtscPsipParserVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAtscPsipParser_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAtscPsipParser_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAtscPsipParser_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAtscPsipParser_Initialize(This,punkMpeg2Data)	\
    ( (This)->lpVtbl -> Initialize(This,punkMpeg2Data) ) 

#define IAtscPsipParser_GetPAT(This,ppPAT)	\
    ( (This)->lpVtbl -> GetPAT(This,ppPAT) ) 

#define IAtscPsipParser_GetCAT(This,dwTimeout,ppCAT)	\
    ( (This)->lpVtbl -> GetCAT(This,dwTimeout,ppCAT) ) 

#define IAtscPsipParser_GetPMT(This,pid,pwProgramNumber,ppPMT)	\
    ( (This)->lpVtbl -> GetPMT(This,pid,pwProgramNumber,ppPMT) ) 

#define IAtscPsipParser_GetTSDT(This,ppTSDT)	\
    ( (This)->lpVtbl -> GetTSDT(This,ppTSDT) ) 

#define IAtscPsipParser_GetMGT(This,ppMGT)	\
    ( (This)->lpVtbl -> GetMGT(This,ppMGT) ) 

#define IAtscPsipParser_GetVCT(This,tableId,fGetNextTable,ppVCT)	\
    ( (This)->lpVtbl -> GetVCT(This,tableId,fGetNextTable,ppVCT) ) 

#define IAtscPsipParser_GetEIT(This,pid,pwSourceId,dwTimeout,ppEIT)	\
    ( (This)->lpVtbl -> GetEIT(This,pid,pwSourceId,dwTimeout,ppEIT) ) 

#define IAtscPsipParser_GetETT(This,pid,wSourceId,pwEventId,ppETT)	\
    ( (This)->lpVtbl -> GetETT(This,pid,wSourceId,pwEventId,ppETT) ) 

#define IAtscPsipParser_GetSTT(This,ppSTT)	\
    ( (This)->lpVtbl -> GetSTT(This,ppSTT) ) 

#define IAtscPsipParser_GetEAS(This,pid,ppEAS)	\
    ( (This)->lpVtbl -> GetEAS(This,pid,ppEAS) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAtscPsipParser_INTERFACE_DEFINED__ */


#ifndef __IATSC_MGT_INTERFACE_DEFINED__
#define __IATSC_MGT_INTERFACE_DEFINED__

/* interface IATSC_MGT */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IATSC_MGT;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8877dabd-c137-4073-97e3-779407a5d87a")
    IATSC_MGT : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt ISectionList *pSectionList,
            /* [in] */ __RPC__in_opt IMpeg2Data *pMPEGData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVersionNumber( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProtocolVersion( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCountOfRecords( 
            /* [out] */ __RPC__out DWORD *pdwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordType( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordTypePid( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out PID *ppidVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordVersionNumber( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordCountOfDescriptors( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out DWORD *pdwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordDescriptorByIndex( 
            /* [in] */ DWORD dwRecordIndex,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordDescriptorByTag( 
            /* [in] */ DWORD dwRecordIndex,
            /* [in] */ BYTE bTag,
            /* [out][in] */ __RPC__inout DWORD *pdwCookie,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCountOfTableDescriptors( 
            /* [in] */ __RPC__in DWORD *pdwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTableDescriptorByIndex( 
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTableDescriptorByTag( 
            /* [in] */ BYTE bTag,
            /* [out][in] */ __RPC__inout DWORD *pdwCookie,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IATSC_MGTVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IATSC_MGT * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IATSC_MGT * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IATSC_MGT * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IATSC_MGT * This,
            /* [in] */ __RPC__in_opt ISectionList *pSectionList,
            /* [in] */ __RPC__in_opt IMpeg2Data *pMPEGData);
        
        HRESULT ( STDMETHODCALLTYPE *GetVersionNumber )( 
            __RPC__in IATSC_MGT * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProtocolVersion )( 
            __RPC__in IATSC_MGT * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetCountOfRecords )( 
            __RPC__in IATSC_MGT * This,
            /* [out] */ __RPC__out DWORD *pdwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordType )( 
            __RPC__in IATSC_MGT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordTypePid )( 
            __RPC__in IATSC_MGT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out PID *ppidVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordVersionNumber )( 
            __RPC__in IATSC_MGT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordCountOfDescriptors )( 
            __RPC__in IATSC_MGT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out DWORD *pdwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordDescriptorByIndex )( 
            __RPC__in IATSC_MGT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordDescriptorByTag )( 
            __RPC__in IATSC_MGT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [in] */ BYTE bTag,
            /* [out][in] */ __RPC__inout DWORD *pdwCookie,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor);
        
        HRESULT ( STDMETHODCALLTYPE *GetCountOfTableDescriptors )( 
            __RPC__in IATSC_MGT * This,
            /* [in] */ __RPC__in DWORD *pdwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetTableDescriptorByIndex )( 
            __RPC__in IATSC_MGT * This,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor);
        
        HRESULT ( STDMETHODCALLTYPE *GetTableDescriptorByTag )( 
            __RPC__in IATSC_MGT * This,
            /* [in] */ BYTE bTag,
            /* [out][in] */ __RPC__inout DWORD *pdwCookie,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor);
        
        END_INTERFACE
    } IATSC_MGTVtbl;

    interface IATSC_MGT
    {
        CONST_VTBL struct IATSC_MGTVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IATSC_MGT_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IATSC_MGT_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IATSC_MGT_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IATSC_MGT_Initialize(This,pSectionList,pMPEGData)	\
    ( (This)->lpVtbl -> Initialize(This,pSectionList,pMPEGData) ) 

#define IATSC_MGT_GetVersionNumber(This,pbVal)	\
    ( (This)->lpVtbl -> GetVersionNumber(This,pbVal) ) 

#define IATSC_MGT_GetProtocolVersion(This,pbVal)	\
    ( (This)->lpVtbl -> GetProtocolVersion(This,pbVal) ) 

#define IATSC_MGT_GetCountOfRecords(This,pdwVal)	\
    ( (This)->lpVtbl -> GetCountOfRecords(This,pdwVal) ) 

#define IATSC_MGT_GetRecordType(This,dwRecordIndex,pwVal)	\
    ( (This)->lpVtbl -> GetRecordType(This,dwRecordIndex,pwVal) ) 

#define IATSC_MGT_GetRecordTypePid(This,dwRecordIndex,ppidVal)	\
    ( (This)->lpVtbl -> GetRecordTypePid(This,dwRecordIndex,ppidVal) ) 

#define IATSC_MGT_GetRecordVersionNumber(This,dwRecordIndex,pbVal)	\
    ( (This)->lpVtbl -> GetRecordVersionNumber(This,dwRecordIndex,pbVal) ) 

#define IATSC_MGT_GetRecordCountOfDescriptors(This,dwRecordIndex,pdwVal)	\
    ( (This)->lpVtbl -> GetRecordCountOfDescriptors(This,dwRecordIndex,pdwVal) ) 

#define IATSC_MGT_GetRecordDescriptorByIndex(This,dwRecordIndex,dwIndex,ppDescriptor)	\
    ( (This)->lpVtbl -> GetRecordDescriptorByIndex(This,dwRecordIndex,dwIndex,ppDescriptor) ) 

#define IATSC_MGT_GetRecordDescriptorByTag(This,dwRecordIndex,bTag,pdwCookie,ppDescriptor)	\
    ( (This)->lpVtbl -> GetRecordDescriptorByTag(This,dwRecordIndex,bTag,pdwCookie,ppDescriptor) ) 

#define IATSC_MGT_GetCountOfTableDescriptors(This,pdwVal)	\
    ( (This)->lpVtbl -> GetCountOfTableDescriptors(This,pdwVal) ) 

#define IATSC_MGT_GetTableDescriptorByIndex(This,dwIndex,ppDescriptor)	\
    ( (This)->lpVtbl -> GetTableDescriptorByIndex(This,dwIndex,ppDescriptor) ) 

#define IATSC_MGT_GetTableDescriptorByTag(This,bTag,pdwCookie,ppDescriptor)	\
    ( (This)->lpVtbl -> GetTableDescriptorByTag(This,bTag,pdwCookie,ppDescriptor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IATSC_MGT_INTERFACE_DEFINED__ */


#ifndef __IATSC_VCT_INTERFACE_DEFINED__
#define __IATSC_VCT_INTERFACE_DEFINED__

/* interface IATSC_VCT */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IATSC_VCT;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("26879a18-32f9-46c6-91f0-fb6479270e8c")
    IATSC_VCT : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt ISectionList *pSectionList,
            /* [in] */ __RPC__in_opt IMpeg2Data *pMPEGData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVersionNumber( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTransportStreamId( 
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProtocolVersion( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCountOfRecords( 
            /* [out] */ __RPC__out DWORD *pdwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordName( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__deref_out_opt WCHAR **pwsName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordMajorChannelNumber( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordMinorChannelNumber( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordModulationMode( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordCarrierFrequency( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out DWORD *pdwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordTransportStreamId( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordProgramNumber( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordEtmLocation( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordIsAccessControlledBitSet( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BOOL *pfVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordIsHiddenBitSet( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BOOL *pfVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordIsPathSelectBitSet( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BOOL *pfVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordIsOutOfBandBitSet( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BOOL *pfVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordIsHideGuideBitSet( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BOOL *pfVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordServiceType( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordSourceId( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordCountOfDescriptors( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out DWORD *pdwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordDescriptorByIndex( 
            /* [in] */ DWORD dwRecordIndex,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordDescriptorByTag( 
            /* [in] */ DWORD dwRecordIndex,
            /* [in] */ BYTE bTag,
            /* [out][in] */ __RPC__inout DWORD *pdwCookie,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCountOfTableDescriptors( 
            /* [in] */ __RPC__in DWORD *pdwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTableDescriptorByIndex( 
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTableDescriptorByTag( 
            /* [in] */ BYTE bTag,
            /* [out][in] */ __RPC__inout DWORD *pdwCookie,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IATSC_VCTVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IATSC_VCT * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IATSC_VCT * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ __RPC__in_opt ISectionList *pSectionList,
            /* [in] */ __RPC__in_opt IMpeg2Data *pMPEGData);
        
        HRESULT ( STDMETHODCALLTYPE *GetVersionNumber )( 
            __RPC__in IATSC_VCT * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetTransportStreamId )( 
            __RPC__in IATSC_VCT * This,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProtocolVersion )( 
            __RPC__in IATSC_VCT * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetCountOfRecords )( 
            __RPC__in IATSC_VCT * This,
            /* [out] */ __RPC__out DWORD *pdwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordName )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__deref_out_opt WCHAR **pwsName);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordMajorChannelNumber )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordMinorChannelNumber )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordModulationMode )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordCarrierFrequency )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out DWORD *pdwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordTransportStreamId )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordProgramNumber )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordEtmLocation )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordIsAccessControlledBitSet )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BOOL *pfVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordIsHiddenBitSet )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BOOL *pfVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordIsPathSelectBitSet )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BOOL *pfVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordIsOutOfBandBitSet )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BOOL *pfVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordIsHideGuideBitSet )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BOOL *pfVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordServiceType )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordSourceId )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordCountOfDescriptors )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out DWORD *pdwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordDescriptorByIndex )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordDescriptorByTag )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [in] */ BYTE bTag,
            /* [out][in] */ __RPC__inout DWORD *pdwCookie,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor);
        
        HRESULT ( STDMETHODCALLTYPE *GetCountOfTableDescriptors )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ __RPC__in DWORD *pdwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetTableDescriptorByIndex )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor);
        
        HRESULT ( STDMETHODCALLTYPE *GetTableDescriptorByTag )( 
            __RPC__in IATSC_VCT * This,
            /* [in] */ BYTE bTag,
            /* [out][in] */ __RPC__inout DWORD *pdwCookie,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor);
        
        END_INTERFACE
    } IATSC_VCTVtbl;

    interface IATSC_VCT
    {
        CONST_VTBL struct IATSC_VCTVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IATSC_VCT_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IATSC_VCT_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IATSC_VCT_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IATSC_VCT_Initialize(This,pSectionList,pMPEGData)	\
    ( (This)->lpVtbl -> Initialize(This,pSectionList,pMPEGData) ) 

#define IATSC_VCT_GetVersionNumber(This,pbVal)	\
    ( (This)->lpVtbl -> GetVersionNumber(This,pbVal) ) 

#define IATSC_VCT_GetTransportStreamId(This,pwVal)	\
    ( (This)->lpVtbl -> GetTransportStreamId(This,pwVal) ) 

#define IATSC_VCT_GetProtocolVersion(This,pbVal)	\
    ( (This)->lpVtbl -> GetProtocolVersion(This,pbVal) ) 

#define IATSC_VCT_GetCountOfRecords(This,pdwVal)	\
    ( (This)->lpVtbl -> GetCountOfRecords(This,pdwVal) ) 

#define IATSC_VCT_GetRecordName(This,dwRecordIndex,pwsName)	\
    ( (This)->lpVtbl -> GetRecordName(This,dwRecordIndex,pwsName) ) 

#define IATSC_VCT_GetRecordMajorChannelNumber(This,dwRecordIndex,pwVal)	\
    ( (This)->lpVtbl -> GetRecordMajorChannelNumber(This,dwRecordIndex,pwVal) ) 

#define IATSC_VCT_GetRecordMinorChannelNumber(This,dwRecordIndex,pwVal)	\
    ( (This)->lpVtbl -> GetRecordMinorChannelNumber(This,dwRecordIndex,pwVal) ) 

#define IATSC_VCT_GetRecordModulationMode(This,dwRecordIndex,pbVal)	\
    ( (This)->lpVtbl -> GetRecordModulationMode(This,dwRecordIndex,pbVal) ) 

#define IATSC_VCT_GetRecordCarrierFrequency(This,dwRecordIndex,pdwVal)	\
    ( (This)->lpVtbl -> GetRecordCarrierFrequency(This,dwRecordIndex,pdwVal) ) 

#define IATSC_VCT_GetRecordTransportStreamId(This,dwRecordIndex,pwVal)	\
    ( (This)->lpVtbl -> GetRecordTransportStreamId(This,dwRecordIndex,pwVal) ) 

#define IATSC_VCT_GetRecordProgramNumber(This,dwRecordIndex,pwVal)	\
    ( (This)->lpVtbl -> GetRecordProgramNumber(This,dwRecordIndex,pwVal) ) 

#define IATSC_VCT_GetRecordEtmLocation(This,dwRecordIndex,pbVal)	\
    ( (This)->lpVtbl -> GetRecordEtmLocation(This,dwRecordIndex,pbVal) ) 

#define IATSC_VCT_GetRecordIsAccessControlledBitSet(This,dwRecordIndex,pfVal)	\
    ( (This)->lpVtbl -> GetRecordIsAccessControlledBitSet(This,dwRecordIndex,pfVal) ) 

#define IATSC_VCT_GetRecordIsHiddenBitSet(This,dwRecordIndex,pfVal)	\
    ( (This)->lpVtbl -> GetRecordIsHiddenBitSet(This,dwRecordIndex,pfVal) ) 

#define IATSC_VCT_GetRecordIsPathSelectBitSet(This,dwRecordIndex,pfVal)	\
    ( (This)->lpVtbl -> GetRecordIsPathSelectBitSet(This,dwRecordIndex,pfVal) ) 

#define IATSC_VCT_GetRecordIsOutOfBandBitSet(This,dwRecordIndex,pfVal)	\
    ( (This)->lpVtbl -> GetRecordIsOutOfBandBitSet(This,dwRecordIndex,pfVal) ) 

#define IATSC_VCT_GetRecordIsHideGuideBitSet(This,dwRecordIndex,pfVal)	\
    ( (This)->lpVtbl -> GetRecordIsHideGuideBitSet(This,dwRecordIndex,pfVal) ) 

#define IATSC_VCT_GetRecordServiceType(This,dwRecordIndex,pbVal)	\
    ( (This)->lpVtbl -> GetRecordServiceType(This,dwRecordIndex,pbVal) ) 

#define IATSC_VCT_GetRecordSourceId(This,dwRecordIndex,pwVal)	\
    ( (This)->lpVtbl -> GetRecordSourceId(This,dwRecordIndex,pwVal) ) 

#define IATSC_VCT_GetRecordCountOfDescriptors(This,dwRecordIndex,pdwVal)	\
    ( (This)->lpVtbl -> GetRecordCountOfDescriptors(This,dwRecordIndex,pdwVal) ) 

#define IATSC_VCT_GetRecordDescriptorByIndex(This,dwRecordIndex,dwIndex,ppDescriptor)	\
    ( (This)->lpVtbl -> GetRecordDescriptorByIndex(This,dwRecordIndex,dwIndex,ppDescriptor) ) 

#define IATSC_VCT_GetRecordDescriptorByTag(This,dwRecordIndex,bTag,pdwCookie,ppDescriptor)	\
    ( (This)->lpVtbl -> GetRecordDescriptorByTag(This,dwRecordIndex,bTag,pdwCookie,ppDescriptor) ) 

#define IATSC_VCT_GetCountOfTableDescriptors(This,pdwVal)	\
    ( (This)->lpVtbl -> GetCountOfTableDescriptors(This,pdwVal) ) 

#define IATSC_VCT_GetTableDescriptorByIndex(This,dwIndex,ppDescriptor)	\
    ( (This)->lpVtbl -> GetTableDescriptorByIndex(This,dwIndex,ppDescriptor) ) 

#define IATSC_VCT_GetTableDescriptorByTag(This,bTag,pdwCookie,ppDescriptor)	\
    ( (This)->lpVtbl -> GetTableDescriptorByTag(This,bTag,pdwCookie,ppDescriptor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IATSC_VCT_INTERFACE_DEFINED__ */


#ifndef __IATSC_EIT_INTERFACE_DEFINED__
#define __IATSC_EIT_INTERFACE_DEFINED__

/* interface IATSC_EIT */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IATSC_EIT;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d7c212d7-76a2-4b4b-aa56-846879a80096")
    IATSC_EIT : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt ISectionList *pSectionList,
            /* [in] */ __RPC__in_opt IMpeg2Data *pMPEGData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVersionNumber( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSourceId( 
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProtocolVersion( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCountOfRecords( 
            /* [out] */ __RPC__out DWORD *pdwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordEventId( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordStartTime( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out MPEG_DATE_AND_TIME *pmdtVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordEtmLocation( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordDuration( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out MPEG_DURATION *pmdVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordTitleText( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out DWORD *pdwLength,
            /* [out] */ __RPC__deref_out_opt BYTE **ppText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordCountOfDescriptors( 
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out DWORD *pdwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordDescriptorByIndex( 
            /* [in] */ DWORD dwRecordIndex,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordDescriptorByTag( 
            /* [in] */ DWORD dwRecordIndex,
            /* [in] */ BYTE bTag,
            /* [out][in] */ __RPC__inout DWORD *pdwCookie,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IATSC_EITVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IATSC_EIT * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IATSC_EIT * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IATSC_EIT * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IATSC_EIT * This,
            /* [in] */ __RPC__in_opt ISectionList *pSectionList,
            /* [in] */ __RPC__in_opt IMpeg2Data *pMPEGData);
        
        HRESULT ( STDMETHODCALLTYPE *GetVersionNumber )( 
            __RPC__in IATSC_EIT * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetSourceId )( 
            __RPC__in IATSC_EIT * This,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProtocolVersion )( 
            __RPC__in IATSC_EIT * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetCountOfRecords )( 
            __RPC__in IATSC_EIT * This,
            /* [out] */ __RPC__out DWORD *pdwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordEventId )( 
            __RPC__in IATSC_EIT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordStartTime )( 
            __RPC__in IATSC_EIT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out MPEG_DATE_AND_TIME *pmdtVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordEtmLocation )( 
            __RPC__in IATSC_EIT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordDuration )( 
            __RPC__in IATSC_EIT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out MPEG_DURATION *pmdVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordTitleText )( 
            __RPC__in IATSC_EIT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out DWORD *pdwLength,
            /* [out] */ __RPC__deref_out_opt BYTE **ppText);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordCountOfDescriptors )( 
            __RPC__in IATSC_EIT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [out] */ __RPC__out DWORD *pdwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordDescriptorByIndex )( 
            __RPC__in IATSC_EIT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordDescriptorByTag )( 
            __RPC__in IATSC_EIT * This,
            /* [in] */ DWORD dwRecordIndex,
            /* [in] */ BYTE bTag,
            /* [out][in] */ __RPC__inout DWORD *pdwCookie,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor);
        
        END_INTERFACE
    } IATSC_EITVtbl;

    interface IATSC_EIT
    {
        CONST_VTBL struct IATSC_EITVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IATSC_EIT_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IATSC_EIT_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IATSC_EIT_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IATSC_EIT_Initialize(This,pSectionList,pMPEGData)	\
    ( (This)->lpVtbl -> Initialize(This,pSectionList,pMPEGData) ) 

#define IATSC_EIT_GetVersionNumber(This,pbVal)	\
    ( (This)->lpVtbl -> GetVersionNumber(This,pbVal) ) 

#define IATSC_EIT_GetSourceId(This,pwVal)	\
    ( (This)->lpVtbl -> GetSourceId(This,pwVal) ) 

#define IATSC_EIT_GetProtocolVersion(This,pbVal)	\
    ( (This)->lpVtbl -> GetProtocolVersion(This,pbVal) ) 

#define IATSC_EIT_GetCountOfRecords(This,pdwVal)	\
    ( (This)->lpVtbl -> GetCountOfRecords(This,pdwVal) ) 

#define IATSC_EIT_GetRecordEventId(This,dwRecordIndex,pwVal)	\
    ( (This)->lpVtbl -> GetRecordEventId(This,dwRecordIndex,pwVal) ) 

#define IATSC_EIT_GetRecordStartTime(This,dwRecordIndex,pmdtVal)	\
    ( (This)->lpVtbl -> GetRecordStartTime(This,dwRecordIndex,pmdtVal) ) 

#define IATSC_EIT_GetRecordEtmLocation(This,dwRecordIndex,pbVal)	\
    ( (This)->lpVtbl -> GetRecordEtmLocation(This,dwRecordIndex,pbVal) ) 

#define IATSC_EIT_GetRecordDuration(This,dwRecordIndex,pmdVal)	\
    ( (This)->lpVtbl -> GetRecordDuration(This,dwRecordIndex,pmdVal) ) 

#define IATSC_EIT_GetRecordTitleText(This,dwRecordIndex,pdwLength,ppText)	\
    ( (This)->lpVtbl -> GetRecordTitleText(This,dwRecordIndex,pdwLength,ppText) ) 

#define IATSC_EIT_GetRecordCountOfDescriptors(This,dwRecordIndex,pdwVal)	\
    ( (This)->lpVtbl -> GetRecordCountOfDescriptors(This,dwRecordIndex,pdwVal) ) 

#define IATSC_EIT_GetRecordDescriptorByIndex(This,dwRecordIndex,dwIndex,ppDescriptor)	\
    ( (This)->lpVtbl -> GetRecordDescriptorByIndex(This,dwRecordIndex,dwIndex,ppDescriptor) ) 

#define IATSC_EIT_GetRecordDescriptorByTag(This,dwRecordIndex,bTag,pdwCookie,ppDescriptor)	\
    ( (This)->lpVtbl -> GetRecordDescriptorByTag(This,dwRecordIndex,bTag,pdwCookie,ppDescriptor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IATSC_EIT_INTERFACE_DEFINED__ */


#ifndef __IATSC_ETT_INTERFACE_DEFINED__
#define __IATSC_ETT_INTERFACE_DEFINED__

/* interface IATSC_ETT */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IATSC_ETT;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5a142cc9-b8cf-4a86-a040-e9cadf3ef3e7")
    IATSC_ETT : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt ISectionList *pSectionList,
            /* [in] */ __RPC__in_opt IMpeg2Data *pMPEGData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVersionNumber( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProtocolVersion( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEtmId( 
            /* [out] */ __RPC__out DWORD *pdwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExtendedMessageText( 
            /* [out] */ __RPC__out DWORD *pdwLength,
            /* [out] */ __RPC__deref_out_opt BYTE **ppText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IATSC_ETTVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IATSC_ETT * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IATSC_ETT * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IATSC_ETT * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IATSC_ETT * This,
            /* [in] */ __RPC__in_opt ISectionList *pSectionList,
            /* [in] */ __RPC__in_opt IMpeg2Data *pMPEGData);
        
        HRESULT ( STDMETHODCALLTYPE *GetVersionNumber )( 
            __RPC__in IATSC_ETT * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProtocolVersion )( 
            __RPC__in IATSC_ETT * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetEtmId )( 
            __RPC__in IATSC_ETT * This,
            /* [out] */ __RPC__out DWORD *pdwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtendedMessageText )( 
            __RPC__in IATSC_ETT * This,
            /* [out] */ __RPC__out DWORD *pdwLength,
            /* [out] */ __RPC__deref_out_opt BYTE **ppText);
        
        END_INTERFACE
    } IATSC_ETTVtbl;

    interface IATSC_ETT
    {
        CONST_VTBL struct IATSC_ETTVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IATSC_ETT_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IATSC_ETT_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IATSC_ETT_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IATSC_ETT_Initialize(This,pSectionList,pMPEGData)	\
    ( (This)->lpVtbl -> Initialize(This,pSectionList,pMPEGData) ) 

#define IATSC_ETT_GetVersionNumber(This,pbVal)	\
    ( (This)->lpVtbl -> GetVersionNumber(This,pbVal) ) 

#define IATSC_ETT_GetProtocolVersion(This,pbVal)	\
    ( (This)->lpVtbl -> GetProtocolVersion(This,pbVal) ) 

#define IATSC_ETT_GetEtmId(This,pdwVal)	\
    ( (This)->lpVtbl -> GetEtmId(This,pdwVal) ) 

#define IATSC_ETT_GetExtendedMessageText(This,pdwLength,ppText)	\
    ( (This)->lpVtbl -> GetExtendedMessageText(This,pdwLength,ppText) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IATSC_ETT_INTERFACE_DEFINED__ */


#ifndef __IATSC_STT_INTERFACE_DEFINED__
#define __IATSC_STT_INTERFACE_DEFINED__

/* interface IATSC_STT */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IATSC_STT;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6bf42423-217d-4d6f-81e1-3a7b360ec896")
    IATSC_STT : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt ISectionList *pSectionList,
            /* [in] */ __RPC__in_opt IMpeg2Data *pMPEGData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProtocolVersion( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSystemTime( 
            /* [out] */ __RPC__out MPEG_DATE_AND_TIME *pmdtSystemTime) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGpsUtcOffset( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDaylightSavings( 
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCountOfTableDescriptors( 
            /* [out] */ __RPC__out DWORD *pdwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTableDescriptorByIndex( 
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTableDescriptorByTag( 
            /* [in] */ BYTE bTag,
            /* [out][in] */ __RPC__inout DWORD *pdwCookie,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IATSC_STTVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IATSC_STT * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IATSC_STT * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IATSC_STT * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IATSC_STT * This,
            /* [in] */ __RPC__in_opt ISectionList *pSectionList,
            /* [in] */ __RPC__in_opt IMpeg2Data *pMPEGData);
        
        HRESULT ( STDMETHODCALLTYPE *GetProtocolVersion )( 
            __RPC__in IATSC_STT * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetSystemTime )( 
            __RPC__in IATSC_STT * This,
            /* [out] */ __RPC__out MPEG_DATE_AND_TIME *pmdtSystemTime);
        
        HRESULT ( STDMETHODCALLTYPE *GetGpsUtcOffset )( 
            __RPC__in IATSC_STT * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetDaylightSavings )( 
            __RPC__in IATSC_STT * This,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetCountOfTableDescriptors )( 
            __RPC__in IATSC_STT * This,
            /* [out] */ __RPC__out DWORD *pdwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetTableDescriptorByIndex )( 
            __RPC__in IATSC_STT * This,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor);
        
        HRESULT ( STDMETHODCALLTYPE *GetTableDescriptorByTag )( 
            __RPC__in IATSC_STT * This,
            /* [in] */ BYTE bTag,
            /* [out][in] */ __RPC__inout DWORD *pdwCookie,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor);
        
        END_INTERFACE
    } IATSC_STTVtbl;

    interface IATSC_STT
    {
        CONST_VTBL struct IATSC_STTVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IATSC_STT_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IATSC_STT_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IATSC_STT_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IATSC_STT_Initialize(This,pSectionList,pMPEGData)	\
    ( (This)->lpVtbl -> Initialize(This,pSectionList,pMPEGData) ) 

#define IATSC_STT_GetProtocolVersion(This,pbVal)	\
    ( (This)->lpVtbl -> GetProtocolVersion(This,pbVal) ) 

#define IATSC_STT_GetSystemTime(This,pmdtSystemTime)	\
    ( (This)->lpVtbl -> GetSystemTime(This,pmdtSystemTime) ) 

#define IATSC_STT_GetGpsUtcOffset(This,pbVal)	\
    ( (This)->lpVtbl -> GetGpsUtcOffset(This,pbVal) ) 

#define IATSC_STT_GetDaylightSavings(This,pwVal)	\
    ( (This)->lpVtbl -> GetDaylightSavings(This,pwVal) ) 

#define IATSC_STT_GetCountOfTableDescriptors(This,pdwVal)	\
    ( (This)->lpVtbl -> GetCountOfTableDescriptors(This,pdwVal) ) 

#define IATSC_STT_GetTableDescriptorByIndex(This,dwIndex,ppDescriptor)	\
    ( (This)->lpVtbl -> GetTableDescriptorByIndex(This,dwIndex,ppDescriptor) ) 

#define IATSC_STT_GetTableDescriptorByTag(This,bTag,pdwCookie,ppDescriptor)	\
    ( (This)->lpVtbl -> GetTableDescriptorByTag(This,bTag,pdwCookie,ppDescriptor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IATSC_STT_INTERFACE_DEFINED__ */


#ifndef __ISCTE_EAS_INTERFACE_DEFINED__
#define __ISCTE_EAS_INTERFACE_DEFINED__

/* interface ISCTE_EAS */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_ISCTE_EAS;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1FF544D6-161D-4fae-9FAA-4F9F492AE999")
    ISCTE_EAS : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ __RPC__in_opt ISectionList *pSectionList,
            /* [in] */ __RPC__in_opt IMpeg2Data *pMPEGData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVersionNumber( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSequencyNumber( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProtocolVersion( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEASEventID( 
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOriginatorCode( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEASEventCodeLen( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEASEventCode( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRawNatureOfActivationTextLen( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRawNatureOfActivationText( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNatureOfActivationText( 
            /* [in] */ __RPC__in BSTR bstrIS0639code,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrString) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTimeRemaining( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStartTime( 
            /* [out] */ __RPC__out DWORD *pdwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDuration( 
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAlertPriority( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDetailsOOBSourceID( 
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDetailsMajor( 
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDetailsMinor( 
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDetailsAudioOOBSourceID( 
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAlertText( 
            /* [in] */ __RPC__in BSTR bstrIS0639code,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrString) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRawAlertTextLen( 
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRawAlertText( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLocationCount( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLocationCodes( 
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbState,
            /* [out] */ __RPC__out BYTE *pbCountySubdivision,
            /* [out] */ __RPC__out WORD *pwCounty) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExceptionCount( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExceptionService( 
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbIBRef,
            /* [out] */ __RPC__out WORD *pwFirst,
            /* [out] */ __RPC__out WORD *pwSecond) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCountOfTableDescriptors( 
            /* [out] */ __RPC__out DWORD *pdwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTableDescriptorByIndex( 
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTableDescriptorByTag( 
            /* [in] */ BYTE bTag,
            /* [out][in] */ __RPC__inout DWORD *pdwCookie,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISCTE_EASVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ISCTE_EAS * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ISCTE_EAS * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ISCTE_EAS * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in ISCTE_EAS * This,
            /* [in] */ __RPC__in_opt ISectionList *pSectionList,
            /* [in] */ __RPC__in_opt IMpeg2Data *pMPEGData);
        
        HRESULT ( STDMETHODCALLTYPE *GetVersionNumber )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetSequencyNumber )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProtocolVersion )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetEASEventID )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetOriginatorCode )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetEASEventCodeLen )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetEASEventCode )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRawNatureOfActivationTextLen )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRawNatureOfActivationText )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetNatureOfActivationText )( 
            __RPC__in ISCTE_EAS * This,
            /* [in] */ __RPC__in BSTR bstrIS0639code,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrString);
        
        HRESULT ( STDMETHODCALLTYPE *GetTimeRemaining )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetStartTime )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out DWORD *pdwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetDuration )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetAlertPriority )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetDetailsOOBSourceID )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetDetailsMajor )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetDetailsMinor )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetDetailsAudioOOBSourceID )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetAlertText )( 
            __RPC__in ISCTE_EAS * This,
            /* [in] */ __RPC__in BSTR bstrIS0639code,
            /* [out] */ __RPC__deref_out_opt BSTR *pbstrString);
        
        HRESULT ( STDMETHODCALLTYPE *GetRawAlertTextLen )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRawAlertText )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocationCount )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocationCodes )( 
            __RPC__in ISCTE_EAS * This,
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbState,
            /* [out] */ __RPC__out BYTE *pbCountySubdivision,
            /* [out] */ __RPC__out WORD *pwCounty);
        
        HRESULT ( STDMETHODCALLTYPE *GetExceptionCount )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetExceptionService )( 
            __RPC__in ISCTE_EAS * This,
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbIBRef,
            /* [out] */ __RPC__out WORD *pwFirst,
            /* [out] */ __RPC__out WORD *pwSecond);
        
        HRESULT ( STDMETHODCALLTYPE *GetCountOfTableDescriptors )( 
            __RPC__in ISCTE_EAS * This,
            /* [out] */ __RPC__out DWORD *pdwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetTableDescriptorByIndex )( 
            __RPC__in ISCTE_EAS * This,
            /* [in] */ DWORD dwIndex,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor);
        
        HRESULT ( STDMETHODCALLTYPE *GetTableDescriptorByTag )( 
            __RPC__in ISCTE_EAS * This,
            /* [in] */ BYTE bTag,
            /* [out][in] */ __RPC__inout DWORD *pdwCookie,
            /* [out] */ __RPC__deref_out_opt IGenericDescriptor **ppDescriptor);
        
        END_INTERFACE
    } ISCTE_EASVtbl;

    interface ISCTE_EAS
    {
        CONST_VTBL struct ISCTE_EASVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISCTE_EAS_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISCTE_EAS_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISCTE_EAS_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISCTE_EAS_Initialize(This,pSectionList,pMPEGData)	\
    ( (This)->lpVtbl -> Initialize(This,pSectionList,pMPEGData) ) 

#define ISCTE_EAS_GetVersionNumber(This,pbVal)	\
    ( (This)->lpVtbl -> GetVersionNumber(This,pbVal) ) 

#define ISCTE_EAS_GetSequencyNumber(This,pbVal)	\
    ( (This)->lpVtbl -> GetSequencyNumber(This,pbVal) ) 

#define ISCTE_EAS_GetProtocolVersion(This,pbVal)	\
    ( (This)->lpVtbl -> GetProtocolVersion(This,pbVal) ) 

#define ISCTE_EAS_GetEASEventID(This,pwVal)	\
    ( (This)->lpVtbl -> GetEASEventID(This,pwVal) ) 

#define ISCTE_EAS_GetOriginatorCode(This,pbVal)	\
    ( (This)->lpVtbl -> GetOriginatorCode(This,pbVal) ) 

#define ISCTE_EAS_GetEASEventCodeLen(This,pbVal)	\
    ( (This)->lpVtbl -> GetEASEventCodeLen(This,pbVal) ) 

#define ISCTE_EAS_GetEASEventCode(This,pbVal)	\
    ( (This)->lpVtbl -> GetEASEventCode(This,pbVal) ) 

#define ISCTE_EAS_GetRawNatureOfActivationTextLen(This,pbVal)	\
    ( (This)->lpVtbl -> GetRawNatureOfActivationTextLen(This,pbVal) ) 

#define ISCTE_EAS_GetRawNatureOfActivationText(This,pbVal)	\
    ( (This)->lpVtbl -> GetRawNatureOfActivationText(This,pbVal) ) 

#define ISCTE_EAS_GetNatureOfActivationText(This,bstrIS0639code,pbstrString)	\
    ( (This)->lpVtbl -> GetNatureOfActivationText(This,bstrIS0639code,pbstrString) ) 

#define ISCTE_EAS_GetTimeRemaining(This,pbVal)	\
    ( (This)->lpVtbl -> GetTimeRemaining(This,pbVal) ) 

#define ISCTE_EAS_GetStartTime(This,pdwVal)	\
    ( (This)->lpVtbl -> GetStartTime(This,pdwVal) ) 

#define ISCTE_EAS_GetDuration(This,pwVal)	\
    ( (This)->lpVtbl -> GetDuration(This,pwVal) ) 

#define ISCTE_EAS_GetAlertPriority(This,pbVal)	\
    ( (This)->lpVtbl -> GetAlertPriority(This,pbVal) ) 

#define ISCTE_EAS_GetDetailsOOBSourceID(This,pwVal)	\
    ( (This)->lpVtbl -> GetDetailsOOBSourceID(This,pwVal) ) 

#define ISCTE_EAS_GetDetailsMajor(This,pwVal)	\
    ( (This)->lpVtbl -> GetDetailsMajor(This,pwVal) ) 

#define ISCTE_EAS_GetDetailsMinor(This,pwVal)	\
    ( (This)->lpVtbl -> GetDetailsMinor(This,pwVal) ) 

#define ISCTE_EAS_GetDetailsAudioOOBSourceID(This,pwVal)	\
    ( (This)->lpVtbl -> GetDetailsAudioOOBSourceID(This,pwVal) ) 

#define ISCTE_EAS_GetAlertText(This,bstrIS0639code,pbstrString)	\
    ( (This)->lpVtbl -> GetAlertText(This,bstrIS0639code,pbstrString) ) 

#define ISCTE_EAS_GetRawAlertTextLen(This,pwVal)	\
    ( (This)->lpVtbl -> GetRawAlertTextLen(This,pwVal) ) 

#define ISCTE_EAS_GetRawAlertText(This,pbVal)	\
    ( (This)->lpVtbl -> GetRawAlertText(This,pbVal) ) 

#define ISCTE_EAS_GetLocationCount(This,pbVal)	\
    ( (This)->lpVtbl -> GetLocationCount(This,pbVal) ) 

#define ISCTE_EAS_GetLocationCodes(This,bIndex,pbState,pbCountySubdivision,pwCounty)	\
    ( (This)->lpVtbl -> GetLocationCodes(This,bIndex,pbState,pbCountySubdivision,pwCounty) ) 

#define ISCTE_EAS_GetExceptionCount(This,pbVal)	\
    ( (This)->lpVtbl -> GetExceptionCount(This,pbVal) ) 

#define ISCTE_EAS_GetExceptionService(This,bIndex,pbIBRef,pwFirst,pwSecond)	\
    ( (This)->lpVtbl -> GetExceptionService(This,bIndex,pbIBRef,pwFirst,pwSecond) ) 

#define ISCTE_EAS_GetCountOfTableDescriptors(This,pdwVal)	\
    ( (This)->lpVtbl -> GetCountOfTableDescriptors(This,pdwVal) ) 

#define ISCTE_EAS_GetTableDescriptorByIndex(This,dwIndex,ppDescriptor)	\
    ( (This)->lpVtbl -> GetTableDescriptorByIndex(This,dwIndex,ppDescriptor) ) 

#define ISCTE_EAS_GetTableDescriptorByTag(This,bTag,pdwCookie,ppDescriptor)	\
    ( (This)->lpVtbl -> GetTableDescriptorByTag(This,bTag,pdwCookie,ppDescriptor) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISCTE_EAS_INTERFACE_DEFINED__ */


#ifndef __IAtscContentAdvisoryDescriptor_INTERFACE_DEFINED__
#define __IAtscContentAdvisoryDescriptor_INTERFACE_DEFINED__

/* interface IAtscContentAdvisoryDescriptor */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IAtscContentAdvisoryDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FF76E60C-0283-43ea-BA32-B422238547EE")
    IAtscContentAdvisoryDescriptor : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTag( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLength( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRatingRegionCount( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordRatingRegion( 
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordRatedDimensions( 
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordRatingDimension( 
            /* [in] */ BYTE bIndexOuter,
            /* [in] */ BYTE bIndexInner,
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordRatingValue( 
            /* [in] */ BYTE bIndexOuter,
            /* [in] */ BYTE bIndexInner,
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRecordRatingDescriptionText( 
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbLength,
            /* [out] */ __RPC__deref_out_opt BYTE **ppText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAtscContentAdvisoryDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAtscContentAdvisoryDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAtscContentAdvisoryDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAtscContentAdvisoryDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTag )( 
            __RPC__in IAtscContentAdvisoryDescriptor * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetLength )( 
            __RPC__in IAtscContentAdvisoryDescriptor * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRatingRegionCount )( 
            __RPC__in IAtscContentAdvisoryDescriptor * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordRatingRegion )( 
            __RPC__in IAtscContentAdvisoryDescriptor * This,
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordRatedDimensions )( 
            __RPC__in IAtscContentAdvisoryDescriptor * This,
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordRatingDimension )( 
            __RPC__in IAtscContentAdvisoryDescriptor * This,
            /* [in] */ BYTE bIndexOuter,
            /* [in] */ BYTE bIndexInner,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordRatingValue )( 
            __RPC__in IAtscContentAdvisoryDescriptor * This,
            /* [in] */ BYTE bIndexOuter,
            /* [in] */ BYTE bIndexInner,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetRecordRatingDescriptionText )( 
            __RPC__in IAtscContentAdvisoryDescriptor * This,
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbLength,
            /* [out] */ __RPC__deref_out_opt BYTE **ppText);
        
        END_INTERFACE
    } IAtscContentAdvisoryDescriptorVtbl;

    interface IAtscContentAdvisoryDescriptor
    {
        CONST_VTBL struct IAtscContentAdvisoryDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAtscContentAdvisoryDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAtscContentAdvisoryDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAtscContentAdvisoryDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAtscContentAdvisoryDescriptor_GetTag(This,pbVal)	\
    ( (This)->lpVtbl -> GetTag(This,pbVal) ) 

#define IAtscContentAdvisoryDescriptor_GetLength(This,pbVal)	\
    ( (This)->lpVtbl -> GetLength(This,pbVal) ) 

#define IAtscContentAdvisoryDescriptor_GetRatingRegionCount(This,pbVal)	\
    ( (This)->lpVtbl -> GetRatingRegionCount(This,pbVal) ) 

#define IAtscContentAdvisoryDescriptor_GetRecordRatingRegion(This,bIndex,pbVal)	\
    ( (This)->lpVtbl -> GetRecordRatingRegion(This,bIndex,pbVal) ) 

#define IAtscContentAdvisoryDescriptor_GetRecordRatedDimensions(This,bIndex,pbVal)	\
    ( (This)->lpVtbl -> GetRecordRatedDimensions(This,bIndex,pbVal) ) 

#define IAtscContentAdvisoryDescriptor_GetRecordRatingDimension(This,bIndexOuter,bIndexInner,pbVal)	\
    ( (This)->lpVtbl -> GetRecordRatingDimension(This,bIndexOuter,bIndexInner,pbVal) ) 

#define IAtscContentAdvisoryDescriptor_GetRecordRatingValue(This,bIndexOuter,bIndexInner,pbVal)	\
    ( (This)->lpVtbl -> GetRecordRatingValue(This,bIndexOuter,bIndexInner,pbVal) ) 

#define IAtscContentAdvisoryDescriptor_GetRecordRatingDescriptionText(This,bIndex,pbLength,ppText)	\
    ( (This)->lpVtbl -> GetRecordRatingDescriptionText(This,bIndex,pbLength,ppText) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAtscContentAdvisoryDescriptor_INTERFACE_DEFINED__ */


#ifndef __ICaptionServiceDescriptor_INTERFACE_DEFINED__
#define __ICaptionServiceDescriptor_INTERFACE_DEFINED__

/* interface ICaptionServiceDescriptor */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_ICaptionServiceDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("40834007-6834-46f0-BD45-D5F6A6BE258C")
    ICaptionServiceDescriptor : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetNumberOfServices( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLanguageCode( 
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out_ecount_full(3) BYTE LangCode[ 3 ]) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCaptionServiceNumber( 
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCCType( 
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEasyReader( 
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetWideAspectRatio( 
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ICaptionServiceDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ICaptionServiceDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ICaptionServiceDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ICaptionServiceDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberOfServices )( 
            __RPC__in ICaptionServiceDescriptor * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetLanguageCode )( 
            __RPC__in ICaptionServiceDescriptor * This,
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out_ecount_full(3) BYTE LangCode[ 3 ]);
        
        HRESULT ( STDMETHODCALLTYPE *GetCaptionServiceNumber )( 
            __RPC__in ICaptionServiceDescriptor * This,
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetCCType )( 
            __RPC__in ICaptionServiceDescriptor * This,
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetEasyReader )( 
            __RPC__in ICaptionServiceDescriptor * This,
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetWideAspectRatio )( 
            __RPC__in ICaptionServiceDescriptor * This,
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        END_INTERFACE
    } ICaptionServiceDescriptorVtbl;

    interface ICaptionServiceDescriptor
    {
        CONST_VTBL struct ICaptionServiceDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICaptionServiceDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICaptionServiceDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICaptionServiceDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICaptionServiceDescriptor_GetNumberOfServices(This,pbVal)	\
    ( (This)->lpVtbl -> GetNumberOfServices(This,pbVal) ) 

#define ICaptionServiceDescriptor_GetLanguageCode(This,bIndex,LangCode)	\
    ( (This)->lpVtbl -> GetLanguageCode(This,bIndex,LangCode) ) 

#define ICaptionServiceDescriptor_GetCaptionServiceNumber(This,bIndex,pbVal)	\
    ( (This)->lpVtbl -> GetCaptionServiceNumber(This,bIndex,pbVal) ) 

#define ICaptionServiceDescriptor_GetCCType(This,bIndex,pbVal)	\
    ( (This)->lpVtbl -> GetCCType(This,bIndex,pbVal) ) 

#define ICaptionServiceDescriptor_GetEasyReader(This,bIndex,pbVal)	\
    ( (This)->lpVtbl -> GetEasyReader(This,bIndex,pbVal) ) 

#define ICaptionServiceDescriptor_GetWideAspectRatio(This,bIndex,pbVal)	\
    ( (This)->lpVtbl -> GetWideAspectRatio(This,bIndex,pbVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICaptionServiceDescriptor_INTERFACE_DEFINED__ */


#ifndef __IServiceLocationDescriptor_INTERFACE_DEFINED__
#define __IServiceLocationDescriptor_INTERFACE_DEFINED__

/* interface IServiceLocationDescriptor */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IServiceLocationDescriptor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("58C3C827-9D91-4215-BFF3-820A49F0904C")
    IServiceLocationDescriptor : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPCR_PID( 
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNumberOfElements( 
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElementStreamType( 
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElementPID( 
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out WORD *pwVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElementLanguageCode( 
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out_ecount_full(3) BYTE LangCode[ 3 ]) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IServiceLocationDescriptorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IServiceLocationDescriptor * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IServiceLocationDescriptor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IServiceLocationDescriptor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetPCR_PID )( 
            __RPC__in IServiceLocationDescriptor * This,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetNumberOfElements )( 
            __RPC__in IServiceLocationDescriptor * This,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetElementStreamType )( 
            __RPC__in IServiceLocationDescriptor * This,
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out BYTE *pbVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetElementPID )( 
            __RPC__in IServiceLocationDescriptor * This,
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out WORD *pwVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetElementLanguageCode )( 
            __RPC__in IServiceLocationDescriptor * This,
            /* [in] */ BYTE bIndex,
            /* [out] */ __RPC__out_ecount_full(3) BYTE LangCode[ 3 ]);
        
        END_INTERFACE
    } IServiceLocationDescriptorVtbl;

    interface IServiceLocationDescriptor
    {
        CONST_VTBL struct IServiceLocationDescriptorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IServiceLocationDescriptor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IServiceLocationDescriptor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IServiceLocationDescriptor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IServiceLocationDescriptor_GetPCR_PID(This,pwVal)	\
    ( (This)->lpVtbl -> GetPCR_PID(This,pwVal) ) 

#define IServiceLocationDescriptor_GetNumberOfElements(This,pbVal)	\
    ( (This)->lpVtbl -> GetNumberOfElements(This,pbVal) ) 

#define IServiceLocationDescriptor_GetElementStreamType(This,bIndex,pbVal)	\
    ( (This)->lpVtbl -> GetElementStreamType(This,bIndex,pbVal) ) 

#define IServiceLocationDescriptor_GetElementPID(This,bIndex,pwVal)	\
    ( (This)->lpVtbl -> GetElementPID(This,bIndex,pwVal) ) 

#define IServiceLocationDescriptor_GetElementLanguageCode(This,bIndex,LangCode)	\
    ( (This)->lpVtbl -> GetElementLanguageCode(This,bIndex,LangCode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IServiceLocationDescriptor_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     __RPC__in unsigned long *, __RPC__in BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\appmgmt.h ===
//*************************************************************
//
// appmgmt.h
//
// APIs for operations on MSI applications which are deployed
// and managed in the NT Directory.
//
// Copyright (c) Microsoft Corporation 1998-1999
// All rights reserved
//
//*************************************************************

#ifndef _APPMGMT_H_
#define _APPMGMT_H_

#if _MSC_VER > 1000
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef enum _INSTALLSPECTYPE
{
    APPNAME = 1,
    FILEEXT,
    PROGID,
    COMCLASS
} INSTALLSPECTYPE;

typedef union _INSTALLSPEC
{
    struct
    {
        WCHAR * Name;
        GUID    GPOId;
    } AppName;
    WCHAR * FileExt;
    WCHAR * ProgId;
    struct
    {
        GUID    Clsid;
        DWORD   ClsCtx;
    } COMClass;
} INSTALLSPEC;

typedef struct _INSTALLDATA
{
    INSTALLSPECTYPE Type;
    INSTALLSPEC     Spec;
} INSTALLDATA, *PINSTALLDATA;

typedef enum
{
    ABSENT,
    ASSIGNED,
    PUBLISHED
} APPSTATE;

#define LOCALSTATE_ASSIGNED                 0x1     // app is assigned
#define LOCALSTATE_PUBLISHED                0x2     // app is published
#define LOCALSTATE_UNINSTALL_UNMANAGED      0x4     // uninstall any unmanaged version before assigning
#define LOCALSTATE_POLICYREMOVE_ORPHAN      0x8     // app is orphaned when policy removed
#define LOCALSTATE_POLICYREMOVE_UNINSTALL   0x10    // app is uninstalled when policy removed
#define LOCALSTATE_ORPHANED                 0x20    // app is orphaned after being applied
#define LOCALSTATE_UNINSTALLED              0x40    // app is uninstalled after being applied

typedef struct _LOCALMANAGEDAPPLICATION
{
    LPWSTR      pszDeploymentName;
    LPWSTR      pszPolicyName;
    LPWSTR      pszProductId;
    DWORD       dwState;
} LOCALMANAGEDAPPLICATION, *PLOCALMANAGEDAPPLICATION;

#define MANAGED_APPS_USERAPPLICATIONS  0x1
#define MANAGED_APPS_FROMCATEGORY      0x2
#define MANAGED_APPS_INFOLEVEL_DEFAULT 0x10000

#define MANAGED_APPTYPE_WINDOWSINSTALLER 0x1
#define MANAGED_APPTYPE_SETUPEXE         0x2
#define MANAGED_APPTYPE_UNSUPPORTED      0x3

typedef struct _MANAGEDAPPLICATION
{
    LPWSTR      pszPackageName;
    LPWSTR      pszPublisher;
    DWORD       dwVersionHi;
    DWORD       dwVersionLo;
    DWORD       dwRevision;
    GUID        GpoId;
    LPWSTR      pszPolicyName;
    GUID        ProductId;
    LANGID      Language;
    LPWSTR      pszOwner;
    LPWSTR      pszCompany;
    LPWSTR      pszComments;
    LPWSTR      pszContact;
    LPWSTR      pszSupportUrl;
    DWORD       dwPathType;
    BOOL        bInstalled;
} MANAGEDAPPLICATION, *PMANAGEDAPPLICATION;

typedef struct _APPCATEGORYINFO
{
    LCID        Locale;
    LPWSTR      pszDescription;
    GUID        AppCategoryId;
} APPCATEGORYINFO;

typedef struct _APPCATEGORYINFOLIST
{
    DWORD               cCategory;
#ifdef MIDL_PASS
    [size_is(cCategory)]
#endif
    APPCATEGORYINFO *   pCategoryInfo;
} APPCATEGORYINFOLIST;

#ifndef WINAPI
#define WINAPI
#endif

DWORD WINAPI
InstallApplication(
#if !defined(__midl)
    __in 
#endif
	PINSTALLDATA pInstallInfo
    );

DWORD WINAPI
UninstallApplication(
#if !defined(__midl)
    __in 
#endif
    WCHAR *     ProductCode,
#if !defined(__midl)
    __in 
#endif
	DWORD       dwStatus
    );

DWORD WINAPI
CommandLineFromMsiDescriptor(
#if !defined(__midl)
    __nullterminated
#endif
    WCHAR*      Descriptor,
#if !defined(__midl)
    __out_ecount( *CommandLineLength )
#endif
    WCHAR *     CommandLine,
    DWORD *     CommandLineLength
    );

DWORD WINAPI
GetManagedApplications(
#if !defined(__midl)
    __in 
#endif
    GUID *               pCategory,
#if !defined(__midl)
    __in 
#endif
    DWORD                dwQueryFlags,
#if !defined(__midl)
    __in 
#endif
	DWORD                dwInfoLevel,
#if !defined(__midl)
    __out 
#endif
	LPDWORD              pdwApps,
#if !defined(__midl)
    __out 
#endif
	PMANAGEDAPPLICATION* prgManagedApps
    );

DWORD WINAPI
GetLocalManagedApplications(
#if !defined(__midl)
    __in 
#endif
	BOOL                        bUserApps,
#if !defined(__midl)
    __out 
#endif
	LPDWORD                     pdwApps,
#if !defined(__midl)
    __out 
#endif
	PLOCALMANAGEDAPPLICATION*   prgLocalApps
    );

void WINAPI
GetLocalManagedApplicationData(
#if !defined(__midl)
    __in 
#endif
	WCHAR *             ProductCode,
#if !defined(__midl)
    __deref_out 
#endif
	LPWSTR *            DisplayName,
#if !defined(__midl)
    __deref_out 
#endif
	LPWSTR *            SupportUrl
    );

DWORD WINAPI
GetManagedApplicationCategories(
#if !defined(__midl)
    __reserved 
#endif
	DWORD                dwReserved,
#if !defined(__midl)
    __out 
#endif
	APPCATEGORYINFOLIST* pAppCategory
    );

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\audevcod.h ===
//------------------------------------------------------------------------------
// File: AudEvCod.h
//
// Desc: List of Audio device error event codes and the expected params.
//
// Copyright (c) 1999 - 2001, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------



#ifndef __AUDEVCOD__
#define __AUDEVCOD__


#define EC_SND_DEVICE_ERROR_BASE   0x0200

typedef enum _tagSND_DEVICE_ERROR {

    SNDDEV_ERROR_Open=1,
    SNDDEV_ERROR_Close=2,
    SNDDEV_ERROR_GetCaps=3,
    SNDDEV_ERROR_PrepareHeader=4,
    SNDDEV_ERROR_UnprepareHeader=5,
    SNDDEV_ERROR_Reset=6,
    SNDDEV_ERROR_Restart=7,
    SNDDEV_ERROR_GetPosition=8,
    SNDDEV_ERROR_Write=9,
    SNDDEV_ERROR_Pause=10,
    SNDDEV_ERROR_Stop=11,
    SNDDEV_ERROR_Start=12,
    SNDDEV_ERROR_AddBuffer=13,
    SNDDEV_ERROR_Query=14,

} SNDDEV_ERR;


// Sound device error event codes
// ==============================
//
// All audio device error events are always passed on to the application, and are
// never processed by the filter graph


#define EC_SNDDEV_IN_ERROR                    (EC_SND_DEVICE_ERROR_BASE + 0x00)
#define EC_SNDDEV_OUT_ERROR                   (EC_SND_DEVICE_ERROR_BASE + 0x01)
// Parameters: ( DWORD, DWORD)
// lParam1 is an enum SND_DEVICE_ERROR which notifies the app how the device was
// being accessed when the failure occurred.
//
// lParam2 is the error returned from the sound device call.
//

#endif // __AUDEVCOD__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AudioAPOTypes.h ===
// Microsoft Windows
// Copyright (C) Microsoft Corporation. All rights reserved.
//
#pragma once

typedef LONGLONG    HNSTIME;   // hundred nanosecond unit
typedef LONGLONG    MFTIME;    // hundred nanosecond unit

typedef float       FLOAT32;   // float
typedef double      FLOAT64;   // double

// Validation flags for APO_CONNECTION_PROPERTY. Each APO connection has
// an APO_CONNECTION_PROPERTY structure associated with it. The buffer
// for each connection may be either invalid, valid, or silent.
typedef enum APO_BUFFER_FLAGS
{
    // BUFFER_INVALID means that there is no valid data in  the connection
    // buffer. The buffer pointer will still be valid and capable of holding
    // the amount of valid audio data specified in the APO_CONNECTION_PROPERTY.
    // The processor will mark every connection BUFFER_INVALID before running
    // the IAudioOutputEndpoint::GetOutputDataPointer,
    // IAudioInputEndpointRT::GetInputDataPointer, or
    // IAudioProcessingObjectRT::APOProcess each time its IAudioProcess::Process
    // routine is called.
    BUFFER_INVALID  = 0,

    // Connection buffer has valid data. This is the "normal" operational
    // state of the connection buffer. An APO will set this flag once it
    // writes valid data into a buffer.
    BUFFER_VALID    = 1,

    // The connection buffer should be treated as if it contains silence.
    // APOs will mark their output connection buffers as silent (instead
    // of writing silence into the buffer) if they generate a buffer of
    // silence. This typically only happens when the buffer(s) going in
    // are marked BUFFER_SILENT.
    BUFFER_SILENT   = 2
} APO_BUFFER_FLAGS;

// This structure contains the dynamically changing connection properties.
// The connection between APOs ends up resolving to the APO_CONNECTION_PROPERTY
// structure for the IAudioProcessingObjectRT::APOProcess call.  This structure
// is passed in IAudioInputEndpointRT::GetInputDataPointer and
// IAudioOutputEndpointRT::ReleaseOutputDataPointer.
typedef struct APO_CONNECTION_PROPERTY
{
    // The connection buffer. APOs use this buffer to read and write
    // audio data.
    //
    // Alignment required
    // (128 bit or frame aligned)
    //            |
    //      +-----+
    //      V
    //      +-------------------------------------------------------------+
    //      |                                                             |
    //      |                                                             |
    //      |                     audio buffer                            |
    //      |                                                             |
    //      |                                                             |
    //      +-------------------------------------------------------------+
    //      ^
    //      |
    //   pBuffer
    //
    UINT_PTR pBuffer;

    // Number of valid frames in the connection buffer. This must
    // be less than or equal to APO_CONNECTION_DESCRIPTOR.u32MaxFrameCount.
    // An APO will use the valid frame count to determine how much data to
    // process on an input buffer. An APO will set the valid frame count
    // upon writing data into its output connection(s).
    UINT32 u32ValidFrameCount;

    // Connection flags for this buffer.  Tells APOs if the buffer is valid,
    // in valid, or silent. See APO_BUFFER_FLAGS.
    APO_BUFFER_FLAGS u32BufferFlags;

    // A tag identifying a valid APO_CONNECTION_PROPERTY structure.
    UINT32 u32Signature;
} APO_CONNECTION_PROPERTY;
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\Audioclient.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for audioclient.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __audioclient_h__
#define __audioclient_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IAudioClient_FWD_DEFINED__
#define __IAudioClient_FWD_DEFINED__
typedef interface IAudioClient IAudioClient;
#endif 	/* __IAudioClient_FWD_DEFINED__ */


#ifndef __IAudioRenderClient_FWD_DEFINED__
#define __IAudioRenderClient_FWD_DEFINED__
typedef interface IAudioRenderClient IAudioRenderClient;
#endif 	/* __IAudioRenderClient_FWD_DEFINED__ */


#ifndef __IAudioCaptureClient_FWD_DEFINED__
#define __IAudioCaptureClient_FWD_DEFINED__
typedef interface IAudioCaptureClient IAudioCaptureClient;
#endif 	/* __IAudioCaptureClient_FWD_DEFINED__ */


#ifndef __IAudioClock_FWD_DEFINED__
#define __IAudioClock_FWD_DEFINED__
typedef interface IAudioClock IAudioClock;
#endif 	/* __IAudioClock_FWD_DEFINED__ */


#ifndef __IAudioClock2_FWD_DEFINED__
#define __IAudioClock2_FWD_DEFINED__
typedef interface IAudioClock2 IAudioClock2;
#endif 	/* __IAudioClock2_FWD_DEFINED__ */


#ifndef __IAudioClockAdjustment_FWD_DEFINED__
#define __IAudioClockAdjustment_FWD_DEFINED__
typedef interface IAudioClockAdjustment IAudioClockAdjustment;
#endif 	/* __IAudioClockAdjustment_FWD_DEFINED__ */


#ifndef __ISimpleAudioVolume_FWD_DEFINED__
#define __ISimpleAudioVolume_FWD_DEFINED__
typedef interface ISimpleAudioVolume ISimpleAudioVolume;
#endif 	/* __ISimpleAudioVolume_FWD_DEFINED__ */


#ifndef __IAudioStreamVolume_FWD_DEFINED__
#define __IAudioStreamVolume_FWD_DEFINED__
typedef interface IAudioStreamVolume IAudioStreamVolume;
#endif 	/* __IAudioStreamVolume_FWD_DEFINED__ */


#ifndef __IChannelAudioVolume_FWD_DEFINED__
#define __IChannelAudioVolume_FWD_DEFINED__
typedef interface IChannelAudioVolume IChannelAudioVolume;
#endif 	/* __IChannelAudioVolume_FWD_DEFINED__ */


/* header files for imported files */
#include "wtypes.h"
#include "unknwn.h"
#include "AudioSessionTypes.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_audioclient_0000_0000 */
/* [local] */ 

#if 0
typedef /* [hidden][restricted] */ struct WAVEFORMATEX
    {
    WORD wFormatTag;
    WORD nChannels;
    DWORD nSamplesPerSec;
    DWORD nAvgBytesPerSec;
    WORD nBlockAlign;
    WORD wBitsPerSample;
    WORD cbSize;
    } 	WAVEFORMATEX;

#else
#include <mmreg.h>
#endif
#if 0
typedef /* [hidden][restricted] */ LONGLONG REFERENCE_TIME;

#else
#define _IKsControl_
#include <ks.h>
#include <ksmedia.h>
#endif

enum _AUDCLNT_BUFFERFLAGS
    {	AUDCLNT_BUFFERFLAGS_DATA_DISCONTINUITY	= 0x1,
	AUDCLNT_BUFFERFLAGS_SILENT	= 0x2,
	AUDCLNT_BUFFERFLAGS_TIMESTAMP_ERROR	= 0x4
    } ;


extern RPC_IF_HANDLE __MIDL_itf_audioclient_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_audioclient_0000_0000_v0_0_s_ifspec;

#ifndef __IAudioClient_INTERFACE_DEFINED__
#define __IAudioClient_INTERFACE_DEFINED__

/* interface IAudioClient */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IAudioClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1CB9AD4C-DBFA-4c32-B178-C2F568A703B2")
    IAudioClient : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [annotation][in] */ 
            __in  AUDCLNT_SHAREMODE ShareMode,
            /* [annotation][in] */ 
            __in  DWORD StreamFlags,
            /* [annotation][in] */ 
            __in  REFERENCE_TIME hnsBufferDuration,
            /* [annotation][in] */ 
            __in  REFERENCE_TIME hnsPeriodicity,
            /* [annotation][in] */ 
            __in  const WAVEFORMATEX *pFormat,
            /* [annotation][in] */ 
            __in_opt  LPCGUID AudioSessionGuid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetBufferSize( 
            /* [annotation][out] */ 
            __out  UINT32 *pNumBufferFrames) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStreamLatency( 
            /* [annotation][out] */ 
            __out  REFERENCE_TIME *phnsLatency) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCurrentPadding( 
            /* [annotation][out] */ 
            __out  UINT32 *pNumPaddingFrames) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsFormatSupported( 
            /* [annotation][in] */ 
            __in  AUDCLNT_SHAREMODE ShareMode,
            /* [annotation][in] */ 
            __in  const WAVEFORMATEX *pFormat,
            /* [unique][annotation][out] */ 
            __out_opt  WAVEFORMATEX **ppClosestMatch) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMixFormat( 
            /* [annotation][out] */ 
            __out  WAVEFORMATEX **ppDeviceFormat) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDevicePeriod( 
            /* [annotation][out] */ 
            __out_opt  REFERENCE_TIME *phnsDefaultDevicePeriod,
            /* [annotation][out] */ 
            __out_opt  REFERENCE_TIME *phnsMinimumDevicePeriod) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Start( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEventHandle( 
            /* [in] */ HANDLE eventHandle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetService( 
            /* [annotation][in] */ 
            __in  REFIID riid,
            /* [annotation][iid_is][out] */ 
            __out  void **ppv) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioClient * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            IAudioClient * This,
            /* [annotation][in] */ 
            __in  AUDCLNT_SHAREMODE ShareMode,
            /* [annotation][in] */ 
            __in  DWORD StreamFlags,
            /* [annotation][in] */ 
            __in  REFERENCE_TIME hnsBufferDuration,
            /* [annotation][in] */ 
            __in  REFERENCE_TIME hnsPeriodicity,
            /* [annotation][in] */ 
            __in  const WAVEFORMATEX *pFormat,
            /* [annotation][in] */ 
            __in_opt  LPCGUID AudioSessionGuid);
        
        HRESULT ( STDMETHODCALLTYPE *GetBufferSize )( 
            IAudioClient * This,
            /* [annotation][out] */ 
            __out  UINT32 *pNumBufferFrames);
        
        HRESULT ( STDMETHODCALLTYPE *GetStreamLatency )( 
            IAudioClient * This,
            /* [annotation][out] */ 
            __out  REFERENCE_TIME *phnsLatency);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentPadding )( 
            IAudioClient * This,
            /* [annotation][out] */ 
            __out  UINT32 *pNumPaddingFrames);
        
        HRESULT ( STDMETHODCALLTYPE *IsFormatSupported )( 
            IAudioClient * This,
            /* [annotation][in] */ 
            __in  AUDCLNT_SHAREMODE ShareMode,
            /* [annotation][in] */ 
            __in  const WAVEFORMATEX *pFormat,
            /* [unique][annotation][out] */ 
            __out_opt  WAVEFORMATEX **ppClosestMatch);
        
        HRESULT ( STDMETHODCALLTYPE *GetMixFormat )( 
            IAudioClient * This,
            /* [annotation][out] */ 
            __out  WAVEFORMATEX **ppDeviceFormat);
        
        HRESULT ( STDMETHODCALLTYPE *GetDevicePeriod )( 
            IAudioClient * This,
            /* [annotation][out] */ 
            __out_opt  REFERENCE_TIME *phnsDefaultDevicePeriod,
            /* [annotation][out] */ 
            __out_opt  REFERENCE_TIME *phnsMinimumDevicePeriod);
        
        HRESULT ( STDMETHODCALLTYPE *Start )( 
            IAudioClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IAudioClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IAudioClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetEventHandle )( 
            IAudioClient * This,
            /* [in] */ HANDLE eventHandle);
        
        HRESULT ( STDMETHODCALLTYPE *GetService )( 
            IAudioClient * This,
            /* [annotation][in] */ 
            __in  REFIID riid,
            /* [annotation][iid_is][out] */ 
            __out  void **ppv);
        
        END_INTERFACE
    } IAudioClientVtbl;

    interface IAudioClient
    {
        CONST_VTBL struct IAudioClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioClient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioClient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioClient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioClient_Initialize(This,ShareMode,StreamFlags,hnsBufferDuration,hnsPeriodicity,pFormat,AudioSessionGuid)	\
    ( (This)->lpVtbl -> Initialize(This,ShareMode,StreamFlags,hnsBufferDuration,hnsPeriodicity,pFormat,AudioSessionGuid) ) 

#define IAudioClient_GetBufferSize(This,pNumBufferFrames)	\
    ( (This)->lpVtbl -> GetBufferSize(This,pNumBufferFrames) ) 

#define IAudioClient_GetStreamLatency(This,phnsLatency)	\
    ( (This)->lpVtbl -> GetStreamLatency(This,phnsLatency) ) 

#define IAudioClient_GetCurrentPadding(This,pNumPaddingFrames)	\
    ( (This)->lpVtbl -> GetCurrentPadding(This,pNumPaddingFrames) ) 

#define IAudioClient_IsFormatSupported(This,ShareMode,pFormat,ppClosestMatch)	\
    ( (This)->lpVtbl -> IsFormatSupported(This,ShareMode,pFormat,ppClosestMatch) ) 

#define IAudioClient_GetMixFormat(This,ppDeviceFormat)	\
    ( (This)->lpVtbl -> GetMixFormat(This,ppDeviceFormat) ) 

#define IAudioClient_GetDevicePeriod(This,phnsDefaultDevicePeriod,phnsMinimumDevicePeriod)	\
    ( (This)->lpVtbl -> GetDevicePeriod(This,phnsDefaultDevicePeriod,phnsMinimumDevicePeriod) ) 

#define IAudioClient_Start(This)	\
    ( (This)->lpVtbl -> Start(This) ) 

#define IAudioClient_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IAudioClient_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IAudioClient_SetEventHandle(This,eventHandle)	\
    ( (This)->lpVtbl -> SetEventHandle(This,eventHandle) ) 

#define IAudioClient_GetService(This,riid,ppv)	\
    ( (This)->lpVtbl -> GetService(This,riid,ppv) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioClient_INTERFACE_DEFINED__ */


#ifndef __IAudioRenderClient_INTERFACE_DEFINED__
#define __IAudioRenderClient_INTERFACE_DEFINED__

/* interface IAudioRenderClient */
/* [local][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IAudioRenderClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F294ACFC-3146-4483-A7BF-ADDCA7C260E2")
    IAudioRenderClient : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetBuffer( 
            /* [annotation][in] */ 
            __in  UINT32 NumFramesRequested,
            /* [annotation][out] */ 
            __out  BYTE **ppData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseBuffer( 
            /* [annotation][in] */ 
            __in  UINT32 NumFramesWritten,
            /* [annotation][in] */ 
            __in  DWORD dwFlags) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioRenderClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioRenderClient * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioRenderClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioRenderClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( 
            IAudioRenderClient * This,
            /* [annotation][in] */ 
            __in  UINT32 NumFramesRequested,
            /* [annotation][out] */ 
            __out  BYTE **ppData);
        
        HRESULT ( STDMETHODCALLTYPE *ReleaseBuffer )( 
            IAudioRenderClient * This,
            /* [annotation][in] */ 
            __in  UINT32 NumFramesWritten,
            /* [annotation][in] */ 
            __in  DWORD dwFlags);
        
        END_INTERFACE
    } IAudioRenderClientVtbl;

    interface IAudioRenderClient
    {
        CONST_VTBL struct IAudioRenderClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioRenderClient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioRenderClient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioRenderClient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioRenderClient_GetBuffer(This,NumFramesRequested,ppData)	\
    ( (This)->lpVtbl -> GetBuffer(This,NumFramesRequested,ppData) ) 

#define IAudioRenderClient_ReleaseBuffer(This,NumFramesWritten,dwFlags)	\
    ( (This)->lpVtbl -> ReleaseBuffer(This,NumFramesWritten,dwFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioRenderClient_INTERFACE_DEFINED__ */


#ifndef __IAudioCaptureClient_INTERFACE_DEFINED__
#define __IAudioCaptureClient_INTERFACE_DEFINED__

/* interface IAudioCaptureClient */
/* [local][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IAudioCaptureClient;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C8ADBD64-E71E-48a0-A4DE-185C395CD317")
    IAudioCaptureClient : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetBuffer( 
            /* [annotation][out] */ 
            __out  BYTE **ppData,
            /* [annotation][out] */ 
            __out  UINT32 *pNumFramesToRead,
            /* [annotation][out] */ 
            __out  DWORD *pdwFlags,
            /* [annotation][unique][out] */ 
            __out_opt  UINT64 *pu64DevicePosition,
            /* [annotation][unique][out] */ 
            __out_opt  UINT64 *pu64QPCPosition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseBuffer( 
            /* [annotation][in] */ 
            __in  UINT32 NumFramesRead) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNextPacketSize( 
            /* [annotation][out] */ 
            __out  UINT32 *pNumFramesInNextPacket) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioCaptureClientVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioCaptureClient * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioCaptureClient * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioCaptureClient * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetBuffer )( 
            IAudioCaptureClient * This,
            /* [annotation][out] */ 
            __out  BYTE **ppData,
            /* [annotation][out] */ 
            __out  UINT32 *pNumFramesToRead,
            /* [annotation][out] */ 
            __out  DWORD *pdwFlags,
            /* [annotation][unique][out] */ 
            __out_opt  UINT64 *pu64DevicePosition,
            /* [annotation][unique][out] */ 
            __out_opt  UINT64 *pu64QPCPosition);
        
        HRESULT ( STDMETHODCALLTYPE *ReleaseBuffer )( 
            IAudioCaptureClient * This,
            /* [annotation][in] */ 
            __in  UINT32 NumFramesRead);
        
        HRESULT ( STDMETHODCALLTYPE *GetNextPacketSize )( 
            IAudioCaptureClient * This,
            /* [annotation][out] */ 
            __out  UINT32 *pNumFramesInNextPacket);
        
        END_INTERFACE
    } IAudioCaptureClientVtbl;

    interface IAudioCaptureClient
    {
        CONST_VTBL struct IAudioCaptureClientVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioCaptureClient_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioCaptureClient_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioCaptureClient_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioCaptureClient_GetBuffer(This,ppData,pNumFramesToRead,pdwFlags,pu64DevicePosition,pu64QPCPosition)	\
    ( (This)->lpVtbl -> GetBuffer(This,ppData,pNumFramesToRead,pdwFlags,pu64DevicePosition,pu64QPCPosition) ) 

#define IAudioCaptureClient_ReleaseBuffer(This,NumFramesRead)	\
    ( (This)->lpVtbl -> ReleaseBuffer(This,NumFramesRead) ) 

#define IAudioCaptureClient_GetNextPacketSize(This,pNumFramesInNextPacket)	\
    ( (This)->lpVtbl -> GetNextPacketSize(This,pNumFramesInNextPacket) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioCaptureClient_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_audioclient_0000_0003 */
/* [local] */ 

#define AUDIOCLOCK_CHARACTERISTIC_FIXED_FREQ  0x00000001


extern RPC_IF_HANDLE __MIDL_itf_audioclient_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_audioclient_0000_0003_v0_0_s_ifspec;

#ifndef __IAudioClock_INTERFACE_DEFINED__
#define __IAudioClock_INTERFACE_DEFINED__

/* interface IAudioClock */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IAudioClock;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CD63314F-3FBA-4a1b-812C-EF96358728E7")
    IAudioClock : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFrequency( 
            /* [annotation][out] */ 
            __out  UINT64 *pu64Frequency) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [annotation][out] */ 
            __out  UINT64 *pu64Position,
            /* [annotation][unique][out] */ 
            __out_opt  UINT64 *pu64QPCPosition) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCharacteristics( 
            /* [annotation][out] */ 
            __out  DWORD *pdwCharacteristics) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioClockVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioClock * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioClock * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioClock * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetFrequency )( 
            IAudioClock * This,
            /* [annotation][out] */ 
            __out  UINT64 *pu64Frequency);
        
        HRESULT ( STDMETHODCALLTYPE *GetPosition )( 
            IAudioClock * This,
            /* [annotation][out] */ 
            __out  UINT64 *pu64Position,
            /* [annotation][unique][out] */ 
            __out_opt  UINT64 *pu64QPCPosition);
        
        HRESULT ( STDMETHODCALLTYPE *GetCharacteristics )( 
            IAudioClock * This,
            /* [annotation][out] */ 
            __out  DWORD *pdwCharacteristics);
        
        END_INTERFACE
    } IAudioClockVtbl;

    interface IAudioClock
    {
        CONST_VTBL struct IAudioClockVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioClock_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioClock_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioClock_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioClock_GetFrequency(This,pu64Frequency)	\
    ( (This)->lpVtbl -> GetFrequency(This,pu64Frequency) ) 

#define IAudioClock_GetPosition(This,pu64Position,pu64QPCPosition)	\
    ( (This)->lpVtbl -> GetPosition(This,pu64Position,pu64QPCPosition) ) 

#define IAudioClock_GetCharacteristics(This,pdwCharacteristics)	\
    ( (This)->lpVtbl -> GetCharacteristics(This,pdwCharacteristics) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioClock_INTERFACE_DEFINED__ */


#ifndef __IAudioClock2_INTERFACE_DEFINED__
#define __IAudioClock2_INTERFACE_DEFINED__

/* interface IAudioClock2 */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IAudioClock2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6f49ff73-6727-49ac-a008-d98cf5e70048")
    IAudioClock2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDevicePosition( 
            /* [annotation][out] */ 
            __out  UINT64 *DevicePosition,
            /* [annotation][unique][out] */ 
            __out_opt  UINT64 *QPCPosition) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioClock2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioClock2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioClock2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioClock2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetDevicePosition )( 
            IAudioClock2 * This,
            /* [annotation][out] */ 
            __out  UINT64 *DevicePosition,
            /* [annotation][unique][out] */ 
            __out_opt  UINT64 *QPCPosition);
        
        END_INTERFACE
    } IAudioClock2Vtbl;

    interface IAudioClock2
    {
        CONST_VTBL struct IAudioClock2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioClock2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioClock2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioClock2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioClock2_GetDevicePosition(This,DevicePosition,QPCPosition)	\
    ( (This)->lpVtbl -> GetDevicePosition(This,DevicePosition,QPCPosition) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioClock2_INTERFACE_DEFINED__ */


#ifndef __IAudioClockAdjustment_INTERFACE_DEFINED__
#define __IAudioClockAdjustment_INTERFACE_DEFINED__

/* interface IAudioClockAdjustment */
/* [object][local][unique][uuid] */ 


EXTERN_C const IID IID_IAudioClockAdjustment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f6e4c0a0-46d9-4fb8-be21-57a3ef2b626c")
    IAudioClockAdjustment : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetSampleRate( 
            /* [annotation][in] */ 
            __in  float flSampleRate) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioClockAdjustmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioClockAdjustment * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioClockAdjustment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioClockAdjustment * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetSampleRate )( 
            IAudioClockAdjustment * This,
            /* [annotation][in] */ 
            __in  float flSampleRate);
        
        END_INTERFACE
    } IAudioClockAdjustmentVtbl;

    interface IAudioClockAdjustment
    {
        CONST_VTBL struct IAudioClockAdjustmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioClockAdjustment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioClockAdjustment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioClockAdjustment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioClockAdjustment_SetSampleRate(This,flSampleRate)	\
    ( (This)->lpVtbl -> SetSampleRate(This,flSampleRate) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioClockAdjustment_INTERFACE_DEFINED__ */


#ifndef __ISimpleAudioVolume_INTERFACE_DEFINED__
#define __ISimpleAudioVolume_INTERFACE_DEFINED__

/* interface ISimpleAudioVolume */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_ISimpleAudioVolume;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("87CE5498-68D6-44E5-9215-6DA47EF883D8")
    ISimpleAudioVolume : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetMasterVolume( 
            /* [annotation][in] */ 
            __in  float fLevel,
            /* [unique][in] */ LPCGUID EventContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMasterVolume( 
            /* [annotation][out] */ 
            __out  float *pfLevel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetMute( 
            /* [annotation][in] */ 
            __in  const BOOL bMute,
            /* [unique][in] */ LPCGUID EventContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMute( 
            /* [annotation][out] */ 
            __out  BOOL *pbMute) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISimpleAudioVolumeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISimpleAudioVolume * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISimpleAudioVolume * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISimpleAudioVolume * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetMasterVolume )( 
            ISimpleAudioVolume * This,
            /* [annotation][in] */ 
            __in  float fLevel,
            /* [unique][in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *GetMasterVolume )( 
            ISimpleAudioVolume * This,
            /* [annotation][out] */ 
            __out  float *pfLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SetMute )( 
            ISimpleAudioVolume * This,
            /* [annotation][in] */ 
            __in  const BOOL bMute,
            /* [unique][in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *GetMute )( 
            ISimpleAudioVolume * This,
            /* [annotation][out] */ 
            __out  BOOL *pbMute);
        
        END_INTERFACE
    } ISimpleAudioVolumeVtbl;

    interface ISimpleAudioVolume
    {
        CONST_VTBL struct ISimpleAudioVolumeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISimpleAudioVolume_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISimpleAudioVolume_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISimpleAudioVolume_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISimpleAudioVolume_SetMasterVolume(This,fLevel,EventContext)	\
    ( (This)->lpVtbl -> SetMasterVolume(This,fLevel,EventContext) ) 

#define ISimpleAudioVolume_GetMasterVolume(This,pfLevel)	\
    ( (This)->lpVtbl -> GetMasterVolume(This,pfLevel) ) 

#define ISimpleAudioVolume_SetMute(This,bMute,EventContext)	\
    ( (This)->lpVtbl -> SetMute(This,bMute,EventContext) ) 

#define ISimpleAudioVolume_GetMute(This,pbMute)	\
    ( (This)->lpVtbl -> GetMute(This,pbMute) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISimpleAudioVolume_INTERFACE_DEFINED__ */


#ifndef __IAudioStreamVolume_INTERFACE_DEFINED__
#define __IAudioStreamVolume_INTERFACE_DEFINED__

/* interface IAudioStreamVolume */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IAudioStreamVolume;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("93014887-242D-4068-8A15-CF5E93B90FE3")
    IAudioStreamVolume : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetChannelCount( 
            /* [annotation][out] */ 
            __out  UINT32 *pdwCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetChannelVolume( 
            /* [annotation][in] */ 
            __in  UINT32 dwIndex,
            /* [annotation][in] */ 
            __in  const float fLevel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetChannelVolume( 
            /* [annotation][in] */ 
            __in  UINT32 dwIndex,
            /* [annotation][out] */ 
            __out  float *pfLevel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAllVolumes( 
            /* [annotation][in] */ 
            __in  UINT32 dwCount,
            /* [annotation][size_is][in] */ 
            __in_ecount(dwCount)  const float *pfVolumes) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAllVolumes( 
            /* [annotation][in] */ 
            __in  UINT32 dwCount,
            /* [annotation][size_is][out] */ 
            __out_ecount(dwCount)  float *pfVolumes) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioStreamVolumeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioStreamVolume * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioStreamVolume * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioStreamVolume * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetChannelCount )( 
            IAudioStreamVolume * This,
            /* [annotation][out] */ 
            __out  UINT32 *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE *SetChannelVolume )( 
            IAudioStreamVolume * This,
            /* [annotation][in] */ 
            __in  UINT32 dwIndex,
            /* [annotation][in] */ 
            __in  const float fLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetChannelVolume )( 
            IAudioStreamVolume * This,
            /* [annotation][in] */ 
            __in  UINT32 dwIndex,
            /* [annotation][out] */ 
            __out  float *pfLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SetAllVolumes )( 
            IAudioStreamVolume * This,
            /* [annotation][in] */ 
            __in  UINT32 dwCount,
            /* [annotation][size_is][in] */ 
            __in_ecount(dwCount)  const float *pfVolumes);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllVolumes )( 
            IAudioStreamVolume * This,
            /* [annotation][in] */ 
            __in  UINT32 dwCount,
            /* [annotation][size_is][out] */ 
            __out_ecount(dwCount)  float *pfVolumes);
        
        END_INTERFACE
    } IAudioStreamVolumeVtbl;

    interface IAudioStreamVolume
    {
        CONST_VTBL struct IAudioStreamVolumeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioStreamVolume_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioStreamVolume_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioStreamVolume_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioStreamVolume_GetChannelCount(This,pdwCount)	\
    ( (This)->lpVtbl -> GetChannelCount(This,pdwCount) ) 

#define IAudioStreamVolume_SetChannelVolume(This,dwIndex,fLevel)	\
    ( (This)->lpVtbl -> SetChannelVolume(This,dwIndex,fLevel) ) 

#define IAudioStreamVolume_GetChannelVolume(This,dwIndex,pfLevel)	\
    ( (This)->lpVtbl -> GetChannelVolume(This,dwIndex,pfLevel) ) 

#define IAudioStreamVolume_SetAllVolumes(This,dwCount,pfVolumes)	\
    ( (This)->lpVtbl -> SetAllVolumes(This,dwCount,pfVolumes) ) 

#define IAudioStreamVolume_GetAllVolumes(This,dwCount,pfVolumes)	\
    ( (This)->lpVtbl -> GetAllVolumes(This,dwCount,pfVolumes) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioStreamVolume_INTERFACE_DEFINED__ */


#ifndef __IChannelAudioVolume_INTERFACE_DEFINED__
#define __IChannelAudioVolume_INTERFACE_DEFINED__

/* interface IChannelAudioVolume */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IChannelAudioVolume;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1C158861-B533-4B30-B1CF-E853E51C59B8")
    IChannelAudioVolume : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetChannelCount( 
            /* [annotation][out] */ 
            __out  UINT32 *pdwCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetChannelVolume( 
            /* [annotation][in] */ 
            __in  UINT32 dwIndex,
            /* [annotation][in] */ 
            __in  const float fLevel,
            /* [unique][in] */ LPCGUID EventContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetChannelVolume( 
            /* [annotation][in] */ 
            __in  UINT32 dwIndex,
            /* [annotation][out] */ 
            __out  float *pfLevel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAllVolumes( 
            /* [annotation][in] */ 
            __in  UINT32 dwCount,
            /* [annotation][size_is][in] */ 
            __in_ecount(dwCount)  const float *pfVolumes,
            /* [unique][in] */ LPCGUID EventContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAllVolumes( 
            /* [annotation][in] */ 
            __in  UINT32 dwCount,
            /* [annotation][size_is][out] */ 
            __out_ecount(dwCount)  float *pfVolumes) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IChannelAudioVolumeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IChannelAudioVolume * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IChannelAudioVolume * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IChannelAudioVolume * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetChannelCount )( 
            IChannelAudioVolume * This,
            /* [annotation][out] */ 
            __out  UINT32 *pdwCount);
        
        HRESULT ( STDMETHODCALLTYPE *SetChannelVolume )( 
            IChannelAudioVolume * This,
            /* [annotation][in] */ 
            __in  UINT32 dwIndex,
            /* [annotation][in] */ 
            __in  const float fLevel,
            /* [unique][in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *GetChannelVolume )( 
            IChannelAudioVolume * This,
            /* [annotation][in] */ 
            __in  UINT32 dwIndex,
            /* [annotation][out] */ 
            __out  float *pfLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SetAllVolumes )( 
            IChannelAudioVolume * This,
            /* [annotation][in] */ 
            __in  UINT32 dwCount,
            /* [annotation][size_is][in] */ 
            __in_ecount(dwCount)  const float *pfVolumes,
            /* [unique][in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *GetAllVolumes )( 
            IChannelAudioVolume * This,
            /* [annotation][in] */ 
            __in  UINT32 dwCount,
            /* [annotation][size_is][out] */ 
            __out_ecount(dwCount)  float *pfVolumes);
        
        END_INTERFACE
    } IChannelAudioVolumeVtbl;

    interface IChannelAudioVolume
    {
        CONST_VTBL struct IChannelAudioVolumeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IChannelAudioVolume_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IChannelAudioVolume_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IChannelAudioVolume_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IChannelAudioVolume_GetChannelCount(This,pdwCount)	\
    ( (This)->lpVtbl -> GetChannelCount(This,pdwCount) ) 

#define IChannelAudioVolume_SetChannelVolume(This,dwIndex,fLevel,EventContext)	\
    ( (This)->lpVtbl -> SetChannelVolume(This,dwIndex,fLevel,EventContext) ) 

#define IChannelAudioVolume_GetChannelVolume(This,dwIndex,pfLevel)	\
    ( (This)->lpVtbl -> GetChannelVolume(This,dwIndex,pfLevel) ) 

#define IChannelAudioVolume_SetAllVolumes(This,dwCount,pfVolumes,EventContext)	\
    ( (This)->lpVtbl -> SetAllVolumes(This,dwCount,pfVolumes,EventContext) ) 

#define IChannelAudioVolume_GetAllVolumes(This,dwCount,pfVolumes)	\
    ( (This)->lpVtbl -> GetAllVolumes(This,dwCount,pfVolumes) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IChannelAudioVolume_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_audioclient_0000_0009 */
/* [local] */ 

#define FACILITY_AUDCLNT 0x889
#define AUDCLNT_ERR(n) MAKE_HRESULT(SEVERITY_ERROR, FACILITY_AUDCLNT, n)
#define AUDCLNT_SUCCESS(n) MAKE_SCODE(SEVERITY_SUCCESS, FACILITY_AUDCLNT, n)
#define AUDCLNT_E_NOT_INITIALIZED            AUDCLNT_ERR(0x001)
#define AUDCLNT_E_ALREADY_INITIALIZED        AUDCLNT_ERR(0x002)
#define AUDCLNT_E_WRONG_ENDPOINT_TYPE        AUDCLNT_ERR(0x003)
#define AUDCLNT_E_DEVICE_INVALIDATED         AUDCLNT_ERR(0x004)
#define AUDCLNT_E_NOT_STOPPED                AUDCLNT_ERR(0x005)
#define AUDCLNT_E_BUFFER_TOO_LARGE           AUDCLNT_ERR(0x006)
#define AUDCLNT_E_OUT_OF_ORDER               AUDCLNT_ERR(0x007)
#define AUDCLNT_E_UNSUPPORTED_FORMAT         AUDCLNT_ERR(0x008)
#define AUDCLNT_E_INVALID_SIZE               AUDCLNT_ERR(0x009)
#define AUDCLNT_E_DEVICE_IN_USE              AUDCLNT_ERR(0x00a)
#define AUDCLNT_E_BUFFER_OPERATION_PENDING   AUDCLNT_ERR(0x00b)
#define AUDCLNT_E_THREAD_NOT_REGISTERED      AUDCLNT_ERR(0x00c)
#define AUDCLNT_E_EXCLUSIVE_MODE_NOT_ALLOWED AUDCLNT_ERR(0x00e)
#define AUDCLNT_E_ENDPOINT_CREATE_FAILED     AUDCLNT_ERR(0x00f)
#define AUDCLNT_E_SERVICE_NOT_RUNNING        AUDCLNT_ERR(0x010)
#define AUDCLNT_E_EVENTHANDLE_NOT_EXPECTED     AUDCLNT_ERR(0x011)
#define AUDCLNT_E_EXCLUSIVE_MODE_ONLY          AUDCLNT_ERR(0x012)
#define AUDCLNT_E_BUFDURATION_PERIOD_NOT_EQUAL AUDCLNT_ERR(0x013)
#define AUDCLNT_E_EVENTHANDLE_NOT_SET          AUDCLNT_ERR(0x014)
#define AUDCLNT_E_INCORRECT_BUFFER_SIZE        AUDCLNT_ERR(0x015)
#define AUDCLNT_E_BUFFER_SIZE_ERROR            AUDCLNT_ERR(0x016)
#define AUDCLNT_E_CPUUSAGE_EXCEEDED            AUDCLNT_ERR(0x017)
#define AUDCLNT_E_BUFFER_ERROR                 AUDCLNT_ERR(0x018)
#define AUDCLNT_E_BUFFER_SIZE_NOT_ALIGNED      AUDCLNT_ERR(0x019)
#define AUDCLNT_E_INVALID_DEVICE_PERIOD        AUDCLNT_ERR(0x020)
#define AUDCLNT_S_BUFFER_EMPTY              AUDCLNT_SUCCESS(0x001)
#define AUDCLNT_S_THREAD_ALREADY_REGISTERED AUDCLNT_SUCCESS(0x002)
#define AUDCLNT_S_POSITION_STALLED		   AUDCLNT_SUCCESS(0x003)


extern RPC_IF_HANDLE __MIDL_itf_audioclient_0000_0009_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_audioclient_0000_0009_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\asptlb.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for asp.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __asptlb_h__
#define __asptlb_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IStringList_FWD_DEFINED__
#define __IStringList_FWD_DEFINED__
typedef interface IStringList IStringList;
#endif 	/* __IStringList_FWD_DEFINED__ */


#ifndef __IRequestDictionary_FWD_DEFINED__
#define __IRequestDictionary_FWD_DEFINED__
typedef interface IRequestDictionary IRequestDictionary;
#endif 	/* __IRequestDictionary_FWD_DEFINED__ */


#ifndef __IRequest_FWD_DEFINED__
#define __IRequest_FWD_DEFINED__
typedef interface IRequest IRequest;
#endif 	/* __IRequest_FWD_DEFINED__ */


#ifndef __Request_FWD_DEFINED__
#define __Request_FWD_DEFINED__

#ifdef __cplusplus
typedef class Request Request;
#else
typedef struct Request Request;
#endif /* __cplusplus */

#endif 	/* __Request_FWD_DEFINED__ */


#ifndef __IReadCookie_FWD_DEFINED__
#define __IReadCookie_FWD_DEFINED__
typedef interface IReadCookie IReadCookie;
#endif 	/* __IReadCookie_FWD_DEFINED__ */


#ifndef __IWriteCookie_FWD_DEFINED__
#define __IWriteCookie_FWD_DEFINED__
typedef interface IWriteCookie IWriteCookie;
#endif 	/* __IWriteCookie_FWD_DEFINED__ */


#ifndef __IResponse_FWD_DEFINED__
#define __IResponse_FWD_DEFINED__
typedef interface IResponse IResponse;
#endif 	/* __IResponse_FWD_DEFINED__ */


#ifndef __Response_FWD_DEFINED__
#define __Response_FWD_DEFINED__

#ifdef __cplusplus
typedef class Response Response;
#else
typedef struct Response Response;
#endif /* __cplusplus */

#endif 	/* __Response_FWD_DEFINED__ */


#ifndef __IVariantDictionary_FWD_DEFINED__
#define __IVariantDictionary_FWD_DEFINED__
typedef interface IVariantDictionary IVariantDictionary;
#endif 	/* __IVariantDictionary_FWD_DEFINED__ */


#ifndef __ISessionObject_FWD_DEFINED__
#define __ISessionObject_FWD_DEFINED__
typedef interface ISessionObject ISessionObject;
#endif 	/* __ISessionObject_FWD_DEFINED__ */


#ifndef __Session_FWD_DEFINED__
#define __Session_FWD_DEFINED__

#ifdef __cplusplus
typedef class Session Session;
#else
typedef struct Session Session;
#endif /* __cplusplus */

#endif 	/* __Session_FWD_DEFINED__ */


#ifndef __IApplicationObject_FWD_DEFINED__
#define __IApplicationObject_FWD_DEFINED__
typedef interface IApplicationObject IApplicationObject;
#endif 	/* __IApplicationObject_FWD_DEFINED__ */


#ifndef __Application_FWD_DEFINED__
#define __Application_FWD_DEFINED__

#ifdef __cplusplus
typedef class Application Application;
#else
typedef struct Application Application;
#endif /* __cplusplus */

#endif 	/* __Application_FWD_DEFINED__ */


#ifndef __IASPError_FWD_DEFINED__
#define __IASPError_FWD_DEFINED__
typedef interface IASPError IASPError;
#endif 	/* __IASPError_FWD_DEFINED__ */


#ifndef __IServer_FWD_DEFINED__
#define __IServer_FWD_DEFINED__
typedef interface IServer IServer;
#endif 	/* __IServer_FWD_DEFINED__ */


#ifndef __Server_FWD_DEFINED__
#define __Server_FWD_DEFINED__

#ifdef __cplusplus
typedef class Server Server;
#else
typedef struct Server Server;
#endif /* __cplusplus */

#endif 	/* __Server_FWD_DEFINED__ */


#ifndef __IScriptingContext_FWD_DEFINED__
#define __IScriptingContext_FWD_DEFINED__
typedef interface IScriptingContext IScriptingContext;
#endif 	/* __IScriptingContext_FWD_DEFINED__ */


#ifndef __ScriptingContext_FWD_DEFINED__
#define __ScriptingContext_FWD_DEFINED__

#ifdef __cplusplus
typedef class ScriptingContext ScriptingContext;
#else
typedef struct ScriptingContext ScriptingContext;
#endif /* __cplusplus */

#endif 	/* __ScriptingContext_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 



#ifndef __ASPTypeLibrary_LIBRARY_DEFINED__
#define __ASPTypeLibrary_LIBRARY_DEFINED__

/* library ASPTypeLibrary */
/* [version][lcid][helpstring][uuid] */ 


DEFINE_GUID(LIBID_ASPTypeLibrary,0xD97A6DA0,0xA85C,0x11cf,0x83,0xAE,0x00,0xA0,0xC9,0x0C,0x2B,0xD8);

#ifndef __IStringList_INTERFACE_DEFINED__
#define __IStringList_INTERFACE_DEFINED__

/* interface IStringList */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


DEFINE_GUID(IID_IStringList,0xD97A6DA0,0xA85D,0x11cf,0x83,0xAE,0x00,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A85D-11cf-83AE-00A0C90C2BD8")
    IStringList : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in][optional] */ VARIANT i,
            /* [retval][out] */ __RPC__out VARIANT *pVariantReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out int *cStrRet) = 0;
        
        virtual /* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppEnumReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IStringListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IStringList * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IStringList * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IStringList * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IStringList * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IStringList * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IStringList * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IStringList * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IStringList * This,
            /* [in][optional] */ VARIANT i,
            /* [retval][out] */ __RPC__out VARIANT *pVariantReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IStringList * This,
            /* [retval][out] */ __RPC__out int *cStrRet);
        
        /* [restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IStringList * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppEnumReturn);
        
        END_INTERFACE
    } IStringListVtbl;

    interface IStringList
    {
        CONST_VTBL struct IStringListVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IStringList_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IStringList_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IStringList_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IStringList_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IStringList_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IStringList_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IStringList_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IStringList_get_Item(This,i,pVariantReturn)	\
    ( (This)->lpVtbl -> get_Item(This,i,pVariantReturn) ) 

#define IStringList_get_Count(This,cStrRet)	\
    ( (This)->lpVtbl -> get_Count(This,cStrRet) ) 

#define IStringList_get__NewEnum(This,ppEnumReturn)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnumReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IStringList_INTERFACE_DEFINED__ */


#ifndef __IRequestDictionary_INTERFACE_DEFINED__
#define __IRequestDictionary_INTERFACE_DEFINED__

/* interface IRequestDictionary */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


DEFINE_GUID(IID_IRequestDictionary,0xD97A6DA0,0xA85F,0x11df,0x83,0xAE,0x00,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A85F-11df-83AE-00A0C90C2BD8")
    IRequestDictionary : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in][optional] */ VARIANT Var,
            /* [retval][out] */ __RPC__out VARIANT *pVariantReturn) = 0;
        
        virtual /* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppEnumReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out int *cStrRet) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Key( 
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ __RPC__out VARIANT *pvar) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IRequestDictionaryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IRequestDictionary * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IRequestDictionary * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IRequestDictionary * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IRequestDictionary * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IRequestDictionary * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IRequestDictionary * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRequestDictionary * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IRequestDictionary * This,
            /* [in][optional] */ VARIANT Var,
            /* [retval][out] */ __RPC__out VARIANT *pVariantReturn);
        
        /* [restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IRequestDictionary * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppEnumReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IRequestDictionary * This,
            /* [retval][out] */ __RPC__out int *cStrRet);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Key )( 
            __RPC__in IRequestDictionary * This,
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ __RPC__out VARIANT *pvar);
        
        END_INTERFACE
    } IRequestDictionaryVtbl;

    interface IRequestDictionary
    {
        CONST_VTBL struct IRequestDictionaryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRequestDictionary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRequestDictionary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRequestDictionary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRequestDictionary_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRequestDictionary_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRequestDictionary_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRequestDictionary_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRequestDictionary_get_Item(This,Var,pVariantReturn)	\
    ( (This)->lpVtbl -> get_Item(This,Var,pVariantReturn) ) 

#define IRequestDictionary_get__NewEnum(This,ppEnumReturn)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnumReturn) ) 

#define IRequestDictionary_get_Count(This,cStrRet)	\
    ( (This)->lpVtbl -> get_Count(This,cStrRet) ) 

#define IRequestDictionary_get_Key(This,VarKey,pvar)	\
    ( (This)->lpVtbl -> get_Key(This,VarKey,pvar) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRequestDictionary_INTERFACE_DEFINED__ */


#ifndef __IRequest_INTERFACE_DEFINED__
#define __IRequest_INTERFACE_DEFINED__

/* interface IRequest */
/* [object][hidden][dual][oleautomation][uuid] */ 


DEFINE_GUID(IID_IRequest,0xD97A6DA0,0xA861,0x11cf,0x93,0xAE,0x00,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A861-11cf-93AE-00A0C90C2BD8")
    IRequest : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ __RPC__in BSTR bstrVar,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppObjReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_QueryString( 
            /* [retval][out] */ __RPC__deref_out_opt IRequestDictionary **ppDictReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Form( 
            /* [retval][out] */ __RPC__deref_out_opt IRequestDictionary **ppDictReturn) = 0;
        
        virtual /* [hidden][propget] */ HRESULT STDMETHODCALLTYPE get_Body( 
            /* [retval][out] */ __RPC__deref_out_opt IRequestDictionary **ppDictReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ServerVariables( 
            /* [retval][out] */ __RPC__deref_out_opt IRequestDictionary **ppDictReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ClientCertificate( 
            /* [retval][out] */ __RPC__deref_out_opt IRequestDictionary **ppDictReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Cookies( 
            /* [retval][out] */ __RPC__deref_out_opt IRequestDictionary **ppDictReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TotalBytes( 
            /* [retval][out] */ __RPC__out long *pcbTotal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE BinaryRead( 
            /* [out][in] */ __RPC__inout VARIANT *pvarCountToRead,
            /* [retval][out] */ __RPC__out VARIANT *pvarReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IRequestVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IRequest * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IRequest * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IRequest * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IRequest * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IRequest * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IRequest * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRequest * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IRequest * This,
            /* [in] */ __RPC__in BSTR bstrVar,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppObjReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_QueryString )( 
            __RPC__in IRequest * This,
            /* [retval][out] */ __RPC__deref_out_opt IRequestDictionary **ppDictReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Form )( 
            __RPC__in IRequest * This,
            /* [retval][out] */ __RPC__deref_out_opt IRequestDictionary **ppDictReturn);
        
        /* [hidden][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Body )( 
            __RPC__in IRequest * This,
            /* [retval][out] */ __RPC__deref_out_opt IRequestDictionary **ppDictReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerVariables )( 
            __RPC__in IRequest * This,
            /* [retval][out] */ __RPC__deref_out_opt IRequestDictionary **ppDictReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClientCertificate )( 
            __RPC__in IRequest * This,
            /* [retval][out] */ __RPC__deref_out_opt IRequestDictionary **ppDictReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cookies )( 
            __RPC__in IRequest * This,
            /* [retval][out] */ __RPC__deref_out_opt IRequestDictionary **ppDictReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TotalBytes )( 
            __RPC__in IRequest * This,
            /* [retval][out] */ __RPC__out long *pcbTotal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *BinaryRead )( 
            __RPC__in IRequest * This,
            /* [out][in] */ __RPC__inout VARIANT *pvarCountToRead,
            /* [retval][out] */ __RPC__out VARIANT *pvarReturn);
        
        END_INTERFACE
    } IRequestVtbl;

    interface IRequest
    {
        CONST_VTBL struct IRequestVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRequest_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRequest_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRequest_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRequest_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRequest_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRequest_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRequest_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRequest_get_Item(This,bstrVar,ppObjReturn)	\
    ( (This)->lpVtbl -> get_Item(This,bstrVar,ppObjReturn) ) 

#define IRequest_get_QueryString(This,ppDictReturn)	\
    ( (This)->lpVtbl -> get_QueryString(This,ppDictReturn) ) 

#define IRequest_get_Form(This,ppDictReturn)	\
    ( (This)->lpVtbl -> get_Form(This,ppDictReturn) ) 

#define IRequest_get_Body(This,ppDictReturn)	\
    ( (This)->lpVtbl -> get_Body(This,ppDictReturn) ) 

#define IRequest_get_ServerVariables(This,ppDictReturn)	\
    ( (This)->lpVtbl -> get_ServerVariables(This,ppDictReturn) ) 

#define IRequest_get_ClientCertificate(This,ppDictReturn)	\
    ( (This)->lpVtbl -> get_ClientCertificate(This,ppDictReturn) ) 

#define IRequest_get_Cookies(This,ppDictReturn)	\
    ( (This)->lpVtbl -> get_Cookies(This,ppDictReturn) ) 

#define IRequest_get_TotalBytes(This,pcbTotal)	\
    ( (This)->lpVtbl -> get_TotalBytes(This,pcbTotal) ) 

#define IRequest_BinaryRead(This,pvarCountToRead,pvarReturn)	\
    ( (This)->lpVtbl -> BinaryRead(This,pvarCountToRead,pvarReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRequest_INTERFACE_DEFINED__ */


DEFINE_GUID(CLSID_Request,0x920c25d0,0x25d9,0x11d0,0xa5,0x5f,0x00,0xa0,0xc9,0x0c,0x20,0x91);

#ifdef __cplusplus

class DECLSPEC_UUID("920c25d0-25d9-11d0-a55f-00a0c90c2091")
Request;
#endif

#ifndef __IReadCookie_INTERFACE_DEFINED__
#define __IReadCookie_INTERFACE_DEFINED__

/* interface IReadCookie */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


DEFINE_GUID(IID_IReadCookie,0x71EAF260,0x0CE0,0x11D0,0xA5,0x3E,0x00,0xA0,0xC9,0x0C,0x20,0x91);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("71EAF260-0CE0-11D0-A53E-00A0C90C2091")
    IReadCookie : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in][optional] */ VARIANT Var,
            /* [retval][out] */ __RPC__out VARIANT *pVariantReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HasKeys( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfHasKeys) = 0;
        
        virtual /* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppEnumReturn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out int *cStrRet) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Key( 
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ __RPC__out VARIANT *pvar) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IReadCookieVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IReadCookie * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IReadCookie * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IReadCookie * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IReadCookie * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IReadCookie * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IReadCookie * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IReadCookie * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IReadCookie * This,
            /* [in][optional] */ VARIANT Var,
            /* [retval][out] */ __RPC__out VARIANT *pVariantReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasKeys )( 
            __RPC__in IReadCookie * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfHasKeys);
        
        /* [restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IReadCookie * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppEnumReturn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IReadCookie * This,
            /* [retval][out] */ __RPC__out int *cStrRet);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Key )( 
            __RPC__in IReadCookie * This,
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ __RPC__out VARIANT *pvar);
        
        END_INTERFACE
    } IReadCookieVtbl;

    interface IReadCookie
    {
        CONST_VTBL struct IReadCookieVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IReadCookie_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IReadCookie_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IReadCookie_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IReadCookie_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IReadCookie_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IReadCookie_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IReadCookie_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IReadCookie_get_Item(This,Var,pVariantReturn)	\
    ( (This)->lpVtbl -> get_Item(This,Var,pVariantReturn) ) 

#define IReadCookie_get_HasKeys(This,pfHasKeys)	\
    ( (This)->lpVtbl -> get_HasKeys(This,pfHasKeys) ) 

#define IReadCookie_get__NewEnum(This,ppEnumReturn)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnumReturn) ) 

#define IReadCookie_get_Count(This,cStrRet)	\
    ( (This)->lpVtbl -> get_Count(This,cStrRet) ) 

#define IReadCookie_get_Key(This,VarKey,pvar)	\
    ( (This)->lpVtbl -> get_Key(This,VarKey,pvar) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IReadCookie_INTERFACE_DEFINED__ */


#ifndef __IWriteCookie_INTERFACE_DEFINED__
#define __IWriteCookie_INTERFACE_DEFINED__

/* interface IWriteCookie */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


DEFINE_GUID(IID_IWriteCookie,0xD97A6DA0,0xA862,0x11cf,0x84,0xAE,0x00,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A862-11cf-84AE-00A0C90C2BD8")
    IWriteCookie : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_Item( 
            /* [in][optional] */ VARIANT key,
            /* [in] */ __RPC__in BSTR bstrValue) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Expires( 
            /* [in] */ DATE dtExpires) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Domain( 
            /* [in] */ __RPC__in BSTR bstrDomain) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Path( 
            /* [in] */ __RPC__in BSTR bstrPath) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Secure( 
            /* [in] */ VARIANT_BOOL fSecure) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HasKeys( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfHasKeys) = 0;
        
        virtual /* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppEnumReturn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IWriteCookieVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IWriteCookie * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IWriteCookie * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IWriteCookie * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IWriteCookie * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IWriteCookie * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IWriteCookie * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IWriteCookie * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Item )( 
            __RPC__in IWriteCookie * This,
            /* [in][optional] */ VARIANT key,
            /* [in] */ __RPC__in BSTR bstrValue);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Expires )( 
            __RPC__in IWriteCookie * This,
            /* [in] */ DATE dtExpires);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Domain )( 
            __RPC__in IWriteCookie * This,
            /* [in] */ __RPC__in BSTR bstrDomain);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Path )( 
            __RPC__in IWriteCookie * This,
            /* [in] */ __RPC__in BSTR bstrPath);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Secure )( 
            __RPC__in IWriteCookie * This,
            /* [in] */ VARIANT_BOOL fSecure);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasKeys )( 
            __RPC__in IWriteCookie * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfHasKeys);
        
        /* [restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IWriteCookie * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppEnumReturn);
        
        END_INTERFACE
    } IWriteCookieVtbl;

    interface IWriteCookie
    {
        CONST_VTBL struct IWriteCookieVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IWriteCookie_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IWriteCookie_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IWriteCookie_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IWriteCookie_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IWriteCookie_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IWriteCookie_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IWriteCookie_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IWriteCookie_put_Item(This,key,bstrValue)	\
    ( (This)->lpVtbl -> put_Item(This,key,bstrValue) ) 

#define IWriteCookie_put_Expires(This,dtExpires)	\
    ( (This)->lpVtbl -> put_Expires(This,dtExpires) ) 

#define IWriteCookie_put_Domain(This,bstrDomain)	\
    ( (This)->lpVtbl -> put_Domain(This,bstrDomain) ) 

#define IWriteCookie_put_Path(This,bstrPath)	\
    ( (This)->lpVtbl -> put_Path(This,bstrPath) ) 

#define IWriteCookie_put_Secure(This,fSecure)	\
    ( (This)->lpVtbl -> put_Secure(This,fSecure) ) 

#define IWriteCookie_get_HasKeys(This,pfHasKeys)	\
    ( (This)->lpVtbl -> get_HasKeys(This,pfHasKeys) ) 

#define IWriteCookie_get__NewEnum(This,ppEnumReturn)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnumReturn) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IWriteCookie_INTERFACE_DEFINED__ */


#ifndef __IResponse_INTERFACE_DEFINED__
#define __IResponse_INTERFACE_DEFINED__

/* interface IResponse */
/* [object][hidden][dual][oleautomation][uuid] */ 


DEFINE_GUID(IID_IResponse,0xD97A6DA0,0xA864,0x11cf,0x83,0xBE,0x00,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A864-11cf-83BE-00A0C90C2BD8")
    IResponse : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Buffer( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *fIsBuffering) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Buffer( 
            /* [in] */ VARIANT_BOOL fIsBuffering) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ContentType( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrContentTypeRet) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentType( 
            /* [in] */ __RPC__in BSTR bstrContentType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Expires( 
            /* [retval][out] */ __RPC__out VARIANT *pvarExpiresMinutesRet) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Expires( 
            /* [in] */ long lExpiresMinutes) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExpiresAbsolute( 
            /* [retval][out] */ __RPC__out VARIANT *pvarExpiresRet) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExpiresAbsolute( 
            /* [in] */ DATE dtExpires) = 0;
        
        virtual /* [propget][helpstring] */ HRESULT STDMETHODCALLTYPE get_Cookies( 
            /* [retval][out] */ __RPC__deref_out_opt IRequestDictionary **ppCookies) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Status( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrStatusRet) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Status( 
            /* [in] */ __RPC__in BSTR bstrStatus) = 0;
        
        virtual /* [hidden] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ __RPC__in BSTR bstrHeaderValue,
            /* [in] */ __RPC__in BSTR bstrHeaderName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddHeader( 
            /* [in] */ __RPC__in BSTR bstrHeaderName,
            /* [in] */ __RPC__in BSTR bstrHeaderValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AppendToLog( 
            /* [in] */ __RPC__in BSTR bstrLogEntry) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE BinaryWrite( 
            /* [in] */ VARIANT varInput) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE End( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Flush( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Redirect( 
            /* [in] */ __RPC__in BSTR bstrURL) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Write( 
            /* [in] */ VARIANT varText) = 0;
        
        virtual /* [hidden] */ HRESULT STDMETHODCALLTYPE WriteBlock( 
            /* [in] */ short iBlockNumber) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE IsClientConnected( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsClientConnected) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CharSet( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrCharSetRet) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CharSet( 
            /* [in] */ __RPC__in BSTR bstrCharSet) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Pics( 
            /* [in] */ __RPC__in BSTR bstrHeaderValue) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CacheControl( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrCacheControl) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CacheControl( 
            /* [in] */ __RPC__in BSTR bstrCacheControl) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CodePage( 
            /* [retval][out] */ __RPC__out long *plvar) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CodePage( 
            /* [in] */ long lvar) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LCID( 
            /* [retval][out] */ __RPC__out long *plvar) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LCID( 
            /* [in] */ long lvar) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IResponseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IResponse * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IResponse * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IResponse * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IResponse * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IResponse * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IResponse * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IResponse * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Buffer )( 
            __RPC__in IResponse * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *fIsBuffering);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Buffer )( 
            __RPC__in IResponse * This,
            /* [in] */ VARIANT_BOOL fIsBuffering);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentType )( 
            __RPC__in IResponse * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrContentTypeRet);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentType )( 
            __RPC__in IResponse * This,
            /* [in] */ __RPC__in BSTR bstrContentType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Expires )( 
            __RPC__in IResponse * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarExpiresMinutesRet);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Expires )( 
            __RPC__in IResponse * This,
            /* [in] */ long lExpiresMinutes);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExpiresAbsolute )( 
            __RPC__in IResponse * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarExpiresRet);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExpiresAbsolute )( 
            __RPC__in IResponse * This,
            /* [in] */ DATE dtExpires);
        
        /* [propget][helpstring] */ HRESULT ( STDMETHODCALLTYPE *get_Cookies )( 
            __RPC__in IResponse * This,
            /* [retval][out] */ __RPC__deref_out_opt IRequestDictionary **ppCookies);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Status )( 
            __RPC__in IResponse * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrStatusRet);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Status )( 
            __RPC__in IResponse * This,
            /* [in] */ __RPC__in BSTR bstrStatus);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            __RPC__in IResponse * This,
            /* [in] */ __RPC__in BSTR bstrHeaderValue,
            /* [in] */ __RPC__in BSTR bstrHeaderName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddHeader )( 
            __RPC__in IResponse * This,
            /* [in] */ __RPC__in BSTR bstrHeaderName,
            /* [in] */ __RPC__in BSTR bstrHeaderValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AppendToLog )( 
            __RPC__in IResponse * This,
            /* [in] */ __RPC__in BSTR bstrLogEntry);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *BinaryWrite )( 
            __RPC__in IResponse * This,
            /* [in] */ VARIANT varInput);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in IResponse * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *End )( 
            __RPC__in IResponse * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Flush )( 
            __RPC__in IResponse * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Redirect )( 
            __RPC__in IResponse * This,
            /* [in] */ __RPC__in BSTR bstrURL);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Write )( 
            __RPC__in IResponse * This,
            /* [in] */ VARIANT varText);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE *WriteBlock )( 
            __RPC__in IResponse * This,
            /* [in] */ short iBlockNumber);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *IsClientConnected )( 
            __RPC__in IResponse * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pfIsClientConnected);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CharSet )( 
            __RPC__in IResponse * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrCharSetRet);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CharSet )( 
            __RPC__in IResponse * This,
            /* [in] */ __RPC__in BSTR bstrCharSet);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Pics )( 
            __RPC__in IResponse * This,
            /* [in] */ __RPC__in BSTR bstrHeaderValue);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CacheControl )( 
            __RPC__in IResponse * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrCacheControl);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CacheControl )( 
            __RPC__in IResponse * This,
            /* [in] */ __RPC__in BSTR bstrCacheControl);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CodePage )( 
            __RPC__in IResponse * This,
            /* [retval][out] */ __RPC__out long *plvar);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CodePage )( 
            __RPC__in IResponse * This,
            /* [in] */ long lvar);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LCID )( 
            __RPC__in IResponse * This,
            /* [retval][out] */ __RPC__out long *plvar);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LCID )( 
            __RPC__in IResponse * This,
            /* [in] */ long lvar);
        
        END_INTERFACE
    } IResponseVtbl;

    interface IResponse
    {
        CONST_VTBL struct IResponseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IResponse_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IResponse_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IResponse_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IResponse_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IResponse_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IResponse_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IResponse_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IResponse_get_Buffer(This,fIsBuffering)	\
    ( (This)->lpVtbl -> get_Buffer(This,fIsBuffering) ) 

#define IResponse_put_Buffer(This,fIsBuffering)	\
    ( (This)->lpVtbl -> put_Buffer(This,fIsBuffering) ) 

#define IResponse_get_ContentType(This,pbstrContentTypeRet)	\
    ( (This)->lpVtbl -> get_ContentType(This,pbstrContentTypeRet) ) 

#define IResponse_put_ContentType(This,bstrContentType)	\
    ( (This)->lpVtbl -> put_ContentType(This,bstrContentType) ) 

#define IResponse_get_Expires(This,pvarExpiresMinutesRet)	\
    ( (This)->lpVtbl -> get_Expires(This,pvarExpiresMinutesRet) ) 

#define IResponse_put_Expires(This,lExpiresMinutes)	\
    ( (This)->lpVtbl -> put_Expires(This,lExpiresMinutes) ) 

#define IResponse_get_ExpiresAbsolute(This,pvarExpiresRet)	\
    ( (This)->lpVtbl -> get_ExpiresAbsolute(This,pvarExpiresRet) ) 

#define IResponse_put_ExpiresAbsolute(This,dtExpires)	\
    ( (This)->lpVtbl -> put_ExpiresAbsolute(This,dtExpires) ) 

#define IResponse_get_Cookies(This,ppCookies)	\
    ( (This)->lpVtbl -> get_Cookies(This,ppCookies) ) 

#define IResponse_get_Status(This,pbstrStatusRet)	\
    ( (This)->lpVtbl -> get_Status(This,pbstrStatusRet) ) 

#define IResponse_put_Status(This,bstrStatus)	\
    ( (This)->lpVtbl -> put_Status(This,bstrStatus) ) 

#define IResponse_Add(This,bstrHeaderValue,bstrHeaderName)	\
    ( (This)->lpVtbl -> Add(This,bstrHeaderValue,bstrHeaderName) ) 

#define IResponse_AddHeader(This,bstrHeaderName,bstrHeaderValue)	\
    ( (This)->lpVtbl -> AddHeader(This,bstrHeaderName,bstrHeaderValue) ) 

#define IResponse_AppendToLog(This,bstrLogEntry)	\
    ( (This)->lpVtbl -> AppendToLog(This,bstrLogEntry) ) 

#define IResponse_BinaryWrite(This,varInput)	\
    ( (This)->lpVtbl -> BinaryWrite(This,varInput) ) 

#define IResponse_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define IResponse_End(This)	\
    ( (This)->lpVtbl -> End(This) ) 

#define IResponse_Flush(This)	\
    ( (This)->lpVtbl -> Flush(This) ) 

#define IResponse_Redirect(This,bstrURL)	\
    ( (This)->lpVtbl -> Redirect(This,bstrURL) ) 

#define IResponse_Write(This,varText)	\
    ( (This)->lpVtbl -> Write(This,varText) ) 

#define IResponse_WriteBlock(This,iBlockNumber)	\
    ( (This)->lpVtbl -> WriteBlock(This,iBlockNumber) ) 

#define IResponse_IsClientConnected(This,pfIsClientConnected)	\
    ( (This)->lpVtbl -> IsClientConnected(This,pfIsClientConnected) ) 

#define IResponse_get_CharSet(This,pbstrCharSetRet)	\
    ( (This)->lpVtbl -> get_CharSet(This,pbstrCharSetRet) ) 

#define IResponse_put_CharSet(This,bstrCharSet)	\
    ( (This)->lpVtbl -> put_CharSet(This,bstrCharSet) ) 

#define IResponse_Pics(This,bstrHeaderValue)	\
    ( (This)->lpVtbl -> Pics(This,bstrHeaderValue) ) 

#define IResponse_get_CacheControl(This,pbstrCacheControl)	\
    ( (This)->lpVtbl -> get_CacheControl(This,pbstrCacheControl) ) 

#define IResponse_put_CacheControl(This,bstrCacheControl)	\
    ( (This)->lpVtbl -> put_CacheControl(This,bstrCacheControl) ) 

#define IResponse_get_CodePage(This,plvar)	\
    ( (This)->lpVtbl -> get_CodePage(This,plvar) ) 

#define IResponse_put_CodePage(This,lvar)	\
    ( (This)->lpVtbl -> put_CodePage(This,lvar) ) 

#define IResponse_get_LCID(This,plvar)	\
    ( (This)->lpVtbl -> get_LCID(This,plvar) ) 

#define IResponse_put_LCID(This,lvar)	\
    ( (This)->lpVtbl -> put_LCID(This,lvar) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IResponse_INTERFACE_DEFINED__ */


DEFINE_GUID(CLSID_Response,0x46E19BA0,0x25DD,0x11D0,0xA5,0x5F,0x00,0xA0,0xC9,0x0C,0x20,0x91);

#ifdef __cplusplus

class DECLSPEC_UUID("46E19BA0-25DD-11D0-A55F-00A0C90C2091")
Response;
#endif

#ifndef __IVariantDictionary_INTERFACE_DEFINED__
#define __IVariantDictionary_INTERFACE_DEFINED__

/* interface IVariantDictionary */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


DEFINE_GUID(IID_IVariantDictionary,0x4a7deb90,0xb069,0x11d0,0xb3,0x73,0x00,0xa0,0xc9,0x0c,0x2b,0xd8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4a7deb90-b069-11d0-b373-00a0c90c2bd8")
    IVariantDictionary : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ __RPC__out VARIANT *pvar) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Item( 
            /* [in] */ VARIANT VarKey,
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Item( 
            /* [in] */ VARIANT VarKey,
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Key( 
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ __RPC__out VARIANT *pvar) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ __RPC__out int *cStrRet) = 0;
        
        virtual /* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppEnumReturn) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT VarKey) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveAll( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IVariantDictionaryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IVariantDictionary * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IVariantDictionary * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IVariantDictionary * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IVariantDictionary * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IVariantDictionary * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IVariantDictionary * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IVariantDictionary * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in IVariantDictionary * This,
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ __RPC__out VARIANT *pvar);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Item )( 
            __RPC__in IVariantDictionary * This,
            /* [in] */ VARIANT VarKey,
            /* [in] */ VARIANT var);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Item )( 
            __RPC__in IVariantDictionary * This,
            /* [in] */ VARIANT VarKey,
            /* [in] */ VARIANT var);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Key )( 
            __RPC__in IVariantDictionary * This,
            /* [in] */ VARIANT VarKey,
            /* [retval][out] */ __RPC__out VARIANT *pvar);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            __RPC__in IVariantDictionary * This,
            /* [retval][out] */ __RPC__out int *cStrRet);
        
        /* [restricted][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            __RPC__in IVariantDictionary * This,
            /* [retval][out] */ __RPC__deref_out_opt IUnknown **ppEnumReturn);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            __RPC__in IVariantDictionary * This,
            /* [in] */ VARIANT VarKey);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveAll )( 
            __RPC__in IVariantDictionary * This);
        
        END_INTERFACE
    } IVariantDictionaryVtbl;

    interface IVariantDictionary
    {
        CONST_VTBL struct IVariantDictionaryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IVariantDictionary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IVariantDictionary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IVariantDictionary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IVariantDictionary_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IVariantDictionary_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IVariantDictionary_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IVariantDictionary_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IVariantDictionary_get_Item(This,VarKey,pvar)	\
    ( (This)->lpVtbl -> get_Item(This,VarKey,pvar) ) 

#define IVariantDictionary_put_Item(This,VarKey,var)	\
    ( (This)->lpVtbl -> put_Item(This,VarKey,var) ) 

#define IVariantDictionary_putref_Item(This,VarKey,var)	\
    ( (This)->lpVtbl -> putref_Item(This,VarKey,var) ) 

#define IVariantDictionary_get_Key(This,VarKey,pvar)	\
    ( (This)->lpVtbl -> get_Key(This,VarKey,pvar) ) 

#define IVariantDictionary_get_Count(This,cStrRet)	\
    ( (This)->lpVtbl -> get_Count(This,cStrRet) ) 

#define IVariantDictionary_get__NewEnum(This,ppEnumReturn)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnumReturn) ) 

#define IVariantDictionary_Remove(This,VarKey)	\
    ( (This)->lpVtbl -> Remove(This,VarKey) ) 

#define IVariantDictionary_RemoveAll(This)	\
    ( (This)->lpVtbl -> RemoveAll(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IVariantDictionary_INTERFACE_DEFINED__ */


#ifndef __ISessionObject_INTERFACE_DEFINED__
#define __ISessionObject_INTERFACE_DEFINED__

/* interface ISessionObject */
/* [object][hidden][oleautomation][dual][uuid] */ 


DEFINE_GUID(IID_ISessionObject,0xD97A6DA0,0xA865,0x11cf,0x83,0xAF,0x00,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A865-11cf-83AF-00A0C90C2BD8")
    ISessionObject : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SessionID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrRet) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [in] */ __RPC__in BSTR bstrValue,
            /* [retval][out] */ __RPC__out VARIANT *pvar) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ __RPC__in BSTR bstrValue,
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Value( 
            /* [in] */ __RPC__in BSTR bstrValue,
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Timeout( 
            /* [retval][out] */ __RPC__out long *plvar) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Timeout( 
            /* [in] */ long lvar) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Abandon( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CodePage( 
            /* [retval][out] */ __RPC__out long *plvar) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CodePage( 
            /* [in] */ long lvar) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LCID( 
            /* [retval][out] */ __RPC__out long *plvar) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LCID( 
            /* [in] */ long lvar) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StaticObjects( 
            /* [retval][out] */ __RPC__deref_out_opt IVariantDictionary **ppTaggedObjects) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Contents( 
            /* [retval][out] */ __RPC__deref_out_opt IVariantDictionary **ppProperties) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct ISessionObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in ISessionObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in ISessionObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in ISessionObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in ISessionObject * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in ISessionObject * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in ISessionObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISessionObject * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SessionID )( 
            __RPC__in ISessionObject * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrRet);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in ISessionObject * This,
            /* [in] */ __RPC__in BSTR bstrValue,
            /* [retval][out] */ __RPC__out VARIANT *pvar);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in ISessionObject * This,
            /* [in] */ __RPC__in BSTR bstrValue,
            /* [in] */ VARIANT var);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Value )( 
            __RPC__in ISessionObject * This,
            /* [in] */ __RPC__in BSTR bstrValue,
            /* [in] */ VARIANT var);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Timeout )( 
            __RPC__in ISessionObject * This,
            /* [retval][out] */ __RPC__out long *plvar);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Timeout )( 
            __RPC__in ISessionObject * This,
            /* [in] */ long lvar);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Abandon )( 
            __RPC__in ISessionObject * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CodePage )( 
            __RPC__in ISessionObject * This,
            /* [retval][out] */ __RPC__out long *plvar);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CodePage )( 
            __RPC__in ISessionObject * This,
            /* [in] */ long lvar);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LCID )( 
            __RPC__in ISessionObject * This,
            /* [retval][out] */ __RPC__out long *plvar);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LCID )( 
            __RPC__in ISessionObject * This,
            /* [in] */ long lvar);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StaticObjects )( 
            __RPC__in ISessionObject * This,
            /* [retval][out] */ __RPC__deref_out_opt IVariantDictionary **ppTaggedObjects);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Contents )( 
            __RPC__in ISessionObject * This,
            /* [retval][out] */ __RPC__deref_out_opt IVariantDictionary **ppProperties);
        
        END_INTERFACE
    } ISessionObjectVtbl;

    interface ISessionObject
    {
        CONST_VTBL struct ISessionObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISessionObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISessionObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISessionObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISessionObject_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISessionObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISessionObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISessionObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISessionObject_get_SessionID(This,pbstrRet)	\
    ( (This)->lpVtbl -> get_SessionID(This,pbstrRet) ) 

#define ISessionObject_get_Value(This,bstrValue,pvar)	\
    ( (This)->lpVtbl -> get_Value(This,bstrValue,pvar) ) 

#define ISessionObject_put_Value(This,bstrValue,var)	\
    ( (This)->lpVtbl -> put_Value(This,bstrValue,var) ) 

#define ISessionObject_putref_Value(This,bstrValue,var)	\
    ( (This)->lpVtbl -> putref_Value(This,bstrValue,var) ) 

#define ISessionObject_get_Timeout(This,plvar)	\
    ( (This)->lpVtbl -> get_Timeout(This,plvar) ) 

#define ISessionObject_put_Timeout(This,lvar)	\
    ( (This)->lpVtbl -> put_Timeout(This,lvar) ) 

#define ISessionObject_Abandon(This)	\
    ( (This)->lpVtbl -> Abandon(This) ) 

#define ISessionObject_get_CodePage(This,plvar)	\
    ( (This)->lpVtbl -> get_CodePage(This,plvar) ) 

#define ISessionObject_put_CodePage(This,lvar)	\
    ( (This)->lpVtbl -> put_CodePage(This,lvar) ) 

#define ISessionObject_get_LCID(This,plvar)	\
    ( (This)->lpVtbl -> get_LCID(This,plvar) ) 

#define ISessionObject_put_LCID(This,lvar)	\
    ( (This)->lpVtbl -> put_LCID(This,lvar) ) 

#define ISessionObject_get_StaticObjects(This,ppTaggedObjects)	\
    ( (This)->lpVtbl -> get_StaticObjects(This,ppTaggedObjects) ) 

#define ISessionObject_get_Contents(This,ppProperties)	\
    ( (This)->lpVtbl -> get_Contents(This,ppProperties) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISessionObject_INTERFACE_DEFINED__ */


DEFINE_GUID(CLSID_Session,0x509F8F20,0x25DE,0x11D0,0xA5,0x5F,0x00,0xA0,0xC9,0x0C,0x20,0x91);

#ifdef __cplusplus

class DECLSPEC_UUID("509F8F20-25DE-11D0-A55F-00A0C90C2091")
Session;
#endif

#ifndef __IApplicationObject_INTERFACE_DEFINED__
#define __IApplicationObject_INTERFACE_DEFINED__

/* interface IApplicationObject */
/* [object][hidden][dual][oleautomation][uuid] */ 


DEFINE_GUID(IID_IApplicationObject,0xD97A6DA0,0xA866,0x11cf,0x83,0xAE,0x10,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A866-11cf-83AE-10A0C90C2BD8")
    IApplicationObject : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [in] */ __RPC__in BSTR bstrValue,
            /* [retval][out] */ __RPC__out VARIANT *pvar) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ __RPC__in BSTR bstrValue,
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Value( 
            /* [in] */ __RPC__in BSTR bstrValue,
            /* [in] */ VARIANT var) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Lock( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UnLock( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_StaticObjects( 
            /* [retval][out] */ __RPC__deref_out_opt IVariantDictionary **ppProperties) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Contents( 
            /* [retval][out] */ __RPC__deref_out_opt IVariantDictionary **ppProperties) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IApplicationObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IApplicationObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IApplicationObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IApplicationObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IApplicationObject * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IApplicationObject * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IApplicationObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IApplicationObject * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in IApplicationObject * This,
            /* [in] */ __RPC__in BSTR bstrValue,
            /* [retval][out] */ __RPC__out VARIANT *pvar);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in IApplicationObject * This,
            /* [in] */ __RPC__in BSTR bstrValue,
            /* [in] */ VARIANT var);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Value )( 
            __RPC__in IApplicationObject * This,
            /* [in] */ __RPC__in BSTR bstrValue,
            /* [in] */ VARIANT var);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Lock )( 
            __RPC__in IApplicationObject * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UnLock )( 
            __RPC__in IApplicationObject * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StaticObjects )( 
            __RPC__in IApplicationObject * This,
            /* [retval][out] */ __RPC__deref_out_opt IVariantDictionary **ppProperties);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Contents )( 
            __RPC__in IApplicationObject * This,
            /* [retval][out] */ __RPC__deref_out_opt IVariantDictionary **ppProperties);
        
        END_INTERFACE
    } IApplicationObjectVtbl;

    interface IApplicationObject
    {
        CONST_VTBL struct IApplicationObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IApplicationObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IApplicationObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IApplicationObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IApplicationObject_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IApplicationObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IApplicationObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IApplicationObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IApplicationObject_get_Value(This,bstrValue,pvar)	\
    ( (This)->lpVtbl -> get_Value(This,bstrValue,pvar) ) 

#define IApplicationObject_put_Value(This,bstrValue,var)	\
    ( (This)->lpVtbl -> put_Value(This,bstrValue,var) ) 

#define IApplicationObject_putref_Value(This,bstrValue,var)	\
    ( (This)->lpVtbl -> putref_Value(This,bstrValue,var) ) 

#define IApplicationObject_Lock(This)	\
    ( (This)->lpVtbl -> Lock(This) ) 

#define IApplicationObject_UnLock(This)	\
    ( (This)->lpVtbl -> UnLock(This) ) 

#define IApplicationObject_get_StaticObjects(This,ppProperties)	\
    ( (This)->lpVtbl -> get_StaticObjects(This,ppProperties) ) 

#define IApplicationObject_get_Contents(This,ppProperties)	\
    ( (This)->lpVtbl -> get_Contents(This,ppProperties) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IApplicationObject_INTERFACE_DEFINED__ */


DEFINE_GUID(CLSID_Application,0x7C3BAF00,0x25DE,0x11D0,0xA5,0x5F,0x00,0xA0,0xC9,0x0C,0x20,0x91);

#ifdef __cplusplus

class DECLSPEC_UUID("7C3BAF00-25DE-11D0-A55F-00A0C90C2091")
Application;
#endif

#ifndef __IASPError_INTERFACE_DEFINED__
#define __IASPError_INTERFACE_DEFINED__

/* interface IASPError */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


DEFINE_GUID(IID_IASPError,0xF5A6893E,0xA0F5,0x11d1,0x8C,0x4B,0x00,0xC0,0x4F,0xC3,0x24,0xA4);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5A6893E-A0F5-11d1-8C4B-00C04FC324A4")
    IASPError : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ASPCode( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrASPCode) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Number( 
            /* [retval][out] */ __RPC__out long *plNumber) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Category( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrSource) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_File( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrFileName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Line( 
            /* [retval][out] */ __RPC__out long *plLineNumber) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ASPDescription( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Column( 
            /* [retval][out] */ __RPC__out long *plColumn) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Source( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrLineText) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IASPErrorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IASPError * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IASPError * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IASPError * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IASPError * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IASPError * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IASPError * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IASPError * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ASPCode )( 
            __RPC__in IASPError * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrASPCode);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Number )( 
            __RPC__in IASPError * This,
            /* [retval][out] */ __RPC__out long *plNumber);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Category )( 
            __RPC__in IASPError * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrSource);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_File )( 
            __RPC__in IASPError * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrFileName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Line )( 
            __RPC__in IASPError * This,
            /* [retval][out] */ __RPC__out long *plLineNumber);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IASPError * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ASPDescription )( 
            __RPC__in IASPError * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Column )( 
            __RPC__in IASPError * This,
            /* [retval][out] */ __RPC__out long *plColumn);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            __RPC__in IASPError * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrLineText);
        
        END_INTERFACE
    } IASPErrorVtbl;

    interface IASPError
    {
        CONST_VTBL struct IASPErrorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IASPError_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IASPError_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IASPError_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IASPError_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IASPError_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IASPError_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IASPError_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IASPError_get_ASPCode(This,pbstrASPCode)	\
    ( (This)->lpVtbl -> get_ASPCode(This,pbstrASPCode) ) 

#define IASPError_get_Number(This,plNumber)	\
    ( (This)->lpVtbl -> get_Number(This,plNumber) ) 

#define IASPError_get_Category(This,pbstrSource)	\
    ( (This)->lpVtbl -> get_Category(This,pbstrSource) ) 

#define IASPError_get_File(This,pbstrFileName)	\
    ( (This)->lpVtbl -> get_File(This,pbstrFileName) ) 

#define IASPError_get_Line(This,plLineNumber)	\
    ( (This)->lpVtbl -> get_Line(This,plLineNumber) ) 

#define IASPError_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IASPError_get_ASPDescription(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_ASPDescription(This,pbstrDescription) ) 

#define IASPError_get_Column(This,plColumn)	\
    ( (This)->lpVtbl -> get_Column(This,plColumn) ) 

#define IASPError_get_Source(This,pbstrLineText)	\
    ( (This)->lpVtbl -> get_Source(This,pbstrLineText) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IASPError_INTERFACE_DEFINED__ */


#ifndef __IServer_INTERFACE_DEFINED__
#define __IServer_INTERFACE_DEFINED__

/* interface IServer */
/* [object][hidden][dual][oleautomation][uuid] */ 


DEFINE_GUID(IID_IServer,0xD97A6DA0,0xA867,0x11cf,0x83,0xAE,0x01,0xA0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A867-11cf-83AE-01A0C90C2BD8")
    IServer : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ScriptTimeout( 
            /* [retval][out] */ __RPC__out long *plTimeoutSeconds) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScriptTimeout( 
            /* [in] */ long lTimeoutSeconds) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateObject( 
            /* [in] */ __RPC__in BSTR bstrProgID,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppDispObject) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE HTMLEncode( 
            /* [in] */ __RPC__in BSTR bstrIn,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrEncoded) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MapPath( 
            /* [in] */ __RPC__in BSTR bstrLogicalPath,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrPhysicalPath) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE URLEncode( 
            /* [in] */ __RPC__in BSTR bstrIn,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrEncoded) = 0;
        
        virtual /* [hidden] */ HRESULT STDMETHODCALLTYPE URLPathEncode( 
            /* [in] */ __RPC__in BSTR bstrIn,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrEncoded) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Execute( 
            /* [in] */ __RPC__in BSTR bstrLogicalPath) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Transfer( 
            /* [in] */ __RPC__in BSTR bstrLogicalPath) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetLastError( 
            /* [retval][out] */ __RPC__deref_out_opt IASPError **ppASPErrorObject) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IServerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IServer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IServer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IServer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IServer * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IServer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IServer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IServer * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScriptTimeout )( 
            __RPC__in IServer * This,
            /* [retval][out] */ __RPC__out long *plTimeoutSeconds);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScriptTimeout )( 
            __RPC__in IServer * This,
            /* [in] */ long lTimeoutSeconds);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateObject )( 
            __RPC__in IServer * This,
            /* [in] */ __RPC__in BSTR bstrProgID,
            /* [retval][out] */ __RPC__deref_out_opt IDispatch **ppDispObject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *HTMLEncode )( 
            __RPC__in IServer * This,
            /* [in] */ __RPC__in BSTR bstrIn,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrEncoded);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MapPath )( 
            __RPC__in IServer * This,
            /* [in] */ __RPC__in BSTR bstrLogicalPath,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrPhysicalPath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *URLEncode )( 
            __RPC__in IServer * This,
            /* [in] */ __RPC__in BSTR bstrIn,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrEncoded);
        
        /* [hidden] */ HRESULT ( STDMETHODCALLTYPE *URLPathEncode )( 
            __RPC__in IServer * This,
            /* [in] */ __RPC__in BSTR bstrIn,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrEncoded);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            __RPC__in IServer * This,
            /* [in] */ __RPC__in BSTR bstrLogicalPath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Transfer )( 
            __RPC__in IServer * This,
            /* [in] */ __RPC__in BSTR bstrLogicalPath);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetLastError )( 
            __RPC__in IServer * This,
            /* [retval][out] */ __RPC__deref_out_opt IASPError **ppASPErrorObject);
        
        END_INTERFACE
    } IServerVtbl;

    interface IServer
    {
        CONST_VTBL struct IServerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IServer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IServer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IServer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IServer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IServer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IServer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IServer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IServer_get_ScriptTimeout(This,plTimeoutSeconds)	\
    ( (This)->lpVtbl -> get_ScriptTimeout(This,plTimeoutSeconds) ) 

#define IServer_put_ScriptTimeout(This,lTimeoutSeconds)	\
    ( (This)->lpVtbl -> put_ScriptTimeout(This,lTimeoutSeconds) ) 

#define IServer_CreateObject(This,bstrProgID,ppDispObject)	\
    ( (This)->lpVtbl -> CreateObject(This,bstrProgID,ppDispObject) ) 

#define IServer_HTMLEncode(This,bstrIn,pbstrEncoded)	\
    ( (This)->lpVtbl -> HTMLEncode(This,bstrIn,pbstrEncoded) ) 

#define IServer_MapPath(This,bstrLogicalPath,pbstrPhysicalPath)	\
    ( (This)->lpVtbl -> MapPath(This,bstrLogicalPath,pbstrPhysicalPath) ) 

#define IServer_URLEncode(This,bstrIn,pbstrEncoded)	\
    ( (This)->lpVtbl -> URLEncode(This,bstrIn,pbstrEncoded) ) 

#define IServer_URLPathEncode(This,bstrIn,pbstrEncoded)	\
    ( (This)->lpVtbl -> URLPathEncode(This,bstrIn,pbstrEncoded) ) 

#define IServer_Execute(This,bstrLogicalPath)	\
    ( (This)->lpVtbl -> Execute(This,bstrLogicalPath) ) 

#define IServer_Transfer(This,bstrLogicalPath)	\
    ( (This)->lpVtbl -> Transfer(This,bstrLogicalPath) ) 

#define IServer_GetLastError(This,ppASPErrorObject)	\
    ( (This)->lpVtbl -> GetLastError(This,ppASPErrorObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IServer_INTERFACE_DEFINED__ */


DEFINE_GUID(CLSID_Server,0xA506D160,0x25E0,0x11D0,0xA5,0x5F,0x00,0xA0,0xC9,0x0C,0x20,0x91);

#ifdef __cplusplus

class DECLSPEC_UUID("A506D160-25E0-11D0-A55F-00A0C90C2091")
Server;
#endif

#ifndef __IScriptingContext_INTERFACE_DEFINED__
#define __IScriptingContext_INTERFACE_DEFINED__

/* interface IScriptingContext */
/* [object][hidden][dual][oleautomation][helpstring][uuid] */ 


DEFINE_GUID(IID_IScriptingContext,0xD97A6DA0,0xA868,0x11cf,0x83,0xAE,0x00,0xB0,0xC9,0x0C,0x2B,0xD8);

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D97A6DA0-A868-11cf-83AE-00B0C90C2BD8")
    IScriptingContext : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Request( 
            /* [retval][out] */ __RPC__deref_out_opt IRequest **ppRequest) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Response( 
            /* [retval][out] */ __RPC__deref_out_opt IResponse **ppResponse) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Server( 
            /* [retval][out] */ __RPC__deref_out_opt IServer **ppServer) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Session( 
            /* [retval][out] */ __RPC__deref_out_opt ISessionObject **ppSession) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ __RPC__deref_out_opt IApplicationObject **ppApplication) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IScriptingContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IScriptingContext * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IScriptingContext * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IScriptingContext * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IScriptingContext * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IScriptingContext * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IScriptingContext * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IScriptingContext * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Request )( 
            __RPC__in IScriptingContext * This,
            /* [retval][out] */ __RPC__deref_out_opt IRequest **ppRequest);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Response )( 
            __RPC__in IScriptingContext * This,
            /* [retval][out] */ __RPC__deref_out_opt IResponse **ppResponse);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Server )( 
            __RPC__in IScriptingContext * This,
            /* [retval][out] */ __RPC__deref_out_opt IServer **ppServer);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Session )( 
            __RPC__in IScriptingContext * This,
            /* [retval][out] */ __RPC__deref_out_opt ISessionObject **ppSession);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            __RPC__in IScriptingContext * This,
            /* [retval][out] */ __RPC__deref_out_opt IApplicationObject **ppApplication);
        
        END_INTERFACE
    } IScriptingContextVtbl;

    interface IScriptingContext
    {
        CONST_VTBL struct IScriptingContextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IScriptingContext_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IScriptingContext_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IScriptingContext_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IScriptingContext_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IScriptingContext_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IScriptingContext_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IScriptingContext_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IScriptingContext_get_Request(This,ppRequest)	\
    ( (This)->lpVtbl -> get_Request(This,ppRequest) ) 

#define IScriptingContext_get_Response(This,ppResponse)	\
    ( (This)->lpVtbl -> get_Response(This,ppResponse) ) 

#define IScriptingContext_get_Server(This,ppServer)	\
    ( (This)->lpVtbl -> get_Server(This,ppServer) ) 

#define IScriptingContext_get_Session(This,ppSession)	\
    ( (This)->lpVtbl -> get_Session(This,ppSession) ) 

#define IScriptingContext_get_Application(This,ppApplication)	\
    ( (This)->lpVtbl -> get_Application(This,ppApplication) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IScriptingContext_INTERFACE_DEFINED__ */


DEFINE_GUID(CLSID_ScriptingContext,0xD97A6DA0,0xA868,0x11cf,0x83,0xAE,0x11,0xB0,0xC9,0x0C,0x2B,0xD8);

#ifdef __cplusplus

class DECLSPEC_UUID("D97A6DA0-A868-11cf-83AE-11B0C90C2BD8")
ScriptingContext;
#endif
#endif /* __ASPTypeLibrary_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\atsmedia.h ===
//------------------------------------------------------------------------------
// File: ATSMedia.h
//
// Desc: Broadcast Driver Architecture Media Definitions for ATSC
//
// Copyright (c) 1996 - 2001, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#if !defined(_KSMEDIA_)
#error KSMEDIA.H must be included before BDAMEDIA.H
#endif // !defined(_KSMEDIA_)

#if !defined(_BDAMEDIA_)
#error BDAMEDIA.H must be included before ATSCMEDIA.H
#endif // !defined(_KSMEDIA_)

#if !defined(_ATSCMEDIA_)
#define _ATSCMEDIA_


//===========================================================================
//
//  ATSC Network Type
//
//===========================================================================

#define STATIC_BDANETWORKTYPE_ATSC\
    0x71985f51, 0x1ca1, 0x11d3, 0x9c, 0xc8, 0x0, 0xc0, 0x4f, 0x79, 0x71, 0xe0
DEFINE_GUIDSTRUCT("71985F51-1CA1-11d3-9CC8-00C04F7971E0", BDANETWORKTYPE_ATSC);
#define BDANETWORKTYPE_ATSC DEFINE_GUIDNAMED(BDANETWORKTYPE_ATSC)


#endif // _ATSCMEDIA_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\audiosessiontypes.h ===
//
// AudioSessionTypes.h -- Copyright Microsoft Corporation, All Rights Reserved.
//
// Description: Type definitions used by the audio session manager RPC/COM interfaces
//
#pragma once
#ifndef __AUDIOSESSIONTYPES__                                                               
#define __AUDIOSESSIONTYPES__

#if defined(__midl)
#define MIDL_SIZE_IS(x) [size_is(x)]
#define MIDL_STRING [string]
#define MIDL_ANYSIZE_ARRAY
#else   // !defined(__midl)
#define MIDL_SIZE_IS(x)
#define MIDL_STRING
#define MIDL_ANYSIZE_ARRAY ANYSIZE_ARRAY
#endif  // defined(__midl)

//-------------------------------------------------------------------------
// Description: AudioClient share mode
//                                   
//     AUDCLNT_SHAREMODE_SHARED -    The device will be opened in shared mode and use the 
//                                   WAS format.
//     AUDCLNT_SHAREMODE_EXCLUSIVE - The device will be opened in exclusive mode and use the 
//                                   application specified format.
//
typedef enum _AUDCLNT_SHAREMODE
{ 
    AUDCLNT_SHAREMODE_SHARED, 
    AUDCLNT_SHAREMODE_EXCLUSIVE 
} AUDCLNT_SHAREMODE;

//-------------------------------------------------------------------------
// Description: AudioClient stream flags
//
// Can be a combination of AUDCLNT_STREAMFLAGS and AUDCLNT_SYSFXFLAGS:
//
// AUDCLNT_STREAMFLAGS (this group of flags uses the high word,
// w/exception of high-bit which is reserved, 0x7FFF0000):
//
//                                  
//     AUDCLNT_STREAMFLAGS_CROSSPROCESS - Audio policy control for this stream will be shared with 
//                                        with other process sessions that use the same audio session 
//                                        GUID.
//     AUDCLNT_STREAMFLAGS_LOOPBACK -     Initializes a renderer endpoint for a loopback audio application. 
//                                        In this mode, a capture stream will be opened on the specified 
//                                        renderer endpoint. Shared mode and a renderer endpoint is required.
//                                        Otherwise the IAudioClient::Initialize call will fail. If the 
//                                        initialize is successful, a capture stream will be available 
//                                        from the IAudioClient object.
//
//     AUDCLNT_STREAMFLAGS_EVENTCALLBACK - An exclusive mode client will supply an event handle that will be
//                                         signaled when an IRP completes (or a waveRT buffer completes) telling
//                                         it to fill the next buffer
//
//     AUDCLNT_STREAMFLAGS_NOPERSIST -     Session state will not be persisted
//
//     AUDCLNT_SESSIONFLAGS_EXPIREWHENUNOWNED -       Session expires when there are no streams and no owning
//                                                    session controls.
//
//     AUDCLNT_SESSIONFLAGS_DISPLAY_HIDE -            Don't show volume control in the Volume Mixer.
//
//     AUDCLNT_SESSIONFLAGS_DISPLAY_HIDEWHENEXPIRED - Don't show volume control in the Volume Mixer after the
//                                                    session expires.
//
// AUDCLNT_SYSFXFLAGS (these flags use low word 0x0000FFFF):
//
//     none defined currently
//
#define AUDCLNT_STREAMFLAGS_CROSSPROCESS             0x00010000
#define AUDCLNT_STREAMFLAGS_LOOPBACK                 0x00020000
#define AUDCLNT_STREAMFLAGS_EVENTCALLBACK            0x00040000
#define AUDCLNT_STREAMFLAGS_NOPERSIST                0x00080000
#define AUDCLNT_STREAMFLAGS_RATEADJUST               0x00100000
#define AUDCLNT_SESSIONFLAGS_EXPIREWHENUNOWNED       0x10000000
#define AUDCLNT_SESSIONFLAGS_DISPLAY_HIDE            0x20000000
#define AUDCLNT_SESSIONFLAGS_DISPLAY_HIDEWHENEXPIRED 0x40000000

//-------------------------------------------------------------------------
// Description: AudioSession State.
//
//      AudioSessionStateInactive - The session has no active audio streams.
//      AudioSessionStateActive - The session has active audio streams.
//      AudioSessionStateExpired - The session is dormant.
typedef enum _AudioSessionState
{
    AudioSessionStateInactive = 0,
    AudioSessionStateActive = 1,
    AudioSessionStateExpired = 2
} AudioSessionState;


#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\audiopolicy.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for audiopolicy.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __audiopolicy_h__
#define __audiopolicy_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IAudioSessionEvents_FWD_DEFINED__
#define __IAudioSessionEvents_FWD_DEFINED__
typedef interface IAudioSessionEvents IAudioSessionEvents;
#endif 	/* __IAudioSessionEvents_FWD_DEFINED__ */


#ifndef __IAudioSessionControl_FWD_DEFINED__
#define __IAudioSessionControl_FWD_DEFINED__
typedef interface IAudioSessionControl IAudioSessionControl;
#endif 	/* __IAudioSessionControl_FWD_DEFINED__ */


#ifndef __IAudioSessionControl2_FWD_DEFINED__
#define __IAudioSessionControl2_FWD_DEFINED__
typedef interface IAudioSessionControl2 IAudioSessionControl2;
#endif 	/* __IAudioSessionControl2_FWD_DEFINED__ */


#ifndef __IAudioSessionManager_FWD_DEFINED__
#define __IAudioSessionManager_FWD_DEFINED__
typedef interface IAudioSessionManager IAudioSessionManager;
#endif 	/* __IAudioSessionManager_FWD_DEFINED__ */


#ifndef __IAudioVolumeDuckNotification_FWD_DEFINED__
#define __IAudioVolumeDuckNotification_FWD_DEFINED__
typedef interface IAudioVolumeDuckNotification IAudioVolumeDuckNotification;
#endif 	/* __IAudioVolumeDuckNotification_FWD_DEFINED__ */


#ifndef __IAudioSessionNotification_FWD_DEFINED__
#define __IAudioSessionNotification_FWD_DEFINED__
typedef interface IAudioSessionNotification IAudioSessionNotification;
#endif 	/* __IAudioSessionNotification_FWD_DEFINED__ */


#ifndef __IAudioSessionEnumerator_FWD_DEFINED__
#define __IAudioSessionEnumerator_FWD_DEFINED__
typedef interface IAudioSessionEnumerator IAudioSessionEnumerator;
#endif 	/* __IAudioSessionEnumerator_FWD_DEFINED__ */


#ifndef __IAudioSessionManager2_FWD_DEFINED__
#define __IAudioSessionManager2_FWD_DEFINED__
typedef interface IAudioSessionManager2 IAudioSessionManager2;
#endif 	/* __IAudioSessionManager2_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "propidl.h"
#include "AudioSessionTypes.h"
#include "AudioClient.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_audiopolicy_0000_0000 */
/* [local] */ 

typedef 
enum AudioSessionDisconnectReason
    {	DisconnectReasonDeviceRemoval	= 0,
	DisconnectReasonServerShutdown	= ( DisconnectReasonDeviceRemoval + 1 ) ,
	DisconnectReasonFormatChanged	= ( DisconnectReasonServerShutdown + 1 ) ,
	DisconnectReasonSessionLogoff	= ( DisconnectReasonFormatChanged + 1 ) ,
	DisconnectReasonSessionDisconnected	= ( DisconnectReasonSessionLogoff + 1 ) ,
	DisconnectReasonExclusiveModeOverride	= ( DisconnectReasonSessionDisconnected + 1 ) 
    } 	AudioSessionDisconnectReason;



extern RPC_IF_HANDLE __MIDL_itf_audiopolicy_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_audiopolicy_0000_0000_v0_0_s_ifspec;

#ifndef __IAudioSessionEvents_INTERFACE_DEFINED__
#define __IAudioSessionEvents_INTERFACE_DEFINED__

/* interface IAudioSessionEvents */
/* [local][uuid][unique][object] */ 


EXTERN_C const IID IID_IAudioSessionEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("24918ACC-64B3-37C1-8CA9-74A66E9957A8")
    IAudioSessionEvents : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnDisplayNameChanged( 
            /* [annotation][string][in] */ 
            __in  LPCWSTR NewDisplayName,
            /* [in] */ LPCGUID EventContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnIconPathChanged( 
            /* [annotation][string][in] */ 
            __in  LPCWSTR NewIconPath,
            /* [in] */ LPCGUID EventContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnSimpleVolumeChanged( 
            /* [annotation][in] */ 
            __in  float NewVolume,
            /* [annotation][in] */ 
            __in  BOOL NewMute,
            /* [in] */ LPCGUID EventContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnChannelVolumeChanged( 
            /* [annotation][in] */ 
            __in  DWORD ChannelCount,
            /* [annotation][size_is][in] */ 
            __in_ecount(ChannelCount)  float NewChannelVolumeArray[  ],
            /* [annotation][in] */ 
            __in  DWORD ChangedChannel,
            /* [in] */ LPCGUID EventContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnGroupingParamChanged( 
            /* [annotation][in] */ 
            __in  LPCGUID NewGroupingParam,
            /* [in] */ LPCGUID EventContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnStateChanged( 
            /* [annotation][in] */ 
            __in  AudioSessionState NewState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnSessionDisconnected( 
            /* [annotation][in] */ 
            __in  AudioSessionDisconnectReason DisconnectReason) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioSessionEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioSessionEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioSessionEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioSessionEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnDisplayNameChanged )( 
            IAudioSessionEvents * This,
            /* [annotation][string][in] */ 
            __in  LPCWSTR NewDisplayName,
            /* [in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *OnIconPathChanged )( 
            IAudioSessionEvents * This,
            /* [annotation][string][in] */ 
            __in  LPCWSTR NewIconPath,
            /* [in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *OnSimpleVolumeChanged )( 
            IAudioSessionEvents * This,
            /* [annotation][in] */ 
            __in  float NewVolume,
            /* [annotation][in] */ 
            __in  BOOL NewMute,
            /* [in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *OnChannelVolumeChanged )( 
            IAudioSessionEvents * This,
            /* [annotation][in] */ 
            __in  DWORD ChannelCount,
            /* [annotation][size_is][in] */ 
            __in_ecount(ChannelCount)  float NewChannelVolumeArray[  ],
            /* [annotation][in] */ 
            __in  DWORD ChangedChannel,
            /* [in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *OnGroupingParamChanged )( 
            IAudioSessionEvents * This,
            /* [annotation][in] */ 
            __in  LPCGUID NewGroupingParam,
            /* [in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *OnStateChanged )( 
            IAudioSessionEvents * This,
            /* [annotation][in] */ 
            __in  AudioSessionState NewState);
        
        HRESULT ( STDMETHODCALLTYPE *OnSessionDisconnected )( 
            IAudioSessionEvents * This,
            /* [annotation][in] */ 
            __in  AudioSessionDisconnectReason DisconnectReason);
        
        END_INTERFACE
    } IAudioSessionEventsVtbl;

    interface IAudioSessionEvents
    {
        CONST_VTBL struct IAudioSessionEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioSessionEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioSessionEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioSessionEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioSessionEvents_OnDisplayNameChanged(This,NewDisplayName,EventContext)	\
    ( (This)->lpVtbl -> OnDisplayNameChanged(This,NewDisplayName,EventContext) ) 

#define IAudioSessionEvents_OnIconPathChanged(This,NewIconPath,EventContext)	\
    ( (This)->lpVtbl -> OnIconPathChanged(This,NewIconPath,EventContext) ) 

#define IAudioSessionEvents_OnSimpleVolumeChanged(This,NewVolume,NewMute,EventContext)	\
    ( (This)->lpVtbl -> OnSimpleVolumeChanged(This,NewVolume,NewMute,EventContext) ) 

#define IAudioSessionEvents_OnChannelVolumeChanged(This,ChannelCount,NewChannelVolumeArray,ChangedChannel,EventContext)	\
    ( (This)->lpVtbl -> OnChannelVolumeChanged(This,ChannelCount,NewChannelVolumeArray,ChangedChannel,EventContext) ) 

#define IAudioSessionEvents_OnGroupingParamChanged(This,NewGroupingParam,EventContext)	\
    ( (This)->lpVtbl -> OnGroupingParamChanged(This,NewGroupingParam,EventContext) ) 

#define IAudioSessionEvents_OnStateChanged(This,NewState)	\
    ( (This)->lpVtbl -> OnStateChanged(This,NewState) ) 

#define IAudioSessionEvents_OnSessionDisconnected(This,DisconnectReason)	\
    ( (This)->lpVtbl -> OnSessionDisconnected(This,DisconnectReason) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioSessionEvents_INTERFACE_DEFINED__ */


#ifndef __IAudioSessionControl_INTERFACE_DEFINED__
#define __IAudioSessionControl_INTERFACE_DEFINED__

/* interface IAudioSessionControl */
/* [local][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IAudioSessionControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F4B1A599-7266-4319-A8CA-E70ACB11E8CD")
    IAudioSessionControl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetState( 
            /* [annotation][out] */ 
            __out  AudioSessionState *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayName( 
            /* [annotation][string][out] */ 
            __out  LPWSTR *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDisplayName( 
            /* [annotation][string][in] */ 
            __in  LPCWSTR Value,
            /* [unique][in] */ LPCGUID EventContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIconPath( 
            /* [annotation][string][out] */ 
            __out  LPWSTR *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetIconPath( 
            /* [annotation][string][in] */ 
            __in  LPCWSTR Value,
            /* [unique][in] */ LPCGUID EventContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGroupingParam( 
            /* [annotation][out] */ 
            __out  GUID *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetGroupingParam( 
            /* [annotation][in] */ 
            __in  LPCGUID Override,
            /* [unique][in] */ LPCGUID EventContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterAudioSessionNotification( 
            /* [annotation][in] */ 
            __in  IAudioSessionEvents *NewNotifications) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnregisterAudioSessionNotification( 
            /* [annotation][in] */ 
            __in  IAudioSessionEvents *NewNotifications) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioSessionControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioSessionControl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioSessionControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioSessionControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IAudioSessionControl * This,
            /* [annotation][out] */ 
            __out  AudioSessionState *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
            IAudioSessionControl * This,
            /* [annotation][string][out] */ 
            __out  LPWSTR *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetDisplayName )( 
            IAudioSessionControl * This,
            /* [annotation][string][in] */ 
            __in  LPCWSTR Value,
            /* [unique][in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *GetIconPath )( 
            IAudioSessionControl * This,
            /* [annotation][string][out] */ 
            __out  LPWSTR *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetIconPath )( 
            IAudioSessionControl * This,
            /* [annotation][string][in] */ 
            __in  LPCWSTR Value,
            /* [unique][in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *GetGroupingParam )( 
            IAudioSessionControl * This,
            /* [annotation][out] */ 
            __out  GUID *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetGroupingParam )( 
            IAudioSessionControl * This,
            /* [annotation][in] */ 
            __in  LPCGUID Override,
            /* [unique][in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterAudioSessionNotification )( 
            IAudioSessionControl * This,
            /* [annotation][in] */ 
            __in  IAudioSessionEvents *NewNotifications);
        
        HRESULT ( STDMETHODCALLTYPE *UnregisterAudioSessionNotification )( 
            IAudioSessionControl * This,
            /* [annotation][in] */ 
            __in  IAudioSessionEvents *NewNotifications);
        
        END_INTERFACE
    } IAudioSessionControlVtbl;

    interface IAudioSessionControl
    {
        CONST_VTBL struct IAudioSessionControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioSessionControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioSessionControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioSessionControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioSessionControl_GetState(This,pRetVal)	\
    ( (This)->lpVtbl -> GetState(This,pRetVal) ) 

#define IAudioSessionControl_GetDisplayName(This,pRetVal)	\
    ( (This)->lpVtbl -> GetDisplayName(This,pRetVal) ) 

#define IAudioSessionControl_SetDisplayName(This,Value,EventContext)	\
    ( (This)->lpVtbl -> SetDisplayName(This,Value,EventContext) ) 

#define IAudioSessionControl_GetIconPath(This,pRetVal)	\
    ( (This)->lpVtbl -> GetIconPath(This,pRetVal) ) 

#define IAudioSessionControl_SetIconPath(This,Value,EventContext)	\
    ( (This)->lpVtbl -> SetIconPath(This,Value,EventContext) ) 

#define IAudioSessionControl_GetGroupingParam(This,pRetVal)	\
    ( (This)->lpVtbl -> GetGroupingParam(This,pRetVal) ) 

#define IAudioSessionControl_SetGroupingParam(This,Override,EventContext)	\
    ( (This)->lpVtbl -> SetGroupingParam(This,Override,EventContext) ) 

#define IAudioSessionControl_RegisterAudioSessionNotification(This,NewNotifications)	\
    ( (This)->lpVtbl -> RegisterAudioSessionNotification(This,NewNotifications) ) 

#define IAudioSessionControl_UnregisterAudioSessionNotification(This,NewNotifications)	\
    ( (This)->lpVtbl -> UnregisterAudioSessionNotification(This,NewNotifications) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioSessionControl_INTERFACE_DEFINED__ */


#ifndef __IAudioSessionControl2_INTERFACE_DEFINED__
#define __IAudioSessionControl2_INTERFACE_DEFINED__

/* interface IAudioSessionControl2 */
/* [local][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IAudioSessionControl2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bfb7ff88-7239-4fc9-8fa2-07c950be9c6d")
    IAudioSessionControl2 : public IAudioSessionControl
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSessionIdentifier( 
            /* [annotation][string][out] */ 
            __out  LPWSTR *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSessionInstanceIdentifier( 
            /* [annotation][string][out] */ 
            __out  LPWSTR *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProcessId( 
            /* [annotation][out] */ 
            __out  DWORD *pRetVal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsSystemSoundsSession( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDuckingPreference( 
            /* [in] */ BOOL optOut) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioSessionControl2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioSessionControl2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioSessionControl2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioSessionControl2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IAudioSessionControl2 * This,
            /* [annotation][out] */ 
            __out  AudioSessionState *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetDisplayName )( 
            IAudioSessionControl2 * This,
            /* [annotation][string][out] */ 
            __out  LPWSTR *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetDisplayName )( 
            IAudioSessionControl2 * This,
            /* [annotation][string][in] */ 
            __in  LPCWSTR Value,
            /* [unique][in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *GetIconPath )( 
            IAudioSessionControl2 * This,
            /* [annotation][string][out] */ 
            __out  LPWSTR *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetIconPath )( 
            IAudioSessionControl2 * This,
            /* [annotation][string][in] */ 
            __in  LPCWSTR Value,
            /* [unique][in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *GetGroupingParam )( 
            IAudioSessionControl2 * This,
            /* [annotation][out] */ 
            __out  GUID *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *SetGroupingParam )( 
            IAudioSessionControl2 * This,
            /* [annotation][in] */ 
            __in  LPCGUID Override,
            /* [unique][in] */ LPCGUID EventContext);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterAudioSessionNotification )( 
            IAudioSessionControl2 * This,
            /* [annotation][in] */ 
            __in  IAudioSessionEvents *NewNotifications);
        
        HRESULT ( STDMETHODCALLTYPE *UnregisterAudioSessionNotification )( 
            IAudioSessionControl2 * This,
            /* [annotation][in] */ 
            __in  IAudioSessionEvents *NewNotifications);
        
        HRESULT ( STDMETHODCALLTYPE *GetSessionIdentifier )( 
            IAudioSessionControl2 * This,
            /* [annotation][string][out] */ 
            __out  LPWSTR *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetSessionInstanceIdentifier )( 
            IAudioSessionControl2 * This,
            /* [annotation][string][out] */ 
            __out  LPWSTR *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *GetProcessId )( 
            IAudioSessionControl2 * This,
            /* [annotation][out] */ 
            __out  DWORD *pRetVal);
        
        HRESULT ( STDMETHODCALLTYPE *IsSystemSoundsSession )( 
            IAudioSessionControl2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetDuckingPreference )( 
            IAudioSessionControl2 * This,
            /* [in] */ BOOL optOut);
        
        END_INTERFACE
    } IAudioSessionControl2Vtbl;

    interface IAudioSessionControl2
    {
        CONST_VTBL struct IAudioSessionControl2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioSessionControl2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioSessionControl2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioSessionControl2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioSessionControl2_GetState(This,pRetVal)	\
    ( (This)->lpVtbl -> GetState(This,pRetVal) ) 

#define IAudioSessionControl2_GetDisplayName(This,pRetVal)	\
    ( (This)->lpVtbl -> GetDisplayName(This,pRetVal) ) 

#define IAudioSessionControl2_SetDisplayName(This,Value,EventContext)	\
    ( (This)->lpVtbl -> SetDisplayName(This,Value,EventContext) ) 

#define IAudioSessionControl2_GetIconPath(This,pRetVal)	\
    ( (This)->lpVtbl -> GetIconPath(This,pRetVal) ) 

#define IAudioSessionControl2_SetIconPath(This,Value,EventContext)	\
    ( (This)->lpVtbl -> SetIconPath(This,Value,EventContext) ) 

#define IAudioSessionControl2_GetGroupingParam(This,pRetVal)	\
    ( (This)->lpVtbl -> GetGroupingParam(This,pRetVal) ) 

#define IAudioSessionControl2_SetGroupingParam(This,Override,EventContext)	\
    ( (This)->lpVtbl -> SetGroupingParam(This,Override,EventContext) ) 

#define IAudioSessionControl2_RegisterAudioSessionNotification(This,NewNotifications)	\
    ( (This)->lpVtbl -> RegisterAudioSessionNotification(This,NewNotifications) ) 

#define IAudioSessionControl2_UnregisterAudioSessionNotification(This,NewNotifications)	\
    ( (This)->lpVtbl -> UnregisterAudioSessionNotification(This,NewNotifications) ) 


#define IAudioSessionControl2_GetSessionIdentifier(This,pRetVal)	\
    ( (This)->lpVtbl -> GetSessionIdentifier(This,pRetVal) ) 

#define IAudioSessionControl2_GetSessionInstanceIdentifier(This,pRetVal)	\
    ( (This)->lpVtbl -> GetSessionInstanceIdentifier(This,pRetVal) ) 

#define IAudioSessionControl2_GetProcessId(This,pRetVal)	\
    ( (This)->lpVtbl -> GetProcessId(This,pRetVal) ) 

#define IAudioSessionControl2_IsSystemSoundsSession(This)	\
    ( (This)->lpVtbl -> IsSystemSoundsSession(This) ) 

#define IAudioSessionControl2_SetDuckingPreference(This,optOut)	\
    ( (This)->lpVtbl -> SetDuckingPreference(This,optOut) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioSessionControl2_INTERFACE_DEFINED__ */


#ifndef __IAudioSessionManager_INTERFACE_DEFINED__
#define __IAudioSessionManager_INTERFACE_DEFINED__

/* interface IAudioSessionManager */
/* [local][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IAudioSessionManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BFA971F1-4D5E-40BB-935E-967039BFBEE4")
    IAudioSessionManager : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAudioSessionControl( 
            /* [annotation][in] */ 
            __in_opt  LPCGUID AudioSessionGuid,
            /* [annotation][in] */ 
            __in  DWORD StreamFlags,
            /* [annotation][out] */ 
            __deref_out  IAudioSessionControl **SessionControl) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSimpleAudioVolume( 
            /* [annotation][in] */ 
            __in_opt  LPCGUID AudioSessionGuid,
            /* [annotation][in] */ 
            __in  DWORD StreamFlags,
            /* [annotation][out] */ 
            __deref_out  ISimpleAudioVolume **AudioVolume) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioSessionManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioSessionManager * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioSessionManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioSessionManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetAudioSessionControl )( 
            IAudioSessionManager * This,
            /* [annotation][in] */ 
            __in_opt  LPCGUID AudioSessionGuid,
            /* [annotation][in] */ 
            __in  DWORD StreamFlags,
            /* [annotation][out] */ 
            __deref_out  IAudioSessionControl **SessionControl);
        
        HRESULT ( STDMETHODCALLTYPE *GetSimpleAudioVolume )( 
            IAudioSessionManager * This,
            /* [annotation][in] */ 
            __in_opt  LPCGUID AudioSessionGuid,
            /* [annotation][in] */ 
            __in  DWORD StreamFlags,
            /* [annotation][out] */ 
            __deref_out  ISimpleAudioVolume **AudioVolume);
        
        END_INTERFACE
    } IAudioSessionManagerVtbl;

    interface IAudioSessionManager
    {
        CONST_VTBL struct IAudioSessionManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioSessionManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioSessionManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioSessionManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioSessionManager_GetAudioSessionControl(This,AudioSessionGuid,StreamFlags,SessionControl)	\
    ( (This)->lpVtbl -> GetAudioSessionControl(This,AudioSessionGuid,StreamFlags,SessionControl) ) 

#define IAudioSessionManager_GetSimpleAudioVolume(This,AudioSessionGuid,StreamFlags,AudioVolume)	\
    ( (This)->lpVtbl -> GetSimpleAudioVolume(This,AudioSessionGuid,StreamFlags,AudioVolume) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioSessionManager_INTERFACE_DEFINED__ */


#ifndef __IAudioVolumeDuckNotification_INTERFACE_DEFINED__
#define __IAudioVolumeDuckNotification_INTERFACE_DEFINED__

/* interface IAudioVolumeDuckNotification */
/* [local][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IAudioVolumeDuckNotification;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C3B284D4-6D39-4359-B3CF-B56DDB3BB39C")
    IAudioVolumeDuckNotification : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnVolumeDuckNotification( 
            /* [in] */ LPCWSTR sessionID,
            /* [in] */ UINT32 countCommunicationSessions) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnVolumeUnduckNotification( 
            /* [in] */ LPCWSTR sessionID) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioVolumeDuckNotificationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioVolumeDuckNotification * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioVolumeDuckNotification * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioVolumeDuckNotification * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnVolumeDuckNotification )( 
            IAudioVolumeDuckNotification * This,
            /* [in] */ LPCWSTR sessionID,
            /* [in] */ UINT32 countCommunicationSessions);
        
        HRESULT ( STDMETHODCALLTYPE *OnVolumeUnduckNotification )( 
            IAudioVolumeDuckNotification * This,
            /* [in] */ LPCWSTR sessionID);
        
        END_INTERFACE
    } IAudioVolumeDuckNotificationVtbl;

    interface IAudioVolumeDuckNotification
    {
        CONST_VTBL struct IAudioVolumeDuckNotificationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioVolumeDuckNotification_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioVolumeDuckNotification_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioVolumeDuckNotification_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioVolumeDuckNotification_OnVolumeDuckNotification(This,sessionID,countCommunicationSessions)	\
    ( (This)->lpVtbl -> OnVolumeDuckNotification(This,sessionID,countCommunicationSessions) ) 

#define IAudioVolumeDuckNotification_OnVolumeUnduckNotification(This,sessionID)	\
    ( (This)->lpVtbl -> OnVolumeUnduckNotification(This,sessionID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioVolumeDuckNotification_INTERFACE_DEFINED__ */


#ifndef __IAudioSessionNotification_INTERFACE_DEFINED__
#define __IAudioSessionNotification_INTERFACE_DEFINED__

/* interface IAudioSessionNotification */
/* [local][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IAudioSessionNotification;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("641DD20B-4D41-49CC-ABA3-174B9477BB08")
    IAudioSessionNotification : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnSessionCreated( 
            /* [in] */ IAudioSessionControl *NewSession) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioSessionNotificationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioSessionNotification * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioSessionNotification * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioSessionNotification * This);
        
        HRESULT ( STDMETHODCALLTYPE *OnSessionCreated )( 
            IAudioSessionNotification * This,
            /* [in] */ IAudioSessionControl *NewSession);
        
        END_INTERFACE
    } IAudioSessionNotificationVtbl;

    interface IAudioSessionNotification
    {
        CONST_VTBL struct IAudioSessionNotificationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioSessionNotification_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioSessionNotification_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioSessionNotification_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioSessionNotification_OnSessionCreated(This,NewSession)	\
    ( (This)->lpVtbl -> OnSessionCreated(This,NewSession) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioSessionNotification_INTERFACE_DEFINED__ */


#ifndef __IAudioSessionEnumerator_INTERFACE_DEFINED__
#define __IAudioSessionEnumerator_INTERFACE_DEFINED__

/* interface IAudioSessionEnumerator */
/* [local][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IAudioSessionEnumerator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E2F5BB11-0570-40CA-ACDD-3AA01277DEE8")
    IAudioSessionEnumerator : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCount( 
            /* [out] */ int *SessionCount) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSession( 
            /* [in] */ int SessionCount,
            /* [out] */ IAudioSessionControl **Session) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioSessionEnumeratorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioSessionEnumerator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioSessionEnumerator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioSessionEnumerator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCount )( 
            IAudioSessionEnumerator * This,
            /* [out] */ int *SessionCount);
        
        HRESULT ( STDMETHODCALLTYPE *GetSession )( 
            IAudioSessionEnumerator * This,
            /* [in] */ int SessionCount,
            /* [out] */ IAudioSessionControl **Session);
        
        END_INTERFACE
    } IAudioSessionEnumeratorVtbl;

    interface IAudioSessionEnumerator
    {
        CONST_VTBL struct IAudioSessionEnumeratorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioSessionEnumerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioSessionEnumerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioSessionEnumerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioSessionEnumerator_GetCount(This,SessionCount)	\
    ( (This)->lpVtbl -> GetCount(This,SessionCount) ) 

#define IAudioSessionEnumerator_GetSession(This,SessionCount,Session)	\
    ( (This)->lpVtbl -> GetSession(This,SessionCount,Session) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioSessionEnumerator_INTERFACE_DEFINED__ */


#ifndef __IAudioSessionManager2_INTERFACE_DEFINED__
#define __IAudioSessionManager2_INTERFACE_DEFINED__

/* interface IAudioSessionManager2 */
/* [local][unique][helpstring][uuid][object] */ 


EXTERN_C const IID IID_IAudioSessionManager2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("77AA99A0-1BD6-484F-8BC7-2C654C9A9B6F")
    IAudioSessionManager2 : public IAudioSessionManager
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSessionEnumerator( 
            /* [retval][out] */ IAudioSessionEnumerator **SessionEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterSessionNotification( 
            IAudioSessionNotification *SessionNotification) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnregisterSessionNotification( 
            IAudioSessionNotification *SessionNotification) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterDuckNotification( 
            /* [string][in] */ LPCWSTR sessionID,
            /* [annotation][in] */ 
            __in  IAudioVolumeDuckNotification *duckNotification) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnregisterDuckNotification( 
            /* [annotation][in] */ 
            __in  IAudioVolumeDuckNotification *duckNotification) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioSessionManager2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioSessionManager2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioSessionManager2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioSessionManager2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetAudioSessionControl )( 
            IAudioSessionManager2 * This,
            /* [annotation][in] */ 
            __in_opt  LPCGUID AudioSessionGuid,
            /* [annotation][in] */ 
            __in  DWORD StreamFlags,
            /* [annotation][out] */ 
            __deref_out  IAudioSessionControl **SessionControl);
        
        HRESULT ( STDMETHODCALLTYPE *GetSimpleAudioVolume )( 
            IAudioSessionManager2 * This,
            /* [annotation][in] */ 
            __in_opt  LPCGUID AudioSessionGuid,
            /* [annotation][in] */ 
            __in  DWORD StreamFlags,
            /* [annotation][out] */ 
            __deref_out  ISimpleAudioVolume **AudioVolume);
        
        HRESULT ( STDMETHODCALLTYPE *GetSessionEnumerator )( 
            IAudioSessionManager2 * This,
            /* [retval][out] */ IAudioSessionEnumerator **SessionEnum);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterSessionNotification )( 
            IAudioSessionManager2 * This,
            IAudioSessionNotification *SessionNotification);
        
        HRESULT ( STDMETHODCALLTYPE *UnregisterSessionNotification )( 
            IAudioSessionManager2 * This,
            IAudioSessionNotification *SessionNotification);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterDuckNotification )( 
            IAudioSessionManager2 * This,
            /* [string][in] */ LPCWSTR sessionID,
            /* [annotation][in] */ 
            __in  IAudioVolumeDuckNotification *duckNotification);
        
        HRESULT ( STDMETHODCALLTYPE *UnregisterDuckNotification )( 
            IAudioSessionManager2 * This,
            /* [annotation][in] */ 
            __in  IAudioVolumeDuckNotification *duckNotification);
        
        END_INTERFACE
    } IAudioSessionManager2Vtbl;

    interface IAudioSessionManager2
    {
        CONST_VTBL struct IAudioSessionManager2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioSessionManager2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioSessionManager2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioSessionManager2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioSessionManager2_GetAudioSessionControl(This,AudioSessionGuid,StreamFlags,SessionControl)	\
    ( (This)->lpVtbl -> GetAudioSessionControl(This,AudioSessionGuid,StreamFlags,SessionControl) ) 

#define IAudioSessionManager2_GetSimpleAudioVolume(This,AudioSessionGuid,StreamFlags,AudioVolume)	\
    ( (This)->lpVtbl -> GetSimpleAudioVolume(This,AudioSessionGuid,StreamFlags,AudioVolume) ) 


#define IAudioSessionManager2_GetSessionEnumerator(This,SessionEnum)	\
    ( (This)->lpVtbl -> GetSessionEnumerator(This,SessionEnum) ) 

#define IAudioSessionManager2_RegisterSessionNotification(This,SessionNotification)	\
    ( (This)->lpVtbl -> RegisterSessionNotification(This,SessionNotification) ) 

#define IAudioSessionManager2_UnregisterSessionNotification(This,SessionNotification)	\
    ( (This)->lpVtbl -> UnregisterSessionNotification(This,SessionNotification) ) 

#define IAudioSessionManager2_RegisterDuckNotification(This,sessionID,duckNotification)	\
    ( (This)->lpVtbl -> RegisterDuckNotification(This,sessionID,duckNotification) ) 

#define IAudioSessionManager2_UnregisterDuckNotification(This,duckNotification)	\
    ( (This)->lpVtbl -> UnregisterDuckNotification(This,duckNotification) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioSessionManager2_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AudioEngineEndpoint.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for audioengineendpoint.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __audioengineendpoint_h__
#define __audioengineendpoint_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IAudioEndpoint_FWD_DEFINED__
#define __IAudioEndpoint_FWD_DEFINED__
typedef interface IAudioEndpoint IAudioEndpoint;
#endif 	/* __IAudioEndpoint_FWD_DEFINED__ */


#ifndef __IAudioEndpointRT_FWD_DEFINED__
#define __IAudioEndpointRT_FWD_DEFINED__
typedef interface IAudioEndpointRT IAudioEndpointRT;
#endif 	/* __IAudioEndpointRT_FWD_DEFINED__ */


#ifndef __IAudioInputEndpointRT_FWD_DEFINED__
#define __IAudioInputEndpointRT_FWD_DEFINED__
typedef interface IAudioInputEndpointRT IAudioInputEndpointRT;
#endif 	/* __IAudioInputEndpointRT_FWD_DEFINED__ */


#ifndef __IAudioOutputEndpointRT_FWD_DEFINED__
#define __IAudioOutputEndpointRT_FWD_DEFINED__
typedef interface IAudioOutputEndpointRT IAudioOutputEndpointRT;
#endif 	/* __IAudioOutputEndpointRT_FWD_DEFINED__ */


#ifndef __IAudioDeviceEndpoint_FWD_DEFINED__
#define __IAudioDeviceEndpoint_FWD_DEFINED__
typedef interface IAudioDeviceEndpoint IAudioDeviceEndpoint;
#endif 	/* __IAudioDeviceEndpoint_FWD_DEFINED__ */


#ifndef __IAudioEndpointControl_FWD_DEFINED__
#define __IAudioEndpointControl_FWD_DEFINED__
typedef interface IAudioEndpointControl IAudioEndpointControl;
#endif 	/* __IAudioEndpointControl_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "propidl.h"
#include "audioapotypes.h"
#include "mmreg.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_audioengineendpoint_0000_0000 */
/* [local] */ 

typedef struct AUDIO_ENDPOINT_EXCLUSIVE_CREATE_PARAMS
    {
    UINT32 u32Size;
    LONGLONG hConnection;
    BOOL bIsRtCapable;
    HNSTIME hnsBufferDuration;
    HNSTIME hnsPeriod;
    UINT32 u32LatencyCoefficient;
    WAVEFORMATEX wfxDeviceFormat;
    } 	AUDIO_ENDPOINT_EXCLUSIVE_CREATE_PARAMS;

typedef struct AUDIO_ENDPOINT_EXCLUSIVE_CREATE_PARAMS *PAUDIO_ENDPOINT_EXCLUSIVE_CREATE_PARAMS;

typedef struct AUDIO_ENDPOINT_SHARED_CREATE_PARAMS
    {
    UINT32 u32Size;
    UINT32 u32TSSessionId;
    WAVEFORMATEX wfxDeviceFormat;
    } 	AUDIO_ENDPOINT_SHARED_CREATE_PARAMS;

typedef struct AUDIO_ENDPOINT_SHARED_CREATE_PARAMS *PAUDIO_ENDPOINT_SHARED_CREATE_PARAMS;

typedef 
enum AE_POSITION_FLAGS
    {	POSITION_INVALID	= 0,
	POSITION_DISCONTINUOUS	= 1,
	POSITION_CONTINUOUS	= 2,
	POSITION_QPC_ERROR	= 4
    } 	AE_POSITION_FLAGS;

typedef struct AE_CURRENT_POSITION
    {
    UINT64 u64DevicePosition;
    UINT64 u64StreamPosition;
    UINT64 u64PaddingFrames;
    HNSTIME hnsQPCPosition;
    FLOAT32 f32FramesPerSecond;
    AE_POSITION_FLAGS Flag;
    } 	AE_CURRENT_POSITION;

typedef struct AE_CURRENT_POSITION *PAE_CURRENT_POSITION;



extern RPC_IF_HANDLE __MIDL_itf_audioengineendpoint_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_audioengineendpoint_0000_0000_v0_0_s_ifspec;

#ifndef __IAudioEndpoint_INTERFACE_DEFINED__
#define __IAudioEndpoint_INTERFACE_DEFINED__

/* interface IAudioEndpoint */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IAudioEndpoint;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("30A99515-1527-4451-AF9F-00C5F0234DAF")
    IAudioEndpoint : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFrameFormat( 
            /* [out] */ WAVEFORMATEX **ppFormat) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFramesPerPacket( 
            /* [out] */ UINT32 *pFramesPerPacket) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLatency( 
            /* [out] */ HNSTIME *pLatency) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStreamFlags( 
            /* [in] */ DWORD streamFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetEventHandle( 
            /* [in] */ HANDLE eventHandle) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioEndpointVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioEndpoint * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioEndpoint * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioEndpoint * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetFrameFormat )( 
            IAudioEndpoint * This,
            /* [out] */ WAVEFORMATEX **ppFormat);
        
        HRESULT ( STDMETHODCALLTYPE *GetFramesPerPacket )( 
            IAudioEndpoint * This,
            /* [out] */ UINT32 *pFramesPerPacket);
        
        HRESULT ( STDMETHODCALLTYPE *GetLatency )( 
            IAudioEndpoint * This,
            /* [out] */ HNSTIME *pLatency);
        
        HRESULT ( STDMETHODCALLTYPE *SetStreamFlags )( 
            IAudioEndpoint * This,
            /* [in] */ DWORD streamFlags);
        
        HRESULT ( STDMETHODCALLTYPE *SetEventHandle )( 
            IAudioEndpoint * This,
            /* [in] */ HANDLE eventHandle);
        
        END_INTERFACE
    } IAudioEndpointVtbl;

    interface IAudioEndpoint
    {
        CONST_VTBL struct IAudioEndpointVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioEndpoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioEndpoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioEndpoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioEndpoint_GetFrameFormat(This,ppFormat)	\
    ( (This)->lpVtbl -> GetFrameFormat(This,ppFormat) ) 

#define IAudioEndpoint_GetFramesPerPacket(This,pFramesPerPacket)	\
    ( (This)->lpVtbl -> GetFramesPerPacket(This,pFramesPerPacket) ) 

#define IAudioEndpoint_GetLatency(This,pLatency)	\
    ( (This)->lpVtbl -> GetLatency(This,pLatency) ) 

#define IAudioEndpoint_SetStreamFlags(This,streamFlags)	\
    ( (This)->lpVtbl -> SetStreamFlags(This,streamFlags) ) 

#define IAudioEndpoint_SetEventHandle(This,eventHandle)	\
    ( (This)->lpVtbl -> SetEventHandle(This,eventHandle) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioEndpoint_INTERFACE_DEFINED__ */


#ifndef __IAudioEndpointRT_INTERFACE_DEFINED__
#define __IAudioEndpointRT_INTERFACE_DEFINED__

/* interface IAudioEndpointRT */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IAudioEndpointRT;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DFD2005F-A6E5-4d39-A265-939ADA9FBB4D")
    IAudioEndpointRT : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE GetCurrentPadding( 
            /* [out] */ HNSTIME *pPadding,
            /* [out] */ AE_CURRENT_POSITION *pAeCurrentPosition) = 0;
        
        virtual void STDMETHODCALLTYPE ProcessingComplete( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPinInactive( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPinActive( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioEndpointRTVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioEndpointRT * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioEndpointRT * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioEndpointRT * This);
        
        void ( STDMETHODCALLTYPE *GetCurrentPadding )( 
            IAudioEndpointRT * This,
            /* [out] */ HNSTIME *pPadding,
            /* [out] */ AE_CURRENT_POSITION *pAeCurrentPosition);
        
        void ( STDMETHODCALLTYPE *ProcessingComplete )( 
            IAudioEndpointRT * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetPinInactive )( 
            IAudioEndpointRT * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetPinActive )( 
            IAudioEndpointRT * This);
        
        END_INTERFACE
    } IAudioEndpointRTVtbl;

    interface IAudioEndpointRT
    {
        CONST_VTBL struct IAudioEndpointRTVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioEndpointRT_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioEndpointRT_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioEndpointRT_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioEndpointRT_GetCurrentPadding(This,pPadding,pAeCurrentPosition)	\
    ( (This)->lpVtbl -> GetCurrentPadding(This,pPadding,pAeCurrentPosition) ) 

#define IAudioEndpointRT_ProcessingComplete(This)	\
    ( (This)->lpVtbl -> ProcessingComplete(This) ) 

#define IAudioEndpointRT_SetPinInactive(This)	\
    ( (This)->lpVtbl -> SetPinInactive(This) ) 

#define IAudioEndpointRT_SetPinActive(This)	\
    ( (This)->lpVtbl -> SetPinActive(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioEndpointRT_INTERFACE_DEFINED__ */


#ifndef __IAudioInputEndpointRT_INTERFACE_DEFINED__
#define __IAudioInputEndpointRT_INTERFACE_DEFINED__

/* interface IAudioInputEndpointRT */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IAudioInputEndpointRT;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8026AB61-92B2-43c1-A1DF-5C37EBD08D82")
    IAudioInputEndpointRT : public IUnknown
    {
    public:
        virtual void STDMETHODCALLTYPE GetInputDataPointer( 
            /* [out][in] */ APO_CONNECTION_PROPERTY *pConnectionProperty,
            /* [out][in] */ AE_CURRENT_POSITION *pAeTimeStamp) = 0;
        
        virtual void STDMETHODCALLTYPE ReleaseInputDataPointer( 
            /* [in] */ UINT32 u32FrameCount,
            /* [in] */ UINT_PTR pDataPointer) = 0;
        
        virtual void STDMETHODCALLTYPE PulseEndpoint( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioInputEndpointRTVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioInputEndpointRT * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioInputEndpointRT * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioInputEndpointRT * This);
        
        void ( STDMETHODCALLTYPE *GetInputDataPointer )( 
            IAudioInputEndpointRT * This,
            /* [out][in] */ APO_CONNECTION_PROPERTY *pConnectionProperty,
            /* [out][in] */ AE_CURRENT_POSITION *pAeTimeStamp);
        
        void ( STDMETHODCALLTYPE *ReleaseInputDataPointer )( 
            IAudioInputEndpointRT * This,
            /* [in] */ UINT32 u32FrameCount,
            /* [in] */ UINT_PTR pDataPointer);
        
        void ( STDMETHODCALLTYPE *PulseEndpoint )( 
            IAudioInputEndpointRT * This);
        
        END_INTERFACE
    } IAudioInputEndpointRTVtbl;

    interface IAudioInputEndpointRT
    {
        CONST_VTBL struct IAudioInputEndpointRTVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioInputEndpointRT_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioInputEndpointRT_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioInputEndpointRT_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioInputEndpointRT_GetInputDataPointer(This,pConnectionProperty,pAeTimeStamp)	\
    ( (This)->lpVtbl -> GetInputDataPointer(This,pConnectionProperty,pAeTimeStamp) ) 

#define IAudioInputEndpointRT_ReleaseInputDataPointer(This,u32FrameCount,pDataPointer)	\
    ( (This)->lpVtbl -> ReleaseInputDataPointer(This,u32FrameCount,pDataPointer) ) 

#define IAudioInputEndpointRT_PulseEndpoint(This)	\
    ( (This)->lpVtbl -> PulseEndpoint(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioInputEndpointRT_INTERFACE_DEFINED__ */


#ifndef __IAudioOutputEndpointRT_INTERFACE_DEFINED__
#define __IAudioOutputEndpointRT_INTERFACE_DEFINED__

/* interface IAudioOutputEndpointRT */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IAudioOutputEndpointRT;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8FA906E4-C31C-4e31-932E-19A66385E9AA")
    IAudioOutputEndpointRT : public IUnknown
    {
    public:
        virtual UINT_PTR STDMETHODCALLTYPE GetOutputDataPointer( 
            /* [in] */ UINT32 u32FrameCount,
            /* [in] */ AE_CURRENT_POSITION *pAeTimeStamp) = 0;
        
        virtual void STDMETHODCALLTYPE ReleaseOutputDataPointer( 
            /* [in] */ const APO_CONNECTION_PROPERTY *pConnectionProperty) = 0;
        
        virtual void STDMETHODCALLTYPE PulseEndpoint( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioOutputEndpointRTVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioOutputEndpointRT * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioOutputEndpointRT * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioOutputEndpointRT * This);
        
        UINT_PTR ( STDMETHODCALLTYPE *GetOutputDataPointer )( 
            IAudioOutputEndpointRT * This,
            /* [in] */ UINT32 u32FrameCount,
            /* [in] */ AE_CURRENT_POSITION *pAeTimeStamp);
        
        void ( STDMETHODCALLTYPE *ReleaseOutputDataPointer )( 
            IAudioOutputEndpointRT * This,
            /* [in] */ const APO_CONNECTION_PROPERTY *pConnectionProperty);
        
        void ( STDMETHODCALLTYPE *PulseEndpoint )( 
            IAudioOutputEndpointRT * This);
        
        END_INTERFACE
    } IAudioOutputEndpointRTVtbl;

    interface IAudioOutputEndpointRT
    {
        CONST_VTBL struct IAudioOutputEndpointRTVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioOutputEndpointRT_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioOutputEndpointRT_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioOutputEndpointRT_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioOutputEndpointRT_GetOutputDataPointer(This,u32FrameCount,pAeTimeStamp)	\
    ( (This)->lpVtbl -> GetOutputDataPointer(This,u32FrameCount,pAeTimeStamp) ) 

#define IAudioOutputEndpointRT_ReleaseOutputDataPointer(This,pConnectionProperty)	\
    ( (This)->lpVtbl -> ReleaseOutputDataPointer(This,pConnectionProperty) ) 

#define IAudioOutputEndpointRT_PulseEndpoint(This)	\
    ( (This)->lpVtbl -> PulseEndpoint(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioOutputEndpointRT_INTERFACE_DEFINED__ */


#ifndef __IAudioDeviceEndpoint_INTERFACE_DEFINED__
#define __IAudioDeviceEndpoint_INTERFACE_DEFINED__

/* interface IAudioDeviceEndpoint */
/* [local][unique][uuid][object] */ 


EXTERN_C const IID IID_IAudioDeviceEndpoint;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D4952F5A-A0B2-4cc4-8B82-9358488DD8AC")
    IAudioDeviceEndpoint : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetBuffer( 
            /* [in] */ HNSTIME MaxPeriod,
            /* [in] */ UINT32 u32LatencyCoefficient) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRTCaps( 
            /* [out] */ BOOL *pbIsRTCapable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEventDrivenCapable( 
            /* [out] */ BOOL *pbisEventCapable) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE WriteExclusiveModeParametersToSharedMemory( 
            /* [in] */ UINT_PTR hTargetProcess,
            /* [in] */ HNSTIME hnsPeriod,
            /* [in] */ HNSTIME hnsBufferDuration,
            /* [in] */ UINT32 u32LatencyCoefficient,
            /* [out] */ UINT32 *pu32SharedMemorySize,
            /* [out] */ UINT_PTR *phSharedMemory) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioDeviceEndpointVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAudioDeviceEndpoint * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAudioDeviceEndpoint * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAudioDeviceEndpoint * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetBuffer )( 
            IAudioDeviceEndpoint * This,
            /* [in] */ HNSTIME MaxPeriod,
            /* [in] */ UINT32 u32LatencyCoefficient);
        
        HRESULT ( STDMETHODCALLTYPE *GetRTCaps )( 
            IAudioDeviceEndpoint * This,
            /* [out] */ BOOL *pbIsRTCapable);
        
        HRESULT ( STDMETHODCALLTYPE *GetEventDrivenCapable )( 
            IAudioDeviceEndpoint * This,
            /* [out] */ BOOL *pbisEventCapable);
        
        HRESULT ( STDMETHODCALLTYPE *WriteExclusiveModeParametersToSharedMemory )( 
            IAudioDeviceEndpoint * This,
            /* [in] */ UINT_PTR hTargetProcess,
            /* [in] */ HNSTIME hnsPeriod,
            /* [in] */ HNSTIME hnsBufferDuration,
            /* [in] */ UINT32 u32LatencyCoefficient,
            /* [out] */ UINT32 *pu32SharedMemorySize,
            /* [out] */ UINT_PTR *phSharedMemory);
        
        END_INTERFACE
    } IAudioDeviceEndpointVtbl;

    interface IAudioDeviceEndpoint
    {
        CONST_VTBL struct IAudioDeviceEndpointVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioDeviceEndpoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioDeviceEndpoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioDeviceEndpoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioDeviceEndpoint_SetBuffer(This,MaxPeriod,u32LatencyCoefficient)	\
    ( (This)->lpVtbl -> SetBuffer(This,MaxPeriod,u32LatencyCoefficient) ) 

#define IAudioDeviceEndpoint_GetRTCaps(This,pbIsRTCapable)	\
    ( (This)->lpVtbl -> GetRTCaps(This,pbIsRTCapable) ) 

#define IAudioDeviceEndpoint_GetEventDrivenCapable(This,pbisEventCapable)	\
    ( (This)->lpVtbl -> GetEventDrivenCapable(This,pbisEventCapable) ) 

#define IAudioDeviceEndpoint_WriteExclusiveModeParametersToSharedMemory(This,hTargetProcess,hnsPeriod,hnsBufferDuration,u32LatencyCoefficient,pu32SharedMemorySize,phSharedMemory)	\
    ( (This)->lpVtbl -> WriteExclusiveModeParametersToSharedMemory(This,hTargetProcess,hnsPeriod,hnsBufferDuration,u32LatencyCoefficient,pu32SharedMemorySize,phSharedMemory) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioDeviceEndpoint_INTERFACE_DEFINED__ */


#ifndef __IAudioEndpointControl_INTERFACE_DEFINED__
#define __IAudioEndpointControl_INTERFACE_DEFINED__

/* interface IAudioEndpointControl */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IAudioEndpointControl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C684B72A-6DF4-4774-BDF9-76B77509B653")
    IAudioEndpointControl : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Start( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAudioEndpointControlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAudioEndpointControl * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAudioEndpointControl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAudioEndpointControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *Start )( 
            __RPC__in IAudioEndpointControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *Reset )( 
            __RPC__in IAudioEndpointControl * This);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            __RPC__in IAudioEndpointControl * This);
        
        END_INTERFACE
    } IAudioEndpointControlVtbl;

    interface IAudioEndpointControl
    {
        CONST_VTBL struct IAudioEndpointControlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAudioEndpointControl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAudioEndpointControl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAudioEndpointControl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAudioEndpointControl_Start(This)	\
    ( (This)->lpVtbl -> Start(This) ) 

#define IAudioEndpointControl_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IAudioEndpointControl_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAudioEndpointControl_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\aux_ulib.h ===
/*++

Copyright (c) 2004  Microsoft Corporation

Module Name:

    aux_ulib.h

Abstract:

    User mode shim to access system functionality that is not properly exposed
    to applications in currently shipping operating systems.

--*/

#ifndef _AUX_SHLD_LIB_H
#define _AUX_SHLD_LIB_H

#include <windows.h>

#ifdef __cplusplus
extern "C" {
#endif

/*++

Routine Description:

    This routine must be successfully called by an application before any
    other routine in the library may be called. It serves to initialize any global
    state that may be required by other routines in the file.

    It is safe to call this routine in a multi-threaded environment.
    
Arguments:

    None.

Return Value:

    Boolean status. Error code available via GetLastError ().

--*/

BOOL
WINAPI
AuxUlibInitialize (
    VOID
    );

/*++

Routine Description:

    This routine is used to set the current file system cache working set size. It 
    requires that the caller has enabled the SE_INCREASE_QUOTA_PRIVILEGE 
    in the currently active token prior to invoking this routine.

    This API is supported on Windows 2000 and later.
    
Arguments:

    MinimumFileCacheSize - The minimum file cache size. Use (SIZE_T)-1 if 
        the file cache is being flushed.

    MaximumFileCacheSize - The maximum file cache size. Use (SIZE_T)-1 
        if the file cache is being flushed.

    Flags - Flags relevant to the file cache size adjustment. Currently this must 
        be zero.

Return Value:

    Boolean status. Error code available via GetLastError (). If the routine is
        invoked prior to invoking the initialization routine, the returned error code
        will be ERROR_INVALID_FUNCTION.

--*/

BOOL 
WINAPI
AuxUlibSetSystemFileCacheSize (
    IN SIZE_T MinimumFileCacheSize,
    IN SIZE_T MaximumFileCacheSize,
    IN DWORD Flags
   );

/*++

Routine Description:

    This routine is used to determine whether or not the caller is executing
    code while holding a system synchronization primitive. Such a situation
    can arise when the OS temporarily calls into user-specified code as part 
    of the DLL load procedure.

    A caller can benefit from this information by avoiding operations that 
    could potentially lead to deadlocks, e.g., acquiring a process private lock.

    For example, consider the following case:

        Thread A runs the THREAD_ATTACH routine for DLL X. This routine
            is invoked with OS DLL synchronization held. Suppose further that
            as part of this routine Thread A acquires some lock in DLL X (Lx).

        Thread B runs some code in DLL X that, while holding Lx, calls the OS
            library loader to, e.g. GetModuleHandle. As this routine acquires
            OS DLL synchronization, Thread B will deadlock with Thread A.

        This is an inherent limitation in the design of the OS loader as it
        performs such callouts as THREAD_ATTACH while holding loader
        synchronization. It can be partially ameliorated if Thread A detects
        that it is running with DLL synchronization held and only try-acquires
        other locks (such as Lx) that it may wish to take
    
Arguments:

    SynchronizationHeld - Boolean value which indicates whether or not
        synchronization is held.

Return Value:

    Boolean status. Error code available via GetLastError (). If the routine is
        invoked prior to invoking the initialization routine, the returned error code
        will be ERROR_INVALID_FUNCTION.

--*/

BOOL
WINAPI
AuxUlibIsDLLSynchronizationHeld (
    OUT PBOOL SynchronizationHeld
    );

#ifdef __cplusplus
}
#endif

#endif // _AUX_SHLD_LIB_H
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\avrfsdk.h ===
/*++ BUILD Version: 0011    // Increment this if a change has global effects

Copyright (c) 2004  Microsoft Corporation

Module Name:

    avrfsdk.h

Abstract:

    This header file defines Application Verifier Exposed Interfaces

Author:

    Ivan Brugiolo (ivanbrug)


Revision History:

    Creation: 15-Mar-2004

--*/

#ifndef _AVRFSDK_
#define _AVRFSDK_

#ifdef __cplusplus
extern "C" {
#endif


//
// tool helper function
//

#define AVRF_MAX_TRACES 32

typedef struct _AVRF_BACKTRACE_INFORMATION {
    ULONG   Depth;
    ULONG   Index;
    ULONG64 ReturnAddresses[AVRF_MAX_TRACES];
} AVRF_BACKTRACE_INFORMATION, *PAVRF_BACKTRACE_INFORMATION;

enum eUserAllocationState {
    AllocationStateUnknown,
    AllocationStateBusy,
    AllocationStateFree
};

enum eHeapAllocationState {
    HeapFullPageHeap        = 0x40000000,        
    HeapMetadata            = 0x80000000,
    HeapStateMask           = 0xFFFF0000,
};

enum eHeapEnumerationLevel {
    HeapEnumerationEverything = 0x0,
    // reserved codes from 0x1 to oxFFFFFFFE
    HeapEnumerationStop = 0xFFFFFFFF,
};

typedef struct _AVRF_HEAP_ALLOCATION {
    ULONG64 HeapHandle;
    ULONG64 UserAllocation;    
    ULONG64 UserAllocationSize;
    ULONG64 Allocation;
    ULONG64 AllocationSize;    
    ULONG   UserAllocationState;
    ULONG   HeapState;
    ULONG64 HeapContext;
    PAVRF_BACKTRACE_INFORMATION BackTraceInformation;
} AVRF_HEAP_ALLOCATION, *PAVRF_HEAP_ALLOCATION;


enum eHANDLE_TRACE_OPERATIONS {
    OperationDbUnused,
    OperationDbOPEN,
    OperationDbCLOSE,
    OperationDbBADREF
};

typedef struct _AVRF_HANDLE_OPERATION {
    ULONG64 Handle;
    ULONG  ProcessId;
    ULONG  ThreadId;
    ULONG  OperationType;
    ULONG  Spare0;
    AVRF_BACKTRACE_INFORMATION BackTraceInformation;
} AVRF_HANDLE_OPERATION, * PAVRF_HANDLE_OPERATION;


enum eAvrfResourceTypes {
    AvrfResourceHeapAllocation,
    AvrfResourceHandleTrace,
    AvrfResourceMax
};

//
// generic prototype
//

typedef ULONG 
(NTAPI * AVRF_RESOURCE_ENUMERATE_CALLBACK)(
    PVOID ResourceDescription,
    PVOID EnumerationContext,
    PULONG EnumerationLevel
    );

//
// Heap Allocations Specialized Prototype
//

typedef ULONG 
(NTAPI * AVRF_HEAPALLOCATION_ENUMERATE_CALLBACK)(
    PAVRF_HEAP_ALLOCATION HeapAllocation,
    PVOID EnumerationContext,
    PULONG EnumerationLevel
    );

//
// Handle Tracing Specialized Prototype
//

typedef ULONG 
(NTAPI * AVRF_HANDLEOPERATION_ENUMERATE_CALLBACK)(
    PAVRF_HANDLE_OPERATION HandleOperation,
    PVOID EnumerationContext,
    PULONG EnumerationLevel
    );

//
// flags for AvrfResourceHeapAllocation
//

#define AVRF_ENUM_RESOURCES_FLAGS_SUSPEND             0x00000001
#define AVRF_ENUM_RESOURCES_FLAGS_DONT_RESOLVE_TRACES 0x00000002

ULONG NTAPI
VerifierEnumerateResource(
    HANDLE Process,
    ULONG  Flags,    
    ULONG  ResourceType,
    AVRF_RESOURCE_ENUMERATE_CALLBACK ResourceCallback,
    PVOID  EnumerationContext
    );
    
//
// API to find out if per user verifier settings are enabled
//

BOOL NTAPI
VerifierIsPerUserSettingsEnabled(
    VOID
    );
    
#ifdef __cplusplus
}
#endif

#endif /*AVRFSDK*/
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\avrt.h ===
/*++ BUILD Version: 0001    // Increment this if a change has global effects

Copyright (c) Microsoft Corporation.  All rights reserved.

Module Name:

    avrt.h

Abstract:

    This module contains the multimedia class scheduler APIs and any public data
    structures needed to call these APIs.


Author:

    Samer Arafeh (samera) 13-Jan-2005

--*/


#ifndef _AVRT_
#define _AVRT_

#if _MSC_VER > 1000
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

//
// AvRt Priorities
//

typedef enum _AVRT_PRIORITY
{
    AVRT_PRIORITY_LOW = -1,
    AVRT_PRIORITY_NORMAL,
    AVRT_PRIORITY_HIGH,
    AVRT_PRIORITY_CRITICAL
} AVRT_PRIORITY, *PAVRT_PRIORITY;


//
//  Infinite timeout for a thread order group.
//

#define THREAD_ORDER_GROUP_INFINITE_TIMEOUT     (-1I64)

//
// Define API decoration for direct importing of DLL references.
//

#if !defined(_AVRT_)
#define AVRTAPI DECLSPEC_IMPORT
#else
#define AVRTAPI
#endif


AVRTAPI
HANDLE
WINAPI
AvSetMmThreadCharacteristicsA (
    __in LPCSTR TaskName,
    __inout LPDWORD TaskIndex
    );
AVRTAPI
HANDLE
WINAPI
AvSetMmThreadCharacteristicsW (
    __in LPCWSTR TaskName,
    __inout LPDWORD TaskIndex
    );
#ifdef UNICODE
#define AvSetMmThreadCharacteristics  AvSetMmThreadCharacteristicsW
#else
#define AvSetMmThreadCharacteristics  AvSetMmThreadCharacteristicsA
#endif // !UNICODE
    
AVRTAPI
HANDLE
WINAPI
AvSetMmMaxThreadCharacteristicsA (
    __in LPCSTR FirstTask,
    __in LPCSTR SecondTask,
    __inout LPDWORD TaskIndex
    );
AVRTAPI
HANDLE
WINAPI
AvSetMmMaxThreadCharacteristicsW (
    __in LPCWSTR FirstTask,
    __in LPCWSTR SecondTask,
    __inout LPDWORD TaskIndex
    );
#ifdef UNICODE
#define AvSetMmMaxThreadCharacteristics  AvSetMmMaxThreadCharacteristicsW
#else
#define AvSetMmMaxThreadCharacteristics  AvSetMmMaxThreadCharacteristicsA
#endif // !UNICODE

AVRTAPI    
BOOL
WINAPI
AvRevertMmThreadCharacteristics (
    __in HANDLE AvrtHandle
    );
    
AVRTAPI
BOOL
WINAPI
AvSetMmThreadPriority (
    __in HANDLE AvrtHandle,
    __in AVRT_PRIORITY Priority
    );

AVRTAPI
BOOL
WINAPI
AvRtCreateThreadOrderingGroup (
    __out PHANDLE Context,
    __in PLARGE_INTEGER Period,
    __inout GUID *ThreadOrderingGuid,
    __in_opt PLARGE_INTEGER Timeout
    );
    
AVRTAPI
BOOL
WINAPI
AvRtCreateThreadOrderingGroupExA (
    __out PHANDLE Context,
    __in PLARGE_INTEGER Period,
    __inout GUID *ThreadOrderingGuid,
    __in_opt PLARGE_INTEGER Timeout,
    __in LPCSTR TaskName
    );
AVRTAPI
BOOL
WINAPI
AvRtCreateThreadOrderingGroupExW (
    __out PHANDLE Context,
    __in PLARGE_INTEGER Period,
    __inout GUID *ThreadOrderingGuid,
    __in_opt PLARGE_INTEGER Timeout,
    __in LPCWSTR TaskName
    );
#ifdef UNICODE
#define AvRtCreateThreadOrderingGroupEx  AvRtCreateThreadOrderingGroupExW
#else
#define AvRtCreateThreadOrderingGroupEx  AvRtCreateThreadOrderingGroupExA
#endif // !UNICODE

AVRTAPI
BOOL
WINAPI
AvRtJoinThreadOrderingGroup (
    __out PHANDLE Context,
    __in GUID *ThreadOrderingGuid,
    __in BOOL Before
    );
    
AVRTAPI
BOOL
WINAPI
AvRtWaitOnThreadOrderingGroup (
    __in HANDLE Context
    );

AVRTAPI
BOOL
WINAPI
AvRtLeaveThreadOrderingGroup (
    __in HANDLE Context
    );

AVRTAPI
BOOL
WINAPI
AvRtDeleteThreadOrderingGroup (
    __in HANDLE Context
    );

AVRTAPI
BOOL
WINAPI
AvQuerySystemResponsiveness (
    __in HANDLE AvrtHandle,
    __out PULONG SystemResponsivenessValue
    );

    
#ifdef __cplusplus
}
#endif

#endif // _AVRT_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AviFmt.h ===
/****************************************************************************/
/*                                                                          */
/*        AVIFMT.H - Include file for working with AVI files                */
/*                                                                          */
/*        Note: You must include WINDOWS.H and MMSYSTEM.H before            */
/*        including this file.                                              */
/*                                                                          */
/*        Copyright (c) 1991-1998, Microsoft Corp.  All rights reserved.    */
/*                                                                          */
/*                                                                          */
/****************************************************************************/

#ifndef _INC_AVIFMT
#define _INC_AVIFMT	100	/* version number * 100 + revision */

#ifdef __cplusplus
extern "C" {            /* Assume C declarations for C++ */
#endif	/* __cplusplus */

// begin_vfw32

#ifdef _MSC_VER
#pragma warning(disable:4200)
#endif

/* The following is a short description of the AVI file format.  Please
 * see the accompanying documentation for a full explanation.
 *
 * An AVI file is the following RIFF form:
 *
 *	RIFF('AVI'
 *	      LIST('hdrl'
 *		    avih(<MainAVIHeader>)
 *                  LIST ('strl'
 *                      strh(<Stream header>)
 *                      strf(<Stream format>)
 *                      ... additional header data
 *            LIST('movi'	
 *      	  { LIST('rec'
 *      		      SubChunk...
 *      		   )
 *      	      | SubChunk } ....	
 *            )
 *            [ <AVIIndex> ]
 *      )
 *
 *	The main file header specifies how many streams are present.  For
 *	each one, there must be a stream header chunk and a stream format
 *	chunk, enlosed in a 'strl' LIST chunk.  The 'strf' chunk contains
 *	type-specific format information; for a video stream, this should
 *	be a BITMAPINFO structure, including palette.  For an audio stream,
 *	this should be a WAVEFORMAT (or PCMWAVEFORMAT) structure.
 *
 *	The actual data is contained in subchunks within the 'movi' LIST
 *	chunk.  The first two characters of each data chunk are the
 *	stream number with which that data is associated.
 *
 *	Some defined chunk types:
 *           Video Streams:
 *                  ##db:	RGB DIB bits
 *                  ##dc:	RLE8 compressed DIB bits
 *                  ##pc:	Palette Change
 *
 *           Audio Streams:
 *                  ##wb:	waveform audio bytes
 *
 * The grouping into LIST 'rec' chunks implies only that the contents of
 *   the chunk should be read into memory at the same time.  This
 *   grouping is used for files specifically intended to be played from
 *   CD-ROM.
 *
 * The index chunk at the end of the file should contain one entry for
 *   each data chunk in the file.
 *
 * Limitations for the current software:
 *	Only one video stream and one audio stream are allowed.
 *	The streams must start at the beginning of the file.
 *
 *
 * To register codec types please obtain a copy of the Multimedia
 * Developer Registration Kit from:
 *
 *  Microsoft Corporation
 *  Multimedia Systems Group
 *  Product Marketing
 *  One Microsoft Way
 *  Redmond, WA 98052-6399
 *
 */

#ifndef mmioFOURCC
#define mmioFOURCC( ch0, ch1, ch2, ch3 )				\
		( (DWORD)(BYTE)(ch0) | ( (DWORD)(BYTE)(ch1) << 8 ) |	\
		( (DWORD)(BYTE)(ch2) << 16 ) | ( (DWORD)(BYTE)(ch3) << 24 ) )
#endif

/* Macro to make a TWOCC out of two characters */
#ifndef aviTWOCC
#define aviTWOCC(ch0, ch1) ((WORD)(BYTE)(ch0) | ((WORD)(BYTE)(ch1) << 8))
#endif

typedef WORD TWOCC;

/* form types, list types, and chunk types */
#define formtypeAVI             mmioFOURCC('A', 'V', 'I', ' ')
#define listtypeAVIHEADER       mmioFOURCC('h', 'd', 'r', 'l')
#define ckidAVIMAINHDR          mmioFOURCC('a', 'v', 'i', 'h')
#define listtypeSTREAMHEADER    mmioFOURCC('s', 't', 'r', 'l')
#define ckidSTREAMHEADER        mmioFOURCC('s', 't', 'r', 'h')
#define ckidSTREAMFORMAT        mmioFOURCC('s', 't', 'r', 'f')
#define ckidSTREAMHANDLERDATA   mmioFOURCC('s', 't', 'r', 'd')
#define ckidSTREAMNAME		mmioFOURCC('s', 't', 'r', 'n')

#define listtypeAVIMOVIE        mmioFOURCC('m', 'o', 'v', 'i')
#define listtypeAVIRECORD       mmioFOURCC('r', 'e', 'c', ' ')

#define ckidAVINEWINDEX         mmioFOURCC('i', 'd', 'x', '1')

/*
** Stream types for the <fccType> field of the stream header.
*/
#define streamtypeVIDEO         mmioFOURCC('v', 'i', 'd', 's')
#define streamtypeAUDIO         mmioFOURCC('a', 'u', 'd', 's')
#define streamtypeMIDI		mmioFOURCC('m', 'i', 'd', 's')
#define streamtypeTEXT          mmioFOURCC('t', 'x', 't', 's')

/* Basic chunk types */
#define cktypeDIBbits           aviTWOCC('d', 'b')
#define cktypeDIBcompressed     aviTWOCC('d', 'c')
#define cktypePALchange         aviTWOCC('p', 'c')
#define cktypeWAVEbytes         aviTWOCC('w', 'b')

/* Chunk id to use for extra chunks for padding. */
#define ckidAVIPADDING          mmioFOURCC('J', 'U', 'N', 'K')

/*
** Useful macros
**
** Warning: These are nasty macro, and MS C 6.0 compiles some of them
** incorrectly if optimizations are on.  Ack.
*/

/* Macro to get stream number out of a FOURCC ckid */
#define FromHex(n)	(((n) >= 'A') ? ((n) + 10 - 'A') : ((n) - '0'))
#define StreamFromFOURCC(fcc) ((WORD) ((FromHex(LOBYTE(LOWORD(fcc))) << 4) + \
                                             (FromHex(HIBYTE(LOWORD(fcc))))))

/* Macro to get TWOCC chunk type out of a FOURCC ckid */
#define TWOCCFromFOURCC(fcc)    HIWORD(fcc)

/* Macro to make a ckid for a chunk out of a TWOCC and a stream number
** from 0-255.
*/
#define ToHex(n)	((BYTE) (((n) > 9) ? ((n) - 10 + 'A') : ((n) + '0')))
#define MAKEAVICKID(tcc, stream) \
        MAKELONG((ToHex((stream) & 0x0f) << 8) | \
			    (ToHex(((stream) & 0xf0) >> 4)), tcc)

/*
** Main AVI File Header
*/	
		
/* flags for use in <dwFlags> in AVIFileHdr */
#define AVIF_HASINDEX		0x00000010	// Index at end of file
#define AVIF_MUSTUSEINDEX	0x00000020
#define AVIF_ISINTERLEAVED	0x00000100
#define AVIF_TRUSTCKTYPE	0x00000800	// Use CKType to find key frames
#define AVIF_WASCAPTUREFILE	0x00010000
#define AVIF_COPYRIGHTED	0x00020000

/* The AVI File Header LIST chunk should be padded to this size */
#define AVI_HEADERSIZE  2048                    // size of AVI header list

typedef struct
{
    DWORD		dwMicroSecPerFrame;	// frame display rate (or 0L)
    DWORD		dwMaxBytesPerSec;	// max. transfer rate
    DWORD		dwPaddingGranularity;	// pad to multiples of this
                                                // size; normally 2K.
    DWORD		dwFlags;		// the ever-present flags
    DWORD		dwTotalFrames;		// # frames in file
    DWORD		dwInitialFrames;
    DWORD		dwStreams;
    DWORD		dwSuggestedBufferSize;

    DWORD		dwWidth;
    DWORD		dwHeight;

    DWORD		dwReserved[4];
} MainAVIHeader;

/*
** Stream header
*/

#define AVISF_DISABLED			0x00000001

#define AVISF_VIDEO_PALCHANGES		0x00010000

typedef struct {
    FOURCC		fccType;
    FOURCC		fccHandler;
    DWORD		dwFlags;	/* Contains AVITF_* flags */
    WORD		wPriority;
    WORD		wLanguage;
    DWORD		dwInitialFrames;
    DWORD		dwScale;	
    DWORD		dwRate;	/* dwRate / dwScale == samples/second */
    DWORD		dwStart;
    DWORD		dwLength; /* In units above... */
    DWORD		dwSuggestedBufferSize;
    DWORD		dwQuality;
    DWORD		dwSampleSize;
    RECT		rcFrame;
} AVIStreamHeader;

/* Flags for index */
#define AVIIF_LIST          0x00000001L // chunk is a 'LIST'
#define AVIIF_KEYFRAME      0x00000010L // this frame is a key frame.

#define AVIIF_NOTIME	    0x00000100L // this frame doesn't take any time
#define AVIIF_COMPUSE       0x0FFF0000L // these bits are for compressor use

typedef struct
{
    DWORD		ckid;
    DWORD		dwFlags;
    DWORD		dwChunkOffset;		// Position of chunk
    DWORD		dwChunkLength;		// Length of chunk
} AVIINDEXENTRY;

/*
** Palette change chunk
**
** Used in video streams.
*/
typedef struct
{
    BYTE		bFirstEntry;	/* first entry to change */
    BYTE		bNumEntries;	/* # entries to change (0 if 256) */
    WORD		wFlags;		/* Mostly to preserve alignment... */
    PALETTEENTRY	peNew[];	/* New color specifications */
} AVIPALCHANGE;

// end_vfw32

#ifdef __cplusplus
}                       /* End of extern "C" { */
#endif	/* __cplusplus */

#endif /* _INC_AVIFMT */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\aviriff.h ===
//------------------------------------------------------------------------------
// File: AVIRIFF.h
//
// Desc: Structures and defines for the RIFF AVI file format extended to
//       handle very large/long files.
//
// Copyright (c) 1996 - 2001, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------


#pragma warning(disable: 4097 4511 4512 4514 4705)


#if !defined AVIRIFF_H
#define AVIRIFF_H

#if !defined NUMELMS
  #define NUMELMS(aa) (sizeof(aa)/sizeof((aa)[0]))
#endif

// all structures in this file are packed on word boundaries
//
#include <pshpack2.h>

/*
 * heres the general layout of an AVI riff file (new format)
 *
 * RIFF (3F??????) AVI       <- not more than 1 GB in size
 *     LIST (size) hdrl
 *         avih (0038)
 *         LIST (size) strl
 *             strh (0038)
 *             strf (????)
 *             indx (3ff8)   <- size may vary, should be sector sized
 *         LIST (size) strl
 *             strh (0038)
 *             strf (????)
 *             indx (3ff8)   <- size may vary, should be sector sized
 *         LIST (size) odml
 *             dmlh (????)
 *         JUNK (size)       <- fill to align to sector - 12
 *     LIST (7f??????) movi  <- aligned on sector - 12
 *         00dc (size)       <- sector aligned
 *         01wb (size)       <- sector aligned
 *         ix00 (size)       <- sector aligned
 *     idx1 (00??????)       <- sector aligned
 * RIFF (7F??????) AVIX
 *     JUNK (size)           <- fill to align to sector -12
 *     LIST (size) movi
 *         00dc (size)       <- sector aligned
 * RIFF (7F??????) AVIX      <- not more than 2GB in size
 *     JUNK (size)           <- fill to align to sector - 12
 *     LIST (size) movi
 *         00dc (size)       <- sector aligned
 *
 *-===================================================================*/

//
// structures for manipulating RIFF headers
//
#define FCC(ch4) ((((DWORD)(ch4) & 0xFF) << 24) |     \
                  (((DWORD)(ch4) & 0xFF00) << 8) |    \
                  (((DWORD)(ch4) & 0xFF0000) >> 8) |  \
                  (((DWORD)(ch4) & 0xFF000000) >> 24))

typedef struct _riffchunk {
   FOURCC fcc;
   DWORD  cb;
   } RIFFCHUNK, * LPRIFFCHUNK;
typedef struct _rifflist {
   FOURCC fcc;
   DWORD  cb;
   FOURCC fccListType;
   } RIFFLIST, * LPRIFFLIST;

#define RIFFROUND(cb) ((cb) + ((cb)&1))
#define RIFFNEXT(pChunk) (LPRIFFCHUNK)((LPBYTE)(pChunk) \
                          + sizeof(RIFFCHUNK) \
                          + RIFFROUND(((LPRIFFCHUNK)pChunk)->cb))


//
// ==================== avi header structures ===========================
//

// main header for the avi file (compatibility header)
//
#define ckidMAINAVIHEADER FCC('avih')
typedef struct _avimainheader {
    FOURCC fcc;                    // 'avih'
    DWORD  cb;                     // size of this structure -8
    DWORD  dwMicroSecPerFrame;     // frame display rate (or 0L)
    DWORD  dwMaxBytesPerSec;       // max. transfer rate
    DWORD  dwPaddingGranularity;   // pad to multiples of this size; normally 2K.
    DWORD  dwFlags;                // the ever-present flags
    #define AVIF_HASINDEX        0x00000010 // Index at end of file?
    #define AVIF_MUSTUSEINDEX    0x00000020
    #define AVIF_ISINTERLEAVED   0x00000100
    #define AVIF_TRUSTCKTYPE     0x00000800 // Use CKType to find key frames
    #define AVIF_WASCAPTUREFILE  0x00010000
    #define AVIF_COPYRIGHTED     0x00020000
    DWORD  dwTotalFrames;          // # frames in first movi list
    DWORD  dwInitialFrames;
    DWORD  dwStreams;
    DWORD  dwSuggestedBufferSize;
    DWORD  dwWidth;
    DWORD  dwHeight;
    DWORD  dwReserved[4];
    } AVIMAINHEADER;

#define ckidODML          FCC('odml')
#define ckidAVIEXTHEADER  FCC('dmlh')
typedef struct _aviextheader {
   FOURCC  fcc;                    // 'dmlh'
   DWORD   cb;                     // size of this structure -8
   DWORD   dwGrandFrames;          // total number of frames in the file
   DWORD   dwFuture[61];           // to be defined later
   } AVIEXTHEADER;

//
// structure of an AVI stream header riff chunk
//
#define ckidSTREAMLIST   FCC('strl')

#ifndef ckidSTREAMHEADER
#define ckidSTREAMHEADER FCC('strh')
#endif
typedef struct _avistreamheader {
   FOURCC fcc;          // 'strh'
   DWORD  cb;           // size of this structure - 8

   FOURCC fccType;      // stream type codes

   #ifndef streamtypeVIDEO
   #define streamtypeVIDEO FCC('vids')
   #define streamtypeAUDIO FCC('auds')
   #define streamtypeMIDI  FCC('mids')
   #define streamtypeTEXT  FCC('txts')
   #endif

   FOURCC fccHandler;
   DWORD  dwFlags;
   #define AVISF_DISABLED          0x00000001
   #define AVISF_VIDEO_PALCHANGES  0x00010000

   WORD   wPriority;
   WORD   wLanguage;
   DWORD  dwInitialFrames;
   DWORD  dwScale;
   DWORD  dwRate;       // dwRate/dwScale is stream tick rate in ticks/sec
   DWORD  dwStart;
   DWORD  dwLength;
   DWORD  dwSuggestedBufferSize;
   DWORD  dwQuality;
   DWORD  dwSampleSize;
   struct {
      short int left;
      short int top;
      short int right;
      short int bottom;
      }   rcFrame;
   } AVISTREAMHEADER;


//
// structure of an AVI stream format chunk
//
#ifndef ckidSTREAMFORMAT
#define ckidSTREAMFORMAT FCC('strf')
#endif
//
// avi stream formats are different for each stream type
//
// BITMAPINFOHEADER for video streams
// WAVEFORMATEX or PCMWAVEFORMAT for audio streams
// nothing for text streams
// nothing for midi streams


#pragma warning(disable:4200)
//
// structure of old style AVI index
//
#define ckidAVIOLDINDEX FCC('idx1')
typedef struct _avioldindex {
   FOURCC  fcc;        // 'idx1'
   DWORD   cb;         // size of this structure -8
   struct _avioldindex_entry {
      DWORD   dwChunkId;
      DWORD   dwFlags;

      #ifndef AVIIF_LIST
      #define AVIIF_LIST       0x00000001
      #define AVIIF_KEYFRAME   0x00000010
      #endif
     
      #define AVIIF_NO_TIME    0x00000100
      #define AVIIF_COMPRESSOR 0x0FFF0000  // unused?
      DWORD   dwOffset;    // offset of riff chunk header for the data
      DWORD   dwSize;      // size of the data (excluding riff header size)
      } aIndex[];          // size of this array
   } AVIOLDINDEX;


//
// ============ structures for timecode in an AVI file =================
//

#ifndef TIMECODE_DEFINED
#define TIMECODE_DEFINED

// defined
// timecode time structure
//
typedef union _timecode {
   struct {
      WORD   wFrameRate;
      WORD   wFrameFract;
      LONG   cFrames;
      };
   DWORDLONG  qw;
   } TIMECODE;

#endif // TIMECODE_DEFINED

#define TIMECODE_RATE_30DROP 0   // this MUST be zero

// struct for all the SMPTE timecode info
//
typedef struct _timecodedata {
   TIMECODE time;
   DWORD    dwSMPTEflags;
   DWORD    dwUser;
   } TIMECODEDATA;

// dwSMPTEflags masks/values
//
#define TIMECODE_SMPTE_BINARY_GROUP 0x07
#define TIMECODE_SMPTE_COLOR_FRAME  0x08

//
// ============ structures for new style AVI indexes =================
//

// index type codes
//
#define AVI_INDEX_OF_INDEXES       0x00
#define AVI_INDEX_OF_CHUNKS        0x01
#define AVI_INDEX_OF_TIMED_CHUNKS  0x02
#define AVI_INDEX_OF_SUB_2FIELD    0x03
#define AVI_INDEX_IS_DATA          0x80

// index subtype codes
//
#define AVI_INDEX_SUB_DEFAULT     0x00

// INDEX_OF_CHUNKS subtype codes
//
#define AVI_INDEX_SUB_2FIELD      0x01

// meta structure of all avi indexes
//
typedef struct _avimetaindex {
   FOURCC fcc;
   UINT   cb;
   WORD   wLongsPerEntry;
   BYTE   bIndexSubType;
   BYTE   bIndexType;
   DWORD  nEntriesInUse;
   DWORD  dwChunkId;
   DWORD  dwReserved[3];
   DWORD  adwIndex[];
   } AVIMETAINDEX;

#define STDINDEXSIZE 0x4000
#define NUMINDEX(wLongsPerEntry) ((STDINDEXSIZE-32)/4/(wLongsPerEntry))
#define NUMINDEXFILL(wLongsPerEntry) ((STDINDEXSIZE/4) - NUMINDEX(wLongsPerEntry))

// structure of a super index (INDEX_OF_INDEXES)
//
#define ckidAVISUPERINDEX FCC('indx')
typedef struct _avisuperindex {
   FOURCC   fcc;               // 'indx'
   UINT     cb;                // size of this structure
   WORD     wLongsPerEntry;    // ==4
   BYTE     bIndexSubType;     // ==0 (frame index) or AVI_INDEX_SUB_2FIELD 
   BYTE     bIndexType;        // ==AVI_INDEX_OF_INDEXES
   DWORD    nEntriesInUse;     // offset of next unused entry in aIndex
   DWORD    dwChunkId;         // chunk ID of chunks being indexed, (i.e. RGB8)
   DWORD    dwReserved[3];     // must be 0
   struct _avisuperindex_entry {
      DWORDLONG qwOffset;    // 64 bit offset to sub index chunk
      DWORD    dwSize;       // 32 bit size of sub index chunk
      DWORD    dwDuration;   // time span of subindex chunk (in stream ticks)
      } aIndex[NUMINDEX(4)];
   } AVISUPERINDEX;
#define Valid_SUPERINDEX(pi) (*(DWORD *)(&((pi)->wLongsPerEntry)) == (4 | (AVI_INDEX_OF_INDEXES << 24)))

// struct of a standard index (AVI_INDEX_OF_CHUNKS)
//
typedef struct _avistdindex_entry {
   DWORD dwOffset;       // 32 bit offset to data (points to data, not riff header)
   DWORD dwSize;         // 31 bit size of data (does not include size of riff header), bit 31 is deltaframe bit
   } AVISTDINDEX_ENTRY;
#define AVISTDINDEX_DELTAFRAME ( 0x80000000) // Delta frames have the high bit set
#define AVISTDINDEX_SIZEMASK   (~0x80000000)

typedef struct _avistdindex {
   FOURCC   fcc;               // 'indx' or '##ix'
   UINT     cb;                // size of this structure
   WORD     wLongsPerEntry;    // ==2
   BYTE     bIndexSubType;     // ==0
   BYTE     bIndexType;        // ==AVI_INDEX_OF_CHUNKS
   DWORD    nEntriesInUse;     // offset of next unused entry in aIndex
   DWORD    dwChunkId;         // chunk ID of chunks being indexed, (i.e. RGB8)
   DWORDLONG qwBaseOffset;     // base offset that all index intries are relative to
   DWORD    dwReserved_3;      // must be 0
   AVISTDINDEX_ENTRY aIndex[NUMINDEX(2)];
   } AVISTDINDEX;

// struct of a time variant standard index (AVI_INDEX_OF_TIMED_CHUNKS)
//
typedef struct _avitimedindex_entry {
   DWORD dwOffset;       // 32 bit offset to data (points to data, not riff header)
   DWORD dwSize;         // 31 bit size of data (does not include size of riff header) (high bit is deltaframe bit)
   DWORD dwDuration;     // how much time the chunk should be played (in stream ticks)
   } AVITIMEDINDEX_ENTRY;

typedef struct _avitimedindex {
   FOURCC   fcc;               // 'indx' or '##ix'
   UINT     cb;                // size of this structure
   WORD     wLongsPerEntry;    // ==3
   BYTE     bIndexSubType;     // ==0
   BYTE     bIndexType;        // ==AVI_INDEX_OF_TIMED_CHUNKS
   DWORD    nEntriesInUse;     // offset of next unused entry in aIndex
   DWORD    dwChunkId;         // chunk ID of chunks being indexed, (i.e. RGB8)
   DWORDLONG qwBaseOffset;     // base offset that all index intries are relative to
   DWORD    dwReserved_3;      // must be 0
   AVITIMEDINDEX_ENTRY aIndex[NUMINDEX(3)];
   DWORD adwTrailingFill[NUMINDEXFILL(3)]; // to align struct to correct size
   } AVITIMEDINDEX;

// structure of a timecode stream
//
typedef struct _avitimecodeindex {
   FOURCC   fcc;               // 'indx' or '##ix'
   UINT     cb;                // size of this structure
   WORD     wLongsPerEntry;    // ==4
   BYTE     bIndexSubType;     // ==0
   BYTE     bIndexType;        // ==AVI_INDEX_IS_DATA
   DWORD    nEntriesInUse;     // offset of next unused entry in aIndex
   DWORD    dwChunkId;         // 'time'
   DWORD    dwReserved[3];     // must be 0
   TIMECODEDATA aIndex[NUMINDEX(sizeof(TIMECODEDATA)/sizeof(LONG))];
   } AVITIMECODEINDEX;

// structure of a timecode discontinuity list (when wLongsPerEntry == 7)
//
typedef struct _avitcdlindex_entry {
    DWORD    dwTick;           // stream tick time that maps to this timecode value
    TIMECODE time;
    DWORD    dwSMPTEflags;
    DWORD    dwUser;
    TCHAR    szReelId[12];
    } AVITCDLINDEX_ENTRY;

typedef struct _avitcdlindex {
   FOURCC   fcc;               // 'indx' or '##ix'
   UINT     cb;                // size of this structure
   WORD     wLongsPerEntry;    // ==7 (must be 4 or more all 'tcdl' indexes
   BYTE     bIndexSubType;     // ==0
   BYTE     bIndexType;        // ==AVI_INDEX_IS_DATA
   DWORD    nEntriesInUse;     // offset of next unused entry in aIndex
   DWORD    dwChunkId;         // 'tcdl'
   DWORD    dwReserved[3];     // must be 0
   AVITCDLINDEX_ENTRY aIndex[NUMINDEX(7)];
   DWORD adwTrailingFill[NUMINDEXFILL(7)]; // to align struct to correct size
   } AVITCDLINDEX;

typedef struct _avifieldindex_chunk {
   FOURCC   fcc;               // 'ix##'
   DWORD    cb;                // size of this structure
   WORD     wLongsPerEntry;    // must be 3 (size of each entry in
                               // aIndex array)
   BYTE     bIndexSubType;     // AVI_INDEX_2FIELD
   BYTE     bIndexType;        // AVI_INDEX_OF_CHUNKS
   DWORD    nEntriesInUse;     //
   DWORD    dwChunkId;         // '##dc' or '##db'
   DWORDLONG qwBaseOffset;     // offsets in aIndex array are relative to this
   DWORD    dwReserved3;       // must be 0
   struct _avifieldindex_entry {
      DWORD    dwOffset;
      DWORD    dwSize;         // size of all fields
                               // (bit 31 set for NON-keyframes)
      DWORD    dwOffsetField2; // offset to second field
   } aIndex[  ];
} AVIFIELDINDEX, * PAVIFIELDINDEX;


#include <poppack.h>

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\authen.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for authen.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __authen_h__
#define __authen_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IWMSAuthenticationPlugin_FWD_DEFINED__
#define __IWMSAuthenticationPlugin_FWD_DEFINED__
typedef interface IWMSAuthenticationPlugin IWMSAuthenticationPlugin;
#endif 	/* __IWMSAuthenticationPlugin_FWD_DEFINED__ */


#ifndef __IWMSAuthenticationContext_FWD_DEFINED__
#define __IWMSAuthenticationContext_FWD_DEFINED__
typedef interface IWMSAuthenticationContext IWMSAuthenticationContext;
#endif 	/* __IWMSAuthenticationContext_FWD_DEFINED__ */


#ifndef __IWMSAuthenticationCallback_FWD_DEFINED__
#define __IWMSAuthenticationCallback_FWD_DEFINED__
typedef interface IWMSAuthenticationCallback IWMSAuthenticationCallback;
#endif 	/* __IWMSAuthenticationCallback_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "WMSContext.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_authen_0000_0000 */
/* [local] */ 

//+-------------------------------------------------------------------------
//
//  Microsoft Windows Media Technologies
//  Copyright (C) Microsoft Corporation. All rights reserved.
//
//  Automatically generated by Midl
//
//  DO NOT EDIT THIS FILE.
//
//--------------------------------------------------------------------------
#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
EXTERN_GUID( IID_IWMSAuthenticationPlugin , 0xBE185FF9,0x6932,0x11d2,0x8B,0x3B,0x00,0x60,0x97,0xB0,0x12,0x06  );
EXTERN_GUID( IID_IWMSAuthenticationContext , 0xBE185FFA,0x6932,0x11d2,0x8B,0x3B,0x00,0x60,0x97,0xB0,0x12,0x06  );
EXTERN_GUID( IID_IWMSAuthenticationCallback , 0xBE185FFB,0x6932,0x11d2,0x8B,0x3B,0x00,0x60,0x97,0xB0,0x12,0x06  );





extern RPC_IF_HANDLE __MIDL_itf_authen_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_authen_0000_0000_v0_0_s_ifspec;

#ifndef __IWMSAuthenticationPlugin_INTERFACE_DEFINED__
#define __IWMSAuthenticationPlugin_INTERFACE_DEFINED__

/* interface IWMSAuthenticationPlugin */
/* [helpstring][unique][version][uuid][object] */ 

typedef /* [public] */ 
enum WMS_AUTHENTICATION_FLAGS
    {	WMS_AUTHENTICATION_TEXT_CHALLENGE	= 0x1,
	WMS_AUTHENTICATION_CLIENT_SHOWS_UI	= 0x2,
	WMS_AUTHENTICATION_ANONYMOUS	= 0x4,
	WMS_AUTHENTICATION_CHALLENGE_FIRST	= 0x8
    } 	WMS_AUTHENTICATION_FLAGS;


EXTERN_C const IID IID_IWMSAuthenticationPlugin;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BE185FF9-6932-11d2-8B3B-006097B01206")
    IWMSAuthenticationPlugin : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPackageName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrPackageName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetProtocolName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProtocolName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFlags( 
            /* [retval][out] */ __RPC__out long *plFlags) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateAuthenticationContext( 
            /* [retval][out] */ __RPC__deref_out_opt IWMSAuthenticationContext **ppAuthenCtx) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IWMSAuthenticationPluginVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IWMSAuthenticationPlugin * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IWMSAuthenticationPlugin * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IWMSAuthenticationPlugin * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPackageName )( 
            IWMSAuthenticationPlugin * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrPackageName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetProtocolName )( 
            IWMSAuthenticationPlugin * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProtocolName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFlags )( 
            IWMSAuthenticationPlugin * This,
            /* [retval][out] */ __RPC__out long *plFlags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateAuthenticationContext )( 
            IWMSAuthenticationPlugin * This,
            /* [retval][out] */ __RPC__deref_out_opt IWMSAuthenticationContext **ppAuthenCtx);
        
        END_INTERFACE
    } IWMSAuthenticationPluginVtbl;

    interface IWMSAuthenticationPlugin
    {
        CONST_VTBL struct IWMSAuthenticationPluginVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IWMSAuthenticationPlugin_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IWMSAuthenticationPlugin_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IWMSAuthenticationPlugin_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IWMSAuthenticationPlugin_GetPackageName(This,pbstrPackageName)	\
    ( (This)->lpVtbl -> GetPackageName(This,pbstrPackageName) ) 

#define IWMSAuthenticationPlugin_GetProtocolName(This,pbstrProtocolName)	\
    ( (This)->lpVtbl -> GetProtocolName(This,pbstrProtocolName) ) 

#define IWMSAuthenticationPlugin_GetFlags(This,plFlags)	\
    ( (This)->lpVtbl -> GetFlags(This,plFlags) ) 

#define IWMSAuthenticationPlugin_CreateAuthenticationContext(This,ppAuthenCtx)	\
    ( (This)->lpVtbl -> CreateAuthenticationContext(This,ppAuthenCtx) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IWMSAuthenticationPlugin_INTERFACE_DEFINED__ */


#ifndef __IWMSAuthenticationContext_INTERFACE_DEFINED__
#define __IWMSAuthenticationContext_INTERFACE_DEFINED__

/* interface IWMSAuthenticationContext */
/* [helpstring][unique][version][uuid][object] */ 


EXTERN_C const IID IID_IWMSAuthenticationContext;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BE185FFA-6932-11d2-8B3B-006097B01206")
    IWMSAuthenticationContext : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetAuthenticationPlugin( 
            /* [retval][out] */ __RPC__deref_out_opt IWMSAuthenticationPlugin **ppAuthenPlugin) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Authenticate( 
            /* [in] */ VARIANT ResponseBlob,
            /* [in] */ __RPC__in_opt IWMSContext *pUserCtx,
            /* [in] */ __RPC__in_opt IWMSContext *pPresentationCtx,
            /* [in] */ __RPC__in_opt IWMSCommandContext *pCommandContext,
            /* [in] */ __RPC__in_opt IWMSAuthenticationCallback *pCallback,
            /* [in] */ VARIANT Context) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetLogicalUserID( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrUserID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetImpersonationAccountName( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrAccountName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetImpersonationToken( 
            /* [retval][out] */ __RPC__out long *plToken) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IWMSAuthenticationContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IWMSAuthenticationContext * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IWMSAuthenticationContext * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IWMSAuthenticationContext * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetAuthenticationPlugin )( 
            IWMSAuthenticationContext * This,
            /* [retval][out] */ __RPC__deref_out_opt IWMSAuthenticationPlugin **ppAuthenPlugin);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Authenticate )( 
            IWMSAuthenticationContext * This,
            /* [in] */ VARIANT ResponseBlob,
            /* [in] */ __RPC__in_opt IWMSContext *pUserCtx,
            /* [in] */ __RPC__in_opt IWMSContext *pPresentationCtx,
            /* [in] */ __RPC__in_opt IWMSCommandContext *pCommandContext,
            /* [in] */ __RPC__in_opt IWMSAuthenticationCallback *pCallback,
            /* [in] */ VARIANT Context);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetLogicalUserID )( 
            IWMSAuthenticationContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrUserID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetImpersonationAccountName )( 
            IWMSAuthenticationContext * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrAccountName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetImpersonationToken )( 
            IWMSAuthenticationContext * This,
            /* [retval][out] */ __RPC__out long *plToken);
        
        END_INTERFACE
    } IWMSAuthenticationContextVtbl;

    interface IWMSAuthenticationContext
    {
        CONST_VTBL struct IWMSAuthenticationContextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IWMSAuthenticationContext_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IWMSAuthenticationContext_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IWMSAuthenticationContext_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IWMSAuthenticationContext_GetAuthenticationPlugin(This,ppAuthenPlugin)	\
    ( (This)->lpVtbl -> GetAuthenticationPlugin(This,ppAuthenPlugin) ) 

#define IWMSAuthenticationContext_Authenticate(This,ResponseBlob,pUserCtx,pPresentationCtx,pCommandContext,pCallback,Context)	\
    ( (This)->lpVtbl -> Authenticate(This,ResponseBlob,pUserCtx,pPresentationCtx,pCommandContext,pCallback,Context) ) 

#define IWMSAuthenticationContext_GetLogicalUserID(This,pbstrUserID)	\
    ( (This)->lpVtbl -> GetLogicalUserID(This,pbstrUserID) ) 

#define IWMSAuthenticationContext_GetImpersonationAccountName(This,pbstrAccountName)	\
    ( (This)->lpVtbl -> GetImpersonationAccountName(This,pbstrAccountName) ) 

#define IWMSAuthenticationContext_GetImpersonationToken(This,plToken)	\
    ( (This)->lpVtbl -> GetImpersonationToken(This,plToken) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IWMSAuthenticationContext_INTERFACE_DEFINED__ */


#ifndef __IWMSAuthenticationCallback_INTERFACE_DEFINED__
#define __IWMSAuthenticationCallback_INTERFACE_DEFINED__

/* interface IWMSAuthenticationCallback */
/* [helpstring][unique][version][uuid][object] */ 

typedef /* [public] */ 
enum WMS_AUTHENTICATION_RESULT
    {	WMS_AUTHENTICATION_SUCCESS	= 0x1,
	WMS_AUTHENTICATION_DENIED	= 0x2,
	WMS_AUTHENTICATION_CONTINUE	= 0x3,
	WMS_AUTHENTICATION_ERROR	= 0x4
    } 	WMS_AUTHENTICATION_RESULT;


EXTERN_C const IID IID_IWMSAuthenticationCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BE185FFB-6932-11d2-8B3B-006097B01206")
    IWMSAuthenticationCallback : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE OnAuthenticateComplete( 
            /* [in] */ WMS_AUTHENTICATION_RESULT AuthResult,
            /* [in] */ VARIANT ChallengeBlob,
            /* [in] */ VARIANT Context) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IWMSAuthenticationCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IWMSAuthenticationCallback * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IWMSAuthenticationCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IWMSAuthenticationCallback * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *OnAuthenticateComplete )( 
            IWMSAuthenticationCallback * This,
            /* [in] */ WMS_AUTHENTICATION_RESULT AuthResult,
            /* [in] */ VARIANT ChallengeBlob,
            /* [in] */ VARIANT Context);
        
        END_INTERFACE
    } IWMSAuthenticationCallbackVtbl;

    interface IWMSAuthenticationCallback
    {
        CONST_VTBL struct IWMSAuthenticationCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IWMSAuthenticationCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IWMSAuthenticationCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IWMSAuthenticationCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IWMSAuthenticationCallback_OnAuthenticateComplete(This,AuthResult,ChallengeBlob,Context)	\
    ( (This)->lpVtbl -> OnAuthenticateComplete(This,AuthResult,ChallengeBlob,Context) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IWMSAuthenticationCallback_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long *, unsigned long            , VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  unsigned long *, unsigned char *, VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(unsigned long *, unsigned char *, VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long *, VARIANT * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     unsigned long *, BSTR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize64(     unsigned long *, unsigned long            , VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal64(  unsigned long *, unsigned char *, VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal64(unsigned long *, unsigned char *, VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree64(     unsigned long *, VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AuthZ.h ===
/*++

Copyright (c) 2000 Microsoft Corporation

Module Name:

    authz.h

Abstract:

    This module contains the authorization framework APIs and any public data
    structures needed to call these APIs.

Revision History:

    Created - March 2000

--*/

#ifndef __AUTHZ_H__
#define __AUTHZ_H__

#ifdef __cplusplus
extern "C" {
#endif

#if !defined(_AUTHZ_)
#define AUTHZAPI DECLSPEC_IMPORT
#else 
#define AUTHZAPI
#endif

#include <windows.h>
#include <adtgen.h>

//
// Flags which may be used at the time of client context creation using a sid.
//

#define AUTHZ_SKIP_TOKEN_GROUPS  0x2
#define AUTHZ_REQUIRE_S4U_LOGON  0x4
#define AUTHZ_COMPUTE_PRIVILEGES 0x8
              
DECLARE_HANDLE(AUTHZ_ACCESS_CHECK_RESULTS_HANDLE);
DECLARE_HANDLE(AUTHZ_CLIENT_CONTEXT_HANDLE);
DECLARE_HANDLE(AUTHZ_RESOURCE_MANAGER_HANDLE);
DECLARE_HANDLE(AUTHZ_AUDIT_EVENT_HANDLE);
DECLARE_HANDLE(AUTHZ_AUDIT_EVENT_TYPE_HANDLE);
DECLARE_HANDLE(AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE);

typedef AUTHZ_ACCESS_CHECK_RESULTS_HANDLE    *PAUTHZ_ACCESS_CHECK_RESULTS_HANDLE;
typedef AUTHZ_CLIENT_CONTEXT_HANDLE          *PAUTHZ_CLIENT_CONTEXT_HANDLE;
typedef AUTHZ_RESOURCE_MANAGER_HANDLE        *PAUTHZ_RESOURCE_MANAGER_HANDLE;
typedef AUTHZ_AUDIT_EVENT_HANDLE             *PAUTHZ_AUDIT_EVENT_HANDLE;
typedef AUTHZ_AUDIT_EVENT_TYPE_HANDLE        *PAUTHZ_AUDIT_EVENT_TYPE_HANDLE;
typedef AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE *PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE;

//
// Structure defining the access check request.
//

typedef struct _AUTHZ_ACCESS_REQUEST
{
    ACCESS_MASK DesiredAccess;

    //
    // To replace the principal self sid in the acl.
    //

    PSID PrincipalSelfSid;

    //
    // Object type list represented by an array of (level, guid) pair and the
    // number of elements in the array. This is a post-fix representation of the
    // object tree.
    // These fields should be set to NULL and 0 respectively except when per
    // property access is desired.
    //

    POBJECT_TYPE_LIST ObjectTypeList;
    DWORD ObjectTypeListLength;

    //
    // To support completely business rules based access. This will be passed as
    // input to the callback access check function. Access check algorithm does
    // not interpret these.
    //

    PVOID OptionalArguments;
    
} AUTHZ_ACCESS_REQUEST, *PAUTHZ_ACCESS_REQUEST;

//
// Structure to return the results of the access check call.
//

typedef struct _AUTHZ_ACCESS_REPLY
{
    //
    // The length of the array representing the object type list structure. If
    // no object type is used to represent the object, then the length must be
    // set to 1.
    //
    // Note: This parameter must be filled!
    //

    DWORD ResultListLength;

    //
    // Array of granted access masks. This memory is allocated by the RM. Access
    // check routines just fill in the values.
    //

    PACCESS_MASK GrantedAccessMask;
    
    //
    // Array of SACL evaluation results.  This memory is allocated by the RM, if SACL
    // evaluation results are desired. Access check routines just fill in the values.
    // Sacl evaluation will only be performed if auditing is requested.
    //
    
#define AUTHZ_GENERATE_SUCCESS_AUDIT 0x1
#define AUTHZ_GENERATE_FAILURE_AUDIT 0x2

    PDWORD SaclEvaluationResults OPTIONAL;
    
    //
    // Array of results for each element of the array. This memory is allocated
    // by the RM. Access check routines just fill in the values.
    //

    PDWORD Error;

} AUTHZ_ACCESS_REPLY, *PAUTHZ_ACCESS_REPLY;

//
// Typedefs for callback functions to be provided by the resource manager.
//

//
// Callback access check function takes in
//     AuthzClientContext - a client context
//     pAce - pointer to a callback ace
//     pArgs - Optional arguments that were passed to AuthzAccessCheck thru
//             AuthzAccessRequest->OptionalArguments are passed back here.
//     pbAceApplicable - The resource manager must supply whether the ace should
//         be used in the computation of access evaluation
//
// Returns
//     TRUE if the API succeeded.
//     FALSE on any intermediate errors (like failed memory allocation)
//         In case of failure, the caller must use SetLastError(ErrorValue).
//

typedef BOOL (CALLBACK *PFN_AUTHZ_DYNAMIC_ACCESS_CHECK) (
                  IN AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,
                  IN PACE_HEADER                 pAce,
                  IN PVOID                       pArgs                OPTIONAL,
                  IN OUT PBOOL                   pbAceApplicable
                  );

//
// Callback compute dynamic groups function takes in
//     AuthzClientContext - a client context
//     pArgs - Optional arguments that supplied to AuthzInitializeClientContext*
//         thru DynamicGroupArgs are passed back here..
//     pSidAttrArray - To allocate and return an array of (sids, attribute)
//         pairs to be added to the normal part of the client context.
//     pSidCount - Number of elements in pSidAttrArray
//     pRestrictedSidAttrArray - To allocate and return an array of (sids, attribute)
//         pairs to be added to the restricted part of the client context.
//     pRestrictedSidCount - Number of elements in pRestrictedSidAttrArray
//
// Note:
//    Memory returned thru both these array will be freed by the callback
//    free function defined by the resource manager.
//
// Returns
//     TRUE if the API succeeded.
//     FALSE on any intermediate errors (like failed memory allocation)
//         In case of failure, the caller must use SetLastError(ErrorValue).
//

typedef BOOL (CALLBACK *PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS) (
                  IN  AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,
                  IN  PVOID                       Args,
                  OUT PSID_AND_ATTRIBUTES         *pSidAttrArray,
                  OUT PDWORD                      pSidCount,
                  OUT PSID_AND_ATTRIBUTES         *pRestrictedSidAttrArray,
                  OUT PDWORD                      pRestrictedSidCount
                  );

//
// Callback free function takes in
//     pSidAttrArray - To be freed. This has been allocated by the compute
//     dynamic groups function.
//

typedef VOID (CALLBACK *PFN_AUTHZ_FREE_DYNAMIC_GROUPS) (
                  IN PSID_AND_ATTRIBUTES pSidAttrArray
                  );


//
//  BEGIN: *** (Subject) Security attributes ***
//
//  WARNING!!!:
//      These #defines and data structures exactly mirror
//      the TOKEN_XXX definitions in ntseapi.w. Keep them
//      in sync.
//


//
//  Security attribute data types ...
//

#define AUTHZ_SECURITY_ATTRIBUTE_TYPE_INVALID   0x00

#define AUTHZ_SECURITY_ATTRIBUTE_TYPE_INT64     0x01
#define AUTHZ_SECURITY_ATTRIBUTE_TYPE_UINT64    0x02

//
//  Case insensitive attribute value string by default.
//  Unless the flag AUTHZ_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE
//  is set indicating otherwise.
//

#define AUTHZ_SECURITY_ATTRIBUTE_TYPE_STRING    0x03

//
//  Fully-qualified binary name.
//

typedef struct _AUTHZ_SECURITY_ATTRIBUTE_FQBN_VALUE {
    ULONG64 Version;
    PWSTR   pName;
} AUTHZ_SECURITY_ATTRIBUTE_FQBN_VALUE, *PAUTHZ_SECURITY_ATTRIBUTE_FQBN_VALUE;

#define AUTHZ_SECURITY_ATTRIBUTE_TYPE_FQBN      0x04

//
//  This is the 'catch all' type. The attribute manipulation
//  code really doesn't care about the actual format of the
//  value. Value subtypes are defined only for this type.
//  Value subtypes permit easy addition of new subtypes
//  without having to change the attribute manipulation
//  (and WOW64 thunking!) code.
//

typedef struct _AUTHZ_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE {
    PVOID   pValue;         //  Pointer is BYTE aligned.
    ULONG   ValueLength;    //  In bytes
} AUTHZ_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE,
    *PAUTHZ_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;

#define AUTHZ_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING  0x10

//
//  Attribute operations that can be specified for a 'set' API:
//


typedef enum {

    //
    //  No-op
    //

    AUTHZ_SECURITY_ATTRIBUTE_OPERATION_NONE = 0,

    //
    //  Delete all existing security attributes and their values in
    //  the NT token and replace it with the specified attributes/values.
    //  If attributes to replace with are not specified, all existing
    //  attributes and values are deleted.
    //
    //  This operation can be specified at most once and must be the
    //  only operation specified.
    //

    AUTHZ_SECURITY_ATTRIBUTE_OPERATION_REPLACE_ALL,

    //
    //  Add a new attribute or a new value to an existing attribute.
    //  If the value specified for any attribute already exists for
    //  that attribute, the call fails.
    //

    AUTHZ_SECURITY_ATTRIBUTE_OPERATION_ADD,

    //
    //  Delete the specified value(s) of the specified attribute(s).
    //  If the last value is deleted from an attribute, the attribute
    //  itself is removed. If no matching attribute name was found, no
    //  modifications are done and the call fails. If no value is specified
    //  for the attribute, the attribute itself will be deleted.
    //

    AUTHZ_SECURITY_ATTRIBUTE_OPERATION_DELETE,

    //
    //  The value(s) of the specified security attribute(s) completely
    //  replace(s) the existing value(s) of the attribute(s). If the
    //  attribute does not already exist, it is added.  When no value
    //  is specified, the attribute is deleted, if it exists; otherwise,
    //  the operation is simply ignored and no failure is reported.
    //

    AUTHZ_SECURITY_ATTRIBUTE_OPERATION_REPLACE
} AUTHZ_SECURITY_ATTRIBUTE_OPERATION, *PAUTHZ_SECURITY_ATTRIBUTE_OPERATION;


//
//  An individual security attribute.
//

typedef struct _AUTHZ_SECURITY_ATTRIBUTE_V1 {

    //
    //  Name of the attribute.
    //  Case insensitive Windows Unicode string.
    //

    PWSTR   pName;

    //
    //  Data type of attribute.
    //

    USHORT  ValueType;

    //
    //  Pass 0 in a set operation and check for 0 in
    //  a get operation.
    //

    USHORT  Reserved;

//
//  Attribute must not be inherited across process spawns.
//

#define AUTHZ_SECURITY_ATTRIBUTE_NON_INHERITABLE      0x0001


//
//  Attribute value is compared in a case sensitive way. It is valid with string value
//  or composite type containing string value. For other types of value, this flag
//  will be ignored. Currently, it is valid with the two types:
//  AUTHZ_SECURITY_ATTRIBUTE_TYPE_STRING and AUTHZ_SECURITY_ATTRIBUTE_TYPE_FQBN.
//
#define AUTHZ_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE         0x0002

#define AUTHZ_SECURITY_ATTRIBUTE_VALID_FLAGS   (    \
                        AUTHZ_SECURITY_ATTRIBUTE_NON_INHERITABLE |  \
                        AUTHZ_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE     \
                        )

    ULONG   Flags;

    //
    //  Number of values.
    //

    ULONG   ValueCount;

    //
    //  The actual value itself.
    //

    union {
        PLONG64                                         pInt64;
        PULONG64                                        pUint64;
        PWSTR                                           *ppString;
        PAUTHZ_SECURITY_ATTRIBUTE_FQBN_VALUE            pFqbn;
        PAUTHZ_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE    pOctetString;
    } Values;
} AUTHZ_SECURITY_ATTRIBUTE_V1, *PAUTHZ_SECURITY_ATTRIBUTE_V1;


//
//  Set of security attributes.
//

typedef struct _AUTHZ_SECURITY_ATTRIBUTES_INFORMATION {

    //
    //  Versioning. The interpretation of the pointers in the
    //  Attribute field below is dependent on the version field.
    //
    //  Get operations return the version while the set operation
    //  MUST specify the version of the data structure passed in.
    //

#define AUTHZ_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1    1

#define AUTHZ_SECURITY_ATTRIBUTES_INFORMATION_VERSION       \
    AUTHZ_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1

    //
    //  MUST BE first.
    //

    USHORT  Version;

    //
    //  Pass 0 in set operations and ignore on get operations.
    //

    USHORT  Reserved;

    ULONG   AttributeCount;
    union {
        PAUTHZ_SECURITY_ATTRIBUTE_V1    pAttributeV1;
    } Attribute;
} AUTHZ_SECURITY_ATTRIBUTES_INFORMATION,
    *PAUTHZ_SECURITY_ATTRIBUTES_INFORMATION;




//
// Valid flags for AuthzAccessCheck
//

#define AUTHZ_ACCESS_CHECK_NO_DEEP_COPY_SD 0x00000001

AUTHZAPI
BOOL
WINAPI
AuthzAccessCheck(
    IN     DWORD                              Flags,
    IN     AUTHZ_CLIENT_CONTEXT_HANDLE        hAuthzClientContext,
    IN     PAUTHZ_ACCESS_REQUEST              pRequest,
    IN     AUTHZ_AUDIT_EVENT_HANDLE           hAuditEvent                      OPTIONAL,
    IN     PSECURITY_DESCRIPTOR               pSecurityDescriptor,
    IN     PSECURITY_DESCRIPTOR               *OptionalSecurityDescriptorArray OPTIONAL,
    IN     DWORD                              OptionalSecurityDescriptorCount,
    IN OUT PAUTHZ_ACCESS_REPLY                pReply,
    OUT    PAUTHZ_ACCESS_CHECK_RESULTS_HANDLE phAccessCheckResults             OPTIONAL
    );

AUTHZAPI
BOOL
WINAPI
AuthzCachedAccessCheck(
    IN     DWORD                             Flags,
    IN     AUTHZ_ACCESS_CHECK_RESULTS_HANDLE hAccessCheckResults,
    IN     PAUTHZ_ACCESS_REQUEST             pRequest,
    IN     AUTHZ_AUDIT_EVENT_HANDLE          hAuditEvent          OPTIONAL,
    IN OUT PAUTHZ_ACCESS_REPLY               pReply
    );

AUTHZAPI
BOOL
WINAPI
AuthzOpenObjectAudit(
    IN DWORD                       Flags,
    IN AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,
    IN PAUTHZ_ACCESS_REQUEST       pRequest,
    IN AUTHZ_AUDIT_EVENT_HANDLE    hAuditEvent,
    IN PSECURITY_DESCRIPTOR        pSecurityDescriptor,
    IN PSECURITY_DESCRIPTOR        *OptionalSecurityDescriptorArray OPTIONAL,
    IN DWORD                       OptionalSecurityDescriptorCount,
    IN PAUTHZ_ACCESS_REPLY         pReply
    );

AUTHZAPI
BOOL
WINAPI
AuthzFreeHandle(
    IN OUT AUTHZ_ACCESS_CHECK_RESULTS_HANDLE hAccessCheckResults
    );

//
// Flags for AuthzInitializeResourceManager
//

#define AUTHZ_RM_FLAG_NO_AUDIT 0x1
#define AUTHZ_RM_FLAG_INITIALIZE_UNDER_IMPERSONATION 0x2
#define AUTHZ_VALID_RM_INIT_FLAGS (AUTHZ_RM_FLAG_NO_AUDIT | AUTHZ_RM_FLAG_INITIALIZE_UNDER_IMPERSONATION)

AUTHZAPI
BOOL
WINAPI
AuthzInitializeResourceManager(
    IN DWORD                            Flags,
    IN PFN_AUTHZ_DYNAMIC_ACCESS_CHECK   pfnDynamicAccessCheck   OPTIONAL,
    IN PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS pfnComputeDynamicGroups OPTIONAL,
    IN PFN_AUTHZ_FREE_DYNAMIC_GROUPS    pfnFreeDynamicGroups    OPTIONAL,
    IN PCWSTR                           szResourceManagerName,
    OUT PAUTHZ_RESOURCE_MANAGER_HANDLE  phAuthzResourceManager
    );

AUTHZAPI
BOOL
WINAPI
AuthzFreeResourceManager(
    IN AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager
    );

AUTHZAPI
BOOL
WINAPI
AuthzInitializeContextFromToken(
    IN  DWORD                         Flags,
    IN  HANDLE                        TokenHandle,
    IN  AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,
    IN  PLARGE_INTEGER                pExpirationTime        OPTIONAL,
    IN  LUID                          Identifier,
    IN  PVOID                         DynamicGroupArgs       OPTIONAL,
    OUT PAUTHZ_CLIENT_CONTEXT_HANDLE  phAuthzClientContext
    );

AUTHZAPI
BOOL
WINAPI
AuthzInitializeContextFromSid(
    IN  DWORD                         Flags,
    IN  PSID                          UserSid,
    IN  AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,
    IN  PLARGE_INTEGER                pExpirationTime        OPTIONAL,
    IN  LUID                          Identifier,
    IN  PVOID                         DynamicGroupArgs       OPTIONAL,
    OUT PAUTHZ_CLIENT_CONTEXT_HANDLE  phAuthzClientContext
    );

AUTHZAPI
BOOL
WINAPI
AuthzInitializeContextFromAuthzContext(
    IN  DWORD                        Flags,
    IN  AUTHZ_CLIENT_CONTEXT_HANDLE  hAuthzClientContext,
    IN  PLARGE_INTEGER               pExpirationTime         OPTIONAL,
    IN  LUID                         Identifier,
    IN  PVOID                        DynamicGroupArgs,
    OUT PAUTHZ_CLIENT_CONTEXT_HANDLE phNewAuthzClientContext
    );

AUTHZAPI
BOOL
WINAPI
AuthzAddSidsToContext(
    IN  AUTHZ_CLIENT_CONTEXT_HANDLE  hAuthzClientContext,
    IN  PSID_AND_ATTRIBUTES          Sids                    OPTIONAL,
    IN  DWORD                        SidCount,
    IN  PSID_AND_ATTRIBUTES          RestrictedSids          OPTIONAL,
    IN  DWORD                        RestrictedSidCount,
    OUT PAUTHZ_CLIENT_CONTEXT_HANDLE phNewAuthzClientContext
    );

//
//  API to modify security attributes in AUTHZ client context.
//

AUTHZAPI
BOOL
WINAPI
AuthzModifySecurityAttributes(
    __in    AUTHZ_CLIENT_CONTEXT_HANDLE             hAuthzClientContext,
    __in    PAUTHZ_SECURITY_ATTRIBUTE_OPERATION     pOperations,
    __in    PAUTHZ_SECURITY_ATTRIBUTES_INFORMATION  pAttributes
    );

//
// Enumeration type to be used to specify the type of information to be
// retrieved from an existing AuthzClientContext.
//

typedef enum _AUTHZ_CONTEXT_INFORMATION_CLASS
{
    AuthzContextInfoUserSid = 1,
    AuthzContextInfoGroupsSids,
    AuthzContextInfoRestrictedSids,
    AuthzContextInfoPrivileges,
    AuthzContextInfoExpirationTime,
    AuthzContextInfoServerContext,
    AuthzContextInfoIdentifier,
    AuthzContextInfoSource,
    AuthzContextInfoAll,
    AuthzContextInfoAuthenticationId,
    AuthzContextInfoSecurityAttributes
} AUTHZ_CONTEXT_INFORMATION_CLASS;

AUTHZAPI
BOOL
WINAPI
AuthzGetInformationFromContext(
    IN  AUTHZ_CLIENT_CONTEXT_HANDLE     hAuthzClientContext,
    IN  AUTHZ_CONTEXT_INFORMATION_CLASS InfoClass,
    IN  DWORD                           BufferSize,
    OUT PDWORD                          pSizeRequired,
    OUT PVOID                           Buffer
);

AUTHZAPI
BOOL
WINAPI
AuthzFreeContext(
    IN AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext
    );


//
// Valid flags that may be used in AuthzInitializeObjectAccessAuditEvent().
//

#define AUTHZ_NO_SUCCESS_AUDIT                   0x00000001
#define AUTHZ_NO_FAILURE_AUDIT                   0x00000002
#define AUTHZ_NO_ALLOC_STRINGS                   0x00000004

#define AUTHZ_VALID_OBJECT_ACCESS_AUDIT_FLAGS    (AUTHZ_NO_SUCCESS_AUDIT | \
                                                  AUTHZ_NO_FAILURE_AUDIT | \
                                                  AUTHZ_NO_ALLOC_STRINGS)
                             
AUTHZAPI
BOOL
WINAPI
AuthzInitializeObjectAccessAuditEvent(
    IN    DWORD                         Flags,
    IN    AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,
    __in  PWSTR                         szOperationType,
    __in  PWSTR                         szObjectType,
    __in  PWSTR                         szObjectName,
    __in  PWSTR                         szAdditionalInfo,
    OUT   PAUTHZ_AUDIT_EVENT_HANDLE     phAuditEvent,
    IN    DWORD                         dwAdditionalParameterCount,
    ...
    );
    
AUTHZAPI
BOOL
WINAPI
AuthzInitializeObjectAccessAuditEvent2(
    IN    DWORD                         Flags,
    IN    AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,
    __in  PWSTR                         szOperationType,
    __in  PWSTR                         szObjectType,
    __in  PWSTR                         szObjectName,
    __in  PWSTR                         szAdditionalInfo,
    __in  PWSTR                         szAdditionalInfo2,
    OUT   PAUTHZ_AUDIT_EVENT_HANDLE     phAuditEvent,
    IN    DWORD                         dwAdditionalParameterCount,
    ...
    );

//
// Enumeration type to be used to specify the type of information to be
// retrieved from an existing AUTHZ_AUDIT_EVENT_HANDLE.
//

typedef enum _AUTHZ_AUDIT_EVENT_INFORMATION_CLASS
{
    AuthzAuditEventInfoFlags = 1,
    AuthzAuditEventInfoOperationType,
    AuthzAuditEventInfoObjectType,
    AuthzAuditEventInfoObjectName,
    AuthzAuditEventInfoAdditionalInfo,
} AUTHZ_AUDIT_EVENT_INFORMATION_CLASS;

AUTHZAPI
BOOL
WINAPI
AuthzFreeAuditEvent(
    IN AUTHZ_AUDIT_EVENT_HANDLE hAuditEvent
    );

//
// Support for SACL evaluation
//

AUTHZAPI
BOOL 
WINAPI
AuthzEvaluateSacl(
    IN  AUTHZ_CLIENT_CONTEXT_HANDLE AuthzClientContext,
    IN  PAUTHZ_ACCESS_REQUEST       pRequest,
    IN  PACL                        Sacl,
    IN  ACCESS_MASK                 GrantedAccess,
    IN  BOOL                        AccessGranted,
    OUT PBOOL                       pbGenerateAudit
    );

//
// Support for generic auditing.
//

typedef struct _AUTHZ_REGISTRATION_OBJECT_TYPE_NAME_OFFSET
{
    PWSTR szObjectTypeName;
    DWORD dwOffset;
} AUTHZ_REGISTRATION_OBJECT_TYPE_NAME_OFFSET, *PAUTHZ_REGISTRATION_OBJECT_TYPE_NAME_OFFSET;

#if _MSC_VER >= 1200
#pragma warning(push)
#pragma warning(disable:4201) //  nonstandard extension used : nameless struct/union
#endif

typedef struct _AUTHZ_SOURCE_SCHEMA_REGISTRATION
{
    DWORD dwFlags;
    PWSTR szEventSourceName;
    PWSTR szEventMessageFile;
    PWSTR szEventSourceXmlSchemaFile;
    PWSTR szEventAccessStringsFile;
    PWSTR szExecutableImagePath;

    //
    // The meaning of the data is defined by dwFlags. Make sure
    // new types are pointers.
    //

    union
    {
        PVOID pReserved;

        //
        // Must be supplied when dwFlags contains AUTHZ_MIGRATED_LEGACY_PUBLISHER
        //

        GUID* pProviderGuid;
    };

    DWORD dwObjectTypeNameCount;
    AUTHZ_REGISTRATION_OBJECT_TYPE_NAME_OFFSET ObjectTypeNames[ANYSIZE_ARRAY];
} AUTHZ_SOURCE_SCHEMA_REGISTRATION, *PAUTHZ_SOURCE_SCHEMA_REGISTRATION;

#if _MSC_VER >= 1200
#pragma warning(pop)
#endif


#define AUTHZ_FLAG_ALLOW_MULTIPLE_SOURCE_INSTANCES 0x1

AUTHZAPI
BOOL 
WINAPI
AuthzInstallSecurityEventSource(
    IN DWORD                             dwFlags,
    IN PAUTHZ_SOURCE_SCHEMA_REGISTRATION pRegistration
    );

AUTHZAPI
BOOL
WINAPI
AuthzUninstallSecurityEventSource(
    IN DWORD  dwFlags,
    IN PCWSTR szEventSourceName
    );


AUTHZAPI
BOOL
WINAPI
AuthzEnumerateSecurityEventSources(
    IN     DWORD                             dwFlags,
    OUT    PAUTHZ_SOURCE_SCHEMA_REGISTRATION Buffer,
    OUT    PDWORD                            pdwCount,
    IN OUT PDWORD                            pdwLength
    );
    
AUTHZAPI
BOOL
WINAPI
AuthzRegisterSecurityEventSource(
    IN  DWORD                                 dwFlags,
    IN  PCWSTR                                szEventSourceName,
    OUT PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider
    );
    
AUTHZAPI
BOOL
WINAPI
AuthzUnregisterSecurityEventSource(
    IN     DWORD                                 dwFlags,
    IN OUT PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider
    );

AUTHZAPI
BOOL
WINAPI
AuthzReportSecurityEvent(
    IN     DWORD                                dwFlags,
    IN OUT AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,
    IN     DWORD                                dwAuditId,
    IN     PSID                                 pUserSid        OPTIONAL,
    IN     DWORD                                dwCount,
    ...    
    );

AUTHZAPI
BOOL
WINAPI
AuthzReportSecurityEventFromParams(
    IN     DWORD                                dwFlags,
    IN OUT AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,
    IN     DWORD                                dwAuditId,
    IN     PSID                                 pUserSid       OPTIONAL,
    IN     PAUDIT_PARAMS                        pParams
    );

#ifdef __cplusplus
}
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\Authif.h ===
/*/////////////////////////////////////////////////////////////////////////////
//
// Copyright (c) Microsoft Corporation. All rights reserved.
//
// FILE
//
//    authif.h
//
// SYNOPSIS
//
//    Declares the interface for extensions to the Internet Authentication
//    Service.
//
/////////////////////////////////////////////////////////////////////////////*/

#ifndef _AUTHIF_H_
#define _AUTHIF_H_
#if _MSC_VER >= 1000
#pragma once
#endif

/*
 *  Enumerates the attribute types that are passed to the extension DLL.  The
 *  RADIUS standard attributes are included for convenience and should not be
 *  considered exhaustive.
 */
typedef enum _RADIUS_ATTRIBUTE_TYPE {

    /* Used to terminate attribute arrays. */
    ratMinimum = 0,

    /* RADIUS standard attributes. */
    ratUserName = 1,
    ratUserPassword = 2,
    ratCHAPPassword = 3,
    ratNASIPAddress = 4,
    ratNASPort = 5,
    ratServiceType = 6,
    ratFramedProtocol = 7,
    ratFramedIPAddress = 8,
    ratFramedIPNetmask = 9,
    ratFramedRouting = 10,
    ratFilterId = 11,
    ratFramedMTU = 12,
    ratFramedCompression = 13,
    ratLoginIPHost = 14,
    ratLoginService = 15,
    ratLoginPort = 16,
    ratReplyMessage = 18,
    ratCallbackNumber = 19,
    ratCallbackId = 20,
    ratFramedRoute = 22,
    ratFramedIPXNetwork = 23,
    ratState = 24,
    ratClass = 25,
    ratVendorSpecific = 26,
    ratSessionTimeout = 27,
    ratIdleTimeout = 28,
    ratTerminationAction = 29,
    ratCalledStationId = 30,
    ratCallingStationId = 31,
    ratNASIdentifier = 32,
    ratProxyState = 33,
    ratLoginLATService = 34,
    ratLoginLATNode = 35,
    ratLoginLATGroup = 36,
    ratFramedAppleTalkLink = 37,
    ratFramedAppleTalkNetwork = 38,
    ratFramedAppleTalkZone = 39,
    ratAcctStatusType = 40,
    ratAcctDelayTime = 41,
    ratAcctInputOctets = 42,
    ratAcctOutputOctets = 43,
    ratAcctSessionId = 44,
    ratAcctAuthentic = 45,
    ratAcctSessionTime = 46,
    ratAcctInputPackets = 47,
    ratAcctOutputPackets = 48,
    ratAcctTerminationCause = 49,
    ratCHAPChallenge = 60,
    ratNASPortType = 61,
    ratPortLimit = 62,
    ratTunnelType = 64,
    ratMediumType = 65,
    ratTunnelPassword = 69,
    ratTunnelPrivateGroupID = 81,
    ratNASIPv6Address = 95,
    ratFramedInterfaceId,
    ratFramedIPv6Prefix,
    ratLoginIPv6Host,
    ratFramedIPv6Route,
    ratFramedIPv6Pool,
    
    /* Extended attribute types used to pass additional information. */
    ratCode = 262,             /* Request type code. */
    ratIdentifier = 263,       /* Request identifier. */
    ratAuthenticator = 264,    /* Request authenticator. */
    ratSrcIPAddress = 265,     /* Source IP address. */
    ratSrcPort = 266,          /* Source IP port. */
    ratProvider = 267,         /* Authentication provider. */
    ratStrippedUserName = 268, /* User-Name with realm stripped. */
    ratFQUserName = 269,       /* Fully-Qualified-User-Name. */
    ratPolicyName = 270,       /* Remote Access Policy name. */
    ratUniqueId = 271,         /* Unique ID identifying the request. */
    ratExtensionState = 272,   /* Used to pass state between extensions. */
    ratEAPTLV = 273,           /* EAP-TLV packet */
    ratRejectReasonCode = 274, /* The reason code for radius reject */
    ratCRPPolicyName = 275,    /* CRP Policy Name */
    ratProviderName = 276,     /* Remote RADIUS server group name */
    ratClearTextPassword = 277,   /* The user password in clear text */
    ratSrcIPv6Address = 278,   /* Source IPv6 address */
} RADIUS_ATTRIBUTE_TYPE;

/*
 *  Enumerates the different RADIUS packet codes. Used for the ratCode extended
 *  attribute.
 */
typedef enum _RADIUS_CODE {
    rcUnknown = 0,
    rcAccessRequest = 1,
    rcAccessAccept = 2,
    rcAccessReject = 3,
    rcAccountingRequest = 4,
    rcAccountingResponse = 5,
    rcAccessChallenge = 11,
    rcDiscard = 256
} RADIUS_CODE;

/*
 *  Enumerates the different authentication providers used for processing a
 *  request. Used for the ratProvider extended attribute.
 */
typedef enum _RADIUS_AUTHENTICATION_PROVIDER {
    rapUnknown,
    rapUsersFile,
    rapProxy,
    rapWindowsNT,
    rapMCIS,
    rapODBC,
    rapNone
} RADIUS_AUTHENTICATION_PROVIDER;

/*
 *  Enumerates a subset of reason codes for radius reject.
 *  Used for the ratReasonCode extended attribute.
 */
typedef enum _RADIUS_REJECT_REASON_CODE {
    rrrcUndefined = 0,
    rrrcAccountUnknown = 1,
    rrrcAccountDisabled = 2,
    rrrcAccountExpired = 3,
    rrrcAuthenticationFailure = 4,
} RADIUS_REJECT_REASON_CODE;

/*
 *  Enumerates the different RADIUS data types. A type of 'rdtUnknown' means
 *  the attribute was not recognized by the dictionary.
 */
typedef enum _RADIUS_DATA_TYPE {
   rdtUnknown,
   rdtString,
   rdtAddress,
   rdtInteger,
   rdtTime,
   rdtIpv6Address
} RADIUS_DATA_TYPE;

/*
 *  Struct representing a RADIUS or extended attribute.
 */
typedef struct _RADIUS_ATTRIBUTE {
    DWORD dwAttrType;            /* Attribute type */
    RADIUS_DATA_TYPE fDataType;  /* RADIUS_DATA_TYPE of the value */
    DWORD cbDataLength;          /* Length of the value (in bytes) */
    union {
        DWORD dwValue;           /* For rdtAddress, rdtInteger, and rdtTime */
        CONST BYTE* lpValue;     /* For rdtUnknown, rdtIpv6Address and rdtString */
    };
} RADIUS_ATTRIBUTE, *PRADIUS_ATTRIBUTE;

/*
 *  Struct representing the layout of a RADIUS Vendor-Specific attribute. This
 *  is useful when interpreting the RADIUS_ATTRIBUTE lpValue field when
 *  dwAttrType is ratVendorSpecific.
 */
typedef struct _RADIUS_VSA_FORMAT {
   BYTE VendorId[4];
   BYTE VendorType;
   BYTE VendorLength;
   BYTE AttributeSpecific[1];
} RADIUS_VSA_FORMAT;

/*
 *  Enumerates the different actions an extension DLL can generate in
 *  response to an Access-Request.
 */
typedef enum _RADIUS_ACTION {
   raContinue,
   raReject,
   raAccept
} RADIUS_ACTION, *PRADIUS_ACTION;


/*
 * Routines exported by a RADIUS extension DLL.
 */

/*
 * RadiusExtensionInit is optional. If it exists, it will be invoked prior to
 * the service coming on-line. A return value other than NO_ERROR prevents the
 * service from initializing.
 */
#define RADIUS_EXTENSION_INIT "RadiusExtensionInit"
typedef DWORD (WINAPI *PRADIUS_EXTENSION_INIT)( VOID );

/*
 * RadiusExtensionTerm is optional. If it exists, it will be invoked prior to
 * unloading the DLL to give the extension a chance to clean-up.
 */
#define RADIUS_EXTENSION_TERM "RadiusExtensionTerm"
typedef VOID (WINAPI *PRADIUS_EXTENSION_TERM)( VOID );

/*
 * RadiusExtensionProcess is mandatory for NT4. For Windows 2000, an
 * extension may export RadiusExtensionProcessEx (q.v.) instead.
 *
 * Parameters:
 *   pAttrs      Array of attributes from the request. It is terminated by an
 *               attribute with dwAttrType set to ratMinimum. These attributes
 *               should be treated as read-only and must not be referenced
 *               after the function returns.
 *   pfAction    For Access-Requests, this parameter will be non-NULL with
 *               *pfAction == raContinue. The extension DLL can set *pfAction
 *               to abort further processing and force an Access-Accept or
 *               Access-Reject.  For all other request types, this parameter
 *               will be NULL.
 *
 * Return Value:
 *     A return value other than NO_ERROR causes the request to be discarded.
 */
#define RADIUS_EXTENSION_PROCESS "RadiusExtensionProcess"
typedef DWORD (WINAPI *PRADIUS_EXTENSION_PROCESS)(
    IN const RADIUS_ATTRIBUTE *pAttrs,
    OUT OPTIONAL PRADIUS_ACTION pfAction
    );

/*
 * RadiusExtensionProcessEx is only supported on Windows 2000. If it exits,
 * RadiusExtensionProcess is ignored.
 *
 * Parameters:
 *   pInAttrs    Array of attributes from the request. It is terminated by an
 *               attribute with dwAttrType set to ratMinimum. These attributes
 *               should be treated as read-only and must not be referenced
 *               after the function returns.
 *   pOutAttrs   Array of attributes to add to the response. It is terminated
 *               by an attribute with dwAttrType set to ratMinimum.
 *               *pOutAttrs may be set to NULL if no attributes are returned.
 *   pfAction    For Access-Requests, this parameter will be non-NULL with
 *               *pfAction == raContinue. The extension DLL can set *pfAction
 *               to abort further processing and force an Access-Accept or
 *               Access-Reject.  For all other request types, this parameter
 *               will be NULL.
 *
 * Return Value:
 *     A return value other than NO_ERROR causes the request to be discarded.
 */
#define RADIUS_EXTENSION_PROCESS_EX "RadiusExtensionProcessEx"
typedef DWORD (WINAPI *PRADIUS_EXTENSION_PROCESS_EX)(
    IN const RADIUS_ATTRIBUTE *pInAttrs,
    OUT PRADIUS_ATTRIBUTE *pOutAttrs,
    OUT OPTIONAL PRADIUS_ACTION pfAction
    );

/*
 * RadiusExtensionFreeAttributes must be defined if RadiusExtensionProcessEx
 * is defined. It is used to free the attributes returned by
 * RadiusExtensionProcessEx
 *
 * Parameters:
 *   pAttrs     Array of attributes to be freed.
 */
#define RADIUS_EXTENSION_FREE_ATTRIBUTES "RadiusExtensionFreeAttributes"
typedef VOID (WINAPI *PRADIUS_EXTENSION_FREE_ATTRIBUTES)(
    IN PRADIUS_ATTRIBUTE pAttrs
    );

/*
 *  Defines used for installation of an extension DLL.
 *  The following registry values are used for loading extensions:
 *
 *      HKLM\System\CurrentControlSet\Services\AuthSrv\Parameters
 *          ExtensionDLLs      (REG_MULTI_SZ)  <list of DLL paths>
 *          AuthorizationDLLs  (REG_MULTI_SZ)  <list of DLL paths>
 *
 *  ExtensionDLLs are invoked before any of the built-in authentication
 *  providers. They receive all the attributes from the request plus all
 *  the extended attribute types.
 *
 *  AuthorizationDLLs are invoked after the built-in authentication and
 *  authorization providers. They receive all the attributes from the
 *  response plus all the extended attributes types. AuthorizationDLLs may
 *  not return an action of raAccept.
 */

#define AUTHSRV_PARAMETERS_KEY_W \
    L"System\\CurrentControlSet\\Services\\AuthSrv\\Parameters"

#define AUTHSRV_EXTENSIONS_VALUE_W \
    L"ExtensionDLLs"

#define AUTHSRV_AUTHORIZATION_VALUE_W \
    L"AuthorizationDLLs"


#if _WIN32_WINNT >= 0x0501

/* Version of this spec. */
#define RADIUS_EXTENSION_VERSION (1)

/*
 *  Enumerates the different points during request processing where an
 *  extension can be invoked.
 */
typedef enum _RADIUS_EXTENSION_POINT {
   repAuthentication,     /* ExtensionDLLs */
   repAuthorization       /* AuthorizationDLLs */
} RADIUS_EXTENSION_POINT;

/*
 * Struct representing an array of RADIUS_ATTRIBUTE structs. All the functions
 * for adding attributes to a request copy the supplied memory, so there is no
 * need for the extension to export RadiusExtensionFreeAttributes.  The
 * extension must not modify this struct. All changes must be made by using the
 * supplied callback functions.
 */
typedef struct _RADIUS_ATTRIBUTE_ARRAY {

   /* Size of this structure in bytes. */
   DWORD cbSize;

   /* Adds a new attribute to the end of the array. */
   DWORD (WINAPI *Add)(
       IN struct _RADIUS_ATTRIBUTE_ARRAY *This,
       IN const RADIUS_ATTRIBUTE *pAttr
       );

   /*
    * Returns a const pointer to the specified attribute within the array or
    * NULL if the index is out of range.
    */
   const RADIUS_ATTRIBUTE * (WINAPI *AttributeAt)(
       IN const struct _RADIUS_ATTRIBUTE_ARRAY *This,
       IN DWORD dwIndex
       );

   /*
    * Returns the size of the array. Since indexes are zero-based, the size is
    * 1 greater than the largest index.
    */
   DWORD (WINAPI *GetSize)(
                     IN const struct _RADIUS_ATTRIBUTE_ARRAY *This
                     );

   /*
    * Inserts a new attribute at a specified index in the array. In the
    * process, it shifts up (by incrementing the index) the existing attribute
    * at this index, and it shifts up all the attributes above it. Returns
    * ERROR_INVALID_PARAMETER if the index is out of range.
    */
   DWORD (WINAPI *InsertAt)(
       IN struct _RADIUS_ATTRIBUTE_ARRAY *This,
       IN DWORD dwIndex,
       IN const RADIUS_ATTRIBUTE *pAttr
       );

   /*
    * Removes the attribute at the specified index in the array. In the
    * process, it shifts down all the attributes above the removed attribute.
    * Returns ERROR_ACCESS_DENIED if the specified attribute is read-only.
    * Returns ERROR_INVALID_PARAMETER if the index is out of range.
    */
   DWORD (WINAPI *RemoveAt)(
       IN struct _RADIUS_ATTRIBUTE_ARRAY *This,
       IN DWORD dwIndex
       );

   /*
    * Sets the array element at the specified index, replacing the existing
    * attribute.  Returns ERROR_INVALID_PARAMETER if the index is out of range.
    */
   DWORD (WINAPI *SetAt)(
       IN struct _RADIUS_ATTRIBUTE_ARRAY *This,
       IN DWORD dwIndex,
       IN const RADIUS_ATTRIBUTE *pAttr
       );

} RADIUS_ATTRIBUTE_ARRAY, *PRADIUS_ATTRIBUTE_ARRAY;

/*
 * Struct used to exchange information with the extension during request
 * processing. The extension must not modify this struct. All changes must be
 * made by using the supplied callback functions.
 */
typedef struct _RADIUS_EXTENSION_CONTROL_BLOCK  {

   /* Size of this structure. */
   DWORD cbSize;

   /* Version info of this specification. */
   DWORD dwVersion;

   /* Point during request processing where the extension is being invoked. */
   RADIUS_EXTENSION_POINT repPoint;

   /* Type of RADIUS request being processed. */
   RADIUS_CODE rcRequestType;

   /*
    * Final disposition of the request. This field must not be modified
    * directly; use the SetResponseType callback function instead. At the
    * repAuthentication point, this may be set to rcUnknown to indicate that no
    * decision has been made yet.
    */
   RADIUS_CODE rcResponseType;

   /*
    * Returns the attributes received in the RADIUS request and any internal
    * attributes describing the request state. The extenstion can modify the
    * request attributes. For example, when IAS is acting as a RADIUS proxy, an
    * extension could filter which attributes are forwarded to a remote RADIUS
    * server.
    */
   PRADIUS_ATTRIBUTE_ARRAY (WINAPI *GetRequest)(
       IN struct _RADIUS_EXTENSION_CONTROL_BLOCK *This
       );

   /*
    * Returns the attributes that will be sent in the response if the final
    * outcome of request processing matches the specified response type.
    * Returns NULL if rcResponseType is invalid. Note that an extension may
    * retrieve and modify the attributes for any valid response type regardless
    * of the request's current disposition. For example, an extension can set
    * the response type to rcAccessAccept, but still add attributes to the
    * Access-Reject in case the response type is overridden during further
    * processing.
    */
   PRADIUS_ATTRIBUTE_ARRAY (WINAPI *GetResponse)(
       IN struct _RADIUS_EXTENSION_CONTROL_BLOCK *This,
       IN RADIUS_CODE rcResponseType
       );

   /*
    * Sets the final disposition of the request.
    * Returns ERROR_INVALID_PARAMETER if the specified response type is invalid
    * for the request type.
    */
   DWORD (WINAPI *SetResponseType)(
       IN struct _RADIUS_EXTENSION_CONTROL_BLOCK *This,
       IN RADIUS_CODE rcResponseType
       );

} RADIUS_EXTENSION_CONTROL_BLOCK, *PRADIUS_EXTENSION_CONTROL_BLOCK;

/*
 * If RadiusExtensionProcess2 exists, RadiusExtensionProcess and
 * RadiusExtensionProcessEx are ignored.
 *
 * Parameters:
 *   pECB      Info exchanged with the extension.
 *
 * Return Value:
 *     A return value other than NO_ERROR causes the request to be discarded.
 */
#define RADIUS_EXTENSION_PROCESS2 "RadiusExtensionProcess2"
typedef DWORD (WINAPI *PRADIUS_EXTENSION_PROCESS_2)(
   IN OUT PRADIUS_EXTENSION_CONTROL_BLOCK pECB
   );

#endif // _WIN32_WINNT
#endif  /* _AUTHIF_H_ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\axextendenums.h ===
//------------------------------------------------------------------------------
// File: AXExtendenums.h
//
// Desc: axextend.idl enums that must be exposed in managed code
//
// Copyright (c) 1992 - 2004, Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------

#ifndef AXEXTEND_ENUM_H
#define AXEXTEND_ENUM_H

// !!!! do not #pragma once, we use this file twice(once for native and once for mgd) in managed interop
#include <exposeenums2managed.h>

//
//---------------------------------------------------------------------
// AnalogVideoStandard enum
//---------------------------------------------------------------------

FLAGS TAG(AnalogVideoStandard)
{
    AnalogVideo_None     = 0x00000000,  // This is a digital sensor
    AnalogVideo_NTSC_M   = 0x00000001,  //        75 IRE Setup
    AnalogVideo_NTSC_M_J = 0x00000002,  // Japan,  0 IRE Setup
    AnalogVideo_NTSC_433 = 0x00000004,

    AnalogVideo_PAL_B    = 0x00000010,
    AnalogVideo_PAL_D    = 0x00000020,
    AnalogVideo_PAL_G    = 0x00000040,
    AnalogVideo_PAL_H    = 0x00000080,
    AnalogVideo_PAL_I    = 0x00000100,
    AnalogVideo_PAL_M    = 0x00000200,
    AnalogVideo_PAL_N    = 0x00000400,

    AnalogVideo_PAL_60   = 0x00000800,

    AnalogVideo_SECAM_B  = 0x00001000,
    AnalogVideo_SECAM_D  = 0x00002000,
    AnalogVideo_SECAM_G  = 0x00004000,
    AnalogVideo_SECAM_H  = 0x00008000,
    AnalogVideo_SECAM_K  = 0x00010000,
    AnalogVideo_SECAM_K1 = 0x00020000,
    AnalogVideo_SECAM_L  = 0x00040000,
    AnalogVideo_SECAM_L1 = 0x00080000,

    AnalogVideo_PAL_N_COMBO             // Argentina
                            = 0x00100000,

    AnalogVideoMask_MCE_NTSC = AnalogVideo_NTSC_M | // add pal n, n combo, m and 60 since they can be done on a ntsc tuner
                        AnalogVideo_NTSC_M_J |
                        AnalogVideo_NTSC_433 |
                        AnalogVideo_PAL_M |
                        AnalogVideo_PAL_N |
                        AnalogVideo_PAL_60 |
                        AnalogVideo_PAL_N_COMBO,

    AnalogVideoMask_MCE_PAL = AnalogVideo_PAL_B | // pull out pal n, n combo, m and 60
                        AnalogVideo_PAL_D |
                        AnalogVideo_PAL_G |
                        AnalogVideo_PAL_H |
                        AnalogVideo_PAL_I,

    AnalogVideoMask_MCE_SECAM = AnalogVideo_SECAM_B | // secam looks ok
                        AnalogVideo_SECAM_D  |
                        AnalogVideo_SECAM_G  |
                        AnalogVideo_SECAM_H  |
                        AnalogVideo_SECAM_K  |
                        AnalogVideo_SECAM_K1 |
                        AnalogVideo_SECAM_L  |
                        AnalogVideo_SECAM_L1,
} AnalogVideoStandard;

//---------------------------------------------------------------------
// TunerInputType enum
//---------------------------------------------------------------------

ENUM16 TAG(TunerInputType)
{
    TunerInputCable,
    TunerInputAntenna
} TunerInputType;

#include <unexposeenums2managed.h>

#endif
// end of file axextendenum.h
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\azroles.h ===
/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0555 */
/* Compiler settings for azroles.idl:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 7.00.0555 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __azroles_h__
#define __azroles_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IAzAuthorizationStore_FWD_DEFINED__
#define __IAzAuthorizationStore_FWD_DEFINED__
typedef interface IAzAuthorizationStore IAzAuthorizationStore;
#endif 	/* __IAzAuthorizationStore_FWD_DEFINED__ */


#ifndef __IAzAuthorizationStore2_FWD_DEFINED__
#define __IAzAuthorizationStore2_FWD_DEFINED__
typedef interface IAzAuthorizationStore2 IAzAuthorizationStore2;
#endif 	/* __IAzAuthorizationStore2_FWD_DEFINED__ */


#ifndef __IAzAuthorizationStore3_FWD_DEFINED__
#define __IAzAuthorizationStore3_FWD_DEFINED__
typedef interface IAzAuthorizationStore3 IAzAuthorizationStore3;
#endif 	/* __IAzAuthorizationStore3_FWD_DEFINED__ */


#ifndef __IAzApplication_FWD_DEFINED__
#define __IAzApplication_FWD_DEFINED__
typedef interface IAzApplication IAzApplication;
#endif 	/* __IAzApplication_FWD_DEFINED__ */


#ifndef __IAzApplication2_FWD_DEFINED__
#define __IAzApplication2_FWD_DEFINED__
typedef interface IAzApplication2 IAzApplication2;
#endif 	/* __IAzApplication2_FWD_DEFINED__ */


#ifndef __IAzApplications_FWD_DEFINED__
#define __IAzApplications_FWD_DEFINED__
typedef interface IAzApplications IAzApplications;
#endif 	/* __IAzApplications_FWD_DEFINED__ */


#ifndef __IAzOperation_FWD_DEFINED__
#define __IAzOperation_FWD_DEFINED__
typedef interface IAzOperation IAzOperation;
#endif 	/* __IAzOperation_FWD_DEFINED__ */


#ifndef __IAzOperations_FWD_DEFINED__
#define __IAzOperations_FWD_DEFINED__
typedef interface IAzOperations IAzOperations;
#endif 	/* __IAzOperations_FWD_DEFINED__ */


#ifndef __IAzTask_FWD_DEFINED__
#define __IAzTask_FWD_DEFINED__
typedef interface IAzTask IAzTask;
#endif 	/* __IAzTask_FWD_DEFINED__ */


#ifndef __IAzTasks_FWD_DEFINED__
#define __IAzTasks_FWD_DEFINED__
typedef interface IAzTasks IAzTasks;
#endif 	/* __IAzTasks_FWD_DEFINED__ */


#ifndef __IAzScope_FWD_DEFINED__
#define __IAzScope_FWD_DEFINED__
typedef interface IAzScope IAzScope;
#endif 	/* __IAzScope_FWD_DEFINED__ */


#ifndef __IAzScopes_FWD_DEFINED__
#define __IAzScopes_FWD_DEFINED__
typedef interface IAzScopes IAzScopes;
#endif 	/* __IAzScopes_FWD_DEFINED__ */


#ifndef __IAzApplicationGroup_FWD_DEFINED__
#define __IAzApplicationGroup_FWD_DEFINED__
typedef interface IAzApplicationGroup IAzApplicationGroup;
#endif 	/* __IAzApplicationGroup_FWD_DEFINED__ */


#ifndef __IAzApplicationGroups_FWD_DEFINED__
#define __IAzApplicationGroups_FWD_DEFINED__
typedef interface IAzApplicationGroups IAzApplicationGroups;
#endif 	/* __IAzApplicationGroups_FWD_DEFINED__ */


#ifndef __IAzRole_FWD_DEFINED__
#define __IAzRole_FWD_DEFINED__
typedef interface IAzRole IAzRole;
#endif 	/* __IAzRole_FWD_DEFINED__ */


#ifndef __IAzRoles_FWD_DEFINED__
#define __IAzRoles_FWD_DEFINED__
typedef interface IAzRoles IAzRoles;
#endif 	/* __IAzRoles_FWD_DEFINED__ */


#ifndef __IAzClientContext_FWD_DEFINED__
#define __IAzClientContext_FWD_DEFINED__
typedef interface IAzClientContext IAzClientContext;
#endif 	/* __IAzClientContext_FWD_DEFINED__ */


#ifndef __IAzClientContext2_FWD_DEFINED__
#define __IAzClientContext2_FWD_DEFINED__
typedef interface IAzClientContext2 IAzClientContext2;
#endif 	/* __IAzClientContext2_FWD_DEFINED__ */


#ifndef __IAzBizRuleContext_FWD_DEFINED__
#define __IAzBizRuleContext_FWD_DEFINED__
typedef interface IAzBizRuleContext IAzBizRuleContext;
#endif 	/* __IAzBizRuleContext_FWD_DEFINED__ */


#ifndef __IAzBizRuleParameters_FWD_DEFINED__
#define __IAzBizRuleParameters_FWD_DEFINED__
typedef interface IAzBizRuleParameters IAzBizRuleParameters;
#endif 	/* __IAzBizRuleParameters_FWD_DEFINED__ */


#ifndef __IAzBizRuleInterfaces_FWD_DEFINED__
#define __IAzBizRuleInterfaces_FWD_DEFINED__
typedef interface IAzBizRuleInterfaces IAzBizRuleInterfaces;
#endif 	/* __IAzBizRuleInterfaces_FWD_DEFINED__ */


#ifndef __IAzClientContext3_FWD_DEFINED__
#define __IAzClientContext3_FWD_DEFINED__
typedef interface IAzClientContext3 IAzClientContext3;
#endif 	/* __IAzClientContext3_FWD_DEFINED__ */


#ifndef __IAzScope2_FWD_DEFINED__
#define __IAzScope2_FWD_DEFINED__
typedef interface IAzScope2 IAzScope2;
#endif 	/* __IAzScope2_FWD_DEFINED__ */


#ifndef __IAzApplication3_FWD_DEFINED__
#define __IAzApplication3_FWD_DEFINED__
typedef interface IAzApplication3 IAzApplication3;
#endif 	/* __IAzApplication3_FWD_DEFINED__ */


#ifndef __IAzOperation2_FWD_DEFINED__
#define __IAzOperation2_FWD_DEFINED__
typedef interface IAzOperation2 IAzOperation2;
#endif 	/* __IAzOperation2_FWD_DEFINED__ */


#ifndef __IAzRoleDefinitions_FWD_DEFINED__
#define __IAzRoleDefinitions_FWD_DEFINED__
typedef interface IAzRoleDefinitions IAzRoleDefinitions;
#endif 	/* __IAzRoleDefinitions_FWD_DEFINED__ */


#ifndef __IAzRoleDefinition_FWD_DEFINED__
#define __IAzRoleDefinition_FWD_DEFINED__
typedef interface IAzRoleDefinition IAzRoleDefinition;
#endif 	/* __IAzRoleDefinition_FWD_DEFINED__ */


#ifndef __IAzRoleAssignment_FWD_DEFINED__
#define __IAzRoleAssignment_FWD_DEFINED__
typedef interface IAzRoleAssignment IAzRoleAssignment;
#endif 	/* __IAzRoleAssignment_FWD_DEFINED__ */


#ifndef __IAzRoleAssignments_FWD_DEFINED__
#define __IAzRoleAssignments_FWD_DEFINED__
typedef interface IAzRoleAssignments IAzRoleAssignments;
#endif 	/* __IAzRoleAssignments_FWD_DEFINED__ */


#ifndef __IAzPrincipalLocator_FWD_DEFINED__
#define __IAzPrincipalLocator_FWD_DEFINED__
typedef interface IAzPrincipalLocator IAzPrincipalLocator;
#endif 	/* __IAzPrincipalLocator_FWD_DEFINED__ */


#ifndef __IAzNameResolver_FWD_DEFINED__
#define __IAzNameResolver_FWD_DEFINED__
typedef interface IAzNameResolver IAzNameResolver;
#endif 	/* __IAzNameResolver_FWD_DEFINED__ */


#ifndef __IAzObjectPicker_FWD_DEFINED__
#define __IAzObjectPicker_FWD_DEFINED__
typedef interface IAzObjectPicker IAzObjectPicker;
#endif 	/* __IAzObjectPicker_FWD_DEFINED__ */


#ifndef __IAzApplicationGroup2_FWD_DEFINED__
#define __IAzApplicationGroup2_FWD_DEFINED__
typedef interface IAzApplicationGroup2 IAzApplicationGroup2;
#endif 	/* __IAzApplicationGroup2_FWD_DEFINED__ */


#ifndef __IAzTask2_FWD_DEFINED__
#define __IAzTask2_FWD_DEFINED__
typedef interface IAzTask2 IAzTask2;
#endif 	/* __IAzTask2_FWD_DEFINED__ */


#ifndef __IAzAuthorizationStore_FWD_DEFINED__
#define __IAzAuthorizationStore_FWD_DEFINED__
typedef interface IAzAuthorizationStore IAzAuthorizationStore;
#endif 	/* __IAzAuthorizationStore_FWD_DEFINED__ */


#ifndef __IAzAuthorizationStore2_FWD_DEFINED__
#define __IAzAuthorizationStore2_FWD_DEFINED__
typedef interface IAzAuthorizationStore2 IAzAuthorizationStore2;
#endif 	/* __IAzAuthorizationStore2_FWD_DEFINED__ */


#ifndef __IAzAuthorizationStore3_FWD_DEFINED__
#define __IAzAuthorizationStore3_FWD_DEFINED__
typedef interface IAzAuthorizationStore3 IAzAuthorizationStore3;
#endif 	/* __IAzAuthorizationStore3_FWD_DEFINED__ */


#ifndef __IAzApplication_FWD_DEFINED__
#define __IAzApplication_FWD_DEFINED__
typedef interface IAzApplication IAzApplication;
#endif 	/* __IAzApplication_FWD_DEFINED__ */


#ifndef __IAzApplication2_FWD_DEFINED__
#define __IAzApplication2_FWD_DEFINED__
typedef interface IAzApplication2 IAzApplication2;
#endif 	/* __IAzApplication2_FWD_DEFINED__ */


#ifndef __IAzApplication3_FWD_DEFINED__
#define __IAzApplication3_FWD_DEFINED__
typedef interface IAzApplication3 IAzApplication3;
#endif 	/* __IAzApplication3_FWD_DEFINED__ */


#ifndef __IAzApplications_FWD_DEFINED__
#define __IAzApplications_FWD_DEFINED__
typedef interface IAzApplications IAzApplications;
#endif 	/* __IAzApplications_FWD_DEFINED__ */


#ifndef __IAzOperation_FWD_DEFINED__
#define __IAzOperation_FWD_DEFINED__
typedef interface IAzOperation IAzOperation;
#endif 	/* __IAzOperation_FWD_DEFINED__ */


#ifndef __IAzOperation2_FWD_DEFINED__
#define __IAzOperation2_FWD_DEFINED__
typedef interface IAzOperation2 IAzOperation2;
#endif 	/* __IAzOperation2_FWD_DEFINED__ */


#ifndef __IAzOperations_FWD_DEFINED__
#define __IAzOperations_FWD_DEFINED__
typedef interface IAzOperations IAzOperations;
#endif 	/* __IAzOperations_FWD_DEFINED__ */


#ifndef __IAzTask_FWD_DEFINED__
#define __IAzTask_FWD_DEFINED__
typedef interface IAzTask IAzTask;
#endif 	/* __IAzTask_FWD_DEFINED__ */


#ifndef __IAzTask2_FWD_DEFINED__
#define __IAzTask2_FWD_DEFINED__
typedef interface IAzTask2 IAzTask2;
#endif 	/* __IAzTask2_FWD_DEFINED__ */


#ifndef __IAzTasks_FWD_DEFINED__
#define __IAzTasks_FWD_DEFINED__
typedef interface IAzTasks IAzTasks;
#endif 	/* __IAzTasks_FWD_DEFINED__ */


#ifndef __IAzRoleDefinition_FWD_DEFINED__
#define __IAzRoleDefinition_FWD_DEFINED__
typedef interface IAzRoleDefinition IAzRoleDefinition;
#endif 	/* __IAzRoleDefinition_FWD_DEFINED__ */


#ifndef __IAzRoleDefinitions_FWD_DEFINED__
#define __IAzRoleDefinitions_FWD_DEFINED__
typedef interface IAzRoleDefinitions IAzRoleDefinitions;
#endif 	/* __IAzRoleDefinitions_FWD_DEFINED__ */


#ifndef __IAzApplicationGroup_FWD_DEFINED__
#define __IAzApplicationGroup_FWD_DEFINED__
typedef interface IAzApplicationGroup IAzApplicationGroup;
#endif 	/* __IAzApplicationGroup_FWD_DEFINED__ */


#ifndef __IAzApplicationGroup2_FWD_DEFINED__
#define __IAzApplicationGroup2_FWD_DEFINED__
typedef interface IAzApplicationGroup2 IAzApplicationGroup2;
#endif 	/* __IAzApplicationGroup2_FWD_DEFINED__ */


#ifndef __IAzApplicationGroups_FWD_DEFINED__
#define __IAzApplicationGroups_FWD_DEFINED__
typedef interface IAzApplicationGroups IAzApplicationGroups;
#endif 	/* __IAzApplicationGroups_FWD_DEFINED__ */


#ifndef __IAzRole_FWD_DEFINED__
#define __IAzRole_FWD_DEFINED__
typedef interface IAzRole IAzRole;
#endif 	/* __IAzRole_FWD_DEFINED__ */


#ifndef __IAzRoles_FWD_DEFINED__
#define __IAzRoles_FWD_DEFINED__
typedef interface IAzRoles IAzRoles;
#endif 	/* __IAzRoles_FWD_DEFINED__ */


#ifndef __IAzRoleAssignment_FWD_DEFINED__
#define __IAzRoleAssignment_FWD_DEFINED__
typedef interface IAzRoleAssignment IAzRoleAssignment;
#endif 	/* __IAzRoleAssignment_FWD_DEFINED__ */


#ifndef __IAzRoleAssignments_FWD_DEFINED__
#define __IAzRoleAssignments_FWD_DEFINED__
typedef interface IAzRoleAssignments IAzRoleAssignments;
#endif 	/* __IAzRoleAssignments_FWD_DEFINED__ */


#ifndef __IAzScope_FWD_DEFINED__
#define __IAzScope_FWD_DEFINED__
typedef interface IAzScope IAzScope;
#endif 	/* __IAzScope_FWD_DEFINED__ */


#ifndef __IAzScope2_FWD_DEFINED__
#define __IAzScope2_FWD_DEFINED__
typedef interface IAzScope2 IAzScope2;
#endif 	/* __IAzScope2_FWD_DEFINED__ */


#ifndef __IAzScopes_FWD_DEFINED__
#define __IAzScopes_FWD_DEFINED__
typedef interface IAzScopes IAzScopes;
#endif 	/* __IAzScopes_FWD_DEFINED__ */


#ifndef __IAzClientContext_FWD_DEFINED__
#define __IAzClientContext_FWD_DEFINED__
typedef interface IAzClientContext IAzClientContext;
#endif 	/* __IAzClientContext_FWD_DEFINED__ */


#ifndef __IAzClientContext2_FWD_DEFINED__
#define __IAzClientContext2_FWD_DEFINED__
typedef interface IAzClientContext2 IAzClientContext2;
#endif 	/* __IAzClientContext2_FWD_DEFINED__ */


#ifndef __IAzClientContext3_FWD_DEFINED__
#define __IAzClientContext3_FWD_DEFINED__
typedef interface IAzClientContext3 IAzClientContext3;
#endif 	/* __IAzClientContext3_FWD_DEFINED__ */


#ifndef __IAzBizRuleContext_FWD_DEFINED__
#define __IAzBizRuleContext_FWD_DEFINED__
typedef interface IAzBizRuleContext IAzBizRuleContext;
#endif 	/* __IAzBizRuleContext_FWD_DEFINED__ */


#ifndef __IAzBizRuleParameters_FWD_DEFINED__
#define __IAzBizRuleParameters_FWD_DEFINED__
typedef interface IAzBizRuleParameters IAzBizRuleParameters;
#endif 	/* __IAzBizRuleParameters_FWD_DEFINED__ */


#ifndef __IAzBizRuleInterfaces_FWD_DEFINED__
#define __IAzBizRuleInterfaces_FWD_DEFINED__
typedef interface IAzBizRuleInterfaces IAzBizRuleInterfaces;
#endif 	/* __IAzBizRuleInterfaces_FWD_DEFINED__ */


#ifndef __IAzPrincipalLocator_FWD_DEFINED__
#define __IAzPrincipalLocator_FWD_DEFINED__
typedef interface IAzPrincipalLocator IAzPrincipalLocator;
#endif 	/* __IAzPrincipalLocator_FWD_DEFINED__ */


#ifndef __IAzNameResolver_FWD_DEFINED__
#define __IAzNameResolver_FWD_DEFINED__
typedef interface IAzNameResolver IAzNameResolver;
#endif 	/* __IAzNameResolver_FWD_DEFINED__ */


#ifndef __IAzObjectPicker_FWD_DEFINED__
#define __IAzObjectPicker_FWD_DEFINED__
typedef interface IAzObjectPicker IAzObjectPicker;
#endif 	/* __IAzObjectPicker_FWD_DEFINED__ */


#ifndef __AzAuthorizationStore_FWD_DEFINED__
#define __AzAuthorizationStore_FWD_DEFINED__

#ifdef __cplusplus
typedef class AzAuthorizationStore AzAuthorizationStore;
#else
typedef struct AzAuthorizationStore AzAuthorizationStore;
#endif /* __cplusplus */

#endif 	/* __AzAuthorizationStore_FWD_DEFINED__ */


#ifndef __AzBizRuleContext_FWD_DEFINED__
#define __AzBizRuleContext_FWD_DEFINED__

#ifdef __cplusplus
typedef class AzBizRuleContext AzBizRuleContext;
#else
typedef struct AzBizRuleContext AzBizRuleContext;
#endif /* __cplusplus */

#endif 	/* __AzBizRuleContext_FWD_DEFINED__ */


#ifndef __AzPrincipalLocator_FWD_DEFINED__
#define __AzPrincipalLocator_FWD_DEFINED__

#ifdef __cplusplus
typedef class AzPrincipalLocator AzPrincipalLocator;
#else
typedef struct AzPrincipalLocator AzPrincipalLocator;
#endif /* __cplusplus */

#endif 	/* __AzPrincipalLocator_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_azroles_0000_0000 */
/* [local] */ 

//
// IAzAuthorizationStore interface id
//
//edbd9ca9-9b82-4f6a-9e8b-98301e450f14
DEFINE_GUID(IID_IAzAuthorizationStore, 0xedbd9ca9, 0x9b82, 0x4f6a, 0x9e, 0x8b, 0x98, 0x30, 0x1e, 0x45, 0x0f, 0x14);
//
// IAzAuthorizationStore2 interface id
//
//b11e5584-d577-4273-b6c5-0973e0f8e80d
DEFINE_GUID(IID_IAzAuthorizationStore2,0xb11e5584, 0xd577, 0x4273, 0xb6, 0xc5, 0x9, 0x73, 0xe0, 0xf8, 0xe8, 0xd);
//
// IAzAuthorizationStore3 interface id
//
//abc08425-0c86-4fa0-9be3-7189956c926e
DEFINE_GUID(IID_IAzAuthorizationStore3,0xabc08425, 0x0c86, 0x4fa0, 0x9b, 0xe3, 0x71, 0x89, 0x95, 0x6c, 0x92, 0x6e);

//
// AzAuthorizationStore class id
//
//b2bcff59-a757-4b0b-a1bc-ea69981da69e
DEFINE_GUID(CLSID_AzAuthorizationStore, 0xb2bcff59, 0xa757, 0x4b0b, 0xa1, 0xbc, 0xea, 0x69, 0x98, 0x1d, 0xa6, 0x9e);

//
// IAzBizRuleContext interface id
//
//e192f17d-d59f-455e-a152-940316cd77b2
DEFINE_GUID(IID_IAzBizRuleContext, 0xe192f17d, 0xd59f, 0x455e, 0xa1, 0x52, 0x94, 0x03, 0x16, 0xcd, 0x77, 0xb2);

//
// AzBizRuleContext class id
//
//5c2dc96f-8d51-434b-b33c-379bccae77c3
DEFINE_GUID(CLSID_AzBizRuleContext, 0x5c2dc96f, 0x8d51, 0x434b, 0xb3, 0x3c, 0x37, 0x9b, 0xcc, 0xae, 0x77, 0xc3);

//
// AzPrincipalLocator class id
//
//483afb5d-70df-4e16-abdc-a1de4d015a3e
DEFINE_GUID(CLSID_AzPrincipalLocator, 0x483afb5d, 0x70df, 0x4e16, 0xab, 0xdc, 0xa1, 0xde, 0x4d, 0x01, 0x5a, 0x3e);

//
// IAzPrincipalLocator interface id
//
//e5c3507d-ad6a-4992-9c7f-74ab480b44cc
DEFINE_GUID(IID_IAzPrincipalLocator, 0xe5c3507d, 0xad6a, 0x4992, 0x9c, 0x7f, 0x74, 0xab, 0x48, 0x0b, 0x44, 0xcc);

//
// IAzNameResolver interface id
//
//504d0f15-73e2-43df-a870-a64f40714f53
DEFINE_GUID(IID_IAzNameResolver, 0x504d0f15, 0x73e2, 0x43df, 0xa8, 0x70, 0xa6, 0x4f, 0x40, 0x71, 0x4f, 0x53);

//
// IAzObjectPicker interface id
//
//63130a48-699a-42d8-bf01-c62ac3fb79f9
DEFINE_GUID(IID_IAzObjectPicker, 0x63130a48, 0x699a, 0x42d8, 0xbf, 0x01, 0xc6, 0x2a, 0xc3, 0xfb, 0x79, 0xf9);

//
// IAzApplication3 interface id
//
//181c845e-7196-4a7d-ac2e-020c0bb7a303
DEFINE_GUID(IID_IAzApplication3, 0x181c845e, 0x7196, 0x4a7d, 0xac, 0x2e, 0x02, 0x0c, 0x0b, 0xb7, 0xa3, 0x03);






























extern RPC_IF_HANDLE __MIDL_itf_azroles_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_azroles_0000_0000_v0_0_s_ifspec;

#ifndef __IAzAuthorizationStore_INTERFACE_DEFINED__
#define __IAzAuthorizationStore_INTERFACE_DEFINED__

/* interface IAzAuthorizationStore */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzAuthorizationStore;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("edbd9ca9-9b82-4f6a-9e8b-98301e450f14")
    IAzAuthorizationStore : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ __RPC__in BSTR bstrDescription) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ApplicationData( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ApplicationData( 
            /* [in] */ __RPC__in BSTR bstrApplicationData) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DomainTimeout( 
            /* [retval][out] */ __RPC__out LONG *plProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DomainTimeout( 
            /* [in] */ LONG lProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScriptEngineTimeout( 
            /* [retval][out] */ __RPC__out LONG *plProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScriptEngineTimeout( 
            /* [in] */ LONG lProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxScriptEngines( 
            /* [retval][out] */ __RPC__out LONG *plProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxScriptEngines( 
            /* [in] */ LONG lProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GenerateAudits( 
            /* [retval][out] */ __RPC__out BOOL *pbProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GenerateAudits( 
            /* [in] */ BOOL bProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Writable( 
            /* [retval][out] */ __RPC__out BOOL *pfProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProperty( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPropertyItem( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePropertyItem( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PolicyAdministrators( 
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PolicyReaders( 
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPolicyAdministrator( 
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePolicyAdministrator( 
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPolicyReader( 
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePolicyReader( 
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ LONG lFlags,
            /* [in] */ __RPC__in BSTR bstrPolicyURL,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpdateCache( 
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Delete( 
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Applications( 
            /* [retval][out] */ __RPC__deref_out_opt IAzApplications **ppAppCollection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenApplication( 
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplication **ppApplication) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateApplication( 
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplication **ppApplication) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteApplication( 
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ApplicationGroups( 
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroups **ppGroupCollection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateApplicationGroup( 
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenApplicationGroup( 
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteApplicationGroup( 
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Submit( 
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DelegatedPolicyUsers( 
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddDelegatedPolicyUser( 
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteDelegatedPolicyUser( 
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetMachine( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrTargetMachine) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ApplyStoreSacl( 
            /* [retval][out] */ __RPC__out BOOL *pbApplyStoreSacl) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ApplyStoreSacl( 
            /* [in] */ BOOL bApplyStoreSacl) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PolicyAdministratorsName( 
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PolicyReadersName( 
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPolicyAdministratorName( 
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePolicyAdministratorName( 
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPolicyReaderName( 
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePolicyReaderName( 
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DelegatedPolicyUsersName( 
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddDelegatedPolicyUserName( 
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteDelegatedPolicyUserName( 
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseApplication( 
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [in] */ LONG lFlag) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzAuthorizationStoreVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzAuthorizationStore * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzAuthorizationStore * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzAuthorizationStore * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DomainTimeout )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__out LONG *plProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DomainTimeout )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ LONG lProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScriptEngineTimeout )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__out LONG *plProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScriptEngineTimeout )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ LONG lProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxScriptEngines )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__out LONG *plProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxScriptEngines )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ LONG lProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GenerateAudits )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__out BOOL *pbProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GenerateAudits )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ BOOL bProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministrators )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReaders )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministrator )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministrator )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReader )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReader )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ LONG lFlags,
            /* [in] */ __RPC__in BSTR bstrPolicyURL,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateCache )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Delete )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Applications )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplications **ppAppCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenApplication )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplication **ppApplication);
        
        HRESULT ( STDMETHODCALLTYPE *CreateApplication )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplication **ppApplication);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteApplication )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationGroups )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroups **ppGroupCollection);
        
        HRESULT ( STDMETHODCALLTYPE *CreateApplicationGroup )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *OpenApplicationGroup )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteApplicationGroup )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DelegatedPolicyUsers )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers);
        
        HRESULT ( STDMETHODCALLTYPE *AddDelegatedPolicyUser )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteDelegatedPolicyUser )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetMachine )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrTargetMachine);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplyStoreSacl )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__out BOOL *pbApplyStoreSacl);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplyStoreSacl )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ BOOL bApplyStoreSacl);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministratorsName )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReadersName )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministratorName )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministratorName )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReaderName )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReaderName )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DelegatedPolicyUsersName )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers);
        
        HRESULT ( STDMETHODCALLTYPE *AddDelegatedPolicyUserName )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteDelegatedPolicyUserName )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *CloseApplication )( 
            __RPC__in IAzAuthorizationStore * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [in] */ LONG lFlag);
        
        END_INTERFACE
    } IAzAuthorizationStoreVtbl;

    interface IAzAuthorizationStore
    {
        CONST_VTBL struct IAzAuthorizationStoreVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzAuthorizationStore_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzAuthorizationStore_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzAuthorizationStore_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzAuthorizationStore_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzAuthorizationStore_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzAuthorizationStore_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzAuthorizationStore_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzAuthorizationStore_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzAuthorizationStore_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzAuthorizationStore_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzAuthorizationStore_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzAuthorizationStore_get_DomainTimeout(This,plProp)	\
    ( (This)->lpVtbl -> get_DomainTimeout(This,plProp) ) 

#define IAzAuthorizationStore_put_DomainTimeout(This,lProp)	\
    ( (This)->lpVtbl -> put_DomainTimeout(This,lProp) ) 

#define IAzAuthorizationStore_get_ScriptEngineTimeout(This,plProp)	\
    ( (This)->lpVtbl -> get_ScriptEngineTimeout(This,plProp) ) 

#define IAzAuthorizationStore_put_ScriptEngineTimeout(This,lProp)	\
    ( (This)->lpVtbl -> put_ScriptEngineTimeout(This,lProp) ) 

#define IAzAuthorizationStore_get_MaxScriptEngines(This,plProp)	\
    ( (This)->lpVtbl -> get_MaxScriptEngines(This,plProp) ) 

#define IAzAuthorizationStore_put_MaxScriptEngines(This,lProp)	\
    ( (This)->lpVtbl -> put_MaxScriptEngines(This,lProp) ) 

#define IAzAuthorizationStore_get_GenerateAudits(This,pbProp)	\
    ( (This)->lpVtbl -> get_GenerateAudits(This,pbProp) ) 

#define IAzAuthorizationStore_put_GenerateAudits(This,bProp)	\
    ( (This)->lpVtbl -> put_GenerateAudits(This,bProp) ) 

#define IAzAuthorizationStore_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzAuthorizationStore_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzAuthorizationStore_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzAuthorizationStore_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzAuthorizationStore_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzAuthorizationStore_get_PolicyAdministrators(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministrators(This,pvarAdmins) ) 

#define IAzAuthorizationStore_get_PolicyReaders(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReaders(This,pvarReaders) ) 

#define IAzAuthorizationStore_AddPolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzAuthorizationStore_DeletePolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzAuthorizationStore_AddPolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReader(This,bstrReader,varReserved) ) 

#define IAzAuthorizationStore_DeletePolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReader(This,bstrReader,varReserved) ) 

#define IAzAuthorizationStore_Initialize(This,lFlags,bstrPolicyURL,varReserved)	\
    ( (This)->lpVtbl -> Initialize(This,lFlags,bstrPolicyURL,varReserved) ) 

#define IAzAuthorizationStore_UpdateCache(This,varReserved)	\
    ( (This)->lpVtbl -> UpdateCache(This,varReserved) ) 

#define IAzAuthorizationStore_Delete(This,varReserved)	\
    ( (This)->lpVtbl -> Delete(This,varReserved) ) 

#define IAzAuthorizationStore_get_Applications(This,ppAppCollection)	\
    ( (This)->lpVtbl -> get_Applications(This,ppAppCollection) ) 

#define IAzAuthorizationStore_OpenApplication(This,bstrApplicationName,varReserved,ppApplication)	\
    ( (This)->lpVtbl -> OpenApplication(This,bstrApplicationName,varReserved,ppApplication) ) 

#define IAzAuthorizationStore_CreateApplication(This,bstrApplicationName,varReserved,ppApplication)	\
    ( (This)->lpVtbl -> CreateApplication(This,bstrApplicationName,varReserved,ppApplication) ) 

#define IAzAuthorizationStore_DeleteApplication(This,bstrApplicationName,varReserved)	\
    ( (This)->lpVtbl -> DeleteApplication(This,bstrApplicationName,varReserved) ) 

#define IAzAuthorizationStore_get_ApplicationGroups(This,ppGroupCollection)	\
    ( (This)->lpVtbl -> get_ApplicationGroups(This,ppGroupCollection) ) 

#define IAzAuthorizationStore_CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzAuthorizationStore_OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzAuthorizationStore_DeleteApplicationGroup(This,bstrGroupName,varReserved)	\
    ( (This)->lpVtbl -> DeleteApplicationGroup(This,bstrGroupName,varReserved) ) 

#define IAzAuthorizationStore_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 

#define IAzAuthorizationStore_get_DelegatedPolicyUsers(This,pvarDelegatedPolicyUsers)	\
    ( (This)->lpVtbl -> get_DelegatedPolicyUsers(This,pvarDelegatedPolicyUsers) ) 

#define IAzAuthorizationStore_AddDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> AddDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzAuthorizationStore_DeleteDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> DeleteDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzAuthorizationStore_get_TargetMachine(This,pbstrTargetMachine)	\
    ( (This)->lpVtbl -> get_TargetMachine(This,pbstrTargetMachine) ) 

#define IAzAuthorizationStore_get_ApplyStoreSacl(This,pbApplyStoreSacl)	\
    ( (This)->lpVtbl -> get_ApplyStoreSacl(This,pbApplyStoreSacl) ) 

#define IAzAuthorizationStore_put_ApplyStoreSacl(This,bApplyStoreSacl)	\
    ( (This)->lpVtbl -> put_ApplyStoreSacl(This,bApplyStoreSacl) ) 

#define IAzAuthorizationStore_get_PolicyAdministratorsName(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministratorsName(This,pvarAdmins) ) 

#define IAzAuthorizationStore_get_PolicyReadersName(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReadersName(This,pvarReaders) ) 

#define IAzAuthorizationStore_AddPolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzAuthorizationStore_DeletePolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzAuthorizationStore_AddPolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReaderName(This,bstrReader,varReserved) ) 

#define IAzAuthorizationStore_DeletePolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReaderName(This,bstrReader,varReserved) ) 

#define IAzAuthorizationStore_get_DelegatedPolicyUsersName(This,pvarDelegatedPolicyUsers)	\
    ( (This)->lpVtbl -> get_DelegatedPolicyUsersName(This,pvarDelegatedPolicyUsers) ) 

#define IAzAuthorizationStore_AddDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> AddDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzAuthorizationStore_DeleteDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> DeleteDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzAuthorizationStore_CloseApplication(This,bstrApplicationName,lFlag)	\
    ( (This)->lpVtbl -> CloseApplication(This,bstrApplicationName,lFlag) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzAuthorizationStore_INTERFACE_DEFINED__ */


#ifndef __IAzAuthorizationStore2_INTERFACE_DEFINED__
#define __IAzAuthorizationStore2_INTERFACE_DEFINED__

/* interface IAzAuthorizationStore2 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzAuthorizationStore2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b11e5584-d577-4273-b6c5-0973e0f8e80d")
    IAzAuthorizationStore2 : public IAzAuthorizationStore
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OpenApplication2( 
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplication2 **ppApplication) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateApplication2( 
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplication2 **ppApplication) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzAuthorizationStore2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzAuthorizationStore2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzAuthorizationStore2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzAuthorizationStore2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DomainTimeout )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__out LONG *plProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DomainTimeout )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ LONG lProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScriptEngineTimeout )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__out LONG *plProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScriptEngineTimeout )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ LONG lProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxScriptEngines )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__out LONG *plProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxScriptEngines )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ LONG lProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GenerateAudits )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__out BOOL *pbProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GenerateAudits )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ BOOL bProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministrators )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReaders )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministrator )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministrator )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReader )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReader )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ LONG lFlags,
            /* [in] */ __RPC__in BSTR bstrPolicyURL,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateCache )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Delete )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Applications )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplications **ppAppCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenApplication )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplication **ppApplication);
        
        HRESULT ( STDMETHODCALLTYPE *CreateApplication )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplication **ppApplication);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteApplication )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationGroups )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroups **ppGroupCollection);
        
        HRESULT ( STDMETHODCALLTYPE *CreateApplicationGroup )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *OpenApplicationGroup )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteApplicationGroup )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DelegatedPolicyUsers )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers);
        
        HRESULT ( STDMETHODCALLTYPE *AddDelegatedPolicyUser )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteDelegatedPolicyUser )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetMachine )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrTargetMachine);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplyStoreSacl )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__out BOOL *pbApplyStoreSacl);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplyStoreSacl )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ BOOL bApplyStoreSacl);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministratorsName )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReadersName )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministratorName )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministratorName )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReaderName )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReaderName )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DelegatedPolicyUsersName )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers);
        
        HRESULT ( STDMETHODCALLTYPE *AddDelegatedPolicyUserName )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteDelegatedPolicyUserName )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *CloseApplication )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [in] */ LONG lFlag);
        
        HRESULT ( STDMETHODCALLTYPE *OpenApplication2 )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplication2 **ppApplication);
        
        HRESULT ( STDMETHODCALLTYPE *CreateApplication2 )( 
            __RPC__in IAzAuthorizationStore2 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplication2 **ppApplication);
        
        END_INTERFACE
    } IAzAuthorizationStore2Vtbl;

    interface IAzAuthorizationStore2
    {
        CONST_VTBL struct IAzAuthorizationStore2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzAuthorizationStore2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzAuthorizationStore2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzAuthorizationStore2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzAuthorizationStore2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzAuthorizationStore2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzAuthorizationStore2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzAuthorizationStore2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzAuthorizationStore2_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzAuthorizationStore2_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzAuthorizationStore2_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzAuthorizationStore2_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzAuthorizationStore2_get_DomainTimeout(This,plProp)	\
    ( (This)->lpVtbl -> get_DomainTimeout(This,plProp) ) 

#define IAzAuthorizationStore2_put_DomainTimeout(This,lProp)	\
    ( (This)->lpVtbl -> put_DomainTimeout(This,lProp) ) 

#define IAzAuthorizationStore2_get_ScriptEngineTimeout(This,plProp)	\
    ( (This)->lpVtbl -> get_ScriptEngineTimeout(This,plProp) ) 

#define IAzAuthorizationStore2_put_ScriptEngineTimeout(This,lProp)	\
    ( (This)->lpVtbl -> put_ScriptEngineTimeout(This,lProp) ) 

#define IAzAuthorizationStore2_get_MaxScriptEngines(This,plProp)	\
    ( (This)->lpVtbl -> get_MaxScriptEngines(This,plProp) ) 

#define IAzAuthorizationStore2_put_MaxScriptEngines(This,lProp)	\
    ( (This)->lpVtbl -> put_MaxScriptEngines(This,lProp) ) 

#define IAzAuthorizationStore2_get_GenerateAudits(This,pbProp)	\
    ( (This)->lpVtbl -> get_GenerateAudits(This,pbProp) ) 

#define IAzAuthorizationStore2_put_GenerateAudits(This,bProp)	\
    ( (This)->lpVtbl -> put_GenerateAudits(This,bProp) ) 

#define IAzAuthorizationStore2_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzAuthorizationStore2_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzAuthorizationStore2_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzAuthorizationStore2_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzAuthorizationStore2_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzAuthorizationStore2_get_PolicyAdministrators(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministrators(This,pvarAdmins) ) 

#define IAzAuthorizationStore2_get_PolicyReaders(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReaders(This,pvarReaders) ) 

#define IAzAuthorizationStore2_AddPolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzAuthorizationStore2_DeletePolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzAuthorizationStore2_AddPolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReader(This,bstrReader,varReserved) ) 

#define IAzAuthorizationStore2_DeletePolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReader(This,bstrReader,varReserved) ) 

#define IAzAuthorizationStore2_Initialize(This,lFlags,bstrPolicyURL,varReserved)	\
    ( (This)->lpVtbl -> Initialize(This,lFlags,bstrPolicyURL,varReserved) ) 

#define IAzAuthorizationStore2_UpdateCache(This,varReserved)	\
    ( (This)->lpVtbl -> UpdateCache(This,varReserved) ) 

#define IAzAuthorizationStore2_Delete(This,varReserved)	\
    ( (This)->lpVtbl -> Delete(This,varReserved) ) 

#define IAzAuthorizationStore2_get_Applications(This,ppAppCollection)	\
    ( (This)->lpVtbl -> get_Applications(This,ppAppCollection) ) 

#define IAzAuthorizationStore2_OpenApplication(This,bstrApplicationName,varReserved,ppApplication)	\
    ( (This)->lpVtbl -> OpenApplication(This,bstrApplicationName,varReserved,ppApplication) ) 

#define IAzAuthorizationStore2_CreateApplication(This,bstrApplicationName,varReserved,ppApplication)	\
    ( (This)->lpVtbl -> CreateApplication(This,bstrApplicationName,varReserved,ppApplication) ) 

#define IAzAuthorizationStore2_DeleteApplication(This,bstrApplicationName,varReserved)	\
    ( (This)->lpVtbl -> DeleteApplication(This,bstrApplicationName,varReserved) ) 

#define IAzAuthorizationStore2_get_ApplicationGroups(This,ppGroupCollection)	\
    ( (This)->lpVtbl -> get_ApplicationGroups(This,ppGroupCollection) ) 

#define IAzAuthorizationStore2_CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzAuthorizationStore2_OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzAuthorizationStore2_DeleteApplicationGroup(This,bstrGroupName,varReserved)	\
    ( (This)->lpVtbl -> DeleteApplicationGroup(This,bstrGroupName,varReserved) ) 

#define IAzAuthorizationStore2_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 

#define IAzAuthorizationStore2_get_DelegatedPolicyUsers(This,pvarDelegatedPolicyUsers)	\
    ( (This)->lpVtbl -> get_DelegatedPolicyUsers(This,pvarDelegatedPolicyUsers) ) 

#define IAzAuthorizationStore2_AddDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> AddDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzAuthorizationStore2_DeleteDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> DeleteDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzAuthorizationStore2_get_TargetMachine(This,pbstrTargetMachine)	\
    ( (This)->lpVtbl -> get_TargetMachine(This,pbstrTargetMachine) ) 

#define IAzAuthorizationStore2_get_ApplyStoreSacl(This,pbApplyStoreSacl)	\
    ( (This)->lpVtbl -> get_ApplyStoreSacl(This,pbApplyStoreSacl) ) 

#define IAzAuthorizationStore2_put_ApplyStoreSacl(This,bApplyStoreSacl)	\
    ( (This)->lpVtbl -> put_ApplyStoreSacl(This,bApplyStoreSacl) ) 

#define IAzAuthorizationStore2_get_PolicyAdministratorsName(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministratorsName(This,pvarAdmins) ) 

#define IAzAuthorizationStore2_get_PolicyReadersName(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReadersName(This,pvarReaders) ) 

#define IAzAuthorizationStore2_AddPolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzAuthorizationStore2_DeletePolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzAuthorizationStore2_AddPolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReaderName(This,bstrReader,varReserved) ) 

#define IAzAuthorizationStore2_DeletePolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReaderName(This,bstrReader,varReserved) ) 

#define IAzAuthorizationStore2_get_DelegatedPolicyUsersName(This,pvarDelegatedPolicyUsers)	\
    ( (This)->lpVtbl -> get_DelegatedPolicyUsersName(This,pvarDelegatedPolicyUsers) ) 

#define IAzAuthorizationStore2_AddDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> AddDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzAuthorizationStore2_DeleteDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> DeleteDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzAuthorizationStore2_CloseApplication(This,bstrApplicationName,lFlag)	\
    ( (This)->lpVtbl -> CloseApplication(This,bstrApplicationName,lFlag) ) 


#define IAzAuthorizationStore2_OpenApplication2(This,bstrApplicationName,varReserved,ppApplication)	\
    ( (This)->lpVtbl -> OpenApplication2(This,bstrApplicationName,varReserved,ppApplication) ) 

#define IAzAuthorizationStore2_CreateApplication2(This,bstrApplicationName,varReserved,ppApplication)	\
    ( (This)->lpVtbl -> CreateApplication2(This,bstrApplicationName,varReserved,ppApplication) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzAuthorizationStore2_INTERFACE_DEFINED__ */


#ifndef __IAzAuthorizationStore3_INTERFACE_DEFINED__
#define __IAzAuthorizationStore3_INTERFACE_DEFINED__

/* interface IAzAuthorizationStore3 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzAuthorizationStore3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("abc08425-0c86-4fa0-9be3-7189956c926e")
    IAzAuthorizationStore3 : public IAzAuthorizationStore2
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE IsUpdateNeeded( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbIsUpdateNeeded) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BizruleGroupSupported( 
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbSupported) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UpgradeStoresFunctionalLevel( 
            /* [in] */ LONG lFunctionalLevel) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsFunctionalLevelUpgradeSupported( 
            /* [in] */ LONG lFunctionalLevel,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbSupported) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSchemaVersion( 
            /* [out] */ __RPC__out LONG *plMajorVersion,
            /* [out] */ __RPC__out LONG *plMinorVersion) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzAuthorizationStore3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzAuthorizationStore3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzAuthorizationStore3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzAuthorizationStore3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DomainTimeout )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__out LONG *plProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DomainTimeout )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ LONG lProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScriptEngineTimeout )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__out LONG *plProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScriptEngineTimeout )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ LONG lProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxScriptEngines )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__out LONG *plProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxScriptEngines )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ LONG lProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GenerateAudits )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__out BOOL *pbProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GenerateAudits )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ BOOL bProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministrators )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReaders )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministrator )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministrator )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReader )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReader )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ LONG lFlags,
            /* [in] */ __RPC__in BSTR bstrPolicyURL,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateCache )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Delete )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Applications )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplications **ppAppCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenApplication )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplication **ppApplication);
        
        HRESULT ( STDMETHODCALLTYPE *CreateApplication )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplication **ppApplication);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteApplication )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationGroups )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroups **ppGroupCollection);
        
        HRESULT ( STDMETHODCALLTYPE *CreateApplicationGroup )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *OpenApplicationGroup )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteApplicationGroup )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DelegatedPolicyUsers )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers);
        
        HRESULT ( STDMETHODCALLTYPE *AddDelegatedPolicyUser )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteDelegatedPolicyUser )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetMachine )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrTargetMachine);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplyStoreSacl )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__out BOOL *pbApplyStoreSacl);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplyStoreSacl )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ BOOL bApplyStoreSacl);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministratorsName )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReadersName )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministratorName )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministratorName )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReaderName )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReaderName )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DelegatedPolicyUsersName )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers);
        
        HRESULT ( STDMETHODCALLTYPE *AddDelegatedPolicyUserName )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteDelegatedPolicyUserName )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *CloseApplication )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [in] */ LONG lFlag);
        
        HRESULT ( STDMETHODCALLTYPE *OpenApplication2 )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplication2 **ppApplication);
        
        HRESULT ( STDMETHODCALLTYPE *CreateApplication2 )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ __RPC__in BSTR bstrApplicationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplication2 **ppApplication);
        
        HRESULT ( STDMETHODCALLTYPE *IsUpdateNeeded )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbIsUpdateNeeded);
        
        HRESULT ( STDMETHODCALLTYPE *BizruleGroupSupported )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbSupported);
        
        HRESULT ( STDMETHODCALLTYPE *UpgradeStoresFunctionalLevel )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ LONG lFunctionalLevel);
        
        HRESULT ( STDMETHODCALLTYPE *IsFunctionalLevelUpgradeSupported )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [in] */ LONG lFunctionalLevel,
            /* [retval][out] */ __RPC__out VARIANT_BOOL *pbSupported);
        
        HRESULT ( STDMETHODCALLTYPE *GetSchemaVersion )( 
            __RPC__in IAzAuthorizationStore3 * This,
            /* [out] */ __RPC__out LONG *plMajorVersion,
            /* [out] */ __RPC__out LONG *plMinorVersion);
        
        END_INTERFACE
    } IAzAuthorizationStore3Vtbl;

    interface IAzAuthorizationStore3
    {
        CONST_VTBL struct IAzAuthorizationStore3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAzAuthorizationStore3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAzAuthorizationStore3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAzAuthorizationStore3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAzAuthorizationStore3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAzAuthorizationStore3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAzAuthorizationStore3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAzAuthorizationStore3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAzAuthorizationStore3_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IAzAuthorizationStore3_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#define IAzAuthorizationStore3_get_ApplicationData(This,pbstrApplicationData)	\
    ( (This)->lpVtbl -> get_ApplicationData(This,pbstrApplicationData) ) 

#define IAzAuthorizationStore3_put_ApplicationData(This,bstrApplicationData)	\
    ( (This)->lpVtbl -> put_ApplicationData(This,bstrApplicationData) ) 

#define IAzAuthorizationStore3_get_DomainTimeout(This,plProp)	\
    ( (This)->lpVtbl -> get_DomainTimeout(This,plProp) ) 

#define IAzAuthorizationStore3_put_DomainTimeout(This,lProp)	\
    ( (This)->lpVtbl -> put_DomainTimeout(This,lProp) ) 

#define IAzAuthorizationStore3_get_ScriptEngineTimeout(This,plProp)	\
    ( (This)->lpVtbl -> get_ScriptEngineTimeout(This,plProp) ) 

#define IAzAuthorizationStore3_put_ScriptEngineTimeout(This,lProp)	\
    ( (This)->lpVtbl -> put_ScriptEngineTimeout(This,lProp) ) 

#define IAzAuthorizationStore3_get_MaxScriptEngines(This,plProp)	\
    ( (This)->lpVtbl -> get_MaxScriptEngines(This,plProp) ) 

#define IAzAuthorizationStore3_put_MaxScriptEngines(This,lProp)	\
    ( (This)->lpVtbl -> put_MaxScriptEngines(This,lProp) ) 

#define IAzAuthorizationStore3_get_GenerateAudits(This,pbProp)	\
    ( (This)->lpVtbl -> get_GenerateAudits(This,pbProp) ) 

#define IAzAuthorizationStore3_put_GenerateAudits(This,bProp)	\
    ( (This)->lpVtbl -> put_GenerateAudits(This,bProp) ) 

#define IAzAuthorizationStore3_get_Writable(This,pfProp)	\
    ( (This)->lpVtbl -> get_Writable(This,pfProp) ) 

#define IAzAuthorizationStore3_GetProperty(This,lPropId,varReserved,pvarProp)	\
    ( (This)->lpVtbl -> GetProperty(This,lPropId,varReserved,pvarProp) ) 

#define IAzAuthorizationStore3_SetProperty(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> SetProperty(This,lPropId,varProp,varReserved) ) 

#define IAzAuthorizationStore3_AddPropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> AddPropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzAuthorizationStore3_DeletePropertyItem(This,lPropId,varProp,varReserved)	\
    ( (This)->lpVtbl -> DeletePropertyItem(This,lPropId,varProp,varReserved) ) 

#define IAzAuthorizationStore3_get_PolicyAdministrators(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministrators(This,pvarAdmins) ) 

#define IAzAuthorizationStore3_get_PolicyReaders(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReaders(This,pvarReaders) ) 

#define IAzAuthorizationStore3_AddPolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzAuthorizationStore3_DeletePolicyAdministrator(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministrator(This,bstrAdmin,varReserved) ) 

#define IAzAuthorizationStore3_AddPolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReader(This,bstrReader,varReserved) ) 

#define IAzAuthorizationStore3_DeletePolicyReader(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReader(This,bstrReader,varReserved) ) 

#define IAzAuthorizationStore3_Initialize(This,lFlags,bstrPolicyURL,varReserved)	\
    ( (This)->lpVtbl -> Initialize(This,lFlags,bstrPolicyURL,varReserved) ) 

#define IAzAuthorizationStore3_UpdateCache(This,varReserved)	\
    ( (This)->lpVtbl -> UpdateCache(This,varReserved) ) 

#define IAzAuthorizationStore3_Delete(This,varReserved)	\
    ( (This)->lpVtbl -> Delete(This,varReserved) ) 

#define IAzAuthorizationStore3_get_Applications(This,ppAppCollection)	\
    ( (This)->lpVtbl -> get_Applications(This,ppAppCollection) ) 

#define IAzAuthorizationStore3_OpenApplication(This,bstrApplicationName,varReserved,ppApplication)	\
    ( (This)->lpVtbl -> OpenApplication(This,bstrApplicationName,varReserved,ppApplication) ) 

#define IAzAuthorizationStore3_CreateApplication(This,bstrApplicationName,varReserved,ppApplication)	\
    ( (This)->lpVtbl -> CreateApplication(This,bstrApplicationName,varReserved,ppApplication) ) 

#define IAzAuthorizationStore3_DeleteApplication(This,bstrApplicationName,varReserved)	\
    ( (This)->lpVtbl -> DeleteApplication(This,bstrApplicationName,varReserved) ) 

#define IAzAuthorizationStore3_get_ApplicationGroups(This,ppGroupCollection)	\
    ( (This)->lpVtbl -> get_ApplicationGroups(This,ppGroupCollection) ) 

#define IAzAuthorizationStore3_CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> CreateApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzAuthorizationStore3_OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup)	\
    ( (This)->lpVtbl -> OpenApplicationGroup(This,bstrGroupName,varReserved,ppGroup) ) 

#define IAzAuthorizationStore3_DeleteApplicationGroup(This,bstrGroupName,varReserved)	\
    ( (This)->lpVtbl -> DeleteApplicationGroup(This,bstrGroupName,varReserved) ) 

#define IAzAuthorizationStore3_Submit(This,lFlags,varReserved)	\
    ( (This)->lpVtbl -> Submit(This,lFlags,varReserved) ) 

#define IAzAuthorizationStore3_get_DelegatedPolicyUsers(This,pvarDelegatedPolicyUsers)	\
    ( (This)->lpVtbl -> get_DelegatedPolicyUsers(This,pvarDelegatedPolicyUsers) ) 

#define IAzAuthorizationStore3_AddDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> AddDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzAuthorizationStore3_DeleteDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> DeleteDelegatedPolicyUser(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzAuthorizationStore3_get_TargetMachine(This,pbstrTargetMachine)	\
    ( (This)->lpVtbl -> get_TargetMachine(This,pbstrTargetMachine) ) 

#define IAzAuthorizationStore3_get_ApplyStoreSacl(This,pbApplyStoreSacl)	\
    ( (This)->lpVtbl -> get_ApplyStoreSacl(This,pbApplyStoreSacl) ) 

#define IAzAuthorizationStore3_put_ApplyStoreSacl(This,bApplyStoreSacl)	\
    ( (This)->lpVtbl -> put_ApplyStoreSacl(This,bApplyStoreSacl) ) 

#define IAzAuthorizationStore3_get_PolicyAdministratorsName(This,pvarAdmins)	\
    ( (This)->lpVtbl -> get_PolicyAdministratorsName(This,pvarAdmins) ) 

#define IAzAuthorizationStore3_get_PolicyReadersName(This,pvarReaders)	\
    ( (This)->lpVtbl -> get_PolicyReadersName(This,pvarReaders) ) 

#define IAzAuthorizationStore3_AddPolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzAuthorizationStore3_DeletePolicyAdministratorName(This,bstrAdmin,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyAdministratorName(This,bstrAdmin,varReserved) ) 

#define IAzAuthorizationStore3_AddPolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> AddPolicyReaderName(This,bstrReader,varReserved) ) 

#define IAzAuthorizationStore3_DeletePolicyReaderName(This,bstrReader,varReserved)	\
    ( (This)->lpVtbl -> DeletePolicyReaderName(This,bstrReader,varReserved) ) 

#define IAzAuthorizationStore3_get_DelegatedPolicyUsersName(This,pvarDelegatedPolicyUsers)	\
    ( (This)->lpVtbl -> get_DelegatedPolicyUsersName(This,pvarDelegatedPolicyUsers) ) 

#define IAzAuthorizationStore3_AddDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> AddDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzAuthorizationStore3_DeleteDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved)	\
    ( (This)->lpVtbl -> DeleteDelegatedPolicyUserName(This,bstrDelegatedPolicyUser,varReserved) ) 

#define IAzAuthorizationStore3_CloseApplication(This,bstrApplicationName,lFlag)	\
    ( (This)->lpVtbl -> CloseApplication(This,bstrApplicationName,lFlag) ) 


#define IAzAuthorizationStore3_OpenApplication2(This,bstrApplicationName,varReserved,ppApplication)	\
    ( (This)->lpVtbl -> OpenApplication2(This,bstrApplicationName,varReserved,ppApplication) ) 

#define IAzAuthorizationStore3_CreateApplication2(This,bstrApplicationName,varReserved,ppApplication)	\
    ( (This)->lpVtbl -> CreateApplication2(This,bstrApplicationName,varReserved,ppApplication) ) 


#define IAzAuthorizationStore3_IsUpdateNeeded(This,pbIsUpdateNeeded)	\
    ( (This)->lpVtbl -> IsUpdateNeeded(This,pbIsUpdateNeeded) ) 

#define IAzAuthorizationStore3_BizruleGroupSupported(This,pbSupported)	\
    ( (This)->lpVtbl -> BizruleGroupSupported(This,pbSupported) ) 

#define IAzAuthorizationStore3_UpgradeStoresFunctionalLevel(This,lFunctionalLevel)	\
    ( (This)->lpVtbl -> UpgradeStoresFunctionalLevel(This,lFunctionalLevel) ) 

#define IAzAuthorizationStore3_IsFunctionalLevelUpgradeSupported(This,lFunctionalLevel,pbSupported)	\
    ( (This)->lpVtbl -> IsFunctionalLevelUpgradeSupported(This,lFunctionalLevel,pbSupported) ) 

#define IAzAuthorizationStore3_GetSchemaVersion(This,plMajorVersion,plMinorVersion)	\
    ( (This)->lpVtbl -> GetSchemaVersion(This,plMajorVersion,plMinorVersion) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAzAuthorizationStore3_INTERFACE_DEFINED__ */


#ifndef __IAzApplication_INTERFACE_DEFINED__
#define __IAzApplication_INTERFACE_DEFINED__

/* interface IAzApplication */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IAzApplication;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("987bc7c7-b813-4d27-bede-6ba5ae867e95")
    IAzApplication : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ __RPC__in BSTR bstrName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ __RPC__in BSTR bstrDescription) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ApplicationData( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ApplicationData( 
            /* [in] */ __RPC__in BSTR bstrApplicationData) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AuthzInterfaceClsid( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AuthzInterfaceClsid( 
            /* [in] */ __RPC__in BSTR bstrProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Version( 
            /* [in] */ __RPC__in BSTR bstrProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GenerateAudits( 
            /* [retval][out] */ __RPC__out BOOL *pbProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GenerateAudits( 
            /* [in] */ BOOL bProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ApplyStoreSacl( 
            /* [retval][out] */ __RPC__out BOOL *pbProp) = 0;
        
        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ApplyStoreSacl( 
            /* [in] */ BOOL bProp) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Writable( 
            /* [retval][out] */ __RPC__out BOOL *pfProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetProperty( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PolicyAdministrators( 
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PolicyReaders( 
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPolicyAdministrator( 
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePolicyAdministrator( 
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPolicyReader( 
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePolicyReader( 
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Scopes( 
            /* [retval][out] */ __RPC__deref_out_opt IAzScopes **ppScopeCollection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenScope( 
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzScope **ppScope) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateScope( 
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzScope **ppScope) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteScope( 
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Operations( 
            /* [retval][out] */ __RPC__deref_out_opt IAzOperations **ppOperationCollection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenOperation( 
            /* [in] */ __RPC__in BSTR bstrOperationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzOperation **ppOperation) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateOperation( 
            /* [in] */ __RPC__in BSTR bstrOperationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzOperation **ppOperation) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteOperation( 
            /* [in] */ __RPC__in BSTR bstrOperationName,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Tasks( 
            /* [retval][out] */ __RPC__deref_out_opt IAzTasks **ppTaskCollection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenTask( 
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzTask **ppTask) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateTask( 
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzTask **ppTask) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteTask( 
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ApplicationGroups( 
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroups **ppGroupCollection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenApplicationGroup( 
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateApplicationGroup( 
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteApplicationGroup( 
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Roles( 
            /* [retval][out] */ __RPC__deref_out_opt IAzRoles **ppRoleCollection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenRole( 
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzRole **ppRole) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateRole( 
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzRole **ppRole) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteRole( 
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InitializeClientContextFromToken( 
            /* [in] */ ULONGLONG ullTokenHandle,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext **ppClientContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPropertyItem( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePropertyItem( 
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Submit( 
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InitializeClientContextFromName( 
            /* [in] */ __RPC__in BSTR ClientName,
            /* [defaultvalue][in] */ __RPC__in BSTR DomainName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext **ppClientContext) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DelegatedPolicyUsers( 
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddDelegatedPolicyUser( 
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteDelegatedPolicyUser( 
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InitializeClientContextFromStringSid( 
            /* [in] */ __RPC__in BSTR SidString,
            /* [in] */ LONG lOptions,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext **ppClientContext) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PolicyAdministratorsName( 
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PolicyReadersName( 
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPolicyAdministratorName( 
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePolicyAdministratorName( 
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddPolicyReaderName( 
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeletePolicyReaderName( 
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DelegatedPolicyUsersName( 
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddDelegatedPolicyUserName( 
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DeleteDelegatedPolicyUserName( 
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IAzApplicationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in IAzApplication * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in IAzApplication * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            __RPC__in IAzApplication * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            __RPC__in IAzApplication * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ __RPC__in_range(0,16384) UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAzApplication * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrName);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrDescription);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrDescription);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationData )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrApplicationData);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplicationData )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrApplicationData);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AuthzInterfaceClsid )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AuthzInterfaceClsid )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__deref_out_opt BSTR *pbstrProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Version )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GenerateAudits )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__out BOOL *pbProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GenerateAudits )( 
            __RPC__in IAzApplication * This,
            /* [in] */ BOOL bProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplyStoreSacl )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__out BOOL *pbProp);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ApplyStoreSacl )( 
            __RPC__in IAzApplication * This,
            /* [in] */ BOOL bProp);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Writable )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__out BOOL *pfProp);
        
        HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            __RPC__in IAzApplication * This,
            /* [in] */ LONG lPropId,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__out VARIANT *pvarProp);
        
        HRESULT ( STDMETHODCALLTYPE *SetProperty )( 
            __RPC__in IAzApplication * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyAdministrators )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarAdmins);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PolicyReaders )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarReaders);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyAdministrator )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyAdministrator )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrAdmin,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *AddPolicyReader )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePolicyReader )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrReader,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Scopes )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzScopes **ppScopeCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenScope )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzScope **ppScope);
        
        HRESULT ( STDMETHODCALLTYPE *CreateScope )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzScope **ppScope);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteScope )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrScopeName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Operations )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzOperations **ppOperationCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenOperation )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrOperationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzOperation **ppOperation);
        
        HRESULT ( STDMETHODCALLTYPE *CreateOperation )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrOperationName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzOperation **ppOperation);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteOperation )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrOperationName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Tasks )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzTasks **ppTaskCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenTask )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzTask **ppTask);
        
        HRESULT ( STDMETHODCALLTYPE *CreateTask )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzTask **ppTask);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteTask )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrTaskName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApplicationGroups )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroups **ppGroupCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenApplicationGroup )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *CreateApplicationGroup )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzApplicationGroup **ppGroup);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteApplicationGroup )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrGroupName,
            /* [optional][in] */ VARIANT varReserved);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Roles )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__deref_out_opt IAzRoles **ppRoleCollection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenRole )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzRole **ppRole);
        
        HRESULT ( STDMETHODCALLTYPE *CreateRole )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzRole **ppRole);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteRole )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrRoleName,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeClientContextFromToken )( 
            __RPC__in IAzApplication * This,
            /* [in] */ ULONGLONG ullTokenHandle,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext **ppClientContext);
        
        HRESULT ( STDMETHODCALLTYPE *AddPropertyItem )( 
            __RPC__in IAzApplication * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeletePropertyItem )( 
            __RPC__in IAzApplication * This,
            /* [in] */ LONG lPropId,
            /* [in] */ VARIANT varProp,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *Submit )( 
            __RPC__in IAzApplication * This,
            /* [defaultvalue][in] */ LONG lFlags,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeClientContextFromName )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR ClientName,
            /* [defaultvalue][in] */ __RPC__in BSTR DomainName,
            /* [optional][in] */ VARIANT varReserved,
            /* [retval][out] */ __RPC__deref_out_opt IAzClientContext **ppClientContext);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DelegatedPolicyUsers )( 
            __RPC__in IAzApplication * This,
            /* [retval][out] */ __RPC__out VARIANT *pvarDelegatedPolicyUsers);
        
        HRESULT ( STDMETHODCALLTYPE *AddDelegatedPolicyUser )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *DeleteDelegatedPolicyUser )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR bstrDelegatedPolicyUser,
            /* [optional][in] */ VARIANT varReserved);
        
        HRESULT ( STDMETHODCALLTYPE *InitializeClientContextFromStringSid )( 
            __RPC__in IAzApplication * This,
            /* [in] */ __RPC__in BSTR SidString,
            /* [in] */ LONG lOptions,
            /* [optional][in] */ VARIANT v